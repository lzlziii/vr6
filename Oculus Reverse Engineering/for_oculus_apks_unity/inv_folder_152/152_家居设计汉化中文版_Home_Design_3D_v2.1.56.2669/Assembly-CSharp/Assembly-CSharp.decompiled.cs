using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.IO.Compression;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using System.Xml;
using System.Xml.Linq;
using AOT;
using ArchitectRoom;
using ArchitectRoom.ToolDraw;
using ClipperLib;
using CustomData;
using DG.Tweening;
using Doozy.Engine.Attributes;
using Doozy.Engine.Events;
using Doozy.Engine.Layouts;
using Doozy.Engine.Nody.Attributes;
using Doozy.Engine.Nody.Connections;
using Doozy.Engine.Nody.Models;
using Doozy.Engine.Nody.Nodes;
using Doozy.Engine.Orientation;
using Doozy.Engine.Progress;
using Doozy.Engine.SceneManagement;
using Doozy.Engine.Settings;
using Doozy.Engine.Soundy;
using Doozy.Engine.Touchy;
using Doozy.Engine.UI.Animation;
using Doozy.Engine.UI.Base;
using Doozy.Engine.UI.Input;
using Doozy.Engine.UI.Internal;
using Doozy.Engine.Utils;
using Doozy.Engine.Utils.ColorModels;
using ExitGames.Client.Photon;
using Home;
using Il2CppDummyDll;
using JsonConverter;
using Koalabs.HD3DVR.Graphics;
using Koalabs.HD3DVR.MultiVisit;
using Koalabs.Shared;
using Koalabs.Shared.Haptics.Abstracts;
using Koalabs.Shared.Haptics.Interfaces;
using Koalabs.Shared.Utility;
using Koalabs.Test;
using Locomotion;
using Locomotion.Movement;
using Locomotion.Turn;
using Newtonsoft.Json;
using Oculus.Avatar2;
using Oculus.Platform;
using Oculus.Platform.Models;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.Unity;
using StairProGen;
using TMPro;
using TabCustom;
using Tooltip;
using Unity.IL2CPP.CompilerServices;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;
using VRUiKits.Utils;
using cakeslice;

[assembly: AssemblyVersion("1.0.0.0")]
[Token(Token = "0x2000002")]
public class ApplyProceduralTextureProperties : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(5f)]
	public Material m_Material;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(5f)]
	public ProceduralTexture2D proceduralTexAssetAlbedo;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProceduralTexture2D proceduralTexAssetNormal;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProceduralTexture2D proceduralTexAssetMask;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xE48AEC", Offset = "0xE48AEC", VA = "0xE48AEC")]
	public void SyncMatWithProceduralTextureAsset()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xE49188", Offset = "0xE49188", VA = "0xE49188")]
	public ApplyProceduralTextureProperties()
	{
	}
}
[Serializable]
[Token(Token = "0x2000003")]
[CreateAssetMenu(fileName = "New Procedural Texture 2D", menuName = "", order = 1)]
public class ProceduralTexture2D : ScriptableObject
{
	[Token(Token = "0x2000004")]
	public enum TextureType
	{
		[Token(Token = "0x400001C")]
		Color,
		[Token(Token = "0x400001D")]
		Normal,
		[Token(Token = "0x400001E")]
		Other
	}

	[Token(Token = "0x2000005")]
	public enum CompressionLevel
	{
		[Token(Token = "0x4000020")]
		None = -1,
		[Token(Token = "0x4000021")]
		LowQuality = 0,
		[Token(Token = "0x4000022")]
		NormalQuality = 50,
		[Token(Token = "0x4000023")]
		HighQuality = 100
	}

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D input;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextureType type;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool includeAlpha;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool generateMipMaps;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FilterMode filterMode;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int anisoLevel;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CompressionLevel compressionQuality;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D Tinput;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D invT;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 colorSpaceOrigin;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 colorSpaceVector1;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 colorSpaceVector2;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 colorSpaceVector3;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector4 compressionScalers;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public long memoryUsageBytes;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture2D currentInput;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextureType currentType;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool currentIncludeAlpha;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool currentGenerateMipMaps;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FilterMode currentFilterMode;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int currentAnisoLevel;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CompressionLevel currentCompressionQuality;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xE49190", Offset = "0xE49190", VA = "0xE49190")]
	public ProceduralTexture2D()
	{
	}
}
[Token(Token = "0x2000006")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xE4927C", Offset = "0xE4927C", VA = "0xE4927C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xE493BC", Offset = "0xE493BC", VA = "0xE493BC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xE496EC", Offset = "0xE496EC", VA = "0xE496EC")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xE49884", Offset = "0xE49884", VA = "0xE49884", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xE49AF8", Offset = "0xE49AF8", VA = "0xE49AF8")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000007")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xE49B78", Offset = "0xE49B78", VA = "0xE49B78")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xE49BF4", Offset = "0xE49BF4", VA = "0xE49BF4")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xE49D64", Offset = "0xE49D64", VA = "0xE49D64")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000008")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000001")]
	public bool IsVisible
	{
		[Token(Token = "0x600000C")]
		[Address(RVA = "0xE49D6C", Offset = "0xE49D6C", VA = "0xE49D6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600000D")]
		[Address(RVA = "0xE49D74", Offset = "0xE49D74", VA = "0xE49D74")]
		set
		{
		}
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xE49E98", Offset = "0xE49E98", VA = "0xE49E98")]
	private void Start()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xE4A088", Offset = "0xE4A088", VA = "0xE4A088")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xE4A090", Offset = "0xE4A090", VA = "0xE4A090")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000009")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200000A")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000017")]
		[Address(RVA = "0xE4AEC0", Offset = "0xE4AEC0", VA = "0xE4AEC0")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200000B")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMax;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMin;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float LatencyWeight;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 10f)]
		public int MaxSamples;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000018")]
		[Address(RVA = "0xE4AEC8", Offset = "0xE4AEC8", VA = "0xE4AEC8")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0xE4B5D4", Offset = "0xE4B5D4", VA = "0xE4B5D4")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xE4A0A4", Offset = "0xE4A0A4", VA = "0xE4A0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xE4A1FC", Offset = "0xE4A1FC", VA = "0xE4A1FC")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xE4A818", Offset = "0xE4A818", VA = "0xE4A818")]
	private void Update()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xE4A76C", Offset = "0xE4A76C", VA = "0xE4A76C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xE4ABAC", Offset = "0xE4ABAC", VA = "0xE4ABAC")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xE4B514", Offset = "0xE4B514", VA = "0xE4B514")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200000C")]
public class P2PManager
{
	[Token(Token = "0x200000D")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400003B")]
		Update = 1
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xE4B674", Offset = "0xE4B674", VA = "0xE4B674")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xE4B740", Offset = "0xE4B740", VA = "0xE4B740")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xE4B980", Offset = "0xE4B980", VA = "0xE4B980")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xE4BAC8", Offset = "0xE4BAC8", VA = "0xE4BAC8")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xE4BC18", Offset = "0xE4BC18", VA = "0xE4BC18")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xE4BE04", Offset = "0xE4BE04", VA = "0xE4BE04")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xE4C1BC", Offset = "0xE4C1BC", VA = "0xE4C1BC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xE4C444", Offset = "0xE4C444", VA = "0xE4C444")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xE4BFC8", Offset = "0xE4BFC8", VA = "0xE4BFC8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xE4C390", Offset = "0xE4C390", VA = "0xE4C390")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xE4C094", Offset = "0xE4C094", VA = "0xE4C094")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xE4C668", Offset = "0xE4C668", VA = "0xE4C668")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xE4C004", Offset = "0xE4C004", VA = "0xE4C004")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xE4C3C8", Offset = "0xE4C3C8", VA = "0xE4C3C8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xE4C12C", Offset = "0xE4C12C", VA = "0xE4C12C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xE4C6E4", Offset = "0xE4C6E4", VA = "0xE4C6E4")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200000E")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xE4C760", Offset = "0xE4C760", VA = "0xE4C760", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xE4CB4C", Offset = "0xE4CB4C", VA = "0xE4CB4C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xE4CB70", Offset = "0xE4CB70", VA = "0xE4CB70", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xE4CF20", Offset = "0xE4CF20", VA = "0xE4CF20")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE4D080", Offset = "0xE4D080", VA = "0xE4D080")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE4D0FC", Offset = "0xE4D0FC", VA = "0xE4D0FC")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE4D1E8", Offset = "0xE4D1E8", VA = "0xE4D1E8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200000F")]
public class RemotePlayer
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE4D2CC", Offset = "0xE4D2CC", VA = "0xE4D2CC")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000010")]
public class RoomManager
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xE4D2D4", Offset = "0xE4D2D4", VA = "0xE4D2D4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xE4D3B8", Offset = "0xE4D3B8", VA = "0xE4D3B8")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xE4D5B8", Offset = "0xE4D5B8", VA = "0xE4D5B8")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xE4D6D0", Offset = "0xE4D6D0", VA = "0xE4D6D0")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xE4D788", Offset = "0xE4D788", VA = "0xE4D788")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xE4DB74", Offset = "0xE4DB74", VA = "0xE4DB74")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xE4D5E4", Offset = "0xE4D5E4", VA = "0xE4D5E4")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xE4DBEC", Offset = "0xE4DBEC", VA = "0xE4DBEC")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE4E368", Offset = "0xE4E368", VA = "0xE4E368")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE4E6A8", Offset = "0xE4E6A8", VA = "0xE4E6A8")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE4DF18", Offset = "0xE4DF18", VA = "0xE4DF18")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x2000011")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000012")]
	public enum State
	{
		[Token(Token = "0x4000073")]
		INITIALIZING,
		[Token(Token = "0x4000074")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000075")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000076")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000077")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000078")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000079")]
		LEAVING_A_ROOM,
		[Token(Token = "0x400007A")]
		SHUTDOWN
	}

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000002")]
	public static State CurrentState
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0xE50468", Offset = "0xE50468", VA = "0xE50468")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000003")]
	public static ulong MyID
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0xE4B808", Offset = "0xE4B808", VA = "0xE4B808")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000004")]
	public static string MyOculusID
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0xE504CC", Offset = "0xE504CC", VA = "0xE504CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE4CB88", Offset = "0xE4CB88", VA = "0xE4CB88", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE4C794", Offset = "0xE4C794", VA = "0xE4C794", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xE4F150", Offset = "0xE4F150", VA = "0xE4F150")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xE4CB6C", Offset = "0xE4CB6C", VA = "0xE4CB6C", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xE4F2D8", Offset = "0xE4F2D8", VA = "0xE4F2D8")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xE4F3D0", Offset = "0xE4F3D0", VA = "0xE4F3D0")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xE4FBB8", Offset = "0xE4FBB8", VA = "0xE4FBB8")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xE4FFD0", Offset = "0xE4FFD0", VA = "0xE4FFD0")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xE501F4", Offset = "0xE501F4", VA = "0xE501F4")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xE50400", Offset = "0xE50400", VA = "0xE50400")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xE4EFDC", Offset = "0xE4EFDC", VA = "0xE4EFDC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xE4D50C", Offset = "0xE4D50C", VA = "0xE4D50C")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xE4D874", Offset = "0xE4D874", VA = "0xE4D874")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE505D0", Offset = "0xE505D0", VA = "0xE505D0")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xE4DAB4", Offset = "0xE4DAB4", VA = "0xE4DAB4")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xE4E710", Offset = "0xE4E710", VA = "0xE4E710")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xE4EB08", Offset = "0xE4EB08", VA = "0xE4EB08")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xE4EBE8", Offset = "0xE4EBE8", VA = "0xE4EBE8")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE4B8CC", Offset = "0xE4B8CC", VA = "0xE4B8CC")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE4E894", Offset = "0xE4E894", VA = "0xE4E894")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE4E91C", Offset = "0xE4E91C", VA = "0xE4E91C")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE50754", Offset = "0xE50754", VA = "0xE50754")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE50A18", Offset = "0xE50A18", VA = "0xE50A18")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xE4EF64", Offset = "0xE4EF64", VA = "0xE4EF64")]
	[MonoPInvokeCallback(typeof(Oculus.Platform.CAPI.FilterCallback))]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xE4B9F0", Offset = "0xE4B9F0", VA = "0xE4B9F0")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xE4D244", Offset = "0xE4D244", VA = "0xE4D244")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000013")]
public class VoipManager
{
	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE4F084", Offset = "0xE4F084", VA = "0xE4F084")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE50950", Offset = "0xE50950", VA = "0xE50950")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE50390", Offset = "0xE50390", VA = "0xE50390")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE50D54", Offset = "0xE50D54", VA = "0xE50D54")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xE50EA4", Offset = "0xE50EA4", VA = "0xE50EA4")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000014")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xE51090", Offset = "0xE51090", VA = "0xE51090")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xE51114", Offset = "0xE51114", VA = "0xE51114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xE51258", Offset = "0xE51258", VA = "0xE51258")]
	private void Update()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE512AC", Offset = "0xE512AC", VA = "0xE512AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE51144", Offset = "0xE51144", VA = "0xE51144")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE5135C", Offset = "0xE5135C", VA = "0xE5135C")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE51374", Offset = "0xE51374", VA = "0xE51374")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000015")]
public class AvatarLayer
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE5137C", Offset = "0xE5137C", VA = "0xE5137C")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class PacketRecordSettings
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE51384", Offset = "0xE51384", VA = "0xE51384")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000017")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000018")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xE54C48", Offset = "0xE54C48", VA = "0xE54C48")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000019")]
	public enum HandType
	{
		[Token(Token = "0x40000DC")]
		Right,
		[Token(Token = "0x40000DD")]
		Left,
		[Token(Token = "0x40000DE")]
		Max
	}

	[Token(Token = "0x200001A")]
	public enum HandJoint
	{
		[Token(Token = "0x40000E0")]
		HandBase,
		[Token(Token = "0x40000E1")]
		IndexBase,
		[Token(Token = "0x40000E2")]
		IndexTip,
		[Token(Token = "0x40000E3")]
		ThumbBase,
		[Token(Token = "0x40000E4")]
		ThumbTip,
		[Token(Token = "0x40000E5")]
		Max
	}

	[Token(Token = "0x200001B")]
	[CompilerGenerated]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A1")]
			[Address(RVA = "0xE56ED8", Offset = "0xE56ED8", VA = "0xE56ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A3")]
			[Address(RVA = "0xE56F20", Offset = "0xE56F20", VA = "0xE56F20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xE56994", Offset = "0xE56994", VA = "0xE56994")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xE56D30", Offset = "0xE56D30", VA = "0xE56D30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xE56D34", Offset = "0xE56D34", VA = "0xE56D34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xE56EE0", Offset = "0xE56EE0", VA = "0xE56EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Avatar")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Capabilities")]
	public bool EnableBody;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Network")]
	public bool RecordPackets;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Visibility")]
	public bool StartWithControllers;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Header("Performance")]
	[Tooltip("LOD mesh complexity and texture resolution. Highest LOD recommended on PC and simple mobile apps. Medium LOD recommended on mobile devices or for background characters on PC. Lowest LOD recommended for background characters on mobile.")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Enable to use combined meshes to reduce draw calls. Currently only available on mobile devices. Will be forced to false on PC.")]
	private bool CombineMeshes;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[Tooltip("Enable to use transparent queue, disable to use geometry queue. Requires restart to take effect.")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Shaders")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Other")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[Tooltip("Enable laughter detection and animation as part of OVRLipSync.")]
	public bool EnableLaughter;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000BC")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000BE")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000BF")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000C0")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000C1")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000C2")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE51398", Offset = "0xE51398", VA = "0xE51398")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE5182C", Offset = "0xE5182C", VA = "0xE5182C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE518C4", Offset = "0xE518C4", VA = "0xE518C4")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE51920", Offset = "0xE51920", VA = "0xE51920")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE51A34", Offset = "0xE51A34", VA = "0xE51A34")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE51B10", Offset = "0xE51B10", VA = "0xE51B10")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE51BE0", Offset = "0xE51BE0", VA = "0xE51BE0")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE51DB0", Offset = "0xE51DB0", VA = "0xE51DB0")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE51E78", Offset = "0xE51E78", VA = "0xE51E78")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE51EEC", Offset = "0xE51EEC", VA = "0xE51EEC")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE51FA4", Offset = "0xE51FA4", VA = "0xE51FA4")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE5202C", Offset = "0xE5202C", VA = "0xE5202C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE520D0", Offset = "0xE520D0", VA = "0xE520D0")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE520E8", Offset = "0xE520E8", VA = "0xE520E8")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000077")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE524F4", Offset = "0xE524F4", VA = "0xE524F4")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE52820", Offset = "0xE52820", VA = "0xE52820")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE529F8", Offset = "0xE529F8", VA = "0xE529F8")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE52C34", Offset = "0xE52C34", VA = "0xE52C34")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xE52D68", Offset = "0xE52D68", VA = "0xE52D68")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE530B0", Offset = "0xE530B0", VA = "0xE530B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE533D0", Offset = "0xE533D0", VA = "0xE533D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xE53EA0", Offset = "0xE53EA0", VA = "0xE53EA0")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xE53EE4", Offset = "0xE53EE4", VA = "0xE53EE4")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xE4D140", Offset = "0xE4D140", VA = "0xE4D140")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xE53008", Offset = "0xE53008", VA = "0xE53008")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xE53F10", Offset = "0xE53F10", VA = "0xE53F10")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xE537BC", Offset = "0xE537BC", VA = "0xE537BC")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xE54198", Offset = "0xE54198", VA = "0xE54198")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xE53FC0", Offset = "0xE53FC0", VA = "0xE53FC0")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xE54CBC", Offset = "0xE54CBC", VA = "0xE54CBC")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xE55140", Offset = "0xE55140", VA = "0xE55140")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xE55558", Offset = "0xE55558", VA = "0xE55558")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xE55690", Offset = "0xE55690", VA = "0xE55690")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xE5585C", Offset = "0xE5585C", VA = "0xE5585C")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE53978", Offset = "0xE53978", VA = "0xE53978")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xE55924", Offset = "0xE55924", VA = "0xE55924")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xE537CC", Offset = "0xE537CC", VA = "0xE537CC")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xE55A00", Offset = "0xE55A00", VA = "0xE55A00")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xE56030", Offset = "0xE56030", VA = "0xE56030")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xE564B8", Offset = "0xE564B8", VA = "0xE564B8")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xE564E0", Offset = "0xE564E0", VA = "0xE564E0")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xE56508", Offset = "0xE56508", VA = "0xE56508")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xE53D48", Offset = "0xE53D48", VA = "0xE53D48")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xE55ABC", Offset = "0xE55ABC", VA = "0xE55ABC")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xE56920", Offset = "0xE56920", VA = "0xE56920")]
	[IteratorStateMachine(typeof(<WaitForMouthAudioSource>d__137))]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xE569BC", Offset = "0xE569BC", VA = "0xE569BC")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xE567B4", Offset = "0xE567B4", VA = "0xE567B4")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xE50B44", Offset = "0xE50B44", VA = "0xE50B44")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xE56A60", Offset = "0xE56A60", VA = "0xE56A60")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xE56544", Offset = "0xE56544", VA = "0xE56544")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xE56B28", Offset = "0xE56B28", VA = "0xE56B28")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200001C")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xE56F28", Offset = "0xE56F28", VA = "0xE56F28")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xE56F30", Offset = "0xE56F30", VA = "0xE56F30")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xE580C4", Offset = "0xE580C4", VA = "0xE580C4")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xE57D10", Offset = "0xE57D10", VA = "0xE57D10")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xE57A94", Offset = "0xE57A94", VA = "0xE57A94")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xE57B74", Offset = "0xE57B74", VA = "0xE57B74")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xE58310", Offset = "0xE58310", VA = "0xE58310")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000EE")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xE588A0", Offset = "0xE588A0", VA = "0xE588A0")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xE58AE8", Offset = "0xE58AE8", VA = "0xE58AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xE58F10", Offset = "0xE58F10", VA = "0xE58F10")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xE5540C", Offset = "0xE5540C", VA = "0xE5540C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xE5903C", Offset = "0xE5903C", VA = "0xE5903C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xE59150", Offset = "0xE59150", VA = "0xE59150")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000021")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xE591A4", Offset = "0xE591A4", VA = "0xE591A4")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xE58BFC", Offset = "0xE58BFC", VA = "0xE58BFC")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xE591AC", Offset = "0xE591AC", VA = "0xE591AC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xE59200", Offset = "0xE59200", VA = "0xE59200")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xE59908", Offset = "0xE59908", VA = "0xE59908")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xE58F64", Offset = "0xE58F64", VA = "0xE58F64")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000022")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000023")]
	public enum PacketMode
	{
		[Token(Token = "0x4000102")]
		SDK,
		[Token(Token = "0x4000103")]
		Unity
	}

	[Token(Token = "0x2000024")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xE5B620", Offset = "0xE5B620", VA = "0xE5B620")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000025")]
	public struct PoseFrame
	{
		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xE54950", Offset = "0xE54950", VA = "0xE54950")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xE5B58C", Offset = "0xE5B58C", VA = "0xE5B58C")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000B9")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xE5B59C", Offset = "0xE5B59C", VA = "0xE5B59C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xE498AC", Offset = "0xE498AC", VA = "0xE498AC")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xE5B618", Offset = "0xE5B618", VA = "0xE5B618")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xE49B68", Offset = "0xE49B68", VA = "0xE49B68")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000026")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xE5B690", Offset = "0xE5B690", VA = "0xE5B690")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xE5B7D0", Offset = "0xE5B7D0", VA = "0xE5B7D0")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xE5B82C", Offset = "0xE5B82C", VA = "0xE5B82C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xE5B96C", Offset = "0xE5B96C", VA = "0xE5B96C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xE5BC9C", Offset = "0xE5BC9C", VA = "0xE5BC9C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xE5BEB8", Offset = "0xE5BEB8", VA = "0xE5BEB8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xE5BEE0", Offset = "0xE5BEE0", VA = "0xE5BEE0")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000028")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000029")]
	public enum TextureType
	{
		[Token(Token = "0x4000139")]
		DiffuseTextures,
		[Token(Token = "0x400013A")]
		NormalMaps,
		[Token(Token = "0x400013B")]
		RoughnessMaps,
		[Token(Token = "0x400013C")]
		Count
	}

	[Token(Token = "0x200002A")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200002B")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200002C")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200002D")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xE5DEA8", Offset = "0xE5DEA8", VA = "0xE5DEA8")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200002E")]
	[CompilerGenerated]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DA")]
			[Address(RVA = "0xE5E968", Offset = "0xE5E968", VA = "0xE5E968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DC")]
			[Address(RVA = "0xE5E9B0", Offset = "0xE5E9B0", VA = "0xE5E9B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xE5DC64", Offset = "0xE5DC64", VA = "0xE5DC64")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xE5E300", Offset = "0xE5E300", VA = "0xE5E300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xE5E304", Offset = "0xE5E304", VA = "0xE5E304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xE5E970", Offset = "0xE5E970", VA = "0xE5E970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000134")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000135")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000136")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000137")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xE5BF80", Offset = "0xE5BF80", VA = "0xE5BF80")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xE5C154", Offset = "0xE5C154", VA = "0xE5C154")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xE5C190", Offset = "0xE5C190", VA = "0xE5C190")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xE5C8C4", Offset = "0xE5C8C4", VA = "0xE5C8C4")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xE5C92C", Offset = "0xE5C92C", VA = "0xE5C92C")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xE5C230", Offset = "0xE5C230", VA = "0xE5C230")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xE5C97C", Offset = "0xE5C97C", VA = "0xE5C97C")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xE5C67C", Offset = "0xE5C67C", VA = "0xE5C67C")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xE5CA58", Offset = "0xE5CA58", VA = "0xE5CA58")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xE5CCDC", Offset = "0xE5CCDC", VA = "0xE5CCDC")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xE5CE00", Offset = "0xE5CE00", VA = "0xE5CE00")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xE5CE38", Offset = "0xE5CE38", VA = "0xE5CE38")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xE5C834", Offset = "0xE5C834", VA = "0xE5C834")]
	[IteratorStateMachine(typeof(<RunLoadingAnimation>d__49))]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xE5DC8C", Offset = "0xE5DC8C", VA = "0xE5DC8C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000009")]
	public float Duration
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xE546E0", Offset = "0xE546E0", VA = "0xE546E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xE548C8", Offset = "0xE548C8", VA = "0xE548C8")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xE4AFFC", Offset = "0xE4AFFC", VA = "0xE4AFFC")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xE54448", Offset = "0xE54448", VA = "0xE54448")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xE5E9B8", Offset = "0xE5E9B8", VA = "0xE5E9B8")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xE54744", Offset = "0xE54744", VA = "0xE54744")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xE5EB44", Offset = "0xE5EB44", VA = "0xE5EB44")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xE4B150", Offset = "0xE4B150", VA = "0xE4B150")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xE4A548", Offset = "0xE4A548", VA = "0xE4A548")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000030")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xE5ED20", Offset = "0xE5ED20", VA = "0xE5ED20")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xE5EE28", Offset = "0xE5EE28", VA = "0xE5EE28")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xE5EFB4", Offset = "0xE5EFB4", VA = "0xE5EFB4")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xE5EE8C", Offset = "0xE5EE8C", VA = "0xE5EE8C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xE5EF14", Offset = "0xE5EF14", VA = "0xE5EF14")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000031")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xE5FFFC", Offset = "0xE5FFFC", VA = "0xE5FFFC")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xE60378", Offset = "0xE60378", VA = "0xE60378")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xE60198", Offset = "0xE60198", VA = "0xE60198")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xE60204", Offset = "0xE60204", VA = "0xE60204")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xE60294", Offset = "0xE60294", VA = "0xE60294")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000032")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400015E")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400015F")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xE603C8", Offset = "0xE603C8", VA = "0xE603C8")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xE6044C", Offset = "0xE6044C", VA = "0xE6044C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xE60468", Offset = "0xE60468", VA = "0xE60468")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xE60618", Offset = "0xE60618", VA = "0xE60618")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xE60808", Offset = "0xE60808", VA = "0xE60808")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000033")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xE608BC", Offset = "0xE608BC", VA = "0xE608BC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xE60998", Offset = "0xE60998", VA = "0xE60998")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xE60DE8", Offset = "0xE60DE8", VA = "0xE60DE8")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xE61130", Offset = "0xE61130", VA = "0xE61130")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xE61234", Offset = "0xE61234", VA = "0xE61234")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000034")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000168")]
	Body = 1,
	[Token(Token = "0x4000169")]
	Hands = 2,
	[Token(Token = "0x400016A")]
	Base = 4,
	[Token(Token = "0x400016B")]
	BodyTilt = 0x10,
	[Token(Token = "0x400016C")]
	Expressive = 0x20,
	[Token(Token = "0x400016D")]
	All = -1
}
[Token(Token = "0x2000035")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400016F")]
	AvatarSpecification,
	[Token(Token = "0x4000170")]
	AssetLoaded,
	[Token(Token = "0x4000171")]
	Count
}
[Token(Token = "0x2000036")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000037")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000038")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000177")]
	Mesh,
	[Token(Token = "0x4000178")]
	Texture,
	[Token(Token = "0x4000179")]
	Pose,
	[Token(Token = "0x400017A")]
	Material,
	[Token(Token = "0x400017B")]
	CombinedMesh,
	[Token(Token = "0x400017C")]
	PBSMaterial,
	[Token(Token = "0x400017D")]
	FailedLoad,
	[Token(Token = "0x400017E")]
	Count
}
[Token(Token = "0x2000039")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200003A")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200003B")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200003C")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003D")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003E")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40001B3")]
	RGB24,
	[Token(Token = "0x40001B4")]
	DXT1,
	[Token(Token = "0x40001B5")]
	DXT5,
	[Token(Token = "0x40001B6")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001B7")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001B8")]
	Count
}
[Token(Token = "0x200003F")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000040")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001C0")]
	SkinnedMeshRender,
	[Token(Token = "0x40001C1")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001C2")]
	ProjectorRender,
	[Token(Token = "0x40001C3")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001C4")]
	Count
}
[Token(Token = "0x2000041")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001C6")]
	Unknown,
	[Token(Token = "0x40001C7")]
	Default,
	[Token(Token = "0x40001C8")]
	Verbose,
	[Token(Token = "0x40001C9")]
	Debug,
	[Token(Token = "0x40001CA")]
	Info,
	[Token(Token = "0x40001CB")]
	Warn,
	[Token(Token = "0x40001CC")]
	Error,
	[Token(Token = "0x40001CD")]
	Fatal,
	[Token(Token = "0x40001CE")]
	Silent
}
[Token(Token = "0x2000042")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000043")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001D3")]
	One = 1,
	[Token(Token = "0x40001D4")]
	Two = 2,
	[Token(Token = "0x40001D5")]
	Three = 4,
	[Token(Token = "0x40001D6")]
	Joystick = 8
}
[Token(Token = "0x2000044")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001D8")]
	One = 1,
	[Token(Token = "0x40001D9")]
	Two = 2,
	[Token(Token = "0x40001DA")]
	Joystick = 4,
	[Token(Token = "0x40001DB")]
	ThumbRest = 8,
	[Token(Token = "0x40001DC")]
	Index = 0x10,
	[Token(Token = "0x40001DD")]
	Pointing = 0x40,
	[Token(Token = "0x40001DE")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000045")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000046")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000047")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000048")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004C")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004D")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001FE")]
	Add,
	[Token(Token = "0x40001FF")]
	Multiply,
	[Token(Token = "0x4000200")]
	Count
}
[Token(Token = "0x200004E")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000202")]
	Color,
	[Token(Token = "0x4000203")]
	Texture,
	[Token(Token = "0x4000204")]
	TextureSingleChannel,
	[Token(Token = "0x4000205")]
	Parallax,
	[Token(Token = "0x4000206")]
	Count
}
[Token(Token = "0x200004F")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000208")]
	None,
	[Token(Token = "0x4000209")]
	Positional,
	[Token(Token = "0x400020A")]
	ViewReflection,
	[Token(Token = "0x400020B")]
	Fresnel,
	[Token(Token = "0x400020C")]
	Pulse,
	[Token(Token = "0x400020D")]
	Count
}
[Token(Token = "0x2000050")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x400020F")]
	Touch,
	[Token(Token = "0x4000210")]
	Malibu,
	[Token(Token = "0x4000211")]
	Go,
	[Token(Token = "0x4000212")]
	Quest,
	[Token(Token = "0x4000213")]
	Count
}
[Token(Token = "0x2000051")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000215")]
	Lowest = 1,
	[Token(Token = "0x4000216")]
	Medium = 3,
	[Token(Token = "0x4000217")]
	Highest = 5
}
[Token(Token = "0x2000052")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000219")]
	Unknown = -1,
	[Token(Token = "0x400021A")]
	One,
	[Token(Token = "0x400021B")]
	Two
}
[Token(Token = "0x2000053")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xE6160C", Offset = "0xE6160C", VA = "0xE6160C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xE6163C", Offset = "0xE6163C", VA = "0xE6163C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xE6184C", Offset = "0xE6184C", VA = "0xE6184C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000054")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xE61A90", Offset = "0xE61A90", VA = "0xE61A90")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xE61AC0", Offset = "0xE61AC0", VA = "0xE61AC0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xE61E50", Offset = "0xE61E50", VA = "0xE61E50", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000055")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xE621F8", Offset = "0xE621F8", VA = "0xE621F8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xE62228", Offset = "0xE62228", VA = "0xE62228", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xE62470", Offset = "0xE62470", VA = "0xE62470", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000056")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xE62744", Offset = "0xE62744", VA = "0xE62744")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xE62774", Offset = "0xE62774", VA = "0xE62774", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xE6293C", Offset = "0xE6293C", VA = "0xE6293C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000057")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xE62B50", Offset = "0xE62B50", VA = "0xE62B50")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000058")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000059")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000250")]
	FirstPerson = 1,
	[Token(Token = "0x4000251")]
	ThirdPerson = 2,
	[Token(Token = "0x4000252")]
	SelfOccluding = 4
}
[Token(Token = "0x200005A")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005C")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005E")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000268")]
	Default,
	[Token(Token = "0x4000269")]
	GripSphere,
	[Token(Token = "0x400026A")]
	GripCube,
	[Token(Token = "0x400026B")]
	Count
}
[Token(Token = "0x200005F")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400026D")]
	Body,
	[Token(Token = "0x400026E")]
	Clothing,
	[Token(Token = "0x400026F")]
	Eyewear,
	[Token(Token = "0x4000270")]
	Hair,
	[Token(Token = "0x4000271")]
	Beard,
	[Token(Token = "0x4000272")]
	Count
}
[Token(Token = "0x2000060")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000061")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000062")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000063")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000064")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400027C")]
	AvatarHead,
	[Token(Token = "0x400027D")]
	AvatarHand,
	[Token(Token = "0x400027E")]
	Object,
	[Token(Token = "0x400027F")]
	ObjectStatic,
	[Token(Token = "0x4000280")]
	Count
}
[Token(Token = "0x2000065")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000066")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000067")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000068")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000069")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400028C")]
	Point,
	[Token(Token = "0x400028D")]
	Direction,
	[Token(Token = "0x400028E")]
	Spot,
	[Token(Token = "0x400028F")]
	Count
}
[Token(Token = "0x200006A")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200006B")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200006C")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200006D")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200006E")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40002A5")]
	None = 0u,
	[Token(Token = "0x40002A6")]
	GazeTarget = 1u,
	[Token(Token = "0x40002A7")]
	Any = uint.MaxValue
}
[Token(Token = "0x200006F")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000070")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000071")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000072")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000073")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000074")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000075")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600012C")]
		[Address(RVA = "0xE64CF0", Offset = "0xE64CF0", VA = "0xE64CF0")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002BC")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000B")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0xE60B84", Offset = "0xE60B84", VA = "0xE60B84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xE639AC", Offset = "0xE639AC", VA = "0xE639AC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xE63CFC", Offset = "0xE63CFC", VA = "0xE63CFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xE63D60", Offset = "0xE63D60", VA = "0xE63D60")]
	private void Update()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xE64700", Offset = "0xE64700", VA = "0xE64700")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xE64750", Offset = "0xE64750", VA = "0xE64750")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xE647A0", Offset = "0xE647A0", VA = "0xE647A0")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xE64848", Offset = "0xE64848", VA = "0xE64848")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xE648A0", Offset = "0xE648A0", VA = "0xE648A0")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xE64524", Offset = "0xE64524", VA = "0xE64524")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xE64964", Offset = "0xE64964", VA = "0xE64964")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xE64AB0", Offset = "0xE64AB0", VA = "0xE64AB0")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xE60D70", Offset = "0xE60D70", VA = "0xE60D70")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xE64B9C", Offset = "0xE64B9C", VA = "0xE64B9C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xE63CBC", Offset = "0xE63CBC", VA = "0xE63CBC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xE64C64", Offset = "0xE64C64", VA = "0xE64C64")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xE64CD8", Offset = "0xE64CD8", VA = "0xE64CD8")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000076")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000C")]
	public static string AppID
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0xE64C2C", Offset = "0xE64C2C", VA = "0xE64C2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012E")]
		[Address(RVA = "0xE64E9C", Offset = "0xE64E9C", VA = "0xE64E9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static string MobileAppID
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0xE64C48", Offset = "0xE64C48", VA = "0xE64C48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000130")]
		[Address(RVA = "0xE64EC0", Offset = "0xE64EC0", VA = "0xE64EC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0xE64D58", Offset = "0xE64D58", VA = "0xE64D58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000132")]
		[Address(RVA = "0xE64EE4", Offset = "0xE64EE4", VA = "0xE64EE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xE64F3C", Offset = "0xE64F3C", VA = "0xE64F3C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000077")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xE64FA4", Offset = "0xE64FA4", VA = "0xE64FA4")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xE65268", Offset = "0xE65268", VA = "0xE65268")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xE65120", Offset = "0xE65120", VA = "0xE65120")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xE65478", Offset = "0xE65478", VA = "0xE65478")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000078")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xE65488", Offset = "0xE65488", VA = "0xE65488")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xE655D8", Offset = "0xE655D8", VA = "0xE655D8")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xE65788", Offset = "0xE65788", VA = "0xE65788")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002D3")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002D4")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002D5")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xE65798", Offset = "0xE65798", VA = "0xE65798")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xE66764", Offset = "0xE66764", VA = "0xE66764")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xE66970", Offset = "0xE66970", VA = "0xE66970")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xE65EE0", Offset = "0xE65EE0", VA = "0xE65EE0")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xE65BDC", Offset = "0xE65BDC", VA = "0xE65BDC")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xE65D54", Offset = "0xE65D54", VA = "0xE65D54")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xE67194", Offset = "0xE67194", VA = "0xE67194")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007B")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200007C")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600014C")]
		[Address(RVA = "0xE67AF4", Offset = "0xE67AF4", VA = "0xE67AF4")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200007D")]
	public struct TextureSet
	{
		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600014D")]
		[Address(RVA = "0xE67D44", Offset = "0xE67D44", VA = "0xE67D44")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200007E")]
	[CompilerGenerated]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000151")]
			[Address(RVA = "0xE68610", Offset = "0xE68610", VA = "0xE68610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000153")]
			[Address(RVA = "0xE68658", Offset = "0xE68658", VA = "0xE68658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0xE67EAC", Offset = "0xE67EAC", VA = "0xE67EAC")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0xE68038", Offset = "0xE68038", VA = "0xE68038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0xE6803C", Offset = "0xE6803C", VA = "0xE6803C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0xE68618", Offset = "0xE68618", VA = "0xE68618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002D9")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002DA")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002DD")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002DE")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002DF")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002E0")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002E1")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002E2")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002E3")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xE671A4", Offset = "0xE671A4", VA = "0xE671A4")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xE67708", Offset = "0xE67708", VA = "0xE67708")]
	public void Update()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xE678EC", Offset = "0xE678EC", VA = "0xE678EC")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xE67934", Offset = "0xE67934", VA = "0xE67934")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xE6786C", Offset = "0xE6786C", VA = "0xE6786C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xE67B44", Offset = "0xE67B44", VA = "0xE67B44")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xE67D6C", Offset = "0xE67D6C", VA = "0xE67D6C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xE67E04", Offset = "0xE67E04", VA = "0xE67E04")]
	[IteratorStateMachine(typeof(<DeleteTextureSetCoroutine>d__24))]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xE64924", Offset = "0xE64924", VA = "0xE64924")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xE67ED4", Offset = "0xE67ED4", VA = "0xE67ED4")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200007F")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xE68660", Offset = "0xE68660", VA = "0xE68660")]
	private void Update()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xE687A4", Offset = "0xE687A4", VA = "0xE687A4")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000080")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000081")]
	public delegate void OnClick();

	[Token(Token = "0x2000082")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000083")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000084")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x40002F5")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40002F6")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40002F7")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xE68804", Offset = "0xE68804", VA = "0xE68804")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xE68D70", Offset = "0xE68D70", VA = "0xE68D70")]
	public void Show()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xE690EC", Offset = "0xE690EC", VA = "0xE690EC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xE69268", Offset = "0xE69268", VA = "0xE69268")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xE69480", Offset = "0xE69480", VA = "0xE69480")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xE690DC", Offset = "0xE690DC", VA = "0xE690DC")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xE69774", Offset = "0xE69774", VA = "0xE69774")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xE69AF0", Offset = "0xE69AF0", VA = "0xE69AF0")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xE69EA0", Offset = "0xE69EA0", VA = "0xE69EA0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xE69F98", Offset = "0xE69F98", VA = "0xE69F98")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xE6A168", Offset = "0xE6A168", VA = "0xE6A168")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xE6A200", Offset = "0xE6A200", VA = "0xE6A200")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xE6A3DC", Offset = "0xE6A3DC", VA = "0xE6A3DC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xE6A5D8", Offset = "0xE6A5D8", VA = "0xE6A5D8")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xE6A8D0", Offset = "0xE6A8D0", VA = "0xE6A8D0")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xE6A9C0", Offset = "0xE6A9C0", VA = "0xE6A9C0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xE6AA54", Offset = "0xE6AA54", VA = "0xE6AA54")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200008A")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xE6B0D4", Offset = "0xE6B0D4", VA = "0xE6B0D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xE6B178", Offset = "0xE6B178", VA = "0xE6B178")]
	private void Update()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xE6B214", Offset = "0xE6B214", VA = "0xE6B214")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xE6B24C", Offset = "0xE6B24C", VA = "0xE6B24C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200008B")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200008C")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000327")]
		On,
		[Token(Token = "0x4000328")]
		Off,
		[Token(Token = "0x4000329")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000011")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xE6B254", Offset = "0xE6B254", VA = "0xE6B254")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000185")]
		[Address(RVA = "0xE68D30", Offset = "0xE68D30", VA = "0xE68D30")]
		set
		{
		}
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xE6B25C", Offset = "0xE6B25C", VA = "0xE6B25C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xE6B2B4", Offset = "0xE6B2B4", VA = "0xE6B2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xE6B3EC", Offset = "0xE6B3EC", VA = "0xE6B3EC", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xE6B408", Offset = "0xE6B408", VA = "0xE6B408", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xE6B458", Offset = "0xE6B458", VA = "0xE6B458")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xE6B5F8", Offset = "0xE6B5F8", VA = "0xE6B5F8")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xE6B708", Offset = "0xE6B708", VA = "0xE6B708")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xE6B78C", Offset = "0xE6B78C", VA = "0xE6B78C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xE6B84C", Offset = "0xE6B84C", VA = "0xE6B84C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xE6B8F4", Offset = "0xE6B8F4", VA = "0xE6B8F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xE6B9E0", Offset = "0xE6B9E0", VA = "0xE6B9E0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200008D")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400032A")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400032B")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400032C")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Collision layers to be used for the purposes of fading out the screen when the HMD is inside world geometry and adjusting the capsule height.")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Offset is added to camera's real world height, effectively treating it as though the player was taller/standing higher.")]
	public float HeightOffset;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum height that the character capsule can shrink to.  To disable, set to capsule's height.")]
	public float MinimumHeight;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Maximum height that the character capsule can grow to.  To disable, set to capsule's height.")]
	public float MaximumHeight;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xE6B9F0", Offset = "0xE6B9F0", VA = "0xE6B9F0")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xE6B9F8", Offset = "0xE6B9F8", VA = "0xE6B9F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xE6BA88", Offset = "0xE6BA88", VA = "0xE6BA88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xE6BB14", Offset = "0xE6BB14", VA = "0xE6BB14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xE6BBA0", Offset = "0xE6BBA0", VA = "0xE6BBA0")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xE6BEC0", Offset = "0xE6BEC0", VA = "0xE6BEC0")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xE6C120", Offset = "0xE6C120", VA = "0xE6C120")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200008E")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xE6C878", Offset = "0xE6C878", VA = "0xE6C878")]
	private void Start()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xE6C924", Offset = "0xE6C924", VA = "0xE6C924")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200008F")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000090")]
	public enum States
	{
		[Token(Token = "0x400035A")]
		Ready,
		[Token(Token = "0x400035B")]
		Aim,
		[Token(Token = "0x400035C")]
		CancelAim,
		[Token(Token = "0x400035D")]
		PreTeleport,
		[Token(Token = "0x400035E")]
		CancelTeleport,
		[Token(Token = "0x400035F")]
		Teleporting,
		[Token(Token = "0x4000360")]
		PostTeleport
	}

	[Token(Token = "0x2000091")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000362")]
		None,
		[Token(Token = "0x4000363")]
		Aim,
		[Token(Token = "0x4000364")]
		PreTeleport,
		[Token(Token = "0x4000365")]
		Teleport
	}

	[Token(Token = "0x2000092")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000367")]
		Point,
		[Token(Token = "0x4000368")]
		Sphere,
		[Token(Token = "0x4000369")]
		Capsule
	}

	[Token(Token = "0x2000093")]
	public class AimData
	{
		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x17000015")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60001D1")]
			[Address(RVA = "0xE6E6A8", Offset = "0xE6E6A8", VA = "0xE6E6A8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0xE6E6B0", Offset = "0xE6E6B0", VA = "0xE6E6B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xE6E620", Offset = "0xE6E620", VA = "0xE6E620")]
		public AimData()
		{
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xE6E6B8", Offset = "0xE6E6B8", VA = "0xE6E6B8")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000094")]
	[CompilerGenerated]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001D7")]
			[Address(RVA = "0xE6E820", Offset = "0xE6E820", VA = "0xE6E820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001D9")]
			[Address(RVA = "0xE6E868", Offset = "0xE6E868", VA = "0xE6E868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xE6D330", Offset = "0xE6D330", VA = "0xE6D330")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xE6E710", Offset = "0xE6E710", VA = "0xE6E710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xE6E714", Offset = "0xE6E714", VA = "0xE6E714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xE6E828", Offset = "0xE6E828", VA = "0xE6E828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000095")]
	[CompilerGenerated]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DD")]
			[Address(RVA = "0xE6E9CC", Offset = "0xE6E9CC", VA = "0xE6E9CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001DF")]
			[Address(RVA = "0xE6EA14", Offset = "0xE6EA14", VA = "0xE6EA14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xE6D7B8", Offset = "0xE6D7B8", VA = "0xE6D7B8")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xE6E870", Offset = "0xE6E870", VA = "0xE6E870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xE6E874", Offset = "0xE6E874", VA = "0xE6E874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xE6E9D4", Offset = "0xE6E9D4", VA = "0xE6E9D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000096")]
	[CompilerGenerated]
	private sealed class <CancelAimStateCoroutine>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E3")]
			[Address(RVA = "0xE6EACC", Offset = "0xE6EACC", VA = "0xE6EACC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E5")]
			[Address(RVA = "0xE6EB14", Offset = "0xE6EB14", VA = "0xE6EB14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xE6D9D0", Offset = "0xE6D9D0", VA = "0xE6D9D0")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xE6EA1C", Offset = "0xE6EA1C", VA = "0xE6EA1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xE6EA20", Offset = "0xE6EA20", VA = "0xE6EA20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xE6EAD4", Offset = "0xE6EAD4", VA = "0xE6EAD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000097")]
	[CompilerGenerated]
	private sealed class <PreTeleportStateCoroutine>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E9")]
			[Address(RVA = "0xE6EC04", Offset = "0xE6EC04", VA = "0xE6EC04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EB")]
			[Address(RVA = "0xE6EC4C", Offset = "0xE6EC4C", VA = "0xE6EC4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xE6DBA4", Offset = "0xE6DBA4", VA = "0xE6DBA4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xE6EB1C", Offset = "0xE6EB1C", VA = "0xE6EB1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xE6EB20", Offset = "0xE6EB20", VA = "0xE6EB20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xE6EC0C", Offset = "0xE6EC0C", VA = "0xE6EC0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000098")]
	[CompilerGenerated]
	private sealed class <CancelTeleportStateCoroutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001EF")]
			[Address(RVA = "0xE6ED04", Offset = "0xE6ED04", VA = "0xE6ED04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F1")]
			[Address(RVA = "0xE6ED4C", Offset = "0xE6ED4C", VA = "0xE6ED4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xE6DD78", Offset = "0xE6DD78", VA = "0xE6DD78")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xE6EC54", Offset = "0xE6EC54", VA = "0xE6EC54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xE6EC58", Offset = "0xE6EC58", VA = "0xE6EC58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xE6ED0C", Offset = "0xE6ED0C", VA = "0xE6ED0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000099")]
	[CompilerGenerated]
	private sealed class <TeleportingStateCoroutine>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F5")]
			[Address(RVA = "0xE6EE38", Offset = "0xE6EE38", VA = "0xE6EE38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F7")]
			[Address(RVA = "0xE6EE80", Offset = "0xE6EE80", VA = "0xE6EE80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xE6DF4C", Offset = "0xE6DF4C", VA = "0xE6DF4C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xE6ED54", Offset = "0xE6ED54", VA = "0xE6ED54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xE6ED58", Offset = "0xE6ED58", VA = "0xE6ED58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xE6EE40", Offset = "0xE6EE40", VA = "0xE6EE40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200009A")]
	[CompilerGenerated]
	private sealed class <PostTeleportStateCoroutine>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FB")]
			[Address(RVA = "0xE6EF88", Offset = "0xE6EF88", VA = "0xE6EF88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FD")]
			[Address(RVA = "0xE6EFD0", Offset = "0xE6EFD0", VA = "0xE6EFD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xE6E120", Offset = "0xE6E120", VA = "0xE6E120")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xE6EE88", Offset = "0xE6EE88", VA = "0xE6EE88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xE6EE8C", Offset = "0xE6EE8C", VA = "0xE6EE8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xE6EF90", Offset = "0xE6EF90", VA = "0xE6EF90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Allow linear movement prior to the teleport system being activated.")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("Allow linear movement while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Allow linear movement while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Allow linear movement after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Allow rotation prior to the teleport system being activated.")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Allow rotation while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Allow rotation while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Allow rotation after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableRotationDuringPostTeleport;

	[NonSerialized]
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionRadius;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000012")]
	public States CurrentState
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0xE6C974", Offset = "0xE6C974", VA = "0xE6C974")]
		[CompilerGenerated]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600019E")]
		[Address(RVA = "0xE6C97C", Offset = "0xE6C97C", VA = "0xE6C97C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xE6CB4C", Offset = "0xE6CB4C", VA = "0xE6CB4C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000014")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xE6CB70", Offset = "0xE6CB70", VA = "0xE6CB70")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xE6CB78", Offset = "0xE6CB78", VA = "0xE6CB78")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0xE6C984", Offset = "0xE6C984", VA = "0xE6C984")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xE6CA34", Offset = "0xE6CA34", VA = "0xE6CA34")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xE6D1F8", Offset = "0xE6D1F8", VA = "0xE6D1F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xE6D294", Offset = "0xE6D294", VA = "0xE6D294")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xE6D358", Offset = "0xE6D358", VA = "0xE6D358")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xE6D3F4", Offset = "0xE6D3F4", VA = "0xE6D3F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xE6D490", Offset = "0xE6D490", VA = "0xE6D490")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xE6D540", Offset = "0xE6D540", VA = "0xE6D540")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xE6D60C", Offset = "0xE6D60C", VA = "0xE6D60C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xE6D6A8", Offset = "0xE6D6A8", VA = "0xE6D6A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xE6D7E0", Offset = "0xE6D7E0", VA = "0xE6D7E0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xE6D87C", Offset = "0xE6D87C", VA = "0xE6D87C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xE6D9F8", Offset = "0xE6D9F8", VA = "0xE6D9F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xE6DA94", Offset = "0xE6DA94", VA = "0xE6DA94")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xE6DBCC", Offset = "0xE6DBCC", VA = "0xE6DBCC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xE6DC68", Offset = "0xE6DC68", VA = "0xE6DC68")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xE6DDA0", Offset = "0xE6DDA0", VA = "0xE6DDA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xE6DE3C", Offset = "0xE6DE3C", VA = "0xE6DE3C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xE6DF74", Offset = "0xE6DF74", VA = "0xE6DF74")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xE6E010", Offset = "0xE6E010", VA = "0xE6E010")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xE6E148", Offset = "0xE6E148", VA = "0xE6E148")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xE6E1F8", Offset = "0xE6E1F8", VA = "0xE6E1F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xE6C92C", Offset = "0xE6C92C", VA = "0xE6C92C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xE6C950", Offset = "0xE6C950", VA = "0xE6C950")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xE6CAE4", Offset = "0xE6CAE4", VA = "0xE6CAE4")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xE6CB80", Offset = "0xE6CB80", VA = "0xE6CB80")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xE6CE48", Offset = "0xE6CE48", VA = "0xE6CE48")]
	[Conditional("DEBUG_TELEPORT_STATES")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xE6CEF0", Offset = "0xE6CEF0", VA = "0xE6CEF0")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xE6CFDC", Offset = "0xE6CFDC", VA = "0xE6CFDC")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xE6D018", Offset = "0xE6D018", VA = "0xE6D018")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xE6D0C8", Offset = "0xE6D0C8", VA = "0xE6D0C8")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xE6D0F8", Offset = "0xE6D0F8", VA = "0xE6D0F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xE6D158", Offset = "0xE6D158", VA = "0xE6D158", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xE6D1F0", Offset = "0xE6D1F0", VA = "0xE6D1F0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xE6D17C", Offset = "0xE6D17C", VA = "0xE6D17C")]
	[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__52))]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xE6D5F0", Offset = "0xE6D5F0", VA = "0xE6D5F0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xE6D744", Offset = "0xE6D744", VA = "0xE6D744")]
	[IteratorStateMachine(typeof(<AimStateCoroutine>d__64))]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xE6D918", Offset = "0xE6D918", VA = "0xE6D918")]
	public void CancelAim()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xE6D95C", Offset = "0xE6D95C", VA = "0xE6D95C")]
	[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__69))]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xE6DB30", Offset = "0xE6DB30", VA = "0xE6DB30")]
	[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__73))]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xE6DD04", Offset = "0xE6DD04", VA = "0xE6DD04")]
	[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__77))]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xE6DED8", Offset = "0xE6DED8", VA = "0xE6DED8")]
	[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__81))]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xE6E0AC", Offset = "0xE6E0AC", VA = "0xE6E0AC")]
	[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__85))]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xE6E2A8", Offset = "0xE6E2A8", VA = "0xE6E2A8")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xE6E3BC", Offset = "0xE6E3BC", VA = "0xE6E3BC")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xE6E3EC", Offset = "0xE6E3EC", VA = "0xE6E3EC")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xE6E528", Offset = "0xE6E528", VA = "0xE6E528")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xE6E610", Offset = "0xE6E610", VA = "0xE6E610")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200009B")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xE6EFD8", Offset = "0xE6EFD8", VA = "0xE6EFD8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xE6F068", Offset = "0xE6F068", VA = "0xE6F068", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000200")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xE6F138", Offset = "0xE6F138", VA = "0xE6F138")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xE6F148", Offset = "0xE6F148", VA = "0xE6F148", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xE6F2D8", Offset = "0xE6F2D8", VA = "0xE6F2D8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The MinimumElevation is relative to the AimPosition.")]
	public float MinimumElevation;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
	public float Gravity;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
	[Range(0.001f, 50f)]
	public float AimVelocity;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The AimStep is the how much to subdivide the iteration.")]
	[Range(0.001f, 1f)]
	public float AimStep;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xE6F2E8", Offset = "0xE6F2E8", VA = "0xE6F2E8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xE6F4BC", Offset = "0xE6F4BC", VA = "0xE6F4BC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xE6F4D0", Offset = "0xE6F4D0", VA = "0xE6F4D0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xE6F5FC", Offset = "0xE6F5FC", VA = "0xE6F5FC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xE6F628", Offset = "0xE6F628", VA = "0xE6F628")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xE6F654", Offset = "0xE6F654", VA = "0xE6F654")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xE6F6F8", Offset = "0xE6F6F8", VA = "0xE6F6F8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xE6F74C", Offset = "0xE6F74C", VA = "0xE6F74C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xE6F79C", Offset = "0xE6F79C", VA = "0xE6F79C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000024")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xE6F898", Offset = "0xE6F898", VA = "0xE6F898")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020E")]
		[Address(RVA = "0xE6F8A0", Offset = "0xE6F8A0", VA = "0xE6F8A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xE6FA28", Offset = "0xE6FA28", VA = "0xE6FA28")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xE6FAD8", Offset = "0xE6FAD8", VA = "0xE6FAD8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xE6F8AC", Offset = "0xE6F8AC", VA = "0xE6F8AC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xE6F930", Offset = "0xE6F930", VA = "0xE6F930")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xE6F9F4", Offset = "0xE6F9F4", VA = "0xE6F9F4")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xE6FA24", Offset = "0xE6FA24", VA = "0xE6FA24")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xE6CFF4", Offset = "0xE6CFF4", VA = "0xE6CFF4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xE6FB88", Offset = "0xE6FB88", VA = "0xE6FB88")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xE6FBA4", Offset = "0xE6FBA4", VA = "0xE6FBA4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000A0")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000A1")]
	[CompilerGenerated]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000224")]
			[Address(RVA = "0xE7016C", Offset = "0xE7016C", VA = "0xE7016C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000226")]
			[Address(RVA = "0xE701B4", Offset = "0xE701B4", VA = "0xE701B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0xE6FFD8", Offset = "0xE6FFD8", VA = "0xE6FFD8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000222")]
		[Address(RVA = "0xE700DC", Offset = "0xE700DC", VA = "0xE700DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0xE700E0", Offset = "0xE700E0", VA = "0xE700E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0xE70174", Offset = "0xE70174", VA = "0xE70174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A2")]
	[CompilerGenerated]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022A")]
			[Address(RVA = "0xE70258", Offset = "0xE70258", VA = "0xE70258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600022C")]
			[Address(RVA = "0xE702A0", Offset = "0xE702A0", VA = "0xE702A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0xE70074", Offset = "0xE70074", VA = "0xE70074")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000228")]
		[Address(RVA = "0xE701BC", Offset = "0xE701BC", VA = "0xE701BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0xE701C0", Offset = "0xE701C0", VA = "0xE701C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0xE70260", Offset = "0xE70260", VA = "0xE70260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xE6FD98", Offset = "0xE6FD98", VA = "0xE6FD98")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xE6FE6C", Offset = "0xE6FE6C", VA = "0xE6FE6C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xE6FEB8", Offset = "0xE6FEB8", VA = "0xE6FEB8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xE6FF64", Offset = "0xE6FF64", VA = "0xE6FF64")]
	[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xE70000", Offset = "0xE70000", VA = "0xE70000")]
	[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600021E")]
	public abstract void GetAimData(out Ray aimRay);
}
[Token(Token = "0x20000A3")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The button used to begin aiming for a teleport.")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The button used to trigger the teleport after aiming. It can be the same button as the AimButton, however you cannot abort a teleport if it is.")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
	public bool FastTeleport;

	[Token(Token = "0x17000029")]
	public Transform Pointer
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0xE702A8", Offset = "0xE702A8", VA = "0xE702A8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xE702B0", Offset = "0xE702B0", VA = "0xE702B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xE702B8", Offset = "0xE702B8", VA = "0xE702B8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xE703E4", Offset = "0xE703E4", VA = "0xE703E4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xE70498", Offset = "0xE70498", VA = "0xE70498")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000A5")]
	public enum InputModes
	{
		[Token(Token = "0x40003AF")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40003B0")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40003B1")]
		ThumbstickTeleport,
		[Token(Token = "0x40003B2")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000A6")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40003B4")]
		A,
		[Token(Token = "0x40003B5")]
		B,
		[Token(Token = "0x40003B6")]
		LeftTrigger,
		[Token(Token = "0x40003B7")]
		LeftThumbstick,
		[Token(Token = "0x40003B8")]
		RightTrigger,
		[Token(Token = "0x40003B9")]
		RightThumbstick,
		[Token(Token = "0x40003BA")]
		X,
		[Token(Token = "0x40003BB")]
		Y
	}

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xE7049C", Offset = "0xE7049C", VA = "0xE7049C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xE704A0", Offset = "0xE704A0", VA = "0xE704A0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xE708D4", Offset = "0xE708D4", VA = "0xE708D4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xE70990", Offset = "0xE70990", VA = "0xE70990")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000A7")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000A8")]
	public enum OrientationModes
	{
		[Token(Token = "0x40003C0")]
		HeadRelative,
		[Token(Token = "0x40003C1")]
		ForwardFacing
	}

	[Token(Token = "0x20000A9")]
	[CompilerGenerated]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000242")]
			[Address(RVA = "0xE70E40", Offset = "0xE70E40", VA = "0xE70E40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000244")]
			[Address(RVA = "0xE70E88", Offset = "0xE70E88", VA = "0xE70E88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0xE70C50", Offset = "0xE70C50", VA = "0xE70C50")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000240")]
		[Address(RVA = "0xE70D90", Offset = "0xE70D90", VA = "0xE70D90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0xE70D94", Offset = "0xE70D94", VA = "0xE70D94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0xE70E48", Offset = "0xE70E48", VA = "0xE70E48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xE70A80", Offset = "0xE70A80", VA = "0xE70A80")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xE70B68", Offset = "0xE70B68", VA = "0xE70B68")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xE70B70", Offset = "0xE70B70", VA = "0xE70B70", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xE70BA8", Offset = "0xE70BA8", VA = "0xE70BA8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xE70BDC", Offset = "0xE70BDC", VA = "0xE70BDC")]
	[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__7))]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600023C")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xE70C78", Offset = "0xE70C78", VA = "0xE70C78")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20000AA")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000245")]
	[Address(RVA = "0xE70E90", Offset = "0xE70E90", VA = "0xE70E90", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xE70E94", Offset = "0xE70E94", VA = "0xE70E94", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xE70F3C", Offset = "0xE70F3C", VA = "0xE70F3C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Should the destination orientation be updated during the aim state in addition to the PreTeleport state?")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How far from the destination must the HMD be pointing before using it for orientation")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("How far from the destination must the HMD be pointing before rejecting the teleport")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xE70F40", Offset = "0xE70F40", VA = "0xE70F40", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xE70F90", Offset = "0xE70F90", VA = "0xE70F90", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xE71454", Offset = "0xE71454", VA = "0xE71454")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Which thumbstick is to be used for adjusting the teleport orientation. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
	public float RotateStickThreshold;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xE71458", Offset = "0xE71458", VA = "0xE71458", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xE7148C", Offset = "0xE7148C", VA = "0xE7148C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xE71988", Offset = "0xE71988", VA = "0xE71988")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000AD")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xE71998", Offset = "0xE71998", VA = "0xE71998")]
	private void Start()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xE7199C", Offset = "0xE7199C", VA = "0xE7199C")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xE719A4", Offset = "0xE719A4", VA = "0xE719A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xE71A90", Offset = "0xE71A90", VA = "0xE71A90")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xE71AAC", Offset = "0xE71AAC", VA = "0xE71AAC")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000AE")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002C")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0xE71AC4", Offset = "0xE71AC4", VA = "0xE71AC4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xE71ACC", Offset = "0xE71ACC", VA = "0xE71ACC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xE6F000", Offset = "0xE6F000", VA = "0xE6F000", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xE6F110", Offset = "0xE6F110", VA = "0xE6F110", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xE71AD4", Offset = "0xE71AD4", VA = "0xE71AD4")]
	[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xE6F740", Offset = "0xE6F740", VA = "0xE6F740", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xE6F794", Offset = "0xE6F794", VA = "0xE6F794", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xE6F140", Offset = "0xE6F140", VA = "0xE6F140")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000AF")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000B0")]
	[CompilerGenerated]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000266")]
			[Address(RVA = "0xE721C4", Offset = "0xE721C4", VA = "0xE721C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000268")]
			[Address(RVA = "0xE7220C", Offset = "0xE7220C", VA = "0xE7220C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0xE71D7C", Offset = "0xE71D7C", VA = "0xE71D7C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0xE71EF8", Offset = "0xE71EF8", VA = "0xE71EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0xE71EFC", Offset = "0xE71EFC", VA = "0xE71EFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0xE721CC", Offset = "0xE721CC", VA = "0xE721CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003DB")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xE71BA4", Offset = "0xE71BA4", VA = "0xE71BA4")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xE71CBC", Offset = "0xE71CBC", VA = "0xE71CBC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xE71CE4", Offset = "0xE71CE4", VA = "0xE71CE4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xE71D08", Offset = "0xE71D08", VA = "0xE71D08")]
	[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xE71DA4", Offset = "0xE71DA4", VA = "0xE71DA4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000260")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xE71DBC", Offset = "0xE71DBC", VA = "0xE71DBC", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}
}
[Token(Token = "0x20000B1")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xE72214", Offset = "0xE72214", VA = "0xE72214")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xE7227C", Offset = "0xE7227C", VA = "0xE7227C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xE723E4", Offset = "0xE723E4", VA = "0xE723E4", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xE724D0", Offset = "0xE724D0", VA = "0xE724D0")]
	[Conditional("SHOW_PATH_RESULT")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xE724D4", Offset = "0xE724D4", VA = "0xE724D4")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000B2")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("When checking line of sight to the destination, add this value to the vertical offset for targeting collision checks.")]
	public float LOSOffset;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Teleport logic will only work with TeleportPoint components that exist in the layers specified by this mask.")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xE724E0", Offset = "0xE724E0", VA = "0xE724E0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xE726D8", Offset = "0xE726D8", VA = "0xE726D8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000B3")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000270")]
	[Address(RVA = "0xE726E4", Offset = "0xE726E4", VA = "0xE726E4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xE7284C", Offset = "0xE7284C", VA = "0xE7284C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000B4")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000272")]
	[Address(RVA = "0xE72850", Offset = "0xE72850", VA = "0xE72850", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xE728D4", Offset = "0xE728D4", VA = "0xE728D4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000274")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xE72954", Offset = "0xE72954", VA = "0xE72954")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000B6")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027C")]
			[Address(RVA = "0xE72CB8", Offset = "0xE72CB8", VA = "0xE72CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027E")]
			[Address(RVA = "0xE72D00", Offset = "0xE72D00", VA = "0xE72D00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xE729F0", Offset = "0xE729F0", VA = "0xE729F0")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0xE72BB4", Offset = "0xE72BB4", VA = "0xE72BB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xE72BB8", Offset = "0xE72BB8", VA = "0xE72BB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0xE72CC0", Offset = "0xE72CC0", VA = "0xE72CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
	[Range(0.01f, 2f)]
	public float TransitionDuration;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
	[Range(0f, 1f)]
	public float TeleportDelay;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Fade to black over the duration of the transition")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xE7295C", Offset = "0xE7295C", VA = "0xE7295C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xE7297C", Offset = "0xE7297C", VA = "0xE7297C")]
	[IteratorStateMachine(typeof(<BlinkCoroutine>d__4))]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xE72A18", Offset = "0xE72A18", VA = "0xE72A18")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000B7")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600027F")]
	[Address(RVA = "0xE72D08", Offset = "0xE72D08", VA = "0xE72D08", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xE72D20", Offset = "0xE72D20", VA = "0xE72D20")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000B9")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000287")]
			[Address(RVA = "0xE72F44", Offset = "0xE72F44", VA = "0xE72F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000289")]
			[Address(RVA = "0xE72F8C", Offset = "0xE72F8C", VA = "0xE72F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0xE72DBC", Offset = "0xE72DBC", VA = "0xE72DBC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0xE72E2C", Offset = "0xE72E2C", VA = "0xE72E2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0xE72E30", Offset = "0xE72E30", VA = "0xE72E30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0xE72F4C", Offset = "0xE72F4C", VA = "0xE72F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("How much time the warp transition takes to complete.")]
	[Range(0.01f, 1f)]
	public float TransitionDuration;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xE72D28", Offset = "0xE72D28", VA = "0xE72D28", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xE72D48", Offset = "0xE72D48", VA = "0xE72D48")]
	[IteratorStateMachine(typeof(<DoWarp>d__3))]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xE72DE4", Offset = "0xE72DE4", VA = "0xE72DE4")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000BA")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000BB")]
	public enum PlabackState
	{
		[Token(Token = "0x400040B")]
		Idle = 1,
		[Token(Token = "0x400040C")]
		Preparing,
		[Token(Token = "0x400040D")]
		Buffering,
		[Token(Token = "0x400040E")]
		Ready,
		[Token(Token = "0x400040F")]
		Ended
	}

	[Token(Token = "0x20000BC")]
	public enum StereoMode
	{
		[Token(Token = "0x4000411")]
		Unknown = -1,
		[Token(Token = "0x4000412")]
		Mono,
		[Token(Token = "0x4000413")]
		TopBottom,
		[Token(Token = "0x4000414")]
		LeftRight,
		[Token(Token = "0x4000415")]
		Mesh
	}

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000033")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xE72F94", Offset = "0xE72F94", VA = "0xE72F94")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000034")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xE73284", Offset = "0xE73284", VA = "0xE73284")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000035")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xE73504", Offset = "0xE73504", VA = "0xE73504")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xE73578", Offset = "0xE73578", VA = "0xE73578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xE7367C", Offset = "0xE7367C", VA = "0xE7367C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000038")]
	public static long Duration
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xE73784", Offset = "0xE73784", VA = "0xE73784")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000039")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xE7388C", Offset = "0xE7388C", VA = "0xE7388C")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700003A")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xE73994", Offset = "0xE73994", VA = "0xE73994")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003B")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xE73A9C", Offset = "0xE73A9C", VA = "0xE73A9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003C")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xE73BA4", Offset = "0xE73BA4", VA = "0xE73BA4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xE73CAC", Offset = "0xE73CAC", VA = "0xE73CAC")]
		set
		{
		}
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xE73E14", Offset = "0xE73E14", VA = "0xE73E14")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xE7402C", Offset = "0xE7402C", VA = "0xE7402C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xE74134", Offset = "0xE74134", VA = "0xE74134")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xE7423C", Offset = "0xE7423C", VA = "0xE7423C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xE74344", Offset = "0xE74344", VA = "0xE74344")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xE744B4", Offset = "0xE744B4", VA = "0xE744B4")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xE74620", Offset = "0xE74620", VA = "0xE74620")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000BD")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000D")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xF63EF0", Offset = "0xF63EF0", VA = "0xF63EF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xF63F8C", Offset = "0xF63F8C", VA = "0xF63F8C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xF64028", Offset = "0xF64028", VA = "0xF64028", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xF64044", Offset = "0xF64044", VA = "0xF64044")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000BE")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000BF")]
	public enum ButtonType
	{
		[Token(Token = "0x4000419")]
		Play,
		[Token(Token = "0x400041A")]
		Pause,
		[Token(Token = "0x400041B")]
		FastForward,
		[Token(Token = "0x400041C")]
		Rewind,
		[Token(Token = "0x400041D")]
		SkipForward,
		[Token(Token = "0x400041E")]
		SkipBack,
		[Token(Token = "0x400041F")]
		Stop
	}

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700003D")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xF6404C", Offset = "0xF6404C", VA = "0xF6404C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xF64054", Offset = "0xF64054", VA = "0xF64054")]
		set
		{
		}
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xF64078", Offset = "0xF64078", VA = "0xF64078", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xF64ECC", Offset = "0xF64ECC", VA = "0xF64ECC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000C0")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000C1")]
	public enum VideoShape
	{
		[Token(Token = "0x4000434")]
		_360,
		[Token(Token = "0x4000435")]
		_180,
		[Token(Token = "0x4000436")]
		Quad
	}

	[Token(Token = "0x20000C2")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000438")]
		Mono,
		[Token(Token = "0x4000439")]
		TopBottom,
		[Token(Token = "0x400043A")]
		LeftRight,
		[Token(Token = "0x400043B")]
		BottomTop
	}

	[Token(Token = "0x20000C3")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002BB")]
			[Address(RVA = "0xF66428", Offset = "0xF66428", VA = "0xF66428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0xF66470", Offset = "0xF66470", VA = "0xF66470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xF655C0", Offset = "0xF655C0", VA = "0xF655C0")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xF6627C", Offset = "0xF6627C", VA = "0xF6627C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xF66280", Offset = "0xF66280", VA = "0xF66280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xF66430", Offset = "0xF66430", VA = "0xF66430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700003E")]
	public bool IsPlaying
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xF64F24", Offset = "0xF64F24", VA = "0xF64F24")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xF64F2C", Offset = "0xF64F2C", VA = "0xF64F2C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public long Duration
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xF64F38", Offset = "0xF64F38", VA = "0xF64F38")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xF64F40", Offset = "0xF64F40", VA = "0xF64F40")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xF64F48", Offset = "0xF64F48", VA = "0xF64F48")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xF64F50", Offset = "0xF64F50", VA = "0xF64F50")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xF64F58", Offset = "0xF64F58", VA = "0xF64F58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xF651E0", Offset = "0xF651E0", VA = "0xF651E0")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xF65240", Offset = "0xF65240", VA = "0xF65240")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xF6554C", Offset = "0xF6554C", VA = "0xF6554C")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xF655E8", Offset = "0xF655E8", VA = "0xF655E8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xF658C0", Offset = "0xF658C0", VA = "0xF658C0")]
	public void Play()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xF65948", Offset = "0xF65948", VA = "0xF65948")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xF659CC", Offset = "0xF659CC", VA = "0xF659CC")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xF65ABC", Offset = "0xF65ABC", VA = "0xF65ABC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xF66068", Offset = "0xF66068", VA = "0xF66068")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xF66108", Offset = "0xF66108", VA = "0xF66108")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xF6618C", Offset = "0xF6618C", VA = "0xF6618C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xF6626C", Offset = "0xF6626C", VA = "0xF6626C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000C5")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000C6")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000458")]
		Playing,
		[Token(Token = "0x4000459")]
		Paused,
		[Token(Token = "0x400045A")]
		Rewinding,
		[Token(Token = "0x400045B")]
		FastForwarding
	}

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xF66554", Offset = "0xF66554", VA = "0xF66554")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xF66880", Offset = "0xF66880", VA = "0xF66880")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xF66A50", Offset = "0xF66A50", VA = "0xF66A50")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xF66B74", Offset = "0xF66B74", VA = "0xF66B74")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xF66C70", Offset = "0xF66C70", VA = "0xF66C70")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xF66B48", Offset = "0xF66B48", VA = "0xF66B48")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xF66CD0", Offset = "0xF66CD0", VA = "0xF66CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xF66780", Offset = "0xF66780", VA = "0xF66780")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xF67000", Offset = "0xF67000", VA = "0xF67000")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000C7")]
public static class VectorUtil
{
	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xF65FF0", Offset = "0xF65FF0", VA = "0xF65FF0")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000C8")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x400045C")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x400045D")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xF67010", Offset = "0xF67010", VA = "0xF67010")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xF67664", Offset = "0xF67664", VA = "0xF67664")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xF678C0", Offset = "0xF678C0", VA = "0xF678C0")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xF67A24", Offset = "0xF67A24", VA = "0xF67A24")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xF67B8C", Offset = "0xF67B8C", VA = "0xF67B8C")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xF67D10", Offset = "0xF67D10", VA = "0xF67D10")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000C9")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000466")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xF67D20", Offset = "0xF67D20", VA = "0xF67D20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xF67D78", Offset = "0xF67D78", VA = "0xF67D78")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xF67D7C", Offset = "0xF67D7C", VA = "0xF67D7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xF6740C", Offset = "0xF6740C", VA = "0xF6740C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xF67D80", Offset = "0xF67D80", VA = "0xF67D80")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xF67F9C", Offset = "0xF67F9C", VA = "0xF67F9C")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000CA")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xF67FA4", Offset = "0xF67FA4", VA = "0xF67FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xF68504", Offset = "0xF68504", VA = "0xF68504")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xF685B0", Offset = "0xF685B0", VA = "0xF685B0")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xF68840", Offset = "0xF68840", VA = "0xF68840")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xF68914", Offset = "0xF68914", VA = "0xF68914")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xF689EC", Offset = "0xF689EC", VA = "0xF689EC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xF68A54", Offset = "0xF68A54", VA = "0xF68A54")]
	public DebugUISample()
	{
	}
}
[Token(Token = "0x20000CB")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xF68BFC", Offset = "0xF68BFC", VA = "0xF68BFC")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000CC")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xF68C04", Offset = "0xF68C04", VA = "0xF68C04")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xF68C9C", Offset = "0xF68C9C", VA = "0xF68C9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xF68D74", Offset = "0xF68D74", VA = "0xF68D74")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xF68DD0", Offset = "0xF68DD0", VA = "0xF68DD0")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000CD")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xF68DD8", Offset = "0xF68DD8", VA = "0xF68DD8")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000CE")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000CF")]
	[CompilerGenerated]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002EE")]
			[Address(RVA = "0xF691E8", Offset = "0xF691E8", VA = "0xF691E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F0")]
			[Address(RVA = "0xF69230", Offset = "0xF69230", VA = "0xF69230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xF69084", Offset = "0xF69084", VA = "0xF69084")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xF690B4", Offset = "0xF690B4", VA = "0xF690B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xF690B8", Offset = "0xF690B8", VA = "0xF690B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xF691F0", Offset = "0xF691F0", VA = "0xF691F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xF68DE0", Offset = "0xF68DE0", VA = "0xF68DE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xF68EEC", Offset = "0xF68EEC", VA = "0xF68EEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xF68E78", Offset = "0xF68E78", VA = "0xF68E78")]
	[IteratorStateMachine(typeof(<GetCenterEye>d__6))]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xF690AC", Offset = "0xF690AC", VA = "0xF690AC")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000D0")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(4f, 32f)]
	public int SubdivisionsU;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(4f, 32f)]
	public int SubdivisionsV;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xF69238", Offset = "0xF69238", VA = "0xF69238")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xF6ABE0", Offset = "0xF6ABE0", VA = "0xF6ABE0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000D1")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000045")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xF6ABE8", Offset = "0xF6ABE8", VA = "0xF6ABE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xF6AC38", Offset = "0xF6AC38", VA = "0xF6AC38")]
	public void Start()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xF6B070", Offset = "0xF6B070", VA = "0xF6B070")]
	public void Update()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xF6B148", Offset = "0xF6B148", VA = "0xF6B148")]
	[Conditional("DEBUG_LOCOMOTION_PANEL")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60002F7")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002F8")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60002F9")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60002FA")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60002FB")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60002FC")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60002FD")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60002FE")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xF6B1A0", Offset = "0xF6B1A0", VA = "0xF6B1A0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xF6B1E0", Offset = "0xF6B1E0", VA = "0xF6B1E0")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xF6B24C", Offset = "0xF6B24C", VA = "0xF6B24C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xF6B398", Offset = "0xF6B398", VA = "0xF6B398")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xF6B468", Offset = "0xF6B468", VA = "0xF6B468")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xF6AF4C", Offset = "0xF6AF4C", VA = "0xF6AF4C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xF6B538", Offset = "0xF6B538", VA = "0xF6B538")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xF6B584", Offset = "0xF6B584", VA = "0xF6B584")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xF6B694", Offset = "0xF6B694", VA = "0xF6B694")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000D2")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000D3")]
	public enum DrawMode
	{
		[Token(Token = "0x4000495")]
		Opaque,
		[Token(Token = "0x4000496")]
		OpaqueWithClip,
		[Token(Token = "0x4000497")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000498")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000046")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xF6CCD8", Offset = "0xF6CCD8", VA = "0xF6CCD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600030F")]
		[Address(RVA = "0xF6CD5C", Offset = "0xF6CD5C", VA = "0xF6CD5C")]
		set
		{
		}
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xF6B69C", Offset = "0xF6B69C", VA = "0xF6B69C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xF6C360", Offset = "0xF6C360", VA = "0xF6C360")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xF6C3D4", Offset = "0xF6C3D4", VA = "0xF6C3D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xF6C4A4", Offset = "0xF6C4A4", VA = "0xF6C4A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xF6C574", Offset = "0xF6C574", VA = "0xF6C574", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xF6C778", Offset = "0xF6C778", VA = "0xF6C778")]
	private void Update()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xF6CE18", Offset = "0xF6CE18", VA = "0xF6CE18")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000D4")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xF6CED4", Offset = "0xF6CED4", VA = "0xF6CED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xF6D274", Offset = "0xF6D274", VA = "0xF6D274")]
	private void Update()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xF6D408", Offset = "0xF6D408", VA = "0xF6D408")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xF6D410", Offset = "0xF6D410", VA = "0xF6D410")]
	public void Release()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xF6D3F8", Offset = "0xF6D3F8", VA = "0xF6D3F8")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xF6D418", Offset = "0xF6D418", VA = "0xF6D418")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000D5")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000D6")]
	[CompilerGenerated]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000322")]
			[Address(RVA = "0xF6DB60", Offset = "0xF6DB60", VA = "0xF6DB60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000324")]
			[Address(RVA = "0xF6DBA8", Offset = "0xF6DBA8", VA = "0xF6DBA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xF6DA04", Offset = "0xF6DA04", VA = "0xF6DA04")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0xF6DA5C", Offset = "0xF6DA5C", VA = "0xF6DA5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0xF6DA60", Offset = "0xF6DA60", VA = "0xF6DA60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0xF6DB68", Offset = "0xF6DB68", VA = "0xF6DB68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D7")]
	[CompilerGenerated]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000328")]
			[Address(RVA = "0xF6DD2C", Offset = "0xF6DD2C", VA = "0xF6DD2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600032A")]
			[Address(RVA = "0xF6DD74", Offset = "0xF6DD74", VA = "0xF6DD74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0xF6DA2C", Offset = "0xF6DA2C", VA = "0xF6DA2C")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0xF6DBB0", Offset = "0xF6DBB0", VA = "0xF6DBB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xF6DBB4", Offset = "0xF6DBB4", VA = "0xF6DBB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0xF6DD34", Offset = "0xF6DD34", VA = "0xF6DD34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xF6D420", Offset = "0xF6D420", VA = "0xF6D420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xF6D700", Offset = "0xF6D700", VA = "0xF6D700")]
	private void Update()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xF6D750", Offset = "0xF6D750", VA = "0xF6D750")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xF6D8C8", Offset = "0xF6D8C8", VA = "0xF6D8C8")]
	public void Release()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xF6D96C", Offset = "0xF6D96C", VA = "0xF6D96C")]
	[IteratorStateMachine(typeof(<FadeCameraClearColor>d__8))]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xF6D808", Offset = "0xF6D808", VA = "0xF6D808")]
	[IteratorStateMachine(typeof(<FadeSphere>d__9))]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xF6DA54", Offset = "0xF6DA54", VA = "0xF6DA54")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000D8")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x600032B")]
	[Address(RVA = "0xF6DD7C", Offset = "0xF6DD7C", VA = "0xF6DD7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xF6DDD0", Offset = "0xF6DDD0", VA = "0xF6DDD0")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000D9")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xF6DDD8", Offset = "0xF6DDD8", VA = "0xF6DDD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xF6DFAC", Offset = "0xF6DFAC", VA = "0xF6DFAC")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xF6E03C", Offset = "0xF6E03C", VA = "0xF6E03C")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xF6E098", Offset = "0xF6E098", VA = "0xF6E098")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000DA")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	[CompilerGenerated]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600033D")]
			[Address(RVA = "0xF6F270", Offset = "0xF6F270", VA = "0xF6F270", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600033F")]
			[Address(RVA = "0xF6F2B8", Offset = "0xF6F2B8", VA = "0xF6F2B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0xF6EFD8", Offset = "0xF6EFD8", VA = "0xF6EFD8")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0xF6F0A0", Offset = "0xF6F0A0", VA = "0xF6F0A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0xF6F0A4", Offset = "0xF6F0A4", VA = "0xF6F0A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0xF6F278", Offset = "0xF6F278", VA = "0xF6F278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xF6E0A0", Offset = "0xF6E0A0", VA = "0xF6E0A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xF6E388", Offset = "0xF6E388", VA = "0xF6E388")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xF6E674", Offset = "0xF6E674", VA = "0xF6E674")]
	private void FindHands()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xF6E99C", Offset = "0xF6E99C", VA = "0xF6E99C")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xF6EC74", Offset = "0xF6EC74", VA = "0xF6EC74")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xF6ED5C", Offset = "0xF6ED5C", VA = "0xF6ED5C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xF6EEF4", Offset = "0xF6EEF4", VA = "0xF6EEF4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xF6EE44", Offset = "0xF6EE44", VA = "0xF6EE44")]
	[IteratorStateMachine(typeof(<FadeLighting>d__17))]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xF6F000", Offset = "0xF6F000", VA = "0xF6F000")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000DC")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	public enum ManipulationType
	{
		[Token(Token = "0x40004CD")]
		Default,
		[Token(Token = "0x40004CE")]
		ForcedHand,
		[Token(Token = "0x40004CF")]
		DollyHand,
		[Token(Token = "0x40004D0")]
		DollyAttached,
		[Token(Token = "0x40004D1")]
		HorizontalScaled,
		[Token(Token = "0x40004D2")]
		VerticalScaled,
		[Token(Token = "0x40004D3")]
		Menu
	}

	[Token(Token = "0x20000DE")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000DF")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000E0")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string ObjectName;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string ObjectInstructions;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xF6F2C0", Offset = "0xF6F2C0", VA = "0xF6F2C0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xF6F320", Offset = "0xF6F320", VA = "0xF6F320")]
	public void Release()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xF6F33C", Offset = "0xF6F33C", VA = "0xF6F33C")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xF6F358", Offset = "0xF6F358", VA = "0xF6F358")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000E1")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The segments around the tip of a finger")]
	public int radialDivisions;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The fade range (finger width is 2x this)")]
	public float borderSize;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Along the fingers, each knuckle scales down by this amount.  Default is zero for uniform width along entire finger.")]
	public float fingerTaper;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Shorten the last bone of each finger; need this to account for bone structure (end bone is at finger tip instead of center). Default is 1.")]
	public float fingerTipLength;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Move the base of the 4 main fingers towards the tips, to avoid a visible mesh crack between finger webbing. Default is 0.")]
	public float webOffset;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xF6F610", Offset = "0xF6F610", VA = "0xF6F610")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xF6F870", Offset = "0xF6F870", VA = "0xF6F870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xF6FA38", Offset = "0xF6FA38", VA = "0xF6FA38")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xF7008C", Offset = "0xF7008C", VA = "0xF7008C")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xF70624", Offset = "0xF70624", VA = "0xF70624")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xF7292C", Offset = "0xF7292C", VA = "0xF7292C")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xF72CA0", Offset = "0xF72CA0", VA = "0xF72CA0")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000E2")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xF72CC4", Offset = "0xF72CC4", VA = "0xF72CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xF7302C", Offset = "0xF7302C", VA = "0xF7302C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xF72D60", Offset = "0xF72D60", VA = "0xF72D60")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xF73494", Offset = "0xF73494", VA = "0xF73494")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xF73A04", Offset = "0xF73A04", VA = "0xF73A04")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000E3")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000E4")]
	[CompilerGenerated]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600036B")]
			[Address(RVA = "0x105B730", Offset = "0x105B730", VA = "0x105B730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600036D")]
			[Address(RVA = "0x105B778", Offset = "0x105B778", VA = "0x105B778", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x105B430", Offset = "0x105B430", VA = "0x105B430")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x105B458", Offset = "0x105B458", VA = "0x105B458", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x105B45C", Offset = "0x105B45C", VA = "0x105B45C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x105B738", Offset = "0x105B738", VA = "0x105B738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xF73A14", Offset = "0xF73A14", VA = "0xF73A14")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xF73C10", Offset = "0xF73C10", VA = "0xF73C10")]
	private void Update()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xF74B4C", Offset = "0xF74B4C", VA = "0xF74B4C")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xF758E0", Offset = "0xF758E0", VA = "0xF758E0")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xF73B9C", Offset = "0xF73B9C", VA = "0xF73B9C")]
	[IteratorStateMachine(typeof(<StartDemo>d__23))]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xF73E60", Offset = "0xF73E60", VA = "0xF73E60")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xF74E40", Offset = "0xF74E40", VA = "0xF74E40")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xF75BEC", Offset = "0xF75BEC", VA = "0xF75BEC")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xF75CA0", Offset = "0xF75CA0", VA = "0xF75CA0")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xF75CD0", Offset = "0xF75CD0", VA = "0xF75CD0")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xF75AD0", Offset = "0xF75AD0", VA = "0xF75AD0")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xF75DC0", Offset = "0xF75DC0", VA = "0xF75DC0")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000E5")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x105B780", Offset = "0x105B780", VA = "0x105B780")]
	private void Start()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x105B8EC", Offset = "0x105B8EC", VA = "0x105B8EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x105B9A0", Offset = "0x105B9A0", VA = "0x105B9A0")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20000E6")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x20000E7")]
	public enum BrushState
	{
		[Token(Token = "0x4000510")]
		Idle,
		[Token(Token = "0x4000511")]
		Inking
	}

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x105B9A8", Offset = "0x105B9A8", VA = "0x105B9A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x105B9B0", Offset = "0x105B9B0", VA = "0x105B9B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x105BC60", Offset = "0x105BC60", VA = "0x105BC60")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x105BE94", Offset = "0x105BE94", VA = "0x105BE94")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x105C0D4", Offset = "0x105C0D4", VA = "0x105C0D4")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x105BB78", Offset = "0x105BB78", VA = "0x105BB78")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x105C1A4", Offset = "0x105C1A4", VA = "0x105C1A4")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20000E8")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x105C240", Offset = "0x105C240", VA = "0x105C240")]
	private void Start()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x105C3AC", Offset = "0x105C3AC", VA = "0x105C3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x105C598", Offset = "0x105C598", VA = "0x105C598")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20000E9")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x105C5A0", Offset = "0x105C5A0", VA = "0x105C5A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x105C788", Offset = "0x105C788", VA = "0x105C788")]
	private void Update()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x105C928", Offset = "0x105C928", VA = "0x105C928")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20000EA")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	[CompilerGenerated]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x105D58C", Offset = "0x105D58C", VA = "0x105D58C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000391")]
			[Address(RVA = "0x105D5D4", Offset = "0x105D5D4", VA = "0x105D5D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x105D2F4", Offset = "0x105D2F4", VA = "0x105D2F4")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x105D438", Offset = "0x105D438", VA = "0x105D438", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x105D43C", Offset = "0x105D43C", VA = "0x105D43C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x105D594", Offset = "0x105D594", VA = "0x105D594", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[CompilerGenerated]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000395")]
			[Address(RVA = "0x105D748", Offset = "0x105D748", VA = "0x105D748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000397")]
			[Address(RVA = "0x105D790", Offset = "0x105D790", VA = "0x105D790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x105D31C", Offset = "0x105D31C", VA = "0x105D31C")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x105D5DC", Offset = "0x105D5DC", VA = "0x105D5DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x105D5E0", Offset = "0x105D5E0", VA = "0x105D5E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x105D750", Offset = "0x105D750", VA = "0x105D750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x105C930", Offset = "0x105C930", VA = "0x105C930")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x105CC78", Offset = "0x105CC78", VA = "0x105CC78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x105D018", Offset = "0x105D018", VA = "0x105D018")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x105D18C", Offset = "0x105D18C", VA = "0x105D18C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x105D108", Offset = "0x105D108", VA = "0x105D108")]
	[IteratorStateMachine(typeof(<FadeToCurrentStyle>d__18))]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x105D270", Offset = "0x105D270", VA = "0x105D270")]
	[IteratorStateMachine(typeof(<FadeToDefaultPassthrough>d__19))]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x105D344", Offset = "0x105D344", VA = "0x105D344")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x105D364", Offset = "0x105D364", VA = "0x105D364")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x105D384", Offset = "0x105D384", VA = "0x105D384")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x105CC10", Offset = "0x105CC10", VA = "0x105CC10")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x105D3B8", Offset = "0x105D3B8", VA = "0x105D3B8")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x105D3C4", Offset = "0x105D3C4", VA = "0x105D3C4")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x105CC90", Offset = "0x105CC90", VA = "0x105CC90")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x105D3D0", Offset = "0x105D3D0", VA = "0x105D3D0")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20000ED")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x105D798", Offset = "0x105D798", VA = "0x105D798")]
	private void Start()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x105D84C", Offset = "0x105D84C", VA = "0x105D84C")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20000EE")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x105D854", Offset = "0x105D854", VA = "0x105D854")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x105D8C0", Offset = "0x105D8C0", VA = "0x105D8C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x105DBB4", Offset = "0x105DBB4", VA = "0x105DBB4")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20000EF")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x105DBBC", Offset = "0x105DBBC", VA = "0x105DBBC")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x105E010", Offset = "0x105E010", VA = "0x105E010")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20000F0")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x105E018", Offset = "0x105E018", VA = "0x105E018")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x105E280", Offset = "0x105E280", VA = "0x105E280")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x105E2CC", Offset = "0x105E2CC", VA = "0x105E2CC")]
	public void Release()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x105E30C", Offset = "0x105E30C", VA = "0x105E30C")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20000F1")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	[CompilerGenerated]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x17000053")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003AE")]
			[Address(RVA = "0x105EA28", Offset = "0x105EA28", VA = "0x105EA28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003B0")]
			[Address(RVA = "0x105EA70", Offset = "0x105EA70", VA = "0x105EA70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x105E8F0", Offset = "0x105E8F0", VA = "0x105E8F0")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x105E930", Offset = "0x105E930", VA = "0x105E930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x105E934", Offset = "0x105E934", VA = "0x105E934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x105EA30", Offset = "0x105EA30", VA = "0x105EA30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x105E314", Offset = "0x105E314", VA = "0x105E314")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x105E338", Offset = "0x105E338", VA = "0x105E338")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x105E440", Offset = "0x105E440", VA = "0x105E440")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x105E4E4", Offset = "0x105E4E4", VA = "0x105E4E4")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x105E738", Offset = "0x105E738", VA = "0x105E738")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x105E7DC", Offset = "0x105E7DC", VA = "0x105E7DC")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x105E6B4", Offset = "0x105E6B4", VA = "0x105E6B4")]
	[IteratorStateMachine(typeof(<PlayPopCallback>d__18))]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x105E918", Offset = "0x105E918", VA = "0x105E918")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x20000F3")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x105EA78", Offset = "0x105EA78", VA = "0x105EA78")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x105ED88", Offset = "0x105ED88", VA = "0x105ED88")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x20000F4")]
[RequireComponent(typeof(OVRSceneAnchor))]
[DefaultExecutionOrder(30)]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Add a point at ceiling.")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x105ED90", Offset = "0x105ED90", VA = "0x105ED90")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x105EFA8", Offset = "0x105EFA8", VA = "0x105EFA8")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x105F418", Offset = "0x105F418", VA = "0x105F418")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x105EE30", Offset = "0x105EE30", VA = "0x105EE30")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x105F638", Offset = "0x105F638", VA = "0x105F638")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x105FB24", Offset = "0x105FB24", VA = "0x105FB24")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x20000F5")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x20000F6")]
	[CompilerGenerated]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C0")]
			[Address(RVA = "0x105FD58", Offset = "0x105FD58", VA = "0x105FD58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C2")]
			[Address(RVA = "0x105FDA0", Offset = "0x105FDA0", VA = "0x105FDA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x105FBA0", Offset = "0x105FBA0", VA = "0x105FBA0")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x105FC58", Offset = "0x105FC58", VA = "0x105FC58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x105FC5C", Offset = "0x105FC5C", VA = "0x105FC5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x105FD60", Offset = "0x105FD60", VA = "0x105FD60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x105FB2C", Offset = "0x105FB2C", VA = "0x105FB2C")]
	[IteratorStateMachine(typeof(<DelayedLoad>d__0))]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x105FBC8", Offset = "0x105FBC8", VA = "0x105FBC8", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x105FBE8", Offset = "0x105FBE8", VA = "0x105FBE8", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x105FC50", Offset = "0x105FC50", VA = "0x105FC50")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x20000F7")]
[RequireComponent(typeof(OVRManager))]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x105FDA8", Offset = "0x105FDA8", VA = "0x105FDA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x105FDAC", Offset = "0x105FDAC", VA = "0x105FDAC")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x20000F8")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x105FDB4", Offset = "0x105FDB4", VA = "0x105FDB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x105FE2C", Offset = "0x105FE2C", VA = "0x105FE2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x105FEB0", Offset = "0x105FEB0", VA = "0x105FEB0")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x20000F9")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x20000FA")]
	public enum Method
	{
		[Token(Token = "0x400056D")]
		Adapt,
		[Token(Token = "0x400056E")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x400056F")]
		Scale,
		[Token(Token = "0x4000570")]
		None
	}

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(15f)]
	public Method ScalingX;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 0.5f)]
	public float PaddingX;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-0.5f, 0f)]
	public float PaddingXMax;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(15f)]
	public Method ScalingY;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 0.5f)]
	public float PaddingY;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(-0.5f, 0f)]
	public float PaddingYMax;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(15f)]
	public Method ScalingZ;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.5f)]
	public float PaddingZ;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-0.5f, 0f)]
	public float PaddingZMax;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x17000057")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x105FEC0", Offset = "0x105FEC0", VA = "0x105FEC0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000058")]
	public Vector3 NewSize
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x105FEDC", Offset = "0x105FEDC", VA = "0x105FEDC")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x105FEE8", Offset = "0x105FEE8", VA = "0x105FEE8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x105FEF4", Offset = "0x105FEF4", VA = "0x105FEF4")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x105FF00", Offset = "0x105FF00", VA = "0x105FF00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public Mesh Mesh
	{
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x105FF0C", Offset = "0x105FF0C", VA = "0x105FF0C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x105FF14", Offset = "0x105FF14", VA = "0x105FF14")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x105FF1C", Offset = "0x105FF1C", VA = "0x105FF1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1060058", Offset = "0x1060058", VA = "0x1060058")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x20000FB")]
public class SimpleResizer
{
	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x105F790", Offset = "0x105F790", VA = "0x105F790")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x1060060", Offset = "0x1060060", VA = "0x1060060")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x10602E4", Offset = "0x10602E4", VA = "0x10602E4")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x105F788", Offset = "0x105F788", VA = "0x105F788")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FC")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x106038C", Offset = "0x106038C", VA = "0x106038C", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x1060390", Offset = "0x1060390", VA = "0x1060390", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x10607F8", Offset = "0x10607F8", VA = "0x10607F8")]
	public Spawnable()
	{
	}
}
[Token(Token = "0x20000FD")]
[RequireComponent(typeof(OVRSceneAnchor))]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	public enum GeometryType
	{
		[Token(Token = "0x4000578")]
		Plane,
		[Token(Token = "0x4000579")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x20000FF")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1060850", Offset = "0x1060850", VA = "0x1060850")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1060C7C", Offset = "0x1060C7C", VA = "0x1060C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x10615B4", Offset = "0x10615B4", VA = "0x10615B4")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x106148C", Offset = "0x106148C", VA = "0x106148C")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1061634", Offset = "0x1061634", VA = "0x1061634")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000100")]
[RequireComponent(typeof(OVRSpatialAnchor))]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x2000101")]
	[CompilerGenerated]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F1")]
			[Address(RVA = "0x10623FC", Offset = "0x10623FC", VA = "0x10623FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F3")]
			[Address(RVA = "0x1062444", Offset = "0x1062444", VA = "0x1062444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1061830", Offset = "0x1061830", VA = "0x1061830")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1062280", Offset = "0x1062280", VA = "0x1062280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1062284", Offset = "0x1062284", VA = "0x1062284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1062404", Offset = "0x1062404", VA = "0x1062404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400057C")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FormerlySerializedAs("canvas_")]
	[SerializeField]
	private Canvas _canvas;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[FormerlySerializedAs("pivot_")]
	[SerializeField]
	private Transform _pivot;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[FormerlySerializedAs("anchorMenu_")]
	[SerializeField]
	private GameObject _anchorMenu;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[FormerlySerializedAs("anchorName_")]
	[SerializeField]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[FormerlySerializedAs("saveIcon_")]
	private GameObject _saveIcon;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[FormerlySerializedAs("labelImage_")]
	[SerializeField]
	private Image _labelImage;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[FormerlySerializedAs("labelBaseColor_")]
	private Color _labelBaseColor;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[FormerlySerializedAs("labelHighlightColor_")]
	[SerializeField]
	private Color _labelHighlightColor;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[FormerlySerializedAs("labelSelectedColor_")]
	private Color _labelSelectedColor;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("uiManager_")]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("renderers_")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[FormerlySerializedAs("buttonList_")]
	private List<Button> _buttonList;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x1700005B")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1061CDC", Offset = "0x1061CDC", VA = "0x1061CDC")]
		set
		{
		}
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x106163C", Offset = "0x106163C", VA = "0x106163C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x10617BC", Offset = "0x10617BC", VA = "0x10617BC")]
	[IteratorStateMachine(typeof(<Start>d__20))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1061858", Offset = "0x1061858", VA = "0x1061858")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1061AD0", Offset = "0x1061AD0", VA = "0x1061AD0")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1061BA0", Offset = "0x1061BA0", VA = "0x1061BA0")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1061C0C", Offset = "0x1061C0C", VA = "0x1061C0C")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1061CFC", Offset = "0x1061CFC", VA = "0x1061CFC")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1061E18", Offset = "0x1061E18", VA = "0x1061E18")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1061F20", Offset = "0x1061F20", VA = "0x1061F20")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x10618A8", Offset = "0x10618A8", VA = "0x10618A8")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x10619DC", Offset = "0x10619DC", VA = "0x10619DC")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1061FF0", Offset = "0x1061FF0", VA = "0x1061FF0")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1062128", Offset = "0x1062128", VA = "0x1062128")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000102")]
[RequireComponent(typeof(SpatialAnchorLoader))]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000103")]
	public enum AnchorMode
	{
		[Token(Token = "0x40005A5")]
		Create,
		[Token(Token = "0x40005A6")]
		Select
	}

	[Token(Token = "0x2000104")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("createModeButton_")]
	private GameObject _createModeButton;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("selectModeButton_")]
	private GameObject _selectModeButton;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[FormerlySerializedAs("trackedDevice_")]
	private Transform _trackedDevice;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[FormerlySerializedAs("lineRenderer_")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[FormerlySerializedAs("buttonList_")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("placementPreview_")]
	private GameObject _placementPreview;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[FormerlySerializedAs("anchorPlacementTransform_")]
	[SerializeField]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x1700005E")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x106244C", Offset = "0x106244C", VA = "0x106244C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1062454", Offset = "0x1062454", VA = "0x1062454")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1062520", Offset = "0x1062520", VA = "0x1062520")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1062670", Offset = "0x1062670", VA = "0x1062670")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1062AE0", Offset = "0x1062AE0", VA = "0x1062AE0")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1062B4C", Offset = "0x1062B4C", VA = "0x1062B4C")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1062608", Offset = "0x1062608", VA = "0x1062608")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1062DCC", Offset = "0x1062DCC", VA = "0x1062DCC")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1062E54", Offset = "0x1062E54", VA = "0x1062E54")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1062E74", Offset = "0x1062E74", VA = "0x1062E74")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1062DAC", Offset = "0x1062DAC", VA = "0x1062DAC")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x10629EC", Offset = "0x10629EC", VA = "0x10629EC")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1063074", Offset = "0x1063074", VA = "0x1063074")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1062EFC", Offset = "0x1062EFC", VA = "0x1062EFC")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1062FE8", Offset = "0x1062FE8", VA = "0x1062FE8")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1063174", Offset = "0x1063174", VA = "0x1063174")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1063008", Offset = "0x1063008", VA = "0x1063008")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1063040", Offset = "0x1063040", VA = "0x1063040")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1062770", Offset = "0x1062770", VA = "0x1062770")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1063260", Offset = "0x1063260", VA = "0x1063260")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1063288", Offset = "0x1063288", VA = "0x1063288")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1063318", Offset = "0x1063318", VA = "0x1063318")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1063460", Offset = "0x1063460", VA = "0x1063460")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000105")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1062BA0", Offset = "0x1062BA0", VA = "0x1062BA0")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x106361C", Offset = "0x106361C", VA = "0x106361C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x106353C", Offset = "0x106353C", VA = "0x106353C")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x10636A0", Offset = "0x10636A0", VA = "0x10636A0")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x10634B0", Offset = "0x10634B0", VA = "0x10634B0")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1063850", Offset = "0x1063850", VA = "0x1063850")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x2000106")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1063988", Offset = "0x1063988", VA = "0x1063988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1063B9C", Offset = "0x1063B9C", VA = "0x1063B9C")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1063CA0", Offset = "0x1063CA0", VA = "0x1063CA0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000108")]
public class LocalizedHaptics : MonoBehaviour
{
	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1063CC4", Offset = "0x1063CC4", VA = "0x1063CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1063CEC", Offset = "0x1063CEC", VA = "0x1063CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1063E28", Offset = "0x1063E28", VA = "0x1063E28")]
	public LocalizedHaptics()
	{
	}
}
[Token(Token = "0x2000109")]
public class SceneSettings : MonoBehaviour
{
	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Time")]
	private float m_fixedTimeStep;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[Header("Physics")]
	private float m_gravityScalar;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_defaultContactOffset;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1063E38", Offset = "0x1063E38", VA = "0x1063E38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1063ED0", Offset = "0x1063ED0", VA = "0x1063ED0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1063ED8", Offset = "0x1063ED8", VA = "0x1063ED8")]
	private static void CollidersSetContactOffset(float contactOffset)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1063F9C", Offset = "0x1063F9C", VA = "0x1063F9C")]
	public SceneSettings()
	{
	}
}
[Token(Token = "0x200010A")]
public class StylusTip : MonoBehaviour
{
	[Token(Token = "0x40005B3")]
	private const int MaxBreadCrumbs = 60;

	[Token(Token = "0x40005B4")]
	private const float BreadCrumbMinSize = 0.005f;

	[Token(Token = "0x40005B5")]
	private const float BreadCrumbMaxSize = 0.02f;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("External")]
	private Transform m_trackingSpace;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Settings")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_breadCrumbPf;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_breadCrumbContainer;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] m_breadCrumbs;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_breadCrumbIndexPrev;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_breadCrumbIndexCurr;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1063FBC", Offset = "0x1063FBC", VA = "0x1063FBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x106423C", Offset = "0x106423C", VA = "0x106423C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x106466C", Offset = "0x106466C", VA = "0x106466C")]
	private static Pose GetT_Device_StylusTip(OVRInput.Controller controller)
	{
		return default(Pose);
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1064798", Offset = "0x1064798", VA = "0x1064798")]
	public StylusTip()
	{
	}
}
[Token(Token = "0x200010B")]
public class UiAxis1dInspector : MonoBehaviour
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Settings")]
	private float m_minExtent;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_maxExtent;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Components")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Slider m_slider;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x10647B0", Offset = "0x10647B0", VA = "0x10647B0")]
	public void SetExtents(float minExtent, float maxExtent)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x10647B8", Offset = "0x10647B8", VA = "0x10647B8")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x10647DC", Offset = "0x10647DC", VA = "0x10647DC")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x10648E0", Offset = "0x10648E0", VA = "0x10648E0")]
	public UiAxis1dInspector()
	{
	}
}
[Token(Token = "0x200010C")]
public class UiAxis2dInspector : MonoBehaviour
{
	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Settings")]
	private Vector2 m_xExtent;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 m_yExtent;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Components")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image m_handle;

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x10648F0", Offset = "0x10648F0", VA = "0x10648F0")]
	public void SetExtents(Vector2 xExtent, Vector2 yExtent)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x10648FC", Offset = "0x10648FC", VA = "0x10648FC")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1064920", Offset = "0x1064920", VA = "0x1064920")]
	public void SetValue(bool isTouching, Vector2 value)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1064CE8", Offset = "0x1064CE8", VA = "0x1064CE8")]
	public UiAxis2dInspector()
	{
	}
}
[Token(Token = "0x200010D")]
public class UiBoolInspector : MonoBehaviour
{
	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Components")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle m_toggle;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1064CFC", Offset = "0x1064CFC", VA = "0x1064CFC")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1064D20", Offset = "0x1064D20", VA = "0x1064D20")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1064D40", Offset = "0x1064D40", VA = "0x1064D40")]
	public UiBoolInspector()
	{
	}
}
[Token(Token = "0x200010E")]
public class UiDeviceInspector : MonoBehaviour
{
	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Settings")]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[Header("Left Column Components")]
	private TextMeshProUGUI m_title;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_status;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UiBoolInspector m_thumbRestTouch;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UiAxis1dInspector m_thumbRestForce;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UiAxis1dInspector m_indexTrigger;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UiAxis1dInspector m_gripTrigger;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UiAxis1dInspector m_stylusTipForce;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UiAxis1dInspector m_indexCurl1d;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UiAxis1dInspector m_indexSlider1d;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[Header("Right Column Components")]
	private UiBoolInspector m_ax;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UiBoolInspector m_axTouch;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UiBoolInspector m_by;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UiBoolInspector m_byTouch;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private UiBoolInspector m_indexTouch;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UiAxis2dInspector m_thumbstick;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1064D48", Offset = "0x1064D48", VA = "0x1064D48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1064D70", Offset = "0x1064D70", VA = "0x1064D70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x10652F8", Offset = "0x10652F8", VA = "0x10652F8")]
	private static string ToDeviceModel()
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1065338", Offset = "0x1065338", VA = "0x1065338")]
	private static string ToHandednessString(OVRInput.Handedness handedness)
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x10653BC", Offset = "0x10653BC", VA = "0x10653BC")]
	public UiDeviceInspector()
	{
	}
}
[Token(Token = "0x200010F")]
public class UiSceneMenu : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Settings")]
	private VerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_labelPf;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2 s_lastThumbstickL;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 s_lastThumbstickR;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Scene m_activeScene;

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x10653CC", Offset = "0x10653CC", VA = "0x10653CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1065698", Offset = "0x1065698", VA = "0x1065698")]
	private void Update()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x10657B0", Offset = "0x10657B0", VA = "0x10657B0")]
	private bool InputPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x106584C", Offset = "0x106584C", VA = "0x106584C")]
	private bool InputNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1065890", Offset = "0x1065890", VA = "0x1065890")]
	private bool KeyboardPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x106592C", Offset = "0x106592C", VA = "0x106592C")]
	private bool KeyboardNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x106589C", Offset = "0x106589C", VA = "0x106589C")]
	private bool ThumbstickPrevScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1065938", Offset = "0x1065938", VA = "0x1065938")]
	private bool ThumbstickNextScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x10659C8", Offset = "0x10659C8", VA = "0x10659C8")]
	private Vector2 GetLastThumbstickValue(OVRInput.Controller controller)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x10657F4", Offset = "0x10657F4", VA = "0x10657F4")]
	private void ChangeScene(int nextScene)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1065470", Offset = "0x1065470", VA = "0x1065470")]
	private void CreateLabel(int sceneIndex, string scenePath)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1065A30", Offset = "0x1065A30", VA = "0x1065A30")]
	public UiSceneMenu()
	{
	}
}
[Token(Token = "0x2000110")]
public class UiVectorInspector : MonoBehaviour
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("Components")]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x1065A38", Offset = "0x1065A38", VA = "0x1065A38")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1065A5C", Offset = "0x1065A5C", VA = "0x1065A5C")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x1065B0C", Offset = "0x1065B0C", VA = "0x1065B0C")]
	public UiVectorInspector()
	{
	}
}
[Token(Token = "0x2000111")]
[DisallowMultipleComponent]
public class TestOutline : MonoBehaviour
{
	[Token(Token = "0x2000112")]
	public enum Mode
	{
		[Token(Token = "0x40005F3")]
		OutlineAll,
		[Token(Token = "0x40005F4")]
		OutlineVisible,
		[Token(Token = "0x40005F5")]
		OutlineHidden,
		[Token(Token = "0x40005F6")]
		OutlineAndSilhouette,
		[Token(Token = "0x40005F7")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x2000113")]
	private class ListVector3
	{
		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x10679C8", Offset = "0x10679C8", VA = "0x10679C8")]
		public ListVector3()
		{
		}
	}

	[Token(Token = "0x2000114")]
	[CompilerGenerated]
	private sealed class <Init>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestOutline <>4__this;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600045F")]
			[Address(RVA = "0x1068124", Offset = "0x1068124", VA = "0x1068124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000461")]
			[Address(RVA = "0x106816C", Offset = "0x106816C", VA = "0x106816C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x10668BC", Offset = "0x10668BC", VA = "0x10668BC")]
		[DebuggerHidden]
		public <Init>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x1067CC8", Offset = "0x1067CC8", VA = "0x1067CC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x1067CCC", Offset = "0x1067CCC", VA = "0x1067CCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x106812C", Offset = "0x106812C", VA = "0x106812C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ColorCode;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OutlineColors outlineColors;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, Color> colorTranslation;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[Range(0f, 10f)]
	private float outlineWidth;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Optional")]
	[Tooltip("Precompute enabled: Per-vertex calculations are performed in the editor and serialized with the object. Precompute disabled: Per-vertex calculations are performed at runtime in Awake(). This may cause a pause for large meshes.")]
	[SerializeField]
	private bool precomputeOutline;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer[] renderers;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material outlineFillMaterial;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool needsUpdate;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool asOutline;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine routine;

	[Token(Token = "0x1700005F")]
	public Mode OutlineMode
	{
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x1065B14", Offset = "0x1065B14", VA = "0x1065B14")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x1065B1C", Offset = "0x1065B1C", VA = "0x1065B1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x1065B2C", Offset = "0x1065B2C", VA = "0x1065B2C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x1065B38", Offset = "0x1065B38", VA = "0x1065B38")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public float OutlineWidth
	{
		[Token(Token = "0x6000449")]
		[Address(RVA = "0x1065B4C", Offset = "0x1065B4C", VA = "0x1065B4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600044A")]
		[Address(RVA = "0x1065B54", Offset = "0x1065B54", VA = "0x1065B54")]
		set
		{
		}
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1065B64", Offset = "0x1065B64", VA = "0x1065B64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1066358", Offset = "0x1066358", VA = "0x1066358")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1066848", Offset = "0x1066848", VA = "0x1066848")]
	[IteratorStateMachine(typeof(<Init>d__29))]
	private IEnumerator Init()
	{
		return null;
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x10668E4", Offset = "0x10668E4", VA = "0x10668E4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1066C74", Offset = "0x1066C74", VA = "0x1066C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1066E34", Offset = "0x1066E34", VA = "0x1066E34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1066E54", Offset = "0x1066E54", VA = "0x1066E54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x10669FC", Offset = "0x10669FC", VA = "0x10669FC")]
	private void Bake()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1065FE8", Offset = "0x1065FE8", VA = "0x1065FE8")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1066E58", Offset = "0x1066E58", VA = "0x1066E58")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x10679D0", Offset = "0x10679D0", VA = "0x10679D0")]
	private void CombineSubmeshes(Mesh mesh, Material[] materials)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1066C88", Offset = "0x1066C88", VA = "0x1066C88")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1067A78", Offset = "0x1067A78", VA = "0x1067A78")]
	public void SetColor(int color)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x10663F4", Offset = "0x10663F4", VA = "0x10663F4")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1067B50", Offset = "0x1067B50", VA = "0x1067B50")]
	public TestOutline()
	{
	}
}
[Token(Token = "0x2000116")]
public sealed class AnchorCloseInterface : AnchorUIBase, IAnchorStorageLocation
{
	[Token(Token = "0x2000117")]
	[CompilerGenerated]
	private sealed class <WaitForAnchorCreation>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRSpatialAnchor anchor;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnchorCloseInterface <>4__this;

		[Token(Token = "0x17000065")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000478")]
			[Address(RVA = "0x1069140", Offset = "0x1069140", VA = "0x1069140", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600047A")]
			[Address(RVA = "0x1069188", Offset = "0x1069188", VA = "0x1069188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x1068E88", Offset = "0x1068E88", VA = "0x1068E88")]
		[DebuggerHidden]
		public <WaitForAnchorCreation>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x1069090", Offset = "0x1069090", VA = "0x1069090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x1069094", Offset = "0x1069094", VA = "0x1069094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x1069148", Offset = "0x1069148", VA = "0x1069148", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_InputField inputField;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnchorDrawing anchorDrawing;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string textBeforePause;

	[Token(Token = "0x17000064")]
	public bool IsLocal
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0x10682CC", Offset = "0x10682CC", VA = "0x10682CC", Slot = "5")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000467")]
		[Address(RVA = "0x10682D4", Offset = "0x10682D4", VA = "0x10682D4", Slot = "6")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x10682E0", Offset = "0x10682E0", VA = "0x10682E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x10683CC", Offset = "0x10683CC", VA = "0x10683CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x10684B8", Offset = "0x10684B8", VA = "0x10684B8")]
	private void SaveAfterUnpause()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x10684D8", Offset = "0x10684D8", VA = "0x10684D8")]
	private void CheckTextAndSave()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x10685E8", Offset = "0x10685E8", VA = "0x10685E8")]
	public void SwitchInputMode()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1068540", Offset = "0x1068540", VA = "0x1068540")]
	private void SaveDelegate(string _)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x10688C0", Offset = "0x10688C0", VA = "0x10688C0")]
	public void SaveScale()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x10688C4", Offset = "0x10688C4", VA = "0x10688C4")]
	public void DeleteInterface()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1068A48", Offset = "0x1068A48", VA = "0x1068A48")]
	public void DeleteInterfaceAnchor()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1068838", Offset = "0x1068838", VA = "0x1068838")]
	[ContextMenu("SaveAnchor")]
	private void SaveTextOfAnchor()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1068DF8", Offset = "0x1068DF8", VA = "0x1068DF8")]
	[IteratorStateMachine(typeof(<WaitForAnchorCreation>d__17))]
	private IEnumerator WaitForAnchorCreation(OVRSpatialAnchor anchor)
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1068EB0", Offset = "0x1068EB0", VA = "0x1068EB0", Slot = "4")]
	protected override void DirectRecreate()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1069080", Offset = "0x1069080", VA = "0x1069080")]
	public AnchorCloseInterface()
	{
	}
}
[Token(Token = "0x2000118")]
[RequireComponent(typeof(AnchorCloseInterface))]
public sealed class AnchorDrawing : AnchorUIBase
{
	[Token(Token = "0x2000119")]
	[CompilerGenerated]
	private sealed class <WaitForAnchorCreation>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnchorDrawing <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600048E")]
			[Address(RVA = "0x106B014", Offset = "0x106B014", VA = "0x106B014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000490")]
			[Address(RVA = "0x106B05C", Offset = "0x106B05C", VA = "0x106B05C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x106AF6C", Offset = "0x106AF6C", VA = "0x106AF6C")]
		[DebuggerHidden]
		public <WaitForAnchorCreation>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x106AF9C", Offset = "0x106AF9C", VA = "0x106AF9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x106AFA0", Offset = "0x106AFA0", VA = "0x106AFA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x106B01C", Offset = "0x106B01C", VA = "0x106B01C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_InputField inputField;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform drawingParent;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AnchorDrawing anchorDrawing;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnchorCloseInterface anchorClose;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSpatialAnchor spatialAnchor;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material drawingMaterial;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<LineRenderer> lineRenderers;

	[Token(Token = "0x400060F")]
	private const float minPressureReticule = 0.2f;

	[Token(Token = "0x4000610")]
	public const float minPressureDrawing = 0.5f;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject switchButton;

	[Token(Token = "0x17000067")]
	public bool HasDrawing
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x1069328", Offset = "0x1069328", VA = "0x1069328")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000E")]
	public static event Action<OVRPlugin.Handedness, AnchorDrawing> ActivateDrawing
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x1069190", Offset = "0x1069190", VA = "0x1069190")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600047C")]
		[Address(RVA = "0x106925C", Offset = "0x106925C", VA = "0x106925C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x106937C", Offset = "0x106937C", VA = "0x106937C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x10694B8", Offset = "0x10694B8", VA = "0x10694B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x10695C4", Offset = "0x10695C4", VA = "0x10695C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1069824", Offset = "0x1069824", VA = "0x1069824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1069828", Offset = "0x1069828", VA = "0x1069828")]
	private void InitReticules()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x10699AC", Offset = "0x10699AC", VA = "0x10699AC")]
	public void ConvertTrailToLine(TrailRenderer trailRenderer, List<int> indexes)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x106A268", Offset = "0x106A268", VA = "0x106A268")]
	private void AddPreviousPointsToBarycenter(ref Vector3 barycentre, ref int totalPoints)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x106A590", Offset = "0x106A590", VA = "0x106A590")]
	private void SaveDrawing()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x106AB14", Offset = "0x106AB14", VA = "0x106AB14")]
	public void CreateDrawingFromSave(in PointsData[] points, out List<LineRenderer> lineRendererOut)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x106AD38", Offset = "0x106AD38", VA = "0x106AD38")]
	public void SetSpatialAnchor(SpatialAnchors spatialAnchor)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x106AE00", Offset = "0x106AE00", VA = "0x106AE00", Slot = "4")]
	protected override void DirectRecreate()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x106AEF8", Offset = "0x106AEF8", VA = "0x106AEF8")]
	[IteratorStateMachine(typeof(<WaitForAnchorCreation>d__26))]
	private IEnumerator WaitForAnchorCreation()
	{
		return null;
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x106AF94", Offset = "0x106AF94", VA = "0x106AF94")]
	public AnchorDrawing()
	{
	}
}
[Token(Token = "0x200011A")]
public sealed class AnchorScale : MonoBehaviour
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject scaleSmall;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject scaleNormal;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject scaleLarge;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject scalesDisplayUI;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject scalesDisplay;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnchorCloseInterface anchorCloseInterface;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x106B064", Offset = "0x106B064", VA = "0x106B064")]
	public void ToggleScalesDisplay()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x106B110", Offset = "0x106B110", VA = "0x106B110")]
	public void ScaleAnchor(float scaleValue)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x106B210", Offset = "0x106B210", VA = "0x106B210")]
	public AnchorScale()
	{
	}
}
[Token(Token = "0x200011B")]
public abstract class AnchorUIBase : MonoBehaviour
{
	[Token(Token = "0x200011C")]
	[CompilerGenerated]
	private sealed class <WaitBeforeRecreate>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnchorUIBase <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600049C")]
			[Address(RVA = "0x106B3EC", Offset = "0x106B3EC", VA = "0x106B3EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600049E")]
			[Address(RVA = "0x106B434", Offset = "0x106B434", VA = "0x106B434", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x106B318", Offset = "0x106B318", VA = "0x106B318")]
		[DebuggerHidden]
		public <WaitBeforeRecreate>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x106B340", Offset = "0x106B340", VA = "0x106B340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x106B344", Offset = "0x106B344", VA = "0x106B344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x106B3F4", Offset = "0x106B3F4", VA = "0x106B3F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static SpatialAnchors spatialAnchorRef;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1068770", Offset = "0x1068770", VA = "0x1068770")]
	public void SetSpatialAnchorRef(SpatialAnchors spatialAnchorRef)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x106B218", Offset = "0x106B218", VA = "0x106B218")]
	public void RecreateAnchor()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x106B2A4", Offset = "0x106B2A4", VA = "0x106B2A4")]
	[IteratorStateMachine(typeof(<WaitBeforeRecreate>d__3))]
	protected IEnumerator WaitBeforeRecreate()
	{
		return null;
	}

	[Token(Token = "0x6000497")]
	protected abstract void DirectRecreate();

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1069088", Offset = "0x1069088", VA = "0x1069088")]
	protected AnchorUIBase()
	{
	}
}
[Token(Token = "0x200011D")]
public sealed class AnchorVisualizer : MonoBehaviour
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRPlugin.Handedness handedness;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject reticule;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isDrawing;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material drawingMaterial;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject anchorVisualizerPrefab;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Plane plane;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AnchorDrawing currentAnchorDrawing;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform handTransform;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int sign;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Bounds2d planeBounds;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject tip;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TrailRenderer trailRenderer;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool wasEmitting;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<int> indexes;

	[Token(Token = "0x1700006C")]
	public static GameObject AnchorVisualizerGO
	{
		[Token(Token = "0x600049F")]
		[Address(RVA = "0x106B43C", Offset = "0x106B43C", VA = "0x106B43C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x106B484", Offset = "0x106B484", VA = "0x106B484")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x106B4D4", Offset = "0x106B4D4", VA = "0x106B4D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x106BA28", Offset = "0x106BA28", VA = "0x106BA28")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x106BAA4", Offset = "0x106BAA4", VA = "0x106BAA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x106BCA4", Offset = "0x106BCA4", VA = "0x106BCA4")]
	private void DisplayReticuleAndDraw()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x106BEDC", Offset = "0x106BEDC", VA = "0x106BEDC")]
	private void OnActivateDrawing(OVRPlugin.Handedness hand, AnchorDrawing anchorDrawing)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x106C420", Offset = "0x106C420", VA = "0x106C420")]
	private void AddOldDrawings()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x106C868", Offset = "0x106C868", VA = "0x106C868")]
	private void OnDisableDrawing()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1069678", Offset = "0x1069678", VA = "0x1069678")]
	public void ClearDrawing()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x106CA9C", Offset = "0x106CA9C", VA = "0x106CA9C")]
	public AnchorVisualizer()
	{
	}
}
[Token(Token = "0x200011E")]
public struct Bounds2d
{
	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 center;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2 extents;

	[Token(Token = "0x1700006D")]
	public Vector2 min
	{
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x106CAA4", Offset = "0x106CAA4", VA = "0x106CAA4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700006E")]
	public Vector2 max
	{
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x106CAB4", Offset = "0x106CAB4", VA = "0x106CAB4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x106C414", Offset = "0x106C414", VA = "0x106C414")]
	public Bounds2d(Vector3 center, Vector2 extents)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x106BE8C", Offset = "0x106BE8C", VA = "0x106BE8C")]
	public bool Contains(Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x200011F")]
public interface IAnchorStorageLocation
{
	[Token(Token = "0x1700006F")]
	bool IsLocal
	{
		[Token(Token = "0x60004AE")]
		get;
		[Token(Token = "0x60004AF")]
		set;
	}
}
[Token(Token = "0x2000120")]
public sealed class SpatialAnchors : MonoBehaviour
{
	[Token(Token = "0x2000121")]
	private enum AnchorType
	{
		[Token(Token = "0x4000644")]
		UI,
		[Token(Token = "0x4000645")]
		GO,
		[Token(Token = "0x4000646")]
		Drawing
	}

	[Token(Token = "0x2000129")]
	[CompilerGenerated]
	private sealed class <LoadAnchorDataFromBackend>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uuid;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050C")]
			[Address(RVA = "0x1076370", Offset = "0x1076370", VA = "0x1076370", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0x10763B8", Offset = "0x10763B8", VA = "0x10763B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x10760F4", Offset = "0x10760F4", VA = "0x10760F4")]
		[DebuggerHidden]
		public <LoadAnchorDataFromBackend>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x107611C", Offset = "0x107611C", VA = "0x107611C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1076120", Offset = "0x1076120", VA = "0x1076120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1076378", Offset = "0x1076378", VA = "0x1076378", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012A")]
	[CompilerGenerated]
	private sealed class <SaveDrawnAnchorAfterInstantiation>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRSpatialAnchor anchor;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpatialAnchors <>4__this;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LineRenderer> lineRenderers;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x107646C", Offset = "0x107646C", VA = "0x107646C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x10764B4", Offset = "0x10764B4", VA = "0x10764B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x10763C0", Offset = "0x10763C0", VA = "0x10763C0")]
		[DebuggerHidden]
		public <SaveDrawnAnchorAfterInstantiation>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x10763E8", Offset = "0x10763E8", VA = "0x10763E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x10763EC", Offset = "0x10763EC", VA = "0x10763EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1076474", Offset = "0x1076474", VA = "0x1076474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012B")]
	[CompilerGenerated]
	private sealed class <LoadVariation>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRSpatialAnchor spatialAnchor;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int variationNumber;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpatialAnchors <>4__this;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MRObject mrObject;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000518")]
			[Address(RVA = "0x10766E0", Offset = "0x10766E0", VA = "0x10766E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051A")]
			[Address(RVA = "0x1076728", Offset = "0x1076728", VA = "0x1076728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x10764BC", Offset = "0x10764BC", VA = "0x10764BC")]
		[DebuggerHidden]
		public <LoadVariation>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x10764E4", Offset = "0x10764E4", VA = "0x10764E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x10764E8", Offset = "0x10764E8", VA = "0x10764E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x10766E8", Offset = "0x10766E8", VA = "0x10766E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012C")]
	[CompilerGenerated]
	private sealed class <LoadAllMaterials>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] matNames;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int variationNumber;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject toChange;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x10769C0", Offset = "0x10769C0", VA = "0x10769C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x1076A08", Offset = "0x1076A08", VA = "0x1076A08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x1076730", Offset = "0x1076730", VA = "0x1076730")]
		[DebuggerHidden]
		public <LoadAllMaterials>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x1076758", Offset = "0x1076758", VA = "0x1076758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x107675C", Offset = "0x107675C", VA = "0x107675C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x10769C8", Offset = "0x10769C8", VA = "0x10769C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012D")]
	[CompilerGenerated]
	private sealed class <SaveAnchorTextOnInstantiation>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRSpatialAnchor anchor;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpatialAnchors <>4__this;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_InputField inputField;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000524")]
			[Address(RVA = "0x1076ABC", Offset = "0x1076ABC", VA = "0x1076ABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000526")]
			[Address(RVA = "0x1076B04", Offset = "0x1076B04", VA = "0x1076B04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x1076A10", Offset = "0x1076A10", VA = "0x1076A10")]
		[DebuggerHidden]
		public <SaveAnchorTextOnInstantiation>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x1076A38", Offset = "0x1076A38", VA = "0x1076A38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x1076A3C", Offset = "0x1076A3C", VA = "0x1076A3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x1076AC4", Offset = "0x1076AC4", VA = "0x1076AC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012E")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass67_0
	{
		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isNew;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpatialAnchors <>4__this;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject goAttached;

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x1076B0C", Offset = "0x1076B0C", VA = "0x1076B0C")]
		public <>c__DisplayClass67_0()
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x1076B14", Offset = "0x1076B14", VA = "0x1076B14")]
		internal void <CheckForAnchorCreation>b__0(OVRSpatialAnchor anchor, bool success)
		{
		}
	}

	[Token(Token = "0x200012F")]
	[CompilerGenerated]
	private sealed class <CheckForAnchorCreation>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isNew;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpatialAnchors <>4__this;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject goAttached;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OVRSpatialAnchor anchor;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass67_0 <>8__1;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052C")]
			[Address(RVA = "0x1076E30", Offset = "0x1076E30", VA = "0x1076E30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600052E")]
			[Address(RVA = "0x1076E78", Offset = "0x1076E78", VA = "0x1076E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x1076C1C", Offset = "0x1076C1C", VA = "0x1076C1C")]
		[DebuggerHidden]
		public <CheckForAnchorCreation>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x1076C44", Offset = "0x1076C44", VA = "0x1076C44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x1076C48", Offset = "0x1076C48", VA = "0x1076C48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0x1076E38", Offset = "0x1076E38", VA = "0x1076E38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000130")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass68_0
	{
		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnchorGOData anchorGOData;

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x1076E80", Offset = "0x1076E80", VA = "0x1076E80")]
		public <>c__DisplayClass68_0()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x1076E88", Offset = "0x1076E88", VA = "0x1076E88")]
		internal bool <WaitForSaveGO>b__0(AnchorGOData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x1076EB0", Offset = "0x1076EB0", VA = "0x1076EB0")]
		internal bool <WaitForSaveGO>b__1(AnchorGOData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000131")]
	[CompilerGenerated]
	private sealed class <WaitForSaveGO>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRSpatialAnchor anchor;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass68_0 <>8__1;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpatialAnchors <>4__this;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer <renderer>5__2;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0x10774AC", Offset = "0x10774AC", VA = "0x10774AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000537")]
			[Address(RVA = "0x10774F4", Offset = "0x10774F4", VA = "0x10774F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x1076ED8", Offset = "0x1076ED8", VA = "0x1076ED8")]
		[DebuggerHidden]
		public <WaitForSaveGO>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x1076F00", Offset = "0x1076F00", VA = "0x1076F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x1076F04", Offset = "0x1076F04", VA = "0x1076F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x10774B4", Offset = "0x10774B4", VA = "0x10774B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000136")]
	[CompilerGenerated]
	private sealed class <RestoreSpatialAnchorCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpatialAnchors <>4__this;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0x10785C4", Offset = "0x10785C4", VA = "0x10785C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000545")]
			[Address(RVA = "0x107860C", Offset = "0x107860C", VA = "0x107860C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x10775B8", Offset = "0x10775B8", VA = "0x10775B8")]
		[DebuggerHidden]
		public <RestoreSpatialAnchorCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x10775E0", Offset = "0x10775E0", VA = "0x10775E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x10775E4", Offset = "0x10775E4", VA = "0x10775E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x10785CC", Offset = "0x10785CC", VA = "0x10785CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000137")]
	[CompilerGenerated]
	private sealed class <SendRequest>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong id;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpatialAnchors <>4__this;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0x1078B08", Offset = "0x1078B08", VA = "0x1078B08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054B")]
			[Address(RVA = "0x1078B50", Offset = "0x1078B50", VA = "0x1078B50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x1078614", Offset = "0x1078614", VA = "0x1078614")]
		[DebuggerHidden]
		public <SendRequest>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x107863C", Offset = "0x107863C", VA = "0x107863C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x1078640", Offset = "0x1078640", VA = "0x1078640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x1078B10", Offset = "0x1078B10", VA = "0x1078B10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013B")]
	[CompilerGenerated]
	private sealed class <SendWebRequestDelete>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string guid;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000555")]
			[Address(RVA = "0x1078D80", Offset = "0x1078D80", VA = "0x1078D80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000557")]
			[Address(RVA = "0x1078DC8", Offset = "0x1078DC8", VA = "0x1078DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x1078BBC", Offset = "0x1078BBC", VA = "0x1078BBC")]
		[DebuggerHidden]
		public <SendWebRequestDelete>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x1078BE4", Offset = "0x1078BE4", VA = "0x1078BE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x1078BE8", Offset = "0x1078BE8", VA = "0x1078BE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x1078D88", Offset = "0x1078D88", VA = "0x1078D88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013F")]
	[CompilerGenerated]
	private sealed class <SendGUIDOnBackend>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRSpaceUser[] friendsSpaceUser;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpatialAnchors <>4__this;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AsyncOperation> <webRequestsSent>5__2;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<UnityWebRequest> <webRequests>5__3;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <numWebRequests>5__4;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <timer>5__5;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <startTime>5__6;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <lastNumberDone>5__7;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000561")]
			[Address(RVA = "0x1079F70", Offset = "0x1079F70", VA = "0x1079F70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000563")]
			[Address(RVA = "0x1079FB8", Offset = "0x1079FB8", VA = "0x1079FB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1078FA4", Offset = "0x1078FA4", VA = "0x1078FA4")]
		[DebuggerHidden]
		public <SendGUIDOnBackend>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1078FCC", Offset = "0x1078FCC", VA = "0x1078FCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1078FD0", Offset = "0x1078FD0", VA = "0x1078FD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1079F78", Offset = "0x1079F78", VA = "0x1079F78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000630")]
	private const int maxNumberOfAnchors = 25;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject defaultAnchor;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Light roomLight;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string id;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, bool> spatialAnchorsIsMRObj;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Guid, AnchorType> anchorType;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AnchorSaveData anchorSaveData;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnchorData cloudAnchorSaveData;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string mrSavePathDirectory;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string mrSavePath;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int anchorSaveIndex;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int resultNumber;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentResult;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool leaveLaunched;

	[Token(Token = "0x17000070")]
	public static bool HaveAllAnchorsLoaded
	{
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x106CAC4", Offset = "0x106CAC4", VA = "0x106CAC4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x106CB0C", Offset = "0x106CB0C", VA = "0x106CB0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public static bool HaveAllLocalAnchorsLoaded
	{
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x106CB58", Offset = "0x106CB58", VA = "0x106CB58")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x106CBA0", Offset = "0x106CBA0", VA = "0x106CBA0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public static bool HaveAllAnchorsBeenShared
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x106CBEC", Offset = "0x106CBEC", VA = "0x106CBEC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x106CC34", Offset = "0x106CC34", VA = "0x106CC34")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public static bool LeaveWithoutSharingAnchors
	{
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x106CC80", Offset = "0x106CC80", VA = "0x106CC80")]
		[CompilerGenerated]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x106CCC8", Offset = "0x106CCC8", VA = "0x106CCC8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public static bool LoadSharingAnchors
	{
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x106CD14", Offset = "0x106CD14", VA = "0x106CD14")]
		[CompilerGenerated]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x106CD5C", Offset = "0x106CD5C", VA = "0x106CD5C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool IsThereAnyMRObj
	{
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x106CDA8", Offset = "0x106CDA8", VA = "0x106CDA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x106CE04", Offset = "0x106CE04", VA = "0x106CE04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x106CE48", Offset = "0x106CE48", VA = "0x106CE48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x106D6EC", Offset = "0x106D6EC", VA = "0x106D6EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x106E050", Offset = "0x106E050", VA = "0x106E050")]
	public void AddMRObj(GameObject obj)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x106E0AC", Offset = "0x106E0AC", VA = "0x106E0AC")]
	public void RemoveMRObj(GameObject obj)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1068960", Offset = "0x1068960", VA = "0x1068960")]
	public void EraseAnchor(GameObject anchor, bool dontDeleteGO = true)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x106E104", Offset = "0x106E104", VA = "0x106E104")]
	public void CreateAnchor()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1068F98", Offset = "0x1068F98", VA = "0x1068F98")]
	public void RecreateAnchor(GameObject anchorObj)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1068AB4", Offset = "0x1068AB4", VA = "0x1068AB4")]
	public void SaveAnchorText(TMP_InputField inputField, OVRSpatialAnchor anchor)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x106A628", Offset = "0x106A628", VA = "0x106A628")]
	public void SaveAnchorDrawing(OVRSpatialAnchor anchor, List<LineRenderer> drawings)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x106E54C", Offset = "0x106E54C", VA = "0x106E54C")]
	public void SaveGO(OVRSpatialAnchor anchor)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x10687C8", Offset = "0x10687C8", VA = "0x10687C8")]
	public void RemoveAnchorText(string guid)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x106D008", Offset = "0x106D008", VA = "0x106D008")]
	private void InitializeAnchorSaveData()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x106D834", Offset = "0x106D834", VA = "0x106D834")]
	private void RemoveCloudDataFromLocalData()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x106E614", Offset = "0x106E614", VA = "0x106E614")]
	private void DestroyAnchors()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x106E76C", Offset = "0x106E76C", VA = "0x106E76C")]
	private void AfterLocalizedInstantiationLocal(OVRSpatialAnchor.UnboundAnchor anchor, bool result)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x106EAD4", Offset = "0x106EAD4", VA = "0x106EAD4")]
	private void AfterLocalizedInstantiationCloud(OVRSpatialAnchor.UnboundAnchor anchor, bool result)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x106E828", Offset = "0x106E828", VA = "0x106E828")]
	private void InstantiateAnchor(OVRSpatialAnchor.UnboundAnchor anchor, AnchorData anchorData, in bool isLocal = true)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x106F348", Offset = "0x106F348", VA = "0x106F348")]
	private void SetComponentEnabledCloud(ulong requestId, bool result, OVRSpace space, Guid uuid)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x106F3C4", Offset = "0x106F3C4", VA = "0x106F3C4")]
	[IteratorStateMachine(typeof(<LoadAnchorDataFromBackend>d__56))]
	private IEnumerator LoadAnchorDataFromBackend(string uuid, OVRSpace space, Guid guid)
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x106E494", Offset = "0x106E494", VA = "0x106E494")]
	private void CheckAnchorLoadState()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x106F0E8", Offset = "0x106F0E8", VA = "0x106F0E8")]
	private void InstantiateDrawnAnchor(in OVRSpatialAnchor.UnboundAnchor anchor, in PointsData[] points, in Vector3 scale, in bool isLocal)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x106F438", Offset = "0x106F438", VA = "0x106F438")]
	[IteratorStateMachine(typeof(<SaveDrawnAnchorAfterInstantiation>d__59))]
	private IEnumerator SaveDrawnAnchorAfterInstantiation(OVRSpatialAnchor anchor, List<LineRenderer> lineRenderers)
	{
		return null;
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x106ED78", Offset = "0x106ED78", VA = "0x106ED78")]
	private void InstantiateGOAnchor(in OVRSpatialAnchor.UnboundAnchor anchor, AnchorGOData anchorGOData, in bool isLocal)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x106F4DC", Offset = "0x106F4DC", VA = "0x106F4DC")]
	[IteratorStateMachine(typeof(<LoadVariation>d__61))]
	private IEnumerator LoadVariation(OVRSpatialAnchor spatialAnchor, int variationNumber, MRObject mrObject)
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x106F590", Offset = "0x106F590", VA = "0x106F590")]
	[IteratorStateMachine(typeof(<LoadAllMaterials>d__62))]
	private IEnumerator LoadAllMaterials(string[] matNames, int variationNumber, GameObject toChange)
	{
		return null;
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x106EB1C", Offset = "0x106EB1C", VA = "0x106EB1C")]
	private void InstantiateUIAnchor(in OVRSpatialAnchor.UnboundAnchor anchor, in string savedText, in Vector3 scale, in bool isLocal)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x106F628", Offset = "0x106F628", VA = "0x106F628")]
	[IteratorStateMachine(typeof(<SaveAnchorTextOnInstantiation>d__64))]
	private IEnumerator SaveAnchorTextOnInstantiation(TMP_InputField inputField, OVRSpatialAnchor anchor)
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x106F6CC", Offset = "0x106F6CC", VA = "0x106F6CC")]
	private void OnEraseAnchorOnly(OVRSpatialAnchor anchor, bool success)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x106F77C", Offset = "0x106F77C", VA = "0x106F77C")]
	private void OnEraseAnchor(OVRSpatialAnchor anchor, bool success)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x106E3D4", Offset = "0x106E3D4", VA = "0x106E3D4")]
	[IteratorStateMachine(typeof(<CheckForAnchorCreation>d__67))]
	private IEnumerator CheckForAnchorCreation(OVRSpatialAnchor anchor, GameObject goAttached, bool isNew = false)
	{
		return null;
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x106E56C", Offset = "0x106E56C", VA = "0x106E56C")]
	[IteratorStateMachine(typeof(<WaitForSaveGO>d__68))]
	private IEnumerator WaitForSaveGO(OVRSpatialAnchor anchor)
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x106F904", Offset = "0x106F904", VA = "0x106F904")]
	private void RestoreSpatialAnchor()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x106FA6C", Offset = "0x106FA6C", VA = "0x106FA6C")]
	[IteratorStateMachine(typeof(<RestoreSpatialAnchorCoroutine>d__70))]
	private IEnumerator RestoreSpatialAnchorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x106FAE0", Offset = "0x106FAE0", VA = "0x106FAE0")]
	private void QueryCompleteLocal(OVRSpatialAnchor.UnboundAnchor[] unboundAnchors, Guid[] guids)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x106FE94", Offset = "0x106FE94", VA = "0x106FE94")]
	private void StartLoadCloudAnchors()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x106FF40", Offset = "0x106FF40", VA = "0x106FF40")]
	[IteratorStateMachine(typeof(<SendRequest>d__73))]
	private IEnumerator SendRequest(ulong id)
	{
		return null;
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x106FFC4", Offset = "0x106FFC4", VA = "0x106FFC4")]
	private void ExtractDataFromWebRequest(string json)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x107075C", Offset = "0x107075C", VA = "0x107075C")]
	private void LoadCloudAnchors(List<Guid> guids)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x10708F0", Offset = "0x10708F0", VA = "0x10708F0")]
	private void QueryCompleteCloud(OVRSpatialAnchor.UnboundAnchor[] unboundAnchors, in List<Guid> guids)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1070A68", Offset = "0x1070A68", VA = "0x1070A68")]
	private void RemoveOutdatedAnchors(OVRSpatialAnchor.UnboundAnchor[] unboundAnchors, in List<Guid> guids)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x106FC7C", Offset = "0x106FC7C", VA = "0x106FC7C")]
	private void RemoveOutdatedLocalAnchors(OVRSpatialAnchor.UnboundAnchor[] unboundAnchors, Guid[] guids)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x1070CC0", Offset = "0x1070CC0", VA = "0x1070CC0")]
	[IteratorStateMachine(typeof(<SendWebRequestDelete>d__79))]
	private IEnumerator SendWebRequestDelete(string guid)
	{
		return null;
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x1070D34", Offset = "0x1070D34", VA = "0x1070D34")]
	private void ShareAnchorsOnLeave()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1071854", Offset = "0x1071854", VA = "0x1071854")]
	private void FindFriends(OVRSpatialAnchor[] spatialAnchors)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1071958", Offset = "0x1071958", VA = "0x1071958")]
	private void ShareAnchors(UserList friends, OVRSpatialAnchor[] spatialAnchors)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x1071BAC", Offset = "0x1071BAC", VA = "0x1071BAC")]
	[IteratorStateMachine(typeof(<SendGUIDOnBackend>d__83))]
	private IEnumerator SendGUIDOnBackend(OVRSpaceUser[] friendsSpaceUser)
	{
		return null;
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x1071C3C", Offset = "0x1071C3C", VA = "0x1071C3C")]
	private void CreateWebRequest(string guid, AnchorDataBase anchorData, ulong id, out UnityWebRequest webRequest)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1071E2C", Offset = "0x1071E2C", VA = "0x1071E2C")]
	private UnityWebRequest InitializedWebRequest(string uuid)
	{
		return null;
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x1072000", Offset = "0x1072000", VA = "0x1072000")]
	public SpatialAnchors()
	{
	}
}
[Token(Token = "0x2000140")]
[CreateAssetMenu(fileName = "MaquetteSettings", menuName = "MaquetteSettings", order = 1)]
public class MaquetteSettings : ScriptableObject
{
	[Token(Token = "0x2000141")]
	public enum EHandControl
	{
		[Token(Token = "0x40006AC")]
		Dominant,
		[Token(Token = "0x40006AD")]
		Secondary
	}

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EHandControl handControl;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector2 playerSpawnOffset;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool isMaquetteMovementEnabled;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0.1f, 10f)]
	[SerializeField]
	private float movementSpeed;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[Range(0.01f, 2f)]
	private float rotationSpeed;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Range(0.01f, 2f)]
	private float scaleSpeed;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float startScale;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0.1f, 10f)]
	[SerializeField]
	private float scaleMin;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[Range(0.1f, 10f)]
	private float scaleMax;

	[Token(Token = "0x1700008C")]
	public EHandControl HandControl
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x1079FC0", Offset = "0x1079FC0", VA = "0x1079FC0")]
		get
		{
			return default(EHandControl);
		}
	}

	[Token(Token = "0x1700008D")]
	public Vector2 PlayerSpawnOffset
	{
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x1079FC8", Offset = "0x1079FC8", VA = "0x1079FC8")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700008E")]
	public bool IsMaquetteMovementEnabled
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x1079FD0", Offset = "0x1079FD0", VA = "0x1079FD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	public float MovementSpeed
	{
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x1079FD8", Offset = "0x1079FD8", VA = "0x1079FD8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000090")]
	public float RotationSpeed
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x1079FE0", Offset = "0x1079FE0", VA = "0x1079FE0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000091")]
	public float ScaleSpeed
	{
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x1079FE8", Offset = "0x1079FE8", VA = "0x1079FE8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000092")]
	public float StartScale
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1079FF0", Offset = "0x1079FF0", VA = "0x1079FF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x1079FF8", Offset = "0x1079FF8", VA = "0x1079FF8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public float ScaleMin
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x107A000", Offset = "0x107A000", VA = "0x107A000")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000094")]
	public float ScaleMax
	{
		[Token(Token = "0x600056D")]
		[Address(RVA = "0x107A008", Offset = "0x107A008", VA = "0x107A008")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x107A010", Offset = "0x107A010", VA = "0x107A010")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x107A030", Offset = "0x107A030", VA = "0x107A030")]
	private void ClampScale()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x107A050", Offset = "0x107A050", VA = "0x107A050")]
	public MaquetteSettings()
	{
	}
}
[Token(Token = "0x2000142")]
public class WallArrow
{
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TextArrow textArrow;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x107A078", Offset = "0x107A078", VA = "0x107A078")]
	public WallArrow(GameObject _textPrefab, float scale = 1f)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x107A204", Offset = "0x107A204", VA = "0x107A204")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x107A220", Offset = "0x107A220", VA = "0x107A220")]
	public void SetCoordinates(Vector2 _start, Vector2 _end)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x107A1E4", Offset = "0x107A1E4", VA = "0x107A1E4")]
	public void SetActive(bool _active)
	{
	}
}
[Token(Token = "0x2000143")]
public abstract class SampleAvatarEntityBase : OvrAvatarEntity
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	[Header("Tracking Input")]
	private OvrAvatarFacePoseBehavior _faceTracking;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	private OvrAvatarEyePoseBehavior _eyeTracking;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	private TrackingScriptable trackingScriptable;

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x107A600", Offset = "0x107A600", VA = "0x107A600")]
	public Transform GetSkeletonTransform(Oculus.Avatar2.CAPI.ovrAvatar2JointType jointType)
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x107A6A0", Offset = "0x107A6A0", VA = "0x107A6A0", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x107A758", Offset = "0x107A758", VA = "0x107A758")]
	private void Start()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x107A7F0", Offset = "0x107A7F0", VA = "0x107A7F0")]
	protected SampleAvatarEntityBase()
	{
	}
}
[Token(Token = "0x2000144")]
public class SampleAvatarEntityLocal : SampleAvatarEntityBase
{
	[Token(Token = "0x2000145")]
	public enum AssetSource
	{
		[Token(Token = "0x40006CB")]
		Zip,
		[Token(Token = "0x40006CC")]
		StreamingAssets
	}

	[Serializable]
	[Token(Token = "0x2000146")]
	private struct AssetData
	{
		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AssetSource source;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string path;
	}

	[Token(Token = "0x2000147")]
	private enum OverrideStreamLOD
	{
		[Token(Token = "0x40006D0")]
		Default,
		[Token(Token = "0x40006D1")]
		ForceHigh,
		[Token(Token = "0x40006D2")]
		ForceMedium,
		[Token(Token = "0x40006D3")]
		ForceLow
	}

	[Token(Token = "0x2000148")]
	[CompilerGenerated]
	private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityLocal <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059C")]
			[Address(RVA = "0x107CAF4", Offset = "0x107CAF4", VA = "0x107CAF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059E")]
			[Address(RVA = "0x107CB3C", Offset = "0x107CB3C", VA = "0x107CB3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x107A90C", Offset = "0x107A90C", VA = "0x107A90C")]
		[DebuggerHidden]
		public <Start>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x107C83C", Offset = "0x107C83C", VA = "0x107C83C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x107C840", Offset = "0x107C840", VA = "0x107C840", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x107CAFC", Offset = "0x107CAFC", VA = "0x107CAFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000149")]
	[CompilerGenerated]
	private sealed class <CheckDistanceAfterFrame>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityLocal <>4__this;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A2")]
			[Address(RVA = "0x107CF00", Offset = "0x107CF00", VA = "0x107CF00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A4")]
			[Address(RVA = "0x107CF48", Offset = "0x107CF48", VA = "0x107CF48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x107B324", Offset = "0x107B324", VA = "0x107B324")]
		[DebuggerHidden]
		public <CheckDistanceAfterFrame>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x107CB44", Offset = "0x107CB44", VA = "0x107CB44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x107CB48", Offset = "0x107CB48", VA = "0x107CB48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x107CF08", Offset = "0x107CF08", VA = "0x107CF08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014A")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SampleAvatarEntityLocal <>4__this;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool getUserIdComplete;

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x107CF50", Offset = "0x107CF50", VA = "0x107CF50")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x107CF58", Offset = "0x107CF58", VA = "0x107CF58")]
		internal void <LoadCdnAvatar>b__0(Message<Oculus.Platform.Models.User> message)
		{
		}
	}

	[Token(Token = "0x200014B")]
	[CompilerGenerated]
	private sealed class <LoadCdnAvatar>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityLocal <>4__this;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass28_0 <>8__1;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x107D268", Offset = "0x107D268", VA = "0x107D268", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AC")]
			[Address(RVA = "0x107D2B0", Offset = "0x107D2B0", VA = "0x107D2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x107B3C0", Offset = "0x107B3C0", VA = "0x107B3C0")]
		[DebuggerHidden]
		public <LoadCdnAvatar>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x107CFE0", Offset = "0x107CFE0", VA = "0x107CFE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x107CFE4", Offset = "0x107CFE4", VA = "0x107CFE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x107D270", Offset = "0x107D270", VA = "0x107D270", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014C")]
	[CompilerGenerated]
	private sealed class <LoadUserAvatar>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityLocal <>4__this;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0x107D330", Offset = "0x107D330", VA = "0x107D330", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0x107D378", Offset = "0x107D378", VA = "0x107D378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x107B570", Offset = "0x107B570", VA = "0x107B570")]
		[DebuggerHidden]
		public <LoadUserAvatar>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x107D2B8", Offset = "0x107D2B8", VA = "0x107D2B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x107D2BC", Offset = "0x107D2BC", VA = "0x107D2BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x107D338", Offset = "0x107D338", VA = "0x107D338", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014E")]
	[CompilerGenerated]
	private sealed class <Retry_HasAvatarRequest>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityLocal <>4__this;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <continueRetries>5__2;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <retriesRemaining>5__3;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <hasFoundAvatar>5__4;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <requestComplete>5__5;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task<OvrAvatarManager.HasAvatarRequestResultCode> <hasAvatarRequest>5__6;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0x107D790", Offset = "0x107D790", VA = "0x107D790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x107D7D8", Offset = "0x107D7D8", VA = "0x107D7D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x107C39C", Offset = "0x107C39C", VA = "0x107C39C")]
		[DebuggerHidden]
		public <Retry_HasAvatarRequest>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x107D4BC", Offset = "0x107D4BC", VA = "0x107D4BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x107D4C0", Offset = "0x107D4C0", VA = "0x107D4C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x107D798", Offset = "0x107D798", VA = "0x107D798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014F")]
	[CompilerGenerated]
	private sealed class <AutoRetry_LoadUser>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityLocal <>4__this;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool loadFallbackOnFailure;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <remainingAttempts>5__2;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <didLoadAvatar>5__3;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentPollingInterval>5__4;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0x107D974", Offset = "0x107D974", VA = "0x107D974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0x107D9BC", Offset = "0x107D9BC", VA = "0x107D9BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x107C44C", Offset = "0x107C44C", VA = "0x107C44C")]
		[DebuggerHidden]
		public <AutoRetry_LoadUser>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x107D7E0", Offset = "0x107D7E0", VA = "0x107D7E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x107D7E4", Offset = "0x107D7E4", VA = "0x107D7E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x107D97C", Offset = "0x107D97C", VA = "0x107D97C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000150")]
	[CompilerGenerated]
	private sealed class <PollForAvatarChange>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityLocal <>4__this;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSecondsRealtime <waitForPollInterval>5__2;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <continueChecking>5__3;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task<OvrAvatarManager.HasAvatarChangedRequestResultCode> <checkTask>5__4;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x107DBAC", Offset = "0x107DBAC", VA = "0x107DBAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C7")]
			[Address(RVA = "0x107DBF4", Offset = "0x107DBF4", VA = "0x107DBF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x107C504", Offset = "0x107C504", VA = "0x107C504")]
		[DebuggerHidden]
		public <PollForAvatarChange>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x107D9C4", Offset = "0x107D9C4", VA = "0x107D9C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x107D9C8", Offset = "0x107D9C8", VA = "0x107D9C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x107DBB4", Offset = "0x107DBB4", VA = "0x107DBB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B2")]
	private const string logScope = "sampleAvatar";

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[Header("Sample Avatar Entity")]
	[Tooltip("A version of the avatar with additional textures will be loaded to portray more accurate human materials (requiring shader support).")]
	[SerializeField]
	private bool _highQuality;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x271")]
	[Tooltip("Attempt to load the Avatar model file from the Content Delivery Network (CDN) based on a userID, as opposed to loading from disc.")]
	[SerializeField]
	private bool _loadUserFromCdn;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x272")]
	[Tooltip("Make initial requests for avatar and then defer loading until other avatars can make their requests.")]
	[SerializeField]
	private bool _deferLoading;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	[Tooltip("Asset paths to load, and whether each asset comes from a preloaded zip file or directly from StreamingAssets. See Preset Asset settings on OvrAvatarManager for how this maps to the real file name.")]
	[Header("Assets")]
	private List<AssetData> _assets;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[SerializeField]
	[Tooltip("Adds an underscore between the path and the postfix.")]
	private bool _underscorePostfix;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	[Tooltip("Filename Postfix (WARNING: Typically the postfix is Platform specific, such as \"_rift.glb\")")]
	private string _overridePostfix;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[Tooltip("Automatically retry LoadUser download request on failure")]
	[SerializeField]
	[Header("CDN")]
	private bool _autoCdnRetry;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
	[Tooltip("Automatically check for avatar changes")]
	[SerializeField]
	private bool _autoCheckChanges;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	[Tooltip("How frequently to check for avatar changes")]
	[SerializeField]
	[Range(4f, 320f)]
	private float _changeCheckInterval;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	[Header("Debug Drawing")]
	[Tooltip("Draw debug visualizations for avatar gaze targets")]
	private bool _debugDrawGazePos;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	[SerializeField]
	[Tooltip("Color for gaze debug visualization")]
	private Color _debugDrawGazePosColor;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	[SerializeField]
	[Header("Sample Networking")]
	[Tooltip("Streaming quality override, default will not override")]
	private OverrideStreamLOD _overrideStreamLod;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int DESAT_AMOUNT_ID;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int DESAT_TINT_ID;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int DESAT_LERP_ID;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Stopwatch _loadTime;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private Transform LODParent;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Color AVATAR_FADE_DEFAULT_COLOR;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly float AVATAR_FADE_DEFAULT_COLOR_BLEND;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly float AVATAR_FADE_DEFAULT_GRAYSCALE_BLEND;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[Header("Rendering")]
	[SerializeField]
	[Range(0f, 1f)]
	private float shaderGrayToSolidColorBlend_;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	[Range(0f, 1f)]
	[SerializeField]
	private float shaderDesatBlend_;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[SerializeField]
	private Color shaderSolidColor_;

	[Token(Token = "0x17000095")]
	private bool HasLocalAvatarConfigured
	{
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x107A848", Offset = "0x107A848", VA = "0x107A848")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000096")]
	public float ShaderGrayToSolidColorBlend
	{
		[Token(Token = "0x6000587")]
		[Address(RVA = "0x107BF2C", Offset = "0x107BF2C", VA = "0x107BF2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000588")]
		[Address(RVA = "0x107BF34", Offset = "0x107BF34", VA = "0x107BF34")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float ShaderDesatBlend
	{
		[Token(Token = "0x6000589")]
		[Address(RVA = "0x107C114", Offset = "0x107C114", VA = "0x107C114")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x107C11C", Offset = "0x107C11C", VA = "0x107C11C")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public Color ShaderSolidColor
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x107C1C8", Offset = "0x107C1C8", VA = "0x107C1C8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x107C1DC", Offset = "0x107C1DC", VA = "0x107C1DC")]
		set
		{
		}
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x107A898", Offset = "0x107A898", VA = "0x107A898", Slot = "23")]
	[IteratorStateMachine(typeof(<Start>d__23))]
	protected virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x107A934", Offset = "0x107A934", VA = "0x107A934", Slot = "7")]
	protected override void OnDestroyCalled()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x107AB6C", Offset = "0x107AB6C", VA = "0x107AB6C")]
	private void GetLODGO(OvrAvatarEntity _)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x107AC48", Offset = "0x107AC48", VA = "0x107AC48")]
	private void RecenterAvatars()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x107B2B0", Offset = "0x107B2B0", VA = "0x107B2B0")]
	[IteratorStateMachine(typeof(<CheckDistanceAfterFrame>d__27))]
	private IEnumerator CheckDistanceAfterFrame()
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x107B34C", Offset = "0x107B34C", VA = "0x107B34C")]
	[IteratorStateMachine(typeof(<LoadCdnAvatar>d__28))]
	private IEnumerator LoadCdnAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x107B3E8", Offset = "0x107B3E8", VA = "0x107B3E8")]
	public void LoadRemoteUserCdnAvatar(ulong userId)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x107B4D0", Offset = "0x107B4D0", VA = "0x107B4D0")]
	public void LoadLoggedInUserCdnAvatar()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x107B4FC", Offset = "0x107B4FC", VA = "0x107B4FC")]
	[IteratorStateMachine(typeof(<LoadUserAvatar>d__31))]
	private IEnumerator LoadUserAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x107B598", Offset = "0x107B598", VA = "0x107B598")]
	private void LoadLocalAvatar()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x107B950", Offset = "0x107B950", VA = "0x107B950")]
	public void ReloadAvatarManually(string newAssetPaths, AssetSource newAssetSource)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x107BA04", Offset = "0x107BA04", VA = "0x107BA04")]
	public void ReloadAvatarManually(string[] newAssetPaths, AssetSource newAssetSource)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x107BCB0", Offset = "0x107BCB0", VA = "0x107BCB0")]
	public bool LoadPreset(int preset, string namePrefix = "")
	{
		return default(bool);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x107C240", Offset = "0x107C240", VA = "0x107C240")]
	public void SetShaderDesat(float desatBlend, [Optional] float? grayToSolidBlend, [Optional] Color? solidColor)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x107BFE0", Offset = "0x107BFE0", VA = "0x107BFE0")]
	private void UpdateMaterialsWithDesatModifiers()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x107C31C", Offset = "0x107C31C", VA = "0x107C31C")]
	public Oculus.Avatar2.CAPI.ovrAvatar2JointType[] GetCriticalJoints()
	{
		return null;
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x107C324", Offset = "0x107C324", VA = "0x107C324")]
	private void UserHasNoAvatarFallback()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x107C328", Offset = "0x107C328", VA = "0x107C328")]
	[IteratorStateMachine(typeof(<Retry_HasAvatarRequest>d__55))]
	private IEnumerator Retry_HasAvatarRequest()
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x107C3C4", Offset = "0x107C3C4", VA = "0x107C3C4")]
	[IteratorStateMachine(typeof(<AutoRetry_LoadUser>d__56))]
	private IEnumerator AutoRetry_LoadUser(bool loadFallbackOnFailure)
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x107B420", Offset = "0x107B420", VA = "0x107B420")]
	private void StartLoadTimeCounter()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x107C474", Offset = "0x107C474", VA = "0x107C474")]
	public long GetLoadTimeMs()
	{
		return default(long);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x107C490", Offset = "0x107C490", VA = "0x107C490")]
	[IteratorStateMachine(typeof(<PollForAvatarChange>d__59))]
	private IEnumerator PollForAvatarChange()
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x107C52C", Offset = "0x107C52C", VA = "0x107C52C")]
	public SampleAvatarEntityLocal()
	{
	}
}
[Token(Token = "0x2000151")]
public class SetAvatar : SetAvatarBase
{
	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x107DBFC", Offset = "0x107DBFC", VA = "0x107DBFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x107DC74", Offset = "0x107DC74", VA = "0x107DC74")]
	public SetAvatar()
	{
	}
}
[Token(Token = "0x2000152")]
public class SetAvatarBase : MonoBehaviour
{
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected SampleAvatarEntityBase avatar;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform LeftIndex;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Transform RightIndex;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Transform LeftHand;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform RightHand;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform LeftArm;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform RightArm;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject interactor;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject Lgrabber;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject Rgrabber;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject Watch;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject WatchMenu;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject L_Interactor;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject R_Interactor;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject L_Grabber;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject R_Grabber;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float RightOffset;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float LeftOffset;

	[Token(Token = "0x170000A7")]
	public float Offset
	{
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x107DC9C", Offset = "0x107DC9C", VA = "0x107DC9C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A8")]
	public Transform NonDominantHand
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x107DCFC", Offset = "0x107DCFC", VA = "0x107DCFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A9")]
	private Transform DominantHand
	{
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x107DD5C", Offset = "0x107DD5C", VA = "0x107DD5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x107DDBC", Offset = "0x107DDBC", VA = "0x107DDBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x107DFE0", Offset = "0x107DFE0", VA = "0x107DFE0")]
	public void GetAvatarBones()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x107E558", Offset = "0x107E558", VA = "0x107E558")]
	public void SwitchHandMode()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x107EBE8", Offset = "0x107EBE8", VA = "0x107EBE8")]
	public static void SetLightObjects(OvrAvatarEntity avatar)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x107DC88", Offset = "0x107DC88", VA = "0x107DC88")]
	public SetAvatarBase()
	{
	}
}
[Token(Token = "0x2000154")]
[CreateAssetMenu(fileName = "TrackingScriptable", menuName = "Tracking Scriptable", order = 1)]
public class TrackingScriptable : ScriptableObject
{
	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool TrackingStarted;

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x107EE78", Offset = "0x107EE78", VA = "0x107EE78")]
	public TrackingScriptable()
	{
	}
}
[Token(Token = "0x2000155")]
public class DataBaseManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000156")]
	private class VariationsDeserialize
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] variations;

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1081B90", Offset = "0x1081B90", VA = "0x1081B90")]
		public VariationsDeserialize()
		{
		}
	}

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DataBaseManager instance;

	[Token(Token = "0x4000711")]
	private const string database_name = "DataBase.db";

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string db_connection_path;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IDbConnection db_connection;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string filepath;

	[Token(Token = "0x4000715")]
	private const string object_table_name = "sura_objects";

	[Token(Token = "0x4000716")]
	private const string texture_table_name = "sura_materials";

	[Token(Token = "0x4000717")]
	private const string HD3D_table_name = "hd3d_vr_object_mapping";

	[Token(Token = "0x4000718")]
	private const string family_table_name = "family";

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isLoaded;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> memoPrefabPath;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> memoTexturePath;

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x107EE80", Offset = "0x107EE80", VA = "0x107EE80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x107EF28", Offset = "0x107EF28", VA = "0x107EF28")]
	public void GetDataBase()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x107F0A8", Offset = "0x107F0A8", VA = "0x107F0A8")]
	public IDataReader GetAllObject()
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x107F238", Offset = "0x107F238", VA = "0x107F238")]
	public IDataReader GetAllTexture()
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x107F3C8", Offset = "0x107F3C8", VA = "0x107F3C8")]
	public IDataReader GetObjectByCategoryId(string room_name)
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x107F6CC", Offset = "0x107F6CC", VA = "0x107F6CC")]
	public IDataReader GetObjectByHdId(string hdid)
	{
		return null;
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x107F960", Offset = "0x107F960", VA = "0x107F960")]
	public IDataReader GetReplacementObject(string hdid)
	{
		return null;
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x107FBF4", Offset = "0x107FBF4", VA = "0x107FBF4")]
	public IDataReader GetObjectById(string id)
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x107FE88", Offset = "0x107FE88", VA = "0x107FE88")]
	public IDataReader GetObjectByFurnishingId(string category_name)
	{
		return null;
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x10800C0", Offset = "0x10800C0", VA = "0x10800C0")]
	public IDataReader Search(string text)
	{
		return null;
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1080288", Offset = "0x1080288", VA = "0x1080288")]
	public string GetPrefabPath(string Prefab_Name)
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x10805D8", Offset = "0x10805D8", VA = "0x10805D8")]
	public float GetHaptic(string Prefab_Name)
	{
		return default(float);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x108092C", Offset = "0x108092C", VA = "0x108092C")]
	public IDataReader GetTextureByCategory(string cat_name)
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1080BC0", Offset = "0x1080BC0", VA = "0x1080BC0")]
	public string GetTexturePath(string Texture_Name)
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1080F10", Offset = "0x1080F10", VA = "0x1080F10")]
	public string GetTextureByHdId(string hdid)
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x10812F4", Offset = "0x10812F4", VA = "0x10812F4")]
	public IDataReader GetNumOfRows()
	{
		return null;
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1081484", Offset = "0x1081484", VA = "0x1081484")]
	public bool DatabaseState()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x1081530", Offset = "0x1081530", VA = "0x1081530")]
	public void OpenDataBase()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x10815F0", Offset = "0x10815F0", VA = "0x10815F0")]
	public void CloseDataBase()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x10816B0", Offset = "0x10816B0", VA = "0x10816B0")]
	public Color[] GetVariationColor(string item, int variation)
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x1081B98", Offset = "0x1081B98", VA = "0x1081B98")]
	public int[] GetVariationsNumber(string item)
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1081F4C", Offset = "0x1081F4C", VA = "0x1081F4C")]
	public string GetFirstAtlasPath(string objectName)
	{
		return null;
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1082268", Offset = "0x1082268", VA = "0x1082268")]
	public DataBaseManager()
	{
	}
}
[Token(Token = "0x2000157")]
public class PrefabSnapshot : MonoBehaviour
{
	[Token(Token = "0x2000158")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrefabSnapshot <>4__this;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0x10838E4", Offset = "0x10838E4", VA = "0x10838E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0x108392C", Offset = "0x108392C", VA = "0x108392C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x10822E4", Offset = "0x10822E4", VA = "0x10822E4")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x1083568", Offset = "0x1083568", VA = "0x1083568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x108356C", Offset = "0x108356C", VA = "0x108356C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x10838EC", Offset = "0x10838EC", VA = "0x10838EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000159")]
	[CompilerGenerated]
	private sealed class <TakeShot>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrefabSnapshot <>4__this;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<AssetDict>.Enumerator <>7__wrap1;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AssetDict <Asset>5__3;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] <variations>5__4;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__5;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<StairsFamily>.Enumerator <>7__wrap5;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material <mat>5__7;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000605")]
			[Address(RVA = "0x1086DB8", Offset = "0x1086DB8", VA = "0x1086DB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000607")]
			[Address(RVA = "0x1086E00", Offset = "0x1086E00", VA = "0x1086E00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x1082FA8", Offset = "0x1082FA8", VA = "0x1082FA8")]
		[DebuggerHidden]
		public <TakeShot>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x1083934", Offset = "0x1083934", VA = "0x1083934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x1083994", Offset = "0x1083994", VA = "0x1083994", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1086CC8", Offset = "0x1086CC8", VA = "0x1086CC8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x1086D18", Offset = "0x1086D18", VA = "0x1086D18")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1086D68", Offset = "0x1086D68", VA = "0x1086D68")]
		private void <>m__Finally3()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x1086DC0", Offset = "0x1086DC0", VA = "0x1086DC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015A")]
	[CompilerGenerated]
	private sealed class <MoveCamera>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject go;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PrefabSnapshot <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600060B")]
			[Address(RVA = "0x108750C", Offset = "0x108750C", VA = "0x108750C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600060D")]
			[Address(RVA = "0x1087554", Offset = "0x1087554", VA = "0x1087554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x1083060", Offset = "0x1083060", VA = "0x1083060")]
		[DebuggerHidden]
		public <MoveCamera>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x1086E08", Offset = "0x1086E08", VA = "0x1086E08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x1086E0C", Offset = "0x1086E0C", VA = "0x1086E0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x1087514", Offset = "0x1087514", VA = "0x1087514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015B")]
	[CompilerGenerated]
	private sealed class <ProcessAsset>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrefabSnapshot <>4__this;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetDict Asset;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000611")]
			[Address(RVA = "0x1087E64", Offset = "0x1087E64", VA = "0x1087E64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000613")]
			[Address(RVA = "0x1087EAC", Offset = "0x1087EAC", VA = "0x1087EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x1083448", Offset = "0x1083448", VA = "0x1083448")]
		[DebuggerHidden]
		public <ProcessAsset>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x108755C", Offset = "0x108755C", VA = "0x108755C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x1087560", Offset = "0x1087560", VA = "0x1087560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x1087E6C", Offset = "0x1087E6C", VA = "0x1087E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015C")]
	[CompilerGenerated]
	private sealed class <ChangeVariation>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject toChange;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int variationNumber;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PrefabSnapshot <>4__this;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer <renderer>5__2;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material[] <newmat>5__3;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string[] <matNames>5__4;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__5;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string <path>5__6;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AsyncOperationHandle<Material> <handle>5__7;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000617")]
			[Address(RVA = "0x10887D4", Offset = "0x10887D4", VA = "0x10887D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0x108881C", Offset = "0x108881C", VA = "0x108881C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x1083508", Offset = "0x1083508", VA = "0x1083508")]
		[DebuggerHidden]
		public <ChangeVariation>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x1087EB4", Offset = "0x1087EB4", VA = "0x1087EB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x1087EB8", Offset = "0x1087EB8", VA = "0x1087EB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x10887DC", Offset = "0x10887DC", VA = "0x10887DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float waittime;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderPipelineAsset renderPipeline;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CameraGo;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject scene;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lightfloor;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject lightceiling;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject lightwall;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject lightsurface;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject StairsHolder;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Shader shader;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject plane;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public DataBaseManager DBM;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<AssetDict> goList;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<StairsFamily> stairsList;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<AssetDict> matList;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject prefab;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material Surface;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject currentObject;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private StairsGenerator STG;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public IDataReader readerObj;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IDataReader readerMat;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string FurniturePath;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string TexturePath;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int size;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int objs;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int i;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool Furnitures;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	public bool Material;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
	public bool Stairs;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDF")]
	public bool NewOnly;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool stairsLoaded;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Camera cam;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isRendered;

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1082270", Offset = "0x1082270", VA = "0x1082270")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x108230C", Offset = "0x108230C", VA = "0x108230C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1082324", Offset = "0x1082324", VA = "0x1082324")]
	private void GetData()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x1082F34", Offset = "0x1082F34", VA = "0x1082F34")]
	[IteratorStateMachine(typeof(<TakeShot>d__36))]
	private IEnumerator TakeShot()
	{
		return null;
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1082FD0", Offset = "0x1082FD0", VA = "0x1082FD0")]
	[IteratorStateMachine(typeof(<MoveCamera>d__37))]
	private IEnumerator MoveCamera(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1083088", Offset = "0x1083088", VA = "0x1083088")]
	private void SetupPrefab(GameObject go)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x10833B8", Offset = "0x10833B8", VA = "0x10833B8")]
	[IteratorStateMachine(typeof(<ProcessAsset>d__39))]
	private IEnumerator ProcessAsset(AssetDict Asset)
	{
		return null;
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1083470", Offset = "0x1083470", VA = "0x1083470")]
	[IteratorStateMachine(typeof(<ChangeVariation>d__40))]
	private IEnumerator ChangeVariation(int variationNumber, GameObject toChange)
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1083530", Offset = "0x1083530", VA = "0x1083530")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x108353C", Offset = "0x108353C", VA = "0x108353C")]
	public PrefabSnapshot()
	{
	}
}
[Token(Token = "0x200015D")]
public class AssetDict
{
	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string cat;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject go;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material mat;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int var;

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1082E64", Offset = "0x1082E64", VA = "0x1082E64")]
	public AssetDict(string newCat, GameObject newGo)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1082ECC", Offset = "0x1082ECC", VA = "0x1082ECC")]
	public AssetDict(string newCat, Material newMat)
	{
	}
}
[Token(Token = "0x200015E")]
public class GOLifeTracker : MonoBehaviour
{
	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_debugOnly;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_debugCreation;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool m_debugUpdate;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool m_debugEnable;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool m_debugDisable;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_debugDestruction;

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1088824", Offset = "0x1088824", VA = "0x1088824")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x108898C", Offset = "0x108898C", VA = "0x108898C")]
	private void Update()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1088ABC", Offset = "0x1088ABC", VA = "0x1088ABC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1088C24", Offset = "0x1088C24", VA = "0x1088C24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1088D8C", Offset = "0x1088D8C", VA = "0x1088D8C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1088EF4", Offset = "0x1088EF4", VA = "0x1088EF4")]
	public GOLifeTracker()
	{
	}
}
[Token(Token = "0x200015F")]
public class DoorAngleFollower : MonoBehaviour
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject hitboxToFollow;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody doorRb;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DoorBehaviourInfo doorBehaviourInfo;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DoorBehaviour doorBehaviour;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dummy;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action FollowerBehaviour;

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1088F60", Offset = "0x1088F60", VA = "0x1088F60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1089184", Offset = "0x1089184", VA = "0x1089184")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x10892EC", Offset = "0x10892EC", VA = "0x10892EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1089434", Offset = "0x1089434", VA = "0x1089434")]
	private void Update()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1089590", Offset = "0x1089590", VA = "0x1089590")]
	private void ShouldDisableOnFlyInArchi()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1089754", Offset = "0x1089754", VA = "0x1089754")]
	private void CheckIfReEnable()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1089784", Offset = "0x1089784", VA = "0x1089784")]
	private void ReActivateRigidbody()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x10897D4", Offset = "0x10897D4", VA = "0x10897D4")]
	private void FollowAngle()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1089820", Offset = "0x1089820", VA = "0x1089820")]
	private void FollowPosition()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x108986C", Offset = "0x108986C", VA = "0x108986C")]
	private void FollowParentRotation()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1089994", Offset = "0x1089994", VA = "0x1089994")]
	public DoorAngleFollower()
	{
	}
}
[Token(Token = "0x2000160")]
public enum DoorBehaviour
{
	[Token(Token = "0x400076F")]
	RotationLeft,
	[Token(Token = "0x4000770")]
	RotationRight,
	[Token(Token = "0x4000771")]
	SlidingRight,
	[Token(Token = "0x4000772")]
	SlidingLeft,
	[Token(Token = "0x4000773")]
	FoldableParentLeft,
	[Token(Token = "0x4000774")]
	FoldableParentRight,
	[Token(Token = "0x4000775")]
	FoldableChildLeft,
	[Token(Token = "0x4000776")]
	FoldableChildRight,
	[Token(Token = "0x4000777")]
	Frame,
	[Token(Token = "0x4000778")]
	Arch
}
[Token(Token = "0x2000161")]
public class DoorBehaviourInfo : MonoBehaviour
{
	[Token(Token = "0x2000162")]
	public delegate void DoorMovementD(Rigidbody doorRigidbBody, bool forceClose = false);

	[Token(Token = "0x2000163")]
	public delegate void KeepMovementRegularD(Rigidbody doorRigidbody, ref bool doorFromAfar);

	[Token(Token = "0x2000164")]
	public delegate void FinishesMovementD(Rigidbody doorRigidbody, ref bool doorIsGrabbed, float angleSign = 0f);

	[Token(Token = "0x2000165")]
	[CompilerGenerated]
	private sealed class <WaitFramBeforeEvent>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody doorRigidbody;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DoorBehaviourInfo <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000667")]
			[Address(RVA = "0x108DA24", Offset = "0x108DA24", VA = "0x108DA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000669")]
			[Address(RVA = "0x108DA6C", Offset = "0x108DA6C", VA = "0x108DA6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x108D8AC", Offset = "0x108D8AC", VA = "0x108D8AC")]
		[DebuggerHidden]
		public <WaitFramBeforeEvent>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x108D8D4", Offset = "0x108D8D4", VA = "0x108D8D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x108D8D8", Offset = "0x108D8D8", VA = "0x108D8D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x108DA2C", Offset = "0x108DA2C", VA = "0x108DA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DoorBehaviour doorBehaviour;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float distanceToSlide;

	[Token(Token = "0x400077B")]
	private const int standardForce = 20;

	[Token(Token = "0x400077C")]
	private const int forceCloseFactor = 16;

	[Token(Token = "0x400077D")]
	private const int torqueForce = 30;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TransformData doorTr;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isOutsideTestDone;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool wasInAction;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool wasLeadingToOutside;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool isBlockedByObject;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool inMovement;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastHit hit;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Rigidbody rb;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CollisionDetection collisionDetection;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float distanceForCheck;

	[Token(Token = "0x170000B4")]
	public DoorMovementD DoorMovement
	{
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x108999C", Offset = "0x108999C", VA = "0x108999C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x10899A4", Offset = "0x10899A4", VA = "0x10899A4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public KeepMovementRegularD KeepInCheck
	{
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x10899AC", Offset = "0x10899AC", VA = "0x10899AC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000630")]
		[Address(RVA = "0x10899B4", Offset = "0x10899B4", VA = "0x10899B4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public FinishesMovementD FinishMovement
	{
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x10899BC", Offset = "0x10899BC", VA = "0x10899BC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x10899C4", Offset = "0x10899C4", VA = "0x10899C4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public bool IsFakeMovement
	{
		[Token(Token = "0x6000635")]
		[Address(RVA = "0x1089B04", Offset = "0x1089B04", VA = "0x1089B04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B8")]
	public bool LeadsToTheOutside
	{
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x108955C", Offset = "0x108955C", VA = "0x108955C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B9")]
	public bool IsFoldable
	{
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x1089E84", Offset = "0x1089E84", VA = "0x1089E84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BA")]
	public bool IsChildFoldable
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x1089EAC", Offset = "0x1089EAC", VA = "0x1089EAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BB")]
	public bool IsSlidable
	{
		[Token(Token = "0x6000639")]
		[Address(RVA = "0x1089EC0", Offset = "0x1089EC0", VA = "0x1089EC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action OnDoorFinishedMovement
	{
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x10899CC", Offset = "0x10899CC", VA = "0x10899CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x1089A68", Offset = "0x1089A68", VA = "0x1089A68")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1089ED4", Offset = "0x1089ED4", VA = "0x1089ED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x108A78C", Offset = "0x108A78C", VA = "0x108A78C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x108A94C", Offset = "0x108A94C", VA = "0x108A94C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x108AB0C", Offset = "0x108AB0C", VA = "0x108AB0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x108B568", Offset = "0x108B568", VA = "0x108B568")]
	private void ForceDoorClose()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x108B5D4", Offset = "0x108B5D4", VA = "0x108B5D4")]
	private void ReAskForOutsideTest()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x108A008", Offset = "0x108A008", VA = "0x108A008")]
	private void SubscribeFakeDelegates()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x108A1DC", Offset = "0x108A1DC", VA = "0x108A1DC")]
	public void SubscribeDelegates()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x108B5DC", Offset = "0x108B5DC", VA = "0x108B5DC")]
	public bool IsInContactWithOtherThanItself()
	{
		return default(bool);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x108AE6C", Offset = "0x108AE6C", VA = "0x108AE6C")]
	private void UnsubscribeDelegates()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x108B894", Offset = "0x108B894", VA = "0x108B894")]
	private void FinalUnsubscribeDelegate()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1089B8C", Offset = "0x1089B8C", VA = "0x1089B8C")]
	private bool CheckExterior(float sign)
	{
		return default(bool);
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x108BDF4", Offset = "0x108BDF4", VA = "0x108BDF4")]
	public DoorBehaviour GetDoorBehaviour()
	{
		return default(DoorBehaviour);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x108BDFC", Offset = "0x108BDFC", VA = "0x108BDFC")]
	private void RotateFoldable(Rigidbody doorRigidBody, bool forceClose = false)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x108C02C", Offset = "0x108C02C", VA = "0x108C02C")]
	private void SlidingDoor(Rigidbody doorRigidBody, bool forceClose = false)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x108C1B0", Offset = "0x108C1B0", VA = "0x108C1B0")]
	private void LocalAngleFollower(Rigidbody doorRigidBody, bool forceClose = false)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x108C370", Offset = "0x108C370", VA = "0x108C370")]
	private void KeepFoldableInCheck(Rigidbody doorRigidBody, ref bool doorFromAfar)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x108C830", Offset = "0x108C830", VA = "0x108C830")]
	private void KeepAngleInCheck(Rigidbody doorRigidBody, ref bool doorFromAfar)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x108C7A0", Offset = "0x108C7A0", VA = "0x108C7A0")]
	[IteratorStateMachine(typeof(<WaitFramBeforeEvent>d__61))]
	private IEnumerator WaitFramBeforeEvent(Rigidbody doorRigidbody)
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x108CC60", Offset = "0x108CC60", VA = "0x108CC60")]
	private void KeepPositionInCheck(Rigidbody doorRigidBody, ref bool doorFromAfar)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x108CFDC", Offset = "0x108CFDC", VA = "0x108CFDC")]
	private void FinishesFoldable(Rigidbody doorRigidBody, ref bool doorIsGrabbed, float angleSign)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x108D07C", Offset = "0x108D07C", VA = "0x108D07C")]
	private void FinishesAngleRotation(Rigidbody doorRigidBody, ref bool doorIsGrabbed, float angleSign)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x108D108", Offset = "0x108D108", VA = "0x108D108")]
	private void FinishesTranslation(Rigidbody doorRigidBody, ref bool doorIsGrabbed, float sign)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x108D1D4", Offset = "0x108D1D4", VA = "0x108D1D4")]
	private void FakeDoorMovement(Rigidbody door, bool forceClose = false)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x108D23C", Offset = "0x108D23C", VA = "0x108D23C")]
	private void FakeKeepInCheck(Rigidbody door, ref bool fake)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x108D244", Offset = "0x108D244", VA = "0x108D244")]
	private void FakeFinishMovement(Rigidbody door, ref bool fake, float fakeF)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x108D24C", Offset = "0x108D24C", VA = "0x108D24C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x108B414", Offset = "0x108B414", VA = "0x108B414")]
	private void ToggleColliders(bool enabled)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x108D250", Offset = "0x108D250", VA = "0x108D250")]
	private void DisableColliders()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x108D258", Offset = "0x108D258", VA = "0x108D258")]
	public DoorBehaviourInfo()
	{
	}
}
[Token(Token = "0x2000166")]
public class DoorGrab : MonoBehaviour
{
	[Token(Token = "0x2000167")]
	[CompilerGenerated]
	private sealed class <UnselectLater>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x108FBF4", Offset = "0x108FBF4", VA = "0x108FBF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0x108FC3C", Offset = "0x108FC3C", VA = "0x108FC3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x108FAA0", Offset = "0x108FAA0", VA = "0x108FAA0")]
		[DebuggerHidden]
		public <UnselectLater>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x108FB28", Offset = "0x108FB28", VA = "0x108FB28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x108FB2C", Offset = "0x108FB2C", VA = "0x108FB2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x108FBFC", Offset = "0x108FBFC", VA = "0x108FBFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool doorIsGrabbed;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ManagerTools.HandHolding side;

	[Token(Token = "0x4000792")]
	private const string doorTag = "Doors";

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPosition;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startAngle;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float angleSign;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float startPosX;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] toFollow;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody[] doorRigidBody;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DoorBehaviourInfo[] doorBehaviour;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool doorFromAfar;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private cakeslice.Outline currentHandleOutline;

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x108DA74", Offset = "0x108DA74", VA = "0x108DA74")]
	private void Start()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x108DAC4", Offset = "0x108DAC4", VA = "0x108DAC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x108DD60", Offset = "0x108DD60", VA = "0x108DD60")]
	private void DoorMvtFromAfar()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x108E548", Offset = "0x108E548", VA = "0x108E548")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x108E6D4", Offset = "0x108E6D4", VA = "0x108E6D4")]
	private void CheckIfHandleCloseToHand()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x108EB10", Offset = "0x108EB10", VA = "0x108EB10")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x108ED2C", Offset = "0x108ED2C", VA = "0x108ED2C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x108EE04", Offset = "0x108EE04", VA = "0x108EE04")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x108F058", Offset = "0x108F058", VA = "0x108F058")]
	private void FollowHand(GameObject go, Transform handTransform)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x108F840", Offset = "0x108F840", VA = "0x108F840")]
	private void FollowFoldable(GameObject go, Transform handTransform)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x108F55C", Offset = "0x108F55C", VA = "0x108F55C")]
	private void FollowPosition(GameObject go, Transform handTransform)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x108F2FC", Offset = "0x108F2FC", VA = "0x108F2FC")]
	private void FollowAngle(GameObject go, Transform handTransform)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x108F29C", Offset = "0x108F29C", VA = "0x108F29C")]
	[IteratorStateMachine(typeof(<UnselectLater>d__24))]
	private IEnumerator UnselectLater()
	{
		return null;
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x108FAC8", Offset = "0x108FAC8", VA = "0x108FAC8")]
	public DoorGrab()
	{
	}
}
[Token(Token = "0x2000168")]
public class DoorPart : MonoBehaviour
{
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDouble;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hitboxToFollow;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject secondHitboxToFollow;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x108FC44", Offset = "0x108FC44", VA = "0x108FC44")]
	public DoorPart()
	{
	}
}
[Token(Token = "0x2000169")]
public class DroneAI : MonoBehaviour
{
	[Token(Token = "0x200016A")]
	public enum Event
	{
		[Token(Token = "0x40007B4")]
		None = -2,
		[Token(Token = "0x40007B5")]
		Wander = -1,
		[Token(Token = "0x40007B6")]
		Armoire = 0,
		[Token(Token = "0x40007B7")]
		Maquette = 1,
		[Token(Token = "0x40007B8")]
		Note = 2,
		[Token(Token = "0x40007B9")]
		Table = 3,
		[Token(Token = "0x40007BA")]
		Tableau1 = 4,
		[Token(Token = "0x40007BB")]
		Tableau2 = 5,
		[Token(Token = "0x40007BC")]
		Welcome = -3,
		[Token(Token = "0x40007BD")]
		Maquette1 = 6,
		[Token(Token = "0x40007BE")]
		Maquette2 = 7
	}

	[Token(Token = "0x200016B")]
	[CompilerGenerated]
	private sealed class <Blased>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DroneAI <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0x1090440", Offset = "0x1090440", VA = "0x1090440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0x1090488", Offset = "0x1090488", VA = "0x1090488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x1090008", Offset = "0x1090008", VA = "0x1090008")]
		[DebuggerHidden]
		public <Blased>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x10901B8", Offset = "0x10901B8", VA = "0x10901B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x10901BC", Offset = "0x10901BC", VA = "0x10901BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x1090448", Offset = "0x1090448", VA = "0x1090448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016C")]
	[CompilerGenerated]
	private sealed class <TravelCheckDestinationReached>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DroneAI <>4__this;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Event randomEvent;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform target;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <destReached>5__2;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000696")]
			[Address(RVA = "0x10907A0", Offset = "0x10907A0", VA = "0x10907A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0x10907E8", Offset = "0x10907E8", VA = "0x10907E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x1090154", Offset = "0x1090154", VA = "0x1090154")]
		[DebuggerHidden]
		public <TravelCheckDestinationReached>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x1090490", Offset = "0x1090490", VA = "0x1090490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x1090494", Offset = "0x1090494", VA = "0x1090494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x10907A8", Offset = "0x10907A8", VA = "0x10907A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Timer")]
	public float m_EventTimer;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_MaquetteTime;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Wander")]
	public float m_WanderRadius;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Blased mode")]
	public int m_HitCountBeforeBlased;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_MadDuration;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_BlasedDuration;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_PountDuration;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private DronePhysics m_dronePhysics;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private DroneExpression m_droneExpression;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Event")]
	private Event[] m_Events;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] m_EventTransforms;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Event m_CurrentEvent;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Event m_LastEvent;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_currTimer;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NavMeshAgent m_agent;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_timer;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine m_coroutine;

	[Token(Token = "0x170000C0")]
	public Transform m_CurrentTarget
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x108FC4C", Offset = "0x108FC4C", VA = "0x108FC4C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x108FC54", Offset = "0x108FC54", VA = "0x108FC54")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x108FC5C", Offset = "0x108FC5C", VA = "0x108FC5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x108FDEC", Offset = "0x108FDEC", VA = "0x108FDEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x108FF44", Offset = "0x108FF44", VA = "0x108FF44")]
	public void CancelEvent()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x108FF88", Offset = "0x108FF88", VA = "0x108FF88")]
	[ContextMenu("NextAction")]
	public void NextAction()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x108FF94", Offset = "0x108FF94", VA = "0x108FF94")]
	[IteratorStateMachine(typeof(<Blased>d__26))]
	public IEnumerator Blased()
	{
		return null;
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x108FE4C", Offset = "0x108FE4C", VA = "0x108FE4C")]
	private void RandomEvent()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x1090030", Offset = "0x1090030", VA = "0x1090030")]
	private void RandomWander()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x10900B4", Offset = "0x10900B4", VA = "0x10900B4")]
	private Vector3 RandomNavSphere(Vector3 origin, float dist, int layermask)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1090138", Offset = "0x1090138", VA = "0x1090138")]
	private void TravelTo(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x108FD54", Offset = "0x108FD54", VA = "0x108FD54")]
	[IteratorStateMachine(typeof(<TravelCheckDestinationReached>d__31))]
	private IEnumerator TravelCheckDestinationReached(Transform target, Event randomEvent)
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1090070", Offset = "0x1090070", VA = "0x1090070")]
	private void TimerUpdate(Event randomEvent)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x109017C", Offset = "0x109017C", VA = "0x109017C")]
	public DroneAI()
	{
	}
}
[Token(Token = "0x200016D")]
public class DroneExpression : MonoBehaviour
{
	[Token(Token = "0x200016E")]
	public enum Expression
	{
		[Token(Token = "0x40007CC")]
		Angry,
		[Token(Token = "0x40007CD")]
		Blased,
		[Token(Token = "0x40007CE")]
		Blased_Blink,
		[Token(Token = "0x40007CF")]
		Boxer,
		[Token(Token = "0x40007D0")]
		Idle,
		[Token(Token = "0x40007D1")]
		Idle_Blink,
		[Token(Token = "0x40007D2")]
		Deselect_Tool,
		[Token(Token = "0x40007D3")]
		Select_Tool,
		[Token(Token = "0x40007D4")]
		Surprise,
		[Token(Token = "0x40007D5")]
		Unstunded,
		[Token(Token = "0x40007D6")]
		Vicos,
		[Token(Token = "0x40007D7")]
		Welcome,
		[Token(Token = "0x40007D8")]
		XX
	}

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer m_meshRenderer;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture[] m_expressions;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator m_animator;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x10907F0", Offset = "0x10907F0", VA = "0x10907F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x1090848", Offset = "0x1090848", VA = "0x1090848")]
	public void SetExpression(Expression expression)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1090784", Offset = "0x1090784", VA = "0x1090784")]
	public void SetTrigger(string name)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1090420", Offset = "0x1090420", VA = "0x1090420")]
	public void SetBool(string name, bool value)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x109084C", Offset = "0x109084C", VA = "0x109084C")]
	private void SetExpression(int index)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x10908A4", Offset = "0x10908A4", VA = "0x10908A4")]
	public DroneExpression()
	{
	}
}
[Token(Token = "0x200016F")]
public class DroneGrabTools : MonoBehaviour
{
	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ManagerTools.HandHolding hand;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject collidedObject;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject lastSelectedObject;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mvtMat;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Material[][] toolsMaterials;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Dictionary<string, int> toolsNumber;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x10908AC", Offset = "0x10908AC", VA = "0x10908AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1090DF4", Offset = "0x1090DF4", VA = "0x1090DF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x1090F04", Offset = "0x1090F04", VA = "0x1090F04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1091100", Offset = "0x1091100", VA = "0x1091100")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1091308", Offset = "0x1091308", VA = "0x1091308")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x109142C", Offset = "0x109142C", VA = "0x109142C")]
	private void OnToolUnselected()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x10915F4", Offset = "0x10915F4", VA = "0x10915F4")]
	public DroneGrabTools()
	{
	}
}
[Token(Token = "0x2000170")]
public class DronePhysics : MonoBehaviour
{
	[Token(Token = "0x2000171")]
	[CompilerGenerated]
	private sealed class <Stun>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DronePhysics <>4__this;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B5")]
			[Address(RVA = "0x10925C0", Offset = "0x10925C0", VA = "0x10925C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006B7")]
			[Address(RVA = "0x1092608", Offset = "0x1092608", VA = "0x1092608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x1092434", Offset = "0x1092434", VA = "0x1092434")]
		[DebuggerHidden]
		public <Stun>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x1092484", Offset = "0x1092484", VA = "0x1092484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x1092488", Offset = "0x1092488", VA = "0x1092488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x10925C8", Offset = "0x10925C8", VA = "0x10925C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onPlayerHit;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onResetPosition;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[Header("Translation behaviour")]
	private float m_MovementSpeed;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_RotationSpeed;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	[Tooltip("Distance min to consider the drone has reset its position")]
	private float m_PositionResetRangeMin;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[Tooltip("Distance max before the drone reset its position")]
	private float m_PositionResetRangeMax;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Header("Maquette")]
	[SerializeField]
	private float m_MaquetteViewYOffset;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_MaquetteViewZOffset;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float m_MaquetteDistance;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Physics")]
	[SerializeField]
	private float m_ImpactVelocityReduction;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Stun mode")]
	[SerializeField]
	[Tooltip("Duration of the stun after the player hit the drone")]
	private float m_StunTimeAfterPlayerHit;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private DroneAI m_droneAI;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private DroneExpression m_droneExpression;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine m_coroutine;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_positionReset;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float moveGradually;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rotateGradually;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int m_playerHit;

	[Token(Token = "0x170000C5")]
	public bool m_Stun
	{
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x1091770", Offset = "0x1091770", VA = "0x1091770")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x1091778", Offset = "0x1091778", VA = "0x1091778")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1091784", Offset = "0x1091784", VA = "0x1091784")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x10917F4", Offset = "0x10917F4", VA = "0x10917F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x109184C", Offset = "0x109184C", VA = "0x109184C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1092124", Offset = "0x1092124", VA = "0x1092124")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x10922D0", Offset = "0x10922D0", VA = "0x10922D0")]
	[ContextMenu("OnPlayerHit")]
	public void OnPlayerHit()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1092404", Offset = "0x1092404", VA = "0x1092404")]
	[ContextMenu("OnResetPosition")]
	public void OnResetPosition()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x109077C", Offset = "0x109077C", VA = "0x109077C")]
	public void ResetAcceleration()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1092380", Offset = "0x1092380", VA = "0x1092380")]
	[IteratorStateMachine(typeof(<Stun>d__30))]
	private IEnumerator Stun(float duration)
	{
		return null;
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1091788", Offset = "0x1091788", VA = "0x1091788")]
	private void ForceReset()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x109245C", Offset = "0x109245C", VA = "0x109245C")]
	public DronePhysics()
	{
	}
}
[Token(Token = "0x2000172")]
public class DroneTool : MonoBehaviour
{
	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onHandEntered;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onToolSelected;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onToolUnselected;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onRoomCreating;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onRoomCreated;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_TransformLeftTarget;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_TransformRightTarget;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_LookAtTarget;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float m_MovementSpeed;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float m_RotationSpeed;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float m_PositionResetRangeMin;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float m_PositionResetRangeMax;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool m_LeftTarget;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform m_activeTarget;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Animator m_animator;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool m_positionReset;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int m_handEntered;

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x1092610", Offset = "0x1092610", VA = "0x1092610")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x10926A0", Offset = "0x10926A0", VA = "0x10926A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x1092A60", Offset = "0x1092A60", VA = "0x1092A60")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1092B78", Offset = "0x1092B78", VA = "0x1092B78")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x1092C2C", Offset = "0x1092C2C", VA = "0x1092C2C")]
	public void OnResetToIdle()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1092B14", Offset = "0x1092B14", VA = "0x1092B14")]
	public void OnHandEntered()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1092C84", Offset = "0x1092C84", VA = "0x1092C84")]
	public void OnToolSelected()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1092CE8", Offset = "0x1092CE8", VA = "0x1092CE8")]
	public void OnToolUnselected()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1092D4C", Offset = "0x1092D4C", VA = "0x1092D4C")]
	public void OnRoomCreating()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1092DB4", Offset = "0x1092DB4", VA = "0x1092DB4")]
	public void onRoomCreatingCancel()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1092DB8", Offset = "0x1092DB8", VA = "0x1092DB8")]
	public void OnRoomCreated()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1092E24", Offset = "0x1092E24", VA = "0x1092E24")]
	public DroneTool()
	{
	}
}
[Token(Token = "0x2000173")]
public class DroneTools : MonoBehaviour
{
	[Token(Token = "0x2000174")]
	[CompilerGenerated]
	private sealed class <Stun>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DroneTools <>4__this;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x1093E60", Offset = "0x1093E60", VA = "0x1093E60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x1093EA8", Offset = "0x1093EA8", VA = "0x1093EA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x1093BF8", Offset = "0x1093BF8", VA = "0x1093BF8")]
		[DebuggerHidden]
		public <Stun>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1093D34", Offset = "0x1093D34", VA = "0x1093D34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1093D38", Offset = "0x1093D38", VA = "0x1093D38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1093E68", Offset = "0x1093E68", VA = "0x1093E68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000175")]
	[CompilerGenerated]
	private sealed class <Blased>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DroneTools <>4__this;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float madDuration;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float blasedDuration;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pountDuration;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E2")]
			[Address(RVA = "0x10940E8", Offset = "0x10940E8", VA = "0x10940E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E4")]
			[Address(RVA = "0x1094130", Offset = "0x1094130", VA = "0x1094130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1093CB8", Offset = "0x1093CB8", VA = "0x1093CB8")]
		[DebuggerHidden]
		public <Blased>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1093EB0", Offset = "0x1093EB0", VA = "0x1093EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1093EB4", Offset = "0x1093EB4", VA = "0x1093EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x10940F0", Offset = "0x10940F0", VA = "0x10940F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DroneTools m_Instance;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onDroneAppear;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onHandEntered;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onToolSelected;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onToolUnselected;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onRoomCreating;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onRoomCreated;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onPlayerHit;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onResetPosition;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_FollowPlayer;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[Header("Translation behaviour")]
	private float m_MovementSpeed;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float m_RotationSpeed;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float m_PositionResetRangeMin;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float m_PositionResetRangeMax;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	[Header("Stun mode")]
	private float m_StunTimeAfterPlayerHit;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[Header("Blased mode")]
	private float m_ImpactVelocityReduction;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private int m_HitCountBeforeBlased;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float m_MadDuration;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float m_BlasedDuration;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float m_PountDuration;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	[Header("Target position")]
	private Vector3 m_LeftOffset;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private bool m_LeftTarget;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private DroneAI m_droneAI;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform m_LookAtTarget;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 m_activeTarget;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Animator m_animator;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool m_positionReset;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool m_welcome;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool m_stun;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float moveGradually;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float rotateGradually;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int m_playerHit;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine m_coroutine;

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1092E40", Offset = "0x1092E40", VA = "0x1092E40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1092E98", Offset = "0x1092E98", VA = "0x1092E98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1092EC8", Offset = "0x1092EC8", VA = "0x1092EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1092FF0", Offset = "0x1092FF0", VA = "0x1092FF0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1093644", Offset = "0x1093644", VA = "0x1093644")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1093864", Offset = "0x1093864", VA = "0x1093864")]
	[ContextMenu("OnResetToIdle")]
	public void OnResetToIdle()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1093910", Offset = "0x1093910", VA = "0x1093910")]
	[ContextMenu("OnDroneAppear")]
	public void OnDroneAppear()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1093974", Offset = "0x1093974", VA = "0x1093974")]
	[ContextMenu("OnToolSelected")]
	public void OnToolSelected()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x10939D8", Offset = "0x10939D8", VA = "0x10939D8")]
	[ContextMenu("OnToolUnselected")]
	public void OnToolUnselected()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x1093A3C", Offset = "0x1093A3C", VA = "0x1093A3C")]
	[ContextMenu("OnRoomCreating")]
	public void OnRoomCreating()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x1093A58", Offset = "0x1093A58", VA = "0x1093A58")]
	[ContextMenu("OnRoomCreatingCancel")]
	public void OnRoomCreatingCancel()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x1093A5C", Offset = "0x1093A5C", VA = "0x1093A5C")]
	[ContextMenu("OnRoomCreated")]
	public void OnRoomCreated()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x10937BC", Offset = "0x10937BC", VA = "0x10937BC")]
	[ContextMenu("OnPlayerHit")]
	public void OnPlayerHit()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x1093B88", Offset = "0x1093B88", VA = "0x1093B88")]
	[ContextMenu("OnResetPosition")]
	public void OnResetPosition()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x1093628", Offset = "0x1093628", VA = "0x1093628")]
	public void TriggerAnimation(string animationName)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1093BB8", Offset = "0x1093BB8", VA = "0x1093BB8")]
	public void EnableDroneAI()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x1093BD8", Offset = "0x1093BD8", VA = "0x1093BD8")]
	public void DisableDroneAI()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x1092EB0", Offset = "0x1092EB0", VA = "0x1092EB0")]
	private void ResetDrone()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1093B04", Offset = "0x1093B04", VA = "0x1093B04")]
	[IteratorStateMachine(typeof(<Stun>d__52))]
	private IEnumerator Stun(float duration)
	{
		return null;
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1093C20", Offset = "0x1093C20", VA = "0x1093C20")]
	[IteratorStateMachine(typeof(<Blased>d__53))]
	private IEnumerator Blased(float madDuration, float blasedDuration, float pountDuration)
	{
		return null;
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1093CE0", Offset = "0x1093CE0", VA = "0x1093CE0")]
	public DroneTools()
	{
	}
}
[Token(Token = "0x2000176")]
public class FadeOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer[] m_meshRenderers;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Material[]> m_oldMaterials;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_handEntered;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x1094138", Offset = "0x1094138", VA = "0x1094138")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1094614", Offset = "0x1094614", VA = "0x1094614")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x10941F0", Offset = "0x10941F0", VA = "0x10941F0")]
	private void AssignTempMat(Renderer[] renderers, out List<Material[]> oldMaterials)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x10946C8", Offset = "0x10946C8", VA = "0x10946C8")]
	private void GiveMatBack(Renderer[] renderers, List<Material[]> oldMaterials)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1094830", Offset = "0x1094830", VA = "0x1094830")]
	public FadeOnTrigger()
	{
	}
}
[Token(Token = "0x2000177")]
public class KinematicVelocity : MonoBehaviour
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_newPosition;

	[Token(Token = "0x170000CC")]
	public Vector3 m_Velocity
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1094838", Offset = "0x1094838", VA = "0x1094838")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1094844", Offset = "0x1094844", VA = "0x1094844")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1094850", Offset = "0x1094850", VA = "0x1094850")]
	private void Start()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1094880", Offset = "0x1094880", VA = "0x1094880")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x10948F8", Offset = "0x10948F8", VA = "0x10948F8")]
	public KinematicVelocity()
	{
	}
}
[Token(Token = "0x2000178")]
[SelectionBase]
public class Disappear6DofObject : MonoBehaviour
{
	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float alpha;

	[Token(Token = "0x400083C")]
	private const float fadeDuration = 0.5f;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isChildrenOfDisappeared;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObjectMaterial objMat;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material[] oldMaterials;

	[Token(Token = "0x170000CD")]
	private bool HasOriginalMaterials
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x1094900", Offset = "0x1094900", VA = "0x1094900")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CE")]
	public bool ForbiddenSelection
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x1094A90", Offset = "0x1094A90", VA = "0x1094A90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CF")]
	public Vector3 StartScale
	{
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x1094AA8", Offset = "0x1094AA8", VA = "0x1094AA8")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x1094AB4", Offset = "0x1094AB4", VA = "0x1094AB4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1094AC0", Offset = "0x1094AC0", VA = "0x1094AC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1094BD4", Offset = "0x1094BD4", VA = "0x1094BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1094D40", Offset = "0x1094D40", VA = "0x1094D40")]
	private void MakeObjectDisappear()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1094D84", Offset = "0x1094D84", VA = "0x1094D84")]
	private void MakeObjectAppear()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1095160", Offset = "0x1095160", VA = "0x1095160")]
	private void UpdateAlpha()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1095514", Offset = "0x1095514", VA = "0x1095514")]
	public void ResetStartScale()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1094DE4", Offset = "0x1094DE4", VA = "0x1094DE4")]
	private void SetTransparentRenderer()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x109560C", Offset = "0x109560C", VA = "0x109560C")]
	private void OldMaterialLoaded(Material mat, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x10956E4", Offset = "0x10956E4", VA = "0x10956E4")]
	private void CopyMaterialParams(Material source, Material dest)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1095414", Offset = "0x1095414", VA = "0x1095414")]
	private void SetOriginalMaterials()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1095C88", Offset = "0x1095C88", VA = "0x1095C88")]
	public void SetOriginalMaterialFromPUN()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1095D7C", Offset = "0x1095D7C", VA = "0x1095D7C")]
	public Disappear6DofObject()
	{
	}
}
[Token(Token = "0x2000179")]
public class LightObject : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	private enum EType
	{
		[Token(Token = "0x4000852")]
		Null,
		[Token(Token = "0x4000853")]
		Obj,
		[Token(Token = "0x4000854")]
		WallLeft,
		[Token(Token = "0x4000855")]
		WallRight,
		[Token(Token = "0x4000856")]
		Floor,
		[Token(Token = "0x4000857")]
		Ceiling,
		[Token(Token = "0x4000858")]
		Avatar,
		[Token(Token = "0x4000859")]
		PaintPreviewWall,
		[Token(Token = "0x400085A")]
		PaintPreviewFloor,
		[Token(Token = "0x400085B")]
		PaintPreviewCeiling,
		[Token(Token = "0x400085C")]
		Door
	}

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer renderer;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject avatarLightGO;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Light avatarLight;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Room room;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Room lastRoom;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Wall wall;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Light> lights;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EType type;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 lastPos;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Light nearestLight;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Light nearestLight2;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public bool isAvatar;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isPreviewOnLeft;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool isAutomaticLight;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 cellPosition;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool updateEveryFrame;

	[Token(Token = "0x170000D0")]
	public bool UpdateEveryFrame
	{
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x1095D84", Offset = "0x1095D84", VA = "0x1095D84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1095D8C", Offset = "0x1095D8C", VA = "0x1095D8C")]
		set
		{
		}
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1095F74", Offset = "0x1095F74", VA = "0x1095F74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1095F7C", Offset = "0x1095F7C", VA = "0x1095F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x109614C", Offset = "0x109614C", VA = "0x109614C")]
	public void ForceCheckRoom()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x10961A4", Offset = "0x10961A4", VA = "0x10961A4")]
	public void ForceAll()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1096218", Offset = "0x1096218", VA = "0x1096218")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1096280", Offset = "0x1096280", VA = "0x1096280")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x10963D4", Offset = "0x10963D4", VA = "0x10963D4")]
	[ContextMenu("OnLightUpdate")]
	public void OnLightUpdate()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x10963DC", Offset = "0x10963DC", VA = "0x10963DC")]
	public void OnLightUpdate(bool force)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x10969D4", Offset = "0x10969D4", VA = "0x10969D4")]
	private void UpdateObject(Light currentMovingLight, bool force)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1096D10", Offset = "0x1096D10", VA = "0x1096D10")]
	private void UpdateNotObject(Light currentMovingLight, bool force)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x10987E8", Offset = "0x10987E8", VA = "0x10987E8")]
	public void OnLightUpdateLight()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x109844C", Offset = "0x109844C", VA = "0x109844C")]
	private Light FindNearestLight(out Light nearestLight2)
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x10987F0", Offset = "0x10987F0", VA = "0x10987F0")]
	private Light NearestLightWall(Wall wall, bool isLeft)
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1097960", Offset = "0x1097960", VA = "0x1097960")]
	private Light NearestLightObject()
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1098D6C", Offset = "0x1098D6C", VA = "0x1098D6C")]
	private Light NearestLightAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1098C78", Offset = "0x1098C78", VA = "0x1098C78")]
	private Light NearestLightFloor()
	{
		return null;
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x10971A4", Offset = "0x10971A4", VA = "0x10971A4")]
	private void FindRoom()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x10966B0", Offset = "0x10966B0", VA = "0x10966B0")]
	private void GetObjectType()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1097878", Offset = "0x1097878", VA = "0x1097878")]
	private void ListLights()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x1097BC0", Offset = "0x1097BC0", VA = "0x1097BC0")]
	private void SetLightInMaterials(Light nearestLight, Light nearestLight2)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x109901C", Offset = "0x109901C", VA = "0x109901C")]
	private Vector4 ComputeAttenuation(Light light)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x1099228", Offset = "0x1099228", VA = "0x1099228")]
	public LightObject()
	{
	}
}
[Token(Token = "0x200017B")]
public class MirrorCam : MonoBehaviour
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera mainCam;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture[] tex;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentTexture;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Bounds mirrorBounds;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int num;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int num2;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int resolution;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer renderer;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material mirrorMat;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material archiMat;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1099288", Offset = "0x1099288", VA = "0x1099288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1099F60", Offset = "0x1099F60", VA = "0x1099F60")]
	public void AllocateRenderTextures()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x109A410", Offset = "0x109A410", VA = "0x109A410")]
	private void Update()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x109A59C", Offset = "0x109A59C", VA = "0x109A59C")]
	private bool ShouldDisplayMirror(MeshRenderer rend)
	{
		return default(bool);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x109A668", Offset = "0x109A668", VA = "0x109A668")]
	private void SetRenderTexture(MeshRenderer rend)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x109A73C", Offset = "0x109A73C", VA = "0x109A73C")]
	private void UpdateCameraMatrixAndPosition()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x109AA30", Offset = "0x109AA30", VA = "0x109AA30")]
	private Matrix4x4 CalculateReflectionMatrix(Plane plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x109AB2C", Offset = "0x109AB2C", VA = "0x109AB2C")]
	private Matrix4x4 ComputeProjectionMatrix(Plane mirrorPlane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x109B11C", Offset = "0x109B11C", VA = "0x109B11C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x109B210", Offset = "0x109B210", VA = "0x109B210")]
	public MirrorCam()
	{
	}
}
[Token(Token = "0x200017C")]
public class ObjectAppear : MonoBehaviour
{
	[Token(Token = "0x6000722")]
	[Address(RVA = "0x109B268", Offset = "0x109B268", VA = "0x109B268")]
	private void Start()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x109B4AC", Offset = "0x109B4AC", VA = "0x109B4AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x109B4B0", Offset = "0x109B4B0", VA = "0x109B4B0")]
	public ObjectAppear()
	{
	}
}
[Token(Token = "0x200017D")]
public class Moon_direction : MonoBehaviour
{
	[Token(Token = "0x6000725")]
	[Address(RVA = "0x109B4B8", Offset = "0x109B4B8", VA = "0x109B4B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x109B52C", Offset = "0x109B52C", VA = "0x109B52C")]
	public Moon_direction()
	{
	}
}
[Token(Token = "0x200017E")]
public class Skybox : MonoBehaviour
{
	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material archiMaterial;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Range(0f, 8f)]
	private float archiSkyboxIntensity;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject skybox;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer renderer;

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x109B534", Offset = "0x109B534", VA = "0x109B534")]
	private void Start()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x109D9CC", Offset = "0x109D9CC", VA = "0x109D9CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x109DB4C", Offset = "0x109DB4C", VA = "0x109DB4C")]
	public Skybox()
	{
	}
}
[Token(Token = "0x200017F")]
public class SolarSystem : MonoBehaviour
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SolarSystem _instance;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Sun;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Moon;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float _sunAngle;

	[Token(Token = "0x170000D1")]
	public static float SunAngle
	{
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x109DD10", Offset = "0x109DD10", VA = "0x109DD10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x109DD68", Offset = "0x109DD68", VA = "0x109DD68")]
		set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event Action SunAngleChanged
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x109DB60", Offset = "0x109DB60", VA = "0x109DB60")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x109DC38", Offset = "0x109DC38", VA = "0x109DC38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x109DEA0", Offset = "0x109DEA0", VA = "0x109DEA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x109E01C", Offset = "0x109E01C", VA = "0x109E01C")]
	public SolarSystem()
	{
	}
}
[Token(Token = "0x2000181")]
public class Sun_color : MonoBehaviour
{
	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light lt;

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x109E184", Offset = "0x109E184", VA = "0x109E184")]
	private void Update()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x109E210", Offset = "0x109E210", VA = "0x109E210")]
	public Sun_color()
	{
	}
}
[Token(Token = "0x2000182")]
public class Sun_direction : MonoBehaviour
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sunMinAngle;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sunHorizonIntens;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sunMaxIntens;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sunExponent;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color nightAmbient;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color dayAmbient;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color dawnAmbient;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color nightCeilAmbient;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color dayCeilAmbient;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color dawnCeilAmbient;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float attenuation1Day;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float attenuation2Day;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float attenuation1Night;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float attenuation2Night;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float ceilAtten1Day;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float ceilAtten2Day;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float ceilAtten1Night;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float ceilAtten2Night;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Sun_direction instance;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public float attenuation1;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public float attenuation2;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public float ceilAttenuation1;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public float ceilAttenuation2;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public Color ambient;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public Color ceilAmbient;

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x109E218", Offset = "0x109E218", VA = "0x109E218")]
	private void Start()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x109E270", Offset = "0x109E270", VA = "0x109E270")]
	private float f(float angle, float exponent)
	{
		return default(float);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x109E2A4", Offset = "0x109E2A4", VA = "0x109E2A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x109E5D4", Offset = "0x109E5D4", VA = "0x109E5D4")]
	public Sun_direction()
	{
	}
}
[Token(Token = "0x2000183")]
public class HD3DInterface : MonoBehaviour
{
	[Token(Token = "0x400088D")]
	public const string baseUrl = "https://koalabs:donkey@api5.homedesign3d.app";

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UserToken userToken;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x109E5F4", Offset = "0x109E5F4", VA = "0x109E5F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x109E660", Offset = "0x109E660", VA = "0x109E660")]
	public HD3DInterface()
	{
	}
}
[Token(Token = "0x2000184")]
public class HomeGuide : MonoBehaviour
{
	[Token(Token = "0x600073C")]
	[Address(RVA = "0x109E668", Offset = "0x109E668", VA = "0x109E668")]
	private void Start()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x109E718", Offset = "0x109E718", VA = "0x109E718")]
	public HomeGuide()
	{
	}
}
[Token(Token = "0x2000185")]
public class TextManager : MonoBehaviour
{
	[Token(Token = "0x2000186")]
	public delegate void OnLanguageChanged();

	[Token(Token = "0x2000188")]
	[CompilerGenerated]
	private sealed class <Start>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextManager <>4__this;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0x10A0148", Offset = "0x10A0148", VA = "0x10A0148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600075A")]
			[Address(RVA = "0x10A0190", Offset = "0x10A0190", VA = "0x10A0190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x109EB7C", Offset = "0x109EB7C", VA = "0x109EB7C")]
		[DebuggerHidden]
		public <Start>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x109FF0C", Offset = "0x109FF0C", VA = "0x109FF0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x109FF10", Offset = "0x109FF10", VA = "0x109FF10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x10A0150", Offset = "0x10A0150", VA = "0x10A0150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000189")]
	[CompilerGenerated]
	private sealed class <UpdateTextProgressive>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextManager <>4__this;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <index>5__2;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <updateQueueCount>5__3;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <displaying>5__4;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600075E")]
			[Address(RVA = "0x10A0648", Offset = "0x10A0648", VA = "0x10A0648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0x10A0690", Offset = "0x10A0690", VA = "0x10A0690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x109FC50", Offset = "0x109FC50", VA = "0x109FC50")]
		[DebuggerHidden]
		public <UpdateTextProgressive>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x10A0198", Offset = "0x10A0198", VA = "0x10A0198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x10A019C", Offset = "0x10A019C", VA = "0x10A019C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x10A0650", Offset = "0x10A0650", VA = "0x10A0650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TextManager _instance;

	[Token(Token = "0x4000890")]
	private const string database_name = "Localization.db";

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Localization;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string db_connection_path;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IDbConnection db_connection;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string filepath;

	[Token(Token = "0x4000895")]
	private const string table_name = "Language";

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isLoaded;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OnLanguageChanged onLanguageChanged;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float delay;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int updateBatchSize;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<TextSelector> textUpdateQueue;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine coroutineUpdateQueue;

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x109E720", Offset = "0x109E720", VA = "0x109E720")]
	public void Awake()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x109EB08", Offset = "0x109EB08", VA = "0x109EB08")]
	[IteratorStateMachine(typeof(<Start>d__15))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x109EBA4", Offset = "0x109EBA4", VA = "0x109EBA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x109ECBC", Offset = "0x109ECBC", VA = "0x109ECBC")]
	private void OnLogIn(JsonConverter.User _user, Sprite _avatar)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x109ECC0", Offset = "0x109ECC0", VA = "0x109ECC0")]
	private void OnLogOut(int _id)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x109E89C", Offset = "0x109E89C", VA = "0x109E89C")]
	private void GetLocalization()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x109ECC4", Offset = "0x109ECC4", VA = "0x109ECC4")]
	public void ChangeLanguage(string v)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x109E988", Offset = "0x109E988", VA = "0x109E988")]
	public void GetDataBase()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x109F270", Offset = "0x109F270", VA = "0x109F270")]
	public IDataReader GetTextByID(string TextID)
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x109F93C", Offset = "0x109F93C", VA = "0x109F93C")]
	public bool DatabaseState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x109F9E8", Offset = "0x109F9E8", VA = "0x109F9E8")]
	public void OpenDataBase()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x109FAA8", Offset = "0x109FAA8", VA = "0x109FAA8")]
	public void CloseDataBase()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x109F1E0", Offset = "0x109F1E0", VA = "0x109F1E0")]
	public void RegisterTextToUpdateQueue()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x109FB68", Offset = "0x109FB68", VA = "0x109FB68")]
	public void AddToUpdateQueue(TextSelector text)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x109F1FC", Offset = "0x109F1FC", VA = "0x109F1FC")]
	[IteratorStateMachine(typeof(<UpdateTextProgressive>d__28))]
	public IEnumerator UpdateTextProgressive()
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x109FC78", Offset = "0x109FC78", VA = "0x109FC78")]
	public TextManager()
	{
	}
}
[Token(Token = "0x200018A")]
public class TextSelector : MonoBehaviour
{
	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TMP_Text tmp;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string localization;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isSetup;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string userID;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IDataReader reader;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string TextID;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string optionalData;

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x10A0698", Offset = "0x10A0698", VA = "0x10A0698")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x10A069C", Offset = "0x10A069C", VA = "0x10A069C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x10A0358", Offset = "0x10A0358", VA = "0x10A0358")]
	public void Init()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x10A0ABC", Offset = "0x10A0ABC", VA = "0x10A0ABC")]
	public void OnLanguageChange()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x10A0B5C", Offset = "0x10A0B5C", VA = "0x10A0B5C")]
	public void SetText(string ID, string optionalData = "")
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x10A078C", Offset = "0x10A078C", VA = "0x10A078C")]
	private void GetText()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x10A0B94", Offset = "0x10A0B94", VA = "0x10A0B94")]
	public TextSelector()
	{
	}
}
[Token(Token = "0x200018B")]
public class LocomotionGrab : MonoBehaviour
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform projectionTransform;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocomotionController locomotionController;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isMoving;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool hasMoved;

	[Token(Token = "0x40008B2")]
	private const float speed = 1.85f;

	[Token(Token = "0x40008B3")]
	private const float drag = 0.9f;

	[Token(Token = "0x170000D6")]
	private bool IsMovementAllowed
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x10A0B9C", Offset = "0x10A0B9C", VA = "0x10A0B9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x10A0D54", Offset = "0x10A0D54", VA = "0x10A0D54")]
	public void GrabTranslation()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x10A0E70", Offset = "0x10A0E70", VA = "0x10A0E70")]
	private void Decelerate()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x10A0FF0", Offset = "0x10A0FF0", VA = "0x10A0FF0")]
	private void Move()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x10A1104", Offset = "0x10A1104", VA = "0x10A1104")]
	public void Enabled(bool state)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x10A11E0", Offset = "0x10A11E0", VA = "0x10A11E0")]
	public LocomotionGrab()
	{
	}
}
[Token(Token = "0x200018C")]
public class LocomotionSmooth : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform head;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 axis2D;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 forward;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 right;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 direction;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool initialized;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isMoving;

	[Token(Token = "0x170000D7")]
	public bool IsMoving
	{
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x10A11E8", Offset = "0x10A11E8", VA = "0x10A11E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x10A11F0", Offset = "0x10A11F0", VA = "0x10A11F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x10A1268", Offset = "0x10A1268", VA = "0x10A1268")]
	public void SmoothTranslation()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x10A15FC", Offset = "0x10A15FC", VA = "0x10A15FC")]
	public void Enabled(bool state)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x10A1618", Offset = "0x10A1618", VA = "0x10A1618")]
	public LocomotionSmooth()
	{
	}
}
[Token(Token = "0x200018D")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool EnableRotationSnap;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RotationAngle;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x14000011")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000773")]
		[Address(RVA = "0x10A1620", Offset = "0x10A1620", VA = "0x10A1620")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000774")]
		[Address(RVA = "0x10A16BC", Offset = "0x10A16BC", VA = "0x10A16BC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x10A1758", Offset = "0x10A1758", VA = "0x10A1758")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x10A17F4", Offset = "0x10A17F4", VA = "0x10A17F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x10A1890", Offset = "0x10A1890", VA = "0x10A1890")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x10A1970", Offset = "0x10A1970", VA = "0x10A1970")]
	private void Start()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x10A1974", Offset = "0x10A1974", VA = "0x10A1974")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x10A19C8", Offset = "0x10A19C8", VA = "0x10A19C8")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x10A1AEC", Offset = "0x10A1AEC", VA = "0x10A1AEC")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200018E")]
[RequireComponent(typeof(Camera))]
public class TunnelingVignetteController : MonoBehaviour
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ApertureSizeMin;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ApertureSizeMax;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ApertureSize;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FeatheringEffect;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _ProgressiveVignetteSpeed;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _ProgressiveVignette;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _EditingSettings;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject TunnelVignetteGO;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material TunnelingVignetteMaterial;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _ApertureSizeProperty;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _FeatheringEffectProperty;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LocomotionHandler locomotionHandler;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialized;

	[Token(Token = "0x170000D8")]
	public static TunnelingVignetteController instance
	{
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x10A1B04", Offset = "0x10A1B04", VA = "0x10A1B04")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x10A1B4C", Offset = "0x10A1B4C", VA = "0x10A1B4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x10A1BA4", Offset = "0x10A1BA4", VA = "0x10A1BA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x10A1CA0", Offset = "0x10A1CA0", VA = "0x10A1CA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x10A1CC0", Offset = "0x10A1CC0", VA = "0x10A1CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x10A1D9C", Offset = "0x10A1D9C", VA = "0x10A1D9C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x10A1F48", Offset = "0x10A1F48", VA = "0x10A1F48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x10A1F68", Offset = "0x10A1F68", VA = "0x10A1F68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x10A20DC", Offset = "0x10A20DC", VA = "0x10A20DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x10A2108", Offset = "0x10A2108", VA = "0x10A2108")]
	private void UpdateVignette()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x10A2124", Offset = "0x10A2124", VA = "0x10A2124")]
	private float GetCurrentApertureSize()
	{
		return default(float);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x10A2210", Offset = "0x10A2210", VA = "0x10A2210")]
	private void SetMaterialPropreties(float apertureSize, float featheringEffect)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x10A1EE8", Offset = "0x10A1EE8", VA = "0x10A1EE8")]
	public void SetVignetteValue(float value, bool toggle = true)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x10A2258", Offset = "0x10A2258", VA = "0x10A2258")]
	public TunnelingVignetteController()
	{
	}
}
[Token(Token = "0x200018F")]
public enum ActionType
{
	[Token(Token = "0x40008D7")]
	None,
	[Token(Token = "0x40008D8")]
	Move,
	[Token(Token = "0x40008D9")]
	Rotation,
	[Token(Token = "0x40008DA")]
	Scale
}
[Token(Token = "0x2000190")]
public class DuplicationHandler : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject onHoldGO;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool newObject;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool fromPocket;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static GameObject bboxFloor;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static GameObject bboxWall;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static GameObject bboxCeiling;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static GameObject currentBBOX;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static GameObject bboxFurnitureWall;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static PhotonView bboxFloorPV;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static PhotonView bboxWallPV;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static PhotonView bboxCeilingPV;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static PhotonView bboxFurnitureWallPV;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static DataBaseManager DBM;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float startDuplicationTime;

	[Token(Token = "0x170000D9")]
	public static bool transitionNewObject
	{
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x10A3274", Offset = "0x10A3274", VA = "0x10A3274")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x10A32CC", Offset = "0x10A32CC", VA = "0x10A32CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public static bool ShouldEndDuplication
	{
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x10A3328", Offset = "0x10A3328", VA = "0x10A3328")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x10A3380", Offset = "0x10A3380", VA = "0x10A3380")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x10A33DC", Offset = "0x10A33DC", VA = "0x10A33DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x10A3ED0", Offset = "0x10A3ED0", VA = "0x10A3ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x10A55F0", Offset = "0x10A55F0", VA = "0x10A55F0")]
	public static void DuplicateSelectedObject([Optional] GameObject newDuplication, ManagerTools.HandHolding handMoving = ManagerTools.HandHolding.None)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x10A4EA0", Offset = "0x10A4EA0", VA = "0x10A4EA0")]
	private static void ReturnInPocket()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x10A541C", Offset = "0x10A541C", VA = "0x10A541C")]
	private static void EndDuplication()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x10A467C", Offset = "0x10A467C", VA = "0x10A467C")]
	public static void CancelNewObject(bool endAllActions = true)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x10A9D00", Offset = "0x10A9D00", VA = "0x10A9D00")]
	public static void DuplicateSelectedObject()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x10A6D9C", Offset = "0x10A6D9C", VA = "0x10A6D9C")]
	private static void SendSetMaterialRPCDuplication(GameObject oldObj, bool initialised = true)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x10A69FC", Offset = "0x10A69FC", VA = "0x10A69FC")]
	private static void SendSetMaterialRPCNew(GameObject newDuplication)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x10A6FA8", Offset = "0x10A6FA8", VA = "0x10A6FA8")]
	private static XRBaseInteractor ReturnBaseInteractor(ManagerTools.HandHolding handMoving)
	{
		return null;
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x10A7DA8", Offset = "0x10A7DA8", VA = "0x10A7DA8")]
	private static void PositionObjectInBBOX(Vector3 deltaPos)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x10A7A50", Offset = "0x10A7A50", VA = "0x10A7A50")]
	private static void PositionBBOX(GameObject newDuplication)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x10A7694", Offset = "0x10A7694", VA = "0x10A7694")]
	private static void SetTag(GameObject newDuplication)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x10A818C", Offset = "0x10A818C", VA = "0x10A818C")]
	private static void AdjustLocalHeight()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x10A855C", Offset = "0x10A855C", VA = "0x10A855C")]
	private static void SetOutlineAndTags()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x10A7130", Offset = "0x10A7130", VA = "0x10A7130")]
	private static void AssignBBOX(out Vector3 deltaPos)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x10A8C50", Offset = "0x10A8C50", VA = "0x10A8C50")]
	public static void SetGOTransformToBBOX()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x10A3848", Offset = "0x10A3848", VA = "0x10A3848")]
	private void InitDuplicationMulti()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x10A3604", Offset = "0x10A3604", VA = "0x10A3604")]
	private void InitDuplicationLocal()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x10A9DCC", Offset = "0x10A9DCC", VA = "0x10A9DCC")]
	private static bool HeightSuperiorThreshold()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x10A9E6C", Offset = "0x10A9E6C", VA = "0x10A9E6C")]
	public DuplicationHandler()
	{
	}
}
[Token(Token = "0x2000191")]
public class ManagerActions : MonoBehaviour
{
	[Token(Token = "0x2000192")]
	public enum MenuHit
	{
		[Token(Token = "0x400090B")]
		None,
		[Token(Token = "0x400090C")]
		NonDominant,
		[Token(Token = "0x400090D")]
		Dominant
	}

	[Token(Token = "0x2000193")]
	[CompilerGenerated]
	private sealed class <RecordRedoLater>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D5")]
			[Address(RVA = "0x10B041C", Offset = "0x10B041C", VA = "0x10B041C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0x10B0464", Offset = "0x10B0464", VA = "0x10B0464", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x10ACED8", Offset = "0x10ACED8", VA = "0x10ACED8")]
		[DebuggerHidden]
		public <RecordRedoLater>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x10B0384", Offset = "0x10B0384", VA = "0x10B0384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x10B0388", Offset = "0x10B0388", VA = "0x10B0388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x10B0424", Offset = "0x10B0424", VA = "0x10B0424", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000194")]
	[CompilerGenerated]
	private sealed class <DeactivateLater>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0x10B05BC", Offset = "0x10B05BC", VA = "0x10B05BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0x10B0604", Offset = "0x10B0604", VA = "0x10B0604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x10AD4B4", Offset = "0x10AD4B4", VA = "0x10AD4B4")]
		[DebuggerHidden]
		public <DeactivateLater>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x10B046C", Offset = "0x10B046C", VA = "0x10B046C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x10B0470", Offset = "0x10B0470", VA = "0x10B0470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x10B05C4", Offset = "0x10B05C4", VA = "0x10B05C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000195")]
	[CompilerGenerated]
	private sealed class <DelayEndAction>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x10B0908", Offset = "0x10B0908", VA = "0x10B0908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x10B0950", Offset = "0x10B0950", VA = "0x10B0950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x10AF704", Offset = "0x10AF704", VA = "0x10AF704")]
		[DebuggerHidden]
		public <DelayEndAction>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x10B060C", Offset = "0x10B060C", VA = "0x10B060C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x10B0610", Offset = "0x10B0610", VA = "0x10B0610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x10B0910", Offset = "0x10B0910", VA = "0x10B0910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000196")]
	[CompilerGenerated]
	private sealed class <FURevert>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManagerActions <>4__this;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <isColliding>5__2;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool <wallUpdated>5__3;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x10B29E4", Offset = "0x10B29E4", VA = "0x10B29E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x10B2A2C", Offset = "0x10B2A2C", VA = "0x10B2A2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x10B01CC", Offset = "0x10B01CC", VA = "0x10B01CC")]
		[DebuggerHidden]
		public <FURevert>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x10B0958", Offset = "0x10B0958", VA = "0x10B0958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x10B095C", Offset = "0x10B095C", VA = "0x10B095C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x10B29EC", Offset = "0x10B29EC", VA = "0x10B29EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ManagerActions _instance;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static CollisionDetection[] collisionDetections;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static bool objectIsBeingScaled;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public static bool objectIsRotating;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Dictionary<string, GameObject> pocketDic;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static LinkedList<string> Pocket;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static bool interactedCM;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public static bool returnInPocket;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public static bool isWaitingRevert;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public static bool onHoldToSelect;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static bool isMenuToReSpawn;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public WatchNavigator Watch;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private static bool fixedUpdateRevertBegun;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine coroutineFURevert;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static List<MenuSpawn> menusToSpawn;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static bool waitForFinishDoorClose;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private static bool isForcedEndAction;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private static float startActionTimer;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Vector3 startPosition;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private static Quaternion startRotation;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static StairsGenerator STG;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static float startStairHeight;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private static Vector3 startScale;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static Transform startParent;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static Collider[] movingObjectColliders;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static GameObject lastPhysicsGameObject;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static bool removeFileNextUndo;

	[Token(Token = "0x170000DB")]
	public static bool IsAnObjectSelected
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x10AA078", Offset = "0x10AA078", VA = "0x10AA078")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DC")]
	public static bool IsAnObjectMoving
	{
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x10AA104", Offset = "0x10AA104", VA = "0x10AA104")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DD")]
	public static bool RotationIsAuthorized
	{
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x10AA214", Offset = "0x10AA214", VA = "0x10AA214")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DE")]
	public static bool IsScalingAuthorized
	{
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x10AA604", Offset = "0x10AA604", VA = "0x10AA604")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DF")]
	public static bool IsMovementAuthorized
	{
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x10AA758", Offset = "0x10AA758", VA = "0x10AA758")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E0")]
	public static bool IsUiAuthorized
	{
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x10AA93C", Offset = "0x10AA93C", VA = "0x10AA93C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E1")]
	public static MenuHit IsMenuHit
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x10A5058", Offset = "0x10A5058", VA = "0x10A5058")]
		get
		{
			return default(MenuHit);
		}
	}

	[Token(Token = "0x170000E2")]
	public static bool IsInAction
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x10A448C", Offset = "0x10A448C", VA = "0x10A448C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E3")]
	public static Material ActiveMaterial
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x10AA998", Offset = "0x10AA998", VA = "0x10AA998")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x10AA9F0", Offset = "0x10AA9F0", VA = "0x10AA9F0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public static DoorBehaviourInfo DoorBehaviourInfo
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x10AAA50", Offset = "0x10AAA50", VA = "0x10AAA50")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x10AAAA8", Offset = "0x10AAAA8", VA = "0x10AAAA8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public static Bounds objectBounds
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x10AAB08", Offset = "0x10AAB08", VA = "0x10AAB08")]
		[CompilerGenerated]
		get
		{
			return default(Bounds);
		}
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x10AAB70", Offset = "0x10AAB70", VA = "0x10AAB70")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event Action onFURevertEnd
	{
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x10A9EC0", Offset = "0x10A9EC0", VA = "0x10A9EC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x10A9F9C", Offset = "0x10A9F9C", VA = "0x10A9F9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x10AABF0", Offset = "0x10AABF0", VA = "0x10AABF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x10AAE98", Offset = "0x10AAE98", VA = "0x10AAE98")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x10AB7CC", Offset = "0x10AB7CC", VA = "0x10AB7CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x10AB95C", Offset = "0x10AB95C", VA = "0x10AB95C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x10ABA50", Offset = "0x10ABA50", VA = "0x10ABA50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x10A89C4", Offset = "0x10A89C4", VA = "0x10A89C4")]
	public static void AssignTempMat([Optional] GameObject assignee)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x10ABAF4", Offset = "0x10ABAF4", VA = "0x10ABAF4")]
	public static void GiveMatBack([Optional] GameObject assignee)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x10ABD58", Offset = "0x10ABD58", VA = "0x10ABD58")]
	public static void DeleteSelectedObject()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x10AC778", Offset = "0x10AC778", VA = "0x10AC778")]
	public static void DeleteObject(GameObject obj)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x10AC718", Offset = "0x10AC718", VA = "0x10AC718")]
	[IteratorStateMachine(typeof(<RecordRedoLater>d__68))]
	public IEnumerator RecordRedoLater()
	{
		return null;
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x10A9900", Offset = "0x10A9900", VA = "0x10A9900")]
	public static void PutInPocket(bool noUndo = false)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x10AD454", Offset = "0x10AD454", VA = "0x10AD454")]
	[IteratorStateMachine(typeof(<DeactivateLater>d__70))]
	public IEnumerator DeactivateLater()
	{
		return null;
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x10A4548", Offset = "0x10A4548", VA = "0x10A4548")]
	public static void EndAllActions()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x10AD6E0", Offset = "0x10AD6E0", VA = "0x10AD6E0")]
	public static bool StartAction(ActionType actionType, bool saveStartValues = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x10AE594", Offset = "0x10AE594", VA = "0x10AE594")]
	public static void EndAction(ActionType actionType)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x10AEE50", Offset = "0x10AEE50", VA = "0x10AEE50")]
	public static void SetCollision()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x10AEF60", Offset = "0x10AEF60", VA = "0x10AEF60")]
	public static void ResetCollision()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x10AF014", Offset = "0x10AF014", VA = "0x10AF014")]
	private void Unpaused()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x10AB338", Offset = "0x10AB338", VA = "0x10AB338")]
	private static void RespawnMenus()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x10AB170", Offset = "0x10AB170", VA = "0x10AB170")]
	private static void FadeMenus()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x10AB618", Offset = "0x10AB618", VA = "0x10AB618")]
	private static void UpdateActiveMaterialColor()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x10AD34C", Offset = "0x10AD34C", VA = "0x10AD34C")]
	private static void PutInPocketNetworked()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x10ACF00", Offset = "0x10ACF00", VA = "0x10ACF00")]
	private static void PutInPocketLocal(bool noUndo)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x10AEDF0", Offset = "0x10AEDF0", VA = "0x10AEDF0")]
	[IteratorStateMachine(typeof(<DelayEndAction>d__82))]
	private IEnumerator DelayEndAction()
	{
		return null;
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x10AF72C", Offset = "0x10AF72C", VA = "0x10AF72C")]
	private static void DoorFinishedClose()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x10AF818", Offset = "0x10AF818", VA = "0x10AF818")]
	public static void SetDoorBehaviourInfo()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x10AFC5C", Offset = "0x10AFC5C", VA = "0x10AFC5C")]
	private static void ResetGOTransform(GameObject gameObject)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x10AB8E8", Offset = "0x10AB8E8", VA = "0x10AB8E8")]
	[IteratorStateMachine(typeof(<FURevert>d__86))]
	private IEnumerator FURevert()
	{
		return null;
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x10B01F4", Offset = "0x10B01F4", VA = "0x10B01F4")]
	public ManagerActions()
	{
	}
}
[Token(Token = "0x2000198")]
public enum DebugMenuState
{
	[Token(Token = "0x400091B")]
	None,
	[Token(Token = "0x400091C")]
	FPSPanel,
	[Token(Token = "0x400091D")]
	InputsPanel,
	[Token(Token = "0x400091E")]
	LogPanel
}
[Token(Token = "0x2000199")]
public class ManagerDebug : MonoBehaviour
{
	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fpsPanel;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject inputsPanel;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject logPanel;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text headText;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text leftText;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text rightText;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DebugMenuState _state;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ManagerDebug _instance;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int maxLines;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<string> logs;

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x10B2AB0", Offset = "0x10B2AB0", VA = "0x10B2AB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x10B2B5C", Offset = "0x10B2B5C", VA = "0x10B2B5C")]
	public static void DebugInButton(string text)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x10B2C00", Offset = "0x10B2C00", VA = "0x10B2C00")]
	public static void AddLog(string text)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x10B3030", Offset = "0x10B3030", VA = "0x10B3030")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x10B39BC", Offset = "0x10B39BC", VA = "0x10B39BC")]
	public ManagerDebug()
	{
	}
}
[Token(Token = "0x200019A")]
public class ManagerDisappear6DOF : MonoBehaviour
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int maxColliders;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] colliders;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int numColliders;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x10B3A10", Offset = "0x10B3A10", VA = "0x10B3A10")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x10B3A90", Offset = "0x10B3A90", VA = "0x10B3A90")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x10B3CBC", Offset = "0x10B3CBC", VA = "0x10B3CBC")]
	public static bool IsNearHead(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x10B3E30", Offset = "0x10B3E30", VA = "0x10B3E30")]
	public ManagerDisappear6DOF()
	{
	}
}
[Token(Token = "0x200019B")]
public class ManagerGrid : MonoBehaviour
{
	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ManagerGrid Instance;

	[Token(Token = "0x400092D")]
	public const float scale = 0.1f;

	[Token(Token = "0x400092E")]
	public const float wallScale = 0.1667f;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x10B3E40", Offset = "0x10B3E40", VA = "0x10B3E40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x10B3F3C", Offset = "0x10B3F3C", VA = "0x10B3F3C")]
	public Vector3 GetNearestPointOnGrid(Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x10B4114", Offset = "0x10B4114", VA = "0x10B4114")]
	public Vector3 GetNeareastPointOnWall(Vector3 position, Vector3 normal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x10B4374", Offset = "0x10B4374", VA = "0x10B4374")]
	public ManagerGrid()
	{
	}
}
[Token(Token = "0x200019C")]
public class ManagerHandController : MonoBehaviour
{
	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ManagerHandController instance;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Tooltip("0 = left, 1 = right")]
	private XRController[] proximityHandController;

	[Token(Token = "0x170000EE")]
	public XRController proximityHandControllerLeft
	{
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x10B437C", Offset = "0x10B437C", VA = "0x10B437C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x10B43A4", Offset = "0x10B43A4", VA = "0x10B43A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public XRController proximityHandControllerRight
	{
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x10B4404", Offset = "0x10B4404", VA = "0x10B4404")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x10B4430", Offset = "0x10B4430", VA = "0x10B4430")]
		set
		{
		}
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x10B4494", Offset = "0x10B4494", VA = "0x10B4494")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x10B44EC", Offset = "0x10B44EC", VA = "0x10B44EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x10B4590", Offset = "0x10B4590", VA = "0x10B4590")]
	private void EnableControllerInput(XRController controller, bool enabled)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x10B45AC", Offset = "0x10B45AC", VA = "0x10B45AC")]
	public void EnableProximityHandInput(bool leftHand, bool enabled)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x10B45E0", Offset = "0x10B45E0", VA = "0x10B45E0")]
	public ManagerHandController()
	{
	}
}
[Token(Token = "0x200019D")]
public class ManagerHistory : MonoBehaviour
{
	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int maxFiles;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int currentFile;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int firstFile;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int lastFile;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool recordUndoCalled;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool isXMLScene;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool isAuthorizedToRemoveFile;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private static bool removeFileNextUndo;

	[Token(Token = "0x170000F0")]
	public static bool IsUndoAuthorized
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x10B4644", Offset = "0x10B4644", VA = "0x10B4644")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F1")]
	public static bool IsRedoAuthorized
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0x10B46A4", Offset = "0x10B46A4", VA = "0x10B46A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F2")]
	public static bool IsRedoing
	{
		[Token(Token = "0x6000806")]
		[Address(RVA = "0x10B4708", Offset = "0x10B4708", VA = "0x10B4708")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x10B4760", Offset = "0x10B4760", VA = "0x10B4760")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public static bool RecordRedoCalled
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x10B47BC", Offset = "0x10B47BC", VA = "0x10B47BC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x10B4814", Offset = "0x10B4814", VA = "0x10B4814")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event Action OnAfterUndo
	{
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x10B4870", Offset = "0x10B4870", VA = "0x10B4870")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x10B494C", Offset = "0x10B494C", VA = "0x10B494C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action OnAfterRedo
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x10B4A28", Offset = "0x10B4A28", VA = "0x10B4A28")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x10B4B04", Offset = "0x10B4B04", VA = "0x10B4B04")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x10B4BE0", Offset = "0x10B4BE0", VA = "0x10B4BE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x10B4D08", Offset = "0x10B4D08", VA = "0x10B4D08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x10B4D0C", Offset = "0x10B4D0C", VA = "0x10B4D0C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x10A6780", Offset = "0x10A6780", VA = "0x10A6780")]
	public static void RecordUndo()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x10AF0A4", Offset = "0x10AF0A4", VA = "0x10AF0A4")]
	public static void RecordRedo()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x10B564C", Offset = "0x10B564C", VA = "0x10B564C")]
	public static void Undo()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x10B6784", Offset = "0x10B6784", VA = "0x10B6784")]
	public static void DelayedUndo()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x10B68CC", Offset = "0x10B68CC", VA = "0x10B68CC")]
	public static void Redo()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x10B6AF4", Offset = "0x10B6AF4", VA = "0x10B6AF4")]
	public static void DelayedRedo()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x10AF568", Offset = "0x10AF568", VA = "0x10AF568")]
	public static void RemoveOneFile()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x10AE4F4", Offset = "0x10AE4F4", VA = "0x10AE4F4")]
	public static void RemoveOneFileOnNextUndo()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x10B07A4", Offset = "0x10B07A4", VA = "0x10B07A4")]
	public static void RemoveOneRedo()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x10AE498", Offset = "0x10AE498", VA = "0x10AE498")]
	public static void UpdateRemoveFilePermission()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x10B6C90", Offset = "0x10B6C90", VA = "0x10B6C90")]
	public ManagerHistory()
	{
	}
}
[Token(Token = "0x200019E")]
public class ManagerInputVR : MonoBehaviour
{
	[Token(Token = "0x200019F")]
	public class Button
	{
		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool pressed;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool released;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool state;

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x10B8290", Offset = "0x10B8290", VA = "0x10B8290")]
		public Button()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x10B9880", Offset = "0x10B9880", VA = "0x10B9880")]
		public void Update(bool newState)
		{
		}
	}

	[Token(Token = "0x20001A0")]
	public class PropButton
	{
		[Token(Token = "0x4000966")]
		private const float trigIn = 0.4f;

		[Token(Token = "0x4000967")]
		private const float trigOut = 0.35f;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool pressed;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool released;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool state;

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x10B82B0", Offset = "0x10B82B0", VA = "0x10B82B0")]
		public PropButton()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x10B98C0", Offset = "0x10B98C0", VA = "0x10B98C0")]
		public void Update(float button)
		{
		}
	}

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ManagerInputVR _instance;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject headGameObject;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftGameObject;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rightGameObject;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool switchHandMode;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static PropButton leftTrigBut;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static Button leftIndexNear;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Button leftThumbNear;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static Vector2 rightStick;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Button rightStickButton;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static PropButton rightTrigBut;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static Button rightIndexNear;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static Button rightThumbNear;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static Vector3 leftVelocity;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private static Vector3 rightVelocity;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private static UpdateHandAnimation[] updateHandAnimations;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private static TransformData leftTransformDataInv;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static TransformData rightTransformDataInv;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private static TransformData leftTransformData;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private static TransformData rightTransformData;

	[Token(Token = "0x170000F4")]
	public static bool HeadFound
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x10B6CE8", Offset = "0x10B6CE8", VA = "0x10B6CE8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x10B6D30", Offset = "0x10B6D30", VA = "0x10B6D30")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public static Transform HeadTransform
	{
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x10B3904", Offset = "0x10B3904", VA = "0x10B3904")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F6")]
	public static bool LeftFound
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0x10B6D7C", Offset = "0x10B6D7C", VA = "0x10B6D7C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x10B6DC4", Offset = "0x10B6DC4", VA = "0x10B6DC4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public static Transform LeftTransform
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x10B6E10", Offset = "0x10B6E10", VA = "0x10B6E10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F8")]
	public static Vector2 LeftStick
	{
		[Token(Token = "0x6000823")]
		[Address(RVA = "0x10B6EC8", Offset = "0x10B6EC8", VA = "0x10B6EC8")]
		[CompilerGenerated]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x10B6F10", Offset = "0x10B6F10", VA = "0x10B6F10")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public static Button LeftStickButton
	{
		[Token(Token = "0x6000825")]
		[Address(RVA = "0x10B6F68", Offset = "0x10B6F68", VA = "0x10B6F68")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000826")]
		[Address(RVA = "0x10B6FB0", Offset = "0x10B6FB0", VA = "0x10B6FB0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public static float LeftTrigger
	{
		[Token(Token = "0x6000827")]
		[Address(RVA = "0x10B7000", Offset = "0x10B7000", VA = "0x10B7000")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000828")]
		[Address(RVA = "0x10B7048", Offset = "0x10B7048", VA = "0x10B7048")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public static float LeftGrip
	{
		[Token(Token = "0x6000829")]
		[Address(RVA = "0x10B709C", Offset = "0x10B709C", VA = "0x10B709C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600082A")]
		[Address(RVA = "0x10B70E4", Offset = "0x10B70E4", VA = "0x10B70E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000FC")]
	public static Button X
	{
		[Token(Token = "0x600082B")]
		[Address(RVA = "0x10B7138", Offset = "0x10B7138", VA = "0x10B7138")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600082C")]
		[Address(RVA = "0x10B7180", Offset = "0x10B7180", VA = "0x10B7180")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000FD")]
	public static Button Y
	{
		[Token(Token = "0x600082D")]
		[Address(RVA = "0x10B71D0", Offset = "0x10B71D0", VA = "0x10B71D0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600082E")]
		[Address(RVA = "0x10B7218", Offset = "0x10B7218", VA = "0x10B7218")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public static Button Menu
	{
		[Token(Token = "0x600082F")]
		[Address(RVA = "0x10B7268", Offset = "0x10B7268", VA = "0x10B7268")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000830")]
		[Address(RVA = "0x10B72B0", Offset = "0x10B72B0", VA = "0x10B72B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public static bool RightFound
	{
		[Token(Token = "0x6000831")]
		[Address(RVA = "0x10B7300", Offset = "0x10B7300", VA = "0x10B7300")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000832")]
		[Address(RVA = "0x10B7348", Offset = "0x10B7348", VA = "0x10B7348")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public static Transform RightTransform
	{
		[Token(Token = "0x6000833")]
		[Address(RVA = "0x10B7394", Offset = "0x10B7394", VA = "0x10B7394")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000101")]
	public static float RightTrigger
	{
		[Token(Token = "0x6000834")]
		[Address(RVA = "0x10B744C", Offset = "0x10B744C", VA = "0x10B744C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000835")]
		[Address(RVA = "0x10B7494", Offset = "0x10B7494", VA = "0x10B7494")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public static float RightGrip
	{
		[Token(Token = "0x6000836")]
		[Address(RVA = "0x10B74E8", Offset = "0x10B74E8", VA = "0x10B74E8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000837")]
		[Address(RVA = "0x10B7530", Offset = "0x10B7530", VA = "0x10B7530")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public static Button A
	{
		[Token(Token = "0x6000838")]
		[Address(RVA = "0x10B7584", Offset = "0x10B7584", VA = "0x10B7584")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x10B75CC", Offset = "0x10B75CC", VA = "0x10B75CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public static Button B
	{
		[Token(Token = "0x600083A")]
		[Address(RVA = "0x10B761C", Offset = "0x10B761C", VA = "0x10B761C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600083B")]
		[Address(RVA = "0x10B7664", Offset = "0x10B7664", VA = "0x10B7664")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public Vector3 GetLeftController
	{
		[Token(Token = "0x600083C")]
		[Address(RVA = "0x10B76B4", Offset = "0x10B76B4", VA = "0x10B76B4")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600083D")]
		[Address(RVA = "0x10B76C0", Offset = "0x10B76C0", VA = "0x10B76C0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public static float LeftStylusForce
	{
		[Token(Token = "0x600083E")]
		[Address(RVA = "0x10B76CC", Offset = "0x10B76CC", VA = "0x10B76CC")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600083F")]
		[Address(RVA = "0x10B7714", Offset = "0x10B7714", VA = "0x10B7714")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public static float RightStylusForce
	{
		[Token(Token = "0x6000840")]
		[Address(RVA = "0x10B7768", Offset = "0x10B7768", VA = "0x10B7768")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000841")]
		[Address(RVA = "0x10B77B0", Offset = "0x10B77B0", VA = "0x10B77B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public static bool IsRightHandedMode
	{
		[Token(Token = "0x6000842")]
		[Address(RVA = "0x10B7804", Offset = "0x10B7804", VA = "0x10B7804")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000843")]
		[Address(RVA = "0x10B784C", Offset = "0x10B784C", VA = "0x10B784C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public static Transform DominantHand
	{
		[Token(Token = "0x6000844")]
		[Address(RVA = "0x10B7898", Offset = "0x10B7898", VA = "0x10B7898")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010A")]
	public static Transform NonDominantHand
	{
		[Token(Token = "0x6000845")]
		[Address(RVA = "0x10B78E4", Offset = "0x10B78E4", VA = "0x10B78E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	public static Vector3 DominantVelocity
	{
		[Token(Token = "0x6000846")]
		[Address(RVA = "0x10B7930", Offset = "0x10B7930", VA = "0x10B7930")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010C")]
	public static Vector3 NonDominantVelocity
	{
		[Token(Token = "0x6000847")]
		[Address(RVA = "0x10B79CC", Offset = "0x10B79CC", VA = "0x10B79CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010D")]
	public static float DominantGrip
	{
		[Token(Token = "0x6000848")]
		[Address(RVA = "0x10AECA8", Offset = "0x10AECA8", VA = "0x10AECA8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010E")]
	public static float NonDominantGrip
	{
		[Token(Token = "0x6000849")]
		[Address(RVA = "0x10AED4C", Offset = "0x10AED4C", VA = "0x10AED4C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010F")]
	public static float DominantTrigger
	{
		[Token(Token = "0x600084A")]
		[Address(RVA = "0x10A52D4", Offset = "0x10A52D4", VA = "0x10A52D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000110")]
	public static float NonDominantTrigger
	{
		[Token(Token = "0x600084B")]
		[Address(RVA = "0x10A5378", Offset = "0x10A5378", VA = "0x10A5378")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000111")]
	public static Vector2 DominantStick
	{
		[Token(Token = "0x600084C")]
		[Address(RVA = "0x10B7A68", Offset = "0x10B7A68", VA = "0x10B7A68")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000112")]
	public static Vector2 NonDominantStick
	{
		[Token(Token = "0x600084D")]
		[Address(RVA = "0x10B7B14", Offset = "0x10B7B14", VA = "0x10B7B14")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000113")]
	public static PropButton DominantPropButton
	{
		[Token(Token = "0x600084E")]
		[Address(RVA = "0x10B7BC0", Offset = "0x10B7BC0", VA = "0x10B7BC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000114")]
	public static PropButton NonDominantPropButton
	{
		[Token(Token = "0x600084F")]
		[Address(RVA = "0x10B7C3C", Offset = "0x10B7C3C", VA = "0x10B7C3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x10B7CB8", Offset = "0x10B7CB8", VA = "0x10B7CB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x10B85E8", Offset = "0x10B85E8", VA = "0x10B85E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x10B86F8", Offset = "0x10B86F8", VA = "0x10B86F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x10B8824", Offset = "0x10B8824", VA = "0x10B8824")]
	public static void PopUpHandPref()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x10B8AA8", Offset = "0x10B8AA8", VA = "0x10B8AA8")]
	private static void PopUpMovementLocomotion(bool withTuto = true)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x10B8C48", Offset = "0x10B8C48", VA = "0x10B8C48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x10B9760", Offset = "0x10B9760", VA = "0x10B9760")]
	public static void SwitchHandMode()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x10B82D0", Offset = "0x10B82D0", VA = "0x10B82D0")]
	private static void InitializeTransformData()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x10B9920", Offset = "0x10B9920", VA = "0x10B9920")]
	public static bool IsNonDominantGripped(float value = 0.4f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x10B9944", Offset = "0x10B9944", VA = "0x10B9944")]
	public static bool IsDominantGripped(float value = 0.4f)
	{
		return default(bool);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x10B9968", Offset = "0x10B9968", VA = "0x10B9968")]
	public static bool IsNonDominantTriggered(float value = 0.4f)
	{
		return default(bool);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x10B998C", Offset = "0x10B998C", VA = "0x10B998C")]
	public static bool IsDominantTriggered(float value = 0.4f)
	{
		return default(bool);
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x10AA5CC", Offset = "0x10AA5CC", VA = "0x10AA5CC")]
	public static bool IsBothHandGripped(float value = 0.8f)
	{
		return default(bool);
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x10B99B0", Offset = "0x10B99B0", VA = "0x10B99B0")]
	public static Vector3 GetCurrentVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x10B9A9C", Offset = "0x10B9A9C", VA = "0x10B9A9C")]
	public ManagerInputVR()
	{
	}
}
[Token(Token = "0x20001A3")]
public class ManagerLights : MonoBehaviour, IOnEventCallback
{
	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Light> lights;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 oldchecksum;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static HashSet<LightObject> onLightUpdate;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static HashSet<LightObject> onUpdate;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int frameNumber;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool justLoaded;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public static bool comingFromArchi;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static ManagerLights _instance;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static HashSet<Wall> wallsToUpdate;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static HashSet<GameObject> objectsToUpdate;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static HashSet<GameObject> objectsToUpdateLight;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<int> roomIndexesToUpdateMulti;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HashSet<int> roomIndexesToRemoveMulti;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool updateLight;

	[Token(Token = "0x17000115")]
	public static bool UpdateLight
	{
		[Token(Token = "0x600086A")]
		[Address(RVA = "0x10B9D6C", Offset = "0x10B9D6C", VA = "0x10B9D6C")]
		set
		{
		}
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x10B9DC8", Offset = "0x10B9DC8", VA = "0x10B9DC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x10B9EC0", Offset = "0x10B9EC0", VA = "0x10B9EC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x10B9F18", Offset = "0x10B9F18", VA = "0x10B9F18")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x10BA140", Offset = "0x10BA140", VA = "0x10BA140")]
	public static void AddNewLight(Light light)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x10BA300", Offset = "0x10BA300", VA = "0x10BA300")]
	public static void RemoveLight(Light light)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x10BA380", Offset = "0x10BA380", VA = "0x10BA380")]
	private void Update()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x10BA8D4", Offset = "0x10BA8D4", VA = "0x10BA8D4")]
	private void UpdateRooms()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x10BAF20", Offset = "0x10BAF20", VA = "0x10BAF20")]
	public static void UpdateRoomsLightsLists(bool didLightsMoved)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x10BB390", Offset = "0x10BB390", VA = "0x10BB390")]
	private void UpdateObjects(bool didLightsMoved)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x10BB568", Offset = "0x10BB568", VA = "0x10BB568")]
	private void UpdateWallsInList()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x10BC020", Offset = "0x10BC020", VA = "0x10BC020")]
	private void UpdateWallsMulti()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x10BB800", Offset = "0x10BB800", VA = "0x10BB800")]
	private void UpdateObjectsInList()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x10BBAE8", Offset = "0x10BBAE8", VA = "0x10BBAE8")]
	private void UpdateObjectsInListLight()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x10BBDCC", Offset = "0x10BBDCC", VA = "0x10BBDCC")]
	private void UpdateReflectionProbes()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x10BC55C", Offset = "0x10BC55C", VA = "0x10BC55C", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x10BC618", Offset = "0x10BC618", VA = "0x10BC618")]
	public static void UpdateObjectsInsideRoom(Room room)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x10BC900", Offset = "0x10BC900", VA = "0x10BC900")]
	public static void AddObjectToUpdate(GameObject obj, bool isLight)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x10A9BC8", Offset = "0x10A9BC8", VA = "0x10A9BC8")]
	public static void RemoveObjectToUpdate(GameObject obj)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x10BCAC0", Offset = "0x10BCAC0", VA = "0x10BCAC0")]
	public ManagerLights()
	{
	}
}
[Token(Token = "0x20001A4")]
public class ManagerRay : MonoBehaviour
{
	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRController leftRay;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static XRRayInteractor leftRayInteractor;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static LineRenderer leftMoveLineRenderer;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRController rightRay;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static XRRayInteractor rightRayInteractor;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static LineRenderer rightMoveLineRenderer;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float threshold;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GradientColorKey[] validColorGradient;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GradientAlphaKey[] validAlphaGradient;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GradientColorKey[] invalidColorGradient;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GradientAlphaKey[] invalidAlphaGradient;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static RaycastHit dominantRayRaycast;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static RaycastHit nonDominantRaycast;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LoadingScreen _loading;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private XRInteractorLineVisual line;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color darkerPastelBlue;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color pastelBlue;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color pastelRed;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color greenRay;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GradientColorKey[] redGradient;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GradientColorKey[] blueGradient;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GradientAlphaKey[] alphaGradient;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GradientAlphaKey[] alphaGradientMR;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GradientColorKey[] greenGradient;

	[Token(Token = "0x17000116")]
	public static XRRayInteractor DominantRayInteractor
	{
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x10A7020", Offset = "0x10A7020", VA = "0x10A7020")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000117")]
	public static XRRayInteractor NonDominantRayInteractor
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x10A70A8", Offset = "0x10A70A8", VA = "0x10A70A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000118")]
	public static LineRenderer DominantLineRenderer
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x10BCB14", Offset = "0x10BCB14", VA = "0x10BCB14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000119")]
	public static LineRenderer NonDominantLineRenderer
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x10BCBA0", Offset = "0x10BCBA0", VA = "0x10BCBA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011A")]
	public XRController DominantRay
	{
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x10BCC2C", Offset = "0x10BCC2C", VA = "0x10BCC2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011B")]
	public XRController NonDominantRay
	{
		[Token(Token = "0x6000884")]
		[Address(RVA = "0x10BCC8C", Offset = "0x10BCC8C", VA = "0x10BCC8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011C")]
	private LoadingScreen Loading
	{
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x10BCCEC", Offset = "0x10BCCEC", VA = "0x10BCCEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x10BCDB8", Offset = "0x10BCDB8", VA = "0x10BCDB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x10BD1FC", Offset = "0x10BD1FC", VA = "0x10BD1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x10BD2D4", Offset = "0x10BD2D4", VA = "0x10BD2D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x10BE25C", Offset = "0x10BE25C", VA = "0x10BE25C")]
	private GameObject GetHitObject(XRController ray)
	{
		return null;
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x10BE9B0", Offset = "0x10BE9B0", VA = "0x10BE9B0")]
	public static bool IsRayOnUI(XRRayInteractor ray, out Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x10BEAFC", Offset = "0x10BEAFC", VA = "0x10BEAFC")]
	public ManagerRay()
	{
	}
}
[Token(Token = "0x20001A5")]
public class ManagerRotation : MonoBehaviour
{
	[Token(Token = "0x20001A6")]
	private enum RotationControl
	{
		[Token(Token = "0x40009A1")]
		NonDominant,
		[Token(Token = "0x40009A2")]
		Dominant
	}

	[Token(Token = "0x20001A7")]
	[CompilerGenerated]
	private sealed class <SnapTurn>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManagerRotation <>4__this;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int degrees;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sign;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float waitingTime;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000898")]
			[Address(RVA = "0x10BFA74", Offset = "0x10BFA74", VA = "0x10BFA74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600089A")]
			[Address(RVA = "0x10BFABC", Offset = "0x10BFABC", VA = "0x10BFABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x10BF8B0", Offset = "0x10BF8B0", VA = "0x10BF8B0")]
		[DebuggerHidden]
		public <SnapTurn>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x10BF8E0", Offset = "0x10BF8E0", VA = "0x10BF8E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x10BF8E4", Offset = "0x10BF8E4", VA = "0x10BF8E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x10BFA7C", Offset = "0x10BFA7C", VA = "0x10BFA7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float negativeRotationSpeed;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float positiveRotationSpeed;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool wasMoving;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Quaternion controllerStartRotation;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static GameObject rotationFeedback;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Transform feedbackChildRT;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Transform feedbackRT;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static RotationControl rotationControl;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isTurning;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isRotationIncremental;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotAmount;

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x10BEC38", Offset = "0x10BEC38", VA = "0x10BEC38")]
	private void Start()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x10BEDEC", Offset = "0x10BEDEC", VA = "0x10BEDEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x10BEE98", Offset = "0x10BEE98", VA = "0x10BEE98")]
	private void Rotate()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x10BF318", Offset = "0x10BF318", VA = "0x10BF318")]
	private static void StartRotation()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x10AD4DC", Offset = "0x10AD4DC", VA = "0x10AD4DC")]
	public static void EndRotation()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x10BF818", Offset = "0x10BF818", VA = "0x10BF818")]
	[IteratorStateMachine(typeof(<SnapTurn>d__17))]
	private IEnumerator SnapTurn(int degrees, float sign, float waitingTime = 0.4f)
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x10BF550", Offset = "0x10BF550", VA = "0x10BF550")]
	private float ReturnSignedAngle()
	{
		return default(float);
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x10BF714", Offset = "0x10BF714", VA = "0x10BF714")]
	private float AdjustAngularSpeed(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x10BF8D8", Offset = "0x10BF8D8", VA = "0x10BF8D8")]
	public ManagerRotation()
	{
	}
}
[Token(Token = "0x20001A8")]
public class ManagerSave : MonoBehaviour
{
	[Token(Token = "0x20001A9")]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
	private class BaseFile
	{
		[Token(Token = "0x20001AA")]
		public enum EStatus
		{
			[Token(Token = "0x40009D1")]
			OK,
			[Token(Token = "0x40009D2")]
			Error
		}

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EStatus status;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x10D2EAC", Offset = "0x10D2EAC", VA = "0x10D2EAC")]
		public static BinaryReader OpenRead(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x10D31FC", Offset = "0x10D31FC", VA = "0x10D31FC")]
		public static BinaryWriter OpenWrite(string fileName)
		{
			return null;
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x10D34CC", Offset = "0x10D34CC", VA = "0x10D34CC")]
		public static void Close(BinaryReader br)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x10D34D8", Offset = "0x10D34D8", VA = "0x10D34D8")]
		public static void Close(BinaryWriter bw)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x10D34E4", Offset = "0x10D34E4", VA = "0x10D34E4")]
		public static bool isEof(BinaryReader br)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x10D3584", Offset = "0x10D3584", VA = "0x10D3584")]
		public static void Read(BinaryReader br, byte[] buffer, int size)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x10D3704", Offset = "0x10D3704", VA = "0x10D3704")]
		public static void Read(BinaryReader br, char[] buffer, int size)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x10D3888", Offset = "0x10D3888", VA = "0x10D3888")]
		public static int ReadInt32(BinaryReader br)
		{
			return default(int);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x10D39E4", Offset = "0x10D39E4", VA = "0x10D39E4")]
		public static uint ReadUInt32(BinaryReader br)
		{
			return default(uint);
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x10D3B40", Offset = "0x10D3B40", VA = "0x10D3B40")]
		public static ushort ReadUInt16(BinaryReader br)
		{
			return default(ushort);
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x10D3C9C", Offset = "0x10D3C9C", VA = "0x10D3C9C")]
		public static float ReadSingle(BinaryReader br)
		{
			return default(float);
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x10D3DFC", Offset = "0x10D3DFC", VA = "0x10D3DFC")]
		public static Vector2 ReadVector2(BinaryReader br)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x10D3FD8", Offset = "0x10D3FD8", VA = "0x10D3FD8")]
		public static Vector3 ReadVector3(BinaryReader br)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x10D41E4", Offset = "0x10D41E4", VA = "0x10D41E4")]
		public static bool ReadBoolean(BinaryReader br)
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x10D4340", Offset = "0x10D4340", VA = "0x10D4340")]
		public static Quaternion ReadQuaternion(BinaryReader br)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x10D456C", Offset = "0x10D456C", VA = "0x10D456C")]
		public static string ReadString(BinaryReader br)
		{
			return null;
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x10D4738", Offset = "0x10D4738", VA = "0x10D4738")]
		public static Polygon ReadPolygon(BinaryReader br)
		{
			return null;
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x10D484C", Offset = "0x10D484C", VA = "0x10D484C")]
		public static MultiPolygon ReadMultiPolygon(BinaryReader br)
		{
			return null;
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x10D49BC", Offset = "0x10D49BC", VA = "0x10D49BC")]
		public static void Write(BinaryWriter bw, byte[] buffer, int size)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x10D4B24", Offset = "0x10D4B24", VA = "0x10D4B24")]
		public static void Write(BinaryWriter bw, char[] buffer, int size)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x10D4C8C", Offset = "0x10D4C8C", VA = "0x10D4C8C")]
		public static void Write(BinaryWriter bw, int value)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x10D4DE8", Offset = "0x10D4DE8", VA = "0x10D4DE8")]
		public static void Write(BinaryWriter bw, uint value)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x10D4F44", Offset = "0x10D4F44", VA = "0x10D4F44")]
		public static void Write(BinaryWriter bw, ushort value)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x10D50A0", Offset = "0x10D50A0", VA = "0x10D50A0")]
		public static void Write(BinaryWriter bw, BinaryWriter data)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x10D524C", Offset = "0x10D524C", VA = "0x10D524C")]
		public static void Write(BinaryWriter bw, float value)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x10D53A8", Offset = "0x10D53A8", VA = "0x10D53A8")]
		public static void Write(BinaryWriter bw, Vector2 vec)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x10D5524", Offset = "0x10D5524", VA = "0x10D5524")]
		public static void Write(BinaryWriter bw, Vector3 vec)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x10D56C8", Offset = "0x10D56C8", VA = "0x10D56C8")]
		public static void Write(BinaryWriter bw, Quaternion quat)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x10D588C", Offset = "0x10D588C", VA = "0x10D588C")]
		public static void Write(BinaryWriter bw, string str)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x10D5C44", Offset = "0x10D5C44", VA = "0x10D5C44")]
		public static void Write(BinaryWriter bw, Polygon poly)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x10D5FA4", Offset = "0x10D5FA4", VA = "0x10D5FA4")]
		public static void Write(BinaryWriter bw, MultiPolygon mp)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x10D65F4", Offset = "0x10D65F4", VA = "0x10D65F4")]
		public static void Write(BinaryWriter bw, bool value)
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x10D674C", Offset = "0x10D674C", VA = "0x10D674C")]
		public BaseFile()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
	private class Chunk
	{
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x10D6754", Offset = "0x10D6754", VA = "0x10D6754")]
		public static BinaryWriter NewData()
		{
			return null;
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x10D67D4", Offset = "0x10D67D4", VA = "0x10D67D4")]
		public static string ReadId(BinaryReader fileBr)
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x10D6840", Offset = "0x10D6840", VA = "0x10D6840")]
		public static BinaryReader ReadData(BinaryReader fileBr)
		{
			return null;
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x10D6914", Offset = "0x10D6914", VA = "0x10D6914")]
		public static void Save(BinaryWriter fileBw, string id, BinaryWriter data)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x10D6D50", Offset = "0x10D6D50", VA = "0x10D6D50")]
		public Chunk()
		{
		}
	}

	[Token(Token = "0x20001AC")]
	public enum ESource
	{
		[Token(Token = "0x40009D4")]
		efromNowhere,
		[Token(Token = "0x40009D5")]
		eFromUndo,
		[Token(Token = "0x40009D6")]
		eFromRedo
	}

	[Token(Token = "0x20001AD")]
	private class SLoadedObj
	{
		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint hash;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 pos;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rot;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int parent;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> materials;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isAutomaticLight;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject obj;

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x10D6D58", Offset = "0x10D6D58", VA = "0x10D6D58")]
		public SLoadedObj()
		{
		}
	}

	[Token(Token = "0x20001AE")]
	public class SLoadedStair
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rot;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public StairsGenerator.Type type;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public StairsGenerator.Size size;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string style;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool body;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool handrail;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool baseboard;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool clockwise;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject obj;

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x10D6D60", Offset = "0x10D6D60", VA = "0x10D6D60")]
		public SLoadedStair()
		{
		}
	}

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ESource source;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ManagerSave _instance;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool isFromMultiDisconnect;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<GameObject> objects;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<GameObject> stairs;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static List<GameObject> newObjects;

	[Token(Token = "0x40009B0")]
	private const uint version = 16u;

	[Token(Token = "0x40009B1")]
	private const uint loadableVersion = 10u;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static uint fileVersion;

	[Token(Token = "0x40009B3")]
	private const string idList = "LIST";

	[Token(Token = "0x40009B4")]
	private const string idHeader = "HDVR";

	[Token(Token = "0x40009B5")]
	private const string idObject = "OBJT";

	[Token(Token = "0x40009B6")]
	private const string idObject2 = "OBJ2";

	[Token(Token = "0x40009B7")]
	private const string idStair = "STRS";

	[Token(Token = "0x40009B8")]
	private const string idRoom = "ROOM";

	[Token(Token = "0x40009B9")]
	private const string idWall = "WALL";

	[Token(Token = "0x40009BA")]
	private const string idWall2 = "WAL2";

	[Token(Token = "0x40009BB")]
	private const string idPocket = "PCKT";

	[Token(Token = "0x40009BC")]
	private const string idPlayer = "PLYR";

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static DataBaseManager DBM;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<string, uint> hashDict;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static Dictionary<uint, string> invHashDict;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static Dictionary<string, uint> matHashDict;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Dictionary<uint, string> invMatHashDict;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static List<Wall> wallsToDestroy;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static List<Room> roomsToDestroy;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int delayedLoadFrame;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static List<SLoadedObj> loadedObjects;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static List<GameObject> doorsAndWindows;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static Vector3 PlayerPos;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static Quaternion PlayerRot;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public static bool wasInProject;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static List<Room> loadedRooms;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static List<Room> roomsToUpdateLights;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static List<SLoadedStair> loadedStairs;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private static List<Wall> loadedWalls;

	[Token(Token = "0x1700011F")]
	public static bool LoadResult
	{
		[Token(Token = "0x600089B")]
		[Address(RVA = "0x10BFAC4", Offset = "0x10BFAC4", VA = "0x10BFAC4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x10BFB1C", Offset = "0x10BFB1C", VA = "0x10BFB1C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Action OnLoadEnded
	{
		[Token(Token = "0x600089D")]
		[Address(RVA = "0x10BFB78", Offset = "0x10BFB78", VA = "0x10BFB78")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600089E")]
		[Address(RVA = "0x10BFC54", Offset = "0x10BFC54", VA = "0x10BFC54")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x10BFD30", Offset = "0x10BFD30", VA = "0x10BFD30")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x10C0410", Offset = "0x10C0410", VA = "0x10C0410")]
	private static uint HashString(string str)
	{
		return default(uint);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x10C04C8", Offset = "0x10C04C8", VA = "0x10C04C8")]
	private static void ClearLists()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x10C05DC", Offset = "0x10C05DC", VA = "0x10C05DC")]
	private static void ListObjects()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x10C112C", Offset = "0x10C112C", VA = "0x10C112C")]
	public static void Unload()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x10C1DA4", Offset = "0x10C1DA4", VA = "0x10C1DA4")]
	public static void AllocLists()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x10B4E18", Offset = "0x10B4E18", VA = "0x10B4E18")]
	public static bool Save(string fileName)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x10B5840", Offset = "0x10B5840", VA = "0x10B5840")]
	public static bool Load(string fileName, ESource _source = ESource.efromNowhere)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x10C7FA0", Offset = "0x10C7FA0", VA = "0x10C7FA0")]
	private static void LoadList(BinaryReader fileBr)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x10CCE94", Offset = "0x10CCE94", VA = "0x10CCE94")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x10C1F6C", Offset = "0x10C1F6C", VA = "0x10C1F6C")]
	private static BinaryWriter SaveHeader()
	{
		return null;
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x10CAE80", Offset = "0x10CAE80", VA = "0x10CAE80")]
	private static void LoadHeader(BinaryReader br)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x10C20C8", Offset = "0x10C20C8", VA = "0x10C20C8")]
	private static BinaryWriter SaveObject(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x10CB088", Offset = "0x10CB088", VA = "0x10CB088")]
	private static void LoadObject(BinaryReader br)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x10C83C8", Offset = "0x10C83C8", VA = "0x10C83C8")]
	private static void InitObjects()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x10CD9E8", Offset = "0x10CD9E8", VA = "0x10CD9E8")]
	private static void InitializeObjects(List<int> parents)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x10CEFA0", Offset = "0x10CEFA0", VA = "0x10CEFA0")]
	private static void InitializeObject(SLoadedObj sObj, List<int> parents, List<GameObject> newObjects)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x10D007C", Offset = "0x10D007C", VA = "0x10D007C")]
	private static GameObject InstantiateSolo(string objectPath)
	{
		return null;
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x10D01B4", Offset = "0x10D01B4", VA = "0x10D01B4")]
	private static GameObject InstantiateMulti(string objectPath, SLoadedObj sObj)
	{
		return null;
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x10D04A8", Offset = "0x10D04A8", VA = "0x10D04A8")]
	private static void LoadMaterials(SLoadedObj sObj, bool wasInitialized)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x10CD69C", Offset = "0x10CD69C", VA = "0x10CD69C")]
	private static int FindParent(GameObject obj)
	{
		return default(int);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x10CE5D4", Offset = "0x10CE5D4", VA = "0x10CE5D4")]
	private static void SetObjectsParents(List<int> parents)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x10CFDE4", Offset = "0x10CFDE4", VA = "0x10CFDE4")]
	private static void UpdateRoomLights(Light l)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x10C7A54", Offset = "0x10C7A54", VA = "0x10C7A54")]
	private static BinaryWriter SavePlayer()
	{
		return null;
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x10CCD64", Offset = "0x10CCD64", VA = "0x10CCD64")]
	private static void LoadPlayer(BinaryReader br)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x10C6B34", Offset = "0x10C6B34", VA = "0x10C6B34")]
	private static BinaryWriter SavePocket(string id)
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x10CC97C", Offset = "0x10CC97C", VA = "0x10CC97C")]
	private static void LoadPocket(BinaryReader br)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x10D097C", Offset = "0x10D097C", VA = "0x10D097C")]
	private static void InitPocketObj(string objName, Vector3 scale, List<string> materials)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x10C4448", Offset = "0x10C4448", VA = "0x10C4448")]
	private static BinaryWriter SaveRoom(Room room)
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x10CB66C", Offset = "0x10CB66C", VA = "0x10CB66C")]
	private static void LoadRoom(BinaryReader br)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x10D1154", Offset = "0x10D1154", VA = "0x10D1154")]
	private static bool AreStairsListsEqual(List<GameObject> list1, List<GameObject> list2)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x10C8C18", Offset = "0x10C8C18", VA = "0x10C8C18")]
	private static void InitRooms()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x10CAD0C", Offset = "0x10CAD0C", VA = "0x10CAD0C")]
	private static void InitSlabs()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x10C33F4", Offset = "0x10C33F4", VA = "0x10C33F4")]
	private static BinaryWriter SaveStair(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x10CB480", Offset = "0x10CB480", VA = "0x10CB480")]
	private static void LoadStair(BinaryReader br)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x10C8628", Offset = "0x10C8628", VA = "0x10C8628")]
	private static void InitStairs()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x10D1508", Offset = "0x10D1508", VA = "0x10D1508")]
	private static GameObject InitOneStair(SLoadedStair stair)
	{
		return null;
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x10D12E4", Offset = "0x10D12E4", VA = "0x10D12E4")]
	private static bool AreStairsEqual(SLoadedStair newStair, GameObject oldStair)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x10C61A8", Offset = "0x10C61A8", VA = "0x10C61A8")]
	private static BinaryWriter SaveWall(Wall wall)
	{
		return null;
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x10CBFA8", Offset = "0x10CBFA8", VA = "0x10CBFA8")]
	private static void LoadWall(BinaryReader br)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x10CA18C", Offset = "0x10CA18C", VA = "0x10CA18C")]
	private static void InitWalls()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x10D18D4", Offset = "0x10D18D4", VA = "0x10D18D4")]
	private static void UpdateCornersOfNearWalls(List<Wall> list)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x10D1D60", Offset = "0x10D1D60", VA = "0x10D1D60")]
	public ManagerSave()
	{
	}
}
[Token(Token = "0x20001B0")]
public class ManagerScale : MonoBehaviour
{
	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 newObjSize;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxScale;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minScale;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float maxScaleS;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float minScaleS;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static Vector3 startScale;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float startDistance;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float scaleAmount;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x10D6DE4", Offset = "0x10D6DE4", VA = "0x10D6DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x10D73A0", Offset = "0x10D73A0", VA = "0x10D73A0")]
	public static void EndScale()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x10D74A8", Offset = "0x10D74A8", VA = "0x10D74A8")]
	public static void ResetToStartScale(GameObject obj)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x10D7514", Offset = "0x10D7514", VA = "0x10D7514")]
	public static bool IsObjectBiggerThanRoom(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x10D6EC0", Offset = "0x10D6EC0", VA = "0x10D6EC0")]
	private void Scale()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x10D7DAC", Offset = "0x10D7DAC", VA = "0x10D7DAC")]
	private void StartScale()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x10D7F44", Offset = "0x10D7F44", VA = "0x10D7F44")]
	private bool IsScaleGreaterThanMaxLimit(Vector3 scale, float maxLimit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x10D7F74", Offset = "0x10D7F74", VA = "0x10D7F74")]
	private bool IsScaleLowerThanMinLimit(Vector3 scale, float minLimit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x10D812C", Offset = "0x10D812C", VA = "0x10D812C")]
	public ManagerScale()
	{
	}
}
[Token(Token = "0x20001B1")]
public class ManagerSelection : MonoBehaviour
{
	[Token(Token = "0x20001B2")]
	public delegate void OnUnselected(GameObject selected);

	[Token(Token = "0x20001B3")]
	public delegate void OnSelected(GameObject selected, bool isNew);

	[Token(Token = "0x20001B4")]
	public delegate void OnCheckValidity(bool isValid);

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject currentSelectedObject;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameObject currentMovingObject;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static XRBaseInteractor movingRay;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int holeSign;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static float halfHeight;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static TestOutline[] STGOutlines;

	[Token(Token = "0x40009FB")]
	private const float timeNeeded = 0.3f;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static float timePressedDom;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float timePressedNonDom;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static DataBaseManager DBM;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static int usualInteractorRayMask;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int wallRayInteractorMask;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LoadingScreen _loading;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static bool newInstance;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static float hapticWeight;

	[Token(Token = "0x4000A05")]
	private const float movingHapticTime = 0.3f;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxFurnitureWallHeight;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float timerMultiPopUp;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static int drawcount;

	[Token(Token = "0x17000120")]
	public static GameObject PhysicsGameObject
	{
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x10D8140", Offset = "0x10D8140", VA = "0x10D8140")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000900")]
		[Address(RVA = "0x10D8198", Offset = "0x10D8198", VA = "0x10D8198")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public static cakeslice.Outline[] outlines
	{
		[Token(Token = "0x6000901")]
		[Address(RVA = "0x10D81F8", Offset = "0x10D81F8", VA = "0x10D81F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000902")]
		[Address(RVA = "0x10D8250", Offset = "0x10D8250", VA = "0x10D8250")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public static ToggleShader ToggleShader
	{
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x10D82B0", Offset = "0x10D82B0", VA = "0x10D82B0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x10D8308", Offset = "0x10D8308", VA = "0x10D8308")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000123")]
	private LoadingScreen loading
	{
		[Token(Token = "0x6000905")]
		[Address(RVA = "0x10D8368", Offset = "0x10D8368", VA = "0x10D8368")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000124")]
	private static bool IsGridSnappingMode
	{
		[Token(Token = "0x6000906")]
		[Address(RVA = "0x10D8434", Offset = "0x10D8434", VA = "0x10D8434")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000017")]
	public static event OnUnselected onUnselected
	{
		[Token(Token = "0x6000907")]
		[Address(RVA = "0x10D85A4", Offset = "0x10D85A4", VA = "0x10D85A4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000908")]
		[Address(RVA = "0x10D8680", Offset = "0x10D8680", VA = "0x10D8680")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event OnSelected onSelected
	{
		[Token(Token = "0x6000909")]
		[Address(RVA = "0x10D875C", Offset = "0x10D875C", VA = "0x10D875C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x10D8838", Offset = "0x10D8838", VA = "0x10D8838")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event OnCheckValidity onCheckValidity
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x10D8914", Offset = "0x10D8914", VA = "0x10D8914")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x10D89F0", Offset = "0x10D89F0", VA = "0x10D89F0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x10D8ACC", Offset = "0x10D8ACC", VA = "0x10D8ACC")]
	private void Start()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x10D8D98", Offset = "0x10D8D98", VA = "0x10D8D98")]
	private static bool IsHandOutside()
	{
		return default(bool);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x10D90F4", Offset = "0x10D90F4", VA = "0x10D90F4")]
	private static bool IsFloorHitByObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x10D95A0", Offset = "0x10D95A0", VA = "0x10D95A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x10DC0BC", Offset = "0x10DC0BC", VA = "0x10DC0BC")]
	public static bool isObjectColliding()
	{
		return default(bool);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x10DC88C", Offset = "0x10DC88C", VA = "0x10DC88C")]
	public static bool IsObjectInsideRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x10DE31C", Offset = "0x10DE31C", VA = "0x10DE31C")]
	public static void UnSelect(bool resetMenu = true)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x10DD994", Offset = "0x10DD994", VA = "0x10DD994")]
	public static void Select(GameObject obj, bool contextualMenuToActivate = true, ManagerTools.HandHolding handHolding = ManagerTools.HandHolding.None, bool willBeNewObj = false)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x10DEAA4", Offset = "0x10DEAA4", VA = "0x10DEAA4")]
	public static void ContinueSelect(GameObject obj, bool contextualMenuToActivate, ManagerTools.HandHolding handHolding, bool willBeNewObj)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x10DCB64", Offset = "0x10DCB64", VA = "0x10DCB64")]
	public static void StartMove(XRBaseInteractor ray, GameObject obj, bool fromEndRotation = false)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x10DF878", Offset = "0x10DF878", VA = "0x10DF878")]
	public static void ComputeHalfHeight(GameObject obj)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x10DFCE8", Offset = "0x10DFCE8", VA = "0x10DFCE8")]
	public static void RedrawRay(XRBaseInteractor ray, GameObject obj)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x10DFFA8", Offset = "0x10DFFA8", VA = "0x10DFFA8")]
	private static void ConfigureRayFromTag(GameObject obj, XRRayInteractor ray, float distance)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x10DB088", Offset = "0x10DB088", VA = "0x10DB088")]
	private void Move()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x10E0450", Offset = "0x10E0450", VA = "0x10E0450")]
	private void RayMoveSetup(out XRRayInteractor currentRay, out LineRenderer currentLineRenderer)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x10DFC0C", Offset = "0x10DFC0C", VA = "0x10DFC0C")]
	private static void SendWeightedHapticFeedback()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x10E26D4", Offset = "0x10E26D4", VA = "0x10E26D4")]
	private void MoveWindow(XRRayInteractor currentRay, LineRenderer currentLineRenderer, Vector3[] linePoints)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x10E21F8", Offset = "0x10E21F8", VA = "0x10E21F8")]
	private void MoveDoors(XRRayInteractor currentRay, LineRenderer currentLineRenderer, Vector3[] linePoints)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x10E0544", Offset = "0x10E0544", VA = "0x10E0544")]
	private void MoveFurniture(XRRayInteractor currentRay, LineRenderer currentLineRenderer, Vector3[] linePoints)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x10E2D5C", Offset = "0x10E2D5C", VA = "0x10E2D5C")]
	private void MoveStairs(XRRayInteractor currentRay, LineRenderer currentLineRenderer, Vector3[] linePoints)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x10E0E40", Offset = "0x10E0E40", VA = "0x10E0E40")]
	private void MoveObject(XRRayInteractor currentRay, LineRenderer currentLineRenderer, Vector3[] linePoints)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x10E1990", Offset = "0x10E1990", VA = "0x10E1990")]
	private void MoveObjectWall(XRRayInteractor currentRay, LineRenderer currentLineRenderer)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x10E335C", Offset = "0x10E335C", VA = "0x10E335C")]
	private void MoveObjectCeiling(XRRayInteractor currentRay, LineRenderer currentLineRenderer, Vector3[] linePoints)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x10DC4B0", Offset = "0x10DC4B0", VA = "0x10DC4B0")]
	public static bool IsMovementValid(GameObject movingObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x10DBA04", Offset = "0x10DBA04", VA = "0x10DBA04")]
	public static void EndMove(bool isRotating = false)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x10E474C", Offset = "0x10E474C", VA = "0x10E474C")]
	public static void SetPhysicsObjectNull()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x10E3834", Offset = "0x10E3834", VA = "0x10E3834")]
	private static bool Snapping()
	{
		return default(bool);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x10E480C", Offset = "0x10E480C", VA = "0x10E480C")]
	public static void ShowOutline(bool _enable)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x10E4940", Offset = "0x10E4940", VA = "0x10E4940")]
	public ManagerSelection()
	{
	}
}
[Token(Token = "0x20001B6")]
public class ManagerSound : MonoBehaviour
{
	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ManagerSound instance;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer Mixer;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SFXscriptable SFX;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource AmbiantSrc;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource SFXSrc;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isPaused;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public UnityEvent<Esfx> SoundEvent;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastMusicVolume;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastVoiceVolume;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x10E4FCC", Offset = "0x10E4FCC", VA = "0x10E4FCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x10D7FA4", Offset = "0x10D7FA4", VA = "0x10D7FA4")]
	public void PlaySFX(Esfx e_sfx)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x10E5428", Offset = "0x10E5428", VA = "0x10E5428")]
	public void PlayOneShotSFX(Esfx e_sfx)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x10E5308", Offset = "0x10E5308", VA = "0x10E5308")]
	public void PlayAmbiant()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x10E55A8", Offset = "0x10E55A8", VA = "0x10E55A8")]
	public void PauseAmbiant()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x10E5200", Offset = "0x10E5200", VA = "0x10E5200")]
	public void MusicToggle(bool toggle)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x10E5270", Offset = "0x10E5270", VA = "0x10E5270")]
	public void SetSFXVolume(float volume)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x10E55D4", Offset = "0x10E55D4", VA = "0x10E55D4")]
	public void VoiceToggle(bool toggle)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x10E5644", Offset = "0x10E5644", VA = "0x10E5644")]
	public ManagerSound()
	{
	}
}
[Token(Token = "0x20001B9")]
public class ManagerSystem : SingletonMonoBehaviour<ManagerSystem>
{
	[Token(Token = "0x20001BA")]
	[CompilerGenerated]
	private sealed class <ForceFramerate>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManagerSystem <>4__this;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095C")]
			[Address(RVA = "0x10E687C", Offset = "0x10E687C", VA = "0x10E687C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x10E68C4", Offset = "0x10E68C4", VA = "0x10E68C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x10E6278", Offset = "0x10E6278", VA = "0x10E6278")]
		[DebuggerHidden]
		public <ForceFramerate>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x10E6728", Offset = "0x10E6728", VA = "0x10E6728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x10E672C", Offset = "0x10E672C", VA = "0x10E672C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x10E6884", Offset = "0x10E6884", VA = "0x10E6884", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BC")]
	[CompilerGenerated]
	private sealed class <InternetAccess>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManagerSystem <>4__this;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x10E6C34", Offset = "0x10E6C34", VA = "0x10E6C34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x10E6C7C", Offset = "0x10E6C7C", VA = "0x10E6C7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x10E62A0", Offset = "0x10E62A0", VA = "0x10E62A0")]
		[DebuggerHidden]
		public <InternetAccess>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x10E69C0", Offset = "0x10E69C0", VA = "0x10E69C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x10E69C4", Offset = "0x10E69C4", VA = "0x10E69C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x10E6C3C", Offset = "0x10E6C3C", VA = "0x10E6C3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ffrLevel;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isInternetReachable;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float delay;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ModalPopUp popup;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string sceneName;

	[Token(Token = "0x1400001A")]
	public event Action OnOculusInitialized
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0x10E5694", Offset = "0x10E5694", VA = "0x10E5694")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x10E5730", Offset = "0x10E5730", VA = "0x10E5730")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x10E57CC", Offset = "0x10E57CC", VA = "0x10E57CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x10E5DCC", Offset = "0x10E5DCC", VA = "0x10E5DCC")]
	private void CheckIfKickedFromMulti()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x10E5F14", Offset = "0x10E5F14", VA = "0x10E5F14")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x10E5FD4", Offset = "0x10E5FD4", VA = "0x10E5FD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x10E60C0", Offset = "0x10E60C0", VA = "0x10E60C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x10E5D00", Offset = "0x10E5D00", VA = "0x10E5D00")]
	private void SwitchTo90FPS()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x10E61AC", Offset = "0x10E61AC", VA = "0x10E61AC")]
	private void SwitchTo72FPS()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x10E5B34", Offset = "0x10E5B34", VA = "0x10E5B34")]
	private void TryResizeScreenToEyeBufferSize()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x10E6204", Offset = "0x10E6204", VA = "0x10E6204")]
	[IteratorStateMachine(typeof(<ForceFramerate>d__16))]
	private IEnumerator ForceFramerate()
	{
		return null;
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x10E5D58", Offset = "0x10E5D58", VA = "0x10E5D58")]
	[IteratorStateMachine(typeof(<InternetAccess>d__17))]
	private IEnumerator InternetAccess()
	{
		return null;
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x10E62C8", Offset = "0x10E62C8", VA = "0x10E62C8")]
	private void SetInternetReachability(bool b)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x10E65A0", Offset = "0x10E65A0", VA = "0x10E65A0")]
	public ManagerSystem()
	{
	}
}
[Token(Token = "0x20001BD")]
public class ManagerTeleportation : MonoBehaviour
{
	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ManagerTeleportation _instance;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rig;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRController leftRay;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRController rightRay;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float threshold;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LocomotionTeleport locomotionTeleport;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionHandler locomotionHandler;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Quaternion destinationRotation;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportationValidity teleportationValidity;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TeleportDestination teleportDestination;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportOrientationHandlerThumbstick teleportOriantationfeedback;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CapsuleCollider RigCollider;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 rigstartpos;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 camStartpos;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 currentOffset;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 lastRigPos;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion lastRigRot;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform cam;

	[Token(Token = "0x17000129")]
	public static bool IsTeleporting
	{
		[Token(Token = "0x6000969")]
		[Address(RVA = "0x10DE960", Offset = "0x10DE960", VA = "0x10DE960")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x10E6C84", Offset = "0x10E6C84", VA = "0x10E6C84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x10E6E74", Offset = "0x10E6E74", VA = "0x10E6E74")]
	private void Update()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x10E70E0", Offset = "0x10E70E0", VA = "0x10E70E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x10E71C0", Offset = "0x10E71C0", VA = "0x10E71C0")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x10E7418", Offset = "0x10E7418", VA = "0x10E7418")]
	private void RememberLastRigTransform()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x10E7474", Offset = "0x10E7474", VA = "0x10E7474")]
	private void PreventFalling()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x10E7698", Offset = "0x10E7698", VA = "0x10E7698")]
	public void TeleportPlayer(Vector3 _position, Vector3 _direction)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x10E7728", Offset = "0x10E7728", VA = "0x10E7728")]
	public ManagerTeleportation()
	{
	}
}
[Token(Token = "0x20001BE")]
public class ManagerTools : MonoBehaviour
{
	[Token(Token = "0x20001BF")]
	public enum HandHolding
	{
		[Token(Token = "0x4000A45")]
		None,
		[Token(Token = "0x4000A46")]
		NonDominant,
		[Token(Token = "0x4000A47")]
		Dominant,
		[Token(Token = "0x4000A48")]
		Both
	}

	[Token(Token = "0x20001C0")]
	public enum TransitionState
	{
		[Token(Token = "0x4000A4A")]
		FromIdle,
		[Token(Token = "0x4000A4B")]
		FromPipette,
		[Token(Token = "0x4000A4C")]
		FromMallet,
		[Token(Token = "0x4000A4D")]
		FromSprayer,
		[Token(Token = "0x4000A4E")]
		FromMap,
		[Token(Token = "0x4000A4F")]
		FromStylo,
		[Token(Token = "0x4000A50")]
		FromTruelle
	}

	[Token(Token = "0x20001C1")]
	private class ToolInstance
	{
		[Token(Token = "0x20001C2")]
		public delegate void CastorAnim();

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CastorAnim castorAnim;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly PhotonView pv;

		[Token(Token = "0x1700012B")]
		public HandHolding HandHolding
		{
			[Token(Token = "0x6000985")]
			[Address(RVA = "0x10EB024", Offset = "0x10EB024", VA = "0x10EB024")]
			[CompilerGenerated]
			get
			{
				return default(HandHolding);
			}
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x10EB01C", Offset = "0x10EB01C", VA = "0x10EB01C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public GameObject Tool
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0x10EB034", Offset = "0x10EB034", VA = "0x10EB034")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000986")]
			[Address(RVA = "0x10EB02C", Offset = "0x10EB02C", VA = "0x10EB02C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public TransitionState TransitionState
		{
			[Token(Token = "0x6000989")]
			[Address(RVA = "0x10EB044", Offset = "0x10EB044", VA = "0x10EB044")]
			[CompilerGenerated]
			get
			{
				return default(TransitionState);
			}
			[Token(Token = "0x6000988")]
			[Address(RVA = "0x10EB03C", Offset = "0x10EB03C", VA = "0x10EB03C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x10E80C8", Offset = "0x10E80C8", VA = "0x10E80C8")]
		public ToolInstance(GameObject tool, CastorAnim _castorAnim, TransitionState _transitionState)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x10EA134", Offset = "0x10EA134", VA = "0x10EA134")]
		public void SetNewHandHolding(HandHolding handHolding)
		{
		}
	}

	[Token(Token = "0x20001C3")]
	[CompilerGenerated]
	private sealed class <DelayedPipetteReactivation>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HandHolding <tmpHand>5__2;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x10EB2A4", Offset = "0x10EB2A4", VA = "0x10EB2A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x10EB2EC", Offset = "0x10EB2EC", VA = "0x10EB2EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x10E99D8", Offset = "0x10E99D8", VA = "0x10E99D8")]
		[DebuggerHidden]
		public <DelayedPipetteReactivation>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x10EB08C", Offset = "0x10EB08C", VA = "0x10EB08C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x10EB090", Offset = "0x10EB090", VA = "0x10EB090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x10EB2AC", Offset = "0x10EB2AC", VA = "0x10EB2AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToolInstance ToolUsed;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static HandHolding HandHoldingTool;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<string, TransformData> toolsTransformDataRightHand;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Dictionary<string, TransformData> toolsTransformDataLeftHand;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly Dictionary<string, ToolInstance> tool;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static HandHolding pipetteWasActive;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static GameObject toolsHolder;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static GameObject radialMenu3D;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool pipetteReactivating;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private static bool toDestroyWithHammer;

	[Token(Token = "0x1700012A")]
	public static bool UsingTool
	{
		[Token(Token = "0x6000972")]
		[Address(RVA = "0x10DBEC4", Offset = "0x10DBEC4", VA = "0x10DBEC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x10E773C", Offset = "0x10E773C", VA = "0x10E773C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x10E7740", Offset = "0x10E7740", VA = "0x10E7740")]
	public void Init()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x10E8F60", Offset = "0x10E8F60", VA = "0x10E8F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x10E9978", Offset = "0x10E9978", VA = "0x10E9978")]
	[IteratorStateMachine(typeof(<DelayedPipetteReactivation>d__18))]
	private IEnumerator DelayedPipetteReactivation()
	{
		return null;
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x10E8208", Offset = "0x10E8208", VA = "0x10E8208")]
	private void FillTransformDataDicRight()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x10E88B4", Offset = "0x10E88B4", VA = "0x10E88B4")]
	private void FillTransformDataDicLeft()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x10E97BC", Offset = "0x10E97BC", VA = "0x10E97BC")]
	private void MalletAction()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x10E9A00", Offset = "0x10E9A00", VA = "0x10E9A00")]
	public static void InstantiateRadialTool(string name)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x10E9D98", Offset = "0x10E9D98", VA = "0x10E9D98")]
	public static void CancelRadialTool()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x10EAAA8", Offset = "0x10EAAA8", VA = "0x10EAAA8")]
	public static GameObject GetToolGO(string name)
	{
		return null;
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x10EAB34", Offset = "0x10EAB34", VA = "0x10EAB34")]
	public static bool IsToolActive(string name, HandHolding handHolding)
	{
		return default(bool);
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x10EAC20", Offset = "0x10EAC20", VA = "0x10EAC20")]
	public static bool IsHandInTransition(HandHolding handHolding, out TransitionState transitionState)
	{
		return default(bool);
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x10DEA18", Offset = "0x10DEA18", VA = "0x10DEA18")]
	public static HandHolding HandOf(string toolName)
	{
		return default(HandHolding);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x10EADD4", Offset = "0x10EADD4", VA = "0x10EADD4")]
	public static void ChangeToolOfHand(string name, HandHolding newHand)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x10EAE98", Offset = "0x10EAE98", VA = "0x10EAE98")]
	public static bool IsMenuActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x10EAEFC", Offset = "0x10EAEFC", VA = "0x10EAEFC")]
	public ManagerTools()
	{
	}
}
[Token(Token = "0x20001C4")]
public class SplashScreen : MonoBehaviour
{
	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera camera;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject background;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float startTime;

	[Token(Token = "0x4000A5C")]
	private const float splashDuration = 1.5f;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int lastSplash;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool showSplashScreens;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SplashScreen _instance;

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x10EB2F4", Offset = "0x10EB2F4", VA = "0x10EB2F4")]
	public static bool IsInSplashScreen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x10EB4AC", Offset = "0x10EB4AC", VA = "0x10EB4AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x10EB7D0", Offset = "0x10EB7D0", VA = "0x10EB7D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x10EBB24", Offset = "0x10EBB24", VA = "0x10EBB24")]
	public SplashScreen()
	{
	}
}
[Token(Token = "0x20001C5")]
public struct AABB
{
	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2Int min;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2Int max;
}
[Token(Token = "0x20001C6")]
public struct AABB3Df
{
	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 min;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 max;

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x10EBB80", Offset = "0x10EBB80", VA = "0x10EBB80")]
	public void Encapsulate(Vector3 point)
	{
	}
}
[Token(Token = "0x20001C7")]
public struct AABBf
{
	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 min;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2 max;

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x10EBBD0", Offset = "0x10EBBD0", VA = "0x10EBBD0")]
	public AABBf Intersection(AABBf other)
	{
		return default(AABBf);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x10EBC50", Offset = "0x10EBC50", VA = "0x10EBC50")]
	public float Area()
	{
		return default(float);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x10EBC60", Offset = "0x10EBC60", VA = "0x10EBC60")]
	public void Encapsulate(Vector2 point)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x10EBC98", Offset = "0x10EBC98", VA = "0x10EBC98")]
	public bool IsPointInside(Vector2 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001C8")]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
public class EarCut
{
	[Token(Token = "0x20001C9")]
	private class Node
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 pos;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Node prev;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Node next;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float z;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Node prevZ;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Node nextZ;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool steiner;

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x10EDE64", Offset = "0x10EDE64", VA = "0x10EDE64")]
		public Node(int i, Vector2 pos)
		{
		}
	}

	[Token(Token = "0x20001CA")]
	private class AABBf
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 min;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 max;

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x10EDEE8", Offset = "0x10EDEE8", VA = "0x10EDEE8")]
		public AABBf()
		{
		}
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x10EBCD4", Offset = "0x10EBCD4", VA = "0x10EBCD4")]
	public List<int> Triangulate(Vector2[] data, int[] holeIndices)
	{
		return null;
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x10EC010", Offset = "0x10EC010", VA = "0x10EC010")]
	private Node EliminateHoles(Vector2[] data, int[] holeIndices, Node outerNode)
	{
		return null;
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x10EC55C", Offset = "0x10EC55C", VA = "0x10EC55C")]
	private Node GetLeftmost(Node start)
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x10EC60C", Offset = "0x10EC60C", VA = "0x10EC60C")]
	private static int CompareX(Node a, Node b)
	{
		return default(int);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x10EC59C", Offset = "0x10EC59C", VA = "0x10EC59C")]
	private Node EliminateHole(Node hole, Node outerNode)
	{
		return null;
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x10EC61C", Offset = "0x10EC61C", VA = "0x10EC61C")]
	private Node FindHoleBridge(Node hole, Node outerNode)
	{
		return null;
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x10EC7EC", Offset = "0x10EC7EC", VA = "0x10EC7EC")]
	private Node SplitPolygon(Node a, Node b)
	{
		return null;
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x10EC928", Offset = "0x10EC928", VA = "0x10EC928")]
	private Node FilterPoints(Node start, Node end)
	{
		return null;
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x10ECAF4", Offset = "0x10ECAF4", VA = "0x10ECAF4")]
	private bool SectorContainsSector(Node m, Node p)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x10EC29C", Offset = "0x10EC29C", VA = "0x10EC29C")]
	private void EarCutLinked(Node ear, List<int> triangles, Vector2 min, float invSize, int pass)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x10ECC18", Offset = "0x10ECC18", VA = "0x10ECC18")]
	private void IndexCurve(Node start, float minX, float minY, float invSize)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x10ECE70", Offset = "0x10ECE70", VA = "0x10ECE70")]
	private bool IsEarHashed(Node ear, float minX, float minY, float invSize)
	{
		return default(bool);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x10ED344", Offset = "0x10ED344", VA = "0x10ED344")]
	private Node CureLocalIntersections(Node start, List<int> triangles)
	{
		return null;
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x10ED554", Offset = "0x10ED554", VA = "0x10ED554")]
	private void SplitEarcut(Node start, List<int> triangles, float minX, float minY, float invSize)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x10ED698", Offset = "0x10ED698", VA = "0x10ED698")]
	private uint ZOrder(float xf, float yf, float minX, float minY, float invSize)
	{
		return default(uint);
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x10ED77C", Offset = "0x10ED77C", VA = "0x10ED77C")]
	private Node SortLinked(Node list)
	{
		return null;
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x10EDA10", Offset = "0x10EDA10", VA = "0x10EDA10")]
	private bool IsValidDiagonal(Node a, Node b)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x10EDB80", Offset = "0x10EDB80", VA = "0x10EDB80")]
	private bool IntersectsPolygon(Node a, Node b)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x10EDC14", Offset = "0x10EDC14", VA = "0x10EDC14")]
	private bool middleInside(Node a, Node b)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x10EBECC", Offset = "0x10EBECC", VA = "0x10EBECC")]
	private Node LinkedList(Vector2[] data, int start, int end, bool clockwise)
	{
		return null;
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x10EDCFC", Offset = "0x10EDCFC", VA = "0x10EDCFC")]
	private Node InsertNode(int i, Vector2 pos, Node last)
	{
		return null;
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x10ECBC0", Offset = "0x10ECBC0", VA = "0x10ECBC0")]
	private void RemoveNode(Node p)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x10ECCD0", Offset = "0x10ECCD0", VA = "0x10ECCD0")]
	private bool IsEar(Node ear)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x10EC28C", Offset = "0x10EC28C", VA = "0x10EC28C")]
	private bool AreValuesClose(float a, float b, float precision)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x10ECB6C", Offset = "0x10ECB6C", VA = "0x10ECB6C")]
	private bool Equals(Node p1, Node p2)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x10EDCA4", Offset = "0x10EDCA4", VA = "0x10EDCA4")]
	private float SignedArea(Vector2[] data, int start, int end)
	{
		return default(float);
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x10EC9CC", Offset = "0x10EC9CC", VA = "0x10EC9CC")]
	private bool PointInTriangle(float ax, float ay, float bx, float by, float cx, float cy, float px, float py)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x10ECA20", Offset = "0x10ECA20", VA = "0x10ECA20")]
	private bool locallyInside(Node a, Node b)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x10ECB98", Offset = "0x10ECB98", VA = "0x10ECB98")]
	private float Area(Node p, Node q, Node r)
	{
		return default(float);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x10ED8C0", Offset = "0x10ED8C0", VA = "0x10ED8C0")]
	private bool Intersects(Node p1, Node q1, Node p2, Node q2)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x10EDDE0", Offset = "0x10EDDE0", VA = "0x10EDDE0")]
	private int Sign(float num)
	{
		return default(int);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x10EDDF8", Offset = "0x10EDDF8", VA = "0x10EDDF8")]
	private bool OnSegment(Node p, Node q, Node r)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x10EDE5C", Offset = "0x10EDE5C", VA = "0x10EDE5C")]
	public EarCut()
	{
	}
}
[Token(Token = "0x20001CB")]
public class Mesh2D
{
	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Vector2> points;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> triangles;

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x10EDEF0", Offset = "0x10EDEF0", VA = "0x10EDEF0")]
	public Mesh2D()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x10EDFC8", Offset = "0x10EDFC8", VA = "0x10EDFC8")]
	public void Print()
	{
	}
}
[Token(Token = "0x20001CC")]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
public class MultiPolygon
{
	[Token(Token = "0x20001CD")]
	public struct SIndex
	{
		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int poly;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int point;

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x10F0D50", Offset = "0x10F0D50", VA = "0x10F0D50")]
		public SIndex(int _poly, int _point)
		{
		}
	}

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Polygon> polys;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool empty;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x10EE6C0", Offset = "0x10EE6C0", VA = "0x10EE6C0")]
	public MultiPolygon()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x10EE750", Offset = "0x10EE750", VA = "0x10EE750")]
	public MultiPolygon(MultiPolygon other)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x10EEA28", Offset = "0x10EEA28", VA = "0x10EEA28")]
	public void ToClipper(List<List<IntPoint>> dest)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x10EED90", Offset = "0x10EED90", VA = "0x10EED90")]
	public void FromClipper(List<List<IntPoint>> src)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x10EF0F8", Offset = "0x10EF0F8", VA = "0x10EF0F8")]
	public MultiPolygon Subtract(MultiPolygon other)
	{
		return null;
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x10EF268", Offset = "0x10EF268", VA = "0x10EF268")]
	public MultiPolygon Intersect(MultiPolygon other)
	{
		return null;
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x10EF3D8", Offset = "0x10EF3D8", VA = "0x10EF3D8")]
	public MultiPolygon Union(MultiPolygon other, ClipperLib.PolyFillType fillType = ClipperLib.PolyFillType.pftEvenOdd)
	{
		return null;
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x10EF54C", Offset = "0x10EF54C", VA = "0x10EF54C")]
	public Mesh2D Triangulate()
	{
		return null;
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x10F037C", Offset = "0x10F037C", VA = "0x10F037C")]
	public AABBf GetAABB()
	{
		return default(AABBf);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x10F0734", Offset = "0x10F0734", VA = "0x10F0734")]
	public bool IsPointInside(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x10F0A20", Offset = "0x10F0A20", VA = "0x10F0A20")]
	public bool IsPointOnBorder(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x10F0BE4", Offset = "0x10F0BE4", VA = "0x10F0BE4")]
	public bool IsPointInsideOrOnBorder(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x10F0C28", Offset = "0x10F0C28", VA = "0x10F0C28")]
	public bool IsPointInsideButNotOnBorder(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x10F0C70", Offset = "0x10F0C70", VA = "0x10F0C70")]
	public SIndex IndexOfPoint(Vector2 point)
	{
		return default(SIndex);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x10F0D58", Offset = "0x10F0D58", VA = "0x10F0D58")]
	public SIndex IndexOfSuccPoints(Vector2 point1, Vector2 point2)
	{
		return default(SIndex);
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x10F0F7C", Offset = "0x10F0F7C", VA = "0x10F0F7C")]
	public bool IsEqual(MultiPolygon other)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x10F1334", Offset = "0x10F1334", VA = "0x10F1334")]
	public MultiPolygon Dilate(float radius, bool isSquare)
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x10F1500", Offset = "0x10F1500", VA = "0x10F1500")]
	public void SetOrientation(bool invert)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x10F17E0", Offset = "0x10F17E0", VA = "0x10F17E0")]
	public void Remove(Vector2 point)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x10F1948", Offset = "0x10F1948", VA = "0x10F1948")]
	public MultiPolygon Simplify()
	{
		return null;
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x10F1DB0", Offset = "0x10F1DB0", VA = "0x10F1DB0")]
	public float SignedArea()
	{
		return default(float);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x10EFC68", Offset = "0x10EFC68", VA = "0x10EFC68")]
	public List<MultiPolygon> SplitComponents()
	{
		return null;
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x10F206C", Offset = "0x10F206C", VA = "0x10F206C")]
	private bool IsPolyInsidePoly(Polygon bigPoly, Polygon smallPoly)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x10F2350", Offset = "0x10F2350", VA = "0x10F2350")]
	public float DistanceFromPoint(Vector2 point)
	{
		return default(float);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x10F25FC", Offset = "0x10F25FC", VA = "0x10F25FC")]
	public bool IsTouching(MultiPolygon other)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x10F29D4", Offset = "0x10F29D4", VA = "0x10F29D4")]
	public void Print()
	{
	}
}
[Token(Token = "0x20001CE")]
public static class MyMath
{
	[Token(Token = "0x20001CF")]
	public struct STransformMove
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 translation;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x10F2EE4", Offset = "0x10F2EE4", VA = "0x10F2EE4")]
	public static bool AreNumbersClose(float a, float b, float deltaMax)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x10F2EF4", Offset = "0x10F2EF4", VA = "0x10F2EF4")]
	public static bool SegmentIntersect(Vector2 point1, Vector2 point2, Vector2 point3, Vector2 point4, out Vector2 inter)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x10F30FC", Offset = "0x10F30FC", VA = "0x10F30FC")]
	public static void SegmentIntersectDist(Vector2 point1, Vector2 point2, Vector2 point3, Vector2 point4, out float interDist1, out float interDist2, out bool areColinear)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x10F3408", Offset = "0x10F3408", VA = "0x10F3408")]
	public static bool IsPointInTriangle(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x10F34B4", Offset = "0x10F34B4", VA = "0x10F34B4")]
	public static float angleFromPoint(Vector2 pt1, Vector2 pt2, Vector2 pt3)
	{
		return default(float);
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x10F353C", Offset = "0x10F353C", VA = "0x10F353C")]
	public static float IsAPointLeftOfVectorOrOnTheLine(Vector2 a, Vector2 b, Vector2 p)
	{
		return default(float);
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x10F355C", Offset = "0x10F355C", VA = "0x10F355C")]
	public static Polygon GetConvexHull(List<Vector2> points)
	{
		return null;
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x10F3CC4", Offset = "0x10F3CC4", VA = "0x10F3CC4")]
	public static bool IsPointInSegment(Vector2 seg1, Vector2 seg2, Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x10F3E00", Offset = "0x10F3E00", VA = "0x10F3E00")]
	public static bool IsPointInSegment2(Vector2 seg1, Vector2 seg2, Vector2 point, float precision)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x10F3F34", Offset = "0x10F3F34", VA = "0x10F3F34")]
	public static float DistancePointSegment(Vector2 point, Vector2 seg1, Vector2 seg2)
	{
		return default(float);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x10F401C", Offset = "0x10F401C", VA = "0x10F401C")]
	public static Ray PlanesIntersection(Plane p1, Plane p2)
	{
		return default(Ray);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x10F43BC", Offset = "0x10F43BC", VA = "0x10F43BC")]
	public static STransformMove GetTransformMove(GameObject source, GameObject dest)
	{
		return default(STransformMove);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x10F4548", Offset = "0x10F4548", VA = "0x10F4548")]
	public static void TransformMove(GameObject source, STransformMove info)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x10F4674", Offset = "0x10F4674", VA = "0x10F4674")]
	public static void InverseTransformMove(GameObject source, STransformMove info)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x10F47BC", Offset = "0x10F47BC", VA = "0x10F47BC")]
	public static Vector2 GetSphericalAngles(Vector3 forward)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x10F485C", Offset = "0x10F485C", VA = "0x10F485C")]
	public static Vector2 GetSphericalDelta(Vector2 oldAngles, Vector2 newAngles)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x10F48D4", Offset = "0x10F48D4", VA = "0x10F48D4")]
	public static float DistancePointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(float);
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x10F498C", Offset = "0x10F498C", VA = "0x10F498C")]
	public static Vector3 ProjectPointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x10F4AB0", Offset = "0x10F4AB0", VA = "0x10F4AB0")]
	public static int Abs(int a)
	{
		return default(int);
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x10F4ABC", Offset = "0x10F4ABC", VA = "0x10F4ABC")]
	public static int Min(int a, int b)
	{
		return default(int);
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x10F4AC8", Offset = "0x10F4AC8", VA = "0x10F4AC8")]
	public static int Max(int a, int b)
	{
		return default(int);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x10F4AD4", Offset = "0x10F4AD4", VA = "0x10F4AD4")]
	public static bool AreQuaternionsClose(Quaternion a, Quaternion b, float deltaMax)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x10F4B0C", Offset = "0x10F4B0C", VA = "0x10F4B0C")]
	public static Vector2 Vec2Abs(Vector2 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x10F30EC", Offset = "0x10F30EC", VA = "0x10F30EC")]
	public static float CrossV2(Vector2 u, Vector2 v)
	{
		return default(float);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x10F4B18", Offset = "0x10F4B18", VA = "0x10F4B18")]
	public static bool AreParallel(Vector2 u, Vector2 v)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x10F4C88", Offset = "0x10F4C88", VA = "0x10F4C88")]
	public static Vector2 Rotate(this Vector2 v, float degrees)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x10F4CD8", Offset = "0x10F4CD8", VA = "0x10F4CD8")]
	public static Vector2 RotateAroundPivot(Vector2 point, Vector2 pivot, float degrees)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x10F4D40", Offset = "0x10F4D40", VA = "0x10F4D40")]
	public static bool AreVectorsClose(Vector2 a, Vector2 b, float deltaMax)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x10F4D64", Offset = "0x10F4D64", VA = "0x10F4D64")]
	public static Vector2Int Vec2IntAbs(Vector2Int v)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x10F4D88", Offset = "0x10F4D88", VA = "0x10F4D88")]
	public static int CrossV2I(Vector2Int u, Vector2Int v)
	{
		return default(int);
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x10F4DA0", Offset = "0x10F4DA0", VA = "0x10F4DA0")]
	public static int DotV2I(Vector2Int u, Vector2Int v)
	{
		return default(int);
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x10F4DB4", Offset = "0x10F4DB4", VA = "0x10F4DB4")]
	public static Vector3 Vec3Abs(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x10F4DC4", Offset = "0x10F4DC4", VA = "0x10F4DC4")]
	public static bool AreParallel(Vector3 u, Vector3 v)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x10F4E14", Offset = "0x10F4E14", VA = "0x10F4E14")]
	public static Vector3 Divide(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x10F438C", Offset = "0x10F438C", VA = "0x10F438C")]
	public static bool AreVectorsClose(Vector3 a, Vector3 b, float deltaMax)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x10F4E7C", Offset = "0x10F4E7C", VA = "0x10F4E7C")]
	public static Vector3 AbsoluteVector(this Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x10F4854", Offset = "0x10F4854", VA = "0x10F4854")]
	public static Vector2 ProjectedOnXZPlane(this Vector3 vector)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x20001D1")]
public class OBB2D
{
	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 center;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2[] axes;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] extents;

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x10F4EA8", Offset = "0x10F4EA8", VA = "0x10F4EA8")]
	public OBB2D()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x10F4F44", Offset = "0x10F4F44", VA = "0x10F4F44")]
	public AABBf GetAABB()
	{
		return default(AABBf);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x10F514C", Offset = "0x10F514C", VA = "0x10F514C")]
	public bool IsPointInside(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x10F51E4", Offset = "0x10F51E4", VA = "0x10F51E4")]
	public void InitFromObject(GameObject obj)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x10F568C", Offset = "0x10F568C", VA = "0x10F568C")]
	public void InitFromObjectPart(GameObject obj, float top, float bottom)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x10F5C5C", Offset = "0x10F5C5C", VA = "0x10F5C5C")]
	public void InitFromWall(Wall wall)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x10F5E60", Offset = "0x10F5E60", VA = "0x10F5E60")]
	public bool Collide(OBB2D other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x10F5F20", Offset = "0x10F5F20", VA = "0x10F5F20")]
	private bool CheckAxis(OBB2D other, Vector2 axis)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x10F5F80", Offset = "0x10F5F80", VA = "0x10F5F80")]
	private static Vector2 ProjectOBB(OBB2D obb, Vector2 target)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x20001D2")]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
public class Polygon
{
	[Token(Token = "0x20001D3")]
	private struct SIntersectInfo
	{
		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 start;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 end;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 inter;
	}

	[Token(Token = "0x4000A7D")]
	public const long clipperScale = 65536L;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Vector2> points;

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x10EEF00", Offset = "0x10EEF00", VA = "0x10EEF00")]
	public Polygon()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x10EE994", Offset = "0x10EE994", VA = "0x10EE994")]
	public Polygon(Polygon other)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x10F15AC", Offset = "0x10F15AC", VA = "0x10F15AC")]
	public bool IsClockwise()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x10F24C8", Offset = "0x10F24C8", VA = "0x10F24C8")]
	public float DistanceFromPoint(Vector2 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x10F61C0", Offset = "0x10F61C0", VA = "0x10F61C0")]
	public float DistanceFromPoint2(Vector2 _point, out int _index)
	{
		return default(float);
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x10F630C", Offset = "0x10F630C", VA = "0x10F630C")]
	public bool IsTouching(Polygon other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x10F28C0", Offset = "0x10F28C0", VA = "0x10F28C0")]
	public bool IsTouching2(Polygon other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x10EEC00", Offset = "0x10EEC00", VA = "0x10EEC00")]
	public void ToClipper(List<IntPoint> dest)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x10EEF88", Offset = "0x10EEF88", VA = "0x10EEF88")]
	public void FromClipper(List<IntPoint> src)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x10F088C", Offset = "0x10F088C", VA = "0x10F088C")]
	public bool IsPointInside(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x10F6418", Offset = "0x10F6418", VA = "0x10F6418")]
	public Vector2 RealCentroid(float _minDistance = 0f)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x10F6724", Offset = "0x10F6724", VA = "0x10F6724")]
	private List<float> GetIntersections(float y)
	{
		return null;
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x10F695C", Offset = "0x10F695C", VA = "0x10F695C")]
	private Vector2 GetCentroid(Vector2 pos, Vector2 xAxis, Vector2 yAxis)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x10F6AD0", Offset = "0x10F6AD0", VA = "0x10F6AD0")]
	private void UpdateMinMax(Vector2 start, Vector2 end, Vector2 pos, Vector2 xAxis, Vector2 yAxis, ref float min, ref float max)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x10F0ACC", Offset = "0x10F0ACC", VA = "0x10F0ACC")]
	public bool IsPointOnBorder(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x10F20F4", Offset = "0x10F20F4", VA = "0x10F20F4")]
	public bool IsPointInsideOrOnBorder(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x10F6BA8", Offset = "0x10F6BA8", VA = "0x10F6BA8")]
	public bool IsPointInsideAndNotOnBorder(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x10F0E2C", Offset = "0x10F0E2C", VA = "0x10F0E2C")]
	public int IndexOfSuccPoints(Vector2 point1, Vector2 point2)
	{
		return default(int);
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x10F16D8", Offset = "0x10F16D8", VA = "0x10F16D8")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x10F0554", Offset = "0x10F0554", VA = "0x10F0554")]
	public AABBf GetAABB()
	{
		return default(AABBf);
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x10F6BF0", Offset = "0x10F6BF0", VA = "0x10F6BF0")]
	public float GetWinding()
	{
		return default(float);
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x10F6D54", Offset = "0x10F6D54", VA = "0x10F6D54")]
	private bool SelfOverlapLine(float minX, float maxX, float y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x10F71A0", Offset = "0x10F71A0", VA = "0x10F71A0")]
	public bool SelfOverlap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x10F745C", Offset = "0x10F745C", VA = "0x10F745C")]
	public bool Overlap(Polygon other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x10F76E4", Offset = "0x10F76E4", VA = "0x10F76E4")]
	public Polygon Dilate(float radius, bool isSquare)
	{
		return null;
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x10F1178", Offset = "0x10F1178", VA = "0x10F1178")]
	public bool IsEqual(Polygon poly)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x10F1F6C", Offset = "0x10F1F6C", VA = "0x10F1F6C")]
	public float SignedArea()
	{
		return default(float);
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x10F2138", Offset = "0x10F2138", VA = "0x10F2138")]
	public Vector2 Centroid()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x10F1A7C", Offset = "0x10F1A7C", VA = "0x10F1A7C")]
	public Polygon Simplify()
	{
		return null;
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x10F78E0", Offset = "0x10F78E0", VA = "0x10F78E0")]
	public static Polygon Quad(Vector2 center, Vector2 extent1, Vector2 extent2)
	{
		return null;
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x10F2B74", Offset = "0x10F2B74", VA = "0x10F2B74")]
	public void Print()
	{
	}
}
[Token(Token = "0x20001D5")]
public class TPPLPartition
{
	[Token(Token = "0x20001D6")]
	private class PartitionVertex
	{
		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isActive;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isConvex;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool isEar;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 p;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float angle;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PartitionVertex previous;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PartitionVertex next;

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x10FA700", Offset = "0x10FA700", VA = "0x10FA700")]
		public PartitionVertex()
		{
		}
	}

	[Token(Token = "0x20001D7")]
	public class CompareAreas : IComparer<TPPLPoly>
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x10FB19C", Offset = "0x10FB19C", VA = "0x10FB19C", Slot = "4")]
		private int System.Collections.Generic.IComparer<TPPLPoly>.Compare(TPPLPoly a, TPPLPoly b)
		{
			return default(int);
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x10F9400", Offset = "0x10F9400", VA = "0x10F9400")]
		public CompareAreas()
		{
		}
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x10F7BC0", Offset = "0x10F7BC0", VA = "0x10F7BC0")]
	public static TPPLPolyList ConvexPartition_HM(TPPLPoly poly)
	{
		return null;
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x10F7E94", Offset = "0x10F7E94", VA = "0x10F7E94")]
	private static bool IsConvex(TPPLPoly poly)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x10F91E8", Offset = "0x10F91E8", VA = "0x10F91E8")]
	private static TPPLPoly FindNearPolygon(TPPLPolyList triangles, int iter1, Vector2 d1, Vector2 d2, ref int i21, ref int i22, bool avoidLowPriority)
	{
		return null;
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x10F8C30", Offset = "0x10F8C30", VA = "0x10F8C30")]
	private static void MergePolys(TPPLPolyList triangles, bool avoidLowPriority)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x10F88A0", Offset = "0x10F88A0", VA = "0x10F88A0")]
	private static void SetPolysPriority(TPPLPoly sourcePoly, TPPLPolyList triangles)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x10F913C", Offset = "0x10F913C", VA = "0x10F913C")]
	private static void SortPolys(TPPLPolyList triangles)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x10F9408", Offset = "0x10F9408", VA = "0x10F9408")]
	public static TPPLPolyList ConvexPartition_HM(TPPLPolyList inpolys)
	{
		return null;
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x10FA230", Offset = "0x10FA230", VA = "0x10FA230")]
	public static MultiPolygon ConvexPartition_HM(MultiPolygon inpolys)
	{
		return null;
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x10F7FFC", Offset = "0x10F7FFC", VA = "0x10F7FFC")]
	public static TPPLPolyList Triangulate_EC(TPPLPoly poly)
	{
		return null;
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x10FAC8C", Offset = "0x10FAC8C", VA = "0x10FAC8C")]
	public static TPPLPolyList Triangulate_EC(TPPLPolyList inpolys)
	{
		return null;
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x10FA734", Offset = "0x10FA734", VA = "0x10FA734")]
	private static void UpdateVertex(PartitionVertex v, List<PartitionVertex> vertices)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x10FAE1C", Offset = "0x10FAE1C", VA = "0x10FAE1C")]
	private static bool IsInside(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x10F9598", Offset = "0x10F9598", VA = "0x10F9598")]
	private static TPPLPolyList RemoveHoles(TPPLPolyList inpolys)
	{
		return null;
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x10F93B8", Offset = "0x10F93B8", VA = "0x10F93B8")]
	private static bool IsConvex(Vector2 p1, Vector2 p2, Vector2 p3)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x10F91C0", Offset = "0x10F91C0", VA = "0x10F91C0")]
	private static bool IsReflex(Vector2 p1, Vector2 p2, Vector2 p3)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x10FB048", Offset = "0x10FB048", VA = "0x10FB048")]
	private static bool InCone(Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x10FB0D0", Offset = "0x10FB0D0", VA = "0x10FB0D0")]
	private static bool Intersects(Vector2 p11, Vector2 p12, Vector2 p21, Vector2 p22)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x10FB194", Offset = "0x10FB194", VA = "0x10FB194")]
	public TPPLPartition()
	{
	}
}
[Token(Token = "0x20001D8")]
public class TPPLPoly : Polygon
{
	[Token(Token = "0x20001D9")]
	public enum TPPLOrientation
	{
		[Token(Token = "0x4000A8F")]
		TPPL_ORIENTATION_CW = -1,
		[Token(Token = "0x4000A90")]
		TPPL_ORIENTATION_NONE,
		[Token(Token = "0x4000A91")]
		TPPL_ORIENTATION_CCW
	}

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lowPriority;

	[Token(Token = "0x17000130")]
	public bool IsHole
	{
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x10FB224", Offset = "0x10FB224", VA = "0x10FB224")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x10FB22C", Offset = "0x10FB22C", VA = "0x10FB22C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x10F93E8", Offset = "0x10F93E8", VA = "0x10F93E8")]
	public TPPLPoly()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x10FAC54", Offset = "0x10FAC54", VA = "0x10FAC54")]
	public TPPLPoly(TPPLPoly src)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x10FAAAC", Offset = "0x10FAAAC", VA = "0x10FAAAC")]
	public void Triangle(Vector2 p1, Vector2 p2, Vector2 p3)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x10FB238", Offset = "0x10FB238", VA = "0x10FB238")]
	public TPPLOrientation GetOrientation()
	{
		return default(TPPLOrientation);
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x10FA678", Offset = "0x10FA678", VA = "0x10FA678")]
	public void SetOrientation(TPPLOrientation orientation)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x10F7DBC", Offset = "0x10F7DBC", VA = "0x10F7DBC")]
	public bool Valid()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001DA")]
public class TPPLPolyList
{
	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<TPPLPoly> polys;

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x10F7E0C", Offset = "0x10F7E0C", VA = "0x10F7E0C")]
	public TPPLPolyList()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x10FAE9C", Offset = "0x10FAE9C", VA = "0x10FAE9C")]
	public TPPLPolyList(TPPLPolyList other)
	{
	}
}
[Token(Token = "0x20001DB")]
public class Voronoi
{
	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x10FB260", Offset = "0x10FB260", VA = "0x10FB260")]
	public static List<Polygon> Create(MultiPolygon room, List<Vector2> sites)
	{
		return null;
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x10FB5E0", Offset = "0x10FB5E0", VA = "0x10FB5E0")]
	private static Polygon CreateCell(Polygon aabbPoly, List<Vector2> sites, int cellNum)
	{
		return null;
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x10FBAC4", Offset = "0x10FBAC4", VA = "0x10FBAC4")]
	public Voronoi()
	{
	}
}
[Token(Token = "0x20001DC")]
public class AvatarSync : MonoBehaviourPun, IPunObservable, IInRoomCallbacks
{
	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SampleAvatarEntityMulti avatar;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SampleAvatarEntityMulti clientAvatar;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform rig;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform trackingSpace;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform clientTrackingSpace;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OvrAvatarEntity.StreamLOD defaultLOD;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool avatarLoaded;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool wasMineAtStartup;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_DistanceYPos;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_DirectionYPos;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_StoredPosYPos;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_DistanceTS;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_AngleTS;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 m_DirectionTS;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 m_StoredPosTS;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private byte[] networkedAvatarData;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float networkedYPos;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 networkedTrackingSpacePos;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion networkedTrackingSpaceRot;

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x10FBACC", Offset = "0x10FBACC", VA = "0x10FBACC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x10FBC48", Offset = "0x10FBC48", VA = "0x10FBC48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x10FBCA0", Offset = "0x10FBCA0", VA = "0x10FBCA0")]
	[PunRPC]
	private void OculusUserId(long convertedId)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x10FBCBC", Offset = "0x10FBCBC", VA = "0x10FBCBC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x10FC1F8", Offset = "0x10FC1F8", VA = "0x10FC1F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x10FC660", Offset = "0x10FC660", VA = "0x10FC660", Slot = "5")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x10FC664", Offset = "0x10FC664", VA = "0x10FC664", Slot = "7")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x10FC668", Offset = "0x10FC668", VA = "0x10FC668", Slot = "8")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x10FC66C", Offset = "0x10FC66C", VA = "0x10FC66C", Slot = "9")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x10FC670", Offset = "0x10FC670", VA = "0x10FC670", Slot = "6")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x10FC7C0", Offset = "0x10FC7C0", VA = "0x10FC7C0")]
	public AvatarSync()
	{
	}
}
[Token(Token = "0x20001DD")]
public class ComponentSpawnManagementV3 : MonoBehaviour
{
	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRCameraRig ovrCameraRig;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] gameObjectsToDisable;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PhotonView photonView;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CharacterCameraConstraint characterCameraConstraint;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SimpleCapsuleWithStickMovement simpleCapsuleWithStickMovement;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject hostTrackingSpace;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject clientTrackingSpace;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ReceivePocketEvent receivePocketEvent;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SetAvatarMulti setAvatarScript;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SampleAvatarEntityMulti hostAvatar;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject leftHandMulti;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject rightHandMulti;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x10FC7DC", Offset = "0x10FC7DC", VA = "0x10FC7DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x10FCB60", Offset = "0x10FCB60", VA = "0x10FCB60")]
	private void SetClientClap()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x10FCDBC", Offset = "0x10FCDBC", VA = "0x10FCDBC")]
	public ComponentSpawnManagementV3()
	{
	}
}
[Token(Token = "0x20001DE")]
public class DefineMultiInteractable : MonoBehaviour
{
	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x10FCDC8", Offset = "0x10FCDC8", VA = "0x10FCDC8")]
	public static void SetDoorsInteraction()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x10FCEC0", Offset = "0x10FCEC0", VA = "0x10FCEC0")]
	public static void DisableAllMirrors()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x10FCF78", Offset = "0x10FCF78", VA = "0x10FCF78")]
	public DefineMultiInteractable()
	{
	}
}
[Token(Token = "0x20001DF")]
public class DuplicationMulti : MonoBehaviour
{
	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CubeDuplication cubeDuplication;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x10FCF80", Offset = "0x10FCF80", VA = "0x10FCF80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x10FD010", Offset = "0x10FD010", VA = "0x10FD010")]
	[PunRPC]
	private void SetVisible(bool setActive)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x10FD054", Offset = "0x10FD054", VA = "0x10FD054")]
	public DuplicationMulti()
	{
	}
}
[Token(Token = "0x20001E0")]
public class HandClapMulti : MonoBehaviour
{
	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPlugin.Handedness handedness;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x10FD05C", Offset = "0x10FD05C", VA = "0x10FD05C")]
	public void SetHandedness(OVRPlugin.Handedness handedness)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x10FD064", Offset = "0x10FD064", VA = "0x10FD064")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x10FD330", Offset = "0x10FD330", VA = "0x10FD330")]
	public HandClapMulti()
	{
	}
}
[Token(Token = "0x20001E1")]
public class InteractionAuthorization : MonoBehaviour
{
	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x10FD338", Offset = "0x10FD338", VA = "0x10FD338")]
	public void TriggerSaveMulti()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x10FD494", Offset = "0x10FD494", VA = "0x10FD494")]
	public InteractionAuthorization()
	{
	}
}
[Token(Token = "0x20001E2")]
public class Invites : MonoBehaviour
{
	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong loggedInUserID;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> DestinationAPINames;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int DestinationIndex;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string LobbySessionID;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MatchSessionID;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsJoinable;

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x10FD49C", Offset = "0x10FD49C", VA = "0x10FD49C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x10FD570", Offset = "0x10FD570", VA = "0x10FD570")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x10FD578", Offset = "0x10FD578", VA = "0x10FD578")]
	private void SetGroupParametersFromMaster()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x10FD7AC", Offset = "0x10FD7AC", VA = "0x10FD7AC")]
	private void OnLoggedInUser(Message<Oculus.Platform.Models.User> message)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x10FD85C", Offset = "0x10FD85C", VA = "0x10FD85C")]
	private void OnGetDestinations(Message<DestinationList> message)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x10FDDFC", Offset = "0x10FDDFC", VA = "0x10FDDFC")]
	private void OnJoinIntentChangeNotif(Message<GroupPresenceJoinIntent> message)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x10FE254", Offset = "0x10FE254", VA = "0x10FE254")]
	private void OnLeaveIntentChangeNotif(Message<GroupPresenceLeaveIntent> message)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x10FE5AC", Offset = "0x10FE5AC", VA = "0x10FE5AC")]
	private void OnInviteSentNotif(Message<LaunchInvitePanelFlowResult> message)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x10FDC7C", Offset = "0x10FDC7C", VA = "0x10FDC7C")]
	private void UpdateDestinationsConsole()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x10FE9BC", Offset = "0x10FE9BC", VA = "0x10FE9BC")]
	public void SendInviteDialog()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x10FEBF0", Offset = "0x10FEBF0", VA = "0x10FEBF0")]
	public void LaunchRosterDialog()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x10FED20", Offset = "0x10FED20", VA = "0x10FED20")]
	private void SetPresence()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x10FEF0C", Offset = "0x10FEF0C", VA = "0x10FEF0C")]
	public Invites()
	{
	}
}
[Token(Token = "0x20001E4")]
public class MiniPopUp : MonoBehaviour
{
	[Token(Token = "0x20001E5")]
	[CompilerGenerated]
	private sealed class <UpdateSharingAnchorMessage>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniPopUp <>4__this;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string waitMessage;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string doneMessage;

		[Token(Token = "0x17000131")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x10FFF68", Offset = "0x10FFF68", VA = "0x10FFF68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x10FFFB0", Offset = "0x10FFFB0", VA = "0x10FFFB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x10FFD40", Offset = "0x10FFD40", VA = "0x10FFD40")]
		[DebuggerHidden]
		public <UpdateSharingAnchorMessage>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x10FFD98", Offset = "0x10FFD98", VA = "0x10FFD98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x10FFD9C", Offset = "0x10FFD9C", VA = "0x10FFD9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x10FFF70", Offset = "0x10FFF70", VA = "0x10FFF70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E6")]
	[CompilerGenerated]
	private sealed class <TempPopUpMulti>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniPopUp <>4__this;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string waitMessage;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string doneMessageTitle;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string doneMessageId;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__2;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x1100170", Offset = "0x1100170", VA = "0x1100170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x11001B8", Offset = "0x11001B8", VA = "0x11001B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x10FFD68", Offset = "0x10FFD68", VA = "0x10FFD68")]
		[DebuggerHidden]
		public <TempPopUpMulti>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x10FFFB8", Offset = "0x10FFFB8", VA = "0x10FFFB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x10FFFBC", Offset = "0x10FFFBC", VA = "0x10FFFBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x1100178", Offset = "0x1100178", VA = "0x1100178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas canvas;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text txt;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image image;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite spriteWait;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite spriteDone;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextSelector textSelector;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool showingMRResult;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string customInfo;

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x10FFA74", Offset = "0x10FFA74", VA = "0x10FFA74")]
	public void Show(string waitMessage, string doneMessage, ModalPopUp.MiniPopUpType type, string customInfo, string doneMessageId)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x10FFD30", Offset = "0x10FFD30", VA = "0x10FFD30")]
	public void UpdateCustomInfo(string customInfo)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x10FFD38", Offset = "0x10FFD38", VA = "0x10FFD38")]
	public void StopMRUpdate()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x10FFC8C", Offset = "0x10FFC8C", VA = "0x10FFC8C")]
	[IteratorStateMachine(typeof(<UpdateSharingAnchorMessage>d__11))]
	private IEnumerator UpdateSharingAnchorMessage(string waitMessage, string doneMessage)
	{
		return null;
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x10FFBCC", Offset = "0x10FFBCC", VA = "0x10FFBCC")]
	[IteratorStateMachine(typeof(<TempPopUpMulti>d__12))]
	private IEnumerator TempPopUpMulti(string waitMessage, string doneMessageTitle, string doneMessageId)
	{
		return null;
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x10FFD90", Offset = "0x10FFD90", VA = "0x10FFD90")]
	public MiniPopUp()
	{
	}
}
[Token(Token = "0x20001E7")]
public class NetworkPaint : MonoBehaviour, IOnEventCallback
{
	[Token(Token = "0x20001E8")]
	[CompilerGenerated]
	private sealed class <HandlePooledDataDelayed>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkPaint <>4__this;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public object[] data;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x1102928", Offset = "0x1102928", VA = "0x1102928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x1102970", Offset = "0x1102970", VA = "0x1102970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x11018B0", Offset = "0x11018B0", VA = "0x11018B0")]
		[DebuggerHidden]
		public <HandlePooledDataDelayed>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x11027E4", Offset = "0x11027E4", VA = "0x11027E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x11027E8", Offset = "0x11027E8", VA = "0x11027E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1102930", Offset = "0x1102930", VA = "0x1102930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material highlightMat;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PaintData[] tilesData;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] tilesPooled;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int poolIndex;

	[Token(Token = "0x4000ADB")]
	private const int poolSize = 30;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string lastMat;

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x11001C0", Offset = "0x11001C0", VA = "0x11001C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1100278", Offset = "0x1100278", VA = "0x1100278")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x11002D0", Offset = "0x11002D0", VA = "0x11002D0")]
	private void MultiPaint(Vector3 pos, string mat, int mode, int id, int type)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1101234", Offset = "0x1101234", VA = "0x1101234", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x1101820", Offset = "0x1101820", VA = "0x1101820")]
	[IteratorStateMachine(typeof(<HandlePooledDataDelayed>d__10))]
	private IEnumerator HandlePooledDataDelayed(object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x11018D8", Offset = "0x11018D8", VA = "0x11018D8")]
	private void HandlePooledData(object[] data)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x1102700", Offset = "0x1102700", VA = "0x1102700")]
	private void TileMaterialLoaded(Material mat, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1100798", Offset = "0x1100798", VA = "0x1100798")]
	private void ProcessPaintData()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x1102564", Offset = "0x1102564", VA = "0x1102564")]
	private int FindTile(Vector3 position)
	{
		return default(int);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x110278C", Offset = "0x110278C", VA = "0x110278C")]
	public NetworkPaint()
	{
	}
}
[Token(Token = "0x20001E9")]
public class NetworkPlayerSpawner : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x20001EA")]
	[CompilerGenerated]
	private sealed class <RecorderRestart>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkPlayerSpawner <>4__this;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <chatSetting>5__2;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x1103D74", Offset = "0x1103D74", VA = "0x1103D74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x1103DBC", Offset = "0x1103DBC", VA = "0x1103DBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x1103AA4", Offset = "0x1103AA4", VA = "0x1103AA4")]
		[DebuggerHidden]
		public <RecorderRestart>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x1103ACC", Offset = "0x1103ACC", VA = "0x1103ACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1103AD0", Offset = "0x1103AD0", VA = "0x1103AD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1103D7C", Offset = "0x1103D7C", VA = "0x1103D7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject spawnedRigPrefab;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private new PhotonView photonView;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private XMLSender xmlsender;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ManagerInputVR mngInput;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ManagerRay mngRay;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ManagerTeleportation mngTp;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ManagerHandController mngHC;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject[] toActivate;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private OvrAvatarBodyTrackingBehavior bodyTrackingBehavior;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private OvrAvatarLipSyncBehavior lipSyncBehavior;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private OvrAvatarFacePoseBehavior faceTrackingBehavior;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private OvrAvatarEyePoseBehavior eyeTrackingBehavior;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject[] handAnims;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Recorder recorder;

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x1102978", Offset = "0x1102978", VA = "0x1102978")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x1102998", Offset = "0x1102998", VA = "0x1102998", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x11037E0", Offset = "0x11037E0", VA = "0x11037E0")]
	[IteratorStateMachine(typeof(<RecorderRestart>d__16))]
	private IEnumerator RecorderRestart()
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1103854", Offset = "0x1103854", VA = "0x1103854", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1103254", Offset = "0x1103254", VA = "0x1103254")]
	private void InitializeManagers()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1103A9C", Offset = "0x1103A9C", VA = "0x1103A9C")]
	public NetworkPlayerSpawner()
	{
	}
}
[Token(Token = "0x20001EB")]
public static class PhotonEventCodes
{
	[Token(Token = "0x4000AF3")]
	public const byte DisconnectAll = 1;

	[Token(Token = "0x4000AF4")]
	public const byte UploadDone = 2;

	[Token(Token = "0x4000AF5")]
	public const byte DisconnectPlayer = 3;

	[Token(Token = "0x4000AF6")]
	public const byte HandColors = 4;

	[Token(Token = "0x4000AF7")]
	public const byte FirstConnectionInfo = 5;

	[Token(Token = "0x4000AF8")]
	public const byte ReAskTShirtColor = 6;

	[Token(Token = "0x4000AF9")]
	public const byte ReSendColor = 7;

	[Token(Token = "0x4000AFA")]
	public const byte RemoveFromPocket = 8;

	[Token(Token = "0x4000AFB")]
	public const byte UpdateRoomsLight = 9;

	[Token(Token = "0x4000AFC")]
	public const byte PaintSurface = 10;

	[Token(Token = "0x4000AFD")]
	public const byte ForcePaint = 11;

	[Token(Token = "0x4000AFE")]
	public const byte UpdateWall = 12;

	[Token(Token = "0x4000AFF")]
	public const byte UpdateRoom = 13;

	[Token(Token = "0x4000B00")]
	public const byte ForceWallReCreation = 14;

	[Token(Token = "0x4000B01")]
	public const byte UpdateInteractionPermission = 15;

	[Token(Token = "0x4000B02")]
	public const byte TimeOfDayChanged = 16;
}
[Token(Token = "0x20001EC")]
public class PhotonInterface : MonoBehaviour
{
	[Token(Token = "0x20001ED")]
	[CompilerGenerated]
	private sealed class <VerifyAndDownload>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonInterface <>4__this;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string code;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <uri>5__2;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <webRequest>5__3;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <pages>5__4;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <codeOK>5__5;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <fileFullName>5__6;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string <uri2>5__7;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityWebRequest <webRequest2>5__8;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0x1104F4C", Offset = "0x1104F4C", VA = "0x1104F4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x1104F94", Offset = "0x1104F94", VA = "0x1104F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x110427C", Offset = "0x110427C", VA = "0x110427C")]
		[DebuggerHidden]
		public <VerifyAndDownload>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x11042D4", Offset = "0x11042D4", VA = "0x11042D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x11042D8", Offset = "0x11042D8", VA = "0x11042D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1104F54", Offset = "0x1104F54", VA = "0x1104F54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EE")]
	[CompilerGenerated]
	private sealed class <UploadXML>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonInterface <>4__this;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <uri>5__2;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <req>5__3;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0x11055A0", Offset = "0x11055A0", VA = "0x11055A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0x11055E8", Offset = "0x11055E8", VA = "0x11055E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x11042A4", Offset = "0x11042A4", VA = "0x11042A4")]
		[DebuggerHidden]
		public <UploadXML>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1104F9C", Offset = "0x1104F9C", VA = "0x1104F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1104FA0", Offset = "0x1104FA0", VA = "0x1104FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x11055A8", Offset = "0x11055A8", VA = "0x11055A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool connectAsHost;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string sessionName;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LoadingScreen loadingScreen;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MultiMenu Menu;

	[Token(Token = "0x4000B07")]
	private const string userAPI = "/api";

	[Token(Token = "0x4000B08")]
	private const string userS = "/user";

	[Token(Token = "0x4000B09")]
	private const string vrmultiS = "/vrmultisession";

	[Token(Token = "0x4000B0A")]
	private const string uploadS = "/upload";

	[Token(Token = "0x4000B0B")]
	private const string download = "/download/hd3dvr_multi_session";

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasVerifyStarted;

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x1103DC4", Offset = "0x1103DC4", VA = "0x1103DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x1103EA0", Offset = "0x1103EA0", VA = "0x1103EA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x1103EB8", Offset = "0x1103EB8", VA = "0x1103EB8")]
	private void RandomizeSessionName()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x1103F94", Offset = "0x1103F94", VA = "0x1103F94")]
	public void ConnectAsHostBtn()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x11040F8", Offset = "0x11040F8", VA = "0x11040F8")]
	public void ConnectAsClientBtn()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x11041EC", Offset = "0x11041EC", VA = "0x11041EC")]
	[IteratorStateMachine(typeof(<VerifyAndDownload>d__15))]
	private IEnumerator VerifyAndDownload(string code)
	{
		return null;
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1104084", Offset = "0x1104084", VA = "0x1104084")]
	[IteratorStateMachine(typeof(<UploadXML>d__16))]
	private IEnumerator UploadXML()
	{
		return null;
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x11042CC", Offset = "0x11042CC", VA = "0x11042CC")]
	public PhotonInterface()
	{
	}
}
[Token(Token = "0x20001EF")]
public class ReceivePocketEvent : MonoBehaviour, IOnEventCallback
{
	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PocketMenuLoader pocketMenuLoader;

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x11055F0", Offset = "0x11055F0", VA = "0x11055F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x1105648", Offset = "0x1105648", VA = "0x1105648")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x11056A0", Offset = "0x11056A0", VA = "0x11056A0", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x1105A04", Offset = "0x1105A04", VA = "0x1105A04")]
	public ReceivePocketEvent()
	{
	}
}
[Token(Token = "0x20001F0")]
public class SampleAvatarEntityMulti : SampleAvatarEntityBase
{
	[Token(Token = "0x20001F1")]
	public enum AssetSource
	{
		[Token(Token = "0x4000B38")]
		Zip,
		[Token(Token = "0x4000B39")]
		StreamingAssets
	}

	[Serializable]
	[Token(Token = "0x20001F2")]
	private struct AssetData
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AssetSource source;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string path;
	}

	[Token(Token = "0x20001F3")]
	private enum OverrideStreamLOD
	{
		[Token(Token = "0x4000B3D")]
		Default,
		[Token(Token = "0x4000B3E")]
		ForceHigh,
		[Token(Token = "0x4000B3F")]
		ForceMedium,
		[Token(Token = "0x4000B40")]
		ForceLow
	}

	[Token(Token = "0x20001F4")]
	[CompilerGenerated]
	private sealed class <Start>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityMulti <>4__this;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x110721C", Offset = "0x110721C", VA = "0x110721C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x1107264", Offset = "0x1107264", VA = "0x1107264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1105AD0", Offset = "0x1105AD0", VA = "0x1105AD0")]
		[DebuggerHidden]
		public <Start>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x110708C", Offset = "0x110708C", VA = "0x110708C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1107090", Offset = "0x1107090", VA = "0x1107090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1107224", Offset = "0x1107224", VA = "0x1107224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F5")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SampleAvatarEntityMulti <>4__this;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool getUserIdComplete;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x110726C", Offset = "0x110726C", VA = "0x110726C")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1107274", Offset = "0x1107274", VA = "0x1107274")]
		internal void <LoadCdnAvatar>b__0(Message<Oculus.Platform.Models.User> message)
		{
		}
	}

	[Token(Token = "0x20001F6")]
	[CompilerGenerated]
	private sealed class <LoadCdnAvatar>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityMulti <>4__this;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass26_0 <>8__1;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x11076EC", Offset = "0x11076EC", VA = "0x11076EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0x1107734", Offset = "0x1107734", VA = "0x1107734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1105B70", Offset = "0x1105B70", VA = "0x1105B70")]
		[DebuggerHidden]
		public <LoadCdnAvatar>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1107428", Offset = "0x1107428", VA = "0x1107428", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x110742C", Offset = "0x110742C", VA = "0x110742C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x11076F4", Offset = "0x11076F4", VA = "0x11076F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F7")]
	[CompilerGenerated]
	private sealed class <LoadUserAvatar>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityMulti <>4__this;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x11077B4", Offset = "0x11077B4", VA = "0x11077B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x11077FC", Offset = "0x11077FC", VA = "0x11077FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1105DBC", Offset = "0x1105DBC", VA = "0x1105DBC")]
		[DebuggerHidden]
		public <LoadUserAvatar>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x110773C", Offset = "0x110773C", VA = "0x110773C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1107740", Offset = "0x1107740", VA = "0x1107740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x11077BC", Offset = "0x11077BC", VA = "0x11077BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F9")]
	[CompilerGenerated]
	private sealed class <Retry_HasAvatarRequest>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityMulti <>4__this;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <continueRetries>5__2;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <retriesRemaining>5__3;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <hasFoundAvatar>5__4;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <requestComplete>5__5;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task<OvrAvatarManager.HasAvatarRequestResultCode> <hasAvatarRequest>5__6;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x1107C14", Offset = "0x1107C14", VA = "0x1107C14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x1107C5C", Offset = "0x1107C5C", VA = "0x1107C5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1106BE8", Offset = "0x1106BE8", VA = "0x1106BE8")]
		[DebuggerHidden]
		public <Retry_HasAvatarRequest>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1107940", Offset = "0x1107940", VA = "0x1107940", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x1107944", Offset = "0x1107944", VA = "0x1107944", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1107C1C", Offset = "0x1107C1C", VA = "0x1107C1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FA")]
	[CompilerGenerated]
	private sealed class <AutoRetry_LoadUser>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityMulti <>4__this;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool loadFallbackOnFailure;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <remainingAttempts>5__2;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <didLoadAvatar>5__3;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentPollingInterval>5__4;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0x1107DF8", Offset = "0x1107DF8", VA = "0x1107DF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0x1107E40", Offset = "0x1107E40", VA = "0x1107E40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1106C98", Offset = "0x1106C98", VA = "0x1106C98")]
		[DebuggerHidden]
		public <AutoRetry_LoadUser>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x1107C64", Offset = "0x1107C64", VA = "0x1107C64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1107C68", Offset = "0x1107C68", VA = "0x1107C68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x1107E00", Offset = "0x1107E00", VA = "0x1107E00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FB")]
	[CompilerGenerated]
	private sealed class <PollForAvatarChange>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SampleAvatarEntityMulti <>4__this;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSecondsRealtime <waitForPollInterval>5__2;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <continueChecking>5__3;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task<OvrAvatarManager.HasAvatarChangedRequestResultCode> <checkTask>5__4;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0x1108030", Offset = "0x1108030", VA = "0x1108030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x1108078", Offset = "0x1108078", VA = "0x1108078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1106D50", Offset = "0x1106D50", VA = "0x1106D50")]
		[DebuggerHidden]
		public <PollForAvatarChange>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1107E48", Offset = "0x1107E48", VA = "0x1107E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x1107E4C", Offset = "0x1107E4C", VA = "0x1107E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x1108038", Offset = "0x1108038", VA = "0x1108038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B1E")]
	private const string logScope = "sampleAvatar";

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[Header("Sample Avatar Entity")]
	[Tooltip("A version of the avatar with additional textures will be loaded to portray more accurate human materials (requiring shader support).")]
	[SerializeField]
	private bool _highQuality;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x271")]
	[Tooltip("Attempt to load the Avatar model file from the Content Delivery Network (CDN) based on a userID, as opposed to loading from disc.")]
	[SerializeField]
	private bool _loadUserFromCdn;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x272")]
	[Tooltip("Make initial requests for avatar and then defer loading until other avatars can make their requests.")]
	[SerializeField]
	private bool _deferLoading;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[Tooltip("Asset paths to load, and whether each asset comes from a preloaded zip file or directly from StreamingAssets. See Preset Asset settings on OvrAvatarManager for how this maps to the real file name.")]
	[Header("Assets")]
	[SerializeField]
	private List<AssetData> _assets;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[SerializeField]
	[Tooltip("Adds an underscore between the path and the postfix.")]
	private bool _underscorePostfix;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	[Tooltip("Filename Postfix (WARNING: Typically the postfix is Platform specific, such as \"_rift.glb\")")]
	private string _overridePostfix;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[Tooltip("Automatically retry LoadUser download request on failure")]
	[Header("CDN")]
	[SerializeField]
	private bool _autoCdnRetry;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
	[SerializeField]
	[Tooltip("Automatically check for avatar changes")]
	private bool _autoCheckChanges;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	[Tooltip("How frequently to check for avatar changes")]
	[SerializeField]
	[Range(4f, 320f)]
	private float _changeCheckInterval;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[Header("Debug Drawing")]
	[SerializeField]
	[Tooltip("Draw debug visualizations for avatar gaze targets")]
	private bool _debugDrawGazePos;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	[Tooltip("Color for gaze debug visualization")]
	[SerializeField]
	private Color _debugDrawGazePosColor;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	[Header("Sample Networking")]
	[Tooltip("Streaming quality override, default will not override")]
	[SerializeField]
	private OverrideStreamLOD _overrideStreamLod;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int DESAT_AMOUNT_ID;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int DESAT_TINT_ID;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int DESAT_LERP_ID;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Stopwatch _loadTime;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private PhotonView pv;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private bool receivedIdFromPhoton;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Color AVATAR_FADE_DEFAULT_COLOR;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly float AVATAR_FADE_DEFAULT_COLOR_BLEND;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly float AVATAR_FADE_DEFAULT_GRAYSCALE_BLEND;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	[SerializeField]
	[Range(0f, 1f)]
	[Header("Rendering")]
	private float shaderGrayToSolidColorBlend_;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[Range(0f, 1f)]
	[SerializeField]
	private float shaderDesatBlend_;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	[SerializeField]
	private Color shaderSolidColor_;

	[Token(Token = "0x1700013D")]
	private bool HasLocalAvatarConfigured
	{
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1105A0C", Offset = "0x1105A0C", VA = "0x1105A0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013E")]
	public float ShaderGrayToSolidColorBlend
	{
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1106778", Offset = "0x1106778", VA = "0x1106778")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1106780", Offset = "0x1106780", VA = "0x1106780")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public float ShaderDesatBlend
	{
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1106960", Offset = "0x1106960", VA = "0x1106960")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x1106968", Offset = "0x1106968", VA = "0x1106968")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public Color ShaderSolidColor
	{
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1106A14", Offset = "0x1106A14", VA = "0x1106A14")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1106A28", Offset = "0x1106A28", VA = "0x1106A28")]
		set
		{
		}
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x1105A5C", Offset = "0x1105A5C", VA = "0x1105A5C", Slot = "23")]
	[IteratorStateMachine(typeof(<Start>d__24))]
	protected virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x1105AF8", Offset = "0x1105AF8", VA = "0x1105AF8", Slot = "7")]
	protected override void OnDestroyCalled()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x1105AFC", Offset = "0x1105AFC", VA = "0x1105AFC")]
	[IteratorStateMachine(typeof(<LoadCdnAvatar>d__26))]
	private IEnumerator LoadCdnAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x1105B98", Offset = "0x1105B98", VA = "0x1105B98")]
	public void SetReceivedId(ulong oculusId)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x1105C34", Offset = "0x1105C34", VA = "0x1105C34")]
	public void LoadRemoteUserCdnAvatar(ulong userId)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x1105D1C", Offset = "0x1105D1C", VA = "0x1105D1C")]
	public void LoadLoggedInUserCdnAvatar()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x1105D48", Offset = "0x1105D48", VA = "0x1105D48")]
	[IteratorStateMachine(typeof(<LoadUserAvatar>d__30))]
	private IEnumerator LoadUserAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x1105DE4", Offset = "0x1105DE4", VA = "0x1105DE4")]
	private void LoadLocalAvatar()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x110619C", Offset = "0x110619C", VA = "0x110619C")]
	public void ReloadAvatarManually(string newAssetPaths, AssetSource newAssetSource)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x1106250", Offset = "0x1106250", VA = "0x1106250")]
	public void ReloadAvatarManually(string[] newAssetPaths, AssetSource newAssetSource)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x11064FC", Offset = "0x11064FC", VA = "0x11064FC")]
	public bool LoadPreset(int preset, string namePrefix = "")
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1106A8C", Offset = "0x1106A8C", VA = "0x1106A8C")]
	public void SetShaderDesat(float desatBlend, [Optional] float? grayToSolidBlend, [Optional] Color? solidColor)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x110682C", Offset = "0x110682C", VA = "0x110682C")]
	private void UpdateMaterialsWithDesatModifiers()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x1106B68", Offset = "0x1106B68", VA = "0x1106B68")]
	public Oculus.Avatar2.CAPI.ovrAvatar2JointType[] GetCriticalJoints()
	{
		return null;
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x1106B70", Offset = "0x1106B70", VA = "0x1106B70")]
	private void UserHasNoAvatarFallback()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x1106B74", Offset = "0x1106B74", VA = "0x1106B74")]
	[IteratorStateMachine(typeof(<Retry_HasAvatarRequest>d__54))]
	private IEnumerator Retry_HasAvatarRequest()
	{
		return null;
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x1106C10", Offset = "0x1106C10", VA = "0x1106C10")]
	[IteratorStateMachine(typeof(<AutoRetry_LoadUser>d__55))]
	private IEnumerator AutoRetry_LoadUser(bool loadFallbackOnFailure)
	{
		return null;
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x1105C6C", Offset = "0x1105C6C", VA = "0x1105C6C")]
	private void StartLoadTimeCounter()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x1106CC0", Offset = "0x1106CC0", VA = "0x1106CC0")]
	public long GetLoadTimeMs()
	{
		return default(long);
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x1106CDC", Offset = "0x1106CDC", VA = "0x1106CDC")]
	[IteratorStateMachine(typeof(<PollForAvatarChange>d__58))]
	private IEnumerator PollForAvatarChange()
	{
		return null;
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x1106D78", Offset = "0x1106D78", VA = "0x1106D78")]
	public SampleAvatarEntityMulti()
	{
	}
}
[Token(Token = "0x20001FC")]
public class SetAvatarMulti : SetAvatarBase
{
	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x1108080", Offset = "0x1108080", VA = "0x1108080")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x110812C", Offset = "0x110812C", VA = "0x110812C")]
	public SetAvatarMulti()
	{
	}
}
[Token(Token = "0x20001FD")]
[DisallowMultipleComponent]
public class SetClientObjects : MonoBehaviour
{
	[Token(Token = "0x20001FE")]
	[CompilerGenerated]
	private sealed class <SelectObjectLater>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetClientObjects <>4__this;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0x110AF3C", Offset = "0x110AF3C", VA = "0x110AF3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0x110AF84", Offset = "0x110AF84", VA = "0x110AF84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x110939C", Offset = "0x110939C", VA = "0x110939C")]
		[DebuggerHidden]
		public <SelectObjectLater>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x110ADAC", Offset = "0x110ADAC", VA = "0x110ADAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x110ADB0", Offset = "0x110ADB0", VA = "0x110ADB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x110AF44", Offset = "0x110AF44", VA = "0x110AF44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FF")]
	[CompilerGenerated]
	private sealed class <DeactivateLater>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetClientObjects <>4__this;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x110B218", Offset = "0x110B218", VA = "0x110B218", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x110B260", Offset = "0x110B260", VA = "0x110B260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1109D90", Offset = "0x1109D90", VA = "0x1109D90")]
		[DebuggerHidden]
		public <DeactivateLater>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x110AF8C", Offset = "0x110AF8C", VA = "0x110AF8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x110AF90", Offset = "0x110AF90", VA = "0x110AF90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x110B220", Offset = "0x110B220", VA = "0x110B220", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonView pv;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Disappear6DofObject disappear6DofObject;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isLight;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform spotLight;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool gotMat;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int viewIDSaved;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool resetTransformSaved;

	[Token(Token = "0x1700014D")]
	public bool IsLightObj
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x1108134", Offset = "0x1108134", VA = "0x1108134")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x110813C", Offset = "0x110813C", VA = "0x110813C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x11081FC", Offset = "0x11081FC", VA = "0x11081FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x1108304", Offset = "0x1108304", VA = "0x1108304")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x11083A0", Offset = "0x11083A0", VA = "0x11083A0")]
	[PunRPC]
	private void SetMaterial(string[] materials, bool initialized)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1108DA8", Offset = "0x1108DA8", VA = "0x1108DA8")]
	[PunRPC]
	private void SetParent(int viewID, bool resetTransform, bool keepLocalScale)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1109328", Offset = "0x1109328", VA = "0x1109328")]
	[IteratorStateMachine(typeof(<SelectObjectLater>d__15))]
	private IEnumerator SelectObjectLater()
	{
		return null;
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x11093C4", Offset = "0x11093C4", VA = "0x11093C4")]
	[PunRPC]
	private void SetOutline(bool activateOthers)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x11094CC", Offset = "0x11094CC", VA = "0x11094CC")]
	[PunRPC]
	private void PutInPocket()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x1109C78", Offset = "0x1109C78", VA = "0x1109C78")]
	public int GetRoomOfLight()
	{
		return default(int);
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1109C04", Offset = "0x1109C04", VA = "0x1109C04")]
	[IteratorStateMachine(typeof(<DeactivateLater>d__19))]
	private IEnumerator DeactivateLater()
	{
		return null;
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1109DB8", Offset = "0x1109DB8", VA = "0x1109DB8")]
	[PunRPC]
	private void DisplayFromPocket(bool enable, bool onlyRenderer)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x110A518", Offset = "0x110A518", VA = "0x110A518")]
	[PunRPC]
	private void InitializeObject(bool continueDuplication)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x110A658", Offset = "0x110A658", VA = "0x110A658")]
	[PunRPC]
	private void SetVariation(int variationNumber)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x110A7FC", Offset = "0x110A7FC", VA = "0x110A7FC")]
	private void LoadAllMaterials(string[] matNames, int variationNumber)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x110AB78", Offset = "0x110AB78", VA = "0x110AB78")]
	[PunRPC]
	private void AssignTempMat()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x110ABEC", Offset = "0x110ABEC", VA = "0x110ABEC")]
	[PunRPC]
	private void GiveMatBack()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x110ADA4", Offset = "0x110ADA4", VA = "0x110ADA4")]
	public SetClientObjects()
	{
	}
}
[Token(Token = "0x2000200")]
public class SetLightAvatarOther : MonoBehaviour
{
	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SampleAvatarEntityBase avatar;

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x110B268", Offset = "0x110B268", VA = "0x110B268")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x110B450", Offset = "0x110B450", VA = "0x110B450")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x110B5A4", Offset = "0x110B5A4", VA = "0x110B5A4")]
	public SetLightAvatarOther()
	{
	}
}
[Token(Token = "0x2000202")]
[DisallowMultipleComponent]
public class ToolsMultiDisplay : MonoBehaviour
{
	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView pv;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject toolRenderer;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Behaviour[] toEnable;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ToggleToolShader[] toggleToolShaders;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x110B63C", Offset = "0x110B63C", VA = "0x110B63C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x110B694", Offset = "0x110B694", VA = "0x110B694")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x110BA0C", Offset = "0x110BA0C", VA = "0x110BA0C")]
	[PunRPC]
	private void SetActiveTool(bool active)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x110BE9C", Offset = "0x110BE9C", VA = "0x110BE9C")]
	public ToolsMultiDisplay()
	{
	}
}
[Token(Token = "0x2000203")]
public class XMLSender : MonoBehaviour, IOnEventCallback
{
	[Token(Token = "0x2000204")]
	[CompilerGenerated]
	private sealed class <UpdateReflectionProbesLater>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x110C724", Offset = "0x110C724", VA = "0x110C724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x110C76C", Offset = "0x110C76C", VA = "0x110C76C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x110C3B8", Offset = "0x110C3B8", VA = "0x110C3B8")]
		[DebuggerHidden]
		public <UpdateReflectionProbesLater>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x110C538", Offset = "0x110C538", VA = "0x110C538", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x110C53C", Offset = "0x110C53C", VA = "0x110C53C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x110C72C", Offset = "0x110C72C", VA = "0x110C72C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool? loadingFromClient;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool isLoading;

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x110BEA4", Offset = "0x110BEA4", VA = "0x110BEA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x110BEFC", Offset = "0x110BEFC", VA = "0x110BEFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x110BFA8", Offset = "0x110BFA8", VA = "0x110BFA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x110C044", Offset = "0x110C044", VA = "0x110C044")]
	public void ProcessXMLAfterConnection()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x110C048", Offset = "0x110C048", VA = "0x110C048")]
	private void ProcessXMLAsync()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x110C358", Offset = "0x110C358", VA = "0x110C358")]
	[IteratorStateMachine(typeof(<UpdateReflectionProbesLater>d__7))]
	private IEnumerator UpdateReflectionProbesLater()
	{
		return null;
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x110C3E0", Offset = "0x110C3E0", VA = "0x110C3E0")]
	public bool IsLoadingFromClient()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x110C48C", Offset = "0x110C48C", VA = "0x110C48C", Slot = "4")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x110C530", Offset = "0x110C530", VA = "0x110C530")]
	public XMLSender()
	{
	}
}
[Token(Token = "0x2000205")]
public class InputSelectorCustom : MonoBehaviour
{
	[Token(Token = "0x2000206")]
	public enum Hand
	{
		[Token(Token = "0x4000B82")]
		Right,
		[Token(Token = "0x4000B83")]
		Left
	}

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hand hand;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInputModuleCustom m_InputModule;

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x110C774", Offset = "0x110C774", VA = "0x110C774")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x110C7EC", Offset = "0x110C7EC", VA = "0x110C7EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x110C894", Offset = "0x110C894", VA = "0x110C894")]
	private void SetActiveController(Hand hand)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x110C8D4", Offset = "0x110C8D4", VA = "0x110C8D4")]
	public InputSelectorCustom()
	{
	}
}
[Token(Token = "0x2000207")]
public class OVRScreenFade : MonoBehaviour
{
	[Token(Token = "0x2000208")]
	[CompilerGenerated]
	private sealed class <Fade>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRScreenFade <>4__this;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x110D48C", Offset = "0x110D48C", VA = "0x110D48C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0x110D4D4", Offset = "0x110D4D4", VA = "0x110D4D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x110D30C", Offset = "0x110D30C", VA = "0x110D30C")]
		[DebuggerHidden]
		public <Fade>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x110D360", Offset = "0x110D360", VA = "0x110D360", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x110D364", Offset = "0x110D364", VA = "0x110D364", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x110D494", Offset = "0x110D494", VA = "0x110D494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Fade duration")]
	public float fadeTime;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Screen color at maximum fade")]
	public Color fadeColor;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fadeOnStart;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int renderQueue;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float explicitFadeAlpha;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float animatedFadeAlpha;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float uiFadeAlpha;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer fadeRenderer;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshFilter fadeMesh;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material fadeMaterial;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isFading;

	[Token(Token = "0x17000154")]
	public static OVRScreenFade instance
	{
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x110C8DC", Offset = "0x110C8DC", VA = "0x110C8DC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x110C924", Offset = "0x110C924", VA = "0x110C924")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public float currentAlpha
	{
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x110C97C", Offset = "0x110C97C", VA = "0x110C97C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x110CA38", Offset = "0x110CA38", VA = "0x110CA38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x110CF08", Offset = "0x110CF08", VA = "0x110CF08")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x110CFB8", Offset = "0x110CFB8", VA = "0x110CFB8")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x110CFE0", Offset = "0x110CFE0", VA = "0x110CFE0")]
	private void OnLevelFinishedLoading(int level)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x110D008", Offset = "0x110D008", VA = "0x110D008")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x110D020", Offset = "0x110D020", VA = "0x110D020")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x110D1E0", Offset = "0x110D1E0", VA = "0x110D1E0")]
	public void SetUIFade(float level)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x110D304", Offset = "0x110D304", VA = "0x110D304")]
	public void SetExplicitFade(float level)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x110CF30", Offset = "0x110CF30", VA = "0x110CF30")]
	[IteratorStateMachine(typeof(<Fade>d__25))]
	private IEnumerator Fade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x110D1FC", Offset = "0x110D1FC", VA = "0x110D1FC")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x110D334", Offset = "0x110D334", VA = "0x110D334")]
	public OVRScreenFade()
	{
	}
}
[Token(Token = "0x2000209")]
[RequireComponent(typeof(Camera))]
public class OVRVignette : MonoBehaviour
{
	[Token(Token = "0x200020A")]
	public enum MeshComplexityLevel
	{
		[Token(Token = "0x4000BB6")]
		VerySimple,
		[Token(Token = "0x4000BB7")]
		Simple,
		[Token(Token = "0x4000BB8")]
		Normal,
		[Token(Token = "0x4000BB9")]
		Detailed,
		[Token(Token = "0x4000BBA")]
		VeryDetailed
	}

	[Token(Token = "0x200020B")]
	public enum FalloffType
	{
		[Token(Token = "0x4000BBC")]
		Linear,
		[Token(Token = "0x4000BBD")]
		Quadratic
	}

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string QUADRATIC_FALLOFF;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader VignetteShader;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Controls the number of triangles used for the vignette mesh. Normal is best for most purposes.")]
	[SerializeField]
	private MeshComplexityLevel MeshComplexity;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Controls how the falloff looks.")]
	[SerializeField]
	private FalloffType Falloff;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float VignetteFieldOfViewMin;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float VignetteFieldOfViewMax;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The Vertical FOV of the vignette")]
	public float VignetteFieldOfView;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The Aspect ratio of the vignette controls the Horizontal FOV. (Larger numbers are wider)")]
	public float VignetteAspectRatio;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("The width of the falloff for the vignette in degrees")]
	public float VignetteFalloffDegrees;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("The color of the vignette. Alpha value is ignored")]
	[ColorUsage(false)]
	public Color VignetteColor;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool _EditingSettings;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _ProgressiveVignetteSpeed;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _ProgressiveVignette;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera _Camera;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshFilter _OpaqueMeshFilter;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshFilter _TransparentMeshFilter;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshRenderer _OpaqueMeshRenderer;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MeshRenderer _TransparentMeshRenderer;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh _OpaqueMesh;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Mesh _TransparentMesh;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material _OpaqueMaterial;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material _TransparentMaterial;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _ShaderScaleAndOffset0Property;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int _ShaderScaleAndOffset1Property;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector4[] _TransparentScaleAndOffset0;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector4[] _TransparentScaleAndOffset1;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector4[] _OpaqueScaleAndOffset0;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector4[] _OpaqueScaleAndOffset1;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _OpaqueVignetteVisible;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool _TransparentVignetteVisible;

	[Token(Token = "0x17000158")]
	public static OVRVignette instance
	{
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x110D4DC", Offset = "0x110D4DC", VA = "0x110D4DC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x110D534", Offset = "0x110D534", VA = "0x110D534")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x110D59C", Offset = "0x110D59C", VA = "0x110D59C")]
	private int GetTriangleCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x110D5C0", Offset = "0x110D5C0", VA = "0x110D5C0")]
	private void BuildMeshes()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x110DC68", Offset = "0x110DC68", VA = "0x110DC68")]
	private void BuildMaterials()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x110E04C", Offset = "0x110E04C", VA = "0x110E04C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x110E0F0", Offset = "0x110E0F0", VA = "0x110E0F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x110E1D4", Offset = "0x110E1D4", VA = "0x110E1D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x110E5A8", Offset = "0x110E5A8", VA = "0x110E5A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x110E704", Offset = "0x110E704", VA = "0x110E704")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x110E830", Offset = "0x110E830", VA = "0x110E830")]
	private void GetTanFovAndOffsetForStereoEye(Camera.StereoscopicEye eye, out float tanFovX, out float tanFovY, out float offsetX, out float offsetY)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x110EA28", Offset = "0x110EA28", VA = "0x110EA28")]
	private void GetTanFovAndOffsetForMonoEye(out float tanFovX, out float tanFovY, out float offsetX, out float offsetY)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x110EAB4", Offset = "0x110EAB4", VA = "0x110EAB4")]
	private bool VisibilityTest(float scaleX, float scaleY, float offsetX, float offsetY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x110EAE8", Offset = "0x110EAE8", VA = "0x110EAE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x110EF2C", Offset = "0x110EF2C", VA = "0x110EF2C")]
	private void EnableRenderers()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x110E19C", Offset = "0x110E19C", VA = "0x110E19C")]
	private void DisableRenderers()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x110EF64", Offset = "0x110EF64", VA = "0x110EF64")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x110EF68", Offset = "0x110EF68", VA = "0x110EF68")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x110EF6C", Offset = "0x110EF6C", VA = "0x110EF6C")]
	private void OnBeginCameraRendering(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x110E6A4", Offset = "0x110E6A4", VA = "0x110E6A4")]
	public void SetVignetteValue(float value, bool toggle = true)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x110EFF8", Offset = "0x110EFF8", VA = "0x110EFF8")]
	public OVRVignette()
	{
	}
}
[Token(Token = "0x200020C")]
public class TeleportInputHandlerTouchCustom : TeleportInputHandlerHMD
{
	[Token(Token = "0x200020D")]
	public enum InputModes
	{
		[Token(Token = "0x4000BC8")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000BC9")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000BCA")]
		ThumbstickTeleport,
		[Token(Token = "0x4000BCB")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200020E")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000BCD")]
		A,
		[Token(Token = "0x4000BCE")]
		B,
		[Token(Token = "0x4000BCF")]
		LeftTrigger,
		[Token(Token = "0x4000BD0")]
		LeftThumbstick,
		[Token(Token = "0x4000BD1")]
		RightTrigger,
		[Token(Token = "0x4000BD2")]
		RightThumbstick,
		[Token(Token = "0x4000BD3")]
		X,
		[Token(Token = "0x4000BD4")]
		Y
	}

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x110F134", Offset = "0x110F134", VA = "0x110F134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x110F138", Offset = "0x110F138", VA = "0x110F138", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x110F59C", Offset = "0x110F59C", VA = "0x110F59C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x110F658", Offset = "0x110F658", VA = "0x110F658")]
	public TeleportInputHandlerTouchCustom()
	{
	}
}
[Token(Token = "0x200020F")]
public class TeleportTargetHandlerPhysicalCustom : TeleportTargetHandler
{
	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x110F750", Offset = "0x110F750", VA = "0x110F750", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x110F93C", Offset = "0x110F93C", VA = "0x110F93C")]
	public TeleportTargetHandlerPhysicalCustom()
	{
	}
}
[Token(Token = "0x2000210")]
public class TeleportTransitionBlinkCustom : TeleportTransitionBlink
{
	[Token(Token = "0x2000211")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutineCustom>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlinkCustom <>4__this;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <passthroughWasEnabled>5__2;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool <fadeOnTeleport>5__3;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0x110FD44", Offset = "0x110FD44", VA = "0x110FD44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0x110FD8C", Offset = "0x110FD8C", VA = "0x110FD8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x110F9D8", Offset = "0x110F9D8", VA = "0x110F9D8")]
		[DebuggerHidden]
		public <BlinkCoroutineCustom>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x110FA08", Offset = "0x110FA08", VA = "0x110FA08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x110FA0C", Offset = "0x110FA0C", VA = "0x110FA0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x110FD4C", Offset = "0x110FD4C", VA = "0x110FD4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private OVRPassthroughLayer ovrPassthroughLayer;

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x110F944", Offset = "0x110F944", VA = "0x110F944", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x110F964", Offset = "0x110F964", VA = "0x110F964")]
	[IteratorStateMachine(typeof(<BlinkCoroutineCustom>d__2))]
	protected IEnumerator BlinkCoroutineCustom()
	{
		return null;
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x110FA00", Offset = "0x110FA00", VA = "0x110FA00")]
	public TeleportTransitionBlinkCustom()
	{
	}
}
[Token(Token = "0x2000212")]
public class MRObject : MonoBehaviour, IAnchorStorageLocation
{
	[Token(Token = "0x2000213")]
	[CompilerGenerated]
	private sealed class <WaitForAnchorCreationToSaveGO>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRSpatialAnchor spatialAnchor;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x11102CC", Offset = "0x11102CC", VA = "0x11102CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x1110314", Offset = "0x1110314", VA = "0x1110314", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x11101F0", Offset = "0x11101F0", VA = "0x11101F0")]
		[DebuggerHidden]
		public <WaitForAnchorCreationToSaveGO>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x1110220", Offset = "0x1110220", VA = "0x1110220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1110224", Offset = "0x1110224", VA = "0x1110224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x11102D4", Offset = "0x11102D4", VA = "0x11102D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpatialAnchors spatialAnchors;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LightObject lightObject;

	[Token(Token = "0x1700015B")]
	public bool IsLocal
	{
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x110FD94", Offset = "0x110FD94", VA = "0x110FD94", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x110FD9C", Offset = "0x110FD9C", VA = "0x110FD9C", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x110FDA8", Offset = "0x110FDA8", VA = "0x110FDA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x110FEA8", Offset = "0x110FEA8", VA = "0x110FEA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x110FF14", Offset = "0x110FF14", VA = "0x110FF14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x110FF80", Offset = "0x110FF80", VA = "0x110FF80")]
	public void SaveSpatialAnchorGO(in OVRSpatialAnchor spatialAnchor)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x1110018", Offset = "0x1110018", VA = "0x1110018")]
	public void EraseAnchor()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x1110088", Offset = "0x1110088", VA = "0x1110088")]
	public void EraseAnchorAndObj()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x11100F8", Offset = "0x11100F8", VA = "0x11100F8")]
	public void OnEndActionOrVariationChanged(OVRSpatialAnchor spatialAnchor)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x110FFA4", Offset = "0x110FFA4", VA = "0x110FFA4")]
	[IteratorStateMachine(typeof(<WaitForAnchorCreationToSaveGO>d__13))]
	private IEnumerator WaitForAnchorCreationToSaveGO(OVRSpatialAnchor spatialAnchor)
	{
		return null;
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x1110218", Offset = "0x1110218", VA = "0x1110218")]
	public MRObject()
	{
	}
}
[Token(Token = "0x2000214")]
public class PassthroughHandler : MonoBehaviour
{
	[Token(Token = "0x2000216")]
	[CompilerGenerated]
	private sealed class <CoreBackScene>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughHandler <>4__this;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0x11117BC", Offset = "0x11117BC", VA = "0x11117BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x1111804", Offset = "0x1111804", VA = "0x1111804", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x111114C", Offset = "0x111114C", VA = "0x111114C")]
		[DebuggerHidden]
		public <CoreBackScene>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x1111484", Offset = "0x1111484", VA = "0x1111484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x1111488", Offset = "0x1111488", VA = "0x1111488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x11117C4", Offset = "0x11117C4", VA = "0x11117C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRPassthroughLayer ovrPassthroughLayer;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocomotionTeleport locomotionTeleport;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material defaultTransparent;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Camera rigCamera;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] undoRedoBtns;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] menusToDeactivate;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool switchedToMR;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DepthTextureMode depthTextureModeDefault;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 savedPosition;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 transparentRoomPosition;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject mixedRealityRoom;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WatchNavigator watchNavigator;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SpatialAnchors spatialAnchors;

	[Token(Token = "0x1700015E")]
	public static bool ReturnHomeAfterSharingAnchors
	{
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x1110684", Offset = "0x1110684", VA = "0x1110684")]
		[CompilerGenerated]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x11106DC", Offset = "0x11106DC", VA = "0x11106DC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public static bool IsInMR
	{
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x1110738", Offset = "0x1110738", VA = "0x1110738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400001B")]
	public static event Action OnBackToScene
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x111031C", Offset = "0x111031C", VA = "0x111031C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x11103F4", Offset = "0x11103F4", VA = "0x11103F4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event Action OnFinishedLoadingMR
	{
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x11104CC", Offset = "0x11104CC", VA = "0x11104CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x11105A8", Offset = "0x11105A8", VA = "0x11105A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1110790", Offset = "0x1110790", VA = "0x1110790")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1110830", Offset = "0x1110830", VA = "0x1110830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x11109C4", Offset = "0x11109C4", VA = "0x11109C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x1110A64", Offset = "0x1110A64", VA = "0x1110A64")]
	public void SetRoomTransparentBtn()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1110A6C", Offset = "0x1110A6C", VA = "0x1110A6C")]
	public void SetRoomTransparentBtn(bool returnHome)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x1111058", Offset = "0x1111058", VA = "0x1111058")]
	private void GoBackToScene()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x11110D8", Offset = "0x11110D8", VA = "0x11110D8")]
	[IteratorStateMachine(typeof(<CoreBackScene>d__31))]
	private IEnumerator CoreBackScene()
	{
		return null;
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x1110D40", Offset = "0x1110D40", VA = "0x1110D40")]
	private void TpToTransparentRoom()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x1111174", Offset = "0x1111174", VA = "0x1111174")]
	public PassthroughHandler()
	{
	}
}
[Token(Token = "0x2000218")]
public class HideOnPause : MonoBehaviour
{
	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Don't hide when the pause is triggered by opening the keyboard")]
	[SerializeField]
	private bool enableWhenKeyboardActive;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool wasActive;

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x111188C", Offset = "0x111188C", VA = "0x111188C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x1111B24", Offset = "0x1111B24", VA = "0x1111B24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x1111DBC", Offset = "0x1111DBC", VA = "0x1111DBC")]
	private void Paused()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x1111E7C", Offset = "0x1111E7C", VA = "0x1111E7C")]
	private void Unpaused()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x1111F24", Offset = "0x1111F24", VA = "0x1111F24")]
	public HideOnPause()
	{
	}
}
[Token(Token = "0x2000219")]
public class ManagerPause : MonoBehaviour
{
	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isKeyboardWasOpen;

	[Token(Token = "0x17000162")]
	public static bool IsPaused
	{
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x1111F2C", Offset = "0x1111F2C", VA = "0x1111F2C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x1111F84", Offset = "0x1111F84", VA = "0x1111F84")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event Action onPaused
	{
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x1111970", Offset = "0x1111970", VA = "0x1111970")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x1111C08", Offset = "0x1111C08", VA = "0x1111C08")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event Action onUnpaused
	{
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x1111A48", Offset = "0x1111A48", VA = "0x1111A48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x1111CE0", Offset = "0x1111CE0", VA = "0x1111CE0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x1111FE0", Offset = "0x1111FE0", VA = "0x1111FE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x11120CC", Offset = "0x11120CC", VA = "0x11120CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x1112B94", Offset = "0x1112B94", VA = "0x1112B94")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1112C80", Offset = "0x1112C80", VA = "0x1112C80")]
	private void Mounted()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x1112D00", Offset = "0x1112D00", VA = "0x1112D00")]
	private void Unmounted()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x1112128", Offset = "0x1112128", VA = "0x1112128")]
	private void ApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x1112D74", Offset = "0x1112D74", VA = "0x1112D74")]
	public ManagerPause()
	{
	}
}
[Token(Token = "0x200021B")]
public class ParticleSystemPausable : MonoBehaviour
{
	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x1112F38", Offset = "0x1112F38", VA = "0x1112F38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x111304C", Offset = "0x111304C", VA = "0x111304C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x1113130", Offset = "0x1113130", VA = "0x1113130")]
	private void OnPaused()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x11131A0", Offset = "0x11131A0", VA = "0x11131A0")]
	private void OnUnpaused()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1113210", Offset = "0x1113210", VA = "0x1113210")]
	public ParticleSystemPausable()
	{
	}
}
[Token(Token = "0x200021C")]
public class CollisionDetection : MonoBehaviour
{
	[Token(Token = "0x200021D")]
	public class ChildTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CollisionDetection group;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider m_collider;

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1114214", Offset = "0x1114214", VA = "0x1114214")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x111426C", Offset = "0x111426C", VA = "0x111426C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x1114588", Offset = "0x1114588", VA = "0x1114588")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x1114724", Offset = "0x1114724", VA = "0x1114724")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x11148F4", Offset = "0x11148F4", VA = "0x11148F4")]
		public ChildTrigger()
		{
		}
	}

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly string[] allTagsToCheck;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly string[] exceptionMaquetteView;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] ignoreTags;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> contactObjects;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Bounds colBounds;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Collider[] colliders;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool play;

	[Token(Token = "0x17000163")]
	public bool Collision
	{
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x1113218", Offset = "0x1113218", VA = "0x1113218")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000164")]
	public Collider[] GetColliders
	{
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x1113268", Offset = "0x1113268", VA = "0x1113268")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1113270", Offset = "0x1113270", VA = "0x1113270")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x111343C", Offset = "0x111343C", VA = "0x111343C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x11134B0", Offset = "0x11134B0", VA = "0x11134B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x111362C", Offset = "0x111362C", VA = "0x111362C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1113C40", Offset = "0x1113C40", VA = "0x1113C40")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x11132F8", Offset = "0x11132F8", VA = "0x11132F8")]
	public void CalculateBoundsAtStart()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x11134B4", Offset = "0x11134B4", VA = "0x11134B4")]
	public void AddChildTrigger()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x1113E88", Offset = "0x1113E88", VA = "0x1113E88")]
	public void ActualizeList()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x1113440", Offset = "0x1113440", VA = "0x1113440")]
	public void ClearList()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x1113A9C", Offset = "0x1113A9C", VA = "0x1113A9C")]
	private Collider[] ManualCollisionDetection()
	{
		return null;
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1113F54", Offset = "0x1113F54", VA = "0x1113F54")]
	public CollisionDetection()
	{
	}
}
[Token(Token = "0x200021E")]
public class WallSnapping : MonoBehaviour
{
	[Token(Token = "0x200021F")]
	private enum Method
	{
		[Token(Token = "0x4000C0A")]
		Working,
		[Token(Token = "0x4000C0B")]
		Test1,
		[Token(Token = "0x4000C0C")]
		Test2,
		[Token(Token = "0x4000C0D")]
		Test3,
		[Token(Token = "0x4000C0E")]
		FactorFromExtents
	}

	[Token(Token = "0x2000220")]
	[CompilerGenerated]
	private sealed class <AddForceCor>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WallSnapping <>4__this;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 force;

		[Token(Token = "0x17000165")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x11155EC", Offset = "0x11155EC", VA = "0x11155EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x1115634", Offset = "0x1115634", VA = "0x1115634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x1115320", Offset = "0x1115320", VA = "0x1115320")]
		[DebuggerHidden]
		public <AddForceCor>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1115408", Offset = "0x1115408", VA = "0x1115408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x111540C", Offset = "0x111540C", VA = "0x111540C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x11155F4", Offset = "0x11155F4", VA = "0x11155F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool toCheck;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color[] colors;

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x11148FC", Offset = "0x11148FC", VA = "0x11148FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x111491C", Offset = "0x111491C", VA = "0x111491C")]
	private void SnapToWall()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x111516C", Offset = "0x111516C", VA = "0x111516C")]
	[IteratorStateMachine(typeof(<AddForceCor>d__4))]
	private IEnumerator AddForceCor(Vector3 force)
	{
		return null;
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x1115204", Offset = "0x1115204", VA = "0x1115204")]
	private Vector3 GetFactorVector(Vector3 vector, Vector3 factor)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x1115238", Offset = "0x1115238", VA = "0x1115238")]
	private Vector3 CheckVectorValidity(Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x111515C", Offset = "0x111515C", VA = "0x111515C")]
	private Vector3 AllComponentsPositive(Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x1115348", Offset = "0x1115348", VA = "0x1115348")]
	public WallSnapping()
	{
	}
}
[Token(Token = "0x2000221")]
public class GameObjectsPool
{
	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> pool;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject goPool;

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x111563C", Offset = "0x111563C", VA = "0x111563C")]
	private static void Init()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x111578C", Offset = "0x111578C", VA = "0x111578C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x1115810", Offset = "0x1115810", VA = "0x1115810")]
	public static GameObject Get()
	{
		return null;
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x1115978", Offset = "0x1115978", VA = "0x1115978")]
	public static void Free(GameObject go)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x1115DA8", Offset = "0x1115DA8", VA = "0x1115DA8")]
	public static void DisplayCount()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x1116078", Offset = "0x1116078", VA = "0x1116078")]
	public GameObjectsPool()
	{
	}
}
[Token(Token = "0x2000222")]
public class MaterialsPool : MonoBehaviour
{
	[Token(Token = "0x2000223")]
	public struct SDelegateParams
	{
		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshRenderer renderer;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int matIndex;
	}

	[Token(Token = "0x2000224")]
	public delegate void MaterialLoadedDelegate(Material mat, SDelegateParams param);

	[Token(Token = "0x2000225")]
	private struct SLoadingMaterial
	{
		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AsyncOperationHandle<Material> handle;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialLoadedDelegate Delegate;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDelegateParams param;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name;
	}

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Queue<Material>> materialsDict;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, Material> staticMaterialsDict;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> matToPath;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static HashSet<int> instanceIDs;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<SLoadingMaterial> loadingMaterials;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Material DefaultFloor;

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x1116080", Offset = "0x1116080", VA = "0x1116080")]
	public static bool AreMaterialsLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x11160F0", Offset = "0x11160F0", VA = "0x11160F0")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x111634C", Offset = "0x111634C", VA = "0x111634C")]
	public static bool IsMaterialInPool(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x11163D0", Offset = "0x11163D0", VA = "0x11163D0")]
	public static void Get(string path, MaterialLoadedDelegate Delegate, SDelegateParams param, bool callInit = false)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x1116A7C", Offset = "0x1116A7C", VA = "0x1116A7C")]
	public static Material GetInstance(Material mat)
	{
		return null;
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1116DD0", Offset = "0x1116DD0", VA = "0x1116DD0")]
	public static Material GetStatic(string path)
	{
		return null;
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x1116808", Offset = "0x1116808", VA = "0x1116808")]
	private static void CallDelegate(Material mat, string name, MaterialLoadedDelegate Delegate, SDelegateParams param)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x1116ED0", Offset = "0x1116ED0", VA = "0x1116ED0")]
	public static void FreeMaterialsArray(Material[] materials, bool nullList = false)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x1116F5C", Offset = "0x1116F5C", VA = "0x1116F5C")]
	public static void Free(Material mat)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x11175AC", Offset = "0x11175AC", VA = "0x11175AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x111777C", Offset = "0x111777C", VA = "0x111777C")]
	public MaterialsPool()
	{
	}
}
[Token(Token = "0x2000226")]
public class MapDisplay : MonoBehaviour
{
	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform mapDisplayGO;

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x1117978", Offset = "0x1117978", VA = "0x1117978")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x1117A24", Offset = "0x1117A24", VA = "0x1117A24")]
	public void ZoomIn()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x1117A64", Offset = "0x1117A64", VA = "0x1117A64")]
	public void ZoomOut()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x1117AA4", Offset = "0x1117AA4", VA = "0x1117AA4")]
	public void DisplacementVector(int displacement)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x1117BD0", Offset = "0x1117BD0", VA = "0x1117BD0")]
	public MapDisplay()
	{
	}
}
[Token(Token = "0x2000227")]
public enum MapDisplacement
{
	[Token(Token = "0x4000C23")]
	Up,
	[Token(Token = "0x4000C24")]
	Down,
	[Token(Token = "0x4000C25")]
	Left,
	[Token(Token = "0x4000C26")]
	Right
}
[Token(Token = "0x2000228")]
public class MapGeneration : MonoBehaviour
{
	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool hasBeenComputed;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool transitionToTp;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool rotateMap;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 mapDimensions;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 deltaPosition;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 windowSpriteDimensions;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 stairsSpriteDimensions;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RectTransform player;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RectTransform uiHolder;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float minX;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float maxX;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float minZ;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float maxZ;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float conversionFactor;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject linePrefab;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject playerPoint;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject doorPrefab;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject windowPrefab;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject stairsPrefab;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject upButton;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject downButton;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RaycastHit handRayCast;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<float> floorHeights;

	[Token(Token = "0x4000C3E")]
	private const int deltaFromBorders = 20;

	[Token(Token = "0x4000C3F")]
	private const float xMapDelta = -0.02f;

	[Token(Token = "0x4000C40")]
	private const float yMapDelta = 0.11f;

	[Token(Token = "0x4000C41")]
	private const float maxXMapRW = 0.4f;

	[Token(Token = "0x4000C42")]
	private const float maxYMapRW = 0.225f;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float lastHeightComputed;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float lastTimeComputed;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Vector2 tpPosition;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector2 mapPivot;

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x1117BD8", Offset = "0x1117BD8", VA = "0x1117BD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x1117F60", Offset = "0x1117F60", VA = "0x1117F60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x11195C4", Offset = "0x11195C4", VA = "0x11195C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x11199B4", Offset = "0x11199B4", VA = "0x11199B4")]
	public void SetTeleportation(Vector3 hitPoint)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1119C4C", Offset = "0x1119C4C", VA = "0x1119C4C")]
	private bool isPointInRoom(Vector2 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x1119EB0", Offset = "0x1119EB0", VA = "0x1119EB0")]
	private bool isPointInWall(Vector2 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1119A88", Offset = "0x1119A88", VA = "0x1119A88")]
	public void TeleportFromMap()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x111A3F4", Offset = "0x111A3F4", VA = "0x111A3F4")]
	private Vector2 RWPosition(Vector2 anchoredPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1119BC0", Offset = "0x1119BC0", VA = "0x1119BC0")]
	private Vector2 TransformToRect(Vector3 localPositionImpact)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1118678", Offset = "0x1118678", VA = "0x1118678")]
	private void ComputeNewMap(out int playerFloorIndex)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x1119374", Offset = "0x1119374", VA = "0x1119374")]
	private void DisplayArrows(int thisFloorIndex)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x1118540", Offset = "0x1118540", VA = "0x1118540")]
	private int FindClosestFloorIndexToPlayer()
	{
		return default(int);
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x111B6D0", Offset = "0x111B6D0", VA = "0x111B6D0")]
	private void InstantiateStairsUI()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x111A628", Offset = "0x111A628", VA = "0x111A628")]
	private void InitPrefab(List<WindowsCoord> windowsCoord, Wall wall, float angle, GameObject hole, GameObject prefab)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x111AE18", Offset = "0x111AE18", VA = "0x111AE18")]
	private bool IsAWindowInWall(Vector2 wallStart, Vector2 wallEnd, List<WindowsCoord> windowsCoords, out List<Vector2> windows)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x111BE34", Offset = "0x111BE34", VA = "0x111BE34")]
	private void SortVectorByDistance(ref List<Vector2> windows)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x111BC3C", Offset = "0x111BC3C", VA = "0x111BC3C")]
	private void SortByDistance(ref List<WindowsCoord> windowsCoords, Vector2 startWall)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x111A420", Offset = "0x111A420", VA = "0x111A420")]
	private void SearchForMinMaxCoordinates()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x111BFFC", Offset = "0x111BFFC", VA = "0x111BFFC")]
	public void DisplayOtherFloor(int movement)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x111C434", Offset = "0x111C434", VA = "0x111C434")]
	public MapGeneration()
	{
	}
}
[Token(Token = "0x2000229")]
public struct WindowsCoord
{
	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 start;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2 end;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float altitude;

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xE8DA0C", Offset = "0xE8DA0C", VA = "0xE8DA0C")]
	public WindowsCoord(Vector2 _start, Vector2 _end, float _altitude)
	{
	}
}
[Serializable]
[Token(Token = "0x200022A")]
public class NameToTooltip
{
	[Token(Token = "0x17000167")]
	public string Name
	{
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xE8DA1C", Offset = "0xE8DA1C", VA = "0xE8DA1C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xE8DA24", Offset = "0xE8DA24", VA = "0xE8DA24")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000168")]
	public GameObject Tooltip
	{
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xE8DA2C", Offset = "0xE8DA2C", VA = "0xE8DA2C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xE8DA34", Offset = "0xE8DA34", VA = "0xE8DA34")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000169")]
	public GameObject OriginalGO
	{
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xE8DA3C", Offset = "0xE8DA3C", VA = "0xE8DA3C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xE8DA44", Offset = "0xE8DA44", VA = "0xE8DA44")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700016A")]
	public global::Tooltip.Tooltip TooltipsS
	{
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xE8DA4C", Offset = "0xE8DA4C", VA = "0xE8DA4C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xE8DA54", Offset = "0xE8DA54", VA = "0xE8DA54")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xE8DA5C", Offset = "0xE8DA5C", VA = "0xE8DA5C")]
	public NameToTooltip()
	{
	}
}
[Token(Token = "0x200022B")]
public class PipetteDuplication : MonoBehaviour
{
	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool toDuplicate;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool pipetteActiveDominant;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool pipetteActiveNonDominant;

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xE8DA64", Offset = "0xE8DA64", VA = "0xE8DA64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xE8DA6C", Offset = "0xE8DA6C", VA = "0xE8DA6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xE8DED8", Offset = "0xE8DED8", VA = "0xE8DED8")]
	public PipetteDuplication()
	{
	}
}
[Token(Token = "0x200022C")]
public class Radial3DInit : MonoBehaviour
{
	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mvtMat;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NameToTooltip[] nameToTooltipsFake;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, TooltipElements> nameToTooltip;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material AncreMat;

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xE8DEE0", Offset = "0xE8DEE0", VA = "0xE8DEE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xE8E09C", Offset = "0xE8E09C", VA = "0xE8E09C")]
	public void ToggleTooltip(string name, bool toActivate)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xE8E128", Offset = "0xE8E128", VA = "0xE8E128")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xE8E288", Offset = "0xE8E288", VA = "0xE8E288")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xE8E57C", Offset = "0xE8E57C", VA = "0xE8E57C")]
	public Radial3DInit()
	{
	}
}
[Token(Token = "0x200022D")]
public class RadialFeedback : MonoBehaviour
{
	[Token(Token = "0x200022E")]
	[CompilerGenerated]
	private sealed class <GiveMatBackLater>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cakeslice.Outline outline;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RadialFeedback <>4__this;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0xE8FA4C", Offset = "0xE8FA4C", VA = "0xE8FA4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0xE8FA94", Offset = "0xE8FA94", VA = "0xE8FA94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xE8F580", Offset = "0xE8F580", VA = "0xE8F580")]
		[DebuggerHidden]
		public <GiveMatBackLater>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xE8F910", Offset = "0xE8F910", VA = "0xE8F910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xE8F914", Offset = "0xE8F914", VA = "0xE8F914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xE8FA54", Offset = "0xE8FA54", VA = "0xE8FA54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly string[] ignoreTags;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ManagerTools.HandHolding hand;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRRayInteractor radialToolRay;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject previousPointedObject;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool toolToReset;

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xE8E584", Offset = "0xE8E584", VA = "0xE8E584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xE8E624", Offset = "0xE8E624", VA = "0xE8E624")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xE8E744", Offset = "0xE8E744", VA = "0xE8E744")]
	public void ChangeHand(ManagerTools.HandHolding newHand)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xE8E74C", Offset = "0xE8E74C", VA = "0xE8E74C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xE8EED0", Offset = "0xE8EED0", VA = "0xE8EED0")]
	private void CheckToCancelPreviousObject()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xE8EF78", Offset = "0xE8EF78", VA = "0xE8EF78")]
	private void OutlinePointedObject(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xE8F2F0", Offset = "0xE8F2F0", VA = "0xE8F2F0")]
	private bool CancelPreviousPointedObject(bool forceCancel = false, bool previousSelectedToNull = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xE8F4F0", Offset = "0xE8F4F0", VA = "0xE8F4F0")]
	[IteratorStateMachine(typeof(<GiveMatBackLater>d__12))]
	private IEnumerator GiveMatBackLater(cakeslice.Outline outline)
	{
		return null;
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xE8F5A8", Offset = "0xE8F5A8", VA = "0xE8F5A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xE8F66C", Offset = "0xE8F66C", VA = "0xE8F66C")]
	public RadialFeedback()
	{
	}
}
[Token(Token = "0x200022F")]
public class RadialMenu3D : MonoBehaviour
{
	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject collidedObject;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Material[][] toolsMaterials;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mvtMat;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Dictionary<string, int> toolsNumber;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Radial3DInit radial3DInit;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpatialAnchors spatialAnchors;

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xE8FA9C", Offset = "0xE8FA9C", VA = "0xE8FA9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xE8FC7C", Offset = "0xE8FC7C", VA = "0xE8FC7C")]
	private void SetupToolsMaterials()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xE9029C", Offset = "0xE9029C", VA = "0xE9029C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xE903F8", Offset = "0xE903F8", VA = "0xE903F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xE906E4", Offset = "0xE906E4", VA = "0xE906E4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xE90994", Offset = "0xE90994", VA = "0xE90994")]
	public RadialMenu3D()
	{
	}
}
[Token(Token = "0x2000230")]
public class StairsSpriteHandler : MonoBehaviour
{
	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stairSprite;

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xE90B98", Offset = "0xE90B98", VA = "0xE90B98")]
	public StairsSpriteHandler()
	{
	}
}
[Token(Token = "0x2000231")]
public class ToggleToolShader : MonoBehaviour
{
	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer thisRenderer;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float duration;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float animationTime;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float startValue;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float finalValue;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material uber;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material appear;

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xE90BA0", Offset = "0xE90BA0", VA = "0xE90BA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xE90C60", Offset = "0xE90C60", VA = "0xE90C60")]
	public void Appear()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xE90D44", Offset = "0xE90D44", VA = "0xE90D44")]
	public void Disappear()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xE90F7C", Offset = "0xE90F7C", VA = "0xE90F7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xE90F80", Offset = "0xE90F80", VA = "0xE90F80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xE91098", Offset = "0xE91098", VA = "0xE91098")]
	public ToggleToolShader()
	{
	}
}
[Token(Token = "0x2000232")]
public class ToolRayMR : MonoBehaviour
{
	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private XRInteractorLineVisual line;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GradientAlphaKey[] alphaGradientMR;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GradientAlphaKey[] normalAlphaGradient;

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xE910F4", Offset = "0xE910F4", VA = "0xE910F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xE911A8", Offset = "0xE911A8", VA = "0xE911A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xE912B4", Offset = "0xE912B4", VA = "0xE912B4")]
	public ToolRayMR()
	{
	}
}
[Token(Token = "0x2000233")]
public class TooltipElements
{
	[Token(Token = "0x1700016D")]
	public global::Tooltip.Tooltip Tooltip
	{
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xE91318", Offset = "0xE91318", VA = "0xE91318")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xE91320", Offset = "0xE91320", VA = "0xE91320")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public GameObject OriginalGO
	{
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xE91328", Offset = "0xE91328", VA = "0xE91328")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xE91330", Offset = "0xE91330", VA = "0xE91330")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xE8E058", Offset = "0xE8E058", VA = "0xE8E058")]
	public TooltipElements(global::Tooltip.Tooltip tooltip, GameObject originalGO)
	{
	}
}
[Token(Token = "0x2000234")]
public class Building
{
	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly HashSet<Room> _rooms;

	[Token(Token = "0x1700016F")]
	public Vector3 Spawn
	{
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xE91338", Offset = "0xE91338", VA = "0xE91338")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xE91344", Offset = "0xE91344", VA = "0xE91344")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xE91350", Offset = "0xE91350", VA = "0xE91350")]
	public Building()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xE913D8", Offset = "0xE913D8", VA = "0xE913D8")]
	public Building(Wall wall)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xE91488", Offset = "0xE91488", VA = "0xE91488")]
	public void AddRoom(Room room)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xE914F0", Offset = "0xE914F0", VA = "0xE914F0")]
	public void AddRoomsOfWall(Wall wall)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xE91524", Offset = "0xE91524", VA = "0xE91524")]
	public void AddRoomsFromOtherBuilding(Building otherBuilding)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xE91580", Offset = "0xE91580", VA = "0xE91580")]
	public bool ContainsRoom(Room room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xE915D8", Offset = "0xE915D8", VA = "0xE915D8")]
	public bool ContainsRoomsOfWall(Wall wall)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xE9165C", Offset = "0xE9165C", VA = "0xE9165C")]
	public bool ContainsRoomsOfOtherBuilding(Building otherBuilding)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xE917D8", Offset = "0xE917D8", VA = "0xE917D8")]
	public bool IntersectsWith(Building otherBuilding)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xE91A9C", Offset = "0xE91A9C", VA = "0xE91A9C")]
	public bool IsPointInThisBuilding(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xE91C44", Offset = "0xE91C44", VA = "0xE91C44")]
	public void ComputeSpawnPoint()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xE930BC", Offset = "0xE930BC", VA = "0xE930BC")]
	private void FSP_FillObject(GameObject root, ref sbyte[,] grid, Queue<Vector2Int> queue, AABBf buildingAABB, float cellSize)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xE934A0", Offset = "0xE934A0", VA = "0xE934A0")]
	private bool PosValid(Vector2Int p, Vector2Int gridSize)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000235")]
public class BuildingTeleportation : MonoBehaviour
{
	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Building> buildings;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int indexPlayer;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool wasArchiInstanceNull;

	[Token(Token = "0x17000170")]
	public int LastNumberOfBuildingsComputed
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xE934D0", Offset = "0xE934D0", VA = "0xE934D0")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xE934D8", Offset = "0xE934D8", VA = "0xE934D8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xE934E0", Offset = "0xE934E0", VA = "0xE934E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xE93668", Offset = "0xE93668", VA = "0xE93668")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xE93FE4", Offset = "0xE93FE4", VA = "0xE93FE4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xE9376C", Offset = "0xE9376C", VA = "0xE9376C")]
	[ContextMenu("ListBuildings")]
	public void ListBuildings()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xE94110", Offset = "0xE94110", VA = "0xE94110")]
	private void TeleportToOtherBuilding()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xE94208", Offset = "0xE94208", VA = "0xE94208")]
	public BuildingTeleportation()
	{
	}
}
[Token(Token = "0x2000237")]
public class ImportProject
{
	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LoadXMLData loadXMLData;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ImportProject _instance;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CultureInfo culture;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> objects;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> doorsAndWindows;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> lights;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Wall> invisibleWalls;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isStairs;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private AABBf projectAABB;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 projectCenter;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DataBaseManager DBM;

	[Token(Token = "0x17000171")]
	public static ImportProject instance
	{
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xE94518", Offset = "0xE94518", VA = "0xE94518")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public int ProjectID
	{
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xE946AC", Offset = "0xE946AC", VA = "0xE946AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xE94700", Offset = "0xE94700", VA = "0xE94700")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public string Username
	{
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xE94758", Offset = "0xE94758", VA = "0xE94758")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xE947AC", Offset = "0xE947AC", VA = "0xE947AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public string SelectedXml
	{
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xE94808", Offset = "0xE94808", VA = "0xE94808")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xE9485C", Offset = "0xE9485C", VA = "0xE9485C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xE948B8", Offset = "0xE948B8", VA = "0xE948B8")]
	public void LoadXml(string fileName, bool loadAsClient = false)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xE9B0D4", Offset = "0xE9B0D4", VA = "0xE9B0D4")]
	private void RemoveObjectsFromOutsideRooms()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xE9B65C", Offset = "0xE9B65C", VA = "0xE9B65C")]
	private void RemoveUnwantedLights()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xE9C058", Offset = "0xE9C058", VA = "0xE9C058")]
	private void RemoveAutomaticLights()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xE9C884", Offset = "0xE9C884", VA = "0xE9C884")]
	private void RemoveDuplicateNormalLights()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xE9CEC4", Offset = "0xE9CEC4", VA = "0xE9CEC4")]
	private void RemoveObjectsOutsideRooms()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xE9EA14", Offset = "0xE9EA14", VA = "0xE9EA14")]
	private void SplitWalls(ref Wall oldWall, ref Wall wall)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xE9F95C", Offset = "0xE9F95C", VA = "0xE9F95C")]
	private Wall AddWallToList(Wall wall, ref List<Wall> list)
	{
		return null;
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xE96618", Offset = "0xE96618", VA = "0xE96618")]
	private void LoadAABB(XElement elem, ref Bounds aabb)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xE9FEC4", Offset = "0xE9FEC4", VA = "0xE9FEC4")]
	private void LoadTransform(XElement input, ref Vector3 pos, ref Quaternion rot, ref Vector3 scale)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xE9FBC8", Offset = "0xE9FBC8", VA = "0xE9FBC8")]
	private Vector3 LoadPosition(XElement input)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xEA0580", Offset = "0xEA0580", VA = "0xEA0580")]
	private Vector2 LoadPosition2D(XAttribute input)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xE98FC0", Offset = "0xE98FC0", VA = "0xE98FC0")]
	private void LoadLights(XElement elem)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xEA13FC", Offset = "0xEA13FC", VA = "0xEA13FC")]
	private string GetMateriaID(string hd3did)
	{
		return null;
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xEA151C", Offset = "0xEA151C", VA = "0xEA151C")]
	private void UpdateWallMaterial(Room room, Wall oldWall, Wall wall)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xE969E0", Offset = "0xE969E0", VA = "0xE969E0")]
	private void LoadObjects(XElement elem, bool furnishing)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xE999E0", Offset = "0xE999E0", VA = "0xE999E0")]
	private void LoadRooms(XElement elem)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xE95C30", Offset = "0xE95C30", VA = "0xE95C30")]
	private void FakeLoadRooms(XElement _elem)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xE9AD14", Offset = "0xE9AD14", VA = "0xE9AD14")]
	private void LoadFreeWalls(XElement elem)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xE962C8", Offset = "0xE962C8", VA = "0xE962C8")]
	private void FakeLoadFreeWalls(XElement _elem)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xEA21FC", Offset = "0xEA21FC", VA = "0xEA21FC")]
	public void CheckSplitRoom(Wall wall)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xEA1718", Offset = "0xEA1718", VA = "0xEA1718")]
	private void PreLoadWall(XElement _wallElem, out Vector2 _start, out Vector2 _end, out float _altitude, out float _height, out bool _isVisible)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xEA1A60", Offset = "0xEA1A60", VA = "0xEA1A60")]
	private Wall LoadWall(XElement wallElem)
	{
		return null;
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xE946A4", Offset = "0xE946A4", VA = "0xE946A4")]
	public ImportProject()
	{
	}
}
[Token(Token = "0x2000238")]
public class Nodes
{
	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<Vector3, List<Wall>> nodes;

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xEA3450", Offset = "0xEA3450", VA = "0xEA3450")]
	static Nodes()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xEA3454", Offset = "0xEA3454", VA = "0xEA3454")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xEA34FC", Offset = "0xEA34FC", VA = "0xEA34FC")]
	public static void UpdateNodes()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xE9EFD8", Offset = "0xE9EFD8", VA = "0xE9EFD8")]
	public static void AddWall(Wall wall)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xEA3824", Offset = "0xEA3824", VA = "0xEA3824")]
	public static void RemoveWall(Wall wall)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xEA27D4", Offset = "0xEA27D4", VA = "0xEA27D4")]
	public static bool WalkRightHand(Vector3 currentNode, float currentAngle, Vector3 endNode, ref Stack<Wall> path, ref float totalAngle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xEA414C", Offset = "0xEA414C", VA = "0xEA414C")]
	public Nodes()
	{
	}
}
[Token(Token = "0x2000239")]
public class ObjectMaterial : MonoBehaviour
{
	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<List<string>> lastAtlas;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<List<string>> materials;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Shader uber;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MeshRenderer> renderers;

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xEA4154", Offset = "0xEA4154", VA = "0xEA4154")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xEA479C", Offset = "0xEA479C", VA = "0xEA479C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xEA4220", Offset = "0xEA4220", VA = "0xEA4220")]
	public void ReInitRenderers()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xEA47A0", Offset = "0xEA47A0", VA = "0xEA47A0")]
	private int GetPriority(string matName)
	{
		return default(int);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xEA4874", Offset = "0xEA4874", VA = "0xEA4874")]
	public static string GetMaterialFolder(string materialName)
	{
		return null;
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xEA4934", Offset = "0xEA4934", VA = "0xEA4934")]
	public void SetFirstRendererMaterials(List<string> newMat)
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xEA5294", Offset = "0xEA5294", VA = "0xEA5294")]
	public void SetAllMaterials(List<List<string>> newMats)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xE9E8BC", Offset = "0xE9E8BC", VA = "0xE9E8BC")]
	public void SetLastAtlas()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xEA53C0", Offset = "0xEA53C0", VA = "0xEA53C0")]
	public void SetStaticMaterial(string newMat, int renderQueue = 0)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xEA4DB0", Offset = "0xEA4DB0", VA = "0xEA4DB0")]
	private void SetRendererMaterials(MeshRenderer rend, List<string> newMat, List<string> currentMats, List<string> atlas, bool force)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xEA55E0", Offset = "0xEA55E0", VA = "0xEA55E0")]
	private void SetRendererStaticMaterial(MeshRenderer rend, string newMat, List<string> currentMats, List<string> atlas, int renderQueue = 0)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xEA58E4", Offset = "0xEA58E4", VA = "0xEA58E4")]
	private void MaterialLoaded(Material mat, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xEA5B14", Offset = "0xEA5B14", VA = "0xEA5B14")]
	public void InstantiateMaterials()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xEA5FDC", Offset = "0xEA5FDC", VA = "0xEA5FDC")]
	private List<string> GetRendererMats(MeshRenderer rend)
	{
		return null;
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xEA4AE0", Offset = "0xEA4AE0", VA = "0xEA4AE0")]
	private void InitMaterials()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xEA4C48", Offset = "0xEA4C48", VA = "0xEA4C48")]
	private void InitAtlas()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xEA6284", Offset = "0xEA6284", VA = "0xEA6284")]
	public List<List<string>> GetMaterials()
	{
		return null;
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xEA629C", Offset = "0xEA629C", VA = "0xEA629C")]
	public List<List<string>> GetLastAtlas()
	{
		return null;
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xEA62B4", Offset = "0xEA62B4", VA = "0xEA62B4")]
	public void UpdateShaderTime(float t)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xEA64A0", Offset = "0xEA64A0", VA = "0xEA64A0")]
	public ObjectMaterial()
	{
	}
}
[Token(Token = "0x200023A")]
public class Objects
{
	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] carpetIgnoreTags;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DataBaseManager DBM;

	[Token(Token = "0x4000C8B")]
	private const float threshold = 0.4f;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, List<ShadowCastingMode>> originalShadows;

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xEA0788", Offset = "0xEA0788", VA = "0xEA0788")]
	public static void InitializeObject(GameObject obj, out Vector3 originalPivot)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xEA6710", Offset = "0xEA6710", VA = "0xEA6710")]
	public static void SetStencil(GameObject obj, bool setDecal, bool isAvatar = false)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xE9D44C", Offset = "0xE9D44C", VA = "0xE9D44C")]
	public static void InstantiateMaterials(GameObject obj)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xEA64A8", Offset = "0xEA64A8", VA = "0xEA64A8")]
	private static void AddLightObjectToDoorChildren(GameObject obj)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xEA65F4", Offset = "0xEA65F4", VA = "0xEA65F4")]
	private static void AddInteractableToRigidbody(GameObject obj, Rigidbody rb)
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xEA69A4", Offset = "0xEA69A4", VA = "0xEA69A4")]
	public static Vector3 GetObjectAxis(GameObject obj)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xEA69FC", Offset = "0xEA69FC", VA = "0xEA69FC")]
	public static AABBf GetObjectAABB(GameObject obj, Vector3 XZAxis)
	{
		return default(AABBf);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xEA6C68", Offset = "0xEA6C68", VA = "0xEA6C68")]
	public static void UpdateLighting(List<GameObject> _list)
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xEA6E70", Offset = "0xEA6E70", VA = "0xEA6E70")]
	public static void ToggleObjectsDisplayFromStorey()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xEA8078", Offset = "0xEA8078", VA = "0xEA8078")]
	public static void ToggleObjectFromStorey(GameObject obj, int futureStorey)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xEA8358", Offset = "0xEA8358", VA = "0xEA8358")]
	public static void ToggleObject(GameObject obj, bool display, bool turnOnShadows)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xE9DEEC", Offset = "0xE9DEEC", VA = "0xE9DEEC")]
	public static void UpdateShadows()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xEA8A08", Offset = "0xEA8A08", VA = "0xEA8A08")]
	public static void UpdateObjectShadows(GameObject obj)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xEA87D4", Offset = "0xEA87D4", VA = "0xEA87D4")]
	public static void TurnShadowOff(GameObject obj)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xEA8490", Offset = "0xEA8490", VA = "0xEA8490")]
	public static void TurnShadowOn(GameObject obj)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xEA9134", Offset = "0xEA9134", VA = "0xEA9134")]
	public Objects()
	{
	}
}
[Token(Token = "0x200023C")]
public class RenderQueues
{
	[Token(Token = "0x4000C8E")]
	public const int avatar = 1950;

	[Token(Token = "0x4000C8F")]
	public const int downFloor = 1999;

	[Token(Token = "0x4000C90")]
	public const int wall = 2000;

	[Token(Token = "0x4000C91")]
	public const int wallArchi = 1999;

	[Token(Token = "0x4000C92")]
	public const int objectOpaque = 2000;

	[Token(Token = "0x4000C93")]
	public const int objectArchi = 1999;

	[Token(Token = "0x4000C94")]
	public const int carpet = 2490;

	[Token(Token = "0x4000C95")]
	public const int floor = 2496;

	[Token(Token = "0x4000C96")]
	public const int floorArchi = 2000;

	[Token(Token = "0x4000C97")]
	public const int wallSides = 2497;

	[Token(Token = "0x4000C98")]
	public const int roomSlab = 2498;

	[Token(Token = "0x4000C99")]
	public const int objectTransparent = 3000;

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xEA9614", Offset = "0xEA9614", VA = "0xEA9614")]
	public RenderQueues()
	{
	}
}
[Token(Token = "0x200023D")]
public class Room
{
	[Token(Token = "0x200023E")]
	public class VoronoiCell
	{
		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Light light;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MultiPolygon poly;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiPolygon clippedMultiPoly;

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xEA961C", Offset = "0xEA961C", VA = "0xEA961C")]
		public VoronoiCell()
		{
		}
	}

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float colliderThickness;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject floorCollider;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ceilCollider;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool floorColliderNeedUpdate;

	[Token(Token = "0x4000C9E")]
	public const float cStoreyHeight = 2.7f;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MultiPolygon multiPoly;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MultiPolygon floorMultiPoly;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MultiPolygon ceilMultiPoly;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MultiPolygon innerCeilMultiPoly;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float altitude;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float height;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isOutside;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string[,] materialsFloor;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string[,] materialsCeiling;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject roomGo;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> floors;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> ceilings;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject upCeiling;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject downFloor;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string hd3dName;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool isImported;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int num;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<string> materialNamesFloor;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<string> materialNamesCeiling;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool floorTilesNeedUpdate;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool ceilTilesNeedUpdate;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<int>[] triangles;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Vector3> normals;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<Vector2> UVs;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<Vector4> tangents;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<MultiPolygon> floorTiles;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<MultiPolygon> ceilTiles;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<Color32> slabVertColors;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float ceilOffset;

	[Token(Token = "0x4000CBD")]
	public const float cFloorGridCellSize = 0.25f;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static DataBaseManager DBM;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static IDataReader reader;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float floorUvScale;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<GameObject> reflectionProbes;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool probesNeedUpdate;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<Light> lights;

	[Token(Token = "0x4000CC4")]
	public const float ImportSlabThickness = 0.25f;

	[Token(Token = "0x4000CC5")]
	private const float BuiltSlabThickness = 0.18f;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<GameObject> stairs;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<GameObject> stairsBelow;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<VoronoiCell> voronoiCells;

	[Token(Token = "0x17000175")]
	public AABBf aabb
	{
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xE761CC", Offset = "0xE761CC", VA = "0xE761CC")]
		get
		{
			return default(AABBf);
		}
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xE74874", Offset = "0xE74874", VA = "0xE74874")]
	public void DisableColliders()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xE74894", Offset = "0xE74894", VA = "0xE74894")]
	public void EnableColliders()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xE748C0", Offset = "0xE748C0", VA = "0xE748C0")]
	public void EnableFloorCollider(bool enable)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xE74958", Offset = "0xE74958", VA = "0xE74958")]
	public void EnableCeilCollider(bool enable)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xE749F0", Offset = "0xE749F0", VA = "0xE749F0")]
	private void DestroyFloorCollider()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xE74ACC", Offset = "0xE74ACC", VA = "0xE74ACC")]
	private void DestroyCeilCollider()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xE74B74", Offset = "0xE74B74", VA = "0xE74B74")]
	private Mesh GenerateCollider(MultiPolygon mp, float thickness)
	{
		return null;
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xE75D1C", Offset = "0xE75D1C", VA = "0xE75D1C")]
	private void UpdateColliders()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xE761E8", Offset = "0xE761E8", VA = "0xE761E8")]
	public Room()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xE76670", Offset = "0xE76670", VA = "0xE76670")]
	private void DestroyFloor()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xE76B20", Offset = "0xE76B20", VA = "0xE76B20")]
	private void DestroyCeiling()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xE76E00", Offset = "0xE76E00", VA = "0xE76E00")]
	public void DestroyRoom(bool isFromLoad = false)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xE779C8", Offset = "0xE779C8", VA = "0xE779C8")]
	public MultiPolygon.SIndex IndexOfWall(Wall wall)
	{
		return default(MultiPolygon.SIndex);
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xE77A3C", Offset = "0xE77A3C", VA = "0xE77A3C")]
	public bool IsPointInside(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xE77A94", Offset = "0xE77A94", VA = "0xE77A94")]
	public bool IsPointInsideWithSlab(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xE77B20", Offset = "0xE77B20", VA = "0xE77B20")]
	public bool IsPointInsideWithMargin(Vector3 point, float margin)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xE77B80", Offset = "0xE77B80", VA = "0xE77B80")]
	public bool IsPointAboveFloorWithMargin(Vector3 point, float margin)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xE77BF8", Offset = "0xE77BF8", VA = "0xE77BF8")]
	public bool IsLightInside(Light light)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xE77C34", Offset = "0xE77C34", VA = "0xE77C34")]
	public bool IsRoomInside(Room room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xE77EE4", Offset = "0xE77EE4", VA = "0xE77EE4")]
	public Room IsRoomInside2()
	{
		return null;
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xE7814C", Offset = "0xE7814C", VA = "0xE7814C")]
	public bool IsVirtualWallInside(Vector2 start, Vector2 end, float wallAltitude, float wallHeight)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xE781B0", Offset = "0xE781B0", VA = "0xE781B0")]
	public bool IsEqual(Room room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xE782BC", Offset = "0xE782BC", VA = "0xE782BC")]
	public bool IsEqualWithMaterials(Room room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xE78508", Offset = "0xE78508", VA = "0xE78508")]
	public List<Room> ListRoomsAbove(float precision)
	{
		return null;
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xE7858C", Offset = "0xE7858C", VA = "0xE7858C")]
	public void UpdateRoomsAbove([Optional] GameObject _stairToRemove)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xE78B1C", Offset = "0xE78B1C", VA = "0xE78B1C")]
	public List<Room> ListRoomsBelow(float precision)
	{
		return null;
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xE78B88", Offset = "0xE78B88", VA = "0xE78B88")]
	public void UpdateRoomsBelow()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xE77458", Offset = "0xE77458", VA = "0xE77458")]
	public void UpdateNearRooms()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xE799C4", Offset = "0xE799C4", VA = "0xE799C4")]
	public List<Wall> GetWallsAtPoint(Vector2 wallPoint, Wall refWall, bool isOnLeft)
	{
		return null;
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xE79DF0", Offset = "0xE79DF0", VA = "0xE79DF0")]
	public void FixWallsRooms()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xE79F6C", Offset = "0xE79F6C", VA = "0xE79F6C")]
	public void SetNum(int _num)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xE76950", Offset = "0xE76950", VA = "0xE76950")]
	private void FreeMaterials(List<GameObject> objList)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xE7A020", Offset = "0xE7A020", VA = "0xE7A020")]
	private List<string> ListMaterials(Vector2Int gridSize, string[,] matArray)
	{
		return null;
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xE7A1D0", Offset = "0xE7A1D0", VA = "0xE7A1D0")]
	private void ListFloorTiles(string[,] materialsArray, ref List<string> materialsList, ref List<MultiPolygon> tilesMps)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xE7AD58", Offset = "0xE7AD58", VA = "0xE7AD58")]
	public void ConvertFloorMaterials(Room srcRoom)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xE7B318", Offset = "0xE7B318", VA = "0xE7B318")]
	private void LoadFloorMaterials(MeshRenderer _renderer, List<string> materialsList, string defaultMaterial)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xE7B7A0", Offset = "0xE7B7A0", VA = "0xE7B7A0")]
	private void LoadUpCeilingMaterial(GameObject obj, int renderQueue)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xE7B9A4", Offset = "0xE7B9A4", VA = "0xE7B9A4")]
	public void SetMaterials()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xE7BD24", Offset = "0xE7BD24", VA = "0xE7BD24")]
	private void MaterialLoaded(Material mat, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xE7BE1C", Offset = "0xE7BE1C", VA = "0xE7BE1C")]
	private void SlabMaterialLoaded(Material mat, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xE7BEB0", Offset = "0xE7BEB0", VA = "0xE7BEB0")]
	private void UpCeilingLoaded(Material mat, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xE7BF44", Offset = "0xE7BF44", VA = "0xE7BF44")]
	private Mesh GenerateFloorMesh(MultiPolygon cell, List<MultiPolygon> tilesMP, Vector3 normal)
	{
		return null;
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xE7CA88", Offset = "0xE7CA88", VA = "0xE7CA88")]
	private Mesh GenerateUpCeilingMesh(MultiPolygon mp)
	{
		return null;
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xE7D388", Offset = "0xE7D388", VA = "0xE7D388")]
	private Mesh GenerateDownFloorMesh(MultiPolygon mp)
	{
		return null;
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xE7DCB8", Offset = "0xE7DCB8", VA = "0xE7DCB8")]
	public void GenerateFloorObj()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xE7E844", Offset = "0xE7E844", VA = "0xE7E844")]
	public void GenerateCeilingObj()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xE80250", Offset = "0xE80250", VA = "0xE80250")]
	public void UpdateFloorAndCeiling(bool createFromArchi)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xE814F4", Offset = "0xE814F4", VA = "0xE814F4")]
	public void UpdateFloorAndCeiling2()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xE786E8", Offset = "0xE786E8", VA = "0xE786E8")]
	public void UpdateFloor([Optional] GameObject _stairToRemove)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xE78EE0", Offset = "0xE78EE0", VA = "0xE78EE0")]
	public void UpdateCeiling([Optional] GameObject _stairsToRemove)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xE828E8", Offset = "0xE828E8", VA = "0xE828E8")]
	public void UpdateUpCeiling()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xE82258", Offset = "0xE82258", VA = "0xE82258")]
	public void UpdateDownFloor()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xE82F84", Offset = "0xE82F84", VA = "0xE82F84")]
	public void InitCeilMultipoly()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xE79314", Offset = "0xE79314", VA = "0xE79314")]
	public void UpdateCeilMultipoly()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xE796F0", Offset = "0xE796F0", VA = "0xE796F0")]
	public void UpdateFloorMultipoly()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xE832A0", Offset = "0xE832A0", VA = "0xE832A0")]
	public Vector2Int GetCellCoords(Vector3 pos)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xE833CC", Offset = "0xE833CC", VA = "0xE833CC")]
	public string GetFloorCellMat(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xE835A0", Offset = "0xE835A0", VA = "0xE835A0")]
	public string GetCeilingCellMat(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xE83774", Offset = "0xE83774", VA = "0xE83774")]
	public bool PaintFloorOneCell(Vector3 pos, string material, bool box)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xE83BB4", Offset = "0xE83BB4", VA = "0xE83BB4")]
	public void PaintFloor(Vector3 pos, string material)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xE83F64", Offset = "0xE83F64", VA = "0xE83F64")]
	public void PaintFloorBox(Vector3 pos, string material)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xE843A8", Offset = "0xE843A8", VA = "0xE843A8")]
	public void ChangeFloorMaterial(Vector3 pos, string material)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xE846EC", Offset = "0xE846EC", VA = "0xE846EC")]
	public bool PaintCeilingOneCell(Vector3 pos, string material, bool box)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xE84B2C", Offset = "0xE84B2C", VA = "0xE84B2C")]
	public void PaintCeiling(Vector3 pos, string material)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xE84EDC", Offset = "0xE84EDC", VA = "0xE84EDC")]
	public void PaintCeilingBox(Vector3 pos, string material)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xE85320", Offset = "0xE85320", VA = "0xE85320")]
	public void ChangeCeilingMaterial(Vector3 pos, string material)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xE83DD8", Offset = "0xE83DD8", VA = "0xE83DD8")]
	public void UpdateFloorPaint()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xE84D50", Offset = "0xE84D50", VA = "0xE84D50")]
	public void UpdateCeilingPaint()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xE855E8", Offset = "0xE855E8", VA = "0xE855E8")]
	private GameObject CreatePaintGameObject(MultiPolygon multiPoly, Material mat, bool isFloor, Light light)
	{
		return null;
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xE85E5C", Offset = "0xE85E5C", VA = "0xE85E5C")]
	private MultiPolygon GetPaintHighlightMP(Vector2 cellCoords, int size)
	{
		return null;
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xE8616C", Offset = "0xE8616C", VA = "0xE8616C")]
	public List<GameObject> GetFloorMesh(Vector2Int cellCoords, Material mat, int size = 1)
	{
		return null;
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xE8641C", Offset = "0xE8641C", VA = "0xE8641C")]
	public List<GameObject> GetCeilingMesh(Vector2Int cellCoords, Material mat, int size = 1)
	{
		return null;
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xE866CC", Offset = "0xE866CC", VA = "0xE866CC")]
	public List<GameObject> GetFloorMatMesh(Vector2Int cellCoords, Material mat)
	{
		return null;
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xE86A24", Offset = "0xE86A24", VA = "0xE86A24")]
	public List<GameObject> GetCeilingMatMesh(Vector2Int cellCoords, Material mat)
	{
		return null;
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xE77830", Offset = "0xE77830", VA = "0xE77830")]
	private void DestroyReflectionProbes()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xE86D7C", Offset = "0xE86D7C", VA = "0xE86D7C")]
	public void CreateReflectionProbes(bool isIncremental, List<ReflectionProbe> oldProbes, List<ReflectionProbe> newProbes, bool createLight, bool fromLoad = false)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xE87E74", Offset = "0xE87E74", VA = "0xE87E74")]
	private void SmoothMultiPolygon(MultiPolygon multiPoly)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xE88004", Offset = "0xE88004", VA = "0xE88004")]
	private Polygon SmoothPolygon(Polygon poly)
	{
		return null;
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xE880C8", Offset = "0xE880C8", VA = "0xE880C8")]
	private int FindReflexPoint(Polygon poly, bool isClockwise)
	{
		return default(int);
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xE88298", Offset = "0xE88298", VA = "0xE88298")]
	private bool IsReflex(Polygon poly, int index, bool isClockwise)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xE87F44", Offset = "0xE87F44", VA = "0xE87F44")]
	private void ResplitMultiPolygon(MultiPolygon mp)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xE88404", Offset = "0xE88404", VA = "0xE88404")]
	private Polygon ResplitPolygon(Polygon poly)
	{
		return null;
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xE88A80", Offset = "0xE88A80", VA = "0xE88A80")]
	public void UpdateReflectionProbes()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xE88D4C", Offset = "0xE88D4C", VA = "0xE88D4C")]
	public void SetProbeNeedUpdate()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xE76124", Offset = "0xE76124", VA = "0xE76124")]
	public float GetSlabThickness()
	{
		return default(float);
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xE88D58", Offset = "0xE88D58", VA = "0xE88D58")]
	public float GetTotalRoomHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xE88D78", Offset = "0xE88D78", VA = "0xE88D78")]
	public void CreateSlabWalls()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xE8901C", Offset = "0xE8901C", VA = "0xE8901C")]
	public void CreateSlabWallsConstrained(MultiPolygon _constrMP)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xE892F4", Offset = "0xE892F4", VA = "0xE892F4")]
	public void UpdateSlabWalls()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xE7710C", Offset = "0xE7710C", VA = "0xE7710C")]
	private void DestroySlabWalls()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xE89488", Offset = "0xE89488", VA = "0xE89488")]
	public bool IsSlabWallAboveRoom(Wall _wall)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xE89500", Offset = "0xE89500", VA = "0xE89500")]
	public void SplitWallsInSlab()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xE7F238", Offset = "0xE7F238", VA = "0xE7F238")]
	private Mesh GenerateSlabMesh()
	{
		return null;
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xE89F4C", Offset = "0xE89F4C", VA = "0xE89F4C")]
	private bool IsSegmentParallelToMPBorders(Vector2 _start, Vector2 _end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xE818D4", Offset = "0xE818D4", VA = "0xE818D4")]
	public void ListStairs()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xE7E3DC", Offset = "0xE7E3DC", VA = "0xE7E3DC")]
	private MultiPolygon GetStairsMp(List<GameObject> stairs)
	{
		return null;
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xE8A42C", Offset = "0xE8A42C", VA = "0xE8A42C")]
	private MultiPolygon GetStairMp(GameObject stair)
	{
		return null;
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xE811C4", Offset = "0xE811C4", VA = "0xE811C4")]
	public void SetVoronoiCells(List<VoronoiCell> cells)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xE806C4", Offset = "0xE806C4", VA = "0xE806C4")]
	private List<VoronoiCell> GetVoronoiCells(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xE8A6AC", Offset = "0xE8A6AC", VA = "0xE8A6AC")]
	public void CutWall(Wall wall, bool isOnLeft)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xE8BEE4", Offset = "0xE8BEE4", VA = "0xE8BEE4")]
	public void UpdateWalls([Optional] GameObject light)
	{
	}
}
[Token(Token = "0x2000240")]
public class RoomInfo : MonoBehaviour
{
	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Room room;

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xEA9694", Offset = "0xEA9694", VA = "0xEA9694")]
	public RoomInfo()
	{
	}
}
[Token(Token = "0x2000241")]
public class LightInfo : MonoBehaviour
{
	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light light;

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xEA969C", Offset = "0xEA969C", VA = "0xEA969C")]
	public LightInfo()
	{
	}
}
[Token(Token = "0x2000242")]
public static class RoomsList
{
	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Room> allRooms;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int roomNum;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool delayMeshGeneration;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static List<Room> roomsToGenerate;

	[Token(Token = "0x17000176")]
	public static bool IsImported
	{
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xEA96A4", Offset = "0xEA96A4", VA = "0xEA96A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000177")]
	public static GameObject StandardLight
	{
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xEA9804", Offset = "0xEA9804", VA = "0xEA9804")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xEA985C", Offset = "0xEA985C", VA = "0xEA985C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xEA98BC", Offset = "0xEA98BC", VA = "0xEA98BC")]
	static RoomsList()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xEA99DC", Offset = "0xEA99DC", VA = "0xEA99DC")]
	public static void InitList()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xEA9AB0", Offset = "0xEA9AB0", VA = "0xEA9AB0")]
	public static void UpdateStairsRemove(GameObject _stair)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xEA9CE4", Offset = "0xEA9CE4", VA = "0xEA9CE4")]
	public static void UpdateStairsAdd(GameObject _stair)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xE9D564", Offset = "0xE9D564", VA = "0xE9D564")]
	public static void FixWallsRooms()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xEA9F18", Offset = "0xEA9F18", VA = "0xEA9F18")]
	public static List<Room> ListRoomsAboveAltitude(float wantedAltitude, float precision)
	{
		return null;
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xEAA184", Offset = "0xEAA184", VA = "0xEAA184")]
	public static List<Room> ListRoomsBelowAltitude(float wantedAltitude, float precision)
	{
		return null;
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xEAA410", Offset = "0xEAA410", VA = "0xEAA410")]
	public static bool IsPointInARoom(Vector3 point, out int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xEAA530", Offset = "0xEAA530", VA = "0xEAA530")]
	public static bool DoesProjectHaveRooms()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xEAA5CC", Offset = "0xEAA5CC", VA = "0xEAA5CC")]
	public static void GenerateMeshes(bool fromLoad = false)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xE9AC94", Offset = "0xE9AC94", VA = "0xE9AC94")]
	public static void RoomsInsideRooms()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xEAA810", Offset = "0xEAA810", VA = "0xEAA810")]
	private static bool FindRoomsInsideRooms(out Room room1, out Room room2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xEAAC1C", Offset = "0xEAAC1C", VA = "0xEAAC1C")]
	private static void RoomInsideRoom(ref Room room1, ref Room room2)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xE9D4D8", Offset = "0xE9D4D8", VA = "0xE9D4D8")]
	public static void MergeRooms()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xEAC684", Offset = "0xEAC684", VA = "0xEAC684")]
	private static bool FindRoomsToMerge(out Room r1, out Room r2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xEAB39C", Offset = "0xEAB39C", VA = "0xEAB39C")]
	public static Room MergeRooms(Room room, Room room2)
	{
		return null;
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xEAAE58", Offset = "0xEAAE58", VA = "0xEAAE58")]
	public static void ResplitRoomPolygon(ref MultiPolygon newMP, Room room)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xEA2ECC", Offset = "0xEA2ECC", VA = "0xEA2ECC")]
	public static bool MakeRoomFromPath(ref Room room, ref Stack<Wall> path, Wall wall, bool fromEnd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xEACD40", Offset = "0xEACD40", VA = "0xEACD40")]
	private static bool OverlapsYComponent(MultiPolygon mp, float altitude, float height, Room room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xEA200C", Offset = "0xEA200C", VA = "0xEA200C")]
	public static void InitRoom(Room newRoom, bool createFromArchi, bool initSlabs = true, bool updateNearRooms = true)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xE9D6D8", Offset = "0xE9D6D8", VA = "0xE9D6D8")]
	public static void CreateReflectionProbes(bool isIncremental, bool createLights, List<Room> oldRooms, bool fromLoad = false)
	{
	}
}
[Token(Token = "0x2000244")]
public class Wall
{
	[Token(Token = "0x2000245")]
	public class CutPoint
	{
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 point;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector2> lightsPos;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Light> lights;

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xEC0330", Offset = "0xEC0330", VA = "0xEC0330")]
		public CutPoint()
		{
		}
	}

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool ColNeedUpdate;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<float> cornerAltitudes;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> startCornerDist;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> endCornerDist;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float wallThickness;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float altitude;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float height;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 start;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 end;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<string> materialsLeft;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<string> materialsRight;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float angle;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DataBaseManager DBM;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject groupObj;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> subObjects;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isVisible;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float ceilOffset;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isInNodes;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool paintMultiPolygonsNeedUpdate;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<string> uniqueMatListLeft;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<string> uniqueMatListRight;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<MultiPolygon> leftPaintMultiPolygons;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<MultiPolygon> rightPaintMultiPolygons;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool WallNeedUpdate;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Vector3> normals;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Vector2> uvs;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Vector4> tangents;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<List<Color32>> vertexColors;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<List<int>> triangles;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 extents;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MultiPolygon frontMP;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MultiPolygon backMP;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float paintCellSize;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Room _leftRoom;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Room _rightRoom;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<CutPoint> leftCutPoints;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<CutPoint> rightCutPoints;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<GameObject> windows;

	[Token(Token = "0x17000178")]
	public Room LeftRoom
	{
		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xEBEC6C", Offset = "0xEBEC6C", VA = "0xEBEC6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xEBEC74", Offset = "0xEBEC74", VA = "0xEBEC74")]
		set
		{
		}
	}

	[Token(Token = "0x17000179")]
	public Room RightRoom
	{
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xEBF100", Offset = "0xEBF100", VA = "0xEBF100")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xEBF108", Offset = "0xEBF108", VA = "0xEBF108")]
		set
		{
		}
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xEADF80", Offset = "0xEADF80", VA = "0xEADF80")]
	public void GenerateCol()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xEAF7C8", Offset = "0xEAF7C8", VA = "0xEAF7C8")]
	private void GenerateFrontCol(MultiPolygon mp, bool isFront, ref List<Vector3> vertices, ref List<Vector3> normals, ref List<List<int>> triangles)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xEAFDE8", Offset = "0xEAFDE8", VA = "0xEAFDE8")]
	private void GenerateSidesCol(MultiPolygon mpFront, MultiPolygon mpBack, ref List<Vector3> vertices, ref List<Vector3> normals, ref List<List<int>> triangles)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xEB0AE8", Offset = "0xEB0AE8", VA = "0xEB0AE8")]
	public float GetCornerDistance(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xEB0C90", Offset = "0xEB0C90", VA = "0xEB0C90")]
	private void AddCornerAltitude(float alt)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xEAE5C8", Offset = "0xEAE5C8", VA = "0xEAE5C8")]
	private void FindCornerDistances()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xEB11A4", Offset = "0xEB11A4", VA = "0xEB11A4")]
	private void GetCornerAngles(out float angleStart, out float angleEnd)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xEB15E8", Offset = "0xEB15E8", VA = "0xEB15E8")]
	private void FindCornerWalls2(Vector2 point, out Wall wall1, out Wall wall2)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xEB0F1C", Offset = "0xEB0F1C", VA = "0xEB0F1C")]
	public bool IsNearWall(Wall other, Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xEB1CD4", Offset = "0xEB1CD4", VA = "0xEB1CD4")]
	public List<Wall> ListNearWalls(Vector2 point)
	{
		return null;
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xEB0FA8", Offset = "0xEB0FA8", VA = "0xEB0FA8")]
	public Wall(bool createGameObject = true)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xEB1F94", Offset = "0xEB1F94", VA = "0xEB1F94")]
	public void CreateWall(List<GameObject> _windows)
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xEB2750", Offset = "0xEB2750", VA = "0xEB2750")]
	public void DestroySubObjects()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xEB1330", Offset = "0xEB1330", VA = "0xEB1330")]
	public void DestroyWall()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xEB2A54", Offset = "0xEB2A54", VA = "0xEB2A54")]
	public bool IsOnLeftSide(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xEB2BA8", Offset = "0xEB2BA8", VA = "0xEB2BA8")]
	public bool IsOnLeftSide2(Vector3 rayDirection)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xEB2C54", Offset = "0xEB2C54", VA = "0xEB2C54")]
	public bool IsOnLeftSide3(Vector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xEB2C88", Offset = "0xEB2C88", VA = "0xEB2C88")]
	public bool IsSlabWall()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xEB1BC0", Offset = "0xEB1BC0", VA = "0xEB1BC0")]
	public float GetAngle(Vector2 _start)
	{
		return default(float);
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xEB2D14", Offset = "0xEB2D14", VA = "0xEB2D14")]
	public Vector2Int GetSlopeVector()
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xEB2F18", Offset = "0xEB2F18", VA = "0xEB2F18")]
	public Vector2 GetPointInWallFromSurface(Vector3 surfPoint)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xEB3028", Offset = "0xEB3028", VA = "0xEB3028")]
	public bool IsOvelapping(Wall other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xEB3100", Offset = "0xEB3100", VA = "0xEB3100")]
	public bool IsOvelapping2(Wall other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xEB32E0", Offset = "0xEB32E0", VA = "0xEB32E0")]
	public bool IsPointInside(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xEB3350", Offset = "0xEB3350", VA = "0xEB3350")]
	public float DistanceFromStart(Vector2 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xEB3438", Offset = "0xEB3438", VA = "0xEB3438")]
	public bool IsEqual(Wall other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xEB1B24", Offset = "0xEB1B24", VA = "0xEB1B24")]
	public bool IsEqualNoMatNoHeigth(Wall other, float precision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xEB0EA0", Offset = "0xEB0EA0", VA = "0xEB0EA0")]
	public bool IsEqualNoMat(Wall other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xEB35C0", Offset = "0xEB35C0", VA = "0xEB35C0")]
	public void SplitHorizontally(Vector2 intersection, out Wall newWall1, out Wall newWall2)
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xEB4198", Offset = "0xEB4198", VA = "0xEB4198")]
	public void FakeSplitHorizontally(Vector2 intersection, out Wall newWall1, out Wall newWall2)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xEB4888", Offset = "0xEB4888", VA = "0xEB4888")]
	public void SplitVertically(float splitAltitude, out Wall wallBottom, out Wall wallTop)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xEB4AD0", Offset = "0xEB4AD0", VA = "0xEB4AD0")]
	public void CopyPosAndMaterials(Wall srcWall)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xEB4CCC", Offset = "0xEB4CCC", VA = "0xEB4CCC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xEB4FD8", Offset = "0xEB4FD8", VA = "0xEB4FD8")]
	public void GetLimits(out float min, out float max, bool isOnLeft)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xEB5298", Offset = "0xEB5298", VA = "0xEB5298")]
	public AABBf GetAABB(Vector3 XZAxis)
	{
		return default(AABBf);
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xEB5310", Offset = "0xEB5310", VA = "0xEB5310")]
	public float GetHighestWallCellGridStep()
	{
		return default(float);
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xEB55D8", Offset = "0xEB55D8", VA = "0xEB55D8")]
	private void ListMaterials()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xEB59A8", Offset = "0xEB59A8", VA = "0xEB59A8")]
	private MultiPolygon GetPaintMultiPolygon(int matNum, bool isLeft)
	{
		return null;
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xEB608C", Offset = "0xEB608C", VA = "0xEB608C")]
	public void SetMaterials()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xEB6264", Offset = "0xEB6264", VA = "0xEB6264")]
	public void LoadMaterials(GameObject subObj, int index)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xEB6880", Offset = "0xEB6880", VA = "0xEB6880")]
	private void GetMaterialFromPool(string name, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xEB6A80", Offset = "0xEB6A80", VA = "0xEB6A80")]
	private void MaterialLoaded(Material mat, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xEB6B74", Offset = "0xEB6B74", VA = "0xEB6B74")]
	private void SideMaterialLoaded(Material mat, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xEB2998", Offset = "0xEB2998", VA = "0xEB2998")]
	private void FreeMaterials(GameObject obj)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xEB6C00", Offset = "0xEB6C00", VA = "0xEB6C00")]
	private Polygon GetPaintCellPoly(int cellCoord, int size)
	{
		return null;
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xEB5F94", Offset = "0xEB5F94", VA = "0xEB5F94")]
	private MultiPolygon GetPaintCellMP(int cellCoord, int size)
	{
		return null;
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xEB6EA0", Offset = "0xEB6EA0", VA = "0xEB6EA0")]
	public void GenerateMesh()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xEB757C", Offset = "0xEB757C", VA = "0xEB757C")]
	private void GenerateFront(MultiPolygon mp, MultiPolygon voronoiCell, Vector3 normal1, Vector3 normal2)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xEB9430", Offset = "0xEB9430", VA = "0xEB9430")]
	private void GenerateSides(MultiPolygon mpFront, MultiPolygon mpBack)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xEBAA90", Offset = "0xEBAA90", VA = "0xEBAA90")]
	private bool IsSegmentOnBorder(MultiPolygon mp, Vector2 start, Vector2 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xEBADB8", Offset = "0xEBADB8", VA = "0xEBADB8")]
	private bool IsTriangleSideOnBorder(MultiPolygon mp, bool[] borderFlags, Vector2 start, Vector2 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xEAEFCC", Offset = "0xEAEFCC", VA = "0xEAEFCC")]
	private void GenerateFrontAndBackMP()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xEBB554", Offset = "0xEBB554", VA = "0xEBB554")]
	private float GetX(float dist, bool isMin, bool isFront)
	{
		return default(float);
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xEBB578", Offset = "0xEBB578", VA = "0xEBB578")]
	private void AddPointToPoly(Polygon poly, Vector2 point)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xEBB000", Offset = "0xEBB000", VA = "0xEBB000")]
	private void CreateSubObject(int side)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xEBAD48", Offset = "0xEBAD48", VA = "0xEBAD48")]
	private Vector2 GetUVFromVertex(Vector2 vertex, bool isOnLeft, Vector3 pos, Vector3 right, Vector3 up)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xEB4C6C", Offset = "0xEB4C6C", VA = "0xEB4C6C")]
	public int NumberOfPaintCells()
	{
		return default(int);
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xEBB690", Offset = "0xEBB690", VA = "0xEBB690")]
	public int NumberOfPaintCells(float cellSize)
	{
		return default(int);
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xEBB768", Offset = "0xEBB768", VA = "0xEBB768")]
	public int GetCellNum(Vector3 point)
	{
		return default(int);
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xEBB948", Offset = "0xEBB948", VA = "0xEBB948")]
	public Vector2 GetCellPoint(int cellNum)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xEBBACC", Offset = "0xEBBACC", VA = "0xEBBACC")]
	private MultiPolygon GetPaintCellMPCut(bool isOnLeft, int cellCoord, int size)
	{
		return null;
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xEBBB78", Offset = "0xEBBB78", VA = "0xEBBB78")]
	public List<GameObject> GetWallMesh(Vector3 point, bool isOnLeft, Material mat, int size = 1, [Optional] GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xEBBF90", Offset = "0xEBBF90", VA = "0xEBBF90")]
	private List<GameObject> GetWallMeshSub(int cellCoord, bool isOnLeft, Material mat, int size = 1, [Optional] GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xEBBDE4", Offset = "0xEBBDE4", VA = "0xEBBDE4")]
	private List<Wall> GetModifiedWalls(int cellCoord, bool isOnLeft, bool isFullWall)
	{
		return null;
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xEBCA18", Offset = "0xEBCA18", VA = "0xEBCA18")]
	public GameObject GetWallMatMesh(int cellCoord, bool isOnLeft, Material mat)
	{
		return null;
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xEBD144", Offset = "0xEBD144", VA = "0xEBD144")]
	private MultiPolygon GetWallMatMesh2(string material, bool isOnLeft)
	{
		return null;
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xEBC8E0", Offset = "0xEBC8E0", VA = "0xEBC8E0")]
	private List<Wall> FindOverlappingWallsInRoom(Room room)
	{
		return null;
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xEBC564", Offset = "0xEBC564", VA = "0xEBC564")]
	private GameObject CreatePaintGameObject(MultiPolygon multiPoly, bool isOnLeft, Material mat, GameObject go, Vector3 normal1, Vector3 normal2, MultiPolygon voronoiCell)
	{
		return null;
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xEBD5B4", Offset = "0xEBD5B4", VA = "0xEBD5B4")]
	private Mesh CreatePaintMesh(MultiPolygon mp, bool isOnLeft, Vector3 normal1, Vector3 normal2, MultiPolygon voronoiCell)
	{
		return null;
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xEBDF94", Offset = "0xEBDF94", VA = "0xEBDF94")]
	public bool PaintWallOneCell(Vector3 pos, string material, bool box)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xEBE264", Offset = "0xEBE264", VA = "0xEBE264")]
	public void PaintWall(Vector3 pos, string material)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xEBE4A8", Offset = "0xEBE4A8", VA = "0xEBE4A8")]
	public string GetWallCellMat(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xEBE550", Offset = "0xEBE550", VA = "0xEBE550")]
	public void PaintWallBox(Vector3 pos, string material)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xEBE8E8", Offset = "0xEBE8E8", VA = "0xEBE8E8")]
	public void ChangeWallMaterial(Vector3 pos, string material)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xEBEAF0", Offset = "0xEBEAF0", VA = "0xEBEAF0")]
	private void ChangeWallMaterial2(bool isOnLeft, string srcMaterial, string newMaterial)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xEB237C", Offset = "0xEB237C", VA = "0xEB237C")]
	public void FindRooms()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xEBF2B4", Offset = "0xEBF2B4", VA = "0xEBF2B4")]
	public void CheckRoom(Room room)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xEB8D24", Offset = "0xEB8D24", VA = "0xEB8D24")]
	private MultiPolygon GetVoronoiCellMP(List<CutPoint> cutPoints, int cellNum, float minHeight, float maxHeight)
	{
		return null;
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xEB9110", Offset = "0xEB9110", VA = "0xEB9110")]
	private Vector3 GetCellNormal(List<CutPoint> cutPoints, int cellNum, Vector3 defaultNormal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xEBF448", Offset = "0xEBF448", VA = "0xEBF448")]
	public static bool AreCutListsEqual(List<CutPoint> oldList, List<CutPoint> newList)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xEBF90C", Offset = "0xEBF90C", VA = "0xEBF90C")]
	public static CutPoint CutlistContainsPoint(List<CutPoint> cutList, Vector2 point)
	{
		return null;
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xEAF544", Offset = "0xEAF544", VA = "0xEAF544")]
	public MultiPolygon GetWindowsMultiPolygon()
	{
		return null;
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xEBFAAC", Offset = "0xEBFAAC", VA = "0xEBFAAC")]
	private Polygon GetWindowBool(GameObject win)
	{
		return null;
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xEBFE70", Offset = "0xEBFE70", VA = "0xEBFE70")]
	public List<GameObject> FilterWindows(List<GameObject> windows)
	{
		return null;
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xEC0084", Offset = "0xEC0084", VA = "0xEC0084")]
	public bool IsWindowInside(GameObject window)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xEC024C", Offset = "0xEC024C", VA = "0xEC024C")]
	public bool IsWindowParallel(GameObject window)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xEBEE20", Offset = "0xEBEE20", VA = "0xEBEE20")]
	public void RecreateWallWithNewWindowsList(List<GameObject> windows)
	{
	}
}
[Token(Token = "0x2000246")]
public class WallInfo : MonoBehaviour
{
	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Wall wall;

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xEC0338", Offset = "0xEC0338", VA = "0xEC0338")]
	public WallInfo()
	{
	}
}
[Token(Token = "0x2000247")]
public static class WallsList
{
	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Wall> allWalls;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool delayMeshGeneration;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<Wall> wallsToGenerate;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Dictionary<Vector2, List<Wall>> wallsByPoint;

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xEC0340", Offset = "0xEC0340", VA = "0xEC0340")]
	static WallsList()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xEC03DC", Offset = "0xEC03DC", VA = "0xEC03DC")]
	public static void InitList()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xEB4500", Offset = "0xEB4500", VA = "0xEB4500")]
	public static void AddToAllWalls(Wall w)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xEB3A78", Offset = "0xEB3A78", VA = "0xEB3A78")]
	public static void RemoveFromAllWalls(Wall w)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xEC0504", Offset = "0xEC0504", VA = "0xEC0504")]
	public static List<Wall> GetOwnerWallsFromDoor(GameObject window)
	{
		return null;
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xEC077C", Offset = "0xEC077C", VA = "0xEC077C")]
	public static void UpdateWallRemove(GameObject hole)
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xEC0C10", Offset = "0xEC0C10", VA = "0xEC0C10")]
	public static bool UpdateWallAdd(GameObject hole)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xEC1110", Offset = "0xEC1110", VA = "0xEC1110")]
	public static bool CanHoleBeAdded(GameObject hole, out LinkedList<Wall> detectedWalls)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xEC1B2C", Offset = "0xEC1B2C", VA = "0xEC1B2C")]
	public static bool CanHoleBeRemoved(GameObject hole)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xEC2104", Offset = "0xEC2104", VA = "0xEC2104")]
	public static List<Wall> Find(Vector2 start, Vector2 end, float altitude, float height)
	{
		return null;
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xEC241C", Offset = "0xEC241C", VA = "0xEC241C")]
	public static List<Wall> ListWallsInAltitudeRange(float altitude, float height)
	{
		return null;
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xEC26B0", Offset = "0xEC26B0", VA = "0xEC26B0")]
	public static List<Wall> ListWallsBelowAltitude(float altitude, float precision)
	{
		return null;
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xEC2940", Offset = "0xEC2940", VA = "0xEC2940")]
	public static List<Wall> ListWallsAboveAltitude(float altitude, float precision)
	{
		return null;
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xEB3C04", Offset = "0xEB3C04", VA = "0xEB3C04")]
	public static Wall CopyWallPart(Wall src, Vector2 start, Vector2 end, float bottom, float top)
	{
		return null;
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xEB4330", Offset = "0xEB4330", VA = "0xEB4330")]
	public static Wall FakeCopyWallPart(Wall src, Vector2 start, Vector2 end, float bottom, float top)
	{
		return null;
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xEBD358", Offset = "0xEBD358", VA = "0xEBD358")]
	public static List<Wall> GetWallsOverlappingWall(Wall wall)
	{
		return null;
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xEC2BCC", Offset = "0xEC2BCC", VA = "0xEC2BCC")]
	public static void GenerateMeshes()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xEC2DB0", Offset = "0xEC2DB0", VA = "0xEC2DB0")]
	public static void SplitOverlapingWalls()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xEC379C", Offset = "0xEC379C", VA = "0xEC379C")]
	private static bool FindWallsThatOverlap(out Wall w1, out Wall w2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xEC2EA0", Offset = "0xEC2EA0", VA = "0xEC2EA0")]
	private static void SplitOverlappingWall(Wall w1, Wall w2)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xEC3A9C", Offset = "0xEC3A9C", VA = "0xEC3A9C")]
	public static void SplitNearWalls()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xEC3B1C", Offset = "0xEC3B1C", VA = "0xEC3B1C")]
	private static bool FindNearWallsToSplit(out Wall wall1, out Wall wall2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xEC3EC8", Offset = "0xEC3EC8", VA = "0xEC3EC8")]
	private static void SplitNearWalls2(ref Wall wall1, ref Wall wall2)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xEC434C", Offset = "0xEC434C", VA = "0xEC434C")]
	public static void MergeWalls()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xEC4D94", Offset = "0xEC4D94", VA = "0xEC4D94")]
	public static bool FindWallsToMergeHorizontally(out Wall wall1, out Wall wall2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xEC57B8", Offset = "0xEC57B8", VA = "0xEC57B8")]
	public static bool FindWallsToMergeVertically(out Wall wall1, out Wall wall2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xEC4504", Offset = "0xEC4504", VA = "0xEC4504")]
	public static Wall MergeWallsHorizontally(Wall wall1, Wall wall2)
	{
		return null;
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xEC5C20", Offset = "0xEC5C20", VA = "0xEC5C20")]
	public static Wall MergeWallsVertically(Wall wall1, Wall wall2)
	{
		return null;
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xEC5E90", Offset = "0xEC5E90", VA = "0xEC5E90")]
	public static void InitWalls(List<GameObject> doorsAndWindows)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xEC62A8", Offset = "0xEC62A8", VA = "0xEC62A8")]
	public static void InitOneWall(Wall wall, List<GameObject> doorsAndWindows)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xEC627C", Offset = "0xEC627C", VA = "0xEC627C")]
	public static void CreateWall(List<GameObject> doorsAndWindows, Wall wall)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xEC6344", Offset = "0xEC6344", VA = "0xEC6344")]
	public static void Print()
	{
	}
}
[Token(Token = "0x2000248")]
public enum Esfx
{
	[Token(Token = "0x4000D06")]
	Arrive,
	[Token(Token = "0x4000D07")]
	Back,
	[Token(Token = "0x4000D08")]
	ChangeAssetProperties,
	[Token(Token = "0x4000D09")]
	Close,
	[Token(Token = "0x4000D0A")]
	CloseMenu,
	[Token(Token = "0x4000D0B")]
	ClosePistolMenu,
	[Token(Token = "0x4000D0C")]
	CloseWatch,
	[Token(Token = "0x4000D0D")]
	Confirm,
	[Token(Token = "0x4000D0E")]
	DeleteAsset,
	[Token(Token = "0x4000D0F")]
	DeleteWall,
	[Token(Token = "0x4000D10")]
	Deselect,
	[Token(Token = "0x4000D11")]
	DrawingStylus,
	[Token(Token = "0x4000D12")]
	DrawWallPreview,
	[Token(Token = "0x4000D13")]
	DrawWallValid,
	[Token(Token = "0x4000D14")]
	DropUI,
	[Token(Token = "0x4000D15")]
	Error,
	[Token(Token = "0x4000D16")]
	GrabObject,
	[Token(Token = "0x4000D17")]
	GrabUI,
	[Token(Token = "0x4000D18")]
	Hover,
	[Token(Token = "0x4000D19")]
	KeyBoardAppear,
	[Token(Token = "0x4000D1A")]
	KeyBoardPress,
	[Token(Token = "0x4000D1B")]
	KeyBoardValid,
	[Token(Token = "0x4000D1C")]
	Loading,
	[Token(Token = "0x4000D1D")]
	OpenMenu,
	[Token(Token = "0x4000D1E")]
	OpenPistolMenu,
	[Token(Token = "0x4000D1F")]
	OpenWatch,
	[Token(Token = "0x4000D20")]
	Paint,
	[Token(Token = "0x4000D21")]
	PaintMulti,
	[Token(Token = "0x4000D22")]
	PlaceFromBag,
	[Token(Token = "0x4000D23")]
	PopUpAppear,
	[Token(Token = "0x4000D24")]
	PostItCreated,
	[Token(Token = "0x4000D25")]
	PostItDeleted,
	[Token(Token = "0x4000D26")]
	PostItErase,
	[Token(Token = "0x4000D27")]
	PutInBag,
	[Token(Token = "0x4000D28")]
	Rotate,
	[Token(Token = "0x4000D29")]
	ScaleUpDown,
	[Token(Token = "0x4000D2A")]
	ScrollView,
	[Token(Token = "0x4000D2B")]
	Select,
	[Token(Token = "0x4000D2C")]
	SubMenuClick,
	[Token(Token = "0x4000D2D")]
	TimeRotation,
	[Token(Token = "0x4000D2E")]
	ToolAppear,
	[Token(Token = "0x4000D2F")]
	ToolDisappear,
	[Token(Token = "0x4000D30")]
	ToolSelect,
	[Token(Token = "0x4000D31")]
	TutoValid,
	[Token(Token = "0x4000D32")]
	UseHammerMulti,
	[Token(Token = "0x4000D33")]
	UsePipet,
	[Token(Token = "0x4000D34")]
	UserConnected,
	[Token(Token = "0x4000D35")]
	UserDisconnected,
	[Token(Token = "0x4000D36")]
	ValidationAsset,
	[Token(Token = "0x4000D37")]
	WorkingTableMove,
	[Token(Token = "0x4000D38")]
	DrawTile
}
[Token(Token = "0x2000249")]
[CreateAssetMenu(fileName = "SFXHolder", menuName = "Create Sounds Holder")]
public class SFXscriptable : ScriptableObject
{
	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SFX> Audios;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip ArchiAmb;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip HomeAmb;

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xEC6518", Offset = "0xEC6518", VA = "0xEC6518")]
	public SFXscriptable()
	{
	}
}
[Serializable]
[Token(Token = "0x200024A")]
public class SFX
{
	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Esfx sfx;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip Clip;

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xEC6520", Offset = "0xEC6520", VA = "0xEC6520")]
	public SFX()
	{
	}
}
[Serializable]
[Token(Token = "0x200024B")]
public class TutoItem : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	private enum ItemState
	{
		[Token(Token = "0x4000D45")]
		Done,
		[Token(Token = "0x4000D46")]
		InProgress,
		[Token(Token = "0x4000D47")]
		Unlocked,
		[Token(Token = "0x4000D48")]
		Locked
	}

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ItemState current;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite DoneSprite;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite UnlockedSprite;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite SelectedSprite;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public TutoState State;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image Icon;

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xEC6528", Offset = "0xEC6528", VA = "0xEC6528")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xEC652C", Offset = "0xEC652C", VA = "0xEC652C")]
	public void SetItem()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xEC697C", Offset = "0xEC697C", VA = "0xEC697C")]
	public void SelectTutoState()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xEC6B54", Offset = "0xEC6B54", VA = "0xEC6B54")]
	public TutoItem()
	{
	}
}
[Token(Token = "0x200024D")]
public class TutoPanelController : MonoBehaviour
{
	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xEC6B64", Offset = "0xEC6B64", VA = "0xEC6B64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xEC6BCC", Offset = "0xEC6BCC", VA = "0xEC6BCC")]
	public void Grip()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xEC6C38", Offset = "0xEC6C38", VA = "0xEC6C38")]
	public void StartTuto()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xEC6CA4", Offset = "0xEC6CA4", VA = "0xEC6CA4")]
	public void EndTuto()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xEC6D10", Offset = "0xEC6D10", VA = "0xEC6D10")]
	public void Watch()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xEC6D7C", Offset = "0xEC6D7C", VA = "0xEC6D7C")]
	public void PocketMenu()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xEC6DE8", Offset = "0xEC6DE8", VA = "0xEC6DE8")]
	public void PocketObject()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xEC6E54", Offset = "0xEC6E54", VA = "0xEC6E54")]
	public void Tools()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xEC6EC0", Offset = "0xEC6EC0", VA = "0xEC6EC0")]
	public void CameraRot()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xEC6F2C", Offset = "0xEC6F2C", VA = "0xEC6F2C")]
	public void ObjectRot()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xEC6F98", Offset = "0xEC6F98", VA = "0xEC6F98")]
	public void SelectObject()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xEC7004", Offset = "0xEC7004", VA = "0xEC7004")]
	public void Release()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xEC7070", Offset = "0xEC7070", VA = "0xEC7070")]
	public void ScaleObject()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xEC70DC", Offset = "0xEC70DC", VA = "0xEC70DC")]
	public void Teleport()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xEC7148", Offset = "0xEC7148", VA = "0xEC7148")]
	public void Pipette()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xEC71B4", Offset = "0xEC71B4", VA = "0xEC71B4")]
	public void Hammer()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xEC7220", Offset = "0xEC7220", VA = "0xEC7220")]
	public void Map()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xEC728C", Offset = "0xEC728C", VA = "0xEC728C")]
	public void MapClick()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xEC72F8", Offset = "0xEC72F8", VA = "0xEC72F8")]
	public void Pistol()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xEC7364", Offset = "0xEC7364", VA = "0xEC7364")]
	public void PistolMenu()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xEC73D0", Offset = "0xEC73D0", VA = "0xEC73D0")]
	public void PistolTexture()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xEC743C", Offset = "0xEC743C", VA = "0xEC743C")]
	public void DropTool()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xEC74A8", Offset = "0xEC74A8", VA = "0xEC74A8")]
	public void PaintFloor()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xEC7514", Offset = "0xEC7514", VA = "0xEC7514")]
	public void PaintWall()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xEC7580", Offset = "0xEC7580", VA = "0xEC7580")]
	public void PaintCeiling()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xEC75EC", Offset = "0xEC75EC", VA = "0xEC75EC")]
	public void Chapter1()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xEC7654", Offset = "0xEC7654", VA = "0xEC7654")]
	public void Chapter2()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xEC76BC", Offset = "0xEC76BC", VA = "0xEC76BC")]
	public void Chapter3()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xEC7724", Offset = "0xEC7724", VA = "0xEC7724")]
	public void Chapter4()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xEC778C", Offset = "0xEC778C", VA = "0xEC778C")]
	public void Chapter5()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xEC77F4", Offset = "0xEC77F4", VA = "0xEC77F4")]
	public void Chapter6()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xEC785C", Offset = "0xEC785C", VA = "0xEC785C")]
	public void Chapter7()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xEC78C4", Offset = "0xEC78C4", VA = "0xEC78C4")]
	public void Chapter8()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xEC792C", Offset = "0xEC792C", VA = "0xEC792C")]
	public void Chapter9()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xEC7994", Offset = "0xEC7994", VA = "0xEC7994")]
	public void TurnOver()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xEC79FC", Offset = "0xEC79FC", VA = "0xEC79FC")]
	public TutoPanelController()
	{
	}
}
[Token(Token = "0x200024E")]
public class TutorialManager : MonoBehaviour
{
	[Token(Token = "0x2000251")]
	[CompilerGenerated]
	private sealed class <StartState>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutoState state;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialManager <>4__this;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xECA830", Offset = "0xECA830", VA = "0xECA830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xECA878", Offset = "0xECA878", VA = "0xECA878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xEC9284", Offset = "0xEC9284", VA = "0xEC9284")]
		[DebuggerHidden]
		public <StartState>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xECA2EC", Offset = "0xECA2EC", VA = "0xECA2EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xECA2F0", Offset = "0xECA2F0", VA = "0xECA2F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xECA838", Offset = "0xECA838", VA = "0xECA838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TutoState currentState;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private TutoState previousState;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject CanvasGo;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public UnityEvent<TutoState> tutoEvent;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 10f)]
	public float FadeTime;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialManager instance;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool needRecenter;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[Header("Video Parameter", order = 0)]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button PreviousBtn;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button NextBtn;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button CloseBtn;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextSelector StateTitle;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextSelector SlideDescription;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextSelector SlideTitre;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int selector;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TutoStatePopUp CurrentPopUp;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TutoItem CurrentItem;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject StartPanel;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject TutoPanel;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject VideoPage;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject SelectorPage;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private BoxCollider collider;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject AlertIcon;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Tween AlertAnim;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TabButton GuideTab;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private TabButton SelectionTab;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TabGroup tabGroup;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public string userID;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly HashSet<TutoState> statesToTrigger;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly Dictionary<TutoState, bool> isStateLocked;

	[Token(Token = "0x4000D69")]
	private const float maxTimeInactive = 10f;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	public List<TutoStatePopUp> TutoPopUps;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	public List<TutoItem> TutoItems;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int itemDone;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool videoPlayerWasPlaying;

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xEC7A04", Offset = "0xEC7A04", VA = "0xEC7A04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xEC801C", Offset = "0xEC801C", VA = "0xEC801C")]
	public void InitTutorial()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xEC823C", Offset = "0xEC823C", VA = "0xEC823C")]
	private void TutoValidated()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xEC89D4", Offset = "0xEC89D4", VA = "0xEC89D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xEC8AC0", Offset = "0xEC8AC0", VA = "0xEC8AC0")]
	private void OnPaused()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xEC8B00", Offset = "0xEC8B00", VA = "0xEC8B00")]
	private void OnUnpaused()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xEC8B30", Offset = "0xEC8B30", VA = "0xEC8B30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xEC8D14", Offset = "0xEC8D14", VA = "0xEC8D14")]
	private void ReceiveTutoEvent(TutoState state)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xEC6B34", Offset = "0xEC6B34", VA = "0xEC6B34")]
	public void ForcedTutoLaunch(TutoState state)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xEC90F8", Offset = "0xEC90F8", VA = "0xEC90F8")]
	[IteratorStateMachine(typeof(<StartState>d__45))]
	private IEnumerator StartState(TutoState state)
	{
		return null;
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xEC917C", Offset = "0xEC917C", VA = "0xEC917C")]
	private void SaveTuto(TutoState state)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xEC92AC", Offset = "0xEC92AC", VA = "0xEC92AC")]
	public void NextPanel()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xEC9740", Offset = "0xEC9740", VA = "0xEC9740")]
	public void PreviousPanel()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xEC84C8", Offset = "0xEC84C8", VA = "0xEC84C8")]
	public void ClosePanel()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xEC8544", Offset = "0xEC8544", VA = "0xEC8544")]
	private void CheckIfFollowUp(TutoState previous)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xEC97B0", Offset = "0xEC97B0", VA = "0xEC97B0")]
	public void AddEventToCheck(TutoState tutoState)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xEC931C", Offset = "0xEC931C", VA = "0xEC931C")]
	private void InitPanel()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xEC98E4", Offset = "0xEC98E4", VA = "0xEC98E4")]
	public void TutoComfirmation(bool b)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xEC80EC", Offset = "0xEC80EC", VA = "0xEC80EC")]
	private void OpenPanel()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xEC9F64", Offset = "0xEC9F64", VA = "0xEC9F64")]
	public bool HasProjectBeenTriggered(TutoState tutoState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xECA070", Offset = "0xECA070", VA = "0xECA070")]
	public bool IsInState(TutoState tutoState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xECA080", Offset = "0xECA080", VA = "0xECA080")]
	public bool IsInOneOfStates(params TutoState[] tutoStates)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xECA0D0", Offset = "0xECA0D0", VA = "0xECA0D0")]
	internal void OpenGuidePanel()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xECA148", Offset = "0xECA148", VA = "0xECA148")]
	public TutorialManager()
	{
	}
}
[Token(Token = "0x2000252")]
public enum TutoState
{
	[Token(Token = "0x4000D75")]
	None,
	[Token(Token = "0x4000D76")]
	Home0,
	[Token(Token = "0x4000D77")]
	Archi0,
	[Token(Token = "0x4000D78")]
	ArchiA,
	[Token(Token = "0x4000D79")]
	ArchiB,
	[Token(Token = "0x4000D7A")]
	ArchiB2,
	[Token(Token = "0x4000D7B")]
	ArchiB3,
	[Token(Token = "0x4000D7C")]
	ArchiC,
	[Token(Token = "0x4000D7D")]
	ArchiD,
	[Token(Token = "0x4000D7E")]
	ArchiE,
	[Token(Token = "0x4000D7F")]
	ArchiF,
	[Token(Token = "0x4000D80")]
	ArchiG,
	[Token(Token = "0x4000D81")]
	Projet0,
	[Token(Token = "0x4000D82")]
	Projet0b,
	[Token(Token = "0x4000D83")]
	ProjetA,
	[Token(Token = "0x4000D84")]
	ProjetB,
	[Token(Token = "0x4000D85")]
	ProjetC,
	[Token(Token = "0x4000D86")]
	ProjetD,
	[Token(Token = "0x4000D87")]
	ProjetE,
	[Token(Token = "0x4000D88")]
	ProjetF,
	[Token(Token = "0x4000D89")]
	ProjetG,
	[Token(Token = "0x4000D8A")]
	ArchiH,
	[Token(Token = "0x4000D8B")]
	ArchiI,
	[Token(Token = "0x4000D8C")]
	ProjetH,
	[Token(Token = "0x4000D8D")]
	ProjetI,
	[Token(Token = "0x4000D8E")]
	ProjetJ,
	[Token(Token = "0x4000D8F")]
	ProjetK,
	[Token(Token = "0x4000D90")]
	ProjetL,
	[Token(Token = "0x4000D91")]
	ProjetM,
	[Token(Token = "0x4000D92")]
	ProjetN,
	[Token(Token = "0x4000D93")]
	ProjetO,
	[Token(Token = "0x4000D94")]
	ProjetP,
	[Token(Token = "0x4000D95")]
	Multi0,
	[Token(Token = "0x4000D96")]
	MultiA,
	[Token(Token = "0x4000D97")]
	MultiB,
	[Token(Token = "0x4000D98")]
	HomeA,
	[Token(Token = "0x4000D99")]
	HomeB,
	[Token(Token = "0x4000D9A")]
	ProjetJ2,
	[Token(Token = "0x4000D9B")]
	Home0b,
	[Token(Token = "0x4000D9C")]
	ProjetLb,
	[Token(Token = "0x4000D9D")]
	ArchiA2,
	[Token(Token = "0x4000D9E")]
	ProjetQ
}
[Serializable]
[Token(Token = "0x2000253")]
public class TutoStatePopUp
{
	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Title;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TutoState state;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TutoStateSlide[] Slides;

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xECA880", Offset = "0xECA880", VA = "0xECA880")]
	public TutoStatePopUp()
	{
	}
}
[Serializable]
[Token(Token = "0x2000254")]
public class TutoStateSlide
{
	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string titre;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoClip video;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoClip videoCambria;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string L_description;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string R_description;

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xECA888", Offset = "0xECA888", VA = "0xECA888")]
	public TutoStateSlide()
	{
	}
}
[Token(Token = "0x2000255")]
public class TutoTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TutoState stateToTrigger;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xECA890", Offset = "0xECA890", VA = "0xECA890")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xECA958", Offset = "0xECA958", VA = "0xECA958")]
	public TutoTriggerEnter()
	{
	}
}
[Token(Token = "0x2000256")]
public class BatchDisplay : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	[CompilerGenerated]
	private sealed class <Progressive>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BatchDisplay <>4__this;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <index>5__2;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <displayQueueCount>5__3;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <displaying>5__4;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xECAD10", Offset = "0xECAD10", VA = "0xECAD10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xECAD58", Offset = "0xECAD58", VA = "0xECAD58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xECAB30", Offset = "0xECAB30", VA = "0xECAB30")]
		[DebuggerHidden]
		public <Progressive>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xECAB74", Offset = "0xECAB74", VA = "0xECAB74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xECAB78", Offset = "0xECAB78", VA = "0xECAB78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xECAD18", Offset = "0xECAD18", VA = "0xECAD18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int batchSize;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float delay;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<CanvasGroup> displayOrder;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine progressiveRoutine;

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xECA960", Offset = "0xECA960", VA = "0xECA960")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xECAA64", Offset = "0xECAA64", VA = "0xECAA64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xECAA68", Offset = "0xECAA68", VA = "0xECAA68")]
	private void DisplayAll()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xECAABC", Offset = "0xECAABC", VA = "0xECAABC")]
	[IteratorStateMachine(typeof(<Progressive>d__7))]
	private IEnumerator Progressive()
	{
		return null;
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xECAB58", Offset = "0xECAB58", VA = "0xECAB58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xECA964", Offset = "0xECA964", VA = "0xECA964")]
	private void DisableAll()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xECAB5C", Offset = "0xECAB5C", VA = "0xECAB5C")]
	public BatchDisplay()
	{
	}
}
[Token(Token = "0x2000258")]
public class ButtonSound : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerClickHandler
{
	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button btn;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isActionBtn;

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xECAD60", Offset = "0xECAD60", VA = "0xECAD60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xECAE20", Offset = "0xECAE20", VA = "0xECAE20", Slot = "5")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xECAEA8", Offset = "0xECAEA8", VA = "0xECAEA8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xECAF20", Offset = "0xECAF20", VA = "0xECAF20")]
	public ButtonSound()
	{
	}
}
[Token(Token = "0x2000259")]
public class ButtonTrigger : MonoBehaviour
{
	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button m_button;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button2 m_button2;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float delaytime;

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xECAF28", Offset = "0xECAF28", VA = "0xECAF28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xECAFD0", Offset = "0xECAFD0", VA = "0xECAFD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xECB004", Offset = "0xECB004", VA = "0xECB004")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xECB11C", Offset = "0xECB11C", VA = "0xECB11C")]
	public ButtonTrigger()
	{
	}
}
[Token(Token = "0x200025A")]
public class CastorController : MonoBehaviour
{
	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Animator anim;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool isSleeping;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool isWakingUp;

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xECB124", Offset = "0xECB124", VA = "0xECB124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xECB1AC", Offset = "0xECB1AC", VA = "0xECB1AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xECB290", Offset = "0xECB290", VA = "0xECB290")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xECBA3C", Offset = "0xECBA3C", VA = "0xECBA3C")]
	public static void Sleeping()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xECB9B4", Offset = "0xECB9B4", VA = "0xECB9B4")]
	public static void Idle()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xECB924", Offset = "0xECB924", VA = "0xECB924")]
	public static void Tired()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xECBACC", Offset = "0xECBACC", VA = "0xECBACC")]
	public static void Pocket()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xECBB58", Offset = "0xECBB58", VA = "0xECBB58")]
	public static void Cycle()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xECBBE4", Offset = "0xECBBE4", VA = "0xECBBE4")]
	public static void Object()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xECBC70", Offset = "0xECBC70", VA = "0xECBC70")]
	public static void WakeUp()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xECB828", Offset = "0xECB828", VA = "0xECB828")]
	public static void Paint()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xECB680", Offset = "0xECB680", VA = "0xECB680")]
	public static void Hammer()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xECB70C", Offset = "0xECB70C", VA = "0xECB70C")]
	public static void Truelle()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xECB79C", Offset = "0xECB79C", VA = "0xECB79C")]
	public static void Map()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xECB710", Offset = "0xECB710", VA = "0xECB710")]
	public static void Pipette()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xECBD00", Offset = "0xECBD00", VA = "0xECBD00")]
	public static void Multi()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xECBD8C", Offset = "0xECBD8C", VA = "0xECBD8C")]
	public CastorController()
	{
	}
}
[Token(Token = "0x200025B")]
public class ControlsManagement : MonoBehaviour
{
	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button leftHandedButton;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button rightHandedButton;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ColorBlock normalColorBlock;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ColorBlock selectedColorBlock;

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xECBD94", Offset = "0xECBD94", VA = "0xECBD94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xECBE24", Offset = "0xECBE24", VA = "0xECBE24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xECBF58", Offset = "0xECBF58", VA = "0xECBF58")]
	public void SwitchToRight()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xECC02C", Offset = "0xECC02C", VA = "0xECC02C")]
	public void SwitchToLeft()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xECC100", Offset = "0xECC100", VA = "0xECC100")]
	public ControlsManagement()
	{
	}
}
[Token(Token = "0x200025C")]
public class CycleController : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	[CompilerGenerated]
	private sealed class <AnimateSliderOverTime>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CycleController <>4__this;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float GoalValue;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <actualValue>5__2;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <duration>5__3;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <animationTime>5__4;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0xECC620", Offset = "0xECC620", VA = "0xECC620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0xECC668", Offset = "0xECC668", VA = "0xECC668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xECC498", Offset = "0xECC498", VA = "0xECC498")]
		[DebuggerHidden]
		public <AnimateSliderOverTime>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xECC4C8", Offset = "0xECC4C8", VA = "0xECC4C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xECC4CC", Offset = "0xECC4CC", VA = "0xECC4CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xECC628", Offset = "0xECC628", VA = "0xECC628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DayBtn;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject NightBtn;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CircleSlider circleSlider;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite[] cycleImages;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextSelector text;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image cycleSprite;

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xECC108", Offset = "0xECC108", VA = "0xECC108")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xECC17C", Offset = "0xECC17C", VA = "0xECC17C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xECC378", Offset = "0xECC378", VA = "0xECC378")]
	public void Day()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xECC420", Offset = "0xECC420", VA = "0xECC420")]
	public void Dusk()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xECC448", Offset = "0xECC448", VA = "0xECC448")]
	public void Dawn()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xECC470", Offset = "0xECC470", VA = "0xECC470")]
	public void Night()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xECC39C", Offset = "0xECC39C", VA = "0xECC39C")]
	[IteratorStateMachine(typeof(<AnimateSliderOverTime>d__12))]
	public IEnumerator AnimateSliderOverTime(float GoalValue)
	{
		return null;
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xECC4C0", Offset = "0xECC4C0", VA = "0xECC4C0")]
	public CycleController()
	{
	}
}
[Token(Token = "0x200025E")]
public class FakeMenuSpawn : MenuSpawnBase
{
	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xECC670", Offset = "0xECC670", VA = "0xECC670")]
	public FakeMenuSpawn()
	{
	}
}
[Token(Token = "0x200025F")]
public class HandleUI : MonoBehaviour
{
	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLeftGrabbed;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isRightGrabed;

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xECC678", Offset = "0xECC678", VA = "0xECC678")]
	public HandleUI()
	{
	}
}
[Token(Token = "0x2000260")]
public class HoverUIHaptic : MonoBehaviour
{
	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button2 previousRight;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button2 previousLeft;

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xECC680", Offset = "0xECC680", VA = "0xECC680")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xECC960", Offset = "0xECC960", VA = "0xECC960")]
	public HoverUIHaptic()
	{
	}
}
[Token(Token = "0x2000261")]
public class LoadingScreen : MonoBehaviour
{
	[Token(Token = "0x2000262")]
	[CompilerGenerated]
	private sealed class <AsyncLoadMultiVisit>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScreen <>4__this;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <gameLevel>5__2;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private XMLSender <sender>5__3;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0xECE52C", Offset = "0xECE52C", VA = "0xECE52C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xECE574", Offset = "0xECE574", VA = "0xECE574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xECD980", Offset = "0xECD980", VA = "0xECD980")]
		[DebuggerHidden]
		public <AsyncLoadMultiVisit>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xECDF5C", Offset = "0xECDF5C", VA = "0xECDF5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xECDF60", Offset = "0xECDF60", VA = "0xECDF60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xECE534", Offset = "0xECE534", VA = "0xECE534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000263")]
	[CompilerGenerated]
	private sealed class <AsyncLoadingScreen>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScreen <>4__this;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <gameLevel>5__2;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xECEA5C", Offset = "0xECEA5C", VA = "0xECEA5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xECEAA4", Offset = "0xECEAA4", VA = "0xECEAA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xECD9A8", Offset = "0xECD9A8", VA = "0xECD9A8")]
		[DebuggerHidden]
		public <AsyncLoadingScreen>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xECE57C", Offset = "0xECE57C", VA = "0xECE57C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xECE580", Offset = "0xECE580", VA = "0xECE580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xECEA64", Offset = "0xECEA64", VA = "0xECEA64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000264")]
	[CompilerGenerated]
	private sealed class <AsyncLoadingHome>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScreen <>4__this;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fromMulti;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <gameLevel>5__2;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0xECF0BC", Offset = "0xECF0BC", VA = "0xECF0BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0xECF104", Offset = "0xECF104", VA = "0xECF104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xECD9D0", Offset = "0xECD9D0", VA = "0xECD9D0")]
		[DebuggerHidden]
		public <AsyncLoadingHome>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xECEAAC", Offset = "0xECEAAC", VA = "0xECEAAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xECEAB0", Offset = "0xECEAB0", VA = "0xECEAB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xECF0C4", Offset = "0xECF0C4", VA = "0xECF0C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000265")]
	[CompilerGenerated]
	private sealed class <AsyncFakeLoad>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingScreen <>4__this;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string LoadingScreen;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <Value>5__2;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xECF5AC", Offset = "0xECF5AC", VA = "0xECF5AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0xECF5F4", Offset = "0xECF5F4", VA = "0xECF5F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xECD9F8", Offset = "0xECD9F8", VA = "0xECD9F8")]
		[DebuggerHidden]
		public <AsyncFakeLoad>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xECF10C", Offset = "0xECF10C", VA = "0xECF10C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xECF110", Offset = "0xECF110", VA = "0xECF110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xECF5B4", Offset = "0xECF5B4", VA = "0xECF5B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image progressBar;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject progresstxt;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isLoading;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera camera;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isfadder;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CanvasGroup canvas;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float delay;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int defaultCulling;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string HomeSceneName;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string ProjectSceneName;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string MultiSceneName;

	[Token(Token = "0x1400001F")]
	public event Action OnLoadingEnd
	{
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xECC968", Offset = "0xECC968", VA = "0xECC968")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xECCA04", Offset = "0xECCA04", VA = "0xECCA04")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xECCAA0", Offset = "0xECCAA0", VA = "0xECCAA0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xECCE54", Offset = "0xECCE54", VA = "0xECCE54")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xECD2EC", Offset = "0xECD2EC", VA = "0xECD2EC")]
	public void Load()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xECD50C", Offset = "0xECD50C", VA = "0xECD50C")]
	public void BackMenu(bool fromMulti = false)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xECD7D8", Offset = "0xECD7D8", VA = "0xECD7D8")]
	public void LoadNew()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xECD884", Offset = "0xECD884", VA = "0xECD884")]
	public void MultiVisit()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xECD90C", Offset = "0xECD90C", VA = "0xECD90C")]
	[IteratorStateMachine(typeof(<AsyncLoadMultiVisit>d__21))]
	private IEnumerator AsyncLoadMultiVisit()
	{
		return null;
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xECD498", Offset = "0xECD498", VA = "0xECD498")]
	[IteratorStateMachine(typeof(<AsyncLoadingScreen>d__22))]
	private IEnumerator AsyncLoadingScreen()
	{
		return null;
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xECD750", Offset = "0xECD750", VA = "0xECD750")]
	[IteratorStateMachine(typeof(<AsyncLoadingHome>d__23))]
	private IEnumerator AsyncLoadingHome(bool fromMulti = false)
	{
		return null;
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xECCDC4", Offset = "0xECCDC4", VA = "0xECCDC4")]
	[IteratorStateMachine(typeof(<AsyncFakeLoad>d__24))]
	private IEnumerator AsyncFakeLoad(string LoadingScreen)
	{
		return null;
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xECDA20", Offset = "0xECDA20", VA = "0xECDA20")]
	public void Fade(float endvalue, float duration)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xECDA8C", Offset = "0xECDA8C", VA = "0xECDA8C")]
	public void FadeIn(float duration)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xECDA98", Offset = "0xECDA98", VA = "0xECDA98")]
	public void FadeOut(float duration)
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xECDAA4", Offset = "0xECDAA4", VA = "0xECDAA4")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xECDD60", Offset = "0xECDD60", VA = "0xECDD60")]
	private void EndLoading()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xECD398", Offset = "0xECD398", VA = "0xECD398")]
	public void ChooseXML()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xECDEAC", Offset = "0xECDEAC", VA = "0xECDEAC")]
	public LoadingScreen()
	{
	}
}
[Token(Token = "0x2000266")]
public class MaquetteMenu : MonoBehaviour
{
	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SubButtons;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SubPanels;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MaquetteMenu instance;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TabGroup MainTabs;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TabGroup SubTabs;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WatchNavigator watch;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject ouv_menu;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tools archiTools;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float offset;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Storey;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject ResetBtn;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button Object_Button;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button Ouv_Button;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button Up_Button;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button Down_Button;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button Undo_Button;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button Redo_Button;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button Construction_Button;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject CanvasGo;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color Grey;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float storeyStartPos;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float resetStartPos;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TabButton[] wallAndFoundation;

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xECF5FC", Offset = "0xECF5FC", VA = "0xECF5FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xECF87C", Offset = "0xECF87C", VA = "0xECF87C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xECF900", Offset = "0xECF900", VA = "0xECF900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xECFB3C", Offset = "0xECFB3C", VA = "0xECFB3C")]
	private void ToggleButton()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xED01B0", Offset = "0xED01B0", VA = "0xED01B0")]
	private void ToggleStorey()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xECFF3C", Offset = "0xECFF3C", VA = "0xECFF3C")]
	private void ToggleUndoRedo()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xECFE80", Offset = "0xECFE80", VA = "0xECFE80")]
	private void ToggleFurnishing()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xECFBA4", Offset = "0xECFBA4", VA = "0xECFBA4")]
	private void ToggleConstruction()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xED05B8", Offset = "0xED05B8", VA = "0xED05B8")]
	public void ToggleSub()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xED08D8", Offset = "0xED08D8", VA = "0xED08D8")]
	public void StoreyUp()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xED093C", Offset = "0xED093C", VA = "0xED093C")]
	public void StoreyDown()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xED09A0", Offset = "0xED09A0", VA = "0xED09A0")]
	public void SetWallHeight(int i)
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xED0A80", Offset = "0xED0A80", VA = "0xED0A80")]
	public void SetRoomHeight(int i)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xED0B34", Offset = "0xED0B34", VA = "0xED0B34")]
	public void SetDestroyWall()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xED0B50", Offset = "0xED0B50", VA = "0xED0B50")]
	public void SetCreateFloor()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xED0B6C", Offset = "0xED0B6C", VA = "0xED0B6C")]
	public void ToggleObjectMenu()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xED0BA8", Offset = "0xED0BA8", VA = "0xED0BA8")]
	public void ToggleOuvertureMenu()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xED0BE4", Offset = "0xED0BE4", VA = "0xED0BE4")]
	public void ResetTransform()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xED083C", Offset = "0xED083C", VA = "0xED083C")]
	public void ResetSub()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xED03FC", Offset = "0xED03FC", VA = "0xED03FC")]
	public void EnableObject()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xED0260", Offset = "0xED0260", VA = "0xED0260")]
	public void DisableObject()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xED0C44", Offset = "0xED0C44", VA = "0xED0C44")]
	public void CallUndo()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xED0D0C", Offset = "0xED0D0C", VA = "0xED0D0C")]
	public void CallRedo()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xED0DDC", Offset = "0xED0DDC", VA = "0xED0DDC")]
	public void CallHelp()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xED0E3C", Offset = "0xED0E3C", VA = "0xED0E3C")]
	public void AutoSelect(TabButton btn)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xECFB64", Offset = "0xECFB64", VA = "0xECFB64")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xECFAFC", Offset = "0xECFAFC", VA = "0xECFAFC")]
	public void HideUI()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xED0ECC", Offset = "0xED0ECC", VA = "0xED0ECC")]
	public MaquetteMenu()
	{
	}
}
[Token(Token = "0x2000268")]
public class MenuContextuel : MonoBehaviour
{
	[Token(Token = "0x2000269")]
	[CompilerGenerated]
	private sealed class <WaitBeforeUndo>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0xED1EC4", Offset = "0xED1EC4", VA = "0xED1EC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB3")]
			[Address(RVA = "0xED1F0C", Offset = "0xED1F0C", VA = "0xED1F0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xED127C", Offset = "0xED127C", VA = "0xED127C")]
		[DebuggerHidden]
		public <WaitBeforeUndo>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xED1E28", Offset = "0xED1E28", VA = "0xED1E28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xED1E2C", Offset = "0xED1E2C", VA = "0xED1E2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xED1ECC", Offset = "0xED1ECC", VA = "0xED1ECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026A")]
	[CompilerGenerated]
	private sealed class <WaitBeforeRedo>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xED1FB0", Offset = "0xED1FB0", VA = "0xED1FB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0xED1FF8", Offset = "0xED1FF8", VA = "0xED1FF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xED13F0", Offset = "0xED13F0", VA = "0xED13F0")]
		[DebuggerHidden]
		public <WaitBeforeRedo>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xED1F14", Offset = "0xED1F14", VA = "0xED1F14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xED1F18", Offset = "0xED1F18", VA = "0xED1F18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xED1FB8", Offset = "0xED1FB8", VA = "0xED1FB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026B")]
	[CompilerGenerated]
	private sealed class <DelayDelete>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700018C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0xED2138", Offset = "0xED2138", VA = "0xED2138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0xED2180", Offset = "0xED2180", VA = "0xED2180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xED17D8", Offset = "0xED17D8", VA = "0xED17D8")]
		[DebuggerHidden]
		public <DelayDelete>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xED2000", Offset = "0xED2000", VA = "0xED2000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xED2004", Offset = "0xED2004", VA = "0xED2004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xED2140", Offset = "0xED2140", VA = "0xED2140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Button Undo;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public Button Redo;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Button Pocket;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Button Duplicate;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Button Scale;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public Button Reset;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public Button Delete;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject undoRedoHolder;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuContextuel instance;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MenuSpawn menuSpawn;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SelectedInfoManager info;

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xED0F78", Offset = "0xED0F78", VA = "0xED0F78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xED1094", Offset = "0xED1094", VA = "0xED1094")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xED1138", Offset = "0xED1138", VA = "0xED1138")]
	public void CallUndo()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xED121C", Offset = "0xED121C", VA = "0xED121C")]
	[IteratorStateMachine(typeof(<WaitBeforeUndo>d__14))]
	private IEnumerator WaitBeforeUndo()
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xED12A4", Offset = "0xED12A4", VA = "0xED12A4")]
	public void CallRedo()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xED1390", Offset = "0xED1390", VA = "0xED1390")]
	[IteratorStateMachine(typeof(<WaitBeforeRedo>d__16))]
	private IEnumerator WaitBeforeRedo()
	{
		return null;
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xED1418", Offset = "0xED1418", VA = "0xED1418")]
	public void CallPocket()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xED14FC", Offset = "0xED14FC", VA = "0xED14FC")]
	public void CallDuplication()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xED1618", Offset = "0xED1618", VA = "0xED1618")]
	public void CallScale()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xED1708", Offset = "0xED1708", VA = "0xED1708")]
	public void CallDeletion()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xED1778", Offset = "0xED1778", VA = "0xED1778")]
	[IteratorStateMachine(typeof(<DelayDelete>d__21))]
	private IEnumerator DelayDelete()
	{
		return null;
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xED1800", Offset = "0xED1800", VA = "0xED1800")]
	public void UpdateUI(GameObject obj, bool isNew)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xED1D28", Offset = "0xED1D28", VA = "0xED1D28")]
	private void ToggleUndoRedoHolder()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xED1E20", Offset = "0xED1E20", VA = "0xED1E20")]
	public MenuContextuel()
	{
	}
}
[Token(Token = "0x200026C")]
public abstract class MenuLoaderBase : MonoBehaviour
{
	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected DataBaseManager DBM;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool isLoadRunning;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	protected bool isInstanceRunning;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GameObject previousPrefab;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected string currentLoadingCat;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Coroutine currentRoutine;

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xED2188", Offset = "0xED2188", VA = "0xED2188", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xED2204", Offset = "0xED2204", VA = "0xED2204")]
	public void LoadDisplay(Button2 button)
	{
	}

	[Token(Token = "0x6000EC2")]
	public abstract void CleanDisplay();

	[Token(Token = "0x6000EC3")]
	protected abstract IEnumerator Load(string buttonName);

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xED2304", Offset = "0xED2304", VA = "0xED2304")]
	protected void StopLoad()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xED23B4", Offset = "0xED23B4", VA = "0xED23B4")]
	protected MenuLoaderBase()
	{
	}
}
[Token(Token = "0x200026D")]
public abstract class MenuLoaderBaseObject : MenuLoaderBase
{
	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int count;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int batch;

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xED23BC", Offset = "0xED23BC", VA = "0xED23BC")]
	public void PrefabInstance(Button2 button)
	{
	}

	[Token(Token = "0x6000EC7")]
	public abstract void Back();

	[Token(Token = "0x6000EC8")]
	protected abstract IEnumerator Instance(Button2 button);

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xED26CC", Offset = "0xED26CC", VA = "0xED26CC")]
	protected MenuLoaderBaseObject()
	{
	}
}
[Token(Token = "0x200026E")]
public class OuvertureMenuLoader : MenuLoaderBaseObject
{
	[Token(Token = "0x200026F")]
	private enum EStairType
	{
		[Token(Token = "0x4000E31")]
		None,
		[Token(Token = "0x4000E32")]
		Straight,
		[Token(Token = "0x4000E33")]
		U_Shaped,
		[Token(Token = "0x4000E34")]
		L_Shaped,
		[Token(Token = "0x4000E35")]
		Spiral
	}

	[Token(Token = "0x2000270")]
	[CompilerGenerated]
	private sealed class <Load>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OuvertureMenuLoader <>4__this;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string buttonName;

		[Token(Token = "0x17000190")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xED3BCC", Offset = "0xED3BCC", VA = "0xED3BCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xED3C14", Offset = "0xED3C14", VA = "0xED3C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xED34E8", Offset = "0xED34E8", VA = "0xED34E8")]
		[DebuggerHidden]
		public <Load>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xED3770", Offset = "0xED3770", VA = "0xED3770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xED3774", Offset = "0xED3774", VA = "0xED3774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xED3BD4", Offset = "0xED3BD4", VA = "0xED3BD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000272")]
	[CompilerGenerated]
	private sealed class <Instance>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OuvertureMenuLoader <>4__this;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button2 button;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <prefab>5__2;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <CurrentObject>5__3;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0xED5594", Offset = "0xED5594", VA = "0xED5594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0xED55DC", Offset = "0xED55DC", VA = "0xED55DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xED35A0", Offset = "0xED35A0", VA = "0xED35A0")]
		[DebuggerHidden]
		public <Instance>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xED3C50", Offset = "0xED3C50", VA = "0xED3C50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xED3C54", Offset = "0xED3C54", VA = "0xED3C54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xED559C", Offset = "0xED559C", VA = "0xED559C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[CompilerGenerated]
	private sealed class <LoadSelection>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Category;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OuvertureMenuLoader <>4__this;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDataReader <reader>5__2;

		[Token(Token = "0x17000194")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0xED5D04", Offset = "0xED5D04", VA = "0xED5D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0xED5D4C", Offset = "0xED5D4C", VA = "0xED5D4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xED3738", Offset = "0xED3738", VA = "0xED3738")]
		[DebuggerHidden]
		public <LoadSelection>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xED55E4", Offset = "0xED55E4", VA = "0xED55E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xED55E8", Offset = "0xED55E8", VA = "0xED55E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xED5D0C", Offset = "0xED5D0C", VA = "0xED5D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject prefabBtn;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject content;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject stairsContent;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject stairPage;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject selectedPage;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject stairsHolder;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TabButton stairsBtn;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TabButton doorsBtn;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TabGroup categorieTabGroup;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TabGroup stairTabGroup;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private EStairType selectedStairType;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private string LoadedCategory;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<StairsFamily> stairsList;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject previousprefab;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 previousPrefabSpawnPosition;

	[Token(Token = "0x1700018E")]
	private bool isStairBtnShouldBeActive
	{
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xED26DC", Offset = "0xED26DC", VA = "0xED26DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018F")]
	private bool isStairBtnShouldBeInteractable
	{
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xED2738", Offset = "0xED2738", VA = "0xED2738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xED27AC", Offset = "0xED27AC", VA = "0xED27AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xED28C8", Offset = "0xED28C8", VA = "0xED28C8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xED29A8", Offset = "0xED29A8", VA = "0xED29A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xED2A30", Offset = "0xED2A30", VA = "0xED2A30", Slot = "7")]
	public override void Back()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xED2A34", Offset = "0xED2A34", VA = "0xED2A34", Slot = "5")]
	public override void CleanDisplay()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xED2E08", Offset = "0xED2E08", VA = "0xED2E08")]
	public void LoadSelectionBtn(string cat)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xED3058", Offset = "0xED3058", VA = "0xED3058")]
	public void SelectedType(string type)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xED3458", Offset = "0xED3458", VA = "0xED3458", Slot = "6")]
	[IteratorStateMachine(typeof(<Load>d__27))]
	protected override IEnumerator Load(string buttonName)
	{
		return null;
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xED3510", Offset = "0xED3510", VA = "0xED3510", Slot = "8")]
	[IteratorStateMachine(typeof(<Instance>d__28))]
	protected override IEnumerator Instance(Button2 button)
	{
		return null;
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xED2820", Offset = "0xED2820", VA = "0xED2820")]
	private void ToggleStairs()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xED3688", Offset = "0xED3688", VA = "0xED3688")]
	private void ToggleStairPage()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xED35C8", Offset = "0xED35C8", VA = "0xED35C8")]
	private void ToggleStairsBtn()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xED2FA4", Offset = "0xED2FA4", VA = "0xED2FA4")]
	private void OpenStairsPanel()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xED30A8", Offset = "0xED30A8", VA = "0xED30A8")]
	private void CleanStairsDisplay()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xED2838", Offset = "0xED2838", VA = "0xED2838")]
	[IteratorStateMachine(typeof(<LoadSelection>d__34))]
	private IEnumerator LoadSelection(string Category)
	{
		return null;
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xED3760", Offset = "0xED3760", VA = "0xED3760")]
	public OuvertureMenuLoader()
	{
	}
}
[Token(Token = "0x2000274")]
public class PocketMenuLoader : MenuLoaderBase
{
	[Token(Token = "0x2000275")]
	[CompilerGenerated]
	private sealed class <Load>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PocketMenuLoader <>4__this;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0xED7F14", Offset = "0xED7F14", VA = "0xED7F14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0xED7F5C", Offset = "0xED7F5C", VA = "0xED7F5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xED6194", Offset = "0xED6194", VA = "0xED6194")]
		[DebuggerHidden]
		public <Load>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xED76E4", Offset = "0xED76E4", VA = "0xED76E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xED76E8", Offset = "0xED76E8", VA = "0xED76E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xED7F1C", Offset = "0xED7F1C", VA = "0xED7F1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000276")]
	[CompilerGenerated]
	private sealed class <SelectObject>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button2 button;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PocketMenuLoader <>4__this;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <go>5__2;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0xED8450", Offset = "0xED8450", VA = "0xED8450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0xED8498", Offset = "0xED8498", VA = "0xED8498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xED641C", Offset = "0xED641C", VA = "0xED641C")]
		[DebuggerHidden]
		public <SelectObject>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xED7F64", Offset = "0xED7F64", VA = "0xED7F64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xED7F68", Offset = "0xED7F68", VA = "0xED7F68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xED8458", Offset = "0xED8458", VA = "0xED8458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform pocketsParent;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Content;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IDataReader reader;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int PocketCount;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Button2 previousButton;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Sprite Empty;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Button2[] pockets;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isLoadingObject;

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xED5D54", Offset = "0xED5D54", VA = "0xED5D54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xED5EDC", Offset = "0xED5EDC", VA = "0xED5EDC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xED6120", Offset = "0xED6120", VA = "0xED6120", Slot = "6")]
	[IteratorStateMachine(typeof(<Load>d__10))]
	protected override IEnumerator Load(string buttonName)
	{
		return null;
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xED61BC", Offset = "0xED61BC", VA = "0xED61BC")]
	public void SelectFromPocket(Button2 button)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xED638C", Offset = "0xED638C", VA = "0xED638C")]
	[IteratorStateMachine(typeof(<SelectObject>d__12))]
	private IEnumerator SelectObject(Button2 button)
	{
		return null;
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xED6444", Offset = "0xED6444", VA = "0xED6444")]
	public void ContinueSelect(Button2 button)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xED6DDC", Offset = "0xED6DDC", VA = "0xED6DDC", Slot = "5")]
	public override void CleanDisplay()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xED6098", Offset = "0xED6098", VA = "0xED6098")]
	public void RemoveFromPocket(Button2 button)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xED72A4", Offset = "0xED72A4", VA = "0xED72A4")]
	private void RemoveFromPocketNetworked(Button2 button)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xED7120", Offset = "0xED7120", VA = "0xED7120")]
	private void RemoveFromPocketLocal(Button2 button)
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xED605C", Offset = "0xED605C", VA = "0xED605C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xED74E4", Offset = "0xED74E4", VA = "0xED74E4")]
	public Button2 GetButtonAtIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xED7514", Offset = "0xED7514", VA = "0xED7514")]
	public Sprite GetEmptySprite()
	{
		return null;
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xED751C", Offset = "0xED751C", VA = "0xED751C")]
	public void SetPreviousPrefabNull()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xED7528", Offset = "0xED7528", VA = "0xED7528")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xED7604", Offset = "0xED7604", VA = "0xED7604")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xED76DC", Offset = "0xED76DC", VA = "0xED76DC")]
	public PocketMenuLoader()
	{
	}
}
[Token(Token = "0x2000277")]
public class SelectedMenuLoader : MenuLoaderBaseObject
{
	[Token(Token = "0x2000278")]
	[CompilerGenerated]
	private sealed class <Load>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectedMenuLoader <>4__this;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDataReader <reader>5__2;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <tmp>5__3;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xED9700", Offset = "0xED9700", VA = "0xED9700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0xED9748", Offset = "0xED9748", VA = "0xED9748", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xED87A4", Offset = "0xED87A4", VA = "0xED87A4")]
		[DebuggerHidden]
		public <Load>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xED8CD0", Offset = "0xED8CD0", VA = "0xED8CD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xED8CD4", Offset = "0xED8CD4", VA = "0xED8CD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xED9708", Offset = "0xED9708", VA = "0xED9708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000279")]
	[CompilerGenerated]
	private sealed class <Instance>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectedMenuLoader <>4__this;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button2 button;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <prefab>5__2;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <CurrentObject>5__3;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0xEDAFA4", Offset = "0xEDAFA4", VA = "0xEDAFA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0xEDAFEC", Offset = "0xEDAFEC", VA = "0xEDAFEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xED8868", Offset = "0xED8868", VA = "0xED8868")]
		[DebuggerHidden]
		public <Instance>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xED9750", Offset = "0xED9750", VA = "0xED9750", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xED9754", Offset = "0xED9754", VA = "0xED9754", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xEDAFAC", Offset = "0xEDAFAC", VA = "0xEDAFAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject prefabBtn;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Content;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject RoomPage;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject FurniturePage;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject SelectedPage;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject previousprefab;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 previousPrefabSpawnPosition;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button BackBtn;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isRoomLoaded;

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xED84A0", Offset = "0xED84A0", VA = "0xED84A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xED8524", Offset = "0xED8524", VA = "0xED8524")]
	public void LoadPage(string pagename)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xED8654", Offset = "0xED8654", VA = "0xED8654", Slot = "7")]
	public override void Back()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xED8714", Offset = "0xED8714", VA = "0xED8714", Slot = "6")]
	[IteratorStateMachine(typeof(<Load>d__12))]
	protected override IEnumerator Load(string name)
	{
		return null;
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xED87CC", Offset = "0xED87CC", VA = "0xED87CC")]
	public void BackPage(bool room)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xED87D8", Offset = "0xED87D8", VA = "0xED87D8", Slot = "8")]
	[IteratorStateMachine(typeof(<Instance>d__14))]
	protected override IEnumerator Instance(Button2 button)
	{
		return null;
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xED8890", Offset = "0xED8890", VA = "0xED8890", Slot = "5")]
	public override void CleanDisplay()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xED8C3C", Offset = "0xED8C3C", VA = "0xED8C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xED8CC0", Offset = "0xED8CC0", VA = "0xED8CC0")]
	public SelectedMenuLoader()
	{
	}
}
[Token(Token = "0x200027A")]
public class TextureMenuLoader : MenuLoaderBase
{
	[Token(Token = "0x200027B")]
	[CompilerGenerated]
	private sealed class <Load>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureMenuLoader <>4__this;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDataReader <reader>5__2;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <tmp>5__3;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xEDBDEC", Offset = "0xEDBDEC", VA = "0xEDBDEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0xEDBE34", Offset = "0xEDBE34", VA = "0xEDBE34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xEDB10C", Offset = "0xEDB10C", VA = "0xEDB10C")]
		[DebuggerHidden]
		public <Load>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xEDB844", Offset = "0xEDB844", VA = "0xEDB844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xEDB848", Offset = "0xEDB848", VA = "0xEDB848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xEDBDF4", Offset = "0xEDBDF4", VA = "0xEDBDF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject prefabBtn;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Content;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material SelectedMat;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PistolScreen PistolUI;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite SelectedSprite;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject CatPage;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject SelectedPage;

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xEDAFF4", Offset = "0xEDAFF4", VA = "0xEDAFF4")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xEDB07C", Offset = "0xEDB07C", VA = "0xEDB07C", Slot = "6")]
	[IteratorStateMachine(typeof(<Load>d__8))]
	protected override IEnumerator Load(string name)
	{
		return null;
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xEDB134", Offset = "0xEDB134", VA = "0xEDB134")]
	public void GetMaterial(Button2 btn)
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xEDB380", Offset = "0xEDB380", VA = "0xEDB380", Slot = "5")]
	public override void CleanDisplay()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xEDB730", Offset = "0xEDB730", VA = "0xEDB730")]
	public void Back()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xEDB7D4", Offset = "0xEDB7D4", VA = "0xEDB7D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xEDB83C", Offset = "0xEDB83C", VA = "0xEDB83C")]
	public TextureMenuLoader()
	{
	}
}
[Token(Token = "0x200027C")]
public class MenuOffset : MonoBehaviour
{
	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuOffset instance;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ModalPopUp rigPopUp;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform MenuTransform;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startRot;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isInit;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MenuSpawn[] menuSpawns;

	[Token(Token = "0x170001A0")]
	public Vector3 StartRot
	{
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xEDBE3C", Offset = "0xEDBE3C", VA = "0xEDBE3C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xEDBE48", Offset = "0xEDBE48", VA = "0xEDBE48")]
		set
		{
		}
	}

	[Token(Token = "0x170001A1")]
	public bool IsAMenuActive
	{
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xECB8B4", Offset = "0xECB8B4", VA = "0xECB8B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A2")]
	public ModalPopUp RigPopUp
	{
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xEDBE54", Offset = "0xEDBE54", VA = "0xEDBE54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xEDBE5C", Offset = "0xEDBE5C", VA = "0xEDBE5C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public MenuSpawn[] MenuSpawns
	{
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xEDBE64", Offset = "0xEDBE64", VA = "0xEDBE64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xEDBE6C", Offset = "0xEDBE6C", VA = "0xEDBE6C")]
		set
		{
		}
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xEDBE74", Offset = "0xEDBE74", VA = "0xEDBE74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xEDBF50", Offset = "0xEDBF50", VA = "0xEDBF50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xEDC078", Offset = "0xEDC078", VA = "0xEDC078")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xEC9A98", Offset = "0xEC9A98", VA = "0xEC9A98")]
	public void ResetOffset()
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xED24D4", Offset = "0xED24D4", VA = "0xED24D4")]
	public void CloseAll()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xEDC108", Offset = "0xEDC108", VA = "0xEDC108")]
	public MenuOffset()
	{
	}
}
[Token(Token = "0x200027D")]
[RequireComponent(typeof(Canvas))]
public class MenuSpawn : MenuSpawnBase
{
	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject firstMenuSpawn;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas canvas;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float offset;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button pocketBtn;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Tween currentTween;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float animTime;

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xEDD110", Offset = "0xEDD110", VA = "0xEDD110")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xEDD20C", Offset = "0xEDD20C", VA = "0xEDD20C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xEDD974", Offset = "0xEDD974", VA = "0xEDD974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xEDDAB0", Offset = "0xEDDAB0", VA = "0xEDDAB0")]
	public void SpawnMenu(bool activateUnselect = true)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xEDDD54", Offset = "0xEDDD54", VA = "0xEDDD54")]
	public void SpawnContextualMenu()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xEDE0E0", Offset = "0xEDE0E0", VA = "0xEDE0E0")]
	public void SpawnContextualMenuInHand()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xEDD7D4", Offset = "0xEDD7D4", VA = "0xEDD7D4")]
	public void FadeOut(bool CloseByUser = false)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xEDE4A4", Offset = "0xEDE4A4", VA = "0xEDE4A4")]
	public void FadeOutContextualMenu()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xEDE4C8", Offset = "0xEDE4C8", VA = "0xEDE4C8")]
	public void ResetMenu()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xEDD5F4", Offset = "0xEDD5F4", VA = "0xEDD5F4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xEDE368", Offset = "0xEDE368", VA = "0xEDE368")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xEDE574", Offset = "0xEDE574", VA = "0xEDE574")]
	public MenuSpawn()
	{
	}
}
[Token(Token = "0x200027F")]
public class MenuSpawnBase : MonoBehaviour
{
	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xEDE588", Offset = "0xEDE588", VA = "0xEDE588")]
	public MenuSpawnBase()
	{
	}
}
[Token(Token = "0x2000280")]
public class ModalPopUp : MonoBehaviour
{
	[Token(Token = "0x2000281")]
	public enum PatchType
	{
		[Token(Token = "0x4000E99")]
		Update,
		[Token(Token = "0x4000E9A")]
		Delete,
		[Token(Token = "0x4000E9B")]
		Upload
	}

	[Token(Token = "0x2000282")]
	public enum IconSelector
	{
		[Token(Token = "0x4000E9D")]
		Error,
		[Token(Token = "0x4000E9E")]
		Valid,
		[Token(Token = "0x4000E9F")]
		House,
		[Token(Token = "0x4000EA0")]
		Blue,
		[Token(Token = "0x4000EA1")]
		Multi
	}

	[Token(Token = "0x2000283")]
	public enum MiniPopUpType
	{
		[Token(Token = "0x4000EA3")]
		Multi,
		[Token(Token = "0x4000EA4")]
		MR
	}

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject PopUp;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider PopUpCollider;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MiniPopUp miniPopUp;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform PopupRect;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Background")]
	[SerializeField]
	private Image Background;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite[] BGSprites;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[Header("Icon")]
	private Image Icon;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite[] IconSprites;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[Header("Header")]
	[Space]
	private TextSelector HeaderTMP;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[Space]
	[Header("Content")]
	private TextSelector ContentTMP;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TMP_InputField contentInputField;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TMP_Text FBCodeTMP;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Space]
	[Header("Footer")]
	[SerializeField]
	private Button Btn1;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextSelector Btn1TMP;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Button Btn2;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextSelector Btn2TMP;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UnityAction onBtn1Click;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UnityAction onBtn2Click;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 Normalpos;

	[Token(Token = "0x170001A4")]
	public TMP_InputField ContentInputField
	{
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xEDE630", Offset = "0xEDE630", VA = "0xEDE630")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xEDE638", Offset = "0xEDE638", VA = "0xEDE638")]
		set
		{
		}
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xEDE640", Offset = "0xEDE640", VA = "0xEDE640")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xEDE660", Offset = "0xEDE660", VA = "0xEDE660")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xEDE804", Offset = "0xEDE804", VA = "0xEDE804")]
	private void EnablePopUpCanvas(bool resetOffset = true)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xEDE980", Offset = "0xEDE980", VA = "0xEDE980")]
	private void EnablePopUpGO(bool enableMiniPopUp)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xEDE9B8", Offset = "0xEDE9B8", VA = "0xEDE9B8")]
	public void Btn1Click()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xEDEA94", Offset = "0xEDEA94", VA = "0xEDEA94")]
	public void Btn2Click()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xEDE9E8", Offset = "0xEDE9E8", VA = "0xEDE9E8")]
	public void Close()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xEDEAC4", Offset = "0xEDEAC4", VA = "0xEDEAC4")]
	public void ShowMiniPopUpWait(string waitMessageId, string doneMessageTitle, MiniPopUpType type, [Optional] string customInfo, [Optional] string doneMessageId)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xEDEB4C", Offset = "0xEDEB4C", VA = "0xEDEB4C")]
	public void UpdateMiniPopCustomInfo(string customInfo)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xEDEB68", Offset = "0xEDEB68", VA = "0xEDEB68")]
	public void CloseMiniPopUpMR()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xEDEBA4", Offset = "0xEDEBA4", VA = "0xEDEBA4")]
	public void ShowComfirm(IconSelector icon, string headerTxt, string contenttxt, UnityAction BtnAction1)
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xEDEDEC", Offset = "0xEDEDEC", VA = "0xEDEDEC")]
	public void ShowErrorPopUp(string headerTxt, string contenttxt)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xEDF0C0", Offset = "0xEDF0C0", VA = "0xEDF0C0")]
	public void ShowFBRequest(string code)
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xEDF1A4", Offset = "0xEDF1A4", VA = "0xEDF1A4")]
	public void ShowConnectionErrorPopUp()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xEDF398", Offset = "0xEDF398", VA = "0xEDF398")]
	public void ShowSuccesPatch(bool isUpload)
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xEDF4A8", Offset = "0xEDF4A8", VA = "0xEDF4A8")]
	public void ShowLauncherPopUp(UnityAction Validate)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xEDF7F4", Offset = "0xEDF7F4", VA = "0xEDF7F4")]
	public void ShowEditPopUp(UnityAction Validate)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xEDFAE8", Offset = "0xEDFAE8", VA = "0xEDFAE8")]
	public void ShowResetPasswordPopup(UnityAction Validate)
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xEDEE58", Offset = "0xEDEE58", VA = "0xEDEE58")]
	public void ShowCustomInfo(IconSelector icon, string headerTxt, string contenttxt, string btn1txt, [Optional] UnityAction BtnAction, [Optional] string code)
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xEDF5B8", Offset = "0xEDF5B8", VA = "0xEDF5B8")]
	public void ShowCustomChoice(IconSelector icon, string headerTxt, string contenttxt, string btn1txt, string btn2txt, UnityAction BtnAction1, UnityAction BtnAction2, bool resetOffset = true)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xEDF8FC", Offset = "0xEDF8FC", VA = "0xEDF8FC")]
	public void ShowCustomInput(IconSelector icon, string headerTxt, string contenttxt, string btn1txt, string btn2txt, UnityAction BtnAction1, UnityAction BtnAction2)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xEDFBF0", Offset = "0xEDFBF0", VA = "0xEDFBF0")]
	public void WebRequestErrorCheck(UnityWebRequest req, bool isHD3DApi = true)
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xEE00E4", Offset = "0xEE00E4", VA = "0xEE00E4")]
	private void ResetBtn()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xEE0124", Offset = "0xEE0124", VA = "0xEE0124")]
	public ModalPopUp()
	{
	}
}
[Token(Token = "0x2000284")]
public class MultiMenu : MonoBehaviour
{
	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIKitInputField InputField;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject StartPage;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject MainPage;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject InputPage;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject NoCoPage;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TMP_Text TopTMP;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TMP_Text CodeTMP;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TMP_Text CounterTMP;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button CreateBtn;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Button QuitBtn;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Button SaveBtn;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Button BackBtn;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Button CloseBtn;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ModalPopUp Menupopup;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ModalPopUp Rigpopup;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isSaving;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private PlayerPanel[] Players;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string currentCode;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private InteractionAuthorization Auth;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private NetworkManager networkManager;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Player[] players;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int playersNb;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float delayBetweenSave;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastSave;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private MenuSpawn menuSpawn;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<string, Player> playersByID;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Dictionary<string, string> playersName;

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xEE013C", Offset = "0xEE013C", VA = "0xEE013C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xEE02D8", Offset = "0xEE02D8", VA = "0xEE02D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xEE07D8", Offset = "0xEE07D8", VA = "0xEE07D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xEE03DC", Offset = "0xEE03DC", VA = "0xEE03DC")]
	public void CheckPlayers()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xEE0CE4", Offset = "0xEE0CE4", VA = "0xEE0CE4")]
	public void RemovePlayerEvent(string player)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xEE102C", Offset = "0xEE102C", VA = "0xEE102C")]
	public void RemovePlayerInterface(string toRemove)
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xEE10E8", Offset = "0xEE10E8", VA = "0xEE10E8")]
	public void CodeError()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xEE1174", Offset = "0xEE1174", VA = "0xEE1174")]
	public void UserCreatedMulti()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xEE1200", Offset = "0xEE1200", VA = "0xEE1200")]
	public void SaveSuccess()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xEE1358", Offset = "0xEE1358", VA = "0xEE1358")]
	public void BackMenuFromMulti()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xEE1500", Offset = "0xEE1500", VA = "0xEE1500")]
	public void Quit(bool toMenu = false)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xEE1810", Offset = "0xEE1810", VA = "0xEE1810")]
	public void SaveSession()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xEE18F8", Offset = "0xEE18F8", VA = "0xEE18F8")]
	public void Close()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xEE1914", Offset = "0xEE1914", VA = "0xEE1914")]
	public void Back()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xEE1AB4", Offset = "0xEE1AB4", VA = "0xEE1AB4")]
	public void OpenInputPage()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xEE1B14", Offset = "0xEE1B14", VA = "0xEE1B14")]
	public void OpenStartPage()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xEE1B74", Offset = "0xEE1B74", VA = "0xEE1B74")]
	public void OpenMainPage()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xEE037C", Offset = "0xEE037C", VA = "0xEE037C")]
	public void NoInternetSetup()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xEE08D8", Offset = "0xEE08D8", VA = "0xEE08D8")]
	private void CleanMenu()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xEE09C4", Offset = "0xEE09C4", VA = "0xEE09C4")]
	private void AddNewPlayer(Player player)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xEE13D8", Offset = "0xEE13D8", VA = "0xEE13D8")]
	private void EndSession(bool toMenu = false)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xEE14E0", Offset = "0xEE14E0", VA = "0xEE14E0")]
	private void LeaveSession(bool toMenu = false)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xEE1CCC", Offset = "0xEE1CCC", VA = "0xEE1CCC")]
	private void HomeSetup()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xEE1D20", Offset = "0xEE1D20", VA = "0xEE1D20")]
	private void OfflineSetup()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xEE1D24", Offset = "0xEE1D24", VA = "0xEE1D24")]
	private void OnlineSetup()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xEE05AC", Offset = "0xEE05AC", VA = "0xEE05AC")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xEE1DB4", Offset = "0xEE1DB4", VA = "0xEE1DB4")]
	public MultiMenu()
	{
	}
}
[Token(Token = "0x2000286")]
public class PistolScreen : MonoBehaviour
{
	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image ScreenImage;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image ModeImage;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite StartImage;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite ImageMode1;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite ImageMode2;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite ImageMode3;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ScreenUI;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ScreenGo;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject PanelUI;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject PanelGo;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TextureMenuLoader Menu;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int ModeSelected;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isExpended;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ManagerTools.HandHolding Hand;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timer;

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xEE1FBC", Offset = "0xEE1FBC", VA = "0xEE1FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xEE20D0", Offset = "0xEE20D0", VA = "0xEE20D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xEE25A4", Offset = "0xEE25A4", VA = "0xEE25A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xEE20D4", Offset = "0xEE20D4", VA = "0xEE20D4")]
	private void CheckHand()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xEE26D4", Offset = "0xEE26D4", VA = "0xEE26D4")]
	public void ToggleMenu()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xEE288C", Offset = "0xEE288C", VA = "0xEE288C")]
	public void ToggleMode()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xEE29A0", Offset = "0xEE29A0", VA = "0xEE29A0")]
	public void Mode(int i)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xEE2A24", Offset = "0xEE2A24", VA = "0xEE2A24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xEE2A80", Offset = "0xEE2A80", VA = "0xEE2A80")]
	public PistolScreen()
	{
	}
}
[Token(Token = "0x2000287")]
public class PlayerPanel : MonoBehaviour
{
	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button ExcludeBtn;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image avatar;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text NameTMP;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MultiMenu Menu;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite DefaultAvatar;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Player player;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string Name;

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xEE2A90", Offset = "0xEE2A90", VA = "0xEE2A90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xEE1C78", Offset = "0xEE1C78", VA = "0xEE1C78")]
	public void SetPlayer(Player p)
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xEE1BD4", Offset = "0xEE1BD4", VA = "0xEE1BD4")]
	public void CleanPanel()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xEE2ABC", Offset = "0xEE2ABC", VA = "0xEE2ABC")]
	public void ExcludePlayer()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xEE2C10", Offset = "0xEE2C10", VA = "0xEE2C10")]
	private void FindAvatar()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xEE2C14", Offset = "0xEE2C14", VA = "0xEE2C14")]
	public PlayerPanel()
	{
	}
}
[Token(Token = "0x2000288")]
public class PopupForgotPassword : MonoBehaviour
{
	[Token(Token = "0x2000289")]
	[CompilerGenerated]
	private sealed class <PasswordResetRequest>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Json;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PopupForgotPassword <>4__this;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ErrorMessage <errorMessage>5__3;

		[Token(Token = "0x170001A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xEE3A30", Offset = "0xEE3A30", VA = "0xEE3A30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xEE3A78", Offset = "0xEE3A78", VA = "0xEE3A78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xEE3470", Offset = "0xEE3470", VA = "0xEE3470")]
		[DebuggerHidden]
		public <PasswordResetRequest>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xEE36BC", Offset = "0xEE36BC", VA = "0xEE36BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xEE36C0", Offset = "0xEE36C0", VA = "0xEE36C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xEE3A38", Offset = "0xEE3A38", VA = "0xEE3A38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject PopUp;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Header")]
	[SerializeField]
	private TextSelector header;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Content")]
	[SerializeField]
	[Space]
	private Image icon;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextSelector content;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TMP_InputField contentInputField;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextSelector error;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	[Header("Footer")]
	[SerializeField]
	private Button btnL;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button btnR;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnityAction onBtnLClick;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityAction onBtnRClick;

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xEE2C9C", Offset = "0xEE2C9C", VA = "0xEE2C9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xEE2CBC", Offset = "0xEE2CBC", VA = "0xEE2CBC")]
	private void EnablePopUpCanvas()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xEE2DF0", Offset = "0xEE2DF0", VA = "0xEE2DF0")]
	public void BtnLClick()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xEE2EAC", Offset = "0xEE2EAC", VA = "0xEE2EAC")]
	public void BtnRClick()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xEE2E20", Offset = "0xEE2E20", VA = "0xEE2E20")]
	public void Close()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xEE2EC8", Offset = "0xEE2EC8", VA = "0xEE2EC8")]
	public void ShowPopup()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xEE30D8", Offset = "0xEE30D8", VA = "0xEE30D8")]
	private void Failed()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xEE3104", Offset = "0xEE3104", VA = "0xEE3104")]
	private void Success()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xEE3294", Offset = "0xEE3294", VA = "0xEE3294")]
	private void PasswordReset()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xEE33E0", Offset = "0xEE33E0", VA = "0xEE33E0")]
	[IteratorStateMachine(typeof(<PasswordResetRequest>d__19))]
	private IEnumerator PasswordResetRequest(string Json)
	{
		return null;
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xEE3498", Offset = "0xEE3498", VA = "0xEE3498")]
	private bool CheckResult(UnityWebRequest Request)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xEE36B4", Offset = "0xEE36B4", VA = "0xEE36B4")]
	public PopupForgotPassword()
	{
	}
}
[Token(Token = "0x200028A")]
[CreateAssetMenu(fileName = "New PopUp", menuName = "PopUp")]
public class PopUpScriptable : ScriptableObject
{
	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ModalPopUp.IconSelector sprite;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Header")]
	[Space]
	public string HeaderText;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Content")]
	[Space]
	public string ContentText;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool asInputField;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool asFBCode;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space]
	[Header("Footer")]
	public string Btn1Txt;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Btn2Txt;

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xEE3A80", Offset = "0xEE3A80", VA = "0xEE3A80")]
	public PopUpScriptable()
	{
	}
}
[Token(Token = "0x200028B")]
public class ProximityActivation : MonoBehaviour
{
	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotation;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isUp;

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xEE3A88", Offset = "0xEE3A88", VA = "0xEE3A88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xEE3B04", Offset = "0xEE3B04", VA = "0xEE3B04")]
	public bool isNearUI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xEE3BD0", Offset = "0xEE3BD0", VA = "0xEE3BD0")]
	public ProximityActivation()
	{
	}
}
[Token(Token = "0x200028C")]
public class RedoButton : MonoBehaviour
{
	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xEE3BE0", Offset = "0xEE3BE0", VA = "0xEE3BE0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xEE3CFC", Offset = "0xEE3CFC", VA = "0xEE3CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xEE3D00", Offset = "0xEE3D00", VA = "0xEE3D00")]
	public RedoButton()
	{
	}
}
[Token(Token = "0x200028D")]
public class Reseter : MonoBehaviour
{
	[Token(Token = "0x200028E")]
	[CompilerGenerated]
	private sealed class <CheckForInvalidity>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VariationsDisplay variationsDisplay;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject toReset;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool hasResetScale;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Reseter <>4__this;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool hasResetVariation;

		[Token(Token = "0x170001A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0xEE4BDC", Offset = "0xEE4BDC", VA = "0xEE4BDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB8")]
			[Address(RVA = "0xEE4C24", Offset = "0xEE4C24", VA = "0xEE4C24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xEE450C", Offset = "0xEE450C", VA = "0xEE450C")]
		[DebuggerHidden]
		public <CheckForInvalidity>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xEE453C", Offset = "0xEE453C", VA = "0xEE453C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xEE4540", Offset = "0xEE4540", VA = "0xEE4540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xEE4BE4", Offset = "0xEE4BE4", VA = "0xEE4BE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xEE3D08", Offset = "0xEE3D08", VA = "0xEE3D08")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xEE4128", Offset = "0xEE4128", VA = "0xEE4128")]
	private void ResetScale(GameObject toReset)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xEE425C", Offset = "0xEE425C", VA = "0xEE425C")]
	private void NetworkedWallReset(GameObject toReset)
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xEE4390", Offset = "0xEE4390", VA = "0xEE4390")]
	private void LocalWallReset(GameObject toReset)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xEE4198", Offset = "0xEE4198", VA = "0xEE4198")]
	[IteratorStateMachine(typeof(<CheckForInvalidity>d__4))]
	private IEnumerator CheckForInvalidity(GameObject toReset, VariationsDisplay variationsDisplay, bool hasResetScale, bool hasResetVariation)
	{
		return null;
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xEE4534", Offset = "0xEE4534", VA = "0xEE4534")]
	public Reseter()
	{
	}
}
[Token(Token = "0x200028F")]
public class SelectedInfoManager : MonoBehaviour
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image Thumbnails;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject currentGo;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentvar;

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xEE4C2C", Offset = "0xEE4C2C", VA = "0xEE4C2C")]
	public void GetThumbnails(GameObject obj)
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xEE53E4", Offset = "0xEE53E4", VA = "0xEE53E4")]
	public SelectedInfoManager()
	{
	}
}
[Token(Token = "0x2000290")]
public class Settings : MonoBehaviour
{
	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Settings instance;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInit;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Navigation;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PagesHolder;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text LanguageText;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text VolumeTxt;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> langList;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> ButtonList;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject VolumeSlider;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int playerNumber;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public GameObject VignetteTxt;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject VignetteSlider;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private SimpleCapsuleWithStickMovement playerController;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private LocomotionHandler locomotionHandler;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ColorBlock normalColorBlock;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ColorBlock selectedColorBlock;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private ColorBlock disabledColorBlock;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool isLoaded;

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xEE53EC", Offset = "0xEE53EC", VA = "0xEE53EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xEE5CAC", Offset = "0xEE5CAC", VA = "0xEE5CAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xEE5D5C", Offset = "0xEE5D5C", VA = "0xEE5D5C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xEE54C4", Offset = "0xEE54C4", VA = "0xEE54C4")]
	private void SetupSettings()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xEE6474", Offset = "0xEE6474", VA = "0xEE6474")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xEE7140", Offset = "0xEE7140", VA = "0xEE7140")]
	private void OnLogIn(JsonConverter.User _user, Sprite _avatar)
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xEE5D6C", Offset = "0xEE5D6C", VA = "0xEE5D6C")]
	public void SettingPage(string page)
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xEE7960", Offset = "0xEE7960", VA = "0xEE7960")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xEE7968", Offset = "0xEE7968", VA = "0xEE7968")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xEE72D8", Offset = "0xEE72D8", VA = "0xEE72D8")]
	public void SwitchToRight()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xEE7618", Offset = "0xEE7618", VA = "0xEE7618")]
	public void SwitchToLeft()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xEE7978", Offset = "0xEE7978", VA = "0xEE7978")]
	public void UniteMesure(int value)
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xEE7E0C", Offset = "0xEE7E0C", VA = "0xEE7E0C")]
	public void TeleportationToggle(bool value)
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xEE82A0", Offset = "0xEE82A0", VA = "0xEE82A0")]
	public void RotationSnapToggle(bool value)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xEE8734", Offset = "0xEE8734", VA = "0xEE8734")]
	public void ChangeRotation(float value)
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xEE943C", Offset = "0xEE943C", VA = "0xEE943C")]
	public void FadeRotationToggle(bool value)
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xEE9B90", Offset = "0xEE9B90", VA = "0xEE9B90")]
	public void FadeTeleportToggle(bool value)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xEEA2E4", Offset = "0xEEA2E4", VA = "0xEEA2E4")]
	public void ChangeVignetteTxt(float value)
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xEEA3E8", Offset = "0xEEA3E8", VA = "0xEEA3E8")]
	public void EditingVignette(bool editing)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xEEA444", Offset = "0xEEA444", VA = "0xEEA444")]
	public void ChangeVignetteValue()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xEEA514", Offset = "0xEEA514", VA = "0xEEA514")]
	public void SetVignetteValue(float value)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xEEA780", Offset = "0xEEA780", VA = "0xEEA780")]
	public void HandHapticToggle(bool value)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xEEABC0", Offset = "0xEEABC0", VA = "0xEEABC0")]
	public void TooltipsToggle(bool value)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xEEB034", Offset = "0xEEB034", VA = "0xEEB034")]
	public void SetAutosave(int value)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xEEBF34", Offset = "0xEEBF34", VA = "0xEEBF34")]
	public void ChangeLanguage(string language)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xEEBF90", Offset = "0xEEBF90", VA = "0xEEBF90")]
	public void ChangeLanguageTxt(string txt)
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xEEC324", Offset = "0xEEC324", VA = "0xEEC324")]
	public void NextLanguage()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xEEC4AC", Offset = "0xEEC4AC", VA = "0xEEC4AC")]
	public void PreviousLanguage()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xEEC630", Offset = "0xEEC630", VA = "0xEEC630")]
	public void ChangeVolumeTxt()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xEEC710", Offset = "0xEEC710", VA = "0xEEC710")]
	public void ChangeVolume()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xEEC7E0", Offset = "0xEEC7E0", VA = "0xEEC7E0")]
	public void ChangeVolume(float add)
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xEEC8D0", Offset = "0xEEC8D0", VA = "0xEEC8D0")]
	public void SetVolume(float Volume)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xEEC9C0", Offset = "0xEEC9C0", VA = "0xEEC9C0")]
	public void ChangeMirrorResolution(int res)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xEECEE4", Offset = "0xEECEE4", VA = "0xEECEE4")]
	public void ChangeShadowQuality(int quality)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xEED82C", Offset = "0xEED82C", VA = "0xEED82C")]
	public void ChatToggle(bool value)
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xEEDCD4", Offset = "0xEEDCD4", VA = "0xEEDCD4")]
	public void AvatarsToggle(bool value)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xEEE148", Offset = "0xEEE148", VA = "0xEEE148")]
	public void ChangeMainScene(string v)
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xEEE5D4", Offset = "0xEEE5D4", VA = "0xEEE5D4")]
	public void SubtitleToggle(bool v)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xEEEA48", Offset = "0xEEEA48", VA = "0xEEEA48")]
	public void MusicToggle(bool v)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xEE6514", Offset = "0xEE6514", VA = "0xEE6514")]
	public void DefaultSetting()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xEEF814", Offset = "0xEEF814", VA = "0xEEF814")]
	public void ToggleHandedness()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xEE6B2C", Offset = "0xEE6B2C", VA = "0xEE6B2C")]
	public void UpdateSetting()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xEEEEF0", Offset = "0xEEEEF0", VA = "0xEEEEF0")]
	public void TutorialToggle(int value)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xEEF8CC", Offset = "0xEEF8CC", VA = "0xEEF8CC")]
	public void ResetTuto()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xEEF9B0", Offset = "0xEEF9B0", VA = "0xEEF9B0")]
	public Settings()
	{
	}
}
[Token(Token = "0x2000293")]
public class SettingsAppear : MonoBehaviour
{
	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000F81")]
	private const float constTimer = 3f;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject settingsMenu;

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xEF2378", Offset = "0xEF2378", VA = "0xEF2378")]
	private void Update()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xEF24E8", Offset = "0xEF24E8", VA = "0xEF24E8")]
	public SettingsAppear()
	{
	}
}
[Token(Token = "0x2000294")]
public class SettingsControllerDisplay : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000295")]
	public class Layout
	{
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OVRInput.InteractionProfile Profile;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public OVRInput.Hand Hand;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string HeaderID;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<RectTransform> RectTransforms;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<RectData> RectDatas;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<TextMeshProUGUI> Texts;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<TextData> TextDatas;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xEF2C60", Offset = "0xEF2C60", VA = "0xEF2C60")]
		public Layout()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000296")]
	public class RectData
	{
		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 pivot;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 anchorMax;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 anchorMin;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 anchorPosition;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 localPosition;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion localRotation;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 localScale;

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xEF2DD8", Offset = "0xEF2DD8", VA = "0xEF2DD8")]
		public RectData(RectTransform rect)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000297")]
	public class TextData
	{
		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextAlignmentOptions alignment;

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xEF2E80", Offset = "0xEF2E80", VA = "0xEF2E80")]
		public TextData(TextMeshProUGUI text)
		{
		}
	}

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextSelector header;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image controller;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] controllerSprite;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Layout> layouts;

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xEF24F0", Offset = "0xEF24F0", VA = "0xEF24F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xEF24F4", Offset = "0xEF24F4", VA = "0xEF24F4")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xEF280C", Offset = "0xEF280C", VA = "0xEF280C")]
	private void SetLayout(Layout l)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xEF2850", Offset = "0xEF2850", VA = "0xEF2850")]
	private void SetProfile(OVRInput.InteractionProfile profile, OVRInput.Hand hand)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xEF28D4", Offset = "0xEF28D4", VA = "0xEF28D4")]
	private void SetRectData(List<RectTransform> rectTransforms, List<RectData> rectDatas)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xEF2A74", Offset = "0xEF2A74", VA = "0xEF2A74")]
	private void SetTexts(string headerID, List<TextMeshProUGUI> texts, List<TextData> textDatas)
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xEF2BD8", Offset = "0xEF2BD8", VA = "0xEF2BD8")]
	public SettingsControllerDisplay()
	{
	}
}
[Token(Token = "0x2000298")]
public class CircleSlider : SliderBase
{
	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float radius;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _value;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _valueAngle;

	[Token(Token = "0x4000F99")]
	private const float grabRadius = 0.02f;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector2 center;

	[Token(Token = "0x170001A9")]
	public float ValueAngle
	{
		[Token(Token = "0x6001069")]
		[Address(RVA = "0xEF2EC4", Offset = "0xEF2EC4", VA = "0xEF2EC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600106A")]
		[Address(RVA = "0xEF2ECC", Offset = "0xEF2ECC", VA = "0xEF2ECC")]
		set
		{
		}
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xEF2EBC", Offset = "0xEF2EBC", VA = "0xEF2EBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xEF2FFC", Offset = "0xEF2FFC", VA = "0xEF2FFC", Slot = "4")]
	protected override bool IsNonDominantHovering()
	{
		return default(bool);
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xEF30D4", Offset = "0xEF30D4", VA = "0xEF30D4", Slot = "5")]
	protected override bool IsDominantHovering()
	{
		return default(bool);
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xEF31AC", Offset = "0xEF31AC", VA = "0xEF31AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xEF3244", Offset = "0xEF3244", VA = "0xEF3244")]
	private void Update()
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xEF3378", Offset = "0xEF3378", VA = "0xEF3378", Slot = "9")]
	protected override void ConstrainKnob()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xEF3504", Offset = "0xEF3504", VA = "0xEF3504", Slot = "8")]
	protected override void MoveKnob(Vector3 finger, GrabType oldGrabType = GrabType.None)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xEF387C", Offset = "0xEF387C", VA = "0xEF387C", Slot = "6")]
	protected override void CheckNonDominantRayPos(out Vector3 nonDominantRayPos)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xEF39A8", Offset = "0xEF39A8", VA = "0xEF39A8", Slot = "7")]
	protected override void CheckDominantRayPos(out Vector3 dominantRayPos)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xEF3AD4", Offset = "0xEF3AD4", VA = "0xEF3AD4")]
	public CircleSlider()
	{
	}
}
[Token(Token = "0x2000299")]
public enum GrabType
{
	[Token(Token = "0x4000F9C")]
	None,
	[Token(Token = "0x4000F9D")]
	NonDominantRay,
	[Token(Token = "0x4000F9E")]
	DominantRay,
	[Token(Token = "0x4000F9F")]
	NonDominantHand,
	[Token(Token = "0x4000FA0")]
	DominantHand,
	[Token(Token = "0x4000FA1")]
	NonDominantHandPistol,
	[Token(Token = "0x4000FA2")]
	DominantHandPistol
}
[Token(Token = "0x200029A")]
public class LineSlider : SliderBase
{
	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector2 knobStartPos;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 grabPos;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 grabKnobPos;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ScrollRect srect;

	[Token(Token = "0x170001AA")]
	private bool IsVertical
	{
		[Token(Token = "0x6001074")]
		[Address(RVA = "0xEF3ADC", Offset = "0xEF3ADC", VA = "0xEF3ADC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xEF3B48", Offset = "0xEF3B48", VA = "0xEF3B48", Slot = "4")]
	protected override bool IsNonDominantHovering()
	{
		return default(bool);
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xEF3F78", Offset = "0xEF3F78", VA = "0xEF3F78", Slot = "5")]
	protected override bool IsDominantHovering()
	{
		return default(bool);
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xEF4078", Offset = "0xEF4078", VA = "0xEF4078")]
	private void Start()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xEF3C48", Offset = "0xEF3C48", VA = "0xEF3C48")]
	private bool IsPointInKnobRect(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xEF40FC", Offset = "0xEF40FC", VA = "0xEF40FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xEF4408", Offset = "0xEF4408", VA = "0xEF4408", Slot = "9")]
	protected override void ConstrainKnob()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xEF47C4", Offset = "0xEF47C4", VA = "0xEF47C4", Slot = "8")]
	protected override void MoveKnob(Vector3 finger, GrabType oldGrabType)
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xEF4B10", Offset = "0xEF4B10", VA = "0xEF4B10", Slot = "6")]
	protected override void CheckNonDominantRayPos(out Vector3 nonDominantRayPos)
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xEF4BC8", Offset = "0xEF4BC8", VA = "0xEF4BC8", Slot = "7")]
	protected override void CheckDominantRayPos(out Vector3 dominantRayPos)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xEF4254", Offset = "0xEF4254", VA = "0xEF4254")]
	private void CheckPistolPos(out Vector3 pistolPos)
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xEF4C80", Offset = "0xEF4C80", VA = "0xEF4C80")]
	public LineSlider()
	{
	}
}
[Token(Token = "0x200029B")]
public abstract class SliderBase : MonoBehaviour
{
	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color idle_color;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color hover_color;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color select_color;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float value;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject container;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject knob;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected RectTransform containerRect;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected RectTransform knobRect;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected GrabType grabType;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Image knobImage;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SetAvatarBase avatar;

	[Token(Token = "0x6001080")]
	protected abstract bool IsNonDominantHovering();

	[Token(Token = "0x6001081")]
	protected abstract bool IsDominantHovering();

	[Token(Token = "0x6001082")]
	protected abstract void CheckNonDominantRayPos(out Vector3 nonDominantRayPos);

	[Token(Token = "0x6001083")]
	protected abstract void CheckDominantRayPos(out Vector3 dominantRayPos);

	[Token(Token = "0x6001084")]
	protected abstract void MoveKnob(Vector3 finger, GrabType oldGrabType = GrabType.None);

	[Token(Token = "0x6001085")]
	protected abstract void ConstrainKnob();

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xEF4C88", Offset = "0xEF4C88", VA = "0xEF4C88")]
	protected Vector3 NonDominantFinger()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xEF4CAC", Offset = "0xEF4CAC", VA = "0xEF4CAC")]
	protected Vector3 DominantFinger()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xEF4CD0", Offset = "0xEF4CD0", VA = "0xEF4CD0")]
	protected void Init()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xEF4DE8", Offset = "0xEF4DE8", VA = "0xEF4DE8")]
	protected void ChangeKnobImageColor()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xEF4E78", Offset = "0xEF4E78", VA = "0xEF4E78")]
	protected void CheckFingerGrabType()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xEF4ECC", Offset = "0xEF4ECC", VA = "0xEF4ECC")]
	protected SliderBase()
	{
	}
}
[Token(Token = "0x200029C")]
public class SliderSelector : MonoBehaviour
{
	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isSelected;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Hand;

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xEF4ED4", Offset = "0xEF4ED4", VA = "0xEF4ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xEF502C", Offset = "0xEF502C", VA = "0xEF502C")]
	public SliderSelector()
	{
	}
}
[Token(Token = "0x200029D")]
public class SpriteSwap : MonoBehaviour
{
	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite ArchiSprite;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite FpsSprite;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image img;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ArchiRoom.EState state;

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xEF5034", Offset = "0xEF5034", VA = "0xEF5034")]
	private void Start()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xEF508C", Offset = "0xEF508C", VA = "0xEF508C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xEF5154", Offset = "0xEF5154", VA = "0xEF5154")]
	public SpriteSwap()
	{
	}
}
[Token(Token = "0x200029E")]
public class TogglePswView : MonoBehaviour
{
	[Token(Token = "0x200029F")]
	[CompilerGenerated]
	private sealed class <UpdateText>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TogglePswView <>4__this;

		[Token(Token = "0x170001AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0xEF5404", Offset = "0xEF5404", VA = "0xEF5404", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0xEF544C", Offset = "0xEF544C", VA = "0xEF544C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xEF52F8", Offset = "0xEF52F8", VA = "0xEF52F8")]
		[DebuggerHidden]
		public <UpdateText>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xEF5328", Offset = "0xEF5328", VA = "0xEF5328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xEF532C", Offset = "0xEF532C", VA = "0xEF532C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xEF540C", Offset = "0xEF540C", VA = "0xEF540C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_InputField inputField;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite seePsw;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite hidePsw;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image image;

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xEF515C", Offset = "0xEF515C", VA = "0xEF515C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xEF51B4", Offset = "0xEF51B4", VA = "0xEF51B4")]
	public void SwitchPswView()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xEF5284", Offset = "0xEF5284", VA = "0xEF5284")]
	[IteratorStateMachine(typeof(<UpdateText>d__6))]
	private IEnumerator UpdateText()
	{
		return null;
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xEF5320", Offset = "0xEF5320", VA = "0xEF5320")]
	public TogglePswView()
	{
	}
}
[Token(Token = "0x20002A0")]
public class ToggleShader : MonoBehaviour
{
	[Token(Token = "0x20002A1")]
	public enum MenuState
	{
		[Token(Token = "0x4000FCC")]
		None,
		[Token(Token = "0x4000FCD")]
		AppearingUI,
		[Token(Token = "0x4000FCE")]
		DisapearingUI,
		[Token(Token = "0x4000FCF")]
		AppearingGO,
		[Token(Token = "0x4000FD0")]
		DisaperingGO
	}

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image[] images;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TMP_Text[] texts;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MenuState menuState;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000FC3")]
	private const float appearDuration = 0.5f;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject currentObject;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ObjectMaterial currentOM;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material mat_Viewport;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material mat_Opaque;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material mat_Default;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material shadder_appear;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool saveLater;

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xEF5454", Offset = "0xEF5454", VA = "0xEF5454")]
	private void Start()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xEF55C4", Offset = "0xEF55C4", VA = "0xEF55C4")]
	public void CheckShaderState(GameObject menu)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xEF57F4", Offset = "0xEF57F4", VA = "0xEF57F4")]
	private void SetAnimShaderGO(GameObject objectToAnimate)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xEF58A0", Offset = "0xEF58A0", VA = "0xEF58A0")]
	private void SetNormalShaderGO()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xEF5948", Offset = "0xEF5948", VA = "0xEF5948")]
	private void UpdateShaderTimeGO(float t)
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xEF5964", Offset = "0xEF5964", VA = "0xEF5964")]
	public void SetAnimShader(GameObject toCheck, bool saveLater = false)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xEF567C", Offset = "0xEF567C", VA = "0xEF567C")]
	public void UpdateShaderTime(float t)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xEF574C", Offset = "0xEF574C", VA = "0xEF574C")]
	public void SetNormalShader()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xEF5A58", Offset = "0xEF5A58", VA = "0xEF5A58")]
	private void SetAnimShaderUI(GameObject menu)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xEF6014", Offset = "0xEF6014", VA = "0xEF6014")]
	private void UpdateShaderTimeUI(float t)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xEF611C", Offset = "0xEF611C", VA = "0xEF611C")]
	private void SetNormalShaderUI()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xEF64E4", Offset = "0xEF64E4", VA = "0xEF64E4")]
	public ToggleShader()
	{
	}
}
[Token(Token = "0x20002A2")]
public class ToggleTexture : MonoBehaviour
{
	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Menu;

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xEF64EC", Offset = "0xEF64EC", VA = "0xEF64EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xEF650C", Offset = "0xEF650C", VA = "0xEF650C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xEF6590", Offset = "0xEF6590", VA = "0xEF6590")]
	public void MenuToggle()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xEF6620", Offset = "0xEF6620", VA = "0xEF6620")]
	public ToggleTexture()
	{
	}
}
[Token(Token = "0x20002A3")]
public class UiRefreshTrigger : MonoBehaviour
{
	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ProjectCard.CardType UiToRefresh;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isRefreshed;

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xEF6628", Offset = "0xEF6628", VA = "0xEF6628")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xEF66C0", Offset = "0xEF66C0", VA = "0xEF66C0")]
	private void CallRefresh()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xEF6844", Offset = "0xEF6844", VA = "0xEF6844")]
	public UiRefreshTrigger()
	{
	}
}
[Token(Token = "0x20002A4")]
public class UndoButton : MonoBehaviour
{
	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xEF684C", Offset = "0xEF684C", VA = "0xEF684C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xEF69DC", Offset = "0xEF69DC", VA = "0xEF69DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xEF69E0", Offset = "0xEF69E0", VA = "0xEF69E0")]
	public UndoButton()
	{
	}
}
[Token(Token = "0x20002A5")]
public class VariationsDisplay : MonoBehaviour
{
	[Token(Token = "0x20002A6")]
	[CompilerGenerated]
	private sealed class <LoadAllMaterials>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] matNames;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int variationNumber;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject toChange;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VariationsDisplay <>4__this;

		[Token(Token = "0x170001AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0xEF8254", Offset = "0xEF8254", VA = "0xEF8254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xEF829C", Offset = "0xEF829C", VA = "0xEF829C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xEF7AAC", Offset = "0xEF7AAC", VA = "0xEF7AAC")]
		[DebuggerHidden]
		public <LoadAllMaterials>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xEF7E28", Offset = "0xEF7E28", VA = "0xEF7E28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xEF7E2C", Offset = "0xEF7E2C", VA = "0xEF7E2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xEF825C", Offset = "0xEF825C", VA = "0xEF825C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DataBaseManager DBM;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool resetFinished;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] variationColors;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader uber;

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xEF69E8", Offset = "0xEF69E8", VA = "0xEF69E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xEF7504", Offset = "0xEF7504", VA = "0xEF7504")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xEF6B1C", Offset = "0xEF6B1C", VA = "0xEF6B1C")]
	private void InitializeDisplay()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xEF7578", Offset = "0xEF7578", VA = "0xEF7578")]
	public void VariationButtonRequest(int var)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xEF7664", Offset = "0xEF7664", VA = "0xEF7664")]
	public void ChangeVariation(int variationNumber, bool isReseting = false)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xEF7888", Offset = "0xEF7888", VA = "0xEF7888")]
	private void ChangeVariationLocally(int variationNumber, GameObject toChange)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xEF79F8", Offset = "0xEF79F8", VA = "0xEF79F8")]
	[IteratorStateMachine(typeof(<LoadAllMaterials>d__10))]
	private IEnumerator LoadAllMaterials(string[] matNames, Renderer renderer, int variationNumber, GameObject toChange)
	{
		return null;
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xEF716C", Offset = "0xEF716C", VA = "0xEF716C")]
	private void DisplayVariationsColors()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xEF7AD4", Offset = "0xEF7AD4", VA = "0xEF7AD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xEF7DC4", Offset = "0xEF7DC4", VA = "0xEF7DC4")]
	public VariationsDisplay()
	{
	}
}
[Token(Token = "0x20002A7")]
public class ViewContentManager : MonoBehaviour
{
	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform viewportRect;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject view;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int contentChilds;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] viewcorners;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] thiscorners;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 altpos;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 ltop;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 rtop;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 rbottom;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 lbottom;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float scrollvalue;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool firstload;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Button m_button;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Button2 m_button2;

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xEF82A4", Offset = "0xEF82A4", VA = "0xEF82A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xEF841C", Offset = "0xEF841C", VA = "0xEF841C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xEF87C8", Offset = "0xEF87C8", VA = "0xEF87C8")]
	public ViewContentManager()
	{
	}
}
[Token(Token = "0x20002A8")]
public class WatchNavigator : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x20002A9")]
	[CompilerGenerated]
	private sealed class <CaptureScreenShot>d__90 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WatchNavigator <>4__this;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <path>5__2;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0xEFBAC8", Offset = "0xEFBAC8", VA = "0xEFBAC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0xEFBB10", Offset = "0xEFBB10", VA = "0xEFBB10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xEFB1D8", Offset = "0xEFB1D8", VA = "0xEFB1D8")]
		[DebuggerHidden]
		public <CaptureScreenShot>d__90(int <>1__state)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xEFB2EC", Offset = "0xEFB2EC", VA = "0xEFB2EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xEFB2F0", Offset = "0xEFB2F0", VA = "0xEFB2F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xEFBAD0", Offset = "0xEFBAD0", VA = "0xEFBAD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject watchMenu;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject PocketMenu;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject CycleMenu;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject ObjectMenu;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject MultiMenu;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject ButtonHolder;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject ArchiObjMenu;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject HolderUndoRedo;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject WallPanel;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject RoomPanel;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Button HomeBtn;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Button passthroughBtn;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Button SwitchViewBtn;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Button ObjectBtn;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Button UndoBtn;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Button RedoBtn;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Button pocketBtn;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Button archiObjBtn;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Button SwitchBuildingBtn;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Button HelpBtn;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Button MultiBtn;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Button CycleBtn;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Button DownBtn;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Button UpBtn;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Button ResetBtn;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Button WallsBtn;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Button RoomsBtn;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private SetAvatarBase setAvatarBase;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private BuildingTeleportation buildingTeleportation;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Image WatchImg;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Collider WatchCollider;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private TabGroup tabGroup;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private MultiMenu multiMenu;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float delaytime;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool isInMulti;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private ModalPopUp RigPopUp;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Tools archiTools;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool eventRegistered;

	[Token(Token = "0x170001AF")]
	public GameObject WatchMenu
	{
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xEF87D0", Offset = "0xEF87D0", VA = "0xEF87D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xEF87D8", Offset = "0xEF87D8", VA = "0xEF87D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xEF8A54", Offset = "0xEF8A54", VA = "0xEF8A54")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xEF8B54", Offset = "0xEF8B54", VA = "0xEF8B54")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xEF9054", Offset = "0xEF9054", VA = "0xEF9054")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xEF90EC", Offset = "0xEF90EC", VA = "0xEF90EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xEF9218", Offset = "0xEF9218", VA = "0xEF9218", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xEF9238", Offset = "0xEF9238", VA = "0xEF9238", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xEF8B08", Offset = "0xEF8B08", VA = "0xEF8B08")]
	public void SetProjectMode()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xEF8B4C", Offset = "0xEF8B4C", VA = "0xEF8B4C")]
	public void SetArchiMode()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xEF952C", Offset = "0xEF952C", VA = "0xEF952C")]
	public void ArchiObjToggle()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xEF9720", Offset = "0xEF9720", VA = "0xEF9720")]
	public void PocketMenuToggle()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xEF98FC", Offset = "0xEF98FC", VA = "0xEF98FC")]
	public void CycleMenuToggle()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xEF9A8C", Offset = "0xEF9A8C", VA = "0xEF9A8C")]
	public void ObjectMenuToggle()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xEF923C", Offset = "0xEF923C", VA = "0xEF923C")]
	public void MultiVisitMenuToggle()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xEF9C88", Offset = "0xEF9C88", VA = "0xEF9C88")]
	public void SwitchView()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xEF9D50", Offset = "0xEF9D50", VA = "0xEF9D50")]
	public void CallUndo()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xEF9E18", Offset = "0xEF9E18", VA = "0xEF9E18")]
	public void CallRedo()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xEF9EE0", Offset = "0xEF9EE0", VA = "0xEF9EE0")]
	public void CallBackHome()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xEFA094", Offset = "0xEFA094", VA = "0xEFA094")]
	public void PopupBackHome()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xEFA1DC", Offset = "0xEFA1DC", VA = "0xEFA1DC")]
	public void CallHelp()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xEF88D8", Offset = "0xEF88D8", VA = "0xEF88D8")]
	public void MenuToggle()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xEFA330", Offset = "0xEFA330", VA = "0xEFA330")]
	public void SetWatchInteractability(bool interactable)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xEFA37C", Offset = "0xEFA37C", VA = "0xEFA37C")]
	public void ToggleWallPanel()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xEFA3D0", Offset = "0xEFA3D0", VA = "0xEFA3D0")]
	public void ToggleRoomPanel()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xEFA41C", Offset = "0xEFA41C", VA = "0xEFA41C")]
	public void StoreyUp()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xEFA480", Offset = "0xEFA480", VA = "0xEFA480")]
	public void StoreyDown()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xEFA4E4", Offset = "0xEFA4E4", VA = "0xEFA4E4")]
	public void SetWallHeight(int i)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xEFA598", Offset = "0xEFA598", VA = "0xEFA598")]
	public void SetRoomHeight(int i)
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xEFA64C", Offset = "0xEFA64C", VA = "0xEFA64C")]
	public void ResetTransform()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xEF93CC", Offset = "0xEF93CC", VA = "0xEF93CC")]
	private void SwitchMode(bool enable)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xEF8F80", Offset = "0xEF8F80", VA = "0xEF8F80")]
	private void RegisterEvents(bool register)
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xEF8F04", Offset = "0xEF8F04", VA = "0xEF8F04")]
	private void ToggleButtons()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xEFAE94", Offset = "0xEFAE94", VA = "0xEFAE94")]
	private void ToggleWallBtn()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xEFAE20", Offset = "0xEFAE20", VA = "0xEFAE20")]
	private void ToggleRoomBtn()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xEFA6DC", Offset = "0xEFA6DC", VA = "0xEFA6DC")]
	private void ToggleUndoRedo()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xEFAF08", Offset = "0xEFAF08", VA = "0xEFAF08")]
	private void ToggleBtnHolder()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xEFAAD4", Offset = "0xEFAAD4", VA = "0xEFAAD4")]
	private void ToggleMRBtn()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xEFA8C4", Offset = "0xEFA8C4", VA = "0xEFA8C4")]
	private void ToggleHelp()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xEFAFC8", Offset = "0xEFAFC8", VA = "0xEFAFC8")]
	private void ToggleUndoBtn()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xEFB038", Offset = "0xEFB038", VA = "0xEFB038")]
	private void ToggleRedoBtn()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xEFA8F0", Offset = "0xEFA8F0", VA = "0xEFA8F0")]
	private void TogglePocketBtn()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xEFA78C", Offset = "0xEFA78C", VA = "0xEFA78C")]
	private void ToggleCycleBtn()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xEFAC6C", Offset = "0xEFAC6C", VA = "0xEFAC6C")]
	private void ToggleSwitchBuildingBtn()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xEFA71C", Offset = "0xEFA71C", VA = "0xEFA71C")]
	private void ToggleObjectBtn()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xEFA9E0", Offset = "0xEFA9E0", VA = "0xEFA9E0")]
	private void ToggleArchiObjBtn()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xEFA240", Offset = "0xEFA240", VA = "0xEFA240")]
	private void ToggleMultiBtn()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xEFAB68", Offset = "0xEFAB68", VA = "0xEFAB68")]
	private void ToggleSwitchViewBtn(bool forceArchBtn = false)
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xEFA6AC", Offset = "0xEFA6AC", VA = "0xEFA6AC")]
	private void ToggleHomeBtn()
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xEFAD70", Offset = "0xEFAD70", VA = "0xEFAD70")]
	private void ToggleStorey()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xEFB0A8", Offset = "0xEFB0A8", VA = "0xEFB0A8")]
	private void OnScaleComplexeBehaviourEnabled(bool enabled)
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xEFB164", Offset = "0xEFB164", VA = "0xEFB164")]
	[IteratorStateMachine(typeof(<CaptureScreenShot>d__90))]
	private IEnumerator CaptureScreenShot()
	{
		return null;
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xEFB200", Offset = "0xEFB200", VA = "0xEFB200")]
	public void ResetSub()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xEFB248", Offset = "0xEFB248", VA = "0xEFB248")]
	public WatchNavigator()
	{
	}
}
[Token(Token = "0x20002AA")]
internal class XRJoystickScroller : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect ScrollRect;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InputDevice leftController;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static InputDevice rightController;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private XRRayInteractor interactor;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastResult leftResult;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RaycastResult rightResult;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool isRightHover;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool isLeftHover;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float ratio;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float speed;

	[Token(Token = "0x170001B2")]
	private XRUIInputModule InputModule
	{
		[Token(Token = "0x6001103")]
		[Address(RVA = "0xEFBB18", Offset = "0xEFBB18", VA = "0xEFBB18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B3")]
	private bool isHovered
	{
		[Token(Token = "0x6001104")]
		[Address(RVA = "0xEFBBC4", Offset = "0xEFBBC4", VA = "0xEFBBC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xEFBBE4", Offset = "0xEFBBE4", VA = "0xEFBBE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xEFBC80", Offset = "0xEFBC80", VA = "0xEFBC80", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xEFC0A4", Offset = "0xEFC0A4", VA = "0xEFC0A4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xEFC21C", Offset = "0xEFC21C", VA = "0xEFC21C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xEFC274", Offset = "0xEFC274", VA = "0xEFC274")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xEFC290", Offset = "0xEFC290", VA = "0xEFC290")]
	private void Update()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xEFBBE8", Offset = "0xEFBBE8", VA = "0xEFBBE8")]
	private void GetController()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xEFBD78", Offset = "0xEFBD78", VA = "0xEFBD78")]
	private void ProcessInteractor()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xEFC32C", Offset = "0xEFC32C", VA = "0xEFC32C")]
	private void ProccessController(InputDevice controller)
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xEFC040", Offset = "0xEFC040", VA = "0xEFC040")]
	private void ToggleMovement(bool value)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xEFBED0", Offset = "0xEFBED0", VA = "0xEFBED0")]
	private void CheckSizeRatio()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xEFC45C", Offset = "0xEFC45C", VA = "0xEFC45C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xEFC500", Offset = "0xEFC500", VA = "0xEFC500")]
	public XRJoystickScroller()
	{
	}
}
[Token(Token = "0x20002AB")]
public class BlinkFade : MonoBehaviour
{
	[Token(Token = "0x20002AC")]
	[CompilerGenerated]
	private sealed class <Turn>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600111A")]
			[Address(RVA = "0xEFC804", Offset = "0xEFC804", VA = "0xEFC804", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600111C")]
			[Address(RVA = "0xEFC84C", Offset = "0xEFC84C", VA = "0xEFC84C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xEFC694", Offset = "0xEFC694", VA = "0xEFC694")]
		[DebuggerHidden]
		public <Turn>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xEFC700", Offset = "0xEFC700", VA = "0xEFC700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xEFC704", Offset = "0xEFC704", VA = "0xEFC704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xEFC80C", Offset = "0xEFC80C", VA = "0xEFC80C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AD")]
	[CompilerGenerated]
	private sealed class <EBlink>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlinkFade <>4__this;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <angle>5__2;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <i>5__3;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0xEFCC00", Offset = "0xEFCC00", VA = "0xEFCC00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0xEFCC48", Offset = "0xEFCC48", VA = "0xEFCC48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xEFC6BC", Offset = "0xEFC6BC", VA = "0xEFC6BC")]
		[DebuggerHidden]
		public <EBlink>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xEFC854", Offset = "0xEFC854", VA = "0xEFC854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xEFC858", Offset = "0xEFC858", VA = "0xEFC858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xEFCC08", Offset = "0xEFCC08", VA = "0xEFCC08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Blink")]
	private Image m_BlinkImage;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.01f, 0.3f)]
	public float m_BlinkTransitionTime;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isFadeActive;

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xEFC510", Offset = "0xEFC510", VA = "0xEFC510")]
	private void Start()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xEFC58C", Offset = "0xEFC58C", VA = "0xEFC58C")]
	public void Blink()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xEFC634", Offset = "0xEFC634", VA = "0xEFC634")]
	[IteratorStateMachine(typeof(<Turn>d__5))]
	private IEnumerator Turn()
	{
		return null;
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xEFC5C0", Offset = "0xEFC5C0", VA = "0xEFC5C0")]
	[IteratorStateMachine(typeof(<EBlink>d__6))]
	private IEnumerator EBlink()
	{
		return null;
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xEFC6E4", Offset = "0xEFC6E4", VA = "0xEFC6E4")]
	public BlinkFade()
	{
	}
}
[Token(Token = "0x20002AE")]
internal class AES
{
	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IVString;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string keyString;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static MD5CryptoServiceProvider MD5;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string SecretKey;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static byte[] key;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static byte[] iv;

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xEFCC50", Offset = "0xEFCC50", VA = "0xEFCC50")]
	public static string EncryptString(string plainText)
	{
		return null;
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xEFCEBC", Offset = "0xEFCEBC", VA = "0xEFCEBC")]
	public static string DecryptString(string cipherText)
	{
		return null;
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xEFD204", Offset = "0xEFD204", VA = "0xEFD204")]
	public static string GetMD5(string text)
	{
		return null;
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xEFD394", Offset = "0xEFD394", VA = "0xEFD394")]
	public AES()
	{
	}
}
[Token(Token = "0x20002AF")]
public static class FeetRig
{
	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _ovrRig;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CapsuleCollider _capsule;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Rigidbody _rb;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static GameObject fakeRig;

	[Token(Token = "0x170001B8")]
	private static GameObject ovrRig
	{
		[Token(Token = "0x6001128")]
		[Address(RVA = "0xEFD524", Offset = "0xEFD524", VA = "0xEFD524")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B9")]
	private static CapsuleCollider capsule
	{
		[Token(Token = "0x6001129")]
		[Address(RVA = "0xEFD5F4", Offset = "0xEFD5F4", VA = "0xEFD5F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BA")]
	private static Rigidbody rb
	{
		[Token(Token = "0x600112A")]
		[Address(RVA = "0xEFD6C0", Offset = "0xEFD6C0", VA = "0xEFD6C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BB")]
	public static Vector3 position
	{
		[Token(Token = "0x600112C")]
		[Address(RVA = "0xEFD930", Offset = "0xEFD930", VA = "0xEFD930")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600112D")]
		[Address(RVA = "0xEFD994", Offset = "0xEFD994", VA = "0xEFD994")]
		set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public static Quaternion rotation
	{
		[Token(Token = "0x600112E")]
		[Address(RVA = "0xEFDAB4", Offset = "0xEFDAB4", VA = "0xEFDAB4")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600112F")]
		[Address(RVA = "0xEFDB18", Offset = "0xEFDB18", VA = "0xEFDB18")]
		set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public static Vector3 forward
	{
		[Token(Token = "0x6001130")]
		[Address(RVA = "0xEFDC28", Offset = "0xEFDC28", VA = "0xEFDC28")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001131")]
		[Address(RVA = "0xEFDC8C", Offset = "0xEFDC8C", VA = "0xEFDC8C")]
		set
		{
		}
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xEFD78C", Offset = "0xEFD78C", VA = "0xEFD78C")]
	private static void InitRig()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xEFDDB4", Offset = "0xEFDDB4", VA = "0xEFDDB4")]
	public static Vector3 TransformPoint(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xEFDE40", Offset = "0xEFDE40", VA = "0xEFDE40")]
	public static Vector3 InverseTransformDirection(Vector3 dir)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xEFDECC", Offset = "0xEFDECC", VA = "0xEFDECC")]
	public static void Rotate(Vector3 angles)
	{
	}
}
[Token(Token = "0x20002B0")]
public class Measurements : MonoBehaviour
{
	[Token(Token = "0x20002B1")]
	public enum ESystem
	{
		[Token(Token = "0x4001036")]
		Metric,
		[Token(Token = "0x4001037")]
		Imperial
	}

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ESystem currentSystem;

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xEFDF58", Offset = "0xEFDF58", VA = "0xEFDF58")]
	public static string GetLength(float length)
	{
		return null;
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xEFDFC8", Offset = "0xEFDFC8", VA = "0xEFDFC8")]
	private static string ProjectToMeters(float length)
	{
		return null;
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xEFE07C", Offset = "0xEFE07C", VA = "0xEFE07C")]
	private static string ProjectToFeet(float length)
	{
		return null;
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xEFE288", Offset = "0xEFE288", VA = "0xEFE288")]
	public Measurements()
	{
	}
}
[Token(Token = "0x20002B2")]
public class SceneGenerator : MonoBehaviour
{
	[Token(Token = "0x14000020")]
	public static event Action EndLoad
	{
		[Token(Token = "0x6001139")]
		[Address(RVA = "0xEFE290", Offset = "0xEFE290", VA = "0xEFE290")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600113A")]
		[Address(RVA = "0xEFE348", Offset = "0xEFE348", VA = "0xEFE348")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xEFE400", Offset = "0xEFE400", VA = "0xEFE400")]
	private void Start()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xEFE5A0", Offset = "0xEFE5A0", VA = "0xEFE5A0")]
	private void LoadXML()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xEFE888", Offset = "0xEFE888", VA = "0xEFE888")]
	public SceneGenerator()
	{
	}
}
[Token(Token = "0x20002B3")]
public struct TransformData
{
	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion rotation;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xEFE890", Offset = "0xEFE890", VA = "0xEFE890")]
	public TransformData(Vector3 _position, Quaternion _rotation, Vector3 _scale)
	{
	}
}
[Token(Token = "0x20002B4")]
public class KeyboardAppearOculus : MonoBehaviour
{
	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static KeyboardAppearOculus instance;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string inputText;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TouchScreenKeyboard overlayKeyboard;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TouchScreenKeyboardType keyboardType;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string startText;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool activated;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool done;

	[Token(Token = "0x170001BE")]
	public TMP_InputField TargetInputText
	{
		[Token(Token = "0x6001140")]
		[Address(RVA = "0xEFE928", Offset = "0xEFE928", VA = "0xEFE928")]
		[CompilerGenerated]
		private get
		{
			return null;
		}
		[Token(Token = "0x6001141")]
		[Address(RVA = "0xEFE930", Offset = "0xEFE930", VA = "0xEFE930")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001BF")]
	public UIKitInputField TargetNumInputText
	{
		[Token(Token = "0x6001142")]
		[Address(RVA = "0xEFE938", Offset = "0xEFE938", VA = "0xEFE938")]
		[CompilerGenerated]
		private get
		{
			return null;
		}
		[Token(Token = "0x6001143")]
		[Address(RVA = "0xEFE940", Offset = "0xEFE940", VA = "0xEFE940")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	public bool IsActive
	{
		[Token(Token = "0x6001144")]
		[Address(RVA = "0xEFE948", Offset = "0xEFE948", VA = "0xEFE948")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xEFE8B4", Offset = "0xEFE8B4", VA = "0xEFE8B4")]
	private KeyboardAppearOculus()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xEFE95C", Offset = "0xEFE95C", VA = "0xEFE95C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xEFEA8C", Offset = "0xEFEA8C", VA = "0xEFEA8C")]
	public void OpenKeyboard(TouchScreenKeyboardType type)
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xEFEB08", Offset = "0xEFEB08", VA = "0xEFEB08")]
	public void OpenLastKeyboard()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xEFEA40", Offset = "0xEFEA40", VA = "0xEFEA40")]
	private void UpdateTextInput(string text)
	{
	}
}
[Token(Token = "0x20002B5")]
public class VKey : MonoBehaviour
{
	[Token(Token = "0x20002B6")]
	public enum ETypes
	{
		[Token(Token = "0x4001052")]
		EKey,
		[Token(Token = "0x4001053")]
		EEmpty,
		[Token(Token = "0x4001054")]
		EValidate,
		[Token(Token = "0x4001055")]
		ECancel,
		[Token(Token = "0x4001056")]
		EBackspace,
		[Token(Token = "0x4001057")]
		ECapsLock,
		[Token(Token = "0x4001058")]
		EShift,
		[Token(Token = "0x4001059")]
		ESymbols,
		[Token(Token = "0x400105A")]
		ELanguage,
		[Token(Token = "0x400105B")]
		ECursorLeft,
		[Token(Token = "0x400105C")]
		ECursorRight
	}

	[Token(Token = "0x20002B7")]
	private struct SInputInfo
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isPointerInside;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool isPointerPressing;
	}

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VKeyboard kb;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ETypes type;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string lowercase;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> lowercaseAlt;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string uppercase;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> uppercaseAlt;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 cornersMin;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 cornersMax;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color baseColor;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color hoverColor;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color selectColor;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float pressTime;

	[Token(Token = "0x170001C1")]
	public string text
	{
		[Token(Token = "0x600114A")]
		[Address(RVA = "0xEFEB70", Offset = "0xEFEB70", VA = "0xEFEB70")]
		get
		{
			return null;
		}
		[Token(Token = "0x600114B")]
		[Address(RVA = "0xEFEC44", Offset = "0xEFEC44", VA = "0xEFEC44")]
		set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public Color color
	{
		[Token(Token = "0x600114C")]
		[Address(RVA = "0xEFED08", Offset = "0xEFED08", VA = "0xEFED08")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600114D")]
		[Address(RVA = "0xEFEDCC", Offset = "0xEFEDCC", VA = "0xEFEDCC")]
		set
		{
		}
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xEFEEC0", Offset = "0xEFEEC0", VA = "0xEFEEC0")]
	public void LoadElement(XmlElement node, Vector2 pos, Vector2 size)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xEFF900", Offset = "0xEFF900", VA = "0xEFF900")]
	private void ParseKeys(string input, ref string baseStr, ref List<string> altStr)
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xEFFB78", Offset = "0xEFFB78", VA = "0xEFFB78")]
	private bool IsPointerInside(VKeyboardInput.SPointer p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xEFFBFC", Offset = "0xEFFBFC", VA = "0xEFFBFC")]
	private bool IsCurrentKeyPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xEFFCA8", Offset = "0xEFFCA8", VA = "0xEFFCA8")]
	private List<SInputInfo> GetInputInfos()
	{
		return null;
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xEFFED8", Offset = "0xEFFED8", VA = "0xEFFED8")]
	private void UpdateTextCase()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xEFFF6C", Offset = "0xEFFF6C", VA = "0xEFFF6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xF00D1C", Offset = "0xF00D1C", VA = "0xF00D1C")]
	private void CreateSubKeyboard()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xF01244", Offset = "0xF01244", VA = "0xF01244")]
	public VKey()
	{
	}
}
[Token(Token = "0x20002B8")]
public class VKeyboard : MonoBehaviour
{
	[Token(Token = "0x20002B9")]
	public struct SLanguage
	{
		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string buttonName;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string alphabetFile;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string symbolsFile;
	}

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas canvas;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_InputField inputField;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float submenuDelay;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Layout")]
	public Vector2 spacing;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 margins;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Background")]
	public GameObject backgroundPrefab;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color backgroundColor;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color subBackgroundColor;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Basic Key")]
	public GameObject keyPrefab;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color basicBaseColor;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color basicHoverColor;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color basicSelectColor;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Special Key")]
	public Sprite backspaceSprite;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite validateSprite;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite cancelSprite;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite shiftSprite;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Sprite capslockSprite;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Sprite cursorLeftSprite;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Sprite cursorRightSprite;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Sprite languageSprite;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color specialBaseColor;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color specialHoverColor;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color specialSelectColor;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public List<VKeyboardInput.SPointer> inputs;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public VKey currentPressedKey;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public VLanguageButton currentPressedButton;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public bool isShiftOn;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[HideInInspector]
	public bool isCapslockOn;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public GameObject subKeyboard;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	public VKey subKeyboardKey;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public RectTransform baseKeyTransform;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public List<SLanguage> languages;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject page;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector2 keyPos;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector2 bgSize;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private string startText;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string alphabetFile;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string symbolsFile;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string currentKeyboardFile;

	[Token(Token = "0x170001C3")]
	public bool isOpened
	{
		[Token(Token = "0x6001157")]
		[Address(RVA = "0xF0124C", Offset = "0xF0124C", VA = "0xF0124C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xF012AC", Offset = "0xF012AC", VA = "0xF012AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xF017C0", Offset = "0xF017C0", VA = "0xF017C0")]
	public void Open(int lang)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xF01A34", Offset = "0xF01A34", VA = "0xF01A34")]
	public void Load(string keyboardFile)
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xF01E2C", Offset = "0xF01E2C", VA = "0xF01E2C")]
	private void LoadKeyboardElement(XmlElement node)
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xF02320", Offset = "0xF02320", VA = "0xF02320")]
	private void LoadRowElement(XmlElement node, GameObject parent)
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xF026F0", Offset = "0xF026F0", VA = "0xF026F0")]
	private void LoadKeyElement(XmlElement node, GameObject parent)
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xF00800", Offset = "0xF00800", VA = "0xF00800")]
	public void KeyPressed(VKey key)
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xF0303C", Offset = "0xF0303C", VA = "0xF0303C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xF02CC8", Offset = "0xF02CC8", VA = "0xF02CC8")]
	private void CreateLanguagesBox(VKey key)
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xF0351C", Offset = "0xF0351C", VA = "0xF0351C")]
	public void SetLanguage(int num)
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xF03630", Offset = "0xF03630", VA = "0xF03630")]
	public VKeyboard()
	{
	}
}
[Token(Token = "0x20002BA")]
public class VKeyboardInput
{
	[Token(Token = "0x20002BB")]
	public struct SPointer
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool isPressed;
	}

	[Token(Token = "0x4001089")]
	private const float buttonTreshold = 0.4f;

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xF0305C", Offset = "0xF0305C", VA = "0xF0305C")]
	public static List<SPointer> GetInputs(VKeyboard kb)
	{
		return null;
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xF036A8", Offset = "0xF036A8", VA = "0xF036A8")]
	private static SPointer GetRayPointer(VKeyboard kb, XRRayInteractor interactor, float button)
	{
		return default(SPointer);
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xF03840", Offset = "0xF03840", VA = "0xF03840")]
	public VKeyboardInput()
	{
	}
}
[Token(Token = "0x20002BC")]
public class VLanguageButton : MonoBehaviour
{
	[Token(Token = "0x20002BD")]
	private struct SInputInfo
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isPointerInside;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool isPointerPressing;
	}

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VKeyboard kb;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 cornersMin;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 cornersMax;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int num;

	[Token(Token = "0x170001C4")]
	public string text
	{
		[Token(Token = "0x6001166")]
		[Address(RVA = "0xF03848", Offset = "0xF03848", VA = "0xF03848")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001167")]
		[Address(RVA = "0xF0391C", Offset = "0xF0391C", VA = "0xF0391C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public Color color
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xF039E0", Offset = "0xF039E0", VA = "0xF039E0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6001169")]
		[Address(RVA = "0xF03AA4", Offset = "0xF03AA4", VA = "0xF03AA4")]
		set
		{
		}
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xF03258", Offset = "0xF03258", VA = "0xF03258")]
	public void Init(VKeyboard _kb, int _num, Vector2 pos, Vector2 size)
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xF03B98", Offset = "0xF03B98", VA = "0xF03B98")]
	private bool IsPointerInside(VKeyboardInput.SPointer p)
	{
		return default(bool);
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xF03C1C", Offset = "0xF03C1C", VA = "0xF03C1C")]
	private bool IsCurrentKeyPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xF03CC8", Offset = "0xF03CC8", VA = "0xF03CC8")]
	private List<SInputInfo> GetInputInfos()
	{
		return null;
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xF03EF8", Offset = "0xF03EF8", VA = "0xF03EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xF045BC", Offset = "0xF045BC", VA = "0xF045BC")]
	public VLanguageButton()
	{
	}
}
[Token(Token = "0x20002BE")]
public class ArchiHandle : MonoBehaviour
{
	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDominantGrabbed;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isNonDominantGrabbed;

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xF045C4", Offset = "0xF045C4", VA = "0xF045C4")]
	public void SetGrab(OVRPlugin.Handedness handedness)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xF04638", Offset = "0xF04638", VA = "0xF04638")]
	public bool isGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xF04658", Offset = "0xF04658", VA = "0xF04658")]
	public void Drop()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xF04660", Offset = "0xF04660", VA = "0xF04660")]
	public ArchiHandle()
	{
	}
}
[Token(Token = "0x20002BF")]
public class ArchiHandleGrab : UIGrab
{
	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected ArchiHandle handleHovered;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected ArchiHandle handleSelected;

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xF04668", Offset = "0xF04668", VA = "0xF04668")]
	private new void Start()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xF04670", Offset = "0xF04670", VA = "0xF04670")]
	private void Update()
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xF04730", Offset = "0xF04730", VA = "0xF04730")]
	protected void GrabHandHandle()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xF0484C", Offset = "0xF0484C", VA = "0xF0484C")]
	protected void DropHandle()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xF04940", Offset = "0xF04940", VA = "0xF04940")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xF04A20", Offset = "0xF04A20", VA = "0xF04A20")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xF04AC4", Offset = "0xF04AC4", VA = "0xF04AC4")]
	public ArchiHandleGrab()
	{
	}
}
[Token(Token = "0x20002C0")]
public class AutoTeleportation : MonoBehaviour
{
	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform Destination;

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xF04ACC", Offset = "0xF04ACC", VA = "0xF04ACC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xF04C54", Offset = "0xF04C54", VA = "0xF04C54")]
	public AutoTeleportation()
	{
	}
}
[Token(Token = "0x20002C1")]
public class AutoTeleportationStairs : MonoBehaviour
{
	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public StairsTP stairsTP;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool incomingTP;

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xF04C5C", Offset = "0xF04C5C", VA = "0xF04C5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xF05048", Offset = "0xF05048", VA = "0xF05048")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xF05050", Offset = "0xF05050", VA = "0xF05050")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xF05378", Offset = "0xF05378", VA = "0xF05378")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xF04CF4", Offset = "0xF04CF4", VA = "0xF04CF4")]
	private void RegisterAction(bool register)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xF04FB8", Offset = "0xF04FB8", VA = "0xF04FB8")]
	private void CreateCollider()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xF04F50", Offset = "0xF04F50", VA = "0xF04F50")]
	private void CreateDisplay()
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xF05158", Offset = "0xF05158", VA = "0xF05158")]
	private void Teleport(CapsuleCollider cc)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xF053FC", Offset = "0xF053FC", VA = "0xF053FC")]
	private Transform GetDestination()
	{
		return null;
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xF0558C", Offset = "0xF0558C", VA = "0xF0558C")]
	private void OnMovementModeChanged(MovementMode movementMode)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xF055A8", Offset = "0xF055A8", VA = "0xF055A8")]
	private void SetGOActive(bool enabled)
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xF055A0", Offset = "0xF055A0", VA = "0xF055A0")]
	private void EnableGO()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xF05040", Offset = "0xF05040", VA = "0xF05040")]
	private void DisableGO()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xF055D0", Offset = "0xF055D0", VA = "0xF055D0")]
	public AutoTeleportationStairs()
	{
	}
}
[Token(Token = "0x20002C2")]
public class AutoTeleportationStairsDisplay : MonoBehaviour
{
	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AutoTeleportationStairs autoTeleportation;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float displayRange;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StairsManagementV2 stairsManagement;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform head;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float distance;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool outofrange;

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xF055D8", Offset = "0xF055D8", VA = "0xF055D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xF05674", Offset = "0xF05674", VA = "0xF05674")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xF056EC", Offset = "0xF056EC", VA = "0xF056EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xF057CC", Offset = "0xF057CC", VA = "0xF057CC")]
	private bool DistanceCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xF0567C", Offset = "0xF0567C", VA = "0xF0567C")]
	private void Display(bool enabled)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xF058A8", Offset = "0xF058A8", VA = "0xF058A8")]
	private void DisplayDirection(bool enabled)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xF05A88", Offset = "0xF05A88", VA = "0xF05A88")]
	public AutoTeleportationStairsDisplay()
	{
	}
}
[Token(Token = "0x20002C3")]
public class CubeDuplication : MonoBehaviour
{
	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer shader;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material startMaterial;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color validGround;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color validMoving;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color invalidMoving;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool colliding;

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xF05AA0", Offset = "0xF05AA0", VA = "0xF05AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xF05B9C", Offset = "0xF05B9C", VA = "0xF05B9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xF060EC", Offset = "0xF060EC", VA = "0xF060EC")]
	public CubeDuplication()
	{
	}
}
[Token(Token = "0x20002C4")]
public class DirectUIGrab : UIGrab
{
	[Token(Token = "0x6001195")]
	[Address(RVA = "0xF06118", Offset = "0xF06118", VA = "0xF06118")]
	private new void Start()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xF06120", Offset = "0xF06120", VA = "0xF06120")]
	private void Update()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xF06220", Offset = "0xF06220", VA = "0xF06220")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xF0639C", Offset = "0xF0639C", VA = "0xF0639C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xF06418", Offset = "0xF06418", VA = "0xF06418")]
	public DirectUIGrab()
	{
	}
}
[Token(Token = "0x20002C5")]
public class DistanceArchiHandleGrab : ArchiHandleGrab
{
	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private XRRayInteractor Ray;

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xF06420", Offset = "0xF06420", VA = "0xF06420")]
	private new void Start()
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xF06484", Offset = "0xF06484", VA = "0xF06484")]
	private void Update()
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xF06624", Offset = "0xF06624", VA = "0xF06624")]
	public DistanceArchiHandleGrab()
	{
	}
}
[Token(Token = "0x20002C6")]
public class DistanceUIGrab : UIGrab
{
	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private XRRayInteractor Ray;

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xF0662C", Offset = "0xF0662C", VA = "0xF0662C")]
	private new void Start()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xF06690", Offset = "0xF06690", VA = "0xF06690")]
	private void Update()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0xF0699C", Offset = "0xF0699C", VA = "0xF0699C")]
	protected void RayGrab(GameObject menu)
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xF06C44", Offset = "0xF06C44", VA = "0xF06C44")]
	public DistanceUIGrab()
	{
	}
}
[Token(Token = "0x20002C7")]
public class FollowRay : MonoBehaviour
{
	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeleportDestination TD;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider collider;

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xF06C4C", Offset = "0xF06C4C", VA = "0xF06C4C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xF06DBC", Offset = "0xF06DBC", VA = "0xF06DBC")]
	public FollowRay()
	{
	}
}
[Token(Token = "0x20002C8")]
public class KeyboardManagement : MonoBehaviour
{
	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject keyboard;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject Numpad;

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xF06DC4", Offset = "0xF06DC4", VA = "0xF06DC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xF06E88", Offset = "0xF06E88", VA = "0xF06E88")]
	public static bool KeyboardIsOpened()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xF06EDC", Offset = "0xF06EDC", VA = "0xF06EDC")]
	public static void SetKeyboardPos()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xF07094", Offset = "0xF07094", VA = "0xF07094")]
	public static void ToggleKeyboard()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xF07150", Offset = "0xF07150", VA = "0xF07150")]
	public static bool NumpadIsOpened()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xF071A4", Offset = "0xF071A4", VA = "0xF071A4")]
	public static void ToggleNumpad()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xF07390", Offset = "0xF07390", VA = "0xF07390")]
	public static void ForcedClose()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xF07394", Offset = "0xF07394", VA = "0xF07394")]
	public KeyboardManagement()
	{
	}
}
[Token(Token = "0x20002C9")]
public class MakeKeyboardAppear : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x20002CA")]
	public enum Keyboard
	{
		[Token(Token = "0x40010B0")]
		Full,
		[Token(Token = "0x40010B1")]
		Numpad
	}

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string inputText;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static VKeyboard kb;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static KeyboardAppearOculus kbo;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Keyboard keyboard;

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xF0739C", Offset = "0xF0739C", VA = "0xF0739C", Slot = "4")]
	public void OnPointerClick(PointerEventData pointerEventData)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xF0752C", Offset = "0xF0752C", VA = "0xF0752C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xF07530", Offset = "0xF07530", VA = "0xF07530")]
	public MakeKeyboardAppear()
	{
	}
}
[Token(Token = "0x20002CB")]
public class NewXRRayInteractor : XRRayInteractor
{
	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject RayHitBox;

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xF075A4", Offset = "0xF075A4", VA = "0xF075A4", Slot = "49")]
	public override void GetValidTargets(List<IXRInteractable> validTargets)
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xF07694", Offset = "0xF07694", VA = "0xF07694")]
	public NewXRRayInteractor()
	{
	}
}
[Token(Token = "0x20002CC")]
public class OffsetGrabInteractable : XRGrabInteractable
{
	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private Vector3 interactorPosition;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Quaternion interactorRotation;

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xF076EC", Offset = "0xF076EC", VA = "0xF076EC", Slot = "64")]
	protected override void OnSelectEntering(SelectEnterEventArgs args)
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xF07A48", Offset = "0xF07A48", VA = "0xF07A48", Slot = "66")]
	protected override void OnSelectExiting(SelectExitEventArgs args)
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xF07744", Offset = "0xF07744", VA = "0xF07744")]
	private void StoreInteractor(IXRSelectInteractor interactor)
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xF07884", Offset = "0xF07884", VA = "0xF07884")]
	private void MatchAttachmentPoints(IXRSelectInteractor interactor)
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xF07A9C", Offset = "0xF07A9C", VA = "0xF07A9C")]
	private void ResetAttachmentPoints(IXRSelectInteractor interactor)
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xF07BD8", Offset = "0xF07BD8", VA = "0xF07BD8")]
	private void ClearInteractor(IXRSelectInteractor interactor)
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xF07C6C", Offset = "0xF07C6C", VA = "0xF07C6C")]
	public OffsetGrabInteractable()
	{
	}
}
[Token(Token = "0x20002CD")]
public class PaintData
{
	[Token(Token = "0x170001C6")]
	public Vector3 Position
	{
		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xF07D08", Offset = "0xF07D08", VA = "0xF07D08")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xF07D14", Offset = "0xF07D14", VA = "0xF07D14")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public string MatName
	{
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xF07D20", Offset = "0xF07D20", VA = "0xF07D20")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xF07D28", Offset = "0xF07D28", VA = "0xF07D28")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public int ID
	{
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xF07D30", Offset = "0xF07D30", VA = "0xF07D30")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xF07D38", Offset = "0xF07D38", VA = "0xF07D38")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public SurfacePistol.Surface Surface
	{
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xF07D40", Offset = "0xF07D40", VA = "0xF07D40")]
		[CompilerGenerated]
		get
		{
			return default(SurfacePistol.Surface);
		}
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xF07D48", Offset = "0xF07D48", VA = "0xF07D48")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public int Mode
	{
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xF07D50", Offset = "0xF07D50", VA = "0xF07D50")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xF07D58", Offset = "0xF07D58", VA = "0xF07D58")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xF07D60", Offset = "0xF07D60", VA = "0xF07D60")]
	public PaintData(Vector3 _position, string _matName, int _id, SurfacePistol.Surface _surface, int _mode)
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xF07DD4", Offset = "0xF07DD4", VA = "0xF07DD4")]
	public void ModifyMat(string _mat)
	{
	}
}
[Token(Token = "0x20002CE")]
public class StairsManagement : MonoBehaviour
{
	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool inStairs;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StairsTP[] stairsTPs;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Room stairsRoom;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool previouslyTeleporting;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject canvas;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TeleportationValidity tpValidity;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BlinkFade blinkFade;

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xF07DDC", Offset = "0xF07DDC", VA = "0xF07DDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xF07E68", Offset = "0xF07E68", VA = "0xF07E68")]
	private static Room GetStairRoom(GameObject stair)
	{
		return null;
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xF0809C", Offset = "0xF0809C", VA = "0xF0809C")]
	private static Vector3 GetDestinationUp(Room room)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xF0838C", Offset = "0xF0838C", VA = "0xF0838C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xF08F74", Offset = "0xF08F74", VA = "0xF08F74")]
	private static void TeleportStairs(GameObject canvas, BlinkFade blinkFade)
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xF0967C", Offset = "0xF0967C", VA = "0xF0967C")]
	public StairsManagement()
	{
	}
}
[Token(Token = "0x20002CF")]
public class StairsManagementV2 : MonoBehaviour
{
	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inStairs;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool postTeleportSubscribed;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StairsTP[] stairsTPs;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject canvas;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TeleportationValidity tpValidity;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TeleportDestination teleportDestination;

	[Token(Token = "0x170001CB")]
	public GameObject Canvas
	{
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xF096F4", Offset = "0xF096F4", VA = "0xF096F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CC")]
	public static bool cancelTP
	{
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xF096FC", Offset = "0xF096FC", VA = "0xF096FC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xF09754", Offset = "0xF09754", VA = "0xF09754")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xF097B0", Offset = "0xF097B0", VA = "0xF097B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xF098EC", Offset = "0xF098EC", VA = "0xF098EC")]
	private bool IsUpTPDestinationValid(in StairsTP[] stairsTPs)
	{
		return default(bool);
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xF099CC", Offset = "0xF099CC", VA = "0xF099CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xF0A934", Offset = "0xF0A934", VA = "0xF0A934")]
	private void TeleportStairs(GameObject canvas)
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xF0B244", Offset = "0xF0B244", VA = "0xF0B244")]
	private void OnPostTeleportFromStair()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xF0B0C0", Offset = "0xF0B0C0", VA = "0xF0B0C0")]
	private void SetTeleport(Vector3 position, Vector3 forward)
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xF0B30C", Offset = "0xF0B30C", VA = "0xF0B30C")]
	public StairsManagementV2()
	{
	}
}
[Token(Token = "0x20002D0")]
public class StairsTP : MonoBehaviour
{
	[Token(Token = "0x20002D1")]
	public enum StairsDirection
	{
		[Token(Token = "0x40010CD")]
		Up,
		[Token(Token = "0x40010CE")]
		Down
	}

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StairsGenerator STG;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject[] visualFeedback;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int StoreyIndex;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private StairsDirection _stairDirection;

	[Token(Token = "0x170001CD")]
	public StairsDirection stairDirection
	{
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xF0C698", Offset = "0xF0C698", VA = "0xF0C698")]
		get
		{
			return default(StairsDirection);
		}
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xF0C6A0", Offset = "0xF0C6A0", VA = "0xF0C6A0")]
		set
		{
		}
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xF0C388", Offset = "0xF0C388", VA = "0xF0C388")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xF0C6A8", Offset = "0xF0C6A8", VA = "0xF0C6A8")]
	public bool IsValidDestination()
	{
		return default(bool);
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xF0CB78", Offset = "0xF0CB78", VA = "0xF0CB78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xF0CC94", Offset = "0xF0CC94", VA = "0xF0CC94")]
	public StairsTP()
	{
	}
}
[Token(Token = "0x20002D3")]
public class SurfacePistol : MonoBehaviour
{
	[Token(Token = "0x20002D4")]
	public enum Surface
	{
		[Token(Token = "0x40010EF")]
		Wall,
		[Token(Token = "0x40010F0")]
		Floor,
		[Token(Token = "0x40010F1")]
		Ceiling
	}

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XRRayInteractor pistolRay;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject previousSurface;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject HitObject;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> highlight;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2Int previousCell;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2Int previousCellPainted;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Room previousRoomPainted;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int previousWallCell;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Wall previousWallPainted;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previousWallCellPainted;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material SelectedMaterial;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material HighLightMat;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string previousMat;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TextureMenuLoader Menu;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PistolScreen pistolUI;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DataBaseManager DBM;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int Mode;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int previousMode;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isPainting;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool isUIGrabbed;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool isclicked;

	[Token(Token = "0x40010E5")]
	private const int poolSize = 30;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<int, Surface> layerToSurface;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject[] tilesPooled;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PaintData[] tilesData;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int poolIndex;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float poolTimer;

	[Token(Token = "0x40010EB")]
	private const float maxTimeBeforeProcessPaintData = 5f;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Sprite DefaultFloor;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Sprite DefaultWall;

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xF0CCCC", Offset = "0xF0CCCC", VA = "0xF0CCCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xF0CE08", Offset = "0xF0CE08", VA = "0xF0CE08")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xF0D174", Offset = "0xF0D174", VA = "0xF0D174")]
	private void AllocHighlight()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xF0D204", Offset = "0xF0D204", VA = "0xF0D204")]
	private void DestroyHighlight()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xF0D3A8", Offset = "0xF0D3A8", VA = "0xF0D3A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xF0E0F4", Offset = "0xF0E0F4", VA = "0xF0E0F4")]
	private void GetRaycastHit()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xF0E594", Offset = "0xF0E594", VA = "0xF0E594")]
	private bool IsPointOnWall(Vector3 point, Wall wall, bool isOnLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xF0E6E0", Offset = "0xF0E6E0", VA = "0xF0E6E0")]
	private void GenericInteraction(Vector3 point, Surface surface, int id)
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xF0E9AC", Offset = "0xF0E9AC", VA = "0xF0E9AC")]
	private void GetHitMaterial(Vector3 point, Surface Type)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xF0ECB0", Offset = "0xF0ECB0", VA = "0xF0ECB0")]
	private void DrawHighlight(Vector3 point, Surface Type, int id)
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xF0F1CC", Offset = "0xF0F1CC", VA = "0xF0F1CC")]
	private void Paint(Vector3 point, Surface Type, int id)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xF1132C", Offset = "0xF1132C", VA = "0xF1132C")]
	private int FindTile(Vector3 position)
	{
		return default(int);
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xF10034", Offset = "0xF10034", VA = "0xF10034")]
	private void PaintCell(Vector3 point, Surface Type, int id)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xF1169C", Offset = "0xF1169C", VA = "0xF1169C")]
	private void TileMaterialLoaded(Material mat, MaterialsPool.SDelegateParams param)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xF11728", Offset = "0xF11728", VA = "0xF11728")]
	private int SearchForPosition(int mode)
	{
		return default(int);
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xF1185C", Offset = "0xF1185C", VA = "0xF1185C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xF11A78", Offset = "0xF11A78", VA = "0xF11A78")]
	private void ForcePaintProcessEvent()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xF0F7C8", Offset = "0xF0F7C8", VA = "0xF0F7C8")]
	private void PaintEvent(Vector3 pos, string mat, int mode, int id, int type, bool pooled = false)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xF0D620", Offset = "0xF0D620", VA = "0xF0D620")]
	private void ProcessPaintData()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xF11900", Offset = "0xF11900", VA = "0xF11900")]
	private void DeletePool()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xF11580", Offset = "0xF11580", VA = "0xF11580")]
	public static void GetTileMatFromPool(GameObject tile, string name, MaterialsPool.MaterialLoadedDelegate _delegate)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xF114C4", Offset = "0xF114C4", VA = "0xF114C4")]
	public static void FreeTileMaterial(GameObject tile)
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xF11B4C", Offset = "0xF11B4C", VA = "0xF11B4C")]
	public SurfacePistol()
	{
	}
}
[Token(Token = "0x20002D5")]
public class TeleportationValidity : MonoBehaviour
{
	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> contactObjects;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<GameObject, List<Material[]>> oldGOs;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<GameObject> newGOs;

	[Token(Token = "0x170001CE")]
	public bool Collision
	{
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xF12324", Offset = "0xF12324", VA = "0xF12324")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0xF11C00", Offset = "0xF11C00", VA = "0xF11C00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xF11CCC", Offset = "0xF11CCC", VA = "0xF11CCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xF11D3C", Offset = "0xF11D3C", VA = "0xF11D3C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xF12374", Offset = "0xF12374", VA = "0xF12374")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xF127D0", Offset = "0xF127D0", VA = "0xF127D0")]
	public TeleportationValidity()
	{
	}
}
[Token(Token = "0x20002D6")]
public class ToolGrab : MonoBehaviour
{
	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ManagerTools.HandHolding hand;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool changedHand;

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xF12858", Offset = "0xF12858", VA = "0xF12858")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xF12A44", Offset = "0xF12A44", VA = "0xF12A44")]
	public ToolGrab()
	{
	}
}
[Token(Token = "0x20002D7")]
public class ToolUIGrab : DistanceUIGrab
{
	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xF12A4C", Offset = "0xF12A4C", VA = "0xF12A4C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xF12AB8", Offset = "0xF12AB8", VA = "0xF12AB8")]
	private void SetHandTransform()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xF12BA4", Offset = "0xF12BA4", VA = "0xF12BA4")]
	public ToolUIGrab()
	{
	}
}
[Token(Token = "0x20002D8")]
public class UIGrab : MonoBehaviour
{
	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isRightGrabbed;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool isLeftGrabbed;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected GameObject menuHovered;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject menuSelected;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected OVRPlugin.Handedness handedness;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Transform handTransform;

	[Token(Token = "0x170001CF")]
	public static bool IsGrabAllowed
	{
		[Token(Token = "0x6001200")]
		[Address(RVA = "0xF12BAC", Offset = "0xF12BAC", VA = "0xF12BAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D0")]
	public static bool IsMenuGrabbed
	{
		[Token(Token = "0x6001201")]
		[Address(RVA = "0xF0E94C", Offset = "0xF0E94C", VA = "0xF0E94C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D1")]
	protected float GripValue
	{
		[Token(Token = "0x6001202")]
		[Address(RVA = "0xF12C58", Offset = "0xF12C58", VA = "0xF12C58")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0xF12CD8", Offset = "0xF12CD8", VA = "0xF12CD8")]
	public void Start()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xF12D14", Offset = "0xF12D14", VA = "0xF12D14")]
	protected void Grab(GameObject menu)
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xF1309C", Offset = "0xF1309C", VA = "0xF1309C")]
	protected void Drop()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xF132FC", Offset = "0xF132FC", VA = "0xF132FC")]
	protected void SendHaptics(float amplitude)
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xF13038", Offset = "0xF13038", VA = "0xF13038")]
	protected void ToggleGrabbingHand(bool isGrabbing)
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xF13374", Offset = "0xF13374", VA = "0xF13374")]
	public UIGrab()
	{
	}
}
[Token(Token = "0x20002D9")]
public enum UIGrabInteraction
{
	[Token(Token = "0x40010FE")]
	Grip,
	[Token(Token = "0x40010FF")]
	Trigger
}
[Token(Token = "0x20002DA")]
public class UpdateHandAnimation : MonoBehaviour
{
	[Token(Token = "0x20002DB")]
	[CompilerGenerated]
	private sealed class <DelayTransitionParameter>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateHandAnimation <>4__this;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int state;

		[Token(Token = "0x170001D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xF13F90", Offset = "0xF13F90", VA = "0xF13F90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xF13FD8", Offset = "0xF13FD8", VA = "0xF13FD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xF13E60", Offset = "0xF13E60", VA = "0xF13E60")]
		[DebuggerHidden]
		public <DelayTransitionParameter>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xF13EB8", Offset = "0xF13EB8", VA = "0xF13EB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xF13EBC", Offset = "0xF13EBC", VA = "0xF13EBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xF13F98", Offset = "0xF13F98", VA = "0xF13F98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ManagerTools.HandHolding side;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private ManagerTools.TransitionState prevState;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator handAnimator;

	[Token(Token = "0x4001103")]
	private const int maxUI = 10;

	[Token(Token = "0x4001104")]
	private const float handUIDistance = 0.15f;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool previouslyInTransition;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isHandInTransition;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float grip;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float trigger;

	[Token(Token = "0x4001109")]
	private const float triggerOffset = 0.1f;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int waitingForTransitionValue;

	[Token(Token = "0x170001D2")]
	public float Trigger
	{
		[Token(Token = "0x6001209")]
		[Address(RVA = "0xF1337C", Offset = "0xF1337C", VA = "0xF1337C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xF13384", Offset = "0xF13384", VA = "0xF13384")]
	private void Start()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xF13470", Offset = "0xF13470", VA = "0xF13470")]
	private void Update()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xF13DDC", Offset = "0xF13DDC", VA = "0xF13DDC")]
	[IteratorStateMachine(typeof(<DelayTransitionParameter>d__15))]
	private IEnumerator DelayTransitionParameter(int state)
	{
		return null;
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xF13A5C", Offset = "0xF13A5C", VA = "0xF13A5C")]
	private void CheckCloseUI(ref float trigger, Vector3 position)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xF13E88", Offset = "0xF13E88", VA = "0xF13E88")]
	private float SmoothHandAnimation(float distance)
	{
		return default(float);
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xF13448", Offset = "0xF13448", VA = "0xF13448")]
	public void SwitchHandMode()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xF13EB0", Offset = "0xF13EB0", VA = "0xF13EB0")]
	public UpdateHandAnimation()
	{
	}
}
[Token(Token = "0x20002DC")]
public class WallCollision : MonoBehaviour
{
	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int collision;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float alpha;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isNotHomeNorTuto;

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xF13FE0", Offset = "0xF13FE0", VA = "0xF13FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xF140DC", Offset = "0xF140DC", VA = "0xF140DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xF143E8", Offset = "0xF143E8", VA = "0xF143E8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xF1496C", Offset = "0xF1496C", VA = "0xF1496C")]
	public void Update()
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xF147F0", Offset = "0xF147F0", VA = "0xF147F0")]
	public bool IsHeadOutside()
	{
		return default(bool);
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xF14CCC", Offset = "0xF14CCC", VA = "0xF14CCC")]
	public WallCollision()
	{
	}
}
[Token(Token = "0x20002DD")]
public static class UnityGraphicsCustom
{
	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FieldInfo MainLightCastShadows_FieldInfo;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static FieldInfo AdditionalLightCastShadows_FieldInfo;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static FieldInfo MainLightShadowmapResolution_FieldInfo;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static FieldInfo AdditionalLightShadowmapResolution_FieldInfo;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static FieldInfo Cascade2Split_FieldInfo;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static FieldInfo Cascade4Split_FieldInfo;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static FieldInfo SoftShadowsEnabled_FieldInfo;

	[Token(Token = "0x170001D5")]
	public static bool MainLightCastShadows
	{
		[Token(Token = "0x600121E")]
		[Address(RVA = "0xF14F78", Offset = "0xF14F78", VA = "0xF14F78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600121F")]
		[Address(RVA = "0xF15034", Offset = "0xF15034", VA = "0xF15034")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	public static bool AdditionalLightCastShadows
	{
		[Token(Token = "0x6001220")]
		[Address(RVA = "0xF150E4", Offset = "0xF150E4", VA = "0xF150E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001221")]
		[Address(RVA = "0xF151A0", Offset = "0xF151A0", VA = "0xF151A0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	public static ShadowResolution MainLightShadowResolution
	{
		[Token(Token = "0x6001222")]
		[Address(RVA = "0xF15250", Offset = "0xF15250", VA = "0xF15250")]
		get
		{
			return default(ShadowResolution);
		}
		[Token(Token = "0x6001223")]
		[Address(RVA = "0xF1530C", Offset = "0xF1530C", VA = "0xF1530C")]
		set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	public static ShadowResolution AdditionalLightShadowResolution
	{
		[Token(Token = "0x6001224")]
		[Address(RVA = "0xF153BC", Offset = "0xF153BC", VA = "0xF153BC")]
		get
		{
			return default(ShadowResolution);
		}
		[Token(Token = "0x6001225")]
		[Address(RVA = "0xF15478", Offset = "0xF15478", VA = "0xF15478")]
		set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	public static float Cascade2Split
	{
		[Token(Token = "0x6001226")]
		[Address(RVA = "0xF15528", Offset = "0xF15528", VA = "0xF15528")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001227")]
		[Address(RVA = "0xF155E4", Offset = "0xF155E4", VA = "0xF155E4")]
		set
		{
		}
	}

	[Token(Token = "0x170001DA")]
	public static Vector3 Cascade4Split
	{
		[Token(Token = "0x6001228")]
		[Address(RVA = "0xF15694", Offset = "0xF15694", VA = "0xF15694")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001229")]
		[Address(RVA = "0xF15754", Offset = "0xF15754", VA = "0xF15754")]
		set
		{
		}
	}

	[Token(Token = "0x170001DB")]
	public static bool SoftShadowsEnabled
	{
		[Token(Token = "0x600122A")]
		[Address(RVA = "0xF15820", Offset = "0xF15820", VA = "0xF15820")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600122B")]
		[Address(RVA = "0xF158DC", Offset = "0xF158DC", VA = "0xF158DC")]
		set
		{
		}
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xF14CDC", Offset = "0xF14CDC", VA = "0xF14CDC")]
	static UnityGraphicsCustom()
	{
	}
}
namespace VRUiKits.Utils
{
	[Token(Token = "0x20002DE")]
	public class ImageHoverOutline : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image targetImage;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color outlineColor;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float outlineWidth;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.UI.Outline outline;

		[Token(Token = "0x170001DC")]
		private UnityEngine.UI.Outline _Outline
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xF1598C", Offset = "0xF1598C", VA = "0xF1598C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xF15B28", Offset = "0xF15B28", VA = "0xF15B28", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xF15BC0", Offset = "0xF15BC0", VA = "0xF15BC0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xF15C58", Offset = "0xF15C58", VA = "0xF15C58")]
		public ImageHoverOutline()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class TextHoverScale : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text targetText;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scale;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int originSize;

		[Token(Token = "0x170001DD")]
		private Text TargetText
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0xF15C74", Offset = "0xF15C74", VA = "0xF15C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xF15D54", Offset = "0xF15D54", VA = "0xF15D54", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xF15EC4", Offset = "0xF15EC4", VA = "0xF15EC4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xF15F5C", Offset = "0xF15F5C", VA = "0xF15F5C")]
		public TextHoverScale()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class GazeInputModule : UIKitInputModule
	{
		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool previewWithoutHeadset;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool preventRepeatClick;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RaycastResult currentRaycast;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GazeInputModule Instance;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PointerEventData pointerEventData;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PointerEventData lastPressedEventData;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject currentTarget;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float currentClickTime;

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xF15F70", Offset = "0xF15F70", VA = "0xF15F70")]
		protected GazeInputModule()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xF15FF4", Offset = "0xF15FF4", VA = "0xF15FF4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xF1600C", Offset = "0xF1600C", VA = "0xF1600C")]
		private void GazeControl()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xF16224", Offset = "0xF16224", VA = "0xF16224")]
		private void HandleSelection()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xF16554", Offset = "0xF16554", VA = "0xF16554")]
		private void ReleaseLastPress()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xF16634", Offset = "0xF16634", VA = "0xF16634", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xF166E8", Offset = "0xF166E8", VA = "0xF166E8", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xF16704", Offset = "0xF16704", VA = "0xF16704")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xF16740", Offset = "0xF16740", VA = "0xF16740", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}
	}
	[Token(Token = "0x20002E1")]
	[RequireComponent(typeof(VREventSystemHelper))]
	public class LaserInputModule : UIKitInputModule
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VRPlatform platform;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Pointer pointer;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject currentTarget;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float currentClickTime;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LaserInputModule _instance;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera helperCamera;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UIKitPointer controller;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool triggerPressed;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool triggerPressedLastFrame;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData pointerEventData;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastRaycastHitPoint;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float pressedDistance;

		[Token(Token = "0x170001DE")]
		public static LaserInputModule instance
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xF16788", Offset = "0xF16788", VA = "0xF16788")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xF167D0", Offset = "0xF167D0", VA = "0xF167D0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xF16938", Offset = "0xF16938", VA = "0xF16938", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xF16C2C", Offset = "0xF16C2C", VA = "0xF16C2C")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xF16B54", Offset = "0xF16B54", VA = "0xF16B54")]
		private void SetCanvasCamera()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xF16C28", Offset = "0xF16C28", VA = "0xF16C28")]
		private void SetupHmd()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xF16C30", Offset = "0xF16C30", VA = "0xF16C30")]
		public void SetController(UIKitPointer _controller)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xF16C38", Offset = "0xF16C38", VA = "0xF16C38")]
		public void RemoveController(UIKitPointer _controller)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xF16CF0", Offset = "0xF16CF0", VA = "0xF16CF0", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xF16D94", Offset = "0xF16D94", VA = "0xF16D94")]
		private void UpdateHelperCamera()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xF170AC", Offset = "0xF170AC", VA = "0xF170AC")]
		private void CheckTriggerStatus()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xF16E34", Offset = "0xF16E34", VA = "0xF16E34")]
		private void ProcessGazePointer()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xF17100", Offset = "0xF17100", VA = "0xF17100")]
		private void ProcessLaserPointer()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xF1798C", Offset = "0xF1798C", VA = "0xF1798C")]
		private void ProcessPress(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xF17408", Offset = "0xF17408", VA = "0xF17408")]
		private PointerEventData GetPointerEventData()
		{
			return null;
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xF1833C", Offset = "0xF1833C", VA = "0xF1833C")]
		private bool TriggerReleasedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xF1831C", Offset = "0xF1831C", VA = "0xF1831C")]
		private bool TriggerPressedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xF172C0", Offset = "0xF172C0", VA = "0xF172C0")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xF1835C", Offset = "0xF1835C", VA = "0xF1835C", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xF18410", Offset = "0xF18410", VA = "0xF18410", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xF1842C", Offset = "0xF1842C", VA = "0xF1842C")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xF18468", Offset = "0xF18468", VA = "0xF18468")]
		private bool ShouldStartDrag(float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xF18484", Offset = "0xF18484", VA = "0xF18484", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xF18084", Offset = "0xF18084", VA = "0xF18084")]
		private void ProcessDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xF184CC", Offset = "0xF184CC", VA = "0xF184CC")]
		public LaserInputModule()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public enum VRPlatform
	{
		[Token(Token = "0x4001136")]
		NONE,
		[Token(Token = "0x4001137")]
		OCULUS,
		[Token(Token = "0x4001138")]
		VIVE,
		[Token(Token = "0x4001139")]
		VIVE_STEAM2
	}
	[Token(Token = "0x20002E3")]
	public enum Pointer
	{
		[Token(Token = "0x400113B")]
		RightHand,
		[Token(Token = "0x400113C")]
		LeftHand,
		[Token(Token = "0x400113D")]
		Eye
	}
	[Token(Token = "0x20002E4")]
	public class MouseInputModule : StandaloneInputModule
	{
		[Token(Token = "0x6001256")]
		[Address(RVA = "0xF184E8", Offset = "0xF184E8", VA = "0xF184E8", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xF18540", Offset = "0xF18540", VA = "0xF18540")]
		protected new void ProcessMouseEvent()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xF18818", Offset = "0xF18818", VA = "0xF18818")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xF1885C", Offset = "0xF1885C", VA = "0xF1885C")]
		protected new void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xF18EC4", Offset = "0xF18EC4", VA = "0xF18EC4")]
		public MouseInputModule()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class GazeProgressCircle : MonoBehaviour
	{
		[Token(Token = "0x20002E6")]
		[CompilerGenerated]
		private sealed class <FillCircle>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GazeProgressCircle <>4__this;

			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170001DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001263")]
				[Address(RVA = "0xF194BC", Offset = "0xF194BC", VA = "0xF194BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001265")]
				[Address(RVA = "0xF19504", Offset = "0xF19504", VA = "0xF19504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001260")]
			[Address(RVA = "0xF19324", Offset = "0xF19324", VA = "0xF19324")]
			[DebuggerHidden]
			public <FillCircle>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001261")]
			[Address(RVA = "0xF19354", Offset = "0xF19354", VA = "0xF19354", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001262")]
			[Address(RVA = "0xF19358", Offset = "0xF19358", VA = "0xF19358", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001264")]
			[Address(RVA = "0xF194C4", Offset = "0xF194C4", VA = "0xF194C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image circle;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine fillCircle;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UIKitInputModule m_inputModule;

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xF18ECC", Offset = "0xF18ECC", VA = "0xF18ECC")]
		private void Start()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xF19124", Offset = "0xF19124", VA = "0xF19124")]
		private void HandleProgressCircle(GameObject target)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xF192B0", Offset = "0xF192B0", VA = "0xF192B0")]
		[IteratorStateMachine(typeof(<FillCircle>d__5))]
		private IEnumerator FillCircle()
		{
			return null;
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xF191E8", Offset = "0xF191E8", VA = "0xF191E8")]
		private void ResetGazer()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xF1934C", Offset = "0xF1934C", VA = "0xF1934C")]
		public GazeProgressCircle()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class LaserPointer : MonoBehaviour
	{
		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LineRenderer lr;

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xF1950C", Offset = "0xF1950C", VA = "0xF1950C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xF19564", Offset = "0xF19564", VA = "0xF19564")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xF19754", Offset = "0xF19754", VA = "0xF19754")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xF19868", Offset = "0xF19868", VA = "0xF19868")]
		public LaserPointer()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class UIKitPointer : MonoBehaviour
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gazePointer;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject laser;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Pointer? temp;

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xF19870", Offset = "0xF19870", VA = "0xF19870")]
		private void Start()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xF19958", Offset = "0xF19958", VA = "0xF19958")]
		private void Update()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xF19A84", Offset = "0xF19A84", VA = "0xF19A84")]
		private void ResetTransform(Transform trans)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xF19B64", Offset = "0xF19B64", VA = "0xF19B64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xF19C48", Offset = "0xF19C48", VA = "0xF19C48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xF19D30", Offset = "0xF19D30", VA = "0xF19D30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xF19E14", Offset = "0xF19E14", VA = "0xF19E14")]
		public UIKitPointer()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class UIKitInputModule : BaseInputModule
	{
		[Token(Token = "0x20002EA")]
		public delegate void OnGazeChangedHandler(GameObject target);

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float gazeTimeInSeconds;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float delayTimeInSeconds;

		[Token(Token = "0x14000021")]
		public event OnGazeChangedHandler OnGazeChanged
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0xF19088", Offset = "0xF19088", VA = "0xF19088")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xF19E1C", Offset = "0xF19E1C", VA = "0xF19E1C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xF16538", Offset = "0xF16538", VA = "0xF16538")]
		protected void RaiseGazeChangeEvent(GameObject target)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xF19EB8", Offset = "0xF19EB8", VA = "0xF19EB8", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xF15FE0", Offset = "0xF15FE0", VA = "0xF15FE0")]
		public UIKitInputModule()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class TextMeshProConverter : MonoBehaviour
	{
		[Token(Token = "0x600127A")]
		[Address(RVA = "0xF19EFC", Offset = "0xF19EFC", VA = "0xF19EFC")]
		public static int CheckTextsTotalNumber()
		{
			return default(int);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xF19F58", Offset = "0xF19F58", VA = "0xF19F58")]
		public static void ConvertAllTexts(bool allowTMPControlRectSize, TMP_FontAsset fontAsset)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xF1A69C", Offset = "0xF1A69C", VA = "0xF1A69C")]
		public static void ConvertSelectedTexts(UnityEngine.Object[] selected, bool allowTMPControlRectSize, TMP_FontAsset fontAsset)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xF19FB4", Offset = "0xF19FB4", VA = "0xF19FB4")]
		private static void ConvertTextToTMP(List<Text> foundedTexts, bool allowTMPControlRectSize, TMP_FontAsset fontAsset)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xF1A984", Offset = "0xF1A984", VA = "0xF1A984")]
		public static void UpdateAllTmp(TMP_FontAsset fontAsset)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xF1AB9C", Offset = "0xF1AB9C", VA = "0xF1AB9C")]
		public static void UpdateSelectedTmp(UnityEngine.Object[] selected, TMP_FontAsset fontAsset, bool includeInactive)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xF1A918", Offset = "0xF1A918", VA = "0xF1A918")]
		private static FontStyles ConvertFontStyle(FontStyle style)
		{
			return default(FontStyles);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xF1A93C", Offset = "0xF1A93C", VA = "0xF1A93C")]
		private static TextAlignmentOptions ConvertTextAlignment(TextAnchor anchor)
		{
			return default(TextAlignmentOptions);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xF1A974", Offset = "0xF1A974", VA = "0xF1A974")]
		private static TextOverflowModes ConvertTextOverflow(VerticalWrapMode wrapMode)
		{
			return default(TextOverflowModes);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xF1A95C", Offset = "0xF1A95C", VA = "0xF1A95C")]
		private static bool IsWordWrappingEnabled(HorizontalWrapMode wrapMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001284")]
		private static List<T> GetAllObjectsInScene<T>() where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xF1AD84", Offset = "0xF1AD84", VA = "0xF1AD84")]
		public TextMeshProConverter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EC")]
	public class Card
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string subtitle;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite image;

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xF1AD8C", Offset = "0xF1AD8C", VA = "0xF1AD8C")]
		public Card()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class CardItem : MonoBehaviour
	{
		[Token(Token = "0x20002EE")]
		public delegate void OnCardClickedHandler(Card card);

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform title;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform subtitle;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform description;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image image;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Card card;

		[Token(Token = "0x170001E1")]
		public TextMeshProUGUI Title
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0xF1AECC", Offset = "0xF1AECC", VA = "0xF1AECC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public TextMeshProUGUI Subtitle
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0xF1AF68", Offset = "0xF1AF68", VA = "0xF1AF68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		public TextMeshProUGUI Description
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0xF1B004", Offset = "0xF1B004", VA = "0xF1B004")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public Card Card
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0xF1B0A0", Offset = "0xF1B0A0", VA = "0xF1B0A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600128D")]
			[Address(RVA = "0xF1B0A8", Offset = "0xF1B0A8", VA = "0xF1B0A8")]
			set
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event OnCardClickedHandler OnCardClicked
		{
			[Token(Token = "0x6001287")]
			[Address(RVA = "0xF1AD94", Offset = "0xF1AD94", VA = "0xF1AD94")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001288")]
			[Address(RVA = "0xF1AE30", Offset = "0xF1AE30", VA = "0xF1AE30")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xF1B26C", Offset = "0xF1B26C", VA = "0xF1B26C")]
		public void Awake()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xF1B380", Offset = "0xF1B380", VA = "0xF1B380")]
		public CardItem()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class CardListManager : MonoBehaviour
	{
		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform listContent;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemTemplate;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<Card> cardList;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Card selectedCard;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<CardItem> cardItems;

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xF1B52C", Offset = "0xF1B52C", VA = "0xF1B52C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xF1B5E4", Offset = "0xF1B5E4", VA = "0xF1B5E4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xF1B558", Offset = "0xF1B558", VA = "0xF1B558")]
		public void PopulateList()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xF1B94C", Offset = "0xF1B94C", VA = "0xF1B94C")]
		public void AddCardItem(Card card)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xF1B7B0", Offset = "0xF1B7B0", VA = "0xF1B7B0")]
		private void DrawCardItem(Card card)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xF1BA04", Offset = "0xF1BA04", VA = "0xF1BA04")]
		private void SetSelectedCard(Card card)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xF1BA0C", Offset = "0xF1BA0C", VA = "0xF1BA0C")]
		public CardListManager()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class InputFocusHelper : MonoBehaviour, ISelectHandler, IEventSystemHandler, IPointerClickHandler, IEndDragHandler
	{
		[Token(Token = "0x20002F1")]
		[CompilerGenerated]
		private sealed class <ActivateInputFieldWithCaret>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputFocusHelper <>4__this;

			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isMoveCaretToEnd;

			[Token(Token = "0x170001E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012A9")]
				[Address(RVA = "0xF1BEFC", Offset = "0xF1BEFC", VA = "0xF1BEFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012AB")]
				[Address(RVA = "0xF1BF44", Offset = "0xF1BF44", VA = "0xF1BF44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012A6")]
			[Address(RVA = "0xF1BD5C", Offset = "0xF1BD5C", VA = "0xF1BD5C")]
			[DebuggerHidden]
			public <ActivateInputFieldWithCaret>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60012A7")]
			[Address(RVA = "0xF1BE20", Offset = "0xF1BE20", VA = "0xF1BE20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012A8")]
			[Address(RVA = "0xF1BE24", Offset = "0xF1BE24", VA = "0xF1BE24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012AA")]
			[Address(RVA = "0xF1BF04", Offset = "0xF1BF04", VA = "0xF1BF04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField input;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int caretPosition;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int selectionAnchorPosition;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int selectionFocusPosition;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float originColorAlpha;

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xF1BAE4", Offset = "0xF1BAE4", VA = "0xF1BAE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xF1BB5C", Offset = "0xF1BB5C", VA = "0xF1BB5C", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xF1BCFC", Offset = "0xF1BCFC", VA = "0xF1BCFC", Slot = "5")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xF1BD58", Offset = "0xF1BD58", VA = "0xF1BD58", Slot = "7")]
		public virtual void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xF1BC74", Offset = "0xF1BC74", VA = "0xF1BC74")]
		[IteratorStateMachine(typeof(<ActivateInputFieldWithCaret>d__9))]
		private IEnumerator ActivateInputFieldWithCaret(bool isMoveCaretToEnd)
		{
			return null;
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xF1BD84", Offset = "0xF1BD84", VA = "0xF1BD84")]
		public void ForceActivate()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xF1BD00", Offset = "0xF1BD00", VA = "0xF1BD00")]
		public void StorePositionInfo()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xF1BDA0", Offset = "0xF1BDA0", VA = "0xF1BDA0")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xF1BDEC", Offset = "0xF1BDEC", VA = "0xF1BDEC")]
		private void SetSelectionAlpha(float alpha)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xF1BE18", Offset = "0xF1BE18", VA = "0xF1BE18")]
		public InputFocusHelper()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class UIKitInputField : MonoBehaviour, ISelectHandler, IEventSystemHandler, IPointerClickHandler, IDeselectHandler
	{
		[Token(Token = "0x20002F3")]
		public enum ContentType
		{
			[Token(Token = "0x4001173")]
			Standard,
			[Token(Token = "0x4001174")]
			Password
		}

		[Token(Token = "0x20002F4")]
		[CompilerGenerated]
		private sealed class <BlinkCaret>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIKitInputField <>4__this;

			[Token(Token = "0x170001E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012B8")]
				[Address(RVA = "0xF1C680", Offset = "0xF1C680", VA = "0xF1C680", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012BA")]
				[Address(RVA = "0xF1C6C8", Offset = "0xF1C6C8", VA = "0xF1C6C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xF1C4C4", Offset = "0xF1C4C4", VA = "0xF1C4C4")]
			[DebuggerHidden]
			public <BlinkCaret>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xF1C550", Offset = "0xF1C550", VA = "0xF1C550", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xF1C554", Offset = "0xF1C554", VA = "0xF1C554", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xF1C688", Offset = "0xF1C688", VA = "0xF1C688", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform wrapper;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform m_textTransform;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_placeholderTransform;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform m_caretTransform;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string text;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int characterLimit;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ContentType contentType;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 4f)]
		public float caretBlinkRate;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float maxW_textComponent;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string displayedText;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string prevText;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TMP_Text textComponent;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TMP_Text placeholder;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TMP_Text caretText;

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xF1BF4C", Offset = "0xF1BF4C", VA = "0xF1BF4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xF1C074", Offset = "0xF1C074", VA = "0xF1C074", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xF1C1D0", Offset = "0xF1C1D0", VA = "0xF1C1D0", Slot = "5")]
		public void OnPointerClick(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xF1C24C", Offset = "0xF1C24C", VA = "0xF1C24C", Slot = "6")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xF1C174", Offset = "0xF1C174", VA = "0xF1C174")]
		public void ForceCaretUpdate()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xF1C300", Offset = "0xF1C300", VA = "0xF1C300")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xF1C448", Offset = "0xF1C448", VA = "0xF1C448")]
		private void CalculateLengthOfText(string text)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xF1C450", Offset = "0xF1C450", VA = "0xF1C450")]
		[IteratorStateMachine(typeof(<BlinkCaret>d__22))]
		private IEnumerator BlinkCaret()
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xF1C4EC", Offset = "0xF1C4EC", VA = "0xF1C4EC")]
		public UIKitInputField()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class KeyboardExtentionMethods : MonoBehaviour
	{
		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject symbols;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject alphabets;

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xF1C6D0", Offset = "0xF1C6D0", VA = "0xF1C6D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xF1C7D4", Offset = "0xF1C7D4", VA = "0xF1C7D4")]
		public void SwitchSymbols()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xF1C7F0", Offset = "0xF1C7F0", VA = "0xF1C7F0")]
		public void ToggleObject(GameObject go)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xF1C824", Offset = "0xF1C824", VA = "0xF1C824")]
		public KeyboardExtentionMethods()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class KeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x20002F7")]
		public delegate void OnInputValueUpdatedHandler(string value);

		[Token(Token = "0x20002FA")]
		[CompilerGenerated]
		private sealed class <WaitTargetProcessEvent>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action callback;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyboardManager <>4__this;

			[Token(Token = "0x170001EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012DE")]
				[Address(RVA = "0xF1DAB8", Offset = "0xF1DAB8", VA = "0xF1DAB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012E0")]
				[Address(RVA = "0xF1DB00", Offset = "0xF1DB00", VA = "0xF1DB00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xF1D574", Offset = "0xF1D574", VA = "0xF1D574")]
			[DebuggerHidden]
			public <WaitTargetProcessEvent>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xF1D8A8", Offset = "0xF1D8A8", VA = "0xF1D8A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xF1D8AC", Offset = "0xF1D8AC", VA = "0xF1D8AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xF1DAC0", Offset = "0xF1DAC0", VA = "0xF1DAC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("If the character is uppercase at the initialization")]
		[Header("User defined")]
		public bool isUppercase;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Essentials")]
		public Transform keys;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TMP_InputField lastTarget;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static TMP_InputField target;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Key[] keyList;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool capslockFlag;

		[Token(Token = "0x170001E9")]
		public static TMP_InputField Target
		{
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xF1C82C", Offset = "0xF1C82C", VA = "0xF1C82C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xF1BC08", Offset = "0xF1BC08", VA = "0xF1BC08")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		private string Input
		{
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0xF1CAC8", Offset = "0xF1CAC8", VA = "0xF1CAC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xF1CB60", Offset = "0xF1CB60", VA = "0xF1CB60")]
			set
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event OnInputValueUpdatedHandler OnInputValueUpdated
		{
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xF1C990", Offset = "0xF1C990", VA = "0xF1C990")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0xF1CA2C", Offset = "0xF1CA2C", VA = "0xF1CA2C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xF1CBF0", Offset = "0xF1CBF0", VA = "0xF1CBF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xF1CC54", Offset = "0xF1CC54", VA = "0xF1CC54")]
		private void Start()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xF1CF84", Offset = "0xF1CF84", VA = "0xF1CF84")]
		public void Backspace()
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xF1D224", Offset = "0xF1D224", VA = "0xF1D224")]
		public void Clear()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xF1CEB0", Offset = "0xF1CEB0", VA = "0xF1CEB0")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xF1D368", Offset = "0xF1D368", VA = "0xF1D368")]
		public void Shift()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xF1D42C", Offset = "0xF1D42C", VA = "0xF1D42C")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xF1D264", Offset = "0xF1D264", VA = "0xF1D264")]
		public void SetInput(string s)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xF1D0D8", Offset = "0xF1D0D8", VA = "0xF1D0D8")]
		private void ForceInputFieldActivated()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xF1D194", Offset = "0xF1D194", VA = "0xF1D194")]
		[IteratorStateMachine(typeof(<WaitTargetProcessEvent>d__25))]
		private IEnumerator WaitTargetProcessEvent(Action callback)
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xF1D59C", Offset = "0xF1D59C", VA = "0xF1D59C")]
		private void SimulateKeyboardEvent(string s)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xF1D664", Offset = "0xF1D664", VA = "0xF1D664")]
		public KeyboardManager()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class Alphabet : Key
	{
		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xF1DB08", Offset = "0xF1DB08", VA = "0xF1DB08", Slot = "5")]
		public override void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xF1DB6C", Offset = "0xF1DB6C", VA = "0xF1DB6C")]
		public Alphabet()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class Key : MonoBehaviour
	{
		[Token(Token = "0x20002FD")]
		public delegate void OnKeyClickedHandler(string key);

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected TextMeshProUGUI key;

		[Token(Token = "0x14000024")]
		public event OnKeyClickedHandler OnKeyClicked
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0xF1CE14", Offset = "0xF1CE14", VA = "0xF1CE14")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0xF1DB7C", Offset = "0xF1DB7C", VA = "0xF1DB7C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xF1DC18", Offset = "0xF1DC18", VA = "0xF1DC18", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xF1DDDC", Offset = "0xF1DDDC", VA = "0xF1DDDC", Slot = "5")]
		public virtual void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xF1DDE0", Offset = "0xF1DDE0", VA = "0xF1DDE0", Slot = "6")]
		public virtual void ShiftKey()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xF1DB74", Offset = "0xF1DB74", VA = "0xF1DB74")]
		public Key()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class Number : Key
	{
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xF1DE68", Offset = "0xF1DE68", VA = "0xF1DE68")]
		public Number()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class Shift : Key
	{
		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI subscript;

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xF1DE70", Offset = "0xF1DE70", VA = "0xF1DE70", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xF1DF04", Offset = "0xF1DF04", VA = "0xF1DF04", Slot = "6")]
		public override void ShiftKey()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xF1DF90", Offset = "0xF1DF90", VA = "0xF1DF90")]
		public Shift()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class Symbol : Key
	{
		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xF1DF98", Offset = "0xF1DF98", VA = "0xF1DF98")]
		public Symbol()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class MobileKeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("If the character is uppercase at the initialization")]
		[Header("User defined")]
		public bool isUppercase;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Essentials")]
		public Transform keys;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIKitInputField target;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Key[] keyList;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool capslockFlag;

		[Token(Token = "0x170001ED")]
		public static UIKitInputField Target
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xF1DFA0", Offset = "0xF1DFA0", VA = "0xF1DFA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xF1E104", Offset = "0xF1E104", VA = "0xF1E104")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		private string Input
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xF1E15C", Offset = "0xF1E15C", VA = "0xF1E15C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xF1E1F4", Offset = "0xF1E1F4", VA = "0xF1E1F4")]
			set
			{
			}
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xF1E2D8", Offset = "0xF1E2D8", VA = "0xF1E2D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xF1E33C", Offset = "0xF1E33C", VA = "0xF1E33C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xF1E588", Offset = "0xF1E588", VA = "0xF1E588")]
		public void Backspace()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xF1E5E0", Offset = "0xF1E5E0", VA = "0xF1E5E0")]
		public void Clear()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xF1E4B4", Offset = "0xF1E4B4", VA = "0xF1E4B4")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xF1E680", Offset = "0xF1E680", VA = "0xF1E680")]
		public void Shift()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xF1E744", Offset = "0xF1E744", VA = "0xF1E744")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xF1E7C8", Offset = "0xF1E7C8", VA = "0xF1E7C8")]
		public MobileKeyboardManager()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class KeyboardSuggestions : MonoBehaviour
	{
		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardManager keyboardManager;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxNumberOfSuggestions;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> suggestions;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string pattern;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SuggestionButton[] suggestionButtons;

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xF1E7D0", Offset = "0xF1E7D0", VA = "0xF1E7D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xF1E984", Offset = "0xF1E984", VA = "0xF1E984")]
		private void Start()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xF1EC2C", Offset = "0xF1EC2C", VA = "0xF1EC2C")]
		private void Suggest(string word)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xF1ED18", Offset = "0xF1ED18", VA = "0xF1ED18")]
		private bool IsSkipSugestion()
		{
			return default(bool);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xF1F150", Offset = "0xF1F150", VA = "0xF1F150")]
		private void GenerateSuggestionsUI()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xF1F2D0", Offset = "0xF1F2D0", VA = "0xF1F2D0")]
		private void SetSuggestionToCurrentInput(string word)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xF1F4EC", Offset = "0xF1F4EC", VA = "0xF1F4EC")]
		public KeyboardSuggestions()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class SuggestionButton : MonoBehaviour
	{
		[Token(Token = "0x2000304")]
		public delegate void OnSuggestionClickedHandler(string word);

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI suggestionText;

		[Token(Token = "0x14000025")]
		public event OnSuggestionClickedHandler OnSuggestionClicked
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0xF1EB90", Offset = "0xF1EB90", VA = "0xF1EB90")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001307")]
			[Address(RVA = "0xF1F54C", Offset = "0xF1F54C", VA = "0xF1F54C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xF1F5E8", Offset = "0xF1F5E8", VA = "0xF1F5E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xF1F230", Offset = "0xF1F230", VA = "0xF1F230")]
		public void SetSuggestion(string word)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xF1F6D0", Offset = "0xF1F6D0", VA = "0xF1F6D0")]
		public SuggestionButton()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class SuggestionSetup
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SuggestionSetup instance;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Node root;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] textArray;

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xF1E8C0", Offset = "0xF1E8C0", VA = "0xF1E8C0")]
		public SuggestionSetup(string[] textArray)
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xF1F834", Offset = "0xF1F834", VA = "0xF1F834")]
		private void PreProcess()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xF1EE00", Offset = "0xF1EE00", VA = "0xF1EE00")]
		public List<string> GetSuggestions(string word, int maxNumberOfSuggestions)
		{
			return null;
		}
	}
	[Token(Token = "0x2000306")]
	public class Node
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<char, Node> nodes;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> indexes;

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xF1F75C", Offset = "0xF1F75C", VA = "0xF1F75C")]
		public Node()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class Item : MonoBehaviour
	{
		[Token(Token = "0x2000308")]
		public delegate void OnItemSelectedHandler(Item item);

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Color normalColor;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Color highlightedColor;

		[Token(Token = "0x14000026")]
		public event OnItemSelectedHandler OnItemSelected
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xF1FA2C", Offset = "0xF1FA2C", VA = "0xF1FA2C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xF1FAC8", Offset = "0xF1FAC8", VA = "0xF1FAC8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xF1FB64", Offset = "0xF1FB64", VA = "0xF1FB64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xF1FD00", Offset = "0xF1FD00", VA = "0xF1FD00", Slot = "4")]
		public virtual void Activate()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xF1FD8C", Offset = "0xF1FD8C", VA = "0xF1FD8C", Slot = "5")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xF1FE00", Offset = "0xF1FE00", VA = "0xF1FE00")]
		public Item()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class ListSelectionHelper : MonoBehaviour
	{
		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform list;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Item initialActivatedItem;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Item currentSelectedItem;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Item[] items;

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xF1FFA4", Offset = "0xF1FFA4", VA = "0xF1FFA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xF20004", Offset = "0xF20004", VA = "0xF20004")]
		private void Start()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xF20158", Offset = "0xF20158", VA = "0xF20158")]
		private void SelectionHelper(Item item)
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xF2019C", Offset = "0xF2019C", VA = "0xF2019C")]
		public void DeselectCurrentItem()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xF20228", Offset = "0xF20228", VA = "0xF20228")]
		public ListSelectionHelper()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class MenuItem : Item
	{
		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject subMenu;

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xF20230", Offset = "0xF20230", VA = "0xF20230", Slot = "4")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xF202C0", Offset = "0xF202C0", VA = "0xF202C0", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xF20364", Offset = "0xF20364", VA = "0xF20364")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xF20370", Offset = "0xF20370", VA = "0xF20370")]
		public MenuItem()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class TabItem : Item
	{
		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject relatedPanel;

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xF20378", Offset = "0xF20378", VA = "0xF20378", Slot = "4")]
		public override void Activate()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xF20540", Offset = "0xF20540", VA = "0xF20540", Slot = "5")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xF2048C", Offset = "0xF2048C", VA = "0xF2048C")]
		private void ToggleCanvasGroupBlockRaycast(bool enabled)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xF20644", Offset = "0xF20644", VA = "0xF20644")]
		public TabItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030C")]
	public struct Option
	{
		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string value;
	}
	[Token(Token = "0x200030D")]
	public class OptionItem : MonoBehaviour
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Option option;

		[Token(Token = "0x170001EF")]
		public string Value
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0xF2064C", Offset = "0xF2064C", VA = "0xF2064C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		public Option Option
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0xF20654", Offset = "0xF20654", VA = "0xF20654")]
			get
			{
				return default(Option);
			}
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xF2065C", Offset = "0xF2065C", VA = "0xF2065C")]
			set
			{
			}
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xF207A4", Offset = "0xF207A4", VA = "0xF207A4")]
		public void Activate()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xF207C8", Offset = "0xF207C8", VA = "0xF207C8")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xF207EC", Offset = "0xF207EC", VA = "0xF207EC")]
		public OptionItem()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class OptionsManager : MonoBehaviour
	{
		[Token(Token = "0x200030F")]
		public delegate void OnOptionSelectedHandler(int index);

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Template")]
		public GameObject optionTemplate;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<Option> optionsList;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string selectedValue;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int firstSelectedIndex;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int selectedIdx;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<OptionItem> optionItems;

		[Token(Token = "0x14000027")]
		public event OnOptionSelectedHandler OnOptionSelected
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0xF207F4", Offset = "0xF207F4", VA = "0xF207F4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001333")]
			[Address(RVA = "0xF20890", Offset = "0xF20890", VA = "0xF20890")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xF2092C", Offset = "0xF2092C", VA = "0xF2092C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xF20B20", Offset = "0xF20B20", VA = "0xF20B20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xF20958", Offset = "0xF20958", VA = "0xF20958")]
		private void PopulateOptions()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xF20D5C", Offset = "0xF20D5C", VA = "0xF20D5C")]
		public void PrevOption()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xF20DF4", Offset = "0xF20DF4", VA = "0xF20DF4")]
		public void NextOption()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xF20D68", Offset = "0xF20D68", VA = "0xF20D68")]
		public void SetOption(int i)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xF20BD8", Offset = "0xF20BD8", VA = "0xF20BD8")]
		private void ActivateOption(int i)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xF20E00", Offset = "0xF20E00", VA = "0xF20E00")]
		private void DeactivateOption(int i)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xF20E88", Offset = "0xF20E88", VA = "0xF20E88")]
		public OptionsManager()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public enum ButtonDeactiveStyle
	{
		[Token(Token = "0x40011B2")]
		Disabled,
		[Token(Token = "0x40011B3")]
		Hidden
	}
	[Token(Token = "0x2000311")]
	public class Pagination : MonoBehaviour
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Target")]
		public Transform targetObject;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Pagination Buttons")]
		public ButtonDeactiveStyle buttonDeactiveStyle;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button nextBtn;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button prevBtn;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentPage;

		[Token(Token = "0x170001F1")]
		public int CurrentPage
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0xF21004", Offset = "0xF21004", VA = "0xF21004")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001342")]
			[Address(RVA = "0xF2100C", Offset = "0xF2100C", VA = "0xF2100C")]
			set
			{
			}
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xF21328", Offset = "0xF21328", VA = "0xF21328")]
		private void Start()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xF21498", Offset = "0xF21498", VA = "0xF21498")]
		public void Next()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xF214A4", Offset = "0xF214A4", VA = "0xF214A4")]
		public void Prev()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xF211E0", Offset = "0xF211E0", VA = "0xF211E0")]
		private void PagintionBtnControl(bool nextEnabled, bool prevEnabled)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xF214B0", Offset = "0xF214B0", VA = "0xF214B0")]
		public Pagination()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[RequireComponent(typeof(ProgressBarManager))]
	public class CircularProgressBar : MonoBehaviour
	{
		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image circle;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float step;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Value")]
		public Transform valueText;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float min;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float max;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ProgressBarManager progressBarManager;

		[Token(Token = "0x170001F2")]
		public TextMeshProUGUI ValueText
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xF214B8", Offset = "0xF214B8", VA = "0xF214B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public float Value
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0xF21508", Offset = "0xF21508", VA = "0xF21508")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600134A")]
			[Address(RVA = "0xF21524", Offset = "0xF21524", VA = "0xF21524")]
			set
			{
			}
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xF21540", Offset = "0xF21540", VA = "0xF21540")]
		private void Awake()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xF21598", Offset = "0xF21598", VA = "0xF21598")]
		private void Start()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xF2198C", Offset = "0xF2198C", VA = "0xF2198C")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xF21A50", Offset = "0xF21A50", VA = "0xF21A50")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xF21B14", Offset = "0xF21B14", VA = "0xF21B14")]
		private void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xF2167C", Offset = "0xF2167C", VA = "0xF2167C")]
		private void UpdateValueText(float newValue)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xF21B30", Offset = "0xF21B30", VA = "0xF21B30")]
		public CircularProgressBar()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class ProgressBarManager : MonoBehaviour
	{
		[Token(Token = "0x2000314")]
		public delegate void OnValueUpdatedHandler(float updatedValue);

		[Token(Token = "0x2000315")]
		[CompilerGenerated]
		private sealed class <SlideTo>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float target;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float toValue;

			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressBarManager <>4__this;

			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <fromValue>5__2;

			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x170001F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001361")]
				[Address(RVA = "0xF21EF8", Offset = "0xF21EF8", VA = "0xF21EF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001363")]
				[Address(RVA = "0xF21F40", Offset = "0xF21F40", VA = "0xF21F40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600135E")]
			[Address(RVA = "0xF21D1C", Offset = "0xF21D1C", VA = "0xF21D1C")]
			[DebuggerHidden]
			public <SlideTo>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600135F")]
			[Address(RVA = "0xF21DF0", Offset = "0xF21DF0", VA = "0xF21DF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001360")]
			[Address(RVA = "0xF21DF4", Offset = "0xF21DF4", VA = "0xF21DF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001362")]
			[Address(RVA = "0xF21F00", Offset = "0xF21F00", VA = "0xF21F00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine slideCoroutine;

		[Token(Token = "0x14000028")]
		public event OnValueUpdatedHandler OnValueIsUpdating
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0xF21854", Offset = "0xF21854", VA = "0xF21854")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001353")]
			[Address(RVA = "0xF21B4C", Offset = "0xF21B4C", VA = "0xF21B4C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event OnValueUpdatedHandler OnValueStopUpgating
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0xF218F0", Offset = "0xF218F0", VA = "0xF218F0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001355")]
			[Address(RVA = "0xF21BE8", Offset = "0xF21BE8", VA = "0xF21BE8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xF219BC", Offset = "0xF219BC", VA = "0xF219BC")]
		public void IncreaseValue(float target, float step, float min, float max)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xF21A80", Offset = "0xF21A80", VA = "0xF21A80")]
		public void DecreaseValue(float target, float step, float min, float max)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xF21C84", Offset = "0xF21C84", VA = "0xF21C84")]
		[IteratorStateMachine(typeof(<SlideTo>d__10))]
		private IEnumerator SlideTo(float target, float toValue, float time = 0.2f)
		{
			return null;
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xF21D44", Offset = "0xF21D44", VA = "0xF21D44")]
		public ProgressBarManager()
		{
		}
	}
	[Token(Token = "0x2000316")]
	[RequireComponent(typeof(ProgressBarManager))]
	public class ScrollController : MonoBehaviour
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Scrollbar scrollbar;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float step;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float min;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float max;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ProgressBarManager progressBarManager;

		[Token(Token = "0x170001F6")]
		public float Value
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0xF21F48", Offset = "0xF21F48", VA = "0xF21F48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001365")]
			[Address(RVA = "0xF21F64", Offset = "0xF21F64", VA = "0xF21F64")]
			set
			{
			}
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xF21F80", Offset = "0xF21F80", VA = "0xF21F80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xF21FD8", Offset = "0xF21FD8", VA = "0xF21FD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xF2205C", Offset = "0xF2205C", VA = "0xF2205C")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xF2209C", Offset = "0xF2209C", VA = "0xF2209C")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xF220DC", Offset = "0xF220DC", VA = "0xF220DC")]
		private void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xF220F8", Offset = "0xF220F8", VA = "0xF220F8")]
		public ScrollController()
		{
		}
	}
	[Token(Token = "0x2000317")]
	[RequireComponent(typeof(ProgressBarManager))]
	public class SliderProgressBar : MonoBehaviour
	{
		[Token(Token = "0x2000318")]
		public enum ValueType
		{
			[Token(Token = "0x40011D7")]
			Percentage,
			[Token(Token = "0x40011D8")]
			Number
		}

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider slider;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float step;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("Value")]
		public ValueType valuePresentedAs;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform valueText;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float roundedPercentage;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float roundedValue;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ProgressBarManager progressBarManager;

		[Token(Token = "0x170001F7")]
		public TextMeshProUGUI ValueText
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0xF22110", Offset = "0xF22110", VA = "0xF22110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public float Value
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0xF22160", Offset = "0xF22160", VA = "0xF22160")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136E")]
			[Address(RVA = "0xF22184", Offset = "0xF22184", VA = "0xF22184")]
			set
			{
			}
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xF221A8", Offset = "0xF221A8", VA = "0xF221A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xF22200", Offset = "0xF22200", VA = "0xF22200")]
		private void Start()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xF225DC", Offset = "0xF225DC", VA = "0xF225DC")]
		public void IncreaseValue()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xF22630", Offset = "0xF22630", VA = "0xF22630")]
		public void DecreaseValue()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xF22684", Offset = "0xF22684", VA = "0xF22684")]
		private void UpdateValue(float newValue)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xF22354", Offset = "0xF22354", VA = "0xF22354")]
		private void CalculateValue(float newValue)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xF224DC", Offset = "0xF224DC", VA = "0xF224DC")]
		private void UpdateValueText(float newValue)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xF226A8", Offset = "0xF226A8", VA = "0xF226A8")]
		public SliderProgressBar()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class RadialItem : MonoBehaviour
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color normalColor;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color hoverColor;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite iconImage;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onClickEvent;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform icon;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform sector;

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xF226BC", Offset = "0xF226BC", VA = "0xF226BC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xF22748", Offset = "0xF22748", VA = "0xF22748")]
		public void AdjustFillSize(int total, int index, float radius)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xF22904", Offset = "0xF22904", VA = "0xF22904")]
		public void Activate()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xF22970", Offset = "0xF22970", VA = "0xF22970")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xF229DC", Offset = "0xF229DC", VA = "0xF229DC")]
		public void Click()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xF22870", Offset = "0xF22870", VA = "0xF22870")]
		private Vector3 CalculateIconPosition(float rotation, float radis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xF229F0", Offset = "0xF229F0", VA = "0xF229F0")]
		public RadialItem()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[ExecuteInEditMode]
	public class RadialMenuManager : MonoBehaviour
	{
		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Min(0f)]
		public float iconRadius;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 position;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RadialItem[] radialItems;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float currentAngle;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int previousSelection;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xF229F8", Offset = "0xF229F8", VA = "0xF229F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xF22B18", Offset = "0xF22B18", VA = "0xF22B18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xF22A58", Offset = "0xF22A58", VA = "0xF22A58")]
		public void AdjustRadialItem()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xF22C90", Offset = "0xF22C90", VA = "0xF22C90")]
		private int GetCurrentSelection(Vector2 position)
		{
			return default(int);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xF22C4C", Offset = "0xF22C4C", VA = "0xF22C4C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xF22D2C", Offset = "0xF22D2C", VA = "0xF22D2C")]
		private void ProcessSelection(int selection)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xF22DB4", Offset = "0xF22DB4", VA = "0xF22DB4")]
		private void ProcessPress(int selection)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xF22E38", Offset = "0xF22E38", VA = "0xF22E38")]
		public RadialMenuManager()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class Util : MonoBehaviour
	{
		[Token(Token = "0x6001386")]
		public static T SafeDestroy<T>(T obj) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001387")]
		public static T SafeDestroyGameObject<T>(T component) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xF22E40", Offset = "0xF22E40", VA = "0xF22E40")]
		public static void DestroyChildren(Transform root)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xF1F46C", Offset = "0xF1F46C", VA = "0xF1F46C")]
		public static string ReplaceLastOccurrence(string Source, string Find, string Replace)
		{
			return null;
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xF22EC4", Offset = "0xF22EC4", VA = "0xF22EC4")]
		public Util()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class VREventSystemHelper : EventSystem
	{
		[Token(Token = "0x600138B")]
		[Address(RVA = "0xF22ECC", Offset = "0xF22ECC", VA = "0xF22ECC", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xF22ED8", Offset = "0xF22ED8", VA = "0xF22ED8")]
		public VREventSystemHelper()
		{
		}
	}
}
namespace Tooltip
{
	[Token(Token = "0x200031D")]
	public class Tooltip : MonoBehaviour
	{
		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextSelector ContentTextSelector;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LayoutElement Layout;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int limit;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image TooltipImage;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite[] icons;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween currentTween;

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xF22F30", Offset = "0xF22F30", VA = "0xF22F30")]
		[ContextMenu("Show")]
		public void Show()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xF230C0", Offset = "0xF230C0", VA = "0xF230C0")]
		[ContextMenu("Hide")]
		public void Hide()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xF23210", Offset = "0xF23210", VA = "0xF23210")]
		public void SetText(string ContentText)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xF2326C", Offset = "0xF2326C", VA = "0xF2326C")]
		public void SetSprite(bool enabled)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xF234E8", Offset = "0xF234E8", VA = "0xF234E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xF2350C", Offset = "0xF2350C", VA = "0xF2350C")]
		public Tooltip()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class TooltipTrigger : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x200031F")]
		private enum PlayerState
		{
			[Token(Token = "0x40011FE")]
			Archi,
			[Token(Token = "0x40011FF")]
			Multi,
			[Token(Token = "0x4001200")]
			MR,
			[Token(Token = "0x4001201")]
			Other
		}

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool EnableMode;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool DisableMode;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool state;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Tooltip tooltip;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string EnabledTextId;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string DisabledTextId;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string MRDisabledTextId;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string MultiDisabledTextId;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string ArchiDisabledTextId;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject TooltipPrefab;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Button button;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TabButton tbutton;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isInMulti;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool asMultiId;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool asMRId;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool asArchiId;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool needUpdate;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerState tooltipState;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private PlayerState currentstate;

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xF23540", Offset = "0xF23540", VA = "0xF23540")]
		private void Start()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xF23928", Offset = "0xF23928", VA = "0xF23928")]
		private void CheckPlayerState()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xF2393C", Offset = "0xF2393C", VA = "0xF2393C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xF23994", Offset = "0xF23994", VA = "0xF23994", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xF23740", Offset = "0xF23740", VA = "0xF23740")]
		private void Init()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xF2397C", Offset = "0xF2397C", VA = "0xF2397C")]
		private bool isValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xF239CC", Offset = "0xF239CC", VA = "0xF239CC")]
		public TooltipTrigger()
		{
		}
	}
}
namespace TabCustom
{
	[Token(Token = "0x2000320")]
	[RequireComponent(typeof(Image))]
	public class TabButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerClickHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isInteractable;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isSelected;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image Image;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Image Color")]
		[HideInInspector]
		public Color ImageColor;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalColor;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HighlightedColor;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color SelectedColor;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color DisabledColor;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public TabGroup group;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnClick;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isInit;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xF249E4", Offset = "0xF249E4", VA = "0xF249E4", Slot = "5")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xF24C30", Offset = "0xF24C30", VA = "0xF24C30", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xF24D94", Offset = "0xF24D94", VA = "0xF24D94", Slot = "6")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xF24DC0", Offset = "0xF24DC0", VA = "0xF24DC0")]
		public void Init()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xF24F5C", Offset = "0xF24F5C", VA = "0xF24F5C")]
		public void ToggleInteractable(bool interactable)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xF24FAC", Offset = "0xF24FAC", VA = "0xF24FAC")]
		public TabButton()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class TabGroup : MonoBehaviour
	{
		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject PagesHolder;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool allowDisable;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool autoSelectFirstAtStart;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool isInit;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<TabButton> tabBtns;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TabButton selected;

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xF24FE8", Offset = "0xF24FE8", VA = "0xF24FE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xF24FF8", Offset = "0xF24FF8", VA = "0xF24FF8")]
		public void Init()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xF24CB0", Offset = "0xF24CB0", VA = "0xF24CB0")]
		public void OnTabEnter(TabButton btn)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xF24DBC", Offset = "0xF24DBC", VA = "0xF24DBC")]
		public void OnTabExit(TabButton btn)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xF24A64", Offset = "0xF24A64", VA = "0xF24A64")]
		public void OnTabSelected(TabButton btn)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xF251B8", Offset = "0xF251B8", VA = "0xF251B8")]
		public void ResetTabs()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xF2542C", Offset = "0xF2542C", VA = "0xF2542C")]
		public void ClosePanels()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xF25750", Offset = "0xF25750", VA = "0xF25750")]
		public void ResetAll()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xF25780", Offset = "0xF25780", VA = "0xF25780")]
		public TabGroup()
		{
		}
	}
}
namespace Home
{
	[Token(Token = "0x2000322")]
	public class CommunityMenu : HomeMenuBase
	{
		[Token(Token = "0x2000323")]
		[CompilerGenerated]
		private sealed class <GetCreatorProject>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400121E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400121F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CommunityMenu <>4__this;

			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x170001F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013B4")]
				[Address(RVA = "0xF26AEC", Offset = "0xF26AEC", VA = "0xF26AEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013B6")]
				[Address(RVA = "0xF26B34", Offset = "0xF26B34", VA = "0xF26B34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013B1")]
			[Address(RVA = "0xF25AA8", Offset = "0xF25AA8", VA = "0xF25AA8")]
			[DebuggerHidden]
			public <GetCreatorProject>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60013B2")]
			[Address(RVA = "0xF25F04", Offset = "0xF25F04", VA = "0xF25F04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013B3")]
			[Address(RVA = "0xF25F08", Offset = "0xF25F08", VA = "0xF25F08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013B5")]
			[Address(RVA = "0xF26AF4", Offset = "0xF26AF4", VA = "0xF26AF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000324")]
		[CompilerGenerated]
		private sealed class <DownloadProcess>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectCard prj;

			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CommunityMenu <>4__this;

			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <uri>5__2;

			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <FileName>5__3;

			[Token(Token = "0x4001228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <webRequest2>5__4;

			[Token(Token = "0x4001229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <userid>5__5;

			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private byte[] <data>5__6;

			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private GameObject <tmp>5__7;

			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ProjectCard <PC>5__8;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private string <Path>5__9;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private string <xmlpath>5__10;

			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private ZipArchive <archive>5__11;

			[Token(Token = "0x4001230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private ZipArchiveEntry <entry>5__12;

			[Token(Token = "0x170001FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013BC")]
				[Address(RVA = "0xF297F4", Offset = "0xF297F4", VA = "0xF297F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013BE")]
				[Address(RVA = "0xF2983C", Offset = "0xF2983C", VA = "0xF2983C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013B7")]
			[Address(RVA = "0xF25C78", Offset = "0xF25C78", VA = "0xF25C78")]
			[DebuggerHidden]
			public <DownloadProcess>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60013B8")]
			[Address(RVA = "0xF26B3C", Offset = "0xF26B3C", VA = "0xF26B3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xF26B80", Offset = "0xF26B80", VA = "0xF26B80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xF2930C", Offset = "0xF2930C", VA = "0xF2930C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60013BB")]
			[Address(RVA = "0xF293BC", Offset = "0xF293BC", VA = "0xF293BC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60013BD")]
			[Address(RVA = "0xF297FC", Offset = "0xF297FC", VA = "0xF297FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CommunityMenu instance;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject CommunityContent;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject CreatorContent;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int CreatorLoadedPage;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<Project> CreatorProjects;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject CreatorProjectCardGo;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Image CreatorAvatar;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TMP_Text CreatorNameTMP;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TMP_Text CreatorNbrLike;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int CreatorId;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public static Dictionary<int, Texture2D> ThumbnailsCache;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xF25790", Offset = "0xF25790", VA = "0xF25790")]
		private void Start()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xF25A34", Offset = "0xF25A34", VA = "0xF25A34")]
		[IteratorStateMachine(typeof(<GetCreatorProject>d__12))]
		public IEnumerator GetCreatorProject()
		{
			return null;
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xF25AD0", Offset = "0xF25AD0", VA = "0xF25AD0")]
		public void DownloadProject(ProjectCard pc)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xF25BE8", Offset = "0xF25BE8", VA = "0xF25BE8")]
		[IteratorStateMachine(typeof(<DownloadProcess>d__14))]
		private IEnumerator DownloadProcess(ProjectCard prj)
		{
			return null;
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xF25CA0", Offset = "0xF25CA0", VA = "0xF25CA0")]
		public string URLBuilder()
		{
			return null;
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xF25D74", Offset = "0xF25D74", VA = "0xF25D74")]
		public CommunityMenu()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class HelpMenu : HomeMenuBase
	{
		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HelpMenu instance;

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xF29844", Offset = "0xF29844", VA = "0xF29844")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xF298F4", Offset = "0xF298F4", VA = "0xF298F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xF298F8", Offset = "0xF298F8", VA = "0xF298F8")]
		public HelpMenu()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class HomeMenuBase : MonoBehaviour
	{
		[Token(Token = "0x2000327")]
		[HideInInspector]
		public enum Sorting
		{
			[Token(Token = "0x400124A")]
			byDate,
			[Token(Token = "0x400124B")]
			byName,
			[Token(Token = "0x400124C")]
			byLike,
			[Token(Token = "0x400124D")]
			byDownload
		}

		[Token(Token = "0x2000328")]
		[HideInInspector]
		public enum Filtering
		{
			[Token(Token = "0x400124F")]
			VR,
			[Token(Token = "0x4001250")]
			Imported,
			[Token(Token = "0x4001251")]
			Favorited,
			[Token(Token = "0x4001252")]
			None
		}

		[Token(Token = "0x2000329")]
		[CompilerGenerated]
		private sealed class <ScrollViewGenerator>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Project> Projects;

			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HomeMenuBase <>4__this;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProjectCard.CardType type;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<string> Save;

			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject Content;

			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Project>.Enumerator <>7__wrap2;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private List<string>.Enumerator <>7__wrap3;

			[Token(Token = "0x170001FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F3")]
				[Address(RVA = "0xF2CA24", Offset = "0xF2CA24", VA = "0xF2CA24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013F5")]
				[Address(RVA = "0xF2CA6C", Offset = "0xF2CA6C", VA = "0xF2CA6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013EE")]
			[Address(RVA = "0xF299C4", Offset = "0xF299C4", VA = "0xF299C4")]
			[DebuggerHidden]
			public <ScrollViewGenerator>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60013EF")]
			[Address(RVA = "0xF2C234", Offset = "0xF2C234", VA = "0xF2C234", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xF2C268", Offset = "0xF2C268", VA = "0xF2C268", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xF2C984", Offset = "0xF2C984", VA = "0xF2C984")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xF2C9D4", Offset = "0xF2C9D4", VA = "0xF2C9D4")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60013F4")]
			[Address(RVA = "0xF2CA2C", Offset = "0xF2CA2C", VA = "0xF2CA2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200032A")]
		[CompilerGenerated]
		private sealed class <PatchProject>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Project prj;

			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginRegister.Location loc;

			[Token(Token = "0x4001261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HomeMenuBase <>4__this;

			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <uri>5__2;

			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x170001FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013F9")]
				[Address(RVA = "0xF2CEA0", Offset = "0xF2CEA0", VA = "0xF2CEA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000200")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013FB")]
				[Address(RVA = "0xF2CEE8", Offset = "0xF2CEE8", VA = "0xF2CEE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xF2AD88", Offset = "0xF2AD88", VA = "0xF2AD88")]
			[DebuggerHidden]
			public <PatchProject>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xF2CA74", Offset = "0xF2CA74", VA = "0xF2CA74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xF2CA78", Offset = "0xF2CA78", VA = "0xF2CA78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xF2CEA8", Offset = "0xF2CEA8", VA = "0xF2CEA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ModalPopUp Popup;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Sorting CurrentOrder;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Filtering CurrentFilter;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button PlayBtn;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button DeleteBtn;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button ShareBtn;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button NextBtn;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button PrevBtn;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int CurrentPage;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject PagesHolder;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject ProjectCardGo;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject ConnexionErrorPanel;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public ProjectCard SelectedProject;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		private List<ProjectCard> MultiSelectedProject;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool FilterHD3D;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[HideInInspector]
		public bool FilterVR;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		[HideInInspector]
		public bool FilterBookmarked;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		[HideInInspector]
		public bool isMultiSelection;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform ActivePage;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<ProjectCard> projectCards;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle MultiSelectionToggle;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ToggleGroup ToggleGroup;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string invalidChar;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xF25898", Offset = "0xF25898", VA = "0xF25898")]
		public void Init()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xF298FC", Offset = "0xF298FC", VA = "0xF298FC")]
		[IteratorStateMachine(typeof(<ScrollViewGenerator>d__26))]
		public IEnumerator ScrollViewGenerator(GameObject Content, ProjectCard.CardType type, [Optional] List<Project> Projects, [Optional] List<string> Save)
		{
			return null;
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xF299EC", Offset = "0xF299EC", VA = "0xF299EC")]
		private void Clear()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xF26A94", Offset = "0xF26A94", VA = "0xF26A94")]
		public void Refresh(GameObject Content, ProjectCard.CardType type = ProjectCard.CardType.Save, [Optional] List<Project> Projects, [Optional] List<string> Save)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xF29D58", Offset = "0xF29D58", VA = "0xF29D58")]
		public void ChangePage(int i)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xF29F78", Offset = "0xF29F78", VA = "0xF29F78")]
		public int NameCompare(ProjectCard p1, ProjectCard p2)
		{
			return default(int);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xF29FE0", Offset = "0xF29FE0", VA = "0xF29FE0")]
		public int LikeCompare(ProjectCard p1, ProjectCard p2)
		{
			return default(int);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xF2A048", Offset = "0xF2A048", VA = "0xF2A048")]
		public int DownloadCompare(ProjectCard p1, ProjectCard p2)
		{
			return default(int);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xF2A0B0", Offset = "0xF2A0B0", VA = "0xF2A0B0")]
		public int DateCompare(ProjectCard p1, ProjectCard p2)
		{
			return default(int);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xF2A0D4", Offset = "0xF2A0D4", VA = "0xF2A0D4")]
		public void SwitchSortMode(int SortMode)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xF294F8", Offset = "0xF294F8", VA = "0xF294F8")]
		public void SortScroll()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xF2A290", Offset = "0xF2A290", VA = "0xF2A290")]
		public void FilterScroll()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xF2A4A0", Offset = "0xF2A4A0", VA = "0xF2A4A0")]
		public void ToggleHD3dFilter()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xF2A4F4", Offset = "0xF2A4F4", VA = "0xF2A4F4")]
		public void ToggleVRFilter()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xF2A540", Offset = "0xF2A540", VA = "0xF2A540")]
		public void ToggleBookMarkFilter()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xF2A594", Offset = "0xF2A594", VA = "0xF2A594")]
		public bool isNameValid(string test)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xF28348", Offset = "0xF28348", VA = "0xF28348")]
		public string validDuplicataName(string test, bool forceIndentation = false)
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xF2A75C", Offset = "0xF2A75C", VA = "0xF2A75C")]
		public void ShareConfirm()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xF2A870", Offset = "0xF2A870", VA = "0xF2A870")]
		public void DeleteComfirm()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xF2AA20", Offset = "0xF2AA20", VA = "0xF2AA20")]
		public void SelectProject(ProjectCard prj)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xF29C24", Offset = "0xF29C24", VA = "0xF29C24")]
		public void UnselectProject()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xF25E90", Offset = "0xF25E90", VA = "0xF25E90")]
		public void Play()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xF2ABB4", Offset = "0xF2ABB4", VA = "0xF2ABB4")]
		public void ShareProject(ProjectCard pc)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xF2ACF0", Offset = "0xF2ACF0", VA = "0xF2ACF0")]
		[IteratorStateMachine(typeof(<PatchProject>d__48))]
		public IEnumerator PatchProject(Project prj, LoginRegister.Location loc)
		{
			return null;
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xF2ADB0", Offset = "0xF2ADB0", VA = "0xF2ADB0")]
		public void AddMultiSelection(ProjectCard pc)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xF2AEE8", Offset = "0xF2AEE8", VA = "0xF2AEE8")]
		public void RemoveMultiSelection(ProjectCard pc)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xF2AFA8", Offset = "0xF2AFA8", VA = "0xF2AFA8")]
		private void ClearMultiSelection()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xF2B12C", Offset = "0xF2B12C", VA = "0xF2B12C")]
		public void ToggleMultiSelection(bool value)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xF2B340", Offset = "0xF2B340", VA = "0xF2B340")]
		public void MultiDelete()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xF2B790", Offset = "0xF2B790", VA = "0xF2B790")]
		public void MultiShare()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xF264E4", Offset = "0xF264E4", VA = "0xF264E4")]
		public void OpenPage(string pageName)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xF2BB50", Offset = "0xF2BB50", VA = "0xF2BB50")]
		public void ToggleContextualPanel(GameObject Panel)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xF2BB84", Offset = "0xF2BB84", VA = "0xF2BB84")]
		public void UIActivation()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xF2BBC4", Offset = "0xF2BBC4", VA = "0xF2BBC4")]
		public void UIDeactivation()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xF28650", Offset = "0xF28650", VA = "0xF28650")]
		public void CreateProjectDirectories(string projectName, int projectID = -1, bool import = false)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xF28A14", Offset = "0xF28A14", VA = "0xF28A14")]
		public void CheckProjectDirectories(string projectName, int projectID = -1)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xF2BE88", Offset = "0xF2BE88", VA = "0xF2BE88")]
		public static string SavePath(int projectID)
		{
			return null;
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xF2BC04", Offset = "0xF2BC04", VA = "0xF2BC04")]
		public static string SavePathLocal(string projectName)
		{
			return null;
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xF2946C", Offset = "0xF2946C", VA = "0xF2946C")]
		public static string SaveFile(string projectName, int projectID = -1)
		{
			return null;
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xF28DEC", Offset = "0xF28DEC", VA = "0xF28DEC")]
		public void SaveImage(string Name, int projectID, [Optional] ProjectCard PC)
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xF25D78", Offset = "0xF25D78", VA = "0xF25D78")]
		public HomeMenuBase()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class ImportMenu : HomeMenuBase
	{
		[Token(Token = "0x200032E")]
		[CompilerGenerated]
		private sealed class <ImportProcess>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectCard prj;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool furnitures;

			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ImportMenu <>4__this;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <FileName>5__2;

			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <userid>5__4;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private byte[] <data>5__5;

			[Token(Token = "0x4001274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private string <Path>5__6;

			[Token(Token = "0x17000201")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600140A")]
				[Address(RVA = "0xF2E8E4", Offset = "0xF2E8E4", VA = "0xF2E8E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600140C")]
				[Address(RVA = "0xF2E92C", Offset = "0xF2E92C", VA = "0xF2E92C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0xF2D4EC", Offset = "0xF2D4EC", VA = "0xF2D4EC")]
			[DebuggerHidden]
			public <ImportProcess>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001408")]
			[Address(RVA = "0xF2D74C", Offset = "0xF2D74C", VA = "0xF2D74C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001409")]
			[Address(RVA = "0xF2D750", Offset = "0xF2D750", VA = "0xF2D750", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600140B")]
			[Address(RVA = "0xF2E8EC", Offset = "0xF2E8EC", VA = "0xF2E8EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200032F")]
		[CompilerGenerated]
		private sealed class <SetProjectPrivate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectCard pc;

			[Token(Token = "0x4001278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ImportMenu <>4__this;

			[Token(Token = "0x17000203")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001410")]
				[Address(RVA = "0xF2EA48", Offset = "0xF2EA48", VA = "0xF2EA48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000204")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001412")]
				[Address(RVA = "0xF2EA90", Offset = "0xF2EA90", VA = "0xF2EA90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600140D")]
			[Address(RVA = "0xF2D514", Offset = "0xF2D514", VA = "0xF2D514")]
			[DebuggerHidden]
			public <SetProjectPrivate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600140E")]
			[Address(RVA = "0xF2E934", Offset = "0xF2E934", VA = "0xF2E934", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600140F")]
			[Address(RVA = "0xF2E938", Offset = "0xF2E938", VA = "0xF2E938", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001411")]
			[Address(RVA = "0xF2EA50", Offset = "0xF2EA50", VA = "0xF2EA50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static Dictionary<int, Texture2D> ThumbnailsCache;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ImportMenu instance;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject ImportContent;

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xF2CEF0", Offset = "0xF2CEF0", VA = "0xF2CEF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xF2B704", Offset = "0xF2B704", VA = "0xF2B704")]
		public void HideProject(ProjectCard pc)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xF2D0B8", Offset = "0xF2D0B8", VA = "0xF2D0B8")]
		public void ImportProject(bool furnitures)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xF2D450", Offset = "0xF2D450", VA = "0xF2D450")]
		[IteratorStateMachine(typeof(<ImportProcess>d__6))]
		private IEnumerator ImportProcess(ProjectCard prj, bool furnitures)
		{
			return null;
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xF2D028", Offset = "0xF2D028", VA = "0xF2D028")]
		[IteratorStateMachine(typeof(<SetProjectPrivate>d__7))]
		private IEnumerator SetProjectPrivate(ProjectCard pc)
		{
			return null;
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xF2D53C", Offset = "0xF2D53C", VA = "0xF2D53C")]
		public ImportMenu()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class LoginRegister : SingletonMonoBehaviour<LoginRegister>
	{
		[Token(Token = "0x2000331")]
		public enum Location
		{
			[Token(Token = "0x400129E")]
			Home,
			[Token(Token = "0x400129F")]
			Import,
			[Token(Token = "0x40012A0")]
			Commu,
			[Token(Token = "0x40012A1")]
			Rig,
			[Token(Token = "0x40012A2")]
			All
		}

		[Token(Token = "0x2000332")]
		public delegate void LogInDelegate(JsonConverter.User _user, Sprite _avatar);

		[Token(Token = "0x2000333")]
		public delegate void LogOutDelegate(int _id);

		[Token(Token = "0x2000335")]
		[CompilerGenerated]
		private sealed class <Start>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x17000205")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600144A")]
				[Address(RVA = "0xF31664", Offset = "0xF31664", VA = "0xF31664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000206")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600144C")]
				[Address(RVA = "0xF316AC", Offset = "0xF316AC", VA = "0xF316AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001447")]
			[Address(RVA = "0xF2ED7C", Offset = "0xF2ED7C", VA = "0xF2ED7C")]
			[DebuggerHidden]
			public <Start>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001448")]
			[Address(RVA = "0xF31204", Offset = "0xF31204", VA = "0xF31204", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001449")]
			[Address(RVA = "0xF31208", Offset = "0xF31208", VA = "0xF31208", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600144B")]
			[Address(RVA = "0xF3166C", Offset = "0xF3166C", VA = "0xF3166C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000336")]
		[CompilerGenerated]
		private sealed class <GetCommunityProject>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x17000207")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001450")]
				[Address(RVA = "0xF31AC8", Offset = "0xF31AC8", VA = "0xF31AC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000208")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001452")]
				[Address(RVA = "0xF31B10", Offset = "0xF31B10", VA = "0xF31B10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600144D")]
			[Address(RVA = "0xF2FE70", Offset = "0xF2FE70", VA = "0xF2FE70")]
			[DebuggerHidden]
			public <GetCommunityProject>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x600144E")]
			[Address(RVA = "0xF316B4", Offset = "0xF316B4", VA = "0xF316B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0xF316B8", Offset = "0xF316B8", VA = "0xF316B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001451")]
			[Address(RVA = "0xF31AD0", Offset = "0xF31AD0", VA = "0xF31AD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000337")]
		[CompilerGenerated]
		private sealed class <GetVRProject>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x17000209")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001456")]
				[Address(RVA = "0xF31F28", Offset = "0xF31F28", VA = "0xF31F28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001458")]
				[Address(RVA = "0xF31F70", Offset = "0xF31F70", VA = "0xF31F70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001453")]
			[Address(RVA = "0xF2FE98", Offset = "0xF2FE98", VA = "0xF2FE98")]
			[DebuggerHidden]
			public <GetVRProject>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x6001454")]
			[Address(RVA = "0xF31B18", Offset = "0xF31B18", VA = "0xF31B18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001455")]
			[Address(RVA = "0xF31B1C", Offset = "0xF31B1C", VA = "0xF31B1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001457")]
			[Address(RVA = "0xF31F30", Offset = "0xF31F30", VA = "0xF31F30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000338")]
		[CompilerGenerated]
		private sealed class <CreateAccount>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string Json;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private JsonConverter.User <newUser>5__3;

			[Token(Token = "0x1700020B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600145C")]
				[Address(RVA = "0xF32620", Offset = "0xF32620", VA = "0xF32620", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600145E")]
				[Address(RVA = "0xF32668", Offset = "0xF32668", VA = "0xF32668", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001459")]
			[Address(RVA = "0xF30690", Offset = "0xF30690", VA = "0xF30690")]
			[DebuggerHidden]
			public <CreateAccount>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x600145A")]
			[Address(RVA = "0xF31F78", Offset = "0xF31F78", VA = "0xF31F78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600145B")]
			[Address(RVA = "0xF31F7C", Offset = "0xF31F7C", VA = "0xF31F7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600145D")]
			[Address(RVA = "0xF32628", Offset = "0xF32628", VA = "0xF32628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000339")]
		[CompilerGenerated]
		private sealed class <GetToken>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string Json;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x1700020D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001462")]
				[Address(RVA = "0xF32AE0", Offset = "0xF32AE0", VA = "0xF32AE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001464")]
				[Address(RVA = "0xF32B28", Offset = "0xF32B28", VA = "0xF32B28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600145F")]
			[Address(RVA = "0xF306B8", Offset = "0xF306B8", VA = "0xF306B8")]
			[DebuggerHidden]
			public <GetToken>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001460")]
			[Address(RVA = "0xF32670", Offset = "0xF32670", VA = "0xF32670", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001461")]
			[Address(RVA = "0xF32674", Offset = "0xF32674", VA = "0xF32674", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0xF32AE8", Offset = "0xF32AE8", VA = "0xF32AE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033A")]
		[CompilerGenerated]
		private sealed class <GetUserInfo>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x1700020F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001468")]
				[Address(RVA = "0xF3353C", Offset = "0xF3353C", VA = "0xF3353C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000210")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600146A")]
				[Address(RVA = "0xF33584", Offset = "0xF33584", VA = "0xF33584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001465")]
			[Address(RVA = "0xF30754", Offset = "0xF30754", VA = "0xF30754")]
			[DebuggerHidden]
			public <GetUserInfo>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001466")]
			[Address(RVA = "0xF32B30", Offset = "0xF32B30", VA = "0xF32B30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001467")]
			[Address(RVA = "0xF32B34", Offset = "0xF32B34", VA = "0xF32B34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001469")]
			[Address(RVA = "0xF33544", Offset = "0xF33544", VA = "0xF33544", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033B")]
		[CompilerGenerated]
		private sealed class <GetUserFav>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x17000211")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600146E")]
				[Address(RVA = "0xF33890", Offset = "0xF33890", VA = "0xF33890", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000212")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001470")]
				[Address(RVA = "0xF338D8", Offset = "0xF338D8", VA = "0xF338D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600146B")]
			[Address(RVA = "0xF307F0", Offset = "0xF307F0", VA = "0xF307F0")]
			[DebuggerHidden]
			public <GetUserFav>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x600146C")]
			[Address(RVA = "0xF3358C", Offset = "0xF3358C", VA = "0xF3358C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600146D")]
			[Address(RVA = "0xF33590", Offset = "0xF33590", VA = "0xF33590", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600146F")]
			[Address(RVA = "0xF33898", Offset = "0xF33898", VA = "0xF33898", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033C")]
		[CompilerGenerated]
		private sealed class <GetUserLike>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x17000213")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001474")]
				[Address(RVA = "0xF33BF4", Offset = "0xF33BF4", VA = "0xF33BF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000214")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001476")]
				[Address(RVA = "0xF33C3C", Offset = "0xF33C3C", VA = "0xF33C3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001471")]
			[Address(RVA = "0xF3088C", Offset = "0xF3088C", VA = "0xF3088C")]
			[DebuggerHidden]
			public <GetUserLike>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001472")]
			[Address(RVA = "0xF338E0", Offset = "0xF338E0", VA = "0xF338E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001473")]
			[Address(RVA = "0xF338E4", Offset = "0xF338E4", VA = "0xF338E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001475")]
			[Address(RVA = "0xF33BFC", Offset = "0xF33BFC", VA = "0xF33BFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033D")]
		[CompilerGenerated]
		private sealed class <GetDefaultProject>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string <ToPath>5__2;

			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x17000215")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600147A")]
				[Address(RVA = "0xF34094", Offset = "0xF34094", VA = "0xF34094", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000216")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600147C")]
				[Address(RVA = "0xF340DC", Offset = "0xF340DC", VA = "0xF340DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001477")]
			[Address(RVA = "0xF30914", Offset = "0xF30914", VA = "0xF30914")]
			[DebuggerHidden]
			public <GetDefaultProject>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001478")]
			[Address(RVA = "0xF33C44", Offset = "0xF33C44", VA = "0xF33C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001479")]
			[Address(RVA = "0xF33C48", Offset = "0xF33C48", VA = "0xF33C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600147B")]
			[Address(RVA = "0xF3409C", Offset = "0xF3409C", VA = "0xF3409C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033E")]
		[CompilerGenerated]
		private sealed class <GetAvatars>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x17000217")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001480")]
				[Address(RVA = "0xF341E0", Offset = "0xF341E0", VA = "0xF341E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000218")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001482")]
				[Address(RVA = "0xF34228", Offset = "0xF34228", VA = "0xF34228", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600147D")]
			[Address(RVA = "0xF309B0", Offset = "0xF309B0", VA = "0xF309B0")]
			[DebuggerHidden]
			public <GetAvatars>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x600147E")]
			[Address(RVA = "0xF340E4", Offset = "0xF340E4", VA = "0xF340E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600147F")]
			[Address(RVA = "0xF340E8", Offset = "0xF340E8", VA = "0xF340E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001481")]
			[Address(RVA = "0xF341E8", Offset = "0xF341E8", VA = "0xF341E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033F")]
		[CompilerGenerated]
		private sealed class <RequestCode>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WWWForm f;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x17000219")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001486")]
				[Address(RVA = "0xF34480", Offset = "0xF34480", VA = "0xF34480", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001488")]
				[Address(RVA = "0xF344C8", Offset = "0xF344C8", VA = "0xF344C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001483")]
			[Address(RVA = "0xF309D8", Offset = "0xF309D8", VA = "0xF309D8")]
			[DebuggerHidden]
			public <RequestCode>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6001484")]
			[Address(RVA = "0xF34230", Offset = "0xF34230", VA = "0xF34230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001485")]
			[Address(RVA = "0xF34234", Offset = "0xF34234", VA = "0xF34234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001487")]
			[Address(RVA = "0xF34488", Offset = "0xF34488", VA = "0xF34488", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000340")]
		[CompilerGenerated]
		private sealed class <PollAuthorization>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x1700021B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600148C")]
				[Address(RVA = "0xF34818", Offset = "0xF34818", VA = "0xF34818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600148E")]
				[Address(RVA = "0xF34860", Offset = "0xF34860", VA = "0xF34860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001489")]
			[Address(RVA = "0xF30A74", Offset = "0xF30A74", VA = "0xF30A74")]
			[DebuggerHidden]
			public <PollAuthorization>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x600148A")]
			[Address(RVA = "0xF344D0", Offset = "0xF344D0", VA = "0xF344D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600148B")]
			[Address(RVA = "0xF344D4", Offset = "0xF344D4", VA = "0xF344D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600148D")]
			[Address(RVA = "0xF34820", Offset = "0xF34820", VA = "0xF34820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000341")]
		[CompilerGenerated]
		private sealed class <GetFBInfo>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <uri>5__2;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <jsonUserInfo>5__4;

			[Token(Token = "0x1700021D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001492")]
				[Address(RVA = "0xF34C90", Offset = "0xF34C90", VA = "0xF34C90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001494")]
				[Address(RVA = "0xF34CD8", Offset = "0xF34CD8", VA = "0xF34CD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600148F")]
			[Address(RVA = "0xF30A9C", Offset = "0xF30A9C", VA = "0xF30A9C")]
			[DebuggerHidden]
			public <GetFBInfo>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6001490")]
			[Address(RVA = "0xF34868", Offset = "0xF34868", VA = "0xF34868", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001491")]
			[Address(RVA = "0xF3486C", Offset = "0xF3486C", VA = "0xF3486C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001493")]
			[Address(RVA = "0xF34C98", Offset = "0xF34C98", VA = "0xF34C98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000342")]
		[CompilerGenerated]
		private sealed class <OauthUser>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string Json;

			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x1700021F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001498")]
				[Address(RVA = "0xF356F4", Offset = "0xF356F4", VA = "0xF356F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000220")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600149A")]
				[Address(RVA = "0xF3573C", Offset = "0xF3573C", VA = "0xF3573C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001495")]
			[Address(RVA = "0xF30B54", Offset = "0xF30B54", VA = "0xF30B54")]
			[DebuggerHidden]
			public <OauthUser>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6001496")]
			[Address(RVA = "0xF34CE0", Offset = "0xF34CE0", VA = "0xF34CE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001497")]
			[Address(RVA = "0xF34CE4", Offset = "0xF34CE4", VA = "0xF34CE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001499")]
			[Address(RVA = "0xF356FC", Offset = "0xF356FC", VA = "0xF356FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000343")]
		[CompilerGenerated]
		private sealed class <InitAll>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginRegister <>4__this;

			[Token(Token = "0x17000221")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600149E")]
				[Address(RVA = "0xF35A4C", Offset = "0xF35A4C", VA = "0xF35A4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000222")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014A0")]
				[Address(RVA = "0xF35A94", Offset = "0xF35A94", VA = "0xF35A94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600149B")]
			[Address(RVA = "0xF30B7C", Offset = "0xF30B7C", VA = "0xF30B7C")]
			[DebuggerHidden]
			public <InitAll>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x600149C")]
			[Address(RVA = "0xF35744", Offset = "0xF35744", VA = "0xF35744", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600149D")]
			[Address(RVA = "0xF35748", Offset = "0xF35748", VA = "0xF35748", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600149F")]
			[Address(RVA = "0xF35A54", Offset = "0xF35A54", VA = "0xF35A54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000344")]
		[CompilerGenerated]
		private sealed class <PasswordResetRequest>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string Json;

			[Token(Token = "0x40012EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoginRegister <>4__this;

			[Token(Token = "0x40012EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <isvalid>5__3;

			[Token(Token = "0x40012ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ErrorMessage <errorMessage>5__4;

			[Token(Token = "0x17000223")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014A4")]
				[Address(RVA = "0xF36090", Offset = "0xF36090", VA = "0xF36090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000224")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014A6")]
				[Address(RVA = "0xF360D8", Offset = "0xF360D8", VA = "0xF360D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xF30BA4", Offset = "0xF30BA4", VA = "0xF30BA4")]
			[DebuggerHidden]
			public <PasswordResetRequest>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x60014A2")]
			[Address(RVA = "0xF35A9C", Offset = "0xF35A9C", VA = "0xF35A9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xF35AA0", Offset = "0xF35AA0", VA = "0xF35AA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xF36098", Offset = "0xF36098", VA = "0xF36098", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LoginRegister instance;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static FBInfo FbUserInfo;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Sprite UserAvatar;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<Project> UserProjects;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<string> UserSave;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static List<string> UserLike;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<string> UserFav;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static List<Project> CommunityProjects;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static List<string> DefaultProjects;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static AvatarsHolder avatarHolder;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<Texture2D> DefaultThumb;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static bool isUserAvatarFound;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public static bool isDefaultLoaded;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LogedUser ConnectedUser;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int ImportLoadedPage;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int CommuLoadedPage;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private protected string FBAppAccessToken;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_InputField loginInput;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_InputField pswInput;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_InputField UsernameInput;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_InputField EmailInput;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_InputField RegisterPswInput;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TMP_InputField comfirmpswInput;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle newletter;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle privacyPolicyTermOfUse;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FBCode fbc;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FBToken fbtoken;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private JsonSerializerSettings SerializerSetting;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isAvatarsLoaded;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool isLoggedin;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool tryingFBLoggin;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		private bool isUserLikeLoaded;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool isUserFavLoaded;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string jsonResult;

		[Token(Token = "0x1400002A")]
		public event LogInDelegate OnLogIn
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0xF2EA98", Offset = "0xF2EA98", VA = "0xF2EA98")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001414")]
			[Address(RVA = "0xF2EB34", Offset = "0xF2EB34", VA = "0xF2EB34")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event LogOutDelegate OnLogOut
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0xF2EBD0", Offset = "0xF2EBD0", VA = "0xF2EBD0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001416")]
			[Address(RVA = "0xF2EC6C", Offset = "0xF2EC6C", VA = "0xF2EC6C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xF2ED08", Offset = "0xF2ED08", VA = "0xF2ED08")]
		[IteratorStateMachine(typeof(<Start>d__43))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xF262B4", Offset = "0xF262B4", VA = "0xF262B4")]
		public bool CheckResult(UnityWebRequest Request, Location loc, bool isHD3DApi = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xF2EE64", Offset = "0xF2EE64", VA = "0xF2EE64")]
		public void LogIn()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xF2F030", Offset = "0xF2F030", VA = "0xF2F030")]
		public void Register()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xF2F3B0", Offset = "0xF2F3B0", VA = "0xF2F3B0")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xF2E788", Offset = "0xF2E788", VA = "0xF2E788")]
		public List<string> GetUserSave()
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xF2F7F8", Offset = "0xF2F7F8", VA = "0xF2F7F8")]
		public void ForgotPassword()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xF2F8A8", Offset = "0xF2F8A8", VA = "0xF2F8A8")]
		public void PasswordResetError()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xF2F9A8", Offset = "0xF2F9A8", VA = "0xF2F9A8")]
		public void Retry()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xF2FB38", Offset = "0xF2FB38", VA = "0xF2FB38")]
		public void ResetFB()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xF2FB40", Offset = "0xF2FB40", VA = "0xF2FB40")]
		public void LoginInWFB()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xF29F04", Offset = "0xF29F04", VA = "0xF29F04")]
		[IteratorStateMachine(typeof(<GetCommunityProject>d__54))]
		public IEnumerator GetCommunityProject()
		{
			return null;
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xF29E90", Offset = "0xF29E90", VA = "0xF29E90")]
		[IteratorStateMachine(typeof(<GetVRProject>d__55))]
		public IEnumerator GetVRProject()
		{
			return null;
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xF2FEC0", Offset = "0xF2FEC0", VA = "0xF2FEC0")]
		private void GetUserAvatar()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xF2EDA4", Offset = "0xF2EDA4", VA = "0xF2EDA4")]
		private void Error(UnityWebRequest req, Location loc, bool isHD3DApi = true)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xF300A0", Offset = "0xF300A0", VA = "0xF300A0")]
		private string GetCommunityURL()
		{
			return null;
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xF30380", Offset = "0xF30380", VA = "0xF30380")]
		private string GetFilterURL()
		{
			return null;
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xF302DC", Offset = "0xF302DC", VA = "0xF302DC")]
		private string GetOrderURL()
		{
			return null;
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xF3041C", Offset = "0xF3041C", VA = "0xF3041C")]
		private void PasswordResetSuccess()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xF304CC", Offset = "0xF304CC", VA = "0xF304CC")]
		private void PasswordReset()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xF2F320", Offset = "0xF2F320", VA = "0xF2F320")]
		[IteratorStateMachine(typeof(<CreateAccount>d__63))]
		private IEnumerator CreateAccount(string Json)
		{
			return null;
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xF2EFA0", Offset = "0xF2EFA0", VA = "0xF2EFA0")]
		[IteratorStateMachine(typeof(<GetToken>d__64))]
		private IEnumerator GetToken(string Json)
		{
			return null;
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xF306E0", Offset = "0xF306E0", VA = "0xF306E0")]
		[IteratorStateMachine(typeof(<GetUserInfo>d__65))]
		private IEnumerator GetUserInfo()
		{
			return null;
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xF3077C", Offset = "0xF3077C", VA = "0xF3077C")]
		[IteratorStateMachine(typeof(<GetUserFav>d__66))]
		private IEnumerator GetUserFav()
		{
			return null;
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xF30818", Offset = "0xF30818", VA = "0xF30818")]
		[IteratorStateMachine(typeof(<GetUserLike>d__67))]
		private IEnumerator GetUserLike()
		{
			return null;
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xF308B4", Offset = "0xF308B4", VA = "0xF308B4")]
		[IteratorStateMachine(typeof(<GetDefaultProject>d__68))]
		private IEnumerator GetDefaultProject()
		{
			return null;
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xF3093C", Offset = "0xF3093C", VA = "0xF3093C")]
		[IteratorStateMachine(typeof(<GetAvatars>d__69))]
		private IEnumerator GetAvatars()
		{
			return null;
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xF2FDE0", Offset = "0xF2FDE0", VA = "0xF2FDE0")]
		[IteratorStateMachine(typeof(<RequestCode>d__70))]
		private IEnumerator RequestCode(WWWForm f)
		{
			return null;
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xF30A00", Offset = "0xF30A00", VA = "0xF30A00")]
		[IteratorStateMachine(typeof(<PollAuthorization>d__71))]
		private IEnumerator PollAuthorization()
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xF2FD6C", Offset = "0xF2FD6C", VA = "0xF2FD6C")]
		[IteratorStateMachine(typeof(<GetFBInfo>d__72))]
		private IEnumerator GetFBInfo()
		{
			return null;
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xF30AC4", Offset = "0xF30AC4", VA = "0xF30AC4")]
		[IteratorStateMachine(typeof(<OauthUser>d__73))]
		private IEnumerator OauthUser(string Json)
		{
			return null;
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xF2FAC4", Offset = "0xF2FAC4", VA = "0xF2FAC4")]
		[IteratorStateMachine(typeof(<InitAll>d__74))]
		private IEnumerator InitAll()
		{
			return null;
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xF30600", Offset = "0xF30600", VA = "0xF30600")]
		[IteratorStateMachine(typeof(<PasswordResetRequest>d__75))]
		private IEnumerator PasswordResetRequest(string Json)
		{
			return null;
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xF30BCC", Offset = "0xF30BCC", VA = "0xF30BCC")]
		public LoginRegister()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class MainMenu : HomeMenuBase
	{
		[Token(Token = "0x2000346")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string FileName;

			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xF37310", Offset = "0xF37310", VA = "0xF37310")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x60014C0")]
			[Address(RVA = "0xF37318", Offset = "0xF37318", VA = "0xF37318")]
			internal bool <DefaultProjectSetup>b__1(Texture2D x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000348")]
		[CompilerGenerated]
		private sealed class <DefaultProjectSetup>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MainMenu <>4__this;

			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<string>.Enumerator <>7__wrap1;

			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <dir>5__3;

			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <newPath>5__4;

			[Token(Token = "0x17000225")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014C9")]
				[Address(RVA = "0xF380FC", Offset = "0xF380FC", VA = "0xF380FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000226")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014CB")]
				[Address(RVA = "0xF38144", Offset = "0xF38144", VA = "0xF38144", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014C5")]
			[Address(RVA = "0xF36DA0", Offset = "0xF36DA0", VA = "0xF36DA0")]
			[DebuggerHidden]
			public <DefaultProjectSetup>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60014C6")]
			[Address(RVA = "0xF37470", Offset = "0xF37470", VA = "0xF37470", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014C7")]
			[Address(RVA = "0xF3749C", Offset = "0xF3749C", VA = "0xF3749C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014C8")]
			[Address(RVA = "0xF380AC", Offset = "0xF380AC", VA = "0xF380AC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xF38104", Offset = "0xF38104", VA = "0xF38104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000349")]
		[CompilerGenerated]
		private sealed class <CreateAndPlay>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string projectName;

			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MainMenu <>4__this;

			[Token(Token = "0x17000227")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014CF")]
				[Address(RVA = "0xF381E8", Offset = "0xF381E8", VA = "0xF381E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000228")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014D1")]
				[Address(RVA = "0xF38230", Offset = "0xF38230", VA = "0xF38230", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xF37020", Offset = "0xF37020", VA = "0xF37020")]
			[DebuggerHidden]
			public <CreateAndPlay>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xF3814C", Offset = "0xF3814C", VA = "0xF3814C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xF38150", Offset = "0xF38150", VA = "0xF38150", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xF381F0", Offset = "0xF381F0", VA = "0xF381F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200034A")]
		[CompilerGenerated]
		private sealed class <ProjectCreation>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MainMenu <>4__this;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string projectName;

			[Token(Token = "0x17000229")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014D5")]
				[Address(RVA = "0xF38864", Offset = "0xF38864", VA = "0xF38864", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014D7")]
				[Address(RVA = "0xF388AC", Offset = "0xF388AC", VA = "0xF388AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xF38238", Offset = "0xF38238", VA = "0xF38238")]
			[DebuggerHidden]
			public <ProjectCreation>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xF38260", Offset = "0xF38260", VA = "0xF38260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xF38264", Offset = "0xF38264", VA = "0xF38264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xF3886C", Offset = "0xF3886C", VA = "0xF3886C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200034B")]
		[CompilerGenerated]
		private sealed class <DuplicationProcess>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectCard pc;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MainMenu <>4__this;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <projectName>5__2;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <newFileName>5__3;

			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <oldPath>5__4;

			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <newPath>5__5;

			[Token(Token = "0x1700022B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014DB")]
				[Address(RVA = "0xF39160", Offset = "0xF39160", VA = "0xF39160", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014DD")]
				[Address(RVA = "0xF391A8", Offset = "0xF391A8", VA = "0xF391A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014D8")]
			[Address(RVA = "0xF388B4", Offset = "0xF388B4", VA = "0xF388B4")]
			[DebuggerHidden]
			public <DuplicationProcess>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60014D9")]
			[Address(RVA = "0xF388DC", Offset = "0xF388DC", VA = "0xF388DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014DA")]
			[Address(RVA = "0xF388E0", Offset = "0xF388E0", VA = "0xF388E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014DC")]
			[Address(RVA = "0xF39168", Offset = "0xF39168", VA = "0xF39168", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200034C")]
		[CompilerGenerated]
		private sealed class <MoveLocalProject>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectCard pc;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MainMenu <>4__this;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <name>5__2;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <oldPath>5__3;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <newPath>5__4;

			[Token(Token = "0x1700022D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014E1")]
				[Address(RVA = "0xF398E8", Offset = "0xF398E8", VA = "0xF398E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014E3")]
				[Address(RVA = "0xF39930", Offset = "0xF39930", VA = "0xF39930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xF391B0", Offset = "0xF391B0", VA = "0xF391B0")]
			[DebuggerHidden]
			public <MoveLocalProject>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xF391D8", Offset = "0xF391D8", VA = "0xF391D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xF391DC", Offset = "0xF391DC", VA = "0xF391DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xF398F0", Offset = "0xF398F0", VA = "0xF398F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200034D")]
		[CompilerGenerated]
		private sealed class <UploadProcess>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400131A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectCard pc;

			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MainMenu <>4__this;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x1700022F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014E7")]
				[Address(RVA = "0xF3A07C", Offset = "0xF3A07C", VA = "0xF3A07C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000230")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014E9")]
				[Address(RVA = "0xF3A0C4", Offset = "0xF3A0C4", VA = "0xF3A0C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xF39938", Offset = "0xF39938", VA = "0xF39938")]
			[DebuggerHidden]
			public <UploadProcess>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60014E5")]
			[Address(RVA = "0xF39960", Offset = "0xF39960", VA = "0xF39960", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014E6")]
			[Address(RVA = "0xF39964", Offset = "0xF39964", VA = "0xF39964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014E8")]
			[Address(RVA = "0xF3A084", Offset = "0xF3A084", VA = "0xF3A084", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200034E")]
		[CompilerGenerated]
		private sealed class <UploadPicture>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400131F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectCard pc;

			[Token(Token = "0x4001320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Project newProject;

			[Token(Token = "0x4001321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private byte[] <thumbyte>5__2;

			[Token(Token = "0x4001322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014ED")]
				[Address(RVA = "0xF3A46C", Offset = "0xF3A46C", VA = "0xF3A46C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014EF")]
				[Address(RVA = "0xF3A4B4", Offset = "0xF3A4B4", VA = "0xF3A4B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xF3A0CC", Offset = "0xF3A0CC", VA = "0xF3A0CC")]
			[DebuggerHidden]
			public <UploadPicture>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60014EB")]
			[Address(RVA = "0xF3A0F4", Offset = "0xF3A0F4", VA = "0xF3A0F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014EC")]
			[Address(RVA = "0xF3A0F8", Offset = "0xF3A0F8", VA = "0xF3A0F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014EE")]
			[Address(RVA = "0xF3A474", Offset = "0xF3A474", VA = "0xF3A474", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200034F")]
		[CompilerGenerated]
		private sealed class <UploadXML>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Project Newproject;

			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MainMenu <>4__this;

			[Token(Token = "0x4001327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProjectCard pc;

			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <uri>5__2;

			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014F3")]
				[Address(RVA = "0xF3A83C", Offset = "0xF3A83C", VA = "0xF3A83C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014F5")]
				[Address(RVA = "0xF3A884", Offset = "0xF3A884", VA = "0xF3A884", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014F0")]
			[Address(RVA = "0xF3A4BC", Offset = "0xF3A4BC", VA = "0xF3A4BC")]
			[DebuggerHidden]
			public <UploadXML>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60014F1")]
			[Address(RVA = "0xF3A4E4", Offset = "0xF3A4E4", VA = "0xF3A4E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014F2")]
			[Address(RVA = "0xF3A4E8", Offset = "0xF3A4E8", VA = "0xF3A4E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xF3A844", Offset = "0xF3A844", VA = "0xF3A844", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MainMenu instance;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public static Dictionary<int, Texture2D> ThumbnailsCache;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<string, Texture2D> LocalThumbnailsCache;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject ConnectedPage;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject NotConnectedPage;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject SaveContentHolder;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TabGroup tabGroup;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Settings settings;

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xF360E0", Offset = "0xF360E0", VA = "0xF360E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xF36294", Offset = "0xF36294", VA = "0xF36294")]
		public void OpenCreationPanel()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xF36320", Offset = "0xF36320", VA = "0xF36320")]
		public void CreateNewProject(TMP_InputField tmpText)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xF3640C", Offset = "0xF3640C", VA = "0xF3640C")]
		public void EditProject(TMP_InputField editText)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xF2B54C", Offset = "0xF2B54C", VA = "0xF2B54C")]
		public void DeleteProject(ProjectCard pc)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xF2BA34", Offset = "0xF2BA34", VA = "0xF2BA34")]
		public void UploadProject(ProjectCard pc)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xF36C2C", Offset = "0xF36C2C", VA = "0xF36C2C")]
		public void DuplicateProject(ProjectCard pc)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xF36CDC", Offset = "0xF36CDC", VA = "0xF36CDC")]
		public void SwitchMainMenuSorting()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xF36CF0", Offset = "0xF36CF0", VA = "0xF36CF0")]
		public void OpenRegister()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xF2F748", Offset = "0xF2F748", VA = "0xF2F748")]
		public void OpenLogin()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xF3348C", Offset = "0xF3348C", VA = "0xF3348C")]
		public void OpenMain()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xF334C8", Offset = "0xF334C8", VA = "0xF334C8")]
		[IteratorStateMachine(typeof(<DefaultProjectSetup>d__19))]
		public IEnumerator DefaultProjectSetup()
		{
			return null;
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xF36DC8", Offset = "0xF36DC8", VA = "0xF36DC8")]
		public void ResetSettings()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xF36F00", Offset = "0xF36F00", VA = "0xF36F00")]
		public void TermOfUse()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xF36F90", Offset = "0xF36F90", VA = "0xF36F90")]
		public void PrivacyPolicy()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xF3637C", Offset = "0xF3637C", VA = "0xF3637C")]
		[IteratorStateMachine(typeof(<CreateAndPlay>d__23))]
		private IEnumerator CreateAndPlay(string projectName)
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xF37048", Offset = "0xF37048", VA = "0xF37048")]
		[IteratorStateMachine(typeof(<ProjectCreation>d__24))]
		private IEnumerator ProjectCreation(string projectName)
		{
			return null;
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xF36C4C", Offset = "0xF36C4C", VA = "0xF36C4C")]
		[IteratorStateMachine(typeof(<DuplicationProcess>d__25))]
		private IEnumerator DuplicationProcess(ProjectCard pc)
		{
			return null;
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xF370D8", Offset = "0xF370D8", VA = "0xF370D8")]
		[IteratorStateMachine(typeof(<MoveLocalProject>d__26))]
		private IEnumerator MoveLocalProject(ProjectCard pc)
		{
			return null;
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xF36B9C", Offset = "0xF36B9C", VA = "0xF36B9C")]
		[IteratorStateMachine(typeof(<UploadProcess>d__27))]
		private IEnumerator UploadProcess(ProjectCard pc)
		{
			return null;
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xF37168", Offset = "0xF37168", VA = "0xF37168")]
		[IteratorStateMachine(typeof(<UploadPicture>d__28))]
		private IEnumerator UploadPicture(ProjectCard pc, Project newProject)
		{
			return null;
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xF371F8", Offset = "0xF371F8", VA = "0xF371F8")]
		[IteratorStateMachine(typeof(<UploadXML>d__29))]
		private IEnumerator UploadXML(ProjectCard pc, Project Newproject)
		{
			return null;
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xF3729C", Offset = "0xF3729C", VA = "0xF3729C")]
		public MainMenu()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class ProjectCard : MonoBehaviour
	{
		[Token(Token = "0x2000351")]
		[HideInInspector]
		public enum CardType
		{
			[Token(Token = "0x400134B")]
			Save,
			[Token(Token = "0x400134C")]
			Import,
			[Token(Token = "0x400134D")]
			Community,
			[Token(Token = "0x400134E")]
			Creator
		}

		[Token(Token = "0x2000352")]
		[CompilerGenerated]
		private sealed class <GetUserAvatar>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectCard <>4__this;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<Sprite>.Enumerator <>7__wrap1;

			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Sprite <avatar>5__3;

			[Token(Token = "0x17000235")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001520")]
				[Address(RVA = "0xF3C7C8", Offset = "0xF3C7C8", VA = "0xF3C7C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000236")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001522")]
				[Address(RVA = "0xF3C810", Offset = "0xF3C810", VA = "0xF3C810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600151C")]
			[Address(RVA = "0xF3B4BC", Offset = "0xF3B4BC", VA = "0xF3B4BC")]
			[DebuggerHidden]
			public <GetUserAvatar>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x600151D")]
			[Address(RVA = "0xF3C4B0", Offset = "0xF3C4B0", VA = "0xF3C4B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600151E")]
			[Address(RVA = "0xF3C4CC", Offset = "0xF3C4CC", VA = "0xF3C4CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600151F")]
			[Address(RVA = "0xF3C778", Offset = "0xF3C778", VA = "0xF3C778")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001521")]
			[Address(RVA = "0xF3C7D0", Offset = "0xF3C7D0", VA = "0xF3C7D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000353")]
		[CompilerGenerated]
		private sealed class <GetProjectThumbnails>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProjectCard <>4__this;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string[] <files>5__2;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x17000237")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001526")]
				[Address(RVA = "0xF3D1C4", Offset = "0xF3D1C4", VA = "0xF3D1C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000238")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001528")]
				[Address(RVA = "0xF3D20C", Offset = "0xF3D20C", VA = "0xF3D20C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001523")]
			[Address(RVA = "0xF3B4E4", Offset = "0xF3B4E4", VA = "0xF3B4E4")]
			[DebuggerHidden]
			public <GetProjectThumbnails>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001524")]
			[Address(RVA = "0xF3C818", Offset = "0xF3C818", VA = "0xF3C818", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001525")]
			[Address(RVA = "0xF3C81C", Offset = "0xF3C81C", VA = "0xF3C81C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001527")]
			[Address(RVA = "0xF3D1CC", Offset = "0xF3D1CC", VA = "0xF3D1CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000355")]
		[CompilerGenerated]
		private sealed class <LikeRequest>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool Like;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ProjectCard <>4__this;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <uri>5__2;

			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x17000239")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600152F")]
				[Address(RVA = "0xF3D914", Offset = "0xF3D914", VA = "0xF3D914", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001531")]
				[Address(RVA = "0xF3D95C", Offset = "0xF3D95C", VA = "0xF3D95C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600152C")]
			[Address(RVA = "0xF3BF44", Offset = "0xF3BF44", VA = "0xF3BF44")]
			[DebuggerHidden]
			public <LikeRequest>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x600152D")]
			[Address(RVA = "0xF3D31C", Offset = "0xF3D31C", VA = "0xF3D31C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600152E")]
			[Address(RVA = "0xF3D320", Offset = "0xF3D320", VA = "0xF3D320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001530")]
			[Address(RVA = "0xF3D91C", Offset = "0xF3D91C", VA = "0xF3D91C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000356")]
		[CompilerGenerated]
		private sealed class <BookMarkRequest>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool Bookmark;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ProjectCard <>4__this;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <uri>5__2;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <webRequest>5__3;

			[Token(Token = "0x1700023B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001535")]
				[Address(RVA = "0xF3E018", Offset = "0xF3E018", VA = "0xF3E018", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001537")]
				[Address(RVA = "0xF3E060", Offset = "0xF3E060", VA = "0xF3E060", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001532")]
			[Address(RVA = "0xF3BF6C", Offset = "0xF3BF6C", VA = "0xF3BF6C")]
			[DebuggerHidden]
			public <BookMarkRequest>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001533")]
			[Address(RVA = "0xF3D964", Offset = "0xF3D964", VA = "0xF3D964", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001534")]
			[Address(RVA = "0xF3D968", Offset = "0xF3D968", VA = "0xF3D968", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001536")]
			[Address(RVA = "0xF3E020", Offset = "0xF3E020", VA = "0xF3E020", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Contextual;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Holder;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle Bookmark;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle Like;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image AvatarImg;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text UserName;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RawImage Thumbnail;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_Text ProjectNameTMP;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text DateTMP;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TMP_Text LikeTMP;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TMP_Text DownloadTMP;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Toggle MultiSelection;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject ContextualBtn;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int id;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string idString;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public bool isFromHD3D;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[HideInInspector]
		public bool isBestOfTheWeek;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[HideInInspector]
		public bool isBookmarked;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		[HideInInspector]
		public bool isLiked;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		private bool isSelected;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[HideInInspector]
		public bool isLocal;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Project project;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public string ProjectDirectory;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public DateTime Date;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public CardType Type;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HomeMenuBase parentMenu;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private LoginRegister.Location Location;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool isShared;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Animator anim;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Texture2D tex;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string ThumbURI;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private string ThumbPath;

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xF3A88C", Offset = "0xF3A88C", VA = "0xF3A88C")]
		private bool isMultiSelection()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xF38694", Offset = "0xF38694", VA = "0xF38694")]
		public void Init()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xF3AF58", Offset = "0xF3AF58", VA = "0xF3AF58")]
		private void GetUserName()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xF3ADBC", Offset = "0xF3ADBC", VA = "0xF3ADBC")]
		private void SetLocation()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xF3A8A8", Offset = "0xF3A8A8", VA = "0xF3A8A8")]
		private void SetName()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xF3AA70", Offset = "0xF3AA70", VA = "0xF3AA70")]
		private void SetId()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xF3B1D8", Offset = "0xF3B1D8", VA = "0xF3B1D8")]
		private void BookmarkCheck()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xF3B290", Offset = "0xF3B290", VA = "0xF3B290")]
		private void LikeCheck()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xF3AEE4", Offset = "0xF3AEE4", VA = "0xF3AEE4")]
		[IteratorStateMachine(typeof(<GetUserAvatar>d__41))]
		private IEnumerator GetUserAvatar()
		{
			return null;
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xF3ADDC", Offset = "0xF3ADDC", VA = "0xF3ADDC")]
		[IteratorStateMachine(typeof(<GetProjectThumbnails>d__42))]
		private IEnumerator GetProjectThumbnails()
		{
			return null;
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xF3AC28", Offset = "0xF3AC28", VA = "0xF3AC28")]
		private void SetDate()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xF3AE98", Offset = "0xF3AE98", VA = "0xF3AE98")]
		private void SetHolder()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xF3B50C", Offset = "0xF3B50C", VA = "0xF3B50C")]
		public void Select()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xF3B64C", Offset = "0xF3B64C", VA = "0xF3B64C")]
		public void Unselect()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xF3B6F0", Offset = "0xF3B6F0", VA = "0xF3B6F0")]
		public void LikeProject()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xF3B714", Offset = "0xF3B714", VA = "0xF3B714")]
		public void BookMarkProject()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xF3B7C0", Offset = "0xF3B7C0", VA = "0xF3B7C0")]
		public void DownloadProject()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xF3B81C", Offset = "0xF3B81C", VA = "0xF3B81C")]
		public void EditProject()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xF3B960", Offset = "0xF3B960", VA = "0xF3B960")]
		public void ShareProject()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xF3BBE4", Offset = "0xF3BBE4", VA = "0xF3BBE4")]
		public void DupProject()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xF3BC68", Offset = "0xF3BC68", VA = "0xF3BC68")]
		public void DeleteProject()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xF3BE34", Offset = "0xF3BE34", VA = "0xF3BE34")]
		public void ToggleContextual(GameObject go)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xF3AE50", Offset = "0xF3AE50", VA = "0xF3AE50")]
		private void ImportCheck()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xF3BEBC", Offset = "0xF3BEBC", VA = "0xF3BEBC")]
		private void BestOfCheck()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xF3BE68", Offset = "0xF3BE68", VA = "0xF3BE68")]
		private bool isZIPfolder()
		{
			return default(bool);
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xF3B434", Offset = "0xF3B434", VA = "0xF3B434")]
		[IteratorStateMachine(typeof(<LikeRequest>d__58))]
		private IEnumerator LikeRequest(bool Like)
		{
			return null;
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xF3B738", Offset = "0xF3B738", VA = "0xF3B738")]
		[IteratorStateMachine(typeof(<BookMarkRequest>d__59))]
		private IEnumerator BookMarkRequest(bool Bookmark)
		{
			return null;
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xF3BF94", Offset = "0xF3BF94", VA = "0xF3BF94")]
		public void ShowCreatorProfile()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xF3C0F4", Offset = "0xF3C0F4", VA = "0xF3C0F4")]
		public void MultiSelectionToggle(bool value)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xF3913C", Offset = "0xF3913C", VA = "0xF3913C")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xF3B3BC", Offset = "0xF3B3BC", VA = "0xF3B3BC")]
		public static int IntParseFast(string value)
		{
			return default(int);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xF3C124", Offset = "0xF3C124", VA = "0xF3C124")]
		public void Hovering(bool ishovered)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xF3C180", Offset = "0xF3C180", VA = "0xF3C180")]
		public void Clean()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xF3C278", Offset = "0xF3C278", VA = "0xF3C278")]
		public ProjectCard()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class UserCard : MonoBehaviour
	{
		[Token(Token = "0x2000358")]
		[CompilerGenerated]
		private sealed class <Init>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400136D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400136E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserCard <>4__this;

			[Token(Token = "0x1700023D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600153F")]
				[Address(RVA = "0xF3E570", Offset = "0xF3E570", VA = "0xF3E570", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001541")]
				[Address(RVA = "0xF3E5B8", Offset = "0xF3E5B8", VA = "0xF3E5B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600153C")]
			[Address(RVA = "0xF3E170", Offset = "0xF3E170", VA = "0xF3E170")]
			[DebuggerHidden]
			public <Init>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600153D")]
			[Address(RVA = "0xF3E224", Offset = "0xF3E224", VA = "0xF3E224", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600153E")]
			[Address(RVA = "0xF3E228", Offset = "0xF3E228", VA = "0xF3E228", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001540")]
			[Address(RVA = "0xF3E578", Offset = "0xF3E578", VA = "0xF3E578", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UserCard instance;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JsonConverter.User user;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image userAvatar;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text UserName;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text Date;

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xF3E068", Offset = "0xF3E068", VA = "0xF3E068")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xF3E0FC", Offset = "0xF3E0FC", VA = "0xF3E0FC")]
		[IteratorStateMachine(typeof(<Init>d__6))]
		private IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xF3E198", Offset = "0xF3E198", VA = "0xF3E198")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xF3E21C", Offset = "0xF3E21C", VA = "0xF3E21C")]
		public UserCard()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class ScrollViewChecker : MonoBehaviour
	{
		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScrollRect scroll;

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xF3E5C0", Offset = "0xF3E5C0", VA = "0xF3E5C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xF3E618", Offset = "0xF3E618", VA = "0xF3E618")]
		public void ScrollCheck(Vector2 scrollvalue)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xF3E61C", Offset = "0xF3E61C", VA = "0xF3E61C")]
		public ScrollViewChecker()
		{
		}
	}
}
namespace ScaleComplexe
{
	[Token(Token = "0x200035A")]
	public abstract class AInputWrapper
	{
		[Token(Token = "0x6001545")]
		public abstract bool IsInputValid();

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xF3E624", Offset = "0xF3E624", VA = "0xF3E624")]
		protected AInputWrapper()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class OneHandDetection : AInputWrapper
	{
		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isFreeHandLeft;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xF3E62C", Offset = "0xF3E62C", VA = "0xF3E62C")]
		public OneHandDetection(bool isFreeHandLeft)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xF3E654", Offset = "0xF3E654", VA = "0xF3E654", Slot = "4")]
		public override bool IsInputValid()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200035C")]
	public class TwoHandDetection : AInputWrapper
	{
		[Token(Token = "0x6001549")]
		[Address(RVA = "0xF3E6E0", Offset = "0xF3E6E0", VA = "0xF3E6E0", Slot = "4")]
		public override bool IsInputValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xF3E77C", Offset = "0xF3E77C", VA = "0xF3E77C")]
		public TwoHandDetection()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class ArrowFeedback : MonoBehaviour
	{
		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("References")]
		[SerializeField]
		private ArrowMovement arrowMovement;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer arrowRenderer;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Header("Parameters")]
		private Direction direction;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float offset;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _Opacity;

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xF3E784", Offset = "0xF3E784", VA = "0xF3E784")]
		private void Start()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xF3E794", Offset = "0xF3E794", VA = "0xF3E794")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xF3E7A4", Offset = "0xF3E7A4", VA = "0xF3E7A4", Slot = "4")]
		protected virtual void RegisterEvents(bool register)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xF3EF04", Offset = "0xF3EF04", VA = "0xF3EF04")]
		protected void UpdateFeedback(Mode mode, Axis axis, Direction direction, ScaleOptions options)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xF3F04C", Offset = "0xF3F04C", VA = "0xF3F04C")]
		protected void UpdateFeedbackOnScaling(Mode mode, Axis axis, Direction direction, ScaleOptions options)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xF3F004", Offset = "0xF3F004", VA = "0xF3F004")]
		private void UpdateArrowDisplay(bool display, bool animate, bool highlight)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xF3F098", Offset = "0xF3F098", VA = "0xF3F098")]
		private void DisplayArrow(bool enable)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xF3F0C0", Offset = "0xF3F0C0", VA = "0xF3F0C0")]
		private void AnimateArrow(bool animate)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xF3F0E0", Offset = "0xF3F0E0", VA = "0xF3F0E0")]
		private void HighlightArrow(bool highlight)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xF3F16C", Offset = "0xF3F16C", VA = "0xF3F16C")]
		protected void UpdateArrowTransform(Transform targetTransform, Bounds bounds, Vector3 scaledExtents, Vector3 centerPosition)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xF3F434", Offset = "0xF3F434", VA = "0xF3F434")]
		private void UpdateArrowPivot(Vector3 position, Quaternion lookAtRotation)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xF3EF58", Offset = "0xF3EF58", VA = "0xF3EF58")]
		private bool IsArrowSelected(Mode mode, Axis axis, Direction direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xF3F4C8", Offset = "0xF3F4C8", VA = "0xF3F4C8")]
		public ArrowFeedback()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class ArrowFeedback_Target : ArrowFeedback
	{
		[Token(Token = "0x6001559")]
		[Address(RVA = "0xF3F544", Offset = "0xF3F544", VA = "0xF3F544", Slot = "4")]
		protected override void RegisterEvents(bool register)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xF3F8D4", Offset = "0xF3F8D4", VA = "0xF3F8D4")]
		public ArrowFeedback_Target()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class CubeFeedback : MonoBehaviour
	{
		[Token(Token = "0x4001376")]
		private const float ScaleChangingOffset = 0.05f;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("References")]
		[SerializeField]
		private CubeInfo cubeInfo;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Properties")]
		[SerializeField]
		private Color validColor;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Properties")]
		[SerializeField]
		private Color invalidColor;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Shake")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float strength;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int vibrato;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[Header("Haptics")]
		private float force;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material feedbackMaterial;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color colorX;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color colorY;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color colorZ;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int LeftPropretyID;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int RightPropretyID;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int UpPropretyID;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int DownPropretyID;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int FrontPropretyID;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int BackPropretyID;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int OutlineColorPropretyID;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Direction[] allDirection;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Tween shake;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float lastHandsDistance;

		[Token(Token = "0x1700023F")]
		public Color ColorX
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0xF3F938", Offset = "0xF3F938", VA = "0xF3F938")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000240")]
		public Color ColorY
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0xF3F944", Offset = "0xF3F944", VA = "0xF3F944")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000241")]
		public Color ColorZ
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xF3F950", Offset = "0xF3F950", VA = "0xF3F950")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xF3F95C", Offset = "0xF3F95C", VA = "0xF3F95C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xF3FB78", Offset = "0xF3FB78", VA = "0xF3FB78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xF3FC1C", Offset = "0xF3FC1C", VA = "0xF3FC1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xF40110", Offset = "0xF40110", VA = "0xF40110")]
		private void Update()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xF40244", Offset = "0xF40244", VA = "0xF40244")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xF3F960", Offset = "0xF3F960", VA = "0xF3F960")]
		private void GetReferences()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xF3FC90", Offset = "0xF3FC90", VA = "0xF3FC90")]
		private void RegisterEvents(bool enable)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xF40A44", Offset = "0xF40A44", VA = "0xF40A44")]
		private void UpdateFeedback(Mode mode, Axis axis, Direction direction, ScaleOptions options)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xF40E90", Offset = "0xF40E90", VA = "0xF40E90")]
		private void UpdateFeedbackDirection(Direction direction, ScaleOptions options)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xF40F58", Offset = "0xF40F58", VA = "0xF40F58")]
		private void SetActiveDirection(int nameID, bool value)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xF3FB7C", Offset = "0xF3FB7C", VA = "0xF3FB7C")]
		private void DisableAllHighlightedFaces()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xF40F84", Offset = "0xF40F84", VA = "0xF40F84")]
		private void OnCheckValidity(bool isValid)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xF40FE0", Offset = "0xF40FE0", VA = "0xF40FE0")]
		private void PlayScaleInvalidFeedback()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xF4107C", Offset = "0xF4107C", VA = "0xF4107C")]
		private void PlayGrabSound()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xF410D4", Offset = "0xF410D4", VA = "0xF410D4")]
		private void PlayReleaseSound()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xF4112C", Offset = "0xF4112C", VA = "0xF4112C")]
		private void OnScalingEntered(Mode obj)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xF41130", Offset = "0xF41130", VA = "0xF41130")]
		private void OnScalingExited(Mode mode)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xF40D94", Offset = "0xF40D94", VA = "0xF40D94")]
		private Direction[] GetAxisDirection(Axis axis)
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xF40EDC", Offset = "0xF40EDC", VA = "0xF40EDC")]
		private int GetShaderPropretyID(Direction direction)
		{
			return default(int);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xF411AC", Offset = "0xF411AC", VA = "0xF411AC")]
		public CubeFeedback()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class CubeInfo : MonoBehaviour
	{
		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Header("References")]
		private Transform cubeProjectionPivot;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform cubeProjection;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private XRGrabInteractable grabInteractable;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SphereFeedback sphereFeedback;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private XRController controllerSelecting;

		[Token(Token = "0x17000242")]
		public Transform CubeProjectionPivot
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0xF413A8", Offset = "0xF413A8", VA = "0xF413A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		public Transform CubeProjection
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0xF413B0", Offset = "0xF413B0", VA = "0xF413B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		public Transform CubeOrigin
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0xF413B8", Offset = "0xF413B8", VA = "0xF413B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		public SphereFeedback GrabSphereFeedback
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0xF413C0", Offset = "0xF413C0", VA = "0xF413C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public XRController ControllerSelecting
		{
			[Token(Token = "0x600157C")]
			[Address(RVA = "0xF413C8", Offset = "0xF413C8", VA = "0xF413C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public bool IsSelected
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0xF413D0", Offset = "0xF413D0", VA = "0xF413D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action onCubeDisplay
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0xF41270", Offset = "0xF41270", VA = "0xF41270")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001573")]
			[Address(RVA = "0xF4130C", Offset = "0xF4130C", VA = "0xF4130C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action selectEntered
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0xF4024C", Offset = "0xF4024C", VA = "0xF4024C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001575")]
			[Address(RVA = "0xF409A8", Offset = "0xF409A8", VA = "0xF409A8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action selectExited
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0xF402E8", Offset = "0xF402E8", VA = "0xF402E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001577")]
			[Address(RVA = "0xF4090C", Offset = "0xF4090C", VA = "0xF4090C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xF413EC", Offset = "0xF413EC", VA = "0xF413EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xF415B8", Offset = "0xF415B8", VA = "0xF415B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xF415C0", Offset = "0xF415C0", VA = "0xF415C0")]
		public void DisplayCube(bool enable)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xF41668", Offset = "0xF41668", VA = "0xF41668")]
		public bool IsFreeHandLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xF413F4", Offset = "0xF413F4", VA = "0xF413F4")]
		private void RegisterEvents(bool register)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xF4168C", Offset = "0xF4168C", VA = "0xF4168C")]
		private void OnGettingGrab(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xF41828", Offset = "0xF41828", VA = "0xF41828")]
		private void OnGettingRelease(SelectExitEventArgs args)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xF41918", Offset = "0xF41918", VA = "0xF41918")]
		public CubeInfo()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public enum Axis
	{
		[Token(Token = "0x4001399")]
		None,
		[Token(Token = "0x400139A")]
		X,
		[Token(Token = "0x400139B")]
		Y,
		[Token(Token = "0x400139C")]
		Z
	}
	[Token(Token = "0x2000363")]
	[Flags]
	public enum Direction
	{
		[Token(Token = "0x400139E")]
		None = 0,
		[Token(Token = "0x400139F")]
		Front = 1,
		[Token(Token = "0x40013A0")]
		Back = 2,
		[Token(Token = "0x40013A1")]
		Up = 4,
		[Token(Token = "0x40013A2")]
		Down = 8,
		[Token(Token = "0x40013A3")]
		Left = 0x10,
		[Token(Token = "0x40013A4")]
		Right = 0x20,
		[Token(Token = "0x40013A5")]
		All = -1
	}
	[Token(Token = "0x2000364")]
	public enum Mode
	{
		[Token(Token = "0x40013A7")]
		None,
		[Token(Token = "0x40013A8")]
		Axis,
		[Token(Token = "0x40013A9")]
		Direction
	}
	[Token(Token = "0x2000365")]
	public class ScaleComplexeBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ScaleComplexeBehaviour instance;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject CubePrefab;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("Offset relative at the head forward to display the cube at the right distance")]
		private Vector3 offset;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool behaviourEnabled;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool isScaling;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mode currentScalingMode;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Axis currentScalingAxis;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Direction currentScalingDirection;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Mode lastScalingMode;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Axis lastAxis;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Direction lastDirection;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float handsBaseDistance;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float handsCurrentDistance;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CubeInfo cubeInfo;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AInputWrapper inputWrapper;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool inputEntered;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool scaleWasInvalid;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ScaleOptions targetScaleOptions;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 baseScale;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Bounds cubeBounds;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 cubeScaledExtents;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 cubeCenterPosition;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Bounds targetBounds;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 targetScaledExtents;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 targetCenterPosition;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform targetTransform;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform scalingEmptyCube;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform scalingEmptyTarget;

		[Token(Token = "0x17000248")]
		public bool BehaviourEnabled
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0xF41DA0", Offset = "0xF41DA0", VA = "0xF41DA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000249")]
		public bool IsScaling
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0xF41DA8", Offset = "0xF41DA8", VA = "0xF41DA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024A")]
		public Mode CurrentScalingMode
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0xF41DB0", Offset = "0xF41DB0", VA = "0xF41DB0")]
			get
			{
				return default(Mode);
			}
		}

		[Token(Token = "0x1700024B")]
		public Axis CurrentScalingAxis
		{
			[Token(Token = "0x600159E")]
			[Address(RVA = "0xF41DB8", Offset = "0xF41DB8", VA = "0xF41DB8")]
			get
			{
				return default(Axis);
			}
		}

		[Token(Token = "0x1700024C")]
		public Direction CurrentScalingDirection
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0xF41DC0", Offset = "0xF41DC0", VA = "0xF41DC0")]
			get
			{
				return default(Direction);
			}
		}

		[Token(Token = "0x1700024D")]
		public float CurrentHandsDistance
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0xF41DC8", Offset = "0xF41DC8", VA = "0xF41DC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024E")]
		public CubeInfo CubeInfo
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0xF41DD0", Offset = "0xF41DD0", VA = "0xF41DD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002F")]
		public static event Action<bool> onBehaviourEnabled
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0xF41BB8", Offset = "0xF41BB8", VA = "0xF41BB8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600158C")]
			[Address(RVA = "0xF41CAC", Offset = "0xF41CAC", VA = "0xF41CAC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public static event Action<Mode> scalingEntered
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0xF40384", Offset = "0xF40384", VA = "0xF40384")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600158E")]
			[Address(RVA = "0xF40818", Offset = "0xF40818", VA = "0xF40818")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public static event Action<Mode> scalingExited
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xF40554", Offset = "0xF40554", VA = "0xF40554")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xF40724", Offset = "0xF40724", VA = "0xF40724")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public static event Action onScaleInvalid
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0xF40478", Offset = "0xF40478", VA = "0xF40478")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001592")]
			[Address(RVA = "0xF40648", Offset = "0xF40648", VA = "0xF40648")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public static event Action<Mode, Axis, Direction, ScaleOptions> onGettingScaleInfo
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0xF3E94C", Offset = "0xF3E94C", VA = "0xF3E94C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001594")]
			[Address(RVA = "0xF3EC28", Offset = "0xF3EC28", VA = "0xF3EC28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event Action<Mode, Axis, Direction, ScaleOptions> OnScaling
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0xF3EB34", Offset = "0xF3EB34", VA = "0xF3EB34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001596")]
			[Address(RVA = "0xF3EE10", Offset = "0xF3EE10", VA = "0xF3EE10")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event Action<Transform, Bounds, Vector3, Vector3> onGettingCubeProjectionBounds
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0xF3EA40", Offset = "0xF3EA40", VA = "0xF3EA40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001598")]
			[Address(RVA = "0xF3ED1C", Offset = "0xF3ED1C", VA = "0xF3ED1C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public static event Action<Transform, Bounds, Vector3, Vector3> onGettingTargetProjectionBounds
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0xF3F6EC", Offset = "0xF3F6EC", VA = "0xF3F6EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600159A")]
			[Address(RVA = "0xF3F7E0", Offset = "0xF3F7E0", VA = "0xF3F7E0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xF41DD8", Offset = "0xF41DD8", VA = "0xF41DD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xF41E40", Offset = "0xF41E40", VA = "0xF41E40")]
		private void Start()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xF42044", Offset = "0xF42044", VA = "0xF42044")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xF422D8", Offset = "0xF422D8", VA = "0xF422D8")]
		public void EnableBehaviour(bool enabled)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xF42974", Offset = "0xF42974", VA = "0xF42974")]
		public void ToggleBehaviour()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xF41E58", Offset = "0xF41E58", VA = "0xF41E58")]
		private void InstanciateScalingEmpty()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xF41F30", Offset = "0xF41F30", VA = "0xF41F30")]
		private void InstanciateCube()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xF425E4", Offset = "0xF425E4", VA = "0xF425E4")]
		private Transform GetCurrentTarget(ref Transform targetTransform, ref ScaleOptions scaleOptions)
		{
			return null;
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xF42698", Offset = "0xF42698", VA = "0xF42698")]
		private void DisplayCube()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xF42AAC", Offset = "0xF42AAC", VA = "0xF42AAC")]
		private Vector3 GetUserNonDominantHandPosition(Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xF42460", Offset = "0xF42460", VA = "0xF42460")]
		private void RegisterEvents(bool register)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xF42958", Offset = "0xF42958", VA = "0xF42958")]
		private void HideCube()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xF42AF8", Offset = "0xF42AF8", VA = "0xF42AF8")]
		private void DisableBehaviour(GameObject selected)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xF42048", Offset = "0xF42048", VA = "0xF42048")]
		private void ScalingBehaviour()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xF42DF0", Offset = "0xF42DF0", VA = "0xF42DF0")]
		private bool HasInputEntered()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xF430C4", Offset = "0xF430C4", VA = "0xF430C4")]
		private bool HasInputExited()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xF42E10", Offset = "0xF42E10", VA = "0xF42E10")]
		private void InputEntered()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xF4281C", Offset = "0xF4281C", VA = "0xF4281C")]
		private void InputExited()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xF4337C", Offset = "0xF4337C", VA = "0xF4337C")]
		private void StoreLastScaleInfo(ref Mode mode, ref Axis axis, ref Direction direction)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xF43398", Offset = "0xF43398", VA = "0xF43398")]
		private void ResetCube()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xF42B00", Offset = "0xF42B00", VA = "0xF42B00")]
		private Mode GetScalingMode(ref Mode scalingMode)
		{
			return default(Mode);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xF42C38", Offset = "0xF42C38", VA = "0xF42C38")]
		private Axis GetScalingAxis(Mode scalingMode, ref Axis scalingAxis, ref Direction scalingDirection)
		{
			return default(Axis);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xF42CA4", Offset = "0xF42CA4", VA = "0xF42CA4")]
		private bool IsScaleValid(Mode mode, Axis axis, Direction direction, ScaleOptions options)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xF42CFC", Offset = "0xF42CFC", VA = "0xF42CFC")]
		private bool IsInputValid(Mode scalingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xF42F8C", Offset = "0xF42F8C", VA = "0xF42F8C")]
		private float GetHandsDistance(ref float handDistance)
		{
			return default(float);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xF434EC", Offset = "0xF434EC", VA = "0xF434EC")]
		private Axis GetFreeHandAxis(bool freeHandIsLeft, ref Axis scalingAxis, ref Direction scalingDirection)
		{
			return default(Axis);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xF43414", Offset = "0xF43414", VA = "0xF43414")]
		private Axis GetHandsAxis(ref Axis scalingAxis, ref Direction scalingDirection)
		{
			return default(Axis);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xF4360C", Offset = "0xF4360C", VA = "0xF4360C")]
		private Direction GetDirection(Vector3 point)
		{
			return default(Direction);
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xF430E0", Offset = "0xF430E0", VA = "0xF430E0")]
		private void StoreBaseScale(Transform targetTransform)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xF4310C", Offset = "0xF4310C", VA = "0xF4310C")]
		private void AttachScalingEmpty(Mode scalingMode, Axis axis, Direction direction, Transform scalingEmpty, Transform targetTransform, ScaleOptions scaleOptions, Vector3 scaleExtents, Vector3 centerWorldPosition)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xF432D0", Offset = "0xF432D0", VA = "0xF432D0")]
		private void DetachScalingEmpty(Transform scalingEmpty, Transform targetTransform)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xF43060", Offset = "0xF43060", VA = "0xF43060")]
		private void Scaling(float baseHandsDistance, float handsDistance, Axis scalingAxis)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xF42B3C", Offset = "0xF42B3C", VA = "0xF42B3C")]
		private Bounds GetBounds(GameObject go, out Vector3 scaledExtents, out Vector3 centerPosition)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xF43814", Offset = "0xF43814", VA = "0xF43814")]
		private Vector3 GetDirectionPivotPosition(Direction scalingDirection, Transform targetTransform, Vector3 scaledExtents, Vector3 pivotTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xF43970", Offset = "0xF43970", VA = "0xF43970")]
		private void ScaleTargetByHandsDistance(Axis scalingAxis, Vector3 baseScale, float handsBaseDistance, float handsCurrentDistance, Transform targetTransform)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xF43ABC", Offset = "0xF43ABC", VA = "0xF43ABC")]
		private void SendEventScaleInvalid(bool isScaleValid)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xF42984", Offset = "0xF42984", VA = "0xF42984")]
		private ScaleOptions ExceptionLockedAxis(string tag)
		{
			return null;
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xF43B5C", Offset = "0xF43B5C", VA = "0xF43B5C")]
		public ScaleComplexeBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000367")]
	public class ScaleOptions
	{
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Direction allowedDirection;

		[Token(Token = "0x1700024F")]
		public Direction AllowedDirection
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xF43F78", Offset = "0xF43F78", VA = "0xF43F78")]
			get
			{
				return default(Direction);
			}
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xF43F80", Offset = "0xF43F80", VA = "0xF43F80")]
			set
			{
			}
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xF3EF48", Offset = "0xF3EF48", VA = "0xF3EF48")]
		public bool IsDirectionAllowed(Direction direction)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xF435AC", Offset = "0xF435AC", VA = "0xF435AC")]
		public bool IsAxisAllowed(Axis axis)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xF43B54", Offset = "0xF43B54", VA = "0xF43B54")]
		public ScaleOptions()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class SphereFeedback : MonoBehaviour
	{
		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Parameters")]
		[SerializeField]
		private CubeInfo cubeInfo;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Parameters")]
		[SerializeField]
		private float transitionDuration;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Ease transitionEase;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		[SerializeField]
		private float scaleMultiplier;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 grabSphereBaseScale;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween grabSphereScaleTransition;

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xF43F88", Offset = "0xF43F88", VA = "0xF43F88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xF44064", Offset = "0xF44064", VA = "0xF44064")]
		private void Start()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xF44330", Offset = "0xF44330", VA = "0xF44330")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xF4406C", Offset = "0xF4406C", VA = "0xF4406C")]
		private void RegisterEvents(bool register)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xF44338", Offset = "0xF44338", VA = "0xF44338")]
		private void OnScaleEntered(Mode mode)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xF44354", Offset = "0xF44354", VA = "0xF44354")]
		private void OnScaleExited(Mode mode)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xF4434C", Offset = "0xF4434C", VA = "0xF4434C")]
		private void HideSphere()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xF44364", Offset = "0xF44364", VA = "0xF44364")]
		private void DisplaySphere()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xF4436C", Offset = "0xF4436C", VA = "0xF4436C")]
		private void DisplaySphere(bool enable)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xF44630", Offset = "0xF44630", VA = "0xF44630")]
		private void ResetLocalPosition()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xF43FC4", Offset = "0xF43FC4", VA = "0xF43FC4")]
		private Vector3 GetAdjustedScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xF44698", Offset = "0xF44698", VA = "0xF44698")]
		public SphereFeedback()
		{
		}
	}
}
namespace StairProGen
{
	[Token(Token = "0x200036A")]
	public class Row
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int Number;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 position;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Step[] steps;

		[Token(Token = "0x17000250")]
		public bool HasStringer
		{
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xF446F8", Offset = "0xF446F8", VA = "0xF446F8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xF44700", Offset = "0xF44700", VA = "0xF44700")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public Vector3 RowPosition
		{
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0xF44780", Offset = "0xF44780", VA = "0xF44780")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000252")]
		public int RowNumber
		{
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xF4478C", Offset = "0xF4478C", VA = "0xF4478C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xF4470C", Offset = "0xF4470C", VA = "0xF4470C")]
		public Row(Vector3 position, int rowNumber, Step[] steps, bool hasStringer)
		{
		}
	}
	[Token(Token = "0x200036B")]
	[CreateAssetMenu(fileName = "StairsFamily", menuName = "New Stairs Family", order = 1)]
	public class StairsFamily : ScriptableObject
	{
		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Family Settings", order = 0)]
		[Space(10f, order = 1)]
		public bool as_Straight_Form;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool as_U_Form;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool as_L_Form;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool as_Spiral_Form;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool asBody;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool asBaseBoard;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool asHandRail;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool asStringer;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(20f, order = 0)]
		[Space(10f, order = 2)]
		[Header("Straigh prefab", order = 1)]
		public GameObject Step;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Body;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip(" Prefab order : Start/Middle(s)/End")]
		public GameObject[] HandRail;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip(" Prefab order : Start/Middle(s)/End")]
		public GameObject[] Stringer;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject Baseboard;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(20f, order = 0)]
		[Header("L prefab", order = 1)]
		[Space(10f, order = 2)]
		public GameObject L_Landing;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject L_Body;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip(" Prefab order : Ext/Int")]
		public GameObject[] L_HandRail;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject L_Stringer;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject L_Baseboard;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("U prefab", order = 1)]
		[Space(20f, order = 0)]
		[Space(10f, order = 2)]
		public GameObject U_Landing;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject U_Body;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject[] U_HandRail;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject U_Stringer;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject U_Baseboard;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip(" Prefab order : Step/Top")]
		[Space(10f, order = 2)]
		[Space(20f, order = 0)]
		[Header("Spiral prefab", order = 1)]
		public GameObject[] Spiral_Step;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip(" Prefab order : Start/Middle(s)/End")]
		public GameObject[] Spiral_HandRail;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Tooltip(" Prefab order : Start/Middle(s)/End")]
		public GameObject[] Spiral_Stringer;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Mesh Spiral_Bool;

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xF44794", Offset = "0xF44794", VA = "0xF44794")]
		public StairsFamily()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class StairsGenerator : MonoBehaviour
	{
		[Token(Token = "0x200036D")]
		public enum Type
		{
			[Token(Token = "0x400141B")]
			Straight,
			[Token(Token = "0x400141C")]
			U_Shaped,
			[Token(Token = "0x400141D")]
			L_Shaped,
			[Token(Token = "0x400141E")]
			Spiral
		}

		[Token(Token = "0x200036E")]
		public enum Size
		{
			[Token(Token = "0x4001420")]
			H1 = 2,
			[Token(Token = "0x4001421")]
			H2 = 6,
			[Token(Token = "0x4001422")]
			H3 = 16,
			[Token(Token = "0x4001423")]
			H4 = 18,
			[Token(Token = "0x4001424")]
			H5 = 22,
			[Token(Token = "0x4001425")]
			H6 = 32
		}

		[Token(Token = "0x200036F")]
		[CompilerGenerated]
		private sealed class <GenerateCO>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StairsGenerator <>4__this;

			[Token(Token = "0x17000256")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001612")]
				[Address(RVA = "0xF4A26C", Offset = "0xF4A26C", VA = "0xF4A26C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000257")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001614")]
				[Address(RVA = "0xF4A2B4", Offset = "0xF4A2B4", VA = "0xF4A2B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600160F")]
			[Address(RVA = "0xF454E8", Offset = "0xF454E8", VA = "0xF454E8")]
			[DebuggerHidden]
			public <GenerateCO>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001610")]
			[Address(RVA = "0xF49A18", Offset = "0xF49A18", VA = "0xF49A18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001611")]
			[Address(RVA = "0xF49A1C", Offset = "0xF49A1C", VA = "0xF49A1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001613")]
			[Address(RVA = "0xF4A274", Offset = "0xF4A274", VA = "0xF4A274", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool testing;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject HitboxGo;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshCollider MeshCol;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Booleans;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("General Options")]
		[SerializeField]
		public Type StairsType;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public float GoalHeight;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int StepNumber;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float RealHeight;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public bool HandRail;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		public bool Body;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		public bool BaseBoard;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[SerializeField]
		public bool Clockwise;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Theme")]
		[SerializeField]
		public StairsFamily Theme;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Special Options")]
		[SerializeField]
		public bool MeshCombine;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Polygon boolPolygon;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Row[] rows;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<GameObject> RowsGO;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> StepsGO;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int[] Quarter;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject Bool;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshFilter BoolMesh;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform StairsHolder;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject[] TPGo;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform parent;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float Offset_rot;

		[Token(Token = "0x4001410")]
		private const int angle = 30;

		[Token(Token = "0x4001411")]
		private const float StepWidth = 1f;

		[Token(Token = "0x4001412")]
		private const float StepDepth = 0.25f;

		[Token(Token = "0x4001413")]
		private const float StepHeight = 0.18f;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public float StairsWidth;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float StairsDepth;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Stairs ImportedStairsData;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public bool isOriented;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject TopColliderGo;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Room currentRoom;

		[Token(Token = "0x17000253")]
		public float ratio
		{
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xF448A0", Offset = "0xF448A0", VA = "0xF448A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000254")]
		public bool Testing
		{
			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xF448D4", Offset = "0xF448D4", VA = "0xF448D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xF448DC", Offset = "0xF448DC", VA = "0xF448DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public float TotalStepsHeight
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0xF448BC", Offset = "0xF448BC", VA = "0xF448BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xF448E8", Offset = "0xF448E8", VA = "0xF448E8")]
		public void CreateNewStairsWithStepNumber(int step)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xF44A0C", Offset = "0xF44A0C", VA = "0xF44A0C")]
		public void CreateNewStairsByHeight(float height)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xF44AC0", Offset = "0xF44AC0", VA = "0xF44AC0")]
		public void ImportStairs(Stairs stairData)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xF44E30", Offset = "0xF44E30", VA = "0xF44E30")]
		public void LoadStairs(ManagerSave.SLoadedStair data)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xF45020", Offset = "0xF45020", VA = "0xF45020")]
		public MultiPolygon GetStairMp()
		{
			return null;
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xF45280", Offset = "0xF45280", VA = "0xF45280")]
		public void GenerateWithCRoom(Room cRoom)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xF452C0", Offset = "0xF452C0", VA = "0xF452C0")]
		public void CheckForStairsUpdate(Room cRoom)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xF453F0", Offset = "0xF453F0", VA = "0xF453F0")]
		public void CheckForStairsUpdate(float Height)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xF44998", Offset = "0xF44998", VA = "0xF44998")]
		[IteratorStateMachine(typeof(<GenerateCO>d__52))]
		private IEnumerator GenerateCO()
		{
			return null;
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xF45510", Offset = "0xF45510", VA = "0xF45510")]
		private void EquivalenceSetup()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xF44ED8", Offset = "0xF44ED8", VA = "0xF44ED8")]
		private void ProccesSaveData(ManagerSave.SLoadedStair data)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xF44B78", Offset = "0xF44B78", VA = "0xF44B78")]
		private void ProccesImportedData()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xF45708", Offset = "0xF45708", VA = "0xF45708")]
		private void ClearAll()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xF458C8", Offset = "0xF458C8", VA = "0xF458C8")]
		private void DestroyGeneratedGameObject()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xF45720", Offset = "0xF45720", VA = "0xF45720")]
		private void ClearStairsComponents()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xF45CC0", Offset = "0xF45CC0", VA = "0xF45CC0")]
		private void ProcessStairs()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xF46580", Offset = "0xF46580", VA = "0xF46580")]
		private void SpawnStairs()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xF46E88", Offset = "0xF46E88", VA = "0xF46E88")]
		private void SpawnRow(Row row, GameObject RowGo)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xF47050", Offset = "0xF47050", VA = "0xF47050")]
		private void SpawnTP(bool isTop, GameObject RowGo)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xF47FD4", Offset = "0xF47FD4", VA = "0xF47FD4")]
		private void SpawnBaseboard(GameObject rowGo, int RowNumber)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xF47D80", Offset = "0xF47D80", VA = "0xF47D80")]
		private void SpawnBody(int i, GameObject rowGO, int RowNumber)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xF47A88", Offset = "0xF47A88", VA = "0xF47A88")]
		private void SpawnStep(Step step, GameObject rowGo, int RowNumber)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xF4876C", Offset = "0xF4876C", VA = "0xF4876C")]
		private void SpawnStringer(GameObject row, int RowNumber)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xF4850C", Offset = "0xF4850C", VA = "0xF4850C")]
		private void SpawnHandRail(int RowNumber, GameObject StepGo)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xF47730", Offset = "0xF47730", VA = "0xF47730")]
		private void SpawnBool(GameObject StepGo)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xF48A28", Offset = "0xF48A28", VA = "0xF48A28")]
		private void Combine()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xF49440", Offset = "0xF49440", VA = "0xF49440")]
		private void Center()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xF48330", Offset = "0xF48330", VA = "0xF48330")]
		private void SpawnTopCollider(GameObject Row)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xF481F8", Offset = "0xF481F8", VA = "0xF481F8")]
		private void SpawnTPArea(StairsTP stairsTP)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xF49860", Offset = "0xF49860", VA = "0xF49860")]
		private void UpdateBoundsCollider()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xF49928", Offset = "0xF49928", VA = "0xF49928")]
		public StairsGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000370")]
	public class Step
	{
		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int ParentRow;

		[Token(Token = "0x17000258")]
		public bool HasHandRail
		{
			[Token(Token = "0x6001616")]
			[Address(RVA = "0xF4A2F0", Offset = "0xF4A2F0", VA = "0xF4A2F0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001617")]
			[Address(RVA = "0xF4A2F8", Offset = "0xF4A2F8", VA = "0xF4A2F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public int getParentRow
		{
			[Token(Token = "0x6001618")]
			[Address(RVA = "0xF4A304", Offset = "0xF4A304", VA = "0xF4A304")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xF4A2BC", Offset = "0xF4A2BC", VA = "0xF4A2BC")]
		public Step(int i, bool hasHandRail = false)
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class MenuStairs : MonoBehaviour
	{
		[Token(Token = "0x6001619")]
		[Address(RVA = "0xF4A30C", Offset = "0xF4A30C", VA = "0xF4A30C")]
		public MenuStairs()
		{
		}
	}
}
namespace UnityEngine.XR.Interaction.Toolkit
{
	[Token(Token = "0x2000372")]
	public class SmoothSnapTurn : SnapTurnProviderBase
	{
		[Token(Token = "0x2000373")]
		public enum InputAxes
		{
			[Token(Token = "0x4001432")]
			Primary2DAxis,
			[Token(Token = "0x4001433")]
			Secondary2DAxis
		}

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("The 2D Input Axis on the controller devices that will be used to trigger a snap turn.")]
		[SerializeField]
		private InputAxes m_TurnUsage;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[Tooltip("A list of controllers that allow Snap Turn.  If an XRController is not enabled, or does not have input actions enabled, snap turn will not work.")]
		private List<XRBaseController> m_Controllers;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("The deadzone that the controller movement will have to be above to trigger a snap turn.")]
		[SerializeField]
		private float m_DeadZone;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float CurrentTurnAmount;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float TimeStarted;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly InputFeatureUsage<Vector2>[] k_Vec2UsageList;

		[Token(Token = "0x1700025A")]
		public InputAxes turnUsage
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0xF4A314", Offset = "0xF4A314", VA = "0xF4A314")]
			get
			{
				return default(InputAxes);
			}
			[Token(Token = "0x600161B")]
			[Address(RVA = "0xF4A31C", Offset = "0xF4A31C", VA = "0xF4A31C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public List<XRBaseController> controllers
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0xF4A324", Offset = "0xF4A324", VA = "0xF4A324")]
			get
			{
				return null;
			}
			[Token(Token = "0x600161D")]
			[Address(RVA = "0xF4A32C", Offset = "0xF4A32C", VA = "0xF4A32C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public float deadZone
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xF4A334", Offset = "0xF4A334", VA = "0xF4A334")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600161F")]
			[Address(RVA = "0xF4A33C", Offset = "0xF4A33C", VA = "0xF4A33C")]
			set
			{
			}
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xF4A344", Offset = "0xF4A344", VA = "0xF4A344")]
		private new void Update()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xF4A514", Offset = "0xF4A514", VA = "0xF4A514")]
		protected new void StartTurn(float amount)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xF4A5A4", Offset = "0xF4A5A4", VA = "0xF4A5A4", Slot = "5")]
		protected override Vector2 ReadInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xF4A7D0", Offset = "0xF4A7D0", VA = "0xF4A7D0")]
		public SmoothSnapTurn()
		{
		}
	}
}
namespace UnityEngine.UI
{
	[Token(Token = "0x2000374")]
	[AddComponentMenu("UI/Button2", 30)]
	public class Button2 : Selectable, ISubmitHandler, IEventSystemHandler, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000375")]
		public class ButtonClickedEvent : UnityEvent
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0xF4A9EC", Offset = "0xF4A9EC", VA = "0xF4A9EC")]
			public ButtonClickedEvent()
			{
			}
		}

		[Token(Token = "0x2000376")]
		[CompilerGenerated]
		private sealed class <OnFinishSubmit>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Button2 <>4__this;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fadeTime>5__2;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x1700025E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001633")]
				[Address(RVA = "0xF4AD4C", Offset = "0xF4AD4C", VA = "0xF4AD4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001635")]
				[Address(RVA = "0xF4AD94", Offset = "0xF4AD94", VA = "0xF4AD94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001630")]
			[Address(RVA = "0xF4AC58", Offset = "0xF4AC58", VA = "0xF4AC58")]
			[DebuggerHidden]
			public <OnFinishSubmit>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001631")]
			[Address(RVA = "0xF4AC80", Offset = "0xF4AC80", VA = "0xF4AC80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001632")]
			[Address(RVA = "0xF4AC84", Offset = "0xF4AC84", VA = "0xF4AC84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001634")]
			[Address(RVA = "0xF4AD54", Offset = "0xF4AD54", VA = "0xF4AD54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[FormerlySerializedAs("onClick")]
		private ButtonClickedEvent m_OnClick;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool isInside;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool wasPressed;

		[Token(Token = "0x1700025D")]
		public ButtonClickedEvent onClick
		{
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xF4A9F4", Offset = "0xF4A9F4", VA = "0xF4A9F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001627")]
			[Address(RVA = "0xF4A9FC", Offset = "0xF4A9FC", VA = "0xF4A9FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xF4A954", Offset = "0xF4A954", VA = "0xF4A954")]
		protected Button2()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xF4AA04", Offset = "0xF4AA04", VA = "0xF4AA04")]
		private void Press()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xF4AA9C", Offset = "0xF4AA9C", VA = "0xF4AA9C", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xF4AAAC", Offset = "0xF4AAAC", VA = "0xF4AAAC", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xF4AAB8", Offset = "0xF4AAB8", VA = "0xF4AAB8", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xF4AAE8", Offset = "0xF4AAE8", VA = "0xF4AAE8", Slot = "33")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xF4AB6C", Offset = "0xF4AB6C", VA = "0xF4AB6C", Slot = "40")]
		public virtual void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xF4ABE4", Offset = "0xF4ABE4", VA = "0xF4ABE4")]
		[IteratorStateMachine(typeof(<OnFinishSubmit>d__14))]
		private IEnumerator OnFinishSubmit()
		{
			return null;
		}
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x2000377")]
	public class OVRInputModuleCustom : PointerInputModule
	{
		[Token(Token = "0x2000378")]
		[Obsolete("Mode is no longer needed on input module as it handles both mouse and keyboard simultaneously.", false)]
		public enum InputMode
		{
			[Token(Token = "0x4001458")]
			Mouse,
			[Token(Token = "0x4001459")]
			Buttons
		}

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Object which points with Z axis. E.g. CentreEyeAnchor from OVRCameraRig")]
		public Transform rayTransformL;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform rayTransformR;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public OVRCursor m_CursorR;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public OVRCursor m_CursorL;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("Keyboard button to act as gaze click")]
		public KeyCode gazeClickKey;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Tooltip("Perform an sphere cast to determine correct depth for gaze pointer")]
		[Header("Physics")]
		public bool performSphereCastForGazepointer;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[Header("Gamepad Stick Scroll")]
		[Tooltip("Enable scrolling with the right stick on a gamepad")]
		public bool useRightStickScroll;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("Deadzone for right stick to prevent accidental scrolling")]
		public float rightStickDeadZone;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Tooltip("Enable scrolling by swiping the touchpad")]
		[Header("Touchpad Swipe Scroll")]
		public bool useSwipeScroll;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Minimum trackpad movement in pixels to start swiping")]
		public float swipeDragThreshold;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Tooltip("Distance scrolled when swipe scroll occurs")]
		public float swipeDragScale;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("Invert X axis on touchpad")]
		public bool InvertSwipeXAxis;

		[NonSerialized]
		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public OVRRaycaster activeGraphicRaycaster;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Header("Dragging")]
		[Tooltip("Minimum pointer movement in degrees to start dragging")]
		public float angleDragThreshold;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_SpherecastRadius;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool wasRightTriggerPressed;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float m_NextAction;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 m_LastMousePosition;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector2 m_MousePosition;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[Header("Standalone Input Module")]
		private string m_HorizontalAxis;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private bool m_AllowActivationOnMobileDevice;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Dictionary<int, OVRPointerEventData> m_VRRayPointerData;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x17000260")]
		[Obsolete("Mode is no longer needed on input module as it handles both mouse and keyboard simultaneously.", false)]
		public InputMode inputMode
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0xF4AF40", Offset = "0xF4AF40", VA = "0xF4AF40")]
			get
			{
				return default(InputMode);
			}
		}

		[Token(Token = "0x17000261")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x6001638")]
			[Address(RVA = "0xF4AF48", Offset = "0xF4AF48", VA = "0xF4AF48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001639")]
			[Address(RVA = "0xF4AF50", Offset = "0xF4AF50", VA = "0xF4AF50")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x600163A")]
			[Address(RVA = "0xF4AF5C", Offset = "0xF4AF5C", VA = "0xF4AF5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600163B")]
			[Address(RVA = "0xF4AF64", Offset = "0xF4AF64", VA = "0xF4AF64")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public string horizontalAxis
		{
			[Token(Token = "0x600163C")]
			[Address(RVA = "0xF4AF6C", Offset = "0xF4AF6C", VA = "0xF4AF6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600163D")]
			[Address(RVA = "0xF4AF74", Offset = "0xF4AF74", VA = "0xF4AF74")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public string verticalAxis
		{
			[Token(Token = "0x600163E")]
			[Address(RVA = "0xF4AF7C", Offset = "0xF4AF7C", VA = "0xF4AF7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600163F")]
			[Address(RVA = "0xF4AF84", Offset = "0xF4AF84", VA = "0xF4AF84")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public string submitButton
		{
			[Token(Token = "0x6001640")]
			[Address(RVA = "0xF4AF8C", Offset = "0xF4AF8C", VA = "0xF4AF8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001641")]
			[Address(RVA = "0xF4AF94", Offset = "0xF4AF94", VA = "0xF4AF94")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public string cancelButton
		{
			[Token(Token = "0x6001642")]
			[Address(RVA = "0xF4AF9C", Offset = "0xF4AF9C", VA = "0xF4AF9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001643")]
			[Address(RVA = "0xF4AFA4", Offset = "0xF4AFA4", VA = "0xF4AFA4")]
			set
			{
			}
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xF4AD9C", Offset = "0xF4AD9C", VA = "0xF4AD9C")]
		protected OVRInputModuleCustom()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xF4AFAC", Offset = "0xF4AFAC", VA = "0xF4AFAC", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xF4AFD0", Offset = "0xF4AFD0", VA = "0xF4AFD0", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xF4AFE8", Offset = "0xF4AFE8", VA = "0xF4AFE8", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xF4B16C", Offset = "0xF4B16C", VA = "0xF4B16C", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xF4B238", Offset = "0xF4B238", VA = "0xF4B238", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xF4B548", Offset = "0xF4B548", VA = "0xF4B548")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xF4B7B0", Offset = "0xF4B7B0", VA = "0xF4B7B0")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xF4B80C", Offset = "0xF4B80C", VA = "0xF4B80C")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xF4B8C8", Offset = "0xF4B8C8", VA = "0xF4B8C8")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xF4BB10", Offset = "0xF4BB10", VA = "0xF4BB10")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xF4BCBC", Offset = "0xF4BCBC", VA = "0xF4BCBC")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xF4C35C", Offset = "0xF4C35C", VA = "0xF4C35C")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xF4C664", Offset = "0xF4C664", VA = "0xF4C664", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xF4C624", Offset = "0xF4C624", VA = "0xF4C624")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xF4C700", Offset = "0xF4C700", VA = "0xF4C700")]
		protected void CopyFromTo(OVRPointerEventData from, OVRPointerEventData to)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xF4C780", Offset = "0xF4C780", VA = "0xF4C780")]
		protected new void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xF4C7EC", Offset = "0xF4C7EC", VA = "0xF4C7EC")]
		protected bool GetPointerData(int id, out OVRPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xF4B254", Offset = "0xF4B254", VA = "0xF4B254")]
		protected new void ClearSelection()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xF4C8E4", Offset = "0xF4C8E4", VA = "0xF4C8E4")]
		private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xF4CA88", Offset = "0xF4CA88", VA = "0xF4CA88", Slot = "31")]
		protected virtual MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xF4D7D0", Offset = "0xF4D7D0", VA = "0xF4D7D0")]
		protected MouseState GetCanvasPointerData()
		{
			return null;
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xF4DB80", Offset = "0xF4DB80", VA = "0xF4DB80")]
		private bool ShouldStartDrag(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xF4C6C8", Offset = "0xF4C6C8", VA = "0xF4C6C8")]
		private static bool IsPointerMoving(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xF4DEC0", Offset = "0xF4DEC0", VA = "0xF4DEC0")]
		protected Vector2 SwipeAdjustedPosition(Vector2 originalPosition, PointerEventData pointerEvent)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xF4DF4C", Offset = "0xF4DF4C", VA = "0xF4DF4C", Slot = "30")]
		protected override void ProcessDrag(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xF4E25C", Offset = "0xF4E25C", VA = "0xF4E25C", Slot = "32")]
		protected virtual PointerEventData.FramePressState GetGazeButtonState(OVRInput.RawButton rawButton)
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xF4D73C", Offset = "0xF4D73C", VA = "0xF4D73C")]
		protected Vector2 GetExtraScrollDelta()
		{
			return default(Vector2);
		}
	}
}
namespace Locomotion
{
	[Token(Token = "0x2000379")]
	public class LocomotionHandler : MonoBehaviour
	{
		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("References")]
		[SerializeField]
		private LocomotionTeleport locomotionTeleport;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocomotionSmooth locomotionSmooth;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocomotionGrab locomotionGrab;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TeleportInputHandlerTouchCustom teleportInputHandlerTouch;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Movement")]
		[SerializeField]
		[Range(0f, 10f)]
		private float moveSpeed;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[Header("Turn")]
		private float snapTurningAngle;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(0f, 360f)]
		[SerializeField]
		private float smoothTurningSpeed;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool movementEnabled;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MovementMode currentMovementMode;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private MovementMode lastMovementMode;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TurnBehaviourWrapper turnBehaviour;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool turnEnabled;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private TurnMode currentTurnMode;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isInitialized;

		[Token(Token = "0x17000267")]
		public bool MovementEnabled
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0xF4E710", Offset = "0xF4E710", VA = "0xF4E710")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001666")]
			[Address(RVA = "0xF4E718", Offset = "0xF4E718", VA = "0xF4E718")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public MovementMode CurrentMovementMode
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0xF4E7B8", Offset = "0xF4E7B8", VA = "0xF4E7B8")]
			get
			{
				return default(MovementMode);
			}
			[Token(Token = "0x6001668")]
			[Address(RVA = "0xF4E7C0", Offset = "0xF4E7C0", VA = "0xF4E7C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public bool IsMoving
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xF4EB28", Offset = "0xF4EB28", VA = "0xF4EB28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026A")]
		public bool TurnEnabled
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0xF4EB64", Offset = "0xF4EB64", VA = "0xF4EB64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600166B")]
			[Address(RVA = "0xF4EB6C", Offset = "0xF4EB6C", VA = "0xF4EB6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public TurnMode CurrentTurnMode
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0xF4EB9C", Offset = "0xF4EB9C", VA = "0xF4EB9C")]
			get
			{
				return default(TurnMode);
			}
			[Token(Token = "0x600166D")]
			[Address(RVA = "0xF4EBA4", Offset = "0xF4EBA4", VA = "0xF4EBA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public bool IsTurning
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0xF4EC68", Offset = "0xF4EC68", VA = "0xF4EC68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026D")]
		public bool IsInitialized
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0xF4EC84", Offset = "0xF4EC84", VA = "0xF4EC84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026E")]
		public float SnapTurningAngle
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xF4EC8C", Offset = "0xF4EC8C", VA = "0xF4EC8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001671")]
			[Address(RVA = "0xF4EC94", Offset = "0xF4EC94", VA = "0xF4EC94")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public float SmoothTurningSpeed
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0xF4EC9C", Offset = "0xF4EC9C", VA = "0xF4EC9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000270")]
		public float MoveSpeed
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0xF4ECA4", Offset = "0xF4ECA4", VA = "0xF4ECA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000037")]
		public event Action<MovementMode> onMovementModeChanged
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0xF4E318", Offset = "0xF4E318", VA = "0xF4E318")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xF4E3C8", Offset = "0xF4E3C8", VA = "0xF4E3C8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action<TurnMode> onTurnModeChanged
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0xF4E478", Offset = "0xF4E478", VA = "0xF4E478")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001662")]
			[Address(RVA = "0xF4E528", Offset = "0xF4E528", VA = "0xF4E528")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action onFinishInitialize
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0xF4E5D8", Offset = "0xF4E5D8", VA = "0xF4E5D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001664")]
			[Address(RVA = "0xF4E674", Offset = "0xF4E674", VA = "0xF4E674")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xF4ECAC", Offset = "0xF4ECAC", VA = "0xF4ECAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xF4F18C", Offset = "0xF4F18C", VA = "0xF4F18C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xF4F2D0", Offset = "0xF4F2D0", VA = "0xF4F2D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xF4F2D8", Offset = "0xF4F2D8", VA = "0xF4F2D8")]
		public void LocomotionEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xF4F014", Offset = "0xF4F014", VA = "0xF4F014")]
		private void RegisterEvents(bool register)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xF4E834", Offset = "0xF4E834", VA = "0xF4E834")]
		private void SwitchToMovementModeTeleport()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xF4E930", Offset = "0xF4E930", VA = "0xF4E930")]
		private void SwitchToMovementModeSmooth()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xF4EA2C", Offset = "0xF4EA2C", VA = "0xF4EA2C")]
		private void SwitchToMovementModeGrab()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xF4F00C", Offset = "0xF4F00C", VA = "0xF4F00C")]
		private void SetMovementModeToGrab()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xF4F40C", Offset = "0xF4F40C", VA = "0xF4F40C")]
		private void RestaureLastMovementMode()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xF4E724", Offset = "0xF4E724", VA = "0xF4E724")]
		private void EnableMovement(bool enable)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xF4F37C", Offset = "0xF4F37C", VA = "0xF4F37C")]
		private void UpdateAimingController()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xF4F228", Offset = "0xF4F228", VA = "0xF4F228")]
		private void Move()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xF4F284", Offset = "0xF4F284", VA = "0xF4F284")]
		private void Turn()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xF4EB78", Offset = "0xF4EB78", VA = "0xF4EB78")]
		private void EnableTurn(bool enable)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xF4F420", Offset = "0xF4F420", VA = "0xF4F420")]
		public LocomotionHandler()
		{
		}
	}
}
namespace Locomotion.Turn
{
	[Token(Token = "0x200037B")]
	public enum TurnMode
	{
		[Token(Token = "0x4001470")]
		Snap,
		[Token(Token = "0x4001471")]
		Smooth
	}
	[Token(Token = "0x200037C")]
	public class AnyHorizontalThumbstick : InputWrapper
	{
		[Token(Token = "0x6001689")]
		[Address(RVA = "0xF4F708", Offset = "0xF4F708", VA = "0xF4F708", Slot = "4")]
		public override bool Input()
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xF4F7F4", Offset = "0xF4F7F4", VA = "0xF4F7F4")]
		public AnyHorizontalThumbstick()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public enum Sensitivity
	{
		[Token(Token = "0x4001473")]
		Extremity,
		[Token(Token = "0x4001474")]
		Sensitive
	}
	[Token(Token = "0x200037E")]
	public class SingleHorizontalThumbstick : InputWrapper
	{
		[Token(Token = "0x200037F")]
		public enum Thumbstick
		{
			[Token(Token = "0x4001478")]
			Left,
			[Token(Token = "0x4001479")]
			Right
		}

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Thumbstick thumbstick;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Sensitivity sensitivity;

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xF4F804", Offset = "0xF4F804", VA = "0xF4F804")]
		public SingleHorizontalThumbstick(Thumbstick thumbstick, Sensitivity sensitivity)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xF4F830", Offset = "0xF4F830", VA = "0xF4F830", Slot = "4")]
		public override bool Input()
		{
			return default(bool);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xF4F850", Offset = "0xF4F850", VA = "0xF4F850")]
		private bool ThumbstickLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xF4F938", Offset = "0xF4F938", VA = "0xF4F938")]
		private bool ThumbstickRight()
		{
			return default(bool);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xF4FA0C", Offset = "0xF4FA0C", VA = "0xF4FA0C")]
		private bool ExtremityInput(bool left, bool right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xF4FA30", Offset = "0xF4FA30", VA = "0xF4FA30")]
		private bool SensitiveInput(float value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000380")]
	public abstract class InputWrapper
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool thumbstickRight;

		[Token(Token = "0x6001691")]
		public abstract bool Input();

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xF4F7FC", Offset = "0xF4F7FC", VA = "0xF4F7FC")]
		protected InputWrapper()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public abstract class TurnBehaviourWrapper
	{
		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool isTurning;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected InputWrapper inputWrapper;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Sensitivity sensitivity;

		[Token(Token = "0x17000271")]
		public bool IsTurning
		{
			[Token(Token = "0x6001693")]
			[Address(RVA = "0xF4FA60", Offset = "0xF4FA60", VA = "0xF4FA60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xF4FA68", Offset = "0xF4FA68", VA = "0xF4FA68", Slot = "4")]
		public virtual bool Input()
		{
			return default(bool);
		}

		[Token(Token = "0x6001695")]
		public abstract void Turn();

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xF4FB28", Offset = "0xF4FB28", VA = "0xF4FB28", Slot = "6")]
		public virtual void Enabled(bool state)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xF4FB3C", Offset = "0xF4FB3C", VA = "0xF4FB3C", Slot = "7")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xF4FB44", Offset = "0xF4FB44", VA = "0xF4FB44")]
		protected TurnBehaviourWrapper()
		{
		}
	}
}
namespace Locomotion.Turn.Snap
{
	[Token(Token = "0x2000382")]
	public class Snap : TurnBehaviourWrapper
	{
		[Token(Token = "0x2000383")]
		[CompilerGenerated]
		private sealed class <RotateBehaviour>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Snap <>4__this;

			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <fadeOnRotate>5__2;

			[Token(Token = "0x17000272")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016A1")]
				[Address(RVA = "0xF5002C", Offset = "0xF5002C", VA = "0xF5002C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000273")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016A3")]
				[Address(RVA = "0xF50074", Offset = "0xF50074", VA = "0xF50074", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600169E")]
			[Address(RVA = "0xF4FC80", Offset = "0xF4FC80", VA = "0xF4FC80")]
			[DebuggerHidden]
			public <RotateBehaviour>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600169F")]
			[Address(RVA = "0xF4FD94", Offset = "0xF4FD94", VA = "0xF4FD94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xF4FD98", Offset = "0xF4FD98", VA = "0xF4FD98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016A2")]
			[Address(RVA = "0xF50034", Offset = "0xF50034", VA = "0xF50034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool ReadyToSnapTurn;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool turningRight;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotationAngle;

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xF4FB4C", Offset = "0xF4FB4C", VA = "0xF4FB4C", Slot = "4")]
		public override bool Input()
		{
			return default(bool);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xF4FB7C", Offset = "0xF4FB7C", VA = "0xF4FB7C", Slot = "5")]
		public override void Turn()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xF4FC0C", Offset = "0xF4FC0C", VA = "0xF4FC0C")]
		[IteratorStateMachine(typeof(<RotateBehaviour>d__5))]
		protected IEnumerator RotateBehaviour()
		{
			return null;
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xF4FCA8", Offset = "0xF4FCA8", VA = "0xF4FCA8")]
		protected void RotatePlayer(float rotationAngle)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xF4EC58", Offset = "0xF4EC58", VA = "0xF4EC58")]
		public Snap()
		{
		}
	}
}
namespace Locomotion.Turn.Smooth
{
	[Token(Token = "0x2000384")]
	public class Smooth : TurnBehaviourWrapper
	{
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector2 axis2D;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotate;

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xF5007C", Offset = "0xF5007C", VA = "0xF5007C", Slot = "4")]
		public override bool Input()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xF500A0", Offset = "0xF500A0", VA = "0xF500A0", Slot = "5")]
		public override void Turn()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xF4EC60", Offset = "0xF4EC60", VA = "0xF4EC60")]
		public Smooth()
		{
		}
	}
}
namespace Locomotion.Movement
{
	[Token(Token = "0x2000385")]
	public enum MovementMode
	{
		[Token(Token = "0x4001488")]
		Teleport,
		[Token(Token = "0x4001489")]
		Smooth,
		[Token(Token = "0x400148A")]
		Grab
	}
}
namespace Koalabs.ChangeMe
{
	[Token(Token = "0x2000386")]
	public class CycloCharts : MonoBehaviour
	{
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject ChartController;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tween currentTween;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float minScale;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float maxScale;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cycloRadius;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float offsetTolerence;

		[Token(Token = "0x17000274")]
		private Transform PlayerTransform
		{
			[Token(Token = "0x60016A7")]
			[Address(RVA = "0xF50240", Offset = "0xF50240", VA = "0xF50240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xF5029C", Offset = "0xF5029C", VA = "0xF5029C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xF502D4", Offset = "0xF502D4", VA = "0xF502D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xF5038C", Offset = "0xF5038C", VA = "0xF5038C")]
		private void Recenter()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xF505D8", Offset = "0xF505D8", VA = "0xF505D8")]
		private void SetOpacity()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xF50510", Offset = "0xF50510", VA = "0xF50510")]
		private float GetDistance()
		{
			return default(float);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xF50710", Offset = "0xF50710", VA = "0xF50710")]
		public CycloCharts()
		{
		}
	}
}
namespace Koalabs.Test
{
	[Token(Token = "0x2000387")]
	public class ArrowMovement : MonoBehaviour
	{
		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ArrowController arrowController;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 localTranslationDirection;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 localRotationAxis;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float rotationMultiplier;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initalLocalPosition;

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xF50724", Offset = "0xF50724", VA = "0xF50724")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xF50754", Offset = "0xF50754", VA = "0xF50754")]
		private void Update()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xF508F8", Offset = "0xF508F8", VA = "0xF508F8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xF50A84", Offset = "0xF50A84", VA = "0xF50A84")]
		public ArrowMovement()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class ArrowController : MonoBehaviour
	{
		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int TimeSpeedShaderHash;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float translationSpeedMultiplier;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected MeshRenderer modelMeshRenderer;

		[Token(Token = "0x17000275")]
		public float TranslationSpeedMultiplier
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xF50A8C", Offset = "0xF50A8C", VA = "0xF50A8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xF50A94", Offset = "0xF50A94", VA = "0xF50A94", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xF50AA0", Offset = "0xF50AA0", VA = "0xF50AA0", Slot = "5")]
		protected virtual void GetTranslationSpeedMultiplier()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xF50B94", Offset = "0xF50B94", VA = "0xF50B94")]
		public ArrowController()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class ArrowController_Target : ArrowController
	{
		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xF50C04", Offset = "0xF50C04", VA = "0xF50C04", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xF50D20", Offset = "0xF50D20", VA = "0xF50D20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xF50C34", Offset = "0xF50C34", VA = "0xF50C34")]
		private void RegisterEvents(bool register)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xF50D28", Offset = "0xF50D28", VA = "0xF50D28")]
		private void OnBehaviourEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xF50CF8", Offset = "0xF50CF8", VA = "0xF50CF8")]
		private void SetActiveGO(bool setActive)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xF50D68", Offset = "0xF50D68", VA = "0xF50D68", Slot = "5")]
		protected override void GetTranslationSpeedMultiplier()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xF50E3C", Offset = "0xF50E3C", VA = "0xF50E3C")]
		public ArrowController_Target()
		{
		}
	}
}
namespace Koalabs.Shared
{
	[Token(Token = "0x200038A")]
	public class CanvasBillboard : MonoBehaviour
	{
		[Token(Token = "0x200038B")]
		private enum RotationType
		{
			[Token(Token = "0x40014A3")]
			RealBillboard,
			[Token(Token = "0x40014A4")]
			UpConstrainedBillboard
		}

		[Token(Token = "0x200038C")]
		private enum ScaleType
		{
			[Token(Token = "0x40014A6")]
			FixedScale,
			[Token(Token = "0x40014A7")]
			PerspectiveScale
		}

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float ScaleRatioLimit;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RotationType rotationType;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private ScaleType scaleType;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float scaleFactor;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lookVector;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float currentScale;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI textUI;

		[Token(Token = "0x17000276")]
		public Vector3 UpVector
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xF50E94", Offset = "0xF50E94", VA = "0xF50E94")]
			[CompilerGenerated]
			private get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xF50EA0", Offset = "0xF50EA0", VA = "0xF50EA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xF50EAC", Offset = "0xF50EAC", VA = "0xF50EAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xF50F04", Offset = "0xF50F04", VA = "0xF50F04")]
		private void Update()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xF51420", Offset = "0xF51420", VA = "0xF51420")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xF51000", Offset = "0xF51000", VA = "0xF51000")]
		private void ComputeRotation()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xF51294", Offset = "0xF51294", VA = "0xF51294")]
		private void ComputeScale()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xF51428", Offset = "0xF51428", VA = "0xF51428")]
		public CanvasBillboard()
		{
		}
	}
}
namespace Koalabs.Shared.Utility
{
	[Token(Token = "0x200038D")]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, DontDestroyOnLoad> dontDestroyOnLoads;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string id;

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xF51448", Offset = "0xF51448", VA = "0xF51448")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSplashScreen)]
		private static void Init()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xF514C0", Offset = "0xF514C0", VA = "0xF514C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xF51614", Offset = "0xF51614", VA = "0xF51614")]
		public DontDestroyOnLoad()
		{
		}
	}
}
namespace Koalabs.HD3DVR.Utility
{
	[Token(Token = "0x200038E")]
	public static class Booleans
	{
		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xF516B4", Offset = "0xF516B4", VA = "0xF516B4")]
		public static Polygon GetBool(GameObject obj, bool isVertical, bool fromStairs = false)
		{
			return null;
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xF518F4", Offset = "0xF518F4", VA = "0xF518F4")]
		private static Polygon GetOutlineFromBounds(MeshFilter filter, bool isVertical)
		{
			return null;
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xF51D38", Offset = "0xF51D38", VA = "0xF51D38")]
		private static Polygon GetMeshOutline(MeshFilter filter, bool isVertical)
		{
			return null;
		}
	}
	[Token(Token = "0x200038F")]
	public static class Bound
	{
		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xF5249C", Offset = "0xF5249C", VA = "0xF5249C")]
		public static Bounds GetBoundingBox(GameObject obj)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xF52618", Offset = "0xF52618", VA = "0xF52618")]
		public static Bounds GetBoundingBoxWithScale(GameObject obj)
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x2000390")]
	public static class Doors
	{
		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xF529B8", Offset = "0xF529B8", VA = "0xF529B8")]
		public static bool CheckExterior(Transform transform, int sign)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xF52C90", Offset = "0xF52C90", VA = "0xF52C90")]
		public static bool IsFrameorDoorLeadOutside(Collider col)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000391")]
	public static class FilePath
	{
		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xF52DC0", Offset = "0xF52DC0", VA = "0xF52DC0")]
		public static string GetStreamingAssetPath(string filename, int projectid = 0)
		{
			return null;
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xF5353C", Offset = "0xF5353C", VA = "0xF5353C")]
		public static string GetGameObjectPath(Transform transform)
		{
			return null;
		}
	}
	[Token(Token = "0x2000392")]
	public static class Geometry
	{
		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xF5361C", Offset = "0xF5361C", VA = "0xF5361C")]
		public static GameObject CreateQuad(Vector2 size, Vector2 uvOffset)
		{
			return null;
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xF539AC", Offset = "0xF539AC", VA = "0xF539AC")]
		public static GameObject CreateQuadXY(Vector2 size, Vector2 uvOffset, Vector3 normal)
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xF53D54", Offset = "0xF53D54", VA = "0xF53D54")]
		public static List<GameObject> GetMesh(this GameObject gameObject, SurfacePistol.Surface surface, Vector2Int cellCoord, Material mat, int mode, int size)
		{
			return null;
		}
	}
	[Token(Token = "0x2000393")]
	public static class Layers
	{
		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xF53E4C", Offset = "0xF53E4C", VA = "0xF53E4C")]
		public static void SetLayerRecursively(this Transform parent, int layer)
		{
		}
	}
	[Token(Token = "0x2000394")]
	public static class Lists
	{
		[Token(Token = "0x60016D7")]
		public static int prevIndex<T>(this List<T> list, int index)
		{
			return default(int);
		}

		[Token(Token = "0x60016D8")]
		public static int nextIndex<T>(this List<T> list, int index)
		{
			return default(int);
		}

		[Token(Token = "0x60016D9")]
		public static int nextNIndex<T>(this List<T> list, int index, int n)
		{
			return default(int);
		}

		[Token(Token = "0x60016DA")]
		public static int prevIndex<TKey, TValue>(this SortedList<TKey, TValue> list, int index)
		{
			return default(int);
		}

		[Token(Token = "0x60016DB")]
		public static int nextIndex<TKey, TValue>(this SortedList<TKey, TValue> list, int index)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000395")]
	public static class Materials
	{
		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xF53ED0", Offset = "0xF53ED0", VA = "0xF53ED0")]
		public static string GetCellMat(this GameObject gameObject, SurfacePistol.Surface surface, Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xF53FD8", Offset = "0xF53FD8", VA = "0xF53FD8")]
		public static Material LoadTextureMat(string name)
		{
			return null;
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xF540D0", Offset = "0xF540D0", VA = "0xF540D0")]
		public static int GetGameObjectVariation(Renderer renderer, out string[] matNames)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000396")]
	public static class MR
	{
		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xF542B4", Offset = "0xF542B4", VA = "0xF542B4")]
		public static void ToMRFormat(this LineRenderer lineRenderer)
		{
		}
	}
	[Token(Token = "0x2000397")]
	public static class Multi
	{
		[Token(Token = "0x17000277")]
		public static bool KickedOut
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xF54328", Offset = "0xF54328", VA = "0xF54328")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xF5440C", Offset = "0xF5440C", VA = "0xF5440C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000398")]
	public static class Physic
	{
		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xF54520", Offset = "0xF54520", VA = "0xF54520")]
		public static void IgnoreSeveralPhysicsLayer(int layer, bool ignore, params int[] layers)
		{
		}
	}
	[Token(Token = "0x2000399")]
	public static class Tags
	{
		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xF54598", Offset = "0xF54598", VA = "0xF54598")]
		public static bool CompareTagsOR(this GameObject go, params string[] tags)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xF5461C", Offset = "0xF5461C", VA = "0xF5461C")]
		public static bool CompareTagsOR(this Component compo, params string[] tags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200039A")]
	public static class Text
	{
		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xF54640", Offset = "0xF54640", VA = "0xF54640")]
		public static string CleanName(string name)
		{
			return null;
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xF54694", Offset = "0xF54694", VA = "0xF54694")]
		public static string ToStringF4(this Vector3 vector)
		{
			return null;
		}
	}
	[Token(Token = "0x200039B")]
	public static class Transforms
	{
		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xF546F0", Offset = "0xF546F0", VA = "0xF546F0")]
		public static Vector3 ObjectToWorldPoint(GameObject obj, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xF5473C", Offset = "0xF5473C", VA = "0xF5473C")]
		public static Vector3 ObjectToWorldVector(GameObject obj, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xF54788", Offset = "0xF54788", VA = "0xF54788")]
		public static Vector3 ObjectToWorldDirection(GameObject obj, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xF547D4", Offset = "0xF547D4", VA = "0xF547D4")]
		public static Vector3 WorldToProjectPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xF548AC", Offset = "0xF548AC", VA = "0xF548AC")]
		public static Vector3 WorldToProjectVector(Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xF54984", Offset = "0xF54984", VA = "0xF54984")]
		public static Vector3 WorldToProjectDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xF54A5C", Offset = "0xF54A5C", VA = "0xF54A5C")]
		public static Quaternion WorldToProjectRotation(Quaternion rot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xF54B9C", Offset = "0xF54B9C", VA = "0xF54B9C")]
		public static Vector3 ObjectToProjectPoint(GameObject obj, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xF54BAC", Offset = "0xF54BAC", VA = "0xF54BAC")]
		public static Vector3 ObjectToProjectVector(GameObject obj, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xF54BBC", Offset = "0xF54BBC", VA = "0xF54BBC")]
		public static Vector3 ObjectToProjectDirection(GameObject obj, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xF54BCC", Offset = "0xF54BCC", VA = "0xF54BCC")]
		public static Vector3 ProjectToWorldPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xF54CA4", Offset = "0xF54CA4", VA = "0xF54CA4")]
		public static Vector3 ProjectToWorldVector(Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xF54D7C", Offset = "0xF54D7C", VA = "0xF54D7C")]
		public static Vector3 ProjectToWorldDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xF54E54", Offset = "0xF54E54", VA = "0xF54E54")]
		public static Quaternion ProjectToWorldRotation(Quaternion rot)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xF54F8C", Offset = "0xF54F8C", VA = "0xF54F8C")]
		public static void LocalToDefault(this Transform transform)
		{
		}
	}
}
namespace Koalabs.HD3DVR.User
{
	[Token(Token = "0x200039C")]
	public class UserInformation : SingletonMonoBehaviour<UserInformation>
	{
		[Token(Token = "0x200039D")]
		public struct Information
		{
			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Id;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Sprite Avatar;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string DisplayName;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DateTime InscriptionDate;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string PersistentPath;

			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string OculusID;
		}

		[Token(Token = "0x40014AA")]
		private const string EmptyNamePlaceholder = "Anonymous";

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LoginRegister currentLoginRegister;

		[Token(Token = "0x17000278")]
		public Information CurrentInformation
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xF551CC", Offset = "0xF551CC", VA = "0xF551CC")]
			[CompilerGenerated]
			get
			{
				return default(Information);
			}
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xF551E0", Offset = "0xF551E0", VA = "0xF551E0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action<Information> OnInfoChanged
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xF5506C", Offset = "0xF5506C", VA = "0xF5506C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xF5511C", Offset = "0xF5511C", VA = "0xF5511C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xF55200", Offset = "0xF55200", VA = "0xF55200")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xF5532C", Offset = "0xF5532C", VA = "0xF5532C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xF55500", Offset = "0xF55500", VA = "0xF55500")]
		private void UserRequest()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xF555AC", Offset = "0xF555AC", VA = "0xF555AC")]
		private void OnSceneLoaded(Scene _arg0, LoadSceneMode _arg1)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xF5574C", Offset = "0xF5574C", VA = "0xF5574C")]
		private void OnLogIn(JsonConverter.User _user, Sprite _avatar)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xF55970", Offset = "0xF55970", VA = "0xF55970")]
		private void OnLogOut(int _id)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xF55A54", Offset = "0xF55A54", VA = "0xF55A54")]
		public UserInformation()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class UserSettings : SingletonMonoBehaviour<UserSettings>
	{
		[Token(Token = "0x40014B6")]
		private const string HandHapticsKey = "HandHaptics";

		[Token(Token = "0x40014B7")]
		private const int BooleanTrueInt = 1;

		[Token(Token = "0x40014B8")]
		private const int BooleanFalseInt = 0;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool hapticsEnabledDefaultValue;

		[Token(Token = "0x17000279")]
		public bool HandHapticsEnabled
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0xF55E18", Offset = "0xF55E18", VA = "0xF55E18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001708")]
			[Address(RVA = "0xF55E68", Offset = "0xF55E68", VA = "0xF55E68")]
			set
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action OnSettingsChanged
		{
			[Token(Token = "0x6001705")]
			[Address(RVA = "0xF55CE0", Offset = "0xF55CE0", VA = "0xF55CE0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001706")]
			[Address(RVA = "0xF55D7C", Offset = "0xF55D7C", VA = "0xF55D7C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xF55FB0", Offset = "0xF55FB0", VA = "0xF55FB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xF56174", Offset = "0xF56174", VA = "0xF56174")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xF560D8", Offset = "0xF560D8", VA = "0xF560D8")]
		private void OnInfoChanged(UserInformation.Information _information)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xF55EA8", Offset = "0xF55EA8", VA = "0xF55EA8")]
		private void SetHandHapticsEnabled(bool _enabled, bool _silent)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xF56278", Offset = "0xF56278", VA = "0xF56278")]
		public UserSettings()
		{
		}
	}
}
namespace Koalabs.HD3DVR.GameScene
{
	[Token(Token = "0x20003A1")]
	public class SpawnPoint
	{
		[Token(Token = "0x6001711")]
		[Address(RVA = "0xF5640C", Offset = "0xF5640C", VA = "0xF5640C")]
		public static Vector3 FindSpawnPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xF58410", Offset = "0xF58410", VA = "0xF58410")]
		private static bool IsPosValid(Vector2Int _pos, Vector2Int _gridSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xF58054", Offset = "0xF58054", VA = "0xF58054")]
		private static void FSP_FillObject(GameObject _root, ref sbyte[,] _grid, Queue<Vector2Int> _queue, AABBf _sceneAABB, float _cellSize)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xF58440", Offset = "0xF58440", VA = "0xF58440")]
		public SpawnPoint()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class Storeys
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<float> storeysList;

		[Token(Token = "0x1700027A")]
		public static List<float> StoreysList
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0xF58448", Offset = "0xF58448", VA = "0xF58448")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xF58490", Offset = "0xF58490", VA = "0xF58490")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public static int currentStorey
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0xF584E8", Offset = "0xF584E8", VA = "0xF584E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xF58678", Offset = "0xF58678", VA = "0xF58678")]
		public static void InitStoreysList()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xF587FC", Offset = "0xF587FC", VA = "0xF587FC")]
		public static void ListStoreys(bool _updateShadows = true)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xF58D38", Offset = "0xF58D38", VA = "0xF58D38")]
		public static void UpdateStoreyVisibility(int _curStorey)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xF5B630", Offset = "0xF5B630", VA = "0xF5B630")]
		public static float GetStoreyOf(GameObject _gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xF5B7A8", Offset = "0xF5B7A8", VA = "0xF5B7A8")]
		public static float GetUpperStoreyOf(GameObject _gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xF5B310", Offset = "0xF5B310", VA = "0xF5B310")]
		public static int GetStoreyIndexOf(GameObject _obj)
		{
			return default(int);
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xF5B8D4", Offset = "0xF5B8D4", VA = "0xF5B8D4")]
		public static int GetStoreyIndexOfPos(Vector3 _pos)
		{
			return default(int);
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xF5B568", Offset = "0xF5B568", VA = "0xF5B568")]
		private static bool IsRoomFloorVisible(Room _room, int _curStorey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xF5B3CC", Offset = "0xF5B3CC", VA = "0xF5B3CC")]
		private static bool IsRoomCeilingVisible(Room _room, int _curStorey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xF5BA08", Offset = "0xF5BA08", VA = "0xF5BA08")]
		public Storeys()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class TimeOfDay : MonoBehaviour
	{
		[Token(Token = "0x6001722")]
		[Address(RVA = "0xF5BA10", Offset = "0xF5BA10", VA = "0xF5BA10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xF5BAB4", Offset = "0xF5BAB4", VA = "0xF5BAB4")]
		private void OnSunAngleChanged()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xF5C250", Offset = "0xF5C250", VA = "0xF5C250")]
		public TimeOfDay()
		{
		}
	}
}
namespace Koalabs.HD3DVR.MultiVisit
{
	[Token(Token = "0x20003A4")]
	public class NetworkManager : MonoBehaviourPunCallbacks, IOnEventCallback, IPunOwnershipCallbacks
	{
		[Token(Token = "0x20003A5")]
		[CompilerGenerated]
		private sealed class <AutoSave>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <autosaveRate>5__2;

			[Token(Token = "0x1700027E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001748")]
				[Address(RVA = "0xF5F2DC", Offset = "0xF5F2DC", VA = "0xF5F2DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600174A")]
				[Address(RVA = "0xF5F324", Offset = "0xF5F324", VA = "0xF5F324", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001745")]
			[Address(RVA = "0xF5C764", Offset = "0xF5C764", VA = "0xF5C764")]
			[DebuggerHidden]
			public <AutoSave>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001746")]
			[Address(RVA = "0xF5F0B0", Offset = "0xF5F0B0", VA = "0xF5F0B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001747")]
			[Address(RVA = "0xF5F0B4", Offset = "0xF5F0B4", VA = "0xF5F0B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001749")]
			[Address(RVA = "0xF5F2E4", Offset = "0xF5F2E4", VA = "0xF5F2E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A6")]
		[CompilerGenerated]
		private sealed class <ProcessDisconnection>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkManager <>4__this;

			[Token(Token = "0x40014D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool toMenu;

			[Token(Token = "0x17000280")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600174E")]
				[Address(RVA = "0xF5F5E8", Offset = "0xF5F5E8", VA = "0xF5F5E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000281")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001750")]
				[Address(RVA = "0xF5F630", Offset = "0xF5F630", VA = "0xF5F630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600174B")]
			[Address(RVA = "0xF5CBEC", Offset = "0xF5CBEC", VA = "0xF5CBEC")]
			[DebuggerHidden]
			public <ProcessDisconnection>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600174C")]
			[Address(RVA = "0xF5F32C", Offset = "0xF5F32C", VA = "0xF5F32C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600174D")]
			[Address(RVA = "0xF5F330", Offset = "0xF5F330", VA = "0xF5F330", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600174F")]
			[Address(RVA = "0xF5F5F0", Offset = "0xF5F5F0", VA = "0xF5F5F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A7")]
		[CompilerGenerated]
		private sealed class <DeleteVRSession>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string <uri>5__2;

			[Token(Token = "0x40014D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <req>5__3;

			[Token(Token = "0x17000282")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001754")]
				[Address(RVA = "0xF5F954", Offset = "0xF5F954", VA = "0xF5F954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000283")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001756")]
				[Address(RVA = "0xF5F99C", Offset = "0xF5F99C", VA = "0xF5F99C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001751")]
			[Address(RVA = "0xF5CC74", Offset = "0xF5CC74", VA = "0xF5CC74")]
			[DebuggerHidden]
			public <DeleteVRSession>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001752")]
			[Address(RVA = "0xF5F638", Offset = "0xF5F638", VA = "0xF5F638", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001753")]
			[Address(RVA = "0xF5F63C", Offset = "0xF5F63C", VA = "0xF5F63C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001755")]
			[Address(RVA = "0xF5F95C", Offset = "0xF5F95C", VA = "0xF5F95C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A8")]
		[CompilerGenerated]
		private sealed class <SaveDuringMultiplayer>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isAutoSaveLocal;

			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkManager <>4__this;

			[Token(Token = "0x17000284")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600175A")]
				[Address(RVA = "0xF5FEF8", Offset = "0xF5FEF8", VA = "0xF5FEF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000285")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600175C")]
				[Address(RVA = "0xF5FF40", Offset = "0xF5FF40", VA = "0xF5FF40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001757")]
			[Address(RVA = "0xF5CD24", Offset = "0xF5CD24", VA = "0xF5CD24")]
			[DebuggerHidden]
			public <SaveDuringMultiplayer>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001758")]
			[Address(RVA = "0xF5F9A4", Offset = "0xF5F9A4", VA = "0xF5F9A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001759")]
			[Address(RVA = "0xF5F9A8", Offset = "0xF5F9A8", VA = "0xF5F9A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600175B")]
			[Address(RVA = "0xF5FF00", Offset = "0xF5FF00", VA = "0xF5FF00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A9")]
		[CompilerGenerated]
		private sealed class <DelayRecreateWall>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Wall> walls;

			[Token(Token = "0x17000286")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001760")]
				[Address(RVA = "0xF6010C", Offset = "0xF6010C", VA = "0xF6010C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000287")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001762")]
				[Address(RVA = "0xF60154", Offset = "0xF60154", VA = "0xF60154", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600175D")]
			[Address(RVA = "0xF5CDC0", Offset = "0xF5CDC0", VA = "0xF5CDC0")]
			[DebuggerHidden]
			public <DelayRecreateWall>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x600175E")]
			[Address(RVA = "0xF5FF48", Offset = "0xF5FF48", VA = "0xF5FF48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600175F")]
			[Address(RVA = "0xF5FF4C", Offset = "0xF5FF4C", VA = "0xF5FF4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001761")]
			[Address(RVA = "0xF60114", Offset = "0xF60114", VA = "0xF60114", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003AA")]
		[CompilerGenerated]
		private sealed class <DelayUpdateWall>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject doorOrWindow;

			[Token(Token = "0x17000288")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001766")]
				[Address(RVA = "0xF60234", Offset = "0xF60234", VA = "0xF60234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000289")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001768")]
				[Address(RVA = "0xF6027C", Offset = "0xF6027C", VA = "0xF6027C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001763")]
			[Address(RVA = "0xF5CE5C", Offset = "0xF5CE5C", VA = "0xF5CE5C")]
			[DebuggerHidden]
			public <DelayUpdateWall>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001764")]
			[Address(RVA = "0xF6015C", Offset = "0xF6015C", VA = "0xF6015C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001765")]
			[Address(RVA = "0xF60160", Offset = "0xF60160", VA = "0xF60160", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001767")]
			[Address(RVA = "0xF6023C", Offset = "0xF6023C", VA = "0xF6023C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003AB")]
		[CompilerGenerated]
		private sealed class <WaitForEndOfLoading>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreen loadingScreen;

			[Token(Token = "0x1700028A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600176C")]
				[Address(RVA = "0xF60380", Offset = "0xF60380", VA = "0xF60380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600176E")]
				[Address(RVA = "0xF603C8", Offset = "0xF603C8", VA = "0xF603C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001769")]
			[Address(RVA = "0xF5CEF8", Offset = "0xF5CEF8", VA = "0xF5CEF8")]
			[DebuggerHidden]
			public <WaitForEndOfLoading>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x600176A")]
			[Address(RVA = "0xF60284", Offset = "0xF60284", VA = "0xF60284", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600176B")]
			[Address(RVA = "0xF60288", Offset = "0xF60288", VA = "0xF60288", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600176D")]
			[Address(RVA = "0xF60388", Offset = "0xF60388", VA = "0xF60388", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static ManagerTools.HandHolding ContinueSelectHandHolding;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool ContinueSelectContextualMenu;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool ContinueSelectWillBeNewObj;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static bool ExpectsDuplication;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Button2 Button;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static PocketMenuLoader PocketMenuLoader;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject vrRigLocal;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MultiMenu visitorMenu;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool disconnectedFromEvent;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool masterSwitched;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool disconnectStarted;

		[Token(Token = "0x1700027C")]
		public static bool GetWilledDisconnect
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0xF5C258", Offset = "0xF5C258", VA = "0xF5C258")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001726")]
			[Address(RVA = "0xF5C2B0", Offset = "0xF5C2B0", VA = "0xF5C2B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public static bool GetAreActionsAuthorized
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xF5C30C", Offset = "0xF5C30C", VA = "0xF5C30C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xF5C364", Offset = "0xF5C364", VA = "0xF5C364")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xF5C3C0", Offset = "0xF5C3C0", VA = "0xF5C3C0", Slot = "28")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xF5C4EC", Offset = "0xF5C4EC", VA = "0xF5C4EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xF5C5F4", Offset = "0xF5C5F4", VA = "0xF5C5F4", Slot = "29")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xF5C704", Offset = "0xF5C704", VA = "0xF5C704")]
		[IteratorStateMachine(typeof(<AutoSave>d__22))]
		private static IEnumerator AutoSave()
		{
			return null;
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xF5C78C", Offset = "0xF5C78C", VA = "0xF5C78C")]
		private void SimpleDisconnection(bool toMenu = false)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xF5CB64", Offset = "0xF5CB64", VA = "0xF5CB64")]
		[IteratorStateMachine(typeof(<ProcessDisconnection>d__24))]
		private IEnumerator ProcessDisconnection(bool toMenu = false)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xF5CC14", Offset = "0xF5CC14", VA = "0xF5CC14")]
		[IteratorStateMachine(typeof(<DeleteVRSession>d__25))]
		private static IEnumerator DeleteVRSession()
		{
			return null;
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xF5CC9C", Offset = "0xF5CC9C", VA = "0xF5CC9C")]
		[IteratorStateMachine(typeof(<SaveDuringMultiplayer>d__26))]
		private IEnumerator SaveDuringMultiplayer(bool isAutoSaveLocal)
		{
			return null;
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xF5CD4C", Offset = "0xF5CD4C", VA = "0xF5CD4C")]
		[IteratorStateMachine(typeof(<DelayRecreateWall>d__27))]
		private static IEnumerator DelayRecreateWall(List<Wall> walls)
		{
			return null;
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xF5CDE8", Offset = "0xF5CDE8", VA = "0xF5CDE8")]
		[IteratorStateMachine(typeof(<DelayUpdateWall>d__28))]
		private static IEnumerator DelayUpdateWall(GameObject doorOrWindow)
		{
			return null;
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xF5CE84", Offset = "0xF5CE84", VA = "0xF5CE84")]
		[IteratorStateMachine(typeof(<WaitForEndOfLoading>d__29))]
		private IEnumerator WaitForEndOfLoading(LoadingScreen loadingScreen)
		{
			return null;
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xF5CF20", Offset = "0xF5CF20", VA = "0xF5CF20")]
		private static void SendSunAngle()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xF5C538", Offset = "0xF5C538", VA = "0xF5C538")]
		private static void Connect()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xF5D120", Offset = "0xF5D120", VA = "0xF5D120")]
		public void Disconnect(bool toMenu = false)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xF5D26C", Offset = "0xF5D26C", VA = "0xF5D26C", Slot = "32")]
		public override void OnMasterClientSwitched(Player newMasterClient)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xF5D388", Offset = "0xF5D388", VA = "0xF5D388", Slot = "55")]
		public void OnOwnershipRequest(PhotonView targetView, Player requestingPlayer)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xF5D5B0", Offset = "0xF5D5B0", VA = "0xF5D5B0", Slot = "56")]
		public void OnOwnershipTransfered(PhotonView targetView, Player previousOwner)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xF5D714", Offset = "0xF5D714", VA = "0xF5D714", Slot = "57")]
		public void OnOwnershipTransferFailed(PhotonView targetView, Player senderOfFailedRequest)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xF5D754", Offset = "0xF5D754", VA = "0xF5D754", Slot = "35")]
		public override void OnCreatedRoom()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xF5D940", Offset = "0xF5D940", VA = "0xF5D940", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xF5DBDC", Offset = "0xF5DBDC", VA = "0xF5DBDC", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xF5DDD4", Offset = "0xF5DDD4", VA = "0xF5DDD4", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xF5DF44", Offset = "0xF5DF44", VA = "0xF5DF44", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xF5E288", Offset = "0xF5E288", VA = "0xF5E288", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xF5EC60", Offset = "0xF5EC60", VA = "0xF5EC60", Slot = "43")]
		public override void OnPlayerLeftRoom(Player otherPlayer)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xF5EE28", Offset = "0xF5EE28", VA = "0xF5EE28", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xF5F05C", Offset = "0xF5F05C", VA = "0xF5F05C")]
		public NetworkManager()
		{
		}
	}
}
namespace Koalabs.HD3DVR.Haptics
{
	[Token(Token = "0x20003AC")]
	public class Hd3dVrHapticsManager : AHapticsManager<Hd3dVrHapticsManager>
	{
		[Token(Token = "0x600176F")]
		[Address(RVA = "0xF603D0", Offset = "0xF603D0", VA = "0xF603D0")]
		public void SetHandHaptics(float _amplitude, float _time, bool _toRightHand)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xF5E1E4", Offset = "0xF5E1E4", VA = "0xF5E1E4")]
		public void SetBothHandHaptics(float _amplitude, float _time)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xF60480", Offset = "0xF60480", VA = "0xF60480", Slot = "5")]
		protected override IReadOnlyList<IDevice> InitializeDevices()
		{
			return null;
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xF60594", Offset = "0xF60594", VA = "0xF60594")]
		public Hd3dVrHapticsManager()
		{
		}
	}
}
namespace Koalabs.HD3DVR.Graphics
{
	[Token(Token = "0x20003AD")]
	public class Arrow
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int shaderColorID;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MeshFilter filter;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly MeshRenderer renderer;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float width;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float offset;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Mesh mesh;

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xF605DC", Offset = "0xF605DC", VA = "0xF605DC")]
		public Arrow(Material _material)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xF60768", Offset = "0xF60768", VA = "0xF60768")]
		public void SetParameters(float _width)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xF60770", Offset = "0xF60770", VA = "0xF60770")]
		public void SetParameters(float _width, float? _offset)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xF607EC", Offset = "0xF607EC", VA = "0xF607EC")]
		public void SetColor(Color _color)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xF608A0", Offset = "0xF608A0", VA = "0xF608A0")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xF60908", Offset = "0xF60908", VA = "0xF60908")]
		public void SetCoordinates(Vector3 _start, Vector3 _end, Vector3 _upVector)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xF60748", Offset = "0xF60748", VA = "0xF60748")]
		public void SetActive(bool _active)
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class ObjectArrows : MonoBehaviour
	{
		[Token(Token = "0x20003AF")]
		[Flags]
		private enum Side
		{
			[Token(Token = "0x40014FC")]
			Front = 0,
			[Token(Token = "0x40014FD")]
			Back = 1,
			[Token(Token = "0x40014FE")]
			Bottom = 0,
			[Token(Token = "0x40014FF")]
			Top = 2,
			[Token(Token = "0x4001500")]
			FrontMask = 1,
			[Token(Token = "0x4001501")]
			TopMask = 2
		}

		[Token(Token = "0x20003B0")]
		private enum WidthLengthType
		{
			[Token(Token = "0x4001503")]
			Horizontal,
			[Token(Token = "0x4001504")]
			Vertical
		}

		[Token(Token = "0x20003B1")]
		private enum HeightType
		{
			[Token(Token = "0x4001506")]
			Billboard,
			[Token(Token = "0x4001507")]
			Fixed
		}

		[Token(Token = "0x20003B2")]
		private enum ObjectType
		{
			[Token(Token = "0x4001509")]
			Simple,
			[Token(Token = "0x400150A")]
			Carpet,
			[Token(Token = "0x400150B")]
			Wall,
			[Token(Token = "0x400150C")]
			Ceiling,
			[Token(Token = "0x400150D")]
			Door
		}

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject textPrefab;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material arrowMat;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float arrowWidth;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float margin;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextArrow widthArrow;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextArrow lengthArrow;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextArrow heightArrow;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isForwardFacingCamera;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool isRightFacingCamera;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool isForwardFacingRight;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		private bool isRightFacingRight;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Bounds objectBounds;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int colorIndex;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, Color> colorTranslation;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OutlineColors outlineColors;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform currentSelectionTransform;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ObjectType selectionType;

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xF60E58", Offset = "0xF60E58", VA = "0xF60E58")]
		private void Awake()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xF61300", Offset = "0xF61300", VA = "0xF61300")]
		private void Start()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xF61454", Offset = "0xF61454", VA = "0xF61454")]
		private void Update()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xF615C0", Offset = "0xF615C0", VA = "0xF615C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xF6177C", Offset = "0xF6177C", VA = "0xF6177C")]
		private void OnObjectSelected(GameObject _obj, bool _isNew)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xF61D60", Offset = "0xF61D60", VA = "0xF61D60")]
		private void OnObjectUnselected(GameObject _obj)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xF61154", Offset = "0xF61154", VA = "0xF61154")]
		private void RefreshArrowsStatus()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xF614C8", Offset = "0xF614C8", VA = "0xF614C8")]
		private void DrawArrow()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xF62200", Offset = "0xF62200", VA = "0xF62200")]
		private void OnCheckValidity(bool _isValid)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xF6123C", Offset = "0xF6123C", VA = "0xF6123C")]
		private void RefreshColor()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xF61E18", Offset = "0xF61E18", VA = "0xF61E18")]
		private void SetFacingFlags(Transform _transform)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xF62090", Offset = "0xF62090", VA = "0xF62090")]
		private void DrawCarpetArrows(Transform _transform)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xF62044", Offset = "0xF62044", VA = "0xF62044")]
		private void DrawObjectArrows(Transform _transform)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xF620CC", Offset = "0xF620CC", VA = "0xF620CC")]
		private void DrawWallObjectArrows(Transform _transform)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xF62140", Offset = "0xF62140", VA = "0xF62140")]
		private void DrawCeilingObjectArrows(Transform _transform)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xF6218C", Offset = "0xF6218C", VA = "0xF6218C")]
		private void DrawDoorsArrows(Transform _transform)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xF6229C", Offset = "0xF6229C", VA = "0xF6229C")]
		private void MakeWidthArrow(Side _side, WidthLengthType _type, Transform _transform)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xF626D8", Offset = "0xF626D8", VA = "0xF626D8")]
		private void MakeLengthArrow(Side _side, WidthLengthType _type, Transform _transform)
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xF62B18", Offset = "0xF62B18", VA = "0xF62B18")]
		private void MakeHeightArrow(HeightType _type, Transform _transform)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xF62EDC", Offset = "0xF62EDC", VA = "0xF62EDC")]
		public ObjectArrows()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class TextArrow
	{
		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject textGO;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI textUI;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CanvasBillboard billboard;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Arrow arrow;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float textOffset;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastStart;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastEnd;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 arrowUp;

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xF76FAC", Offset = "0xF76FAC", VA = "0xF76FAC")]
		public TextArrow(GameObject _textPrefab, Material _arrowMaterial)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xF77208", Offset = "0xF77208", VA = "0xF77208")]
		public void SetTextParameters(float _textOffset)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xF77210", Offset = "0xF77210", VA = "0xF77210")]
		public void SetArrowParameters(float _arrowWidth)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xF7722C", Offset = "0xF7722C", VA = "0xF7722C")]
		public void SetArrowParameters(float _arrowWidth, float? _arrowOffset)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xF77248", Offset = "0xF77248", VA = "0xF77248")]
		public void SetColor(Color _color)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xF772B0", Offset = "0xF772B0", VA = "0xF772B0")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xF77320", Offset = "0xF77320", VA = "0xF77320")]
		public void SetCoordinates(Vector3 _start, Vector3 _end, Vector3 _textUp, Vector3 _arrowUp, string _text)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xF7746C", Offset = "0xF7746C", VA = "0xF7746C")]
		public void SetActive(bool _active)
		{
		}
	}
}
namespace Koalabs.HD3DVR.ArchitectRoom
{
	[Token(Token = "0x20003B4")]
	public class ScaleArrow : MonoBehaviour
	{
		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MaquetteController maquetteController;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject textPrefab;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextArrow textArrow;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isScaling;

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xF774B0", Offset = "0xF774B0", VA = "0xF774B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xF77574", Offset = "0xF77574", VA = "0xF77574")]
		private void Start()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xF77784", Offset = "0xF77784", VA = "0xF77784")]
		private void Update()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xF779B0", Offset = "0xF779B0", VA = "0xF779B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xF779DC", Offset = "0xF779DC", VA = "0xF779DC")]
		private void OnScaleStart()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xF77A78", Offset = "0xF77A78", VA = "0xF77A78")]
		private void OnScaleStop()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xF77A9C", Offset = "0xF77A9C", VA = "0xF77A9C")]
		public ScaleArrow()
		{
		}
	}
}
namespace ArchitectRoom
{
	[Token(Token = "0x20003B5")]
	public class ArchiMaquetteWrapper : MonoBehaviour
	{
		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject socle;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject sceneRoot;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Bounds socleBounds;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 destScenePosition;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 destSceneScale;

		[Token(Token = "0x1700028C")]
		public Vector3 DestSceneScale
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0xF77AA4", Offset = "0xF77AA4", VA = "0xF77AA4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600179F")]
			[Address(RVA = "0xF77AB0", Offset = "0xF77AB0", VA = "0xF77AB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public Vector3 DestScenePosition
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0xF77ABC", Offset = "0xF77ABC", VA = "0xF77ABC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0xF77AC8", Offset = "0xF77AC8", VA = "0xF77AC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public GameObject SceneRoot
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0xF77AD4", Offset = "0xF77AD4", VA = "0xF77AD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0xF77ADC", Offset = "0xF77ADC", VA = "0xF77ADC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public Bounds SocleBounds
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xF77AE4", Offset = "0xF77AE4", VA = "0xF77AE4")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xF77AF8", Offset = "0xF77AF8", VA = "0xF77AF8")]
			set
			{
			}
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xF77B0C", Offset = "0xF77B0C", VA = "0xF77B0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xF77D40", Offset = "0xF77D40", VA = "0xF77D40")]
		public void WrapScene()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xF7895C", Offset = "0xF7895C", VA = "0xF7895C")]
		public void UnWrapScene()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xF78794", Offset = "0xF78794", VA = "0xF78794")]
		private void SetObjectsMaterials()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xF793BC", Offset = "0xF793BC", VA = "0xF793BC")]
		public static void SetObjectMaterials(GameObject obj)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xF79550", Offset = "0xF79550", VA = "0xF79550")]
		public ArchiMaquetteWrapper()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class ArchiRoom : MonoBehaviour
	{
		[Token(Token = "0x20003B7")]
		public enum EState
		{
			[Token(Token = "0x4001539")]
			InProject,
			[Token(Token = "0x400153A")]
			InArchi,
			[Token(Token = "0x400153B")]
			GettingToProject,
			[Token(Token = "0x400153C")]
			GettingToArchi
		}

		[Token(Token = "0x20003B8")]
		[CompilerGenerated]
		private sealed class <GoToArchiIfNoRoom>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArchiRoom <>4__this;

			[Token(Token = "0x17000298")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017D1")]
				[Address(RVA = "0xF7E3E8", Offset = "0xF7E3E8", VA = "0xF7E3E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000299")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017D3")]
				[Address(RVA = "0xF7E430", Offset = "0xF7E430", VA = "0xF7E430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017CE")]
			[Address(RVA = "0xF7A4CC", Offset = "0xF7A4CC", VA = "0xF7A4CC")]
			[DebuggerHidden]
			public <GoToArchiIfNoRoom>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xF7E1D8", Offset = "0xF7E1D8", VA = "0xF7E1D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017D0")]
			[Address(RVA = "0xF7E1DC", Offset = "0xF7E1DC", VA = "0xF7E1DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017D2")]
			[Address(RVA = "0xF7E3F0", Offset = "0xF7E3F0", VA = "0xF7E3F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B9")]
		[CompilerGenerated]
		private sealed class <RecreateWallsIfConnected>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ArchiRoom <>4__this;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x1700029A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017D7")]
				[Address(RVA = "0xF7E858", Offset = "0xF7E858", VA = "0xF7E858", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017D9")]
				[Address(RVA = "0xF7E8A0", Offset = "0xF7E8A0", VA = "0xF7E8A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xF7AB6C", Offset = "0xF7AB6C", VA = "0xF7AB6C")]
			[DebuggerHidden]
			public <RecreateWallsIfConnected>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xF7E438", Offset = "0xF7E438", VA = "0xF7E438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xF7E43C", Offset = "0xF7E43C", VA = "0xF7E43C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017D8")]
			[Address(RVA = "0xF7E860", Offset = "0xF7E860", VA = "0xF7E860", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ArchiRoom instance;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject architectRoom;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArchiMaquetteWrapper maquette;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MaquetteController maquetteController;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Grid grid;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tools tools;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Colliders colliders;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Scale_preview ScaleP;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static EState state;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float minZoom;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float minRoomArea;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float minParallelWallDist;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool isTurning;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject rig;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float[] wallsHeights;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Vector3 lastRigPosInside;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int currentStorey;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<GameObject> objects;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static List<GameObject> doorsAndWindows;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static List<GameObject> objectsToUpdate;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject limitGo;

		[Token(Token = "0x17000290")]
		public float RoomAltitude
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xF79558", Offset = "0xF79558", VA = "0xF79558")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000291")]
		public static GameObject sceneRoot
		{
			[Token(Token = "0x60017AD")]
			[Address(RVA = "0xF79588", Offset = "0xF79588", VA = "0xF79588")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		public static ArchiMaquetteWrapper MaquetteWrapper
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xF795F4", Offset = "0xF795F4", VA = "0xF795F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000293")]
		public static MaquetteController MaquetteController
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xF788F8", Offset = "0xF788F8", VA = "0xF788F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		public float ScaleFromArchi
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xF79658", Offset = "0xF79658", VA = "0xF79658")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000295")]
		public Quaternion ProjectRotation
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0xF79780", Offset = "0xF79780", VA = "0xF79780")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000296")]
		public bool IsStoreyUpAuthorized
		{
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0xF79858", Offset = "0xF79858", VA = "0xF79858")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000297")]
		public bool IsStoreyDownAuthorized
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0xF79948", Offset = "0xF79948", VA = "0xF79948")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action OnEndFlyInside
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xF799A8", Offset = "0xF799A8", VA = "0xF799A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xF79A44", Offset = "0xF79A44", VA = "0xF79A44")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action OnEndFlyOutside
		{
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xF79AE0", Offset = "0xF79AE0", VA = "0xF79AE0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xF79B7C", Offset = "0xF79B7C", VA = "0xF79B7C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action OnStartFlyInside
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xF79C18", Offset = "0xF79C18", VA = "0xF79C18")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xF79CB4", Offset = "0xF79CB4", VA = "0xF79CB4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action OnStartFlyOutside
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0xF79D50", Offset = "0xF79D50", VA = "0xF79D50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xF79DEC", Offset = "0xF79DEC", VA = "0xF79DEC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xF79E88", Offset = "0xF79E88", VA = "0xF79E88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xF7A050", Offset = "0xF7A050", VA = "0xF7A050")]
		private void Start()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xF7A344", Offset = "0xF7A344", VA = "0xF7A344")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xF7A2D0", Offset = "0xF7A2D0", VA = "0xF7A2D0")]
		[IteratorStateMachine(typeof(<GoToArchiIfNoRoom>d__53))]
		private IEnumerator GoToArchiIfNoRoom()
		{
			return null;
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xF7A4F4", Offset = "0xF7A4F4", VA = "0xF7A4F4")]
		public void GoToArchiWhenUndo()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xF7AAF8", Offset = "0xF7AAF8", VA = "0xF7AAF8")]
		[IteratorStateMachine(typeof(<RecreateWallsIfConnected>d__55))]
		private IEnumerator RecreateWallsIfConnected()
		{
			return null;
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xF7AB94", Offset = "0xF7AB94", VA = "0xF7AB94")]
		public static void DestroyBadLights(GameObject obj)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xF7AE10", Offset = "0xF7AE10", VA = "0xF7AE10")]
		public void ToggleArchi()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xF7A75C", Offset = "0xF7A75C", VA = "0xF7A75C")]
		private void GoToArchi()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xF7D410", Offset = "0xF7D410", VA = "0xF7D410")]
		private void TeleportPlayerToArchi()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xF7B140", Offset = "0xF7B140", VA = "0xF7B140")]
		private void GoToProject()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xF7D8F8", Offset = "0xF7D8F8", VA = "0xF7D8F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xF7DCCC", Offset = "0xF7DCCC", VA = "0xF7DCCC")]
		public void StoreyUp()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xF7DEF8", Offset = "0xF7DEF8", VA = "0xF7DEF8")]
		public void StoreyDown()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xF7B778", Offset = "0xF7B778", VA = "0xF7B778")]
		public void ListObjects()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xF7DFD8", Offset = "0xF7DFD8", VA = "0xF7DFD8")]
		[ContextMenu("DebugArchiMode")]
		public void DebugArchiMode()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xF7E094", Offset = "0xF7E094", VA = "0xF7E094")]
		public ArchiRoom()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class Area : MonoBehaviour
	{
		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject Player;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Transform _Area;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Transform Nearest;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] ValidPos;

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xF7E8A8", Offset = "0xF7E8A8", VA = "0xF7E8A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xF7E94C", Offset = "0xF7E94C", VA = "0xF7E94C")]
		public bool isPlayerInside()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xF7EA60", Offset = "0xF7EA60", VA = "0xF7EA60")]
		public void GoToNearestPoint()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xF7ED70", Offset = "0xF7ED70", VA = "0xF7ED70")]
		public Area()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class Colliders : MonoBehaviour
	{
		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Tools tools;

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xF7ED78", Offset = "0xF7ED78", VA = "0xF7ED78")]
		private void Start()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xF7AF2C", Offset = "0xF7AF2C", VA = "0xF7AF2C")]
		public void EnableWallColliders(bool enable)
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xF7EDD0", Offset = "0xF7EDD0", VA = "0xF7EDD0")]
		public void EnableCeilingColliders(bool enable)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xF7C62C", Offset = "0xF7C62C", VA = "0xF7C62C")]
		public void UpdateCollidersFromVisibility()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xF7D754", Offset = "0xF7D754", VA = "0xF7D754")]
		public void EnableAllColliders()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xF7CDF8", Offset = "0xF7CDF8", VA = "0xF7CDF8")]
		public void ToggleCollision(bool isInArchi)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xF7F0DC", Offset = "0xF7F0DC", VA = "0xF7F0DC")]
		public void EnableExteriorDoorOrWindowCollider(GameObject obj, bool toggle)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xF7C2C0", Offset = "0xF7C2C0", VA = "0xF7C2C0")]
		public void ToggleColliders(bool toggle)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xF7F348", Offset = "0xF7F348", VA = "0xF7F348")]
		public void EnableStairCollider(GameObject obj, bool toggle)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xF7F408", Offset = "0xF7F408", VA = "0xF7F408")]
		public Colliders()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public static class Cursors
	{
		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject cursor;

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xF7A23C", Offset = "0xF7A23C", VA = "0xF7A23C")]
		public static void Start()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xF7F410", Offset = "0xF7F410", VA = "0xF7F410")]
		private static void CreateCursor(ref GameObject cursor)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xF7DB98", Offset = "0xF7DB98", VA = "0xF7DB98")]
		public static void Update()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xF7F618", Offset = "0xF7F618", VA = "0xF7F618")]
		private static bool IsCursorVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xF7F750", Offset = "0xF7F750", VA = "0xF7F750")]
		private static void UpdatePosition()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xF7F8F0", Offset = "0xF7F8F0", VA = "0xF7F8F0")]
		private static Vector3 GetCursorPos3D(Transform hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xF7FF58", Offset = "0xF7FF58", VA = "0xF7FF58")]
		public static Vector2 GetPointOnGridPlane(Vector3 origin, Transform hand)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x20003BD")]
	public class Grid : MonoBehaviour
	{
		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject grid;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float gridSize;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float baseStep;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float step;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float minStep;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ArchiRoom archi;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ArchiMaquetteWrapper maquette;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Scale_preview scalePreview;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material gridMaterial;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MaquetteController maquetteController;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaquetteSettings maquetteSettings;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] stepLimits;

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xF801B0", Offset = "0xF801B0", VA = "0xF801B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xF80358", Offset = "0xF80358", VA = "0xF80358")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xF803D4", Offset = "0xF803D4", VA = "0xF803D4")]
		private void SetDynamicStep()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xF8057C", Offset = "0xF8057C", VA = "0xF8057C")]
		private void SetShaderValues()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xF7D118", Offset = "0xF7D118", VA = "0xF7D118")]
		public void Create()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xF7DDAC", Offset = "0xF7DDAC", VA = "0xF7DDAC")]
		public static void UpdatePosition()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xF80704", Offset = "0xF80704", VA = "0xF80704")]
		public void UpdateSize()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xF80A60", Offset = "0xF80A60", VA = "0xF80A60")]
		public static Vector2 Pos3DToGridFloor(Vector3 pos3D, float step)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xF7FB50", Offset = "0xF7FB50", VA = "0xF7FB50")]
		public static Vector2 Pos3DToGridRound(Vector3 pos3D, float step)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xF7FD14", Offset = "0xF7FD14", VA = "0xF7FD14")]
		public static Vector3 GridToPos3D(Vector2 gridPos, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xF80B70", Offset = "0xF80B70", VA = "0xF80B70")]
		public static Vector2 RoundV2ToGrid(Vector2 pos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xF80BE0", Offset = "0xF80BE0", VA = "0xF80BE0")]
		public static Vector2 RoundV2ToGrid(Vector2 pos, float step)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xF80D9C", Offset = "0xF80D9C", VA = "0xF80D9C")]
		public static Vector2 FloorV2ToGrid(Vector2 pos, float step)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xF80EAC", Offset = "0xF80EAC", VA = "0xF80EAC")]
		public static Vector2 CeilV2ToGrid(Vector2 pos, float step)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xF80FBC", Offset = "0xF80FBC", VA = "0xF80FBC")]
		public static void RoundPolygonToGrid(Polygon poly)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xF810B8", Offset = "0xF810B8", VA = "0xF810B8")]
		public static void RoundMultiPolygonToGrid(MultiPolygon mp)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xF7FD2C", Offset = "0xF7FD2C", VA = "0xF7FD2C")]
		public static AABBf GetAABB()
		{
			return default(AABBf);
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xF81178", Offset = "0xF81178", VA = "0xF81178")]
		public static bool IsPointOnGrid(Vector2 point, float step)
		{
			return default(bool);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xF8123C", Offset = "0xF8123C", VA = "0xF8123C")]
		public Grid()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class MaquetteController : MonoBehaviour
	{
		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MaquetteSettings settings;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isMoving;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float startHandsDistance;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float startMaquetteScale;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 startHandDirection;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ArchiMaquetteWrapper MaquetteWrapper;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject PlateauMaquette;

		[Token(Token = "0x1700029C")]
		public static bool IsMaquetteManipulated
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0xF81504", Offset = "0xF81504", VA = "0xF81504")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029D")]
		public float CurrentScale
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0xF796E8", Offset = "0xF796E8", VA = "0xF796E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700029E")]
		public MaquetteSettings Settings
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xF8154C", Offset = "0xF8154C", VA = "0xF8154C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		private bool IsMovementAllowed
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0xF81554", Offset = "0xF81554", VA = "0xF81554")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A0")]
		private float HandDistance
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0xF815E0", Offset = "0xF815E0", VA = "0xF815E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A1")]
		private Vector3 HandDirection
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xF816A4", Offset = "0xF816A4", VA = "0xF816A4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x14000040")]
		public event Action ScaleStarted
		{
			[Token(Token = "0x6001803")]
			[Address(RVA = "0xF7764C", Offset = "0xF7764C", VA = "0xF7764C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001804")]
			[Address(RVA = "0xF81294", Offset = "0xF81294", VA = "0xF81294")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action ScaleStopped
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0xF776E8", Offset = "0xF776E8", VA = "0xF776E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001806")]
			[Address(RVA = "0xF81330", Offset = "0xF81330", VA = "0xF81330")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action ScaleChanged
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0xF813CC", Offset = "0xF813CC", VA = "0xF813CC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001808")]
			[Address(RVA = "0xF81468", Offset = "0xF81468", VA = "0xF81468")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xF817AC", Offset = "0xF817AC", VA = "0xF817AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xF81824", Offset = "0xF81824", VA = "0xF81824")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xF81954", Offset = "0xF81954", VA = "0xF81954")]
		private void GetStartValue()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xF819DC", Offset = "0xF819DC", VA = "0xF819DC")]
		private void ProcessTransformManipulation()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xF81EE8", Offset = "0xF81EE8", VA = "0xF81EE8")]
		public void ResetTransform()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xF81B1C", Offset = "0xF81B1C", VA = "0xF81B1C")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xF81DB4", Offset = "0xF81DB4", VA = "0xF81DB4")]
		private void Scale()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xF81A50", Offset = "0xF81A50", VA = "0xF81A50")]
		private void Translate()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xF81EEC", Offset = "0xF81EEC", VA = "0xF81EEC")]
		public MaquetteController()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class Scale_preview : MonoBehaviour
	{
		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpriteRenderer SpriteSP;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform TextSP;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro textUI;

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xF8218C", Offset = "0xF8218C", VA = "0xF8218C")]
		private void Start()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xF7CCC4", Offset = "0xF7CCC4", VA = "0xF7CCC4")]
		public void FollowSP()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xF806E0", Offset = "0xF806E0", VA = "0xF806E0")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xF821EC", Offset = "0xF821EC", VA = "0xF821EC")]
		public Scale_preview()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class PreviewWall
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 start;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 end;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isVisible;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _isValid;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject wall;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer renderer;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CollisionDetection colDetection;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material validMaterial;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material invalidMaterial;

		[Token(Token = "0x170002A2")]
		public bool IsValid
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0xF821F4", Offset = "0xF821F4", VA = "0xF821F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001822")]
			[Address(RVA = "0xF821FC", Offset = "0xF821FC", VA = "0xF821FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xF8223C", Offset = "0xF8223C", VA = "0xF8223C")]
		public PreviewWall()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xF825D4", Offset = "0xF825D4", VA = "0xF825D4")]
		public void SetMaterials(Material valid, Material invalid)
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xF82610", Offset = "0xF82610", VA = "0xF82610")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xF826B0", Offset = "0xF826B0", VA = "0xF826B0")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public abstract class ToolBase
	{
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isInAction;

		[Token(Token = "0x6001827")]
		public abstract void Start(Tools tools);

		[Token(Token = "0x6001828")]
		public abstract void Update();

		[Token(Token = "0x6001829")]
		public abstract void Cancel();

		[Token(Token = "0x600182A")]
		public abstract void Destroy();

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xF82A14", Offset = "0xF82A14", VA = "0xF82A14")]
		protected ToolBase()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class ToolCreateFloor : ToolBase
	{
		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private XRRayInteractor ray;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject hitObject;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject highlight;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MultiPolygon highlightMP;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room lastRoom;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Room> selectionRoom;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material highlightMat;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 startPoint;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 endPoint;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool active;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector2 lastPos2D1;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector2 lastPos2D2;

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xF82A1C", Offset = "0xF82A1C", VA = "0xF82A1C", Slot = "4")]
		public override void Start(Tools tools)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xF82B00", Offset = "0xF82B00", VA = "0xF82B00", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xF84B68", Offset = "0xF84B68", VA = "0xF84B68", Slot = "6")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xF84C08", Offset = "0xF84C08", VA = "0xF84C08", Slot = "7")]
		public override void Destroy()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xF831C8", Offset = "0xF831C8", VA = "0xF831C8")]
		private GameObject GetFloorMesh(Room room, Vector3 point1, Vector3 point2, Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xF84ACC", Offset = "0xF84ACC", VA = "0xF84ACC")]
		private void CreateFloorPart()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xF84C14", Offset = "0xF84C14", VA = "0xF84C14")]
		private void CreateFloorPart2(Room room, MultiPolygon cutPoly)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xF84E48", Offset = "0xF84E48", VA = "0xF84E48")]
		public ToolCreateFloor()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class ToolDestroyWall : ToolBase
	{
		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private XRRayInteractor ray;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject hitObject;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject highlight;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MultiPolygon highlightMP;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Wall lastWall;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Room lastRoom;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Room> selectionRoom;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 lastInter1;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 lastInter2;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material highlightMat;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 startPoint;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 endPoint;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Colliders colliders;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool active;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 lastPos;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 lastPos2D1;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 lastPos2D2;

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xF84F14", Offset = "0xF84F14", VA = "0xF84F14", Slot = "4")]
		public override void Start(Tools tools)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xF85060", Offset = "0xF85060", VA = "0xF85060", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xF88AD8", Offset = "0xF88AD8", VA = "0xF88AD8", Slot = "6")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xF88B78", Offset = "0xF88B78", VA = "0xF88B78", Slot = "7")]
		public override void Destroy()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xF868F8", Offset = "0xF868F8", VA = "0xF868F8")]
		private void DestroyWallPart(Wall cWall, Vector2 inter1, Vector2 inter2)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xF89830", Offset = "0xF89830", VA = "0xF89830")]
		private void RemovePointIfUnused(Room room, Vector2 point)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xF85DBC", Offset = "0xF85DBC", VA = "0xF85DBC")]
		private void GetIntersections(Wall wall, Vector3 point1, Vector3 point2, out Vector2 inter1, out Vector2 inter2)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xF864AC", Offset = "0xF864AC", VA = "0xF864AC")]
		private GameObject GetWallMesh(Wall wall, Vector2 inter1, Vector2 inter2, bool isOnLeft, Material mat)
		{
			return null;
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xF87070", Offset = "0xF87070", VA = "0xF87070")]
		private GameObject GetFloorMesh(Room room, Vector3 point1, Vector3 point2, Material mat)
		{
			return null;
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xF88B84", Offset = "0xF88B84", VA = "0xF88B84")]
		private bool IsThereStillAWallNotInCommon(Room room)
		{
			return default(bool);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xF88C98", Offset = "0xF88C98", VA = "0xF88C98")]
		private void DestroyRoom(Room room, bool destroyWithWall = false)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xF889DC", Offset = "0xF889DC", VA = "0xF889DC")]
		private void DestroyFloorPart()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xF89D10", Offset = "0xF89D10", VA = "0xF89D10")]
		private void DestroyFloorPart2(Room room, MultiPolygon cutPoly)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xF89FE8", Offset = "0xF89FE8", VA = "0xF89FE8")]
		public ToolDestroyWall()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public static class CommonToolDraw
	{
		[Token(Token = "0x20003C6")]
		public enum EHandSide
		{
			[Token(Token = "0x4001591")]
			eNone,
			[Token(Token = "0x4001592")]
			eLeft,
			[Token(Token = "0x4001593")]
			eRight
		}

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isFakingDraw;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float wallHeight;

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xF8A0F4", Offset = "0xF8A0F4", VA = "0xF8A0F4")]
		static CommonToolDraw()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class ToolDrawRoom : ToolBase
	{
		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 previewRoomStart;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 previewRoomEnd;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PreviewWall[] previewWalls;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isPreviewValid;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool needRecordRedo;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material roomValidMaterial;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material roomInvalidMaterial;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<SWallCollision>[] collisions;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WallArrow wallLengthWidth;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WallArrow wallLengthHeight;

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xF8A14C", Offset = "0xF8A14C", VA = "0xF8A14C", Slot = "4")]
		public override void Start(Tools tools)
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xF8A44C", Offset = "0xF8A44C", VA = "0xF8A44C", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xF8ACB0", Offset = "0xF8ACB0", VA = "0xF8ACB0", Slot = "6")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xF8AD90", Offset = "0xF8AD90", VA = "0xF8AD90", Slot = "7")]
		public override void Destroy()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xF8A5C8", Offset = "0xF8A5C8", VA = "0xF8A5C8")]
		private void StartDrawingPreview()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xF8A634", Offset = "0xF8A634", VA = "0xF8A634")]
		private void UpdateWhileDrawingPreview()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xF8A854", Offset = "0xF8A854", VA = "0xF8A854")]
		private void EndDrawingPreview()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xF8A55C", Offset = "0xF8A55C", VA = "0xF8A55C")]
		private void GenerateMeshesOnNextFrame()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xF8AE40", Offset = "0xF8AE40", VA = "0xF8AE40")]
		private void CheckPreviewValidity()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xF8BD00", Offset = "0xF8BD00", VA = "0xF8BD00")]
		private void FillWallCoordinates()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xF8BED0", Offset = "0xF8BED0", VA = "0xF8BED0")]
		public ToolDrawRoom()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class ToolDrawWall : ToolBase
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PreviewWall previewWall;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isPreviewValid;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool needRecordRedo;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SWallCollision> collisions;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material wallValidMaterial;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material wallInvalidMaterial;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WallArrow wallLength;

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xF8BEE0", Offset = "0xF8BEE0", VA = "0xF8BEE0", Slot = "4")]
		public override void Start(Tools tools)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xF8C08C", Offset = "0xF8C08C", VA = "0xF8C08C", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xF8C7AC", Offset = "0xF8C7AC", VA = "0xF8C7AC", Slot = "6")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xF8C838", Offset = "0xF8C838", VA = "0xF8C838", Slot = "7")]
		public override void Destroy()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xF8C1C8", Offset = "0xF8C1C8", VA = "0xF8C1C8")]
		private void StartDrawingPreview()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xF8C224", Offset = "0xF8C224", VA = "0xF8C224")]
		private void UpdateWhileDrawingPreview()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xF8C3C4", Offset = "0xF8C3C4", VA = "0xF8C3C4")]
		private void EndDrawingPreview()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xF8C15C", Offset = "0xF8C15C", VA = "0xF8C15C")]
		private void GenerateMeshesOnNextFrame()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xF8CD50", Offset = "0xF8CD50", VA = "0xF8CD50")]
		private void CheckPreviewValidity()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xF8C870", Offset = "0xF8C870", VA = "0xF8C870")]
		private Vector2 FindValidWallEnd()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xF8D2E0", Offset = "0xF8D2E0", VA = "0xF8D2E0")]
		public ToolDrawWall()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class Tools : MonoBehaviour
	{
		[Token(Token = "0x20003CA")]
		private enum EToolType
		{
			[Token(Token = "0x40015A9")]
			eNone,
			[Token(Token = "0x40015AA")]
			eStylo,
			[Token(Token = "0x40015AB")]
			eMaillet,
			[Token(Token = "0x40015AC")]
			eTruelle
		}

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ToolBase currentTool;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Colliders colliders;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject wallsLengthPrefab;

		[Token(Token = "0x170002A3")]
		public ToolBase CurrentTool
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xF8D2F0", Offset = "0xF8D2F0", VA = "0xF8D2F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xF8D2F8", Offset = "0xF8D2F8", VA = "0xF8D2F8")]
			set
			{
			}
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xF8D338", Offset = "0xF8D338", VA = "0xF8D338")]
		private void Start()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xF8D390", Offset = "0xF8D390", VA = "0xF8D390")]
		private void Update()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xF8D738", Offset = "0xF8D738", VA = "0xF8D738")]
		public bool ArchiToolInAction()
		{
			return default(bool);
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xF8D750", Offset = "0xF8D750", VA = "0xF8D750")]
		public void SetWallHeight(int height)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xF8D8D8", Offset = "0xF8D8D8", VA = "0xF8D8D8")]
		public void SetRoomHeight(int height)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xF8DA60", Offset = "0xF8DA60", VA = "0xF8DA60")]
		public void SetDestroyWall()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xF8DE24", Offset = "0xF8DE24", VA = "0xF8DE24")]
		public void SetCreateFloor()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xF8D478", Offset = "0xF8D478", VA = "0xF8D478")]
		public void CheckActiveTool()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xF8E148", Offset = "0xF8E148", VA = "0xF8E148")]
		public Tools()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public static class Utility
	{
		[Token(Token = "0x6001864")]
		[Address(RVA = "0xF8F150", Offset = "0xF8F150", VA = "0xF8F150")]
		public static bool IsInArchiRoom(this ArchiRoom.EState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xF8F15C", Offset = "0xF8F15C", VA = "0xF8F15C")]
		public static bool IsInProject(this ArchiRoom.EState state)
		{
			return default(bool);
		}
	}
}
namespace ArchitectRoom.ToolDraw
{
	[Token(Token = "0x20003CC")]
	public struct SWallCollision
	{
		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Wall wall;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool areColinear;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float interDist1;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float interDist2;
	}
	[Token(Token = "0x20003CD")]
	public struct SVerticalSegment
	{
		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float altitude;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool isFilled;
	}
	[Token(Token = "0x20003CE")]
	public static class Collisions
	{
		[Token(Token = "0x6001866")]
		[Address(RVA = "0xF8F168", Offset = "0xF8F168", VA = "0xF8F168")]
		public static List<SWallCollision> ListCollisions(Vector2 start, Vector2 end, List<Wall> walls)
		{
			return null;
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xF8F470", Offset = "0xF8F470", VA = "0xF8F470")]
		public static void FilterCollisions(List<SWallCollision> collisions, out List<SWallCollision> colCrossing, out List<SWallCollision> colAlong)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xF8F844", Offset = "0xF8F844", VA = "0xF8F844")]
		public static SortedList<float, Vector2> GetHorizontalIntersections(Vector2 start, Vector2 end, List<SWallCollision> colCrossing, List<SWallCollision> colAlong, bool splitWalls)
		{
			return null;
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xF8FB7C", Offset = "0xF8FB7C", VA = "0xF8FB7C")]
		private static void AddIntersection(Vector2 start, Vector2 end, ref SortedList<float, Vector2> intersections, float interDist)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xF90120", Offset = "0xF90120", VA = "0xF90120")]
		public static SortedList<float, SVerticalSegment> GetVerticalSegments(Vector2 start, Vector2 end, float segDist1, float segDist2, float altitude, float height, List<SWallCollision> colCrossing, List<SWallCollision> colAlong)
		{
			return null;
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xF90B84", Offset = "0xF90B84", VA = "0xF90B84")]
		private static void AddVerticalSegment(ref SortedList<float, SVerticalSegment> segList, float altitude, float height, float segAlt, bool forceAdd, bool isFilled = false)
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public static class Create
	{
		[Token(Token = "0x600186C")]
		[Address(RVA = "0xF90CF0", Offset = "0xF90CF0", VA = "0xF90CF0")]
		public static void CreateWallWithCollisions(Vector2 start, Vector2 end, float altitude, float height, List<SWallCollision> collisions, bool checkRooms, bool fromDrawRoom, bool fromDrawWall, bool mergeWalls = true)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xF91634", Offset = "0xF91634", VA = "0xF91634")]
		private static void CreateSimpleWall(Vector2 start, Vector2 end, float altitude, float height, bool checkRooms, float fullWallAltitude, float fullWallHeight, bool fromDrawRoom, bool fromDrawWall)
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public static class DetectRooms
	{
		[Token(Token = "0x20003D1")]
		public struct SWalkWall
		{
			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Wall wall;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float angle;
		}

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Vector3> walkSpeedUp;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Stack<Wall> tempPath;

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xF9233C", Offset = "0xF9233C", VA = "0xF9233C")]
		public static void Reset()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xF92988", Offset = "0xF92988", VA = "0xF92988")]
		public static bool Detect(Vector2 currentNode, float currentAngle, Vector2 endNode, ref Stack<Wall> path, ref float totalAngle, float altitude, float height, ref Dictionary<Vector2, List<SWalkWall>> wallsList)
		{
			return default(bool);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xF92428", Offset = "0xF92428", VA = "0xF92428")]
		public static Dictionary<Vector2, List<SWalkWall>> GetWallsList(float altitude, float height)
		{
			return null;
		}
	}
	[Token(Token = "0x20003D2")]
	public static class Fake
	{
		[Token(Token = "0x6001871")]
		[Address(RVA = "0xF95114", Offset = "0xF95114", VA = "0xF95114")]
		public static bool CreateWallWithCollisions(Vector2 start, Vector2 end, float altitude, float height, List<SWallCollision> collisions, bool checkRooms, bool fromDrawRoom, bool fromDrawWall, bool mergeWalls = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xF95E8C", Offset = "0xF95E8C", VA = "0xF95E8C")]
		private static List<SWallCollision> SplitCrossingWallsHorizontally(Vector2 start, Vector2 end, List<SWallCollision> colCrossing)
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xF96314", Offset = "0xF96314", VA = "0xF96314")]
		private static void CreateSimpleWall(Vector2 start, Vector2 end, float altitude, float height, bool checkRooms, float fullWallAltitude, float fullWallHeight, bool fromDrawRoom, bool fromDrawWall, ref List<Room> newRooms)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xF97BBC", Offset = "0xF97BBC", VA = "0xF97BBC")]
		private static bool ManageRoomsOutside(float altitude, float height, Room room, List<Room> roomsOutside, Room roomToSplit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xF97D28", Offset = "0xF97D28", VA = "0xF97D28")]
		private static void ManageRoomsInside(float altitude, float height, Room room, List<Room> roomsInside)
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public static class Input
	{
		[Token(Token = "0x6001876")]
		[Address(RVA = "0xF987F0", Offset = "0xF987F0", VA = "0xF987F0")]
		public static Vector2 GetCursorPos()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xF988CC", Offset = "0xF988CC", VA = "0xF988CC")]
		public static ManagerInputVR.PropButton GetControllerButton()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D4")]
	public static class Optim
	{
		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Room> roomsToCreate;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Room> roomsToUpdateNear;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Room> slabsToUpdate;

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xF98988", Offset = "0xF98988", VA = "0xF98988")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xF98AF0", Offset = "0xF98AF0", VA = "0xF98AF0")]
		public static void AddRoomToCreate(Room room)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xF98BF8", Offset = "0xF98BF8", VA = "0xF98BF8")]
		public static void RemoveRoomToCreate(Room room)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xF98CA8", Offset = "0xF98CA8", VA = "0xF98CA8")]
		public static void AddRoomToUpdateNear(Room room)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xF98DB0", Offset = "0xF98DB0", VA = "0xF98DB0")]
		public static void RemoveRoomToUpdateNear(Room room)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xF98E60", Offset = "0xF98E60", VA = "0xF98E60")]
		public static void AddSlabsToUpdate(Room room)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xF98F68", Offset = "0xF98F68", VA = "0xF98F68")]
		public static void RemoveSlabsToUpdate(Room room)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xF99018", Offset = "0xF99018", VA = "0xF99018")]
		public static void GenerateMeshesAfterDrawing()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xF99194", Offset = "0xF99194", VA = "0xF99194")]
		public static void InitNewRooms()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xF993F8", Offset = "0xF993F8", VA = "0xF993F8")]
		public static void UpdateNearRooms()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xF99E2C", Offset = "0xF99E2C", VA = "0xF99E2C")]
		public static void UpdateSlabs()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public static class RoomsModifications
	{
		[Token(Token = "0x20003D6")]
		public struct SRoomToFill
		{
			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MultiPolygon mp;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float height;
		}

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<SRoomToFill> roomsToFill;

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xF97E90", Offset = "0xF97E90", VA = "0xF97E90")]
		public static void AddRoomToFill(MultiPolygon mp, float h)
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xF9A09C", Offset = "0xF9A09C", VA = "0xF9A09C")]
		public static void FillRooms(float altitude)
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xF96AD8", Offset = "0xF96AD8", VA = "0xF96AD8")]
		public static Room FindRoomToSplit(Room newRoom1, Room newRoom2)
		{
			return null;
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xF9A9F0", Offset = "0xF9A9F0", VA = "0xF9A9F0")]
		public static bool ManageRoomsOutside(float altitude, float height, Room room, List<Room> roomsOutside, Room roomToSplit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xF9AC50", Offset = "0xF9AC50", VA = "0xF9AC50")]
		public static void ManageRoomOutside(float altitude, float height, Room room, Room outerRoom)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xF9B13C", Offset = "0xF9B13C", VA = "0xF9B13C")]
		public static void DestroyAutomaticLights(Room room)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xF9B5E0", Offset = "0xF9B5E0", VA = "0xF9B5E0")]
		public static void ManageRoomsInside(float altitude, float height, Room room, List<Room> roomsInside)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xF97F84", Offset = "0xF97F84", VA = "0xF97F84")]
		public static void CutRoom(Room outerRoom, Room innerRoom, bool update = true)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xF9B7E4", Offset = "0xF9B7E4", VA = "0xF9B7E4")]
		private static void UpdateRoomFloorAndCeiling(Room room)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xF9B838", Offset = "0xF9B838", VA = "0xF9B838")]
		public static void SplitRoom(Room roomToSplit, Room newRoom1, Room newRoom2)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xF9C3E4", Offset = "0xF9C3E4", VA = "0xF9C3E4")]
		private static MultiPolygon IntersectMPWithComponent(List<MultiPolygon> components, MultiPolygon mp)
		{
			return null;
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xF9C7C4", Offset = "0xF9C7C4", VA = "0xF9C7C4")]
		public static void RoomInsideRoom(Room bigRoom, Room smallRoom, bool newIsInside)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xF977AC", Offset = "0xF977AC", VA = "0xF977AC")]
		public static bool ListRoomsInsideOutside(Room newRoom, out List<Room> roomsInside, out List<Room> roomsOutside)
		{
			return default(bool);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xF94770", Offset = "0xF94770", VA = "0xF94770")]
		public static void CreateNewRoom(Room room, [Optional] Room oldRoom)
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public static class RulesDrawRoom
	{
		[Token(Token = "0x6001891")]
		[Address(RVA = "0xF93324", Offset = "0xF93324", VA = "0xF93324")]
		public static void Apply(ref Room newRoom1, ref Room newRoom2, ref bool canCreateRoom, float fullWallAltitude, float fullWallHeight)
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public static class RulesDrawWall
	{
		[Token(Token = "0x6001892")]
		[Address(RVA = "0xF93FA4", Offset = "0xF93FA4", VA = "0xF93FA4")]
		public static void Apply(ref Room newRoom1, ref Room newRoom2, ref bool canCreateRoom, float fullWallAltitude, float fullWallHeight)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xF96FD4", Offset = "0xF96FD4", VA = "0xF96FD4")]
		public static bool CountWalls(Room room, float newHeight, float altitude, out float oldheight)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003D9")]
	public static class RulesImport
	{
		[Token(Token = "0x6001894")]
		[Address(RVA = "0xF94248", Offset = "0xF94248", VA = "0xF94248")]
		public static void Apply(ref Room newRoom1, ref Room newRoom2, ref bool canCreateRoom, float fullWallHeight)
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public static class Validity
	{
		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2Int[] validSlopes;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float[] validAngles;

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xF9CDB4", Offset = "0xF9CDB4", VA = "0xF9CDB4")]
		public static void Init()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xF9A574", Offset = "0xF9A574", VA = "0xF9A574")]
		public static bool IsWallValid(Vector2 start, Vector2 end, float altitude, float height, CollisionDetection colDetection, ref List<SWallCollision> collisions, bool dontTestVoid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xF9CFC0", Offset = "0xF9CFC0", VA = "0xF9CFC0")]
		private static bool IsStartingOnVoid(Vector2 start, float altitude)
		{
			return default(bool);
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xF9CF0C", Offset = "0xF9CF0C", VA = "0xF9CF0C")]
		private static bool IsIntersectionValid(float dist, SWallCollision collision, Vector2 start, Vector2 end)
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xF9D2E8", Offset = "0xF9D2E8", VA = "0xF9D2E8")]
		private static bool IsPointOnGrid(Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xF9D35C", Offset = "0xF9D35C", VA = "0xF9D35C")]
		public static bool IsWallNearAParallelOne(Vector2 start, Vector2 end, List<Wall> walls)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DB")]
	public static class WallsModification
	{
		[Token(Token = "0x600189C")]
		[Address(RVA = "0xF8FC98", Offset = "0xF8FC98", VA = "0xF8FC98")]
		public static List<SWallCollision> SplitCrossingWallsHorizontally(Vector2 start, Vector2 end, List<SWallCollision> colCrossing)
		{
			return null;
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xF912FC", Offset = "0xF912FC", VA = "0xF912FC")]
		public static List<SWallCollision> SplitCrossingWallsVertically(List<SWallCollision> colCrossing, float altitude, float height)
		{
			return null;
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xF91D94", Offset = "0xF91D94", VA = "0xF91D94")]
		public static void MergeWalls()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xF91F3C", Offset = "0xF91F3C", VA = "0xF91F3C")]
		public static void CreateWallMesh(Wall wall)
		{
		}
	}
}
namespace JsonConverter
{
	[Token(Token = "0x20003DC")]
	public class Urls
	{
		[Token(Token = "0x170002A4")]
		[JsonProperty("original")]
		public string Original
		{
			[Token(Token = "0x60018A0")]
			[Address(RVA = "0xF9D844", Offset = "0xF9D844", VA = "0xF9D844")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xF9D84C", Offset = "0xF9D84C", VA = "0xF9D84C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		[JsonProperty("slider_big")]
		public string SliderBig
		{
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xF9D854", Offset = "0xF9D854", VA = "0xF9D854")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0xF9D85C", Offset = "0xF9D85C", VA = "0xF9D85C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		[JsonProperty("full_hd")]
		public string FullHd
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xF9D864", Offset = "0xF9D864", VA = "0xF9D864")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xF9D86C", Offset = "0xF9D86C", VA = "0xF9D86C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xF9D874", Offset = "0xF9D874", VA = "0xF9D874")]
		public Urls()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class Screenshot
	{
		[Token(Token = "0x170002A7")]
		[JsonProperty("id")]
		public int Id
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0xF9D87C", Offset = "0xF9D87C", VA = "0xF9D87C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xF9D884", Offset = "0xF9D884", VA = "0xF9D884")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		[JsonProperty("filepath")]
		public string Filepath
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0xF9D88C", Offset = "0xF9D88C", VA = "0xF9D88C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xF9D894", Offset = "0xF9D894", VA = "0xF9D894")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		[JsonProperty("guid")]
		public string Guid
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xF9D89C", Offset = "0xF9D89C", VA = "0xF9D89C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0xF9D8A4", Offset = "0xF9D8A4", VA = "0xF9D8A4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		[JsonProperty("urls")]
		public Urls Urls
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0xF9D8AC", Offset = "0xF9D8AC", VA = "0xF9D8AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xF9D8B4", Offset = "0xF9D8B4", VA = "0xF9D8B4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		[JsonProperty("filename")]
		public string Filename
		{
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0xF9D8BC", Offset = "0xF9D8BC", VA = "0xF9D8BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0xF9D8C4", Offset = "0xF9D8C4", VA = "0xF9D8C4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xF9D8CC", Offset = "0xF9D8CC", VA = "0xF9D8CC")]
		public Screenshot()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class ContentUrls
	{
		[Token(Token = "0x170002AC")]
		[JsonProperty("hd3d")]
		public string Hd3d
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0xF9D8D4", Offset = "0xF9D8D4", VA = "0xF9D8D4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B3")]
			[Address(RVA = "0xF9D8DC", Offset = "0xF9D8DC", VA = "0xF9D8DC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		[JsonProperty("hd3dvr")]
		public string Hd3dvr
		{
			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xF9D8E4", Offset = "0xF9D8E4", VA = "0xF9D8E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xF9D8EC", Offset = "0xF9D8EC", VA = "0xF9D8EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		[JsonProperty("hdvr")]
		public string Hdvr
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0xF9D8F4", Offset = "0xF9D8F4", VA = "0xF9D8F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0xF9D8FC", Offset = "0xF9D8FC", VA = "0xF9D8FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		[JsonProperty("shareUrl")]
		public string ShareUrl
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xF9D904", Offset = "0xF9D904", VA = "0xF9D904")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0xF9D90C", Offset = "0xF9D90C", VA = "0xF9D90C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		[JsonProperty("local_files_exists")]
		public LocalFilesExists LocalFilesExists
		{
			[Token(Token = "0x60018BA")]
			[Address(RVA = "0xF9D914", Offset = "0xF9D914", VA = "0xF9D914")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0xF9D91C", Offset = "0xF9D91C", VA = "0xF9D91C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xF9D924", Offset = "0xF9D924", VA = "0xF9D924")]
		public ContentUrls()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class Poster
	{
		[Token(Token = "0x170002B1")]
		[JsonProperty("id")]
		public int Id
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0xF9D92C", Offset = "0xF9D92C", VA = "0xF9D92C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xF9D934", Offset = "0xF9D934", VA = "0xF9D934")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		[JsonProperty("filepath")]
		public string Filepath
		{
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xF9D93C", Offset = "0xF9D93C", VA = "0xF9D93C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018C0")]
			[Address(RVA = "0xF9D944", Offset = "0xF9D944", VA = "0xF9D944")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		[JsonProperty("guid")]
		public string Guid
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xF9D94C", Offset = "0xF9D94C", VA = "0xF9D94C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xF9D954", Offset = "0xF9D954", VA = "0xF9D954")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		[JsonProperty("urls")]
		public Urls Urls
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xF9D95C", Offset = "0xF9D95C", VA = "0xF9D95C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xF9D964", Offset = "0xF9D964", VA = "0xF9D964")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xF9D96C", Offset = "0xF9D96C", VA = "0xF9D96C")]
		public Poster()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class Project
	{
		[Token(Token = "0x170002B5")]
		[JsonProperty("id")]
		public int Id
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xF9D974", Offset = "0xF9D974", VA = "0xF9D974")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0xF9D97C", Offset = "0xF9D97C", VA = "0xF9D97C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		[JsonProperty("title")]
		public string Title
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xF9D984", Offset = "0xF9D984", VA = "0xF9D984")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0xF9D98C", Offset = "0xF9D98C", VA = "0xF9D98C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		[JsonProperty("surface")]
		public float Surface
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xF9D994", Offset = "0xF9D994", VA = "0xF9D994")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xF9D99C", Offset = "0xF9D99C", VA = "0xF9D99C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		[JsonProperty("rooms")]
		public int Rooms
		{
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xF9D9A4", Offset = "0xF9D9A4", VA = "0xF9D9A4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018CD")]
			[Address(RVA = "0xF9D9AC", Offset = "0xF9D9AC", VA = "0xF9D9AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		[JsonProperty("description")]
		public string Description
		{
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xF9D9B4", Offset = "0xF9D9B4", VA = "0xF9D9B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018CF")]
			[Address(RVA = "0xF9D9BC", Offset = "0xF9D9BC", VA = "0xF9D9BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		[JsonProperty("public")]
		public int Public
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xF9D9C4", Offset = "0xF9D9C4", VA = "0xF9D9C4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xF9D9CC", Offset = "0xF9D9CC", VA = "0xF9D9CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		[JsonProperty("publichd3dvr")]
		public int PublicVR
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xF9D9D4", Offset = "0xF9D9D4", VA = "0xF9D9D4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xF9D9DC", Offset = "0xF9D9DC", VA = "0xF9D9DC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		[JsonProperty("tags0")]
		public string Tags0
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xF9D9E4", Offset = "0xF9D9E4", VA = "0xF9D9E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xF9D9EC", Offset = "0xF9D9EC", VA = "0xF9D9EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		[JsonProperty("tagsOfficial")]
		public string TagsOfficial
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0xF9D9F4", Offset = "0xF9D9F4", VA = "0xF9D9F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xF9D9FC", Offset = "0xF9D9FC", VA = "0xF9D9FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		[JsonProperty("tags")]
		public List<string> Tags
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xF9DA04", Offset = "0xF9DA04", VA = "0xF9DA04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xF9DA0C", Offset = "0xF9DA0C", VA = "0xF9DA0C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		[JsonProperty("datepublication")]
		public DateTime Datepublication
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xF9DA14", Offset = "0xF9DA14", VA = "0xF9DA14")]
			[CompilerGenerated]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xF9DA1C", Offset = "0xF9DA1C", VA = "0xF9DA1C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		[JsonProperty("dateupdate")]
		public DateTime Dateupdate
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xF9DA24", Offset = "0xF9DA24", VA = "0xF9DA24")]
			[CompilerGenerated]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xF9DA2C", Offset = "0xF9DA2C", VA = "0xF9DA2C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		[JsonProperty("dateexportvr")]
		public DateTime Dateexportvr
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xF9DA34", Offset = "0xF9DA34", VA = "0xF9DA34")]
			[CompilerGenerated]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xF9DA3C", Offset = "0xF9DA3C", VA = "0xF9DA3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		[JsonProperty("hd3d")]
		public int Hd3d
		{
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0xF9DA44", Offset = "0xF9DA44", VA = "0xF9DA44")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xF9DA4C", Offset = "0xF9DA4C", VA = "0xF9DA4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		[JsonProperty("hd3dvr")]
		public int Hd3dvr
		{
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xF9DA54", Offset = "0xF9DA54", VA = "0xF9DA54")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xF9DA5C", Offset = "0xF9DA5C", VA = "0xF9DA5C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		[JsonProperty("favorited")]
		public int Favorited
		{
			[Token(Token = "0x60018E4")]
			[Address(RVA = "0xF9DA64", Offset = "0xF9DA64", VA = "0xF9DA64")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E5")]
			[Address(RVA = "0xF9DA6C", Offset = "0xF9DA6C", VA = "0xF9DA6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		[JsonProperty("downloads")]
		public int Downloads
		{
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xF9DA74", Offset = "0xF9DA74", VA = "0xF9DA74")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xF9DA7C", Offset = "0xF9DA7C", VA = "0xF9DA7C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		[JsonProperty("owner")]
		public User Owner
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0xF9DA84", Offset = "0xF9DA84", VA = "0xF9DA84")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xF9DA8C", Offset = "0xF9DA8C", VA = "0xF9DA8C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		[JsonProperty("creator")]
		public User Creator
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0xF9DA94", Offset = "0xF9DA94", VA = "0xF9DA94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0xF9DA9C", Offset = "0xF9DA9C", VA = "0xF9DA9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		[JsonProperty("valid")]
		public int Valid
		{
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0xF9DAA4", Offset = "0xF9DAA4", VA = "0xF9DAA4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0xF9DAAC", Offset = "0xF9DAAC", VA = "0xF9DAAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		[JsonProperty("vr")]
		public int Vr
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0xF9DAB4", Offset = "0xF9DAB4", VA = "0xF9DAB4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0xF9DABC", Offset = "0xF9DABC", VA = "0xF9DABC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		[JsonProperty("poster")]
		public Poster Poster
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0xF9DAC4", Offset = "0xF9DAC4", VA = "0xF9DAC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0xF9DACC", Offset = "0xF9DACC", VA = "0xF9DACC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		[JsonProperty("screenshots")]
		public List<Screenshot> Screenshots
		{
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0xF9DAD4", Offset = "0xF9DAD4", VA = "0xF9DAD4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0xF9DADC", Offset = "0xF9DADC", VA = "0xF9DADC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		[JsonProperty("liked")]
		public int Liked
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0xF9DAE4", Offset = "0xF9DAE4", VA = "0xF9DAE4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0xF9DAEC", Offset = "0xF9DAEC", VA = "0xF9DAEC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		[JsonProperty("popularity")]
		public float Popularity
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0xF9DAF4", Offset = "0xF9DAF4", VA = "0xF9DAF4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0xF9DAFC", Offset = "0xF9DAFC", VA = "0xF9DAFC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		[JsonProperty("contentUrls")]
		public ContentUrls ContentUrls
		{
			[Token(Token = "0x60018F8")]
			[Address(RVA = "0xF9DB04", Offset = "0xF9DB04", VA = "0xF9DB04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018F9")]
			[Address(RVA = "0xF9DB0C", Offset = "0xF9DB0C", VA = "0xF9DB0C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xF9DB14", Offset = "0xF9DB14", VA = "0xF9DB14")]
		public Project()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class Category
	{
		[Token(Token = "0x170002CF")]
		[JsonProperty("id")]
		public string Id
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0xF9DB1C", Offset = "0xF9DB1C", VA = "0xF9DB1C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0xF9DB24", Offset = "0xF9DB24", VA = "0xF9DB24")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		[JsonProperty("taxonomy")]
		public string Taxonomy
		{
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0xF9DB2C", Offset = "0xF9DB2C", VA = "0xF9DB2C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0xF9DB34", Offset = "0xF9DB34", VA = "0xF9DB34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		[JsonProperty("name")]
		public string Name
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xF9DB3C", Offset = "0xF9DB3C", VA = "0xF9DB3C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001900")]
			[Address(RVA = "0xF9DB44", Offset = "0xF9DB44", VA = "0xF9DB44")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		[JsonProperty("date")]
		public DateTime Date
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0xF9DB4C", Offset = "0xF9DB4C", VA = "0xF9DB4C")]
			[CompilerGenerated]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6001902")]
			[Address(RVA = "0xF9DB54", Offset = "0xF9DB54", VA = "0xF9DB54")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		[JsonProperty("valid")]
		public int Valid
		{
			[Token(Token = "0x6001903")]
			[Address(RVA = "0xF9DB5C", Offset = "0xF9DB5C", VA = "0xF9DB5C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001904")]
			[Address(RVA = "0xF9DB64", Offset = "0xF9DB64", VA = "0xF9DB64")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xF9DB6C", Offset = "0xF9DB6C", VA = "0xF9DB6C")]
		public Category()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class UserToken
	{
		[Token(Token = "0x170002D4")]
		public string Token
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0xF9DB74", Offset = "0xF9DB74", VA = "0xF9DB74")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001907")]
			[Address(RVA = "0xF9DB7C", Offset = "0xF9DB7C", VA = "0xF9DB7C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xF9DB84", Offset = "0xF9DB84", VA = "0xF9DB84")]
		public UserToken()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class UserLoginInfo
	{
		[Token(Token = "0x170002D5")]
		public string login
		{
			[Token(Token = "0x6001909")]
			[Address(RVA = "0xF9DB8C", Offset = "0xF9DB8C", VA = "0xF9DB8C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600190A")]
			[Address(RVA = "0xF9DB94", Offset = "0xF9DB94", VA = "0xF9DB94")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public string pass
		{
			[Token(Token = "0x600190B")]
			[Address(RVA = "0xF9DB9C", Offset = "0xF9DB9C", VA = "0xF9DB9C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600190C")]
			[Address(RVA = "0xF9DBA4", Offset = "0xF9DBA4", VA = "0xF9DBA4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xF9DBAC", Offset = "0xF9DBAC", VA = "0xF9DBAC")]
		public UserLoginInfo()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class FBCode
	{
		[Token(Token = "0x170002D7")]
		public string code
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xF9DBB4", Offset = "0xF9DBB4", VA = "0xF9DBB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600190F")]
			[Address(RVA = "0xF9DBBC", Offset = "0xF9DBBC", VA = "0xF9DBBC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public string user_code
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0xF9DBC4", Offset = "0xF9DBC4", VA = "0xF9DBC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001911")]
			[Address(RVA = "0xF9DBCC", Offset = "0xF9DBCC", VA = "0xF9DBCC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public string verification_uri
		{
			[Token(Token = "0x6001912")]
			[Address(RVA = "0xF9DBD4", Offset = "0xF9DBD4", VA = "0xF9DBD4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001913")]
			[Address(RVA = "0xF9DBDC", Offset = "0xF9DBDC", VA = "0xF9DBDC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public int expires_in
		{
			[Token(Token = "0x6001914")]
			[Address(RVA = "0xF9DBE4", Offset = "0xF9DBE4", VA = "0xF9DBE4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001915")]
			[Address(RVA = "0xF9DBEC", Offset = "0xF9DBEC", VA = "0xF9DBEC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public int interval
		{
			[Token(Token = "0x6001916")]
			[Address(RVA = "0xF9DBF4", Offset = "0xF9DBF4", VA = "0xF9DBF4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001917")]
			[Address(RVA = "0xF9DBFC", Offset = "0xF9DBFC", VA = "0xF9DBFC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xF9DC04", Offset = "0xF9DC04", VA = "0xF9DC04")]
		public FBCode()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class FBToken
	{
		[Token(Token = "0x170002DC")]
		public string access_token
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0xF9DC0C", Offset = "0xF9DC0C", VA = "0xF9DC0C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600191A")]
			[Address(RVA = "0xF9DC14", Offset = "0xF9DC14", VA = "0xF9DC14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xF9DC1C", Offset = "0xF9DC1C", VA = "0xF9DC1C")]
		public FBToken()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class FBInfo
	{
		[Token(Token = "0x170002DD")]
		public string id
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0xF9DC24", Offset = "0xF9DC24", VA = "0xF9DC24")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600191D")]
			[Address(RVA = "0xF9DC2C", Offset = "0xF9DC2C", VA = "0xF9DC2C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public string name
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0xF9DC34", Offset = "0xF9DC34", VA = "0xF9DC34")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600191F")]
			[Address(RVA = "0xF9DC3C", Offset = "0xF9DC3C", VA = "0xF9DC3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public string email
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0xF9DC44", Offset = "0xF9DC44", VA = "0xF9DC44")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001921")]
			[Address(RVA = "0xF9DC4C", Offset = "0xF9DC4C", VA = "0xF9DC4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public string location
		{
			[Token(Token = "0x6001922")]
			[Address(RVA = "0xF9DC54", Offset = "0xF9DC54", VA = "0xF9DC54")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001923")]
			[Address(RVA = "0xF9DC5C", Offset = "0xF9DC5C", VA = "0xF9DC5C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public string first_name
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0xF9DC64", Offset = "0xF9DC64", VA = "0xF9DC64")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001925")]
			[Address(RVA = "0xF9DC6C", Offset = "0xF9DC6C", VA = "0xF9DC6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public string last_name
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0xF9DC74", Offset = "0xF9DC74", VA = "0xF9DC74")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xF9DC7C", Offset = "0xF9DC7C", VA = "0xF9DC7C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public string birthday
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xF9DC84", Offset = "0xF9DC84", VA = "0xF9DC84")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xF9DC8C", Offset = "0xF9DC8C", VA = "0xF9DC8C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xF9DC94", Offset = "0xF9DC94", VA = "0xF9DC94")]
		public FBInfo()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class User
	{
		[Token(Token = "0x170002E4")]
		[JsonProperty("id")]
		public int Id
		{
			[Token(Token = "0x600192B")]
			[Address(RVA = "0xF9DC9C", Offset = "0xF9DC9C", VA = "0xF9DC9C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600192C")]
			[Address(RVA = "0xF9DCA4", Offset = "0xF9DCA4", VA = "0xF9DCA4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		[JsonProperty("login")]
		public string Login
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0xF9DCAC", Offset = "0xF9DCAC", VA = "0xF9DCAC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600192E")]
			[Address(RVA = "0xF9DCB4", Offset = "0xF9DCB4", VA = "0xF9DCB4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		[JsonProperty("gender")]
		public string Gender
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0xF9DCBC", Offset = "0xF9DCBC", VA = "0xF9DCBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xF9DCC4", Offset = "0xF9DCC4", VA = "0xF9DCC4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		[JsonProperty("country")]
		public string Country
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xF9DCCC", Offset = "0xF9DCCC", VA = "0xF9DCCC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xF9DCD4", Offset = "0xF9DCD4", VA = "0xF9DCD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		[JsonProperty("ddn")]
		public string Ddn
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xF9DCDC", Offset = "0xF9DCDC", VA = "0xF9DCDC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001934")]
			[Address(RVA = "0xF9DCE4", Offset = "0xF9DCE4", VA = "0xF9DCE4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		[JsonProperty("dateinscription")]
		public DateTime Dateinscription
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xF9DCEC", Offset = "0xF9DCEC", VA = "0xF9DCEC")]
			[CompilerGenerated]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6001936")]
			[Address(RVA = "0xF9DCF4", Offset = "0xF9DCF4", VA = "0xF9DCF4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		[JsonProperty("email")]
		public string Email
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xF9DCFC", Offset = "0xF9DCFC", VA = "0xF9DCFC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001938")]
			[Address(RVA = "0xF9DD04", Offset = "0xF9DD04", VA = "0xF9DD04")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		[JsonProperty("nom")]
		public string Nom
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xF9DD0C", Offset = "0xF9DD0C", VA = "0xF9DD0C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600193A")]
			[Address(RVA = "0xF9DD14", Offset = "0xF9DD14", VA = "0xF9DD14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		[JsonProperty("prenom")]
		public string Prenom
		{
			[Token(Token = "0x600193B")]
			[Address(RVA = "0xF9DD1C", Offset = "0xF9DD1C", VA = "0xF9DD1C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600193C")]
			[Address(RVA = "0xF9DD24", Offset = "0xF9DD24", VA = "0xF9DD24")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		[JsonProperty("avatar")]
		public string Avatar
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0xF9DD2C", Offset = "0xF9DD2C", VA = "0xF9DD2C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600193E")]
			[Address(RVA = "0xF9DD34", Offset = "0xF9DD34", VA = "0xF9DD34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		[JsonProperty("points")]
		public int Points
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0xF9DD3C", Offset = "0xF9DD3C", VA = "0xF9DD3C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001940")]
			[Address(RVA = "0xF9DD44", Offset = "0xF9DD44", VA = "0xF9DD44")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		[JsonProperty("level")]
		public int Level
		{
			[Token(Token = "0x6001941")]
			[Address(RVA = "0xF9DD4C", Offset = "0xF9DD4C", VA = "0xF9DD4C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001942")]
			[Address(RVA = "0xF9DD54", Offset = "0xF9DD54", VA = "0xF9DD54")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		[JsonProperty("rank")]
		public int Rank
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xF9DD5C", Offset = "0xF9DD5C", VA = "0xF9DD5C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001944")]
			[Address(RVA = "0xF9DD64", Offset = "0xF9DD64", VA = "0xF9DD64")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		[JsonProperty("actif")]
		public int Actif
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0xF9DD6C", Offset = "0xF9DD6C", VA = "0xF9DD6C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001946")]
			[Address(RVA = "0xF9DD74", Offset = "0xF9DD74", VA = "0xF9DD74")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		[JsonProperty("appLang")]
		public string AppLang
		{
			[Token(Token = "0x6001947")]
			[Address(RVA = "0xF9DD7C", Offset = "0xF9DD7C", VA = "0xF9DD7C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001948")]
			[Address(RVA = "0xF9DD84", Offset = "0xF9DD84", VA = "0xF9DD84")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		[JsonProperty("nbrprojects")]
		public int Nbrprojects
		{
			[Token(Token = "0x6001949")]
			[Address(RVA = "0xF9DD8C", Offset = "0xF9DD8C", VA = "0xF9DD8C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xF9DD94", Offset = "0xF9DD94", VA = "0xF9DD94")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		[JsonProperty("nbrprojectsIncPrivate")]
		public int NbrprojectsIncPrivate
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0xF9DD9C", Offset = "0xF9DD9C", VA = "0xF9DD9C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xF9DDA4", Offset = "0xF9DDA4", VA = "0xF9DDA4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		[JsonProperty("nbrVRprojects")]
		public int NbrVRprojects
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0xF9DDAC", Offset = "0xF9DDAC", VA = "0xF9DDAC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600194E")]
			[Address(RVA = "0xF9DDB4", Offset = "0xF9DDB4", VA = "0xF9DDB4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		[JsonProperty("nbrfavorites")]
		public int Nbrfavorites
		{
			[Token(Token = "0x600194F")]
			[Address(RVA = "0xF9DDBC", Offset = "0xF9DDBC", VA = "0xF9DDBC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001950")]
			[Address(RVA = "0xF9DDC4", Offset = "0xF9DDC4", VA = "0xF9DDC4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		[JsonProperty("thirdPartyAnonymous")]
		public bool ThirdPartyAnonymous
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0xF9DDCC", Offset = "0xF9DDCC", VA = "0xF9DDCC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001952")]
			[Address(RVA = "0xF9DDD4", Offset = "0xF9DDD4", VA = "0xF9DDD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		[JsonProperty("facebookId")]
		public string FacebookId
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0xF9DDE0", Offset = "0xF9DDE0", VA = "0xF9DDE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001954")]
			[Address(RVA = "0xF9DDE8", Offset = "0xF9DDE8", VA = "0xF9DDE8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		[JsonProperty("appleSigninSubject")]
		public string AppleSigninSubject
		{
			[Token(Token = "0x6001955")]
			[Address(RVA = "0xF9DDF0", Offset = "0xF9DDF0", VA = "0xF9DDF0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001956")]
			[Address(RVA = "0xF9DDF8", Offset = "0xF9DDF8", VA = "0xF9DDF8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		[JsonProperty("token")]
		public string Token
		{
			[Token(Token = "0x6001957")]
			[Address(RVA = "0xF9DE00", Offset = "0xF9DE00", VA = "0xF9DE00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001958")]
			[Address(RVA = "0xF9DE08", Offset = "0xF9DE08", VA = "0xF9DE08")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xF9DE10", Offset = "0xF9DE10", VA = "0xF9DE10")]
		public User()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class LogedUser
	{
		[Token(Token = "0x170002FB")]
		[JsonProperty("me")]
		public User Me
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0xF9DE18", Offset = "0xF9DE18", VA = "0xF9DE18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600195B")]
			[Address(RVA = "0xF9DE20", Offset = "0xF9DE20", VA = "0xF9DE20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xF9DE28", Offset = "0xF9DE28", VA = "0xF9DE28")]
		public LogedUser()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class LocalFilesExists
	{
		[Token(Token = "0x170002FC")]
		[JsonProperty("hd3d")]
		public bool Hd3d
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xF9DE30", Offset = "0xF9DE30", VA = "0xF9DE30")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xF9DE38", Offset = "0xF9DE38", VA = "0xF9DE38")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		[JsonProperty("hd3dvr")]
		public bool Hd3dvr
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0xF9DE44", Offset = "0xF9DE44", VA = "0xF9DE44")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001960")]
			[Address(RVA = "0xF9DE4C", Offset = "0xF9DE4C", VA = "0xF9DE4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		[JsonProperty("hdvr")]
		public bool Hdvr
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0xF9DE58", Offset = "0xF9DE58", VA = "0xF9DE58")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001962")]
			[Address(RVA = "0xF9DE60", Offset = "0xF9DE60", VA = "0xF9DE60")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xF9DE6C", Offset = "0xF9DE6C", VA = "0xF9DE6C")]
		public LocalFilesExists()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class Stairs
	{
		[Token(Token = "0x170002FF")]
		[JsonProperty("baseheight")]
		public string Baseheight
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0xF9DE74", Offset = "0xF9DE74", VA = "0xF9DE74")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001965")]
			[Address(RVA = "0xF9DE7C", Offset = "0xF9DE7C", VA = "0xF9DE7C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		[JsonProperty("width")]
		public string Width
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0xF9DE84", Offset = "0xF9DE84", VA = "0xF9DE84")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001967")]
			[Address(RVA = "0xF9DE8C", Offset = "0xF9DE8C", VA = "0xF9DE8C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		[JsonProperty("depth")]
		public string Depth
		{
			[Token(Token = "0x6001968")]
			[Address(RVA = "0xF9DE94", Offset = "0xF9DE94", VA = "0xF9DE94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001969")]
			[Address(RVA = "0xF9DE9C", Offset = "0xF9DE9C", VA = "0xF9DE9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		[JsonProperty("style")]
		public string Style
		{
			[Token(Token = "0x600196A")]
			[Address(RVA = "0xF9DEA4", Offset = "0xF9DEA4", VA = "0xF9DEA4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600196B")]
			[Address(RVA = "0xF9DEAC", Offset = "0xF9DEAC", VA = "0xF9DEAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		[JsonProperty("otherthing")]
		public string Otherthing
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0xF9DEB4", Offset = "0xF9DEB4", VA = "0xF9DEB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600196D")]
			[Address(RVA = "0xF9DEBC", Offset = "0xF9DEBC", VA = "0xF9DEBC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		[JsonProperty("sens")]
		public string Sens
		{
			[Token(Token = "0x600196E")]
			[Address(RVA = "0xF9DEC4", Offset = "0xF9DEC4", VA = "0xF9DEC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600196F")]
			[Address(RVA = "0xF9DECC", Offset = "0xF9DECC", VA = "0xF9DECC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xF9DED4", Offset = "0xF9DED4", VA = "0xF9DED4")]
		public Stairs()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class Banner
	{
		[Token(Token = "0x17000305")]
		[JsonProperty("id")]
		public int Id
		{
			[Token(Token = "0x6001971")]
			[Address(RVA = "0xF9DEDC", Offset = "0xF9DEDC", VA = "0xF9DEDC")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001972")]
			[Address(RVA = "0xF9DEE4", Offset = "0xF9DEE4", VA = "0xF9DEE4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000306")]
		[JsonProperty("filepath")]
		public string Filepath
		{
			[Token(Token = "0x6001973")]
			[Address(RVA = "0xF9DEEC", Offset = "0xF9DEEC", VA = "0xF9DEEC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001974")]
			[Address(RVA = "0xF9DEF4", Offset = "0xF9DEF4", VA = "0xF9DEF4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		[JsonProperty("filename")]
		public string Filename
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0xF9DEFC", Offset = "0xF9DEFC", VA = "0xF9DEFC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001976")]
			[Address(RVA = "0xF9DF04", Offset = "0xF9DF04", VA = "0xF9DF04")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		[JsonProperty("guid")]
		public string Guid
		{
			[Token(Token = "0x6001977")]
			[Address(RVA = "0xF9DF0C", Offset = "0xF9DF0C", VA = "0xF9DF0C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001978")]
			[Address(RVA = "0xF9DF14", Offset = "0xF9DF14", VA = "0xF9DF14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		[JsonProperty("urls")]
		public List<string> Urls
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0xF9DF1C", Offset = "0xF9DF1C", VA = "0xF9DF1C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600197A")]
			[Address(RVA = "0xF9DF24", Offset = "0xF9DF24", VA = "0xF9DF24")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xF9DF2C", Offset = "0xF9DF2C", VA = "0xF9DF2C")]
		public Banner()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class Stats
	{
		[Token(Token = "0x1700030A")]
		[JsonProperty("projects")]
		public int Projects
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0xF9DF34", Offset = "0xF9DF34", VA = "0xF9DF34")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600197D")]
			[Address(RVA = "0xF9DF3C", Offset = "0xF9DF3C", VA = "0xF9DF3C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		[JsonProperty("projects_incprivate")]
		public int ProjectsIncprivate
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0xF9DF44", Offset = "0xF9DF44", VA = "0xF9DF44")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600197F")]
			[Address(RVA = "0xF9DF4C", Offset = "0xF9DF4C", VA = "0xF9DF4C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		[JsonProperty("projects_vr")]
		public int ProjectsVr
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0xF9DF54", Offset = "0xF9DF54", VA = "0xF9DF54")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001981")]
			[Address(RVA = "0xF9DF5C", Offset = "0xF9DF5C", VA = "0xF9DF5C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		[JsonProperty("likes")]
		public int Likes
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0xF9DF64", Offset = "0xF9DF64", VA = "0xF9DF64")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001983")]
			[Address(RVA = "0xF9DF6C", Offset = "0xF9DF6C", VA = "0xF9DF6C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		[JsonProperty("favorites")]
		public int Favorites
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xF9DF74", Offset = "0xF9DF74", VA = "0xF9DF74")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001985")]
			[Address(RVA = "0xF9DF7C", Offset = "0xF9DF7C", VA = "0xF9DF7C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		[JsonProperty("followers")]
		public int Followers
		{
			[Token(Token = "0x6001986")]
			[Address(RVA = "0xF9DF84", Offset = "0xF9DF84", VA = "0xF9DF84")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001987")]
			[Address(RVA = "0xF9DF8C", Offset = "0xF9DF8C", VA = "0xF9DF8C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		[JsonProperty("likes_acquired")]
		public int LikesAcquired
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0xF9DF94", Offset = "0xF9DF94", VA = "0xF9DF94")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xF9DF9C", Offset = "0xF9DF9C", VA = "0xF9DF9C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000311")]
		[JsonProperty("most_liked_project")]
		public int MostLikedProject
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xF9DFA4", Offset = "0xF9DFA4", VA = "0xF9DFA4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xF9DFAC", Offset = "0xF9DFAC", VA = "0xF9DFAC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xF9DFB4", Offset = "0xF9DFB4", VA = "0xF9DFB4")]
		public Stats()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class Avatar
	{
		[Token(Token = "0x17000312")]
		[JsonProperty("id")]
		public string Id
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0xF9DFBC", Offset = "0xF9DFBC", VA = "0xF9DFBC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600198E")]
			[Address(RVA = "0xF9DFC4", Offset = "0xF9DFC4", VA = "0xF9DFC4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		[JsonProperty("serie")]
		public string Serie
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0xF9DFCC", Offset = "0xF9DFCC", VA = "0xF9DFCC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001990")]
			[Address(RVA = "0xF9DFD4", Offset = "0xF9DFD4", VA = "0xF9DFD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000314")]
		[JsonProperty("special")]
		public bool Special
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0xF9DFDC", Offset = "0xF9DFDC", VA = "0xF9DFDC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001992")]
			[Address(RVA = "0xF9DFE4", Offset = "0xF9DFE4", VA = "0xF9DFE4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000315")]
		[JsonProperty("trophies_percent")]
		public int TrophiesPercent
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0xF9DFF0", Offset = "0xF9DFF0", VA = "0xF9DFF0")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001994")]
			[Address(RVA = "0xF9DFF8", Offset = "0xF9DFF8", VA = "0xF9DFF8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		[JsonProperty("rank")]
		public int Rank
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0xF9E000", Offset = "0xF9E000", VA = "0xF9E000")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001996")]
			[Address(RVA = "0xF9E008", Offset = "0xF9E008", VA = "0xF9E008")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		[JsonProperty("available")]
		public bool Available
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0xF9E010", Offset = "0xF9E010", VA = "0xF9E010")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001998")]
			[Address(RVA = "0xF9E018", Offset = "0xF9E018", VA = "0xF9E018")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		[JsonProperty("path")]
		public string Path
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0xF9E024", Offset = "0xF9E024", VA = "0xF9E024")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600199A")]
			[Address(RVA = "0xF9E02C", Offset = "0xF9E02C", VA = "0xF9E02C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		[JsonProperty("url")]
		public string Url
		{
			[Token(Token = "0x600199B")]
			[Address(RVA = "0xF9E034", Offset = "0xF9E034", VA = "0xF9E034")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600199C")]
			[Address(RVA = "0xF9E03C", Offset = "0xF9E03C", VA = "0xF9E03C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xF9E044", Offset = "0xF9E044", VA = "0xF9E044")]
		public Avatar()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class LikeBookMark
	{
		[Token(Token = "0x1700031A")]
		[JsonProperty("idProject")]
		public string IdProject
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0xF9E04C", Offset = "0xF9E04C", VA = "0xF9E04C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600199F")]
			[Address(RVA = "0xF9E054", Offset = "0xF9E054", VA = "0xF9E054")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xF9E05C", Offset = "0xF9E05C", VA = "0xF9E05C")]
		public LikeBookMark()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class RegisterUser
	{
		[Token(Token = "0x1700031B")]
		[JsonProperty("login")]
		public string Login
		{
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0xF9E064", Offset = "0xF9E064", VA = "0xF9E064")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xF9E06C", Offset = "0xF9E06C", VA = "0xF9E06C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		[JsonProperty("gender")]
		public string Gender
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0xF9E074", Offset = "0xF9E074", VA = "0xF9E074")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0xF9E07C", Offset = "0xF9E07C", VA = "0xF9E07C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		[JsonProperty("country")]
		public string Country
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xF9E084", Offset = "0xF9E084", VA = "0xF9E084")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0xF9E08C", Offset = "0xF9E08C", VA = "0xF9E08C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		[JsonProperty("ddn")]
		public string Ddn
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xF9E094", Offset = "0xF9E094", VA = "0xF9E094")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0xF9E09C", Offset = "0xF9E09C", VA = "0xF9E09C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		[JsonProperty("email")]
		public string Email
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xF9E0A4", Offset = "0xF9E0A4", VA = "0xF9E0A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0xF9E0AC", Offset = "0xF9E0AC", VA = "0xF9E0AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		[JsonProperty("nom")]
		public string Nom
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xF9E0B4", Offset = "0xF9E0B4", VA = "0xF9E0B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0xF9E0BC", Offset = "0xF9E0BC", VA = "0xF9E0BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		[JsonProperty("prenom")]
		public string Prenom
		{
			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xF9E0C4", Offset = "0xF9E0C4", VA = "0xF9E0C4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xF9E0CC", Offset = "0xF9E0CC", VA = "0xF9E0CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000322")]
		[JsonProperty("avatar")]
		public string Avatar
		{
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xF9E0D4", Offset = "0xF9E0D4", VA = "0xF9E0D4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xF9E0DC", Offset = "0xF9E0DC", VA = "0xF9E0DC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		[JsonProperty("points")]
		public int Points
		{
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0xF9E0E4", Offset = "0xF9E0E4", VA = "0xF9E0E4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019B2")]
			[Address(RVA = "0xF9E0EC", Offset = "0xF9E0EC", VA = "0xF9E0EC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		[JsonProperty("pass")]
		public string Pass
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xF9E0F4", Offset = "0xF9E0F4", VA = "0xF9E0F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0xF9E0FC", Offset = "0xF9E0FC", VA = "0xF9E0FC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		[JsonProperty("passcrypte")]
		public string Passcrypte
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xF9E104", Offset = "0xF9E104", VA = "0xF9E104")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0xF9E10C", Offset = "0xF9E10C", VA = "0xF9E10C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		[JsonProperty("actif")]
		public int Actif
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0xF9E114", Offset = "0xF9E114", VA = "0xF9E114")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0xF9E11C", Offset = "0xF9E11C", VA = "0xF9E11C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		[JsonProperty("appLang")]
		public string AppLang
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xF9E124", Offset = "0xF9E124", VA = "0xF9E124")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xF9E12C", Offset = "0xF9E12C", VA = "0xF9E12C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		[JsonProperty("activity")]
		public int Activity
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0xF9E134", Offset = "0xF9E134", VA = "0xF9E134")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0xF9E13C", Offset = "0xF9E13C", VA = "0xF9E13C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		[JsonProperty("banner")]
		public string Banner
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0xF9E144", Offset = "0xF9E144", VA = "0xF9E144")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0xF9E14C", Offset = "0xF9E14C", VA = "0xF9E14C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		[JsonProperty("facebookId")]
		public string FacebookId
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0xF9E154", Offset = "0xF9E154", VA = "0xF9E154")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0xF9E15C", Offset = "0xF9E15C", VA = "0xF9E15C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		[JsonProperty("appleSigninSubject")]
		public string AppleSigninSubject
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xF9E164", Offset = "0xF9E164", VA = "0xF9E164")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0xF9E16C", Offset = "0xF9E16C", VA = "0xF9E16C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xF9E174", Offset = "0xF9E174", VA = "0xF9E174")]
		public RegisterUser()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class ResetPassword
	{
		[Token(Token = "0x1700032C")]
		[JsonProperty("email")]
		public string Email
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0xF9E298", Offset = "0xF9E298", VA = "0xF9E298")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xF9E2A0", Offset = "0xF9E2A0", VA = "0xF9E2A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xF9E2A8", Offset = "0xF9E2A8", VA = "0xF9E2A8")]
		public ResetPassword()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class ErrorMessage
	{
		[Token(Token = "0x1700032D")]
		[JsonProperty("error")]
		public bool Error
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xF9E300", Offset = "0xF9E300", VA = "0xF9E300")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xF9E308", Offset = "0xF9E308", VA = "0xF9E308")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		[JsonProperty("code")]
		public int Code
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xF9E314", Offset = "0xF9E314", VA = "0xF9E314")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xF9E31C", Offset = "0xF9E31C", VA = "0xF9E31C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		[JsonProperty("message")]
		public string Message
		{
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0xF9E324", Offset = "0xF9E324", VA = "0xF9E324")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0xF9E32C", Offset = "0xF9E32C", VA = "0xF9E32C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xF9E334", Offset = "0xF9E334", VA = "0xF9E334")]
		public ErrorMessage()
		{
		}
	}
}
namespace CustomData
{
	[Serializable]
	[Token(Token = "0x20003F2")]
	public sealed class AnchorData
	{
		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userID;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AnchorUIData> anchorUIDatas;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AnchorGOData> anchorGODatas;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<DrawingData> drawingDatas;

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xF9E394", Offset = "0xF9E394", VA = "0xF9E394")]
		public void RemoveGuid(string guid)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xF9E708", Offset = "0xF9E708", VA = "0xF9E708")]
		public AnchorData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F4")]
	public class AnchorDataBase
	{
		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Guid;

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xF9E7E8", Offset = "0xF9E7E8", VA = "0xF9E7E8")]
		public AnchorDataBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F5")]
	public sealed class AnchorDataWrapper
	{
		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string jsonData;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int dataType;

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xF9E7F0", Offset = "0xF9E7F0", VA = "0xF9E7F0")]
		public AnchorDataWrapper()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[SerializeField]
	public sealed class AnchorFinalData
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string useruid;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string anchordata;

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xF9E7F8", Offset = "0xF9E7F8", VA = "0xF9E7F8")]
		public AnchorFinalData(string anchordata, ulong userid)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F7")]
	public sealed class AnchorGOData : AnchorDataBase
	{
		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string objectId;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 scale;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int variationNumber;

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xF9E84C", Offset = "0xF9E84C", VA = "0xF9E84C")]
		public AnchorGOData(string objectId, string guid, Vector3 scale, int variationNumber)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F8")]
	public sealed class AnchorSaveData
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AnchorData> anchorDatas;

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xF9E8C8", Offset = "0xF9E8C8", VA = "0xF9E8C8")]
		public AnchorSaveData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F9")]
	public sealed class AnchorUIData : AnchorDataBase
	{
		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 scale;

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xF9E950", Offset = "0xF9E950", VA = "0xF9E950")]
		public AnchorUIData(string text, string guid, Vector3 scale)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FA")]
	public sealed class DrawingData : AnchorDataBase
	{
		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PointsData[] points;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 scale;

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xF9E9BC", Offset = "0xF9E9BC", VA = "0xF9E9BC")]
		public DrawingData(string guid, PointsData[] points, Vector3 scale)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FB")]
	public sealed class PointsData
	{
		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] points;

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xF9EA24", Offset = "0xF9EA24", VA = "0xF9EA24")]
		public PointsData(Vector3[] points)
		{
		}
	}
	[Token(Token = "0x20003FC")]
	[SerializeField]
	public class WebAnchorData
	{
		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WebAnchorDataUnit[] webAnchorDataUnits;

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xF9EA54", Offset = "0xF9EA54", VA = "0xF9EA54")]
		public WebAnchorData()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	[SerializeField]
	public class WebAnchorDataUnit
	{
		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string guid;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string useruid;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string anchordata;

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xF9EA5C", Offset = "0xF9EA5C", VA = "0xF9EA5C")]
		public WebAnchorDataUnit()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	[CreateAssetMenu(fileName = "AvatarsHolder", menuName = "AvatarsHolder", order = 1)]
	public class AvatarsHolder : ScriptableObject
	{
		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Sprite> Avatars;

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xF9EA64", Offset = "0xF9EA64", VA = "0xF9EA64")]
		public AvatarsHolder()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	[CreateAssetMenu(fileName = "LoadXMLData", menuName = "Load XML Data", order = 1)]
	public class LoadXMLData : ScriptableObject
	{
		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int projectID;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string projectname;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool wasKickedOutMulti;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string userName;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool wasTryingToJoinMultiCreatedByAccount;

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xF9EA6C", Offset = "0xF9EA6C", VA = "0xF9EA6C")]
		public LoadXMLData()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[CreateAssetMenu(fileName = "OutlineColors", menuName = "Outline Colors", order = 1)]
	public class OutlineColors : ScriptableObject
	{
		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("état normal")]
		public Color blue;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("défaut")]
		public Color red;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("rotation")]
		public Color yellow;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("scale")]
		public Color violet;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("poignee porte")]
		public Color green;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("selection multi autres")]
		public Color grey;

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xF9EA74", Offset = "0xF9EA74", VA = "0xF9EA74")]
		public OutlineColors()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000401")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000330")]
		public bool Highlight
		{
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xF9EAC4", Offset = "0xF9EAC4", VA = "0xF9EAC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xF9EACC", Offset = "0xF9EACC", VA = "0xF9EACC")]
			set
			{
			}
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xF9EAD8", Offset = "0xF9EAD8", VA = "0xF9EAD8")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xF9EC78", Offset = "0xF9EC78", VA = "0xF9EC78", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xF9EC94", Offset = "0xF9EC94", VA = "0xF9EC94", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xF9ECB0", Offset = "0xF9ECB0", VA = "0xF9ECB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xF9EB84", Offset = "0xF9EB84", VA = "0xF9EB84")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xF9EF64", Offset = "0xF9EF64", VA = "0xF9EF64")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000331")]
		public bool InRange
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0xF9EFDC", Offset = "0xF9EFDC", VA = "0xF9EFDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0xF9EFE4", Offset = "0xF9EFE4", VA = "0xF9EFE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000332")]
		public bool Targeted
		{
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0xF9F150", Offset = "0xF9F150", VA = "0xF9F150")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0xF9F158", Offset = "0xF9F158", VA = "0xF9F158")]
			set
			{
			}
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xF9F164", Offset = "0xF9F164", VA = "0xF9F164", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xF9EFF0", Offset = "0xF9EFF0", VA = "0xF9EFF0")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xF9F354", Offset = "0xF9F354", VA = "0xF9F354")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000403")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000333")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0xF9F35C", Offset = "0xF9F35C", VA = "0xF9F35C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0xF9F364", Offset = "0xF9F364", VA = "0xF9F364")]
			set
			{
			}
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xF9F380", Offset = "0xF9F380", VA = "0xF9F380", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xF9F58C", Offset = "0xF9F58C", VA = "0xF9F58C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xF9FE78", Offset = "0xF9FE78", VA = "0xF9FE78", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xFA03E0", Offset = "0xFA03E0", VA = "0xFA03E0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xFA07F0", Offset = "0xFA07F0", VA = "0xFA07F0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xF9F7B4", Offset = "0xF9F7B4", VA = "0xF9F7B4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xFA08DC", Offset = "0xFA08DC", VA = "0xFA08DC")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xFA0CDC", Offset = "0xFA0CDC", VA = "0xFA0CDC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xFA0CF4", Offset = "0xFA0CF4", VA = "0xFA0CF4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xFA0CFC", Offset = "0xFA0CFC", VA = "0xFA0CFC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000405")]
		public enum CrosshairState
		{
			[Token(Token = "0x400168C")]
			Disabled,
			[Token(Token = "0x400168D")]
			Enabled,
			[Token(Token = "0x400168E")]
			Targeted
		}

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xFA0D1C", Offset = "0xFA0D1C", VA = "0xFA0D1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xF9F2C8", Offset = "0xF9F2C8", VA = "0xF9F2C8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xFA0D84", Offset = "0xFA0D84", VA = "0xFA0D84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xFA0DBC", Offset = "0xFA0DBC", VA = "0xFA0DBC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xFA0DC4", Offset = "0xFA0DC4", VA = "0xFA0DC4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xFA0E70", Offset = "0xFA0E70", VA = "0xFA0E70")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xFA0F18", Offset = "0xFA0F18", VA = "0xFA0F18")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xFA0F20", Offset = "0xFA0F20", VA = "0xFA0F20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xFA100C", Offset = "0xFA100C", VA = "0xFA100C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xFA1018", Offset = "0xFA1018", VA = "0xFA1018")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xFA1024", Offset = "0xFA1024", VA = "0xFA1024")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xFA102C", Offset = "0xFA102C", VA = "0xFA102C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xFA107C", Offset = "0xFA107C", VA = "0xFA107C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xFA1454", Offset = "0xFA1454", VA = "0xFA1454")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xFA1540", Offset = "0xFA1540", VA = "0xFA1540")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xFA1080", Offset = "0xFA1080", VA = "0xFA1080")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xFA162C", Offset = "0xFA162C", VA = "0xFA162C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200040A")]
		public enum ContactTest
		{
			[Token(Token = "0x40016A5")]
			PerpenTest,
			[Token(Token = "0x40016A6")]
			BackwardsPress
		}

		[Token(Token = "0x4001696")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001697")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000334")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xFA1704", Offset = "0xFA1704", VA = "0xFA1704", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000335")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xFA170C", Offset = "0xFA170C", VA = "0xFA170C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000336")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xFA1718", Offset = "0xFA1718", VA = "0xFA1718")]
			[CompilerGenerated]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xFA1720", Offset = "0xFA1720", VA = "0xFA1720")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xFA1728", Offset = "0xFA1728", VA = "0xFA1728", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xFA1878", Offset = "0xFA1878", VA = "0xFA1878")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xFA1A80", Offset = "0xFA1A80", VA = "0xFA1A80", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xFA2044", Offset = "0xFA2044", VA = "0xFA2044")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xFA21AC", Offset = "0xFA21AC", VA = "0xFA21AC")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xFA1F68", Offset = "0xFA1F68", VA = "0xFA1F68")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xFA22B8", Offset = "0xFA22B8", VA = "0xFA22B8")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xFA23C4", Offset = "0xFA23C4", VA = "0xFA23C4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xFA2444", Offset = "0xFA2444", VA = "0xFA2444")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x17000337")]
		public Collider Collider
		{
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xFA2568", Offset = "0xFA2568", VA = "0xFA2568", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xFA2570", Offset = "0xFA2570", VA = "0xFA2570")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000338")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0xFA2578", Offset = "0xFA2578", VA = "0xFA2578", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0xFA2580", Offset = "0xFA2580", VA = "0xFA2580")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000339")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0xFA2588", Offset = "0xFA2588", VA = "0xFA2588", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xFA25D8", Offset = "0xFA25D8", VA = "0xFA25D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xFA266C", Offset = "0xFA266C", VA = "0xFA266C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700033A")]
		Collider Collider
		{
			[Token(Token = "0x6001A25")]
			get;
		}

		[Token(Token = "0x1700033B")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001A26")]
			get;
		}

		[Token(Token = "0x1700033C")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001A27")]
			get;
		}
	}
	[Token(Token = "0x200040D")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xFA19D4", Offset = "0xFA19D4", VA = "0xFA19D4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200040E")]
	public enum InteractionType
	{
		[Token(Token = "0x40016AF")]
		Enter,
		[Token(Token = "0x40016B0")]
		Stay,
		[Token(Token = "0x40016B1")]
		Exit
	}
	[Token(Token = "0x200040F")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000410")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40016C3")]
			Mesh,
			[Token(Token = "0x40016C4")]
			Skeleton,
			[Token(Token = "0x40016C5")]
			Both
		}

		[Token(Token = "0x2000411")]
		[CompilerGenerated]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000348")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A4A")]
				[Address(RVA = "0xFA3ACC", Offset = "0xFA3ACC", VA = "0xFA3ACC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000349")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A4C")]
				[Address(RVA = "0xFA3B14", Offset = "0xFA3B14", VA = "0xFA3B14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xFA30C4", Offset = "0xFA30C4", VA = "0xFA30C4")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xFA38AC", Offset = "0xFA38AC", VA = "0xFA38AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xFA38B0", Offset = "0xFA38B0", VA = "0xFA38B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xFA3AD4", Offset = "0xFA3AD4", VA = "0xFA3AD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016B2")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x1700033D")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xFA2674", Offset = "0xFA2674", VA = "0xFA2674")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xFA26A0", Offset = "0xFA26A0", VA = "0xFA26A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xFA2704", Offset = "0xFA2704", VA = "0xFA2704")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xFA2730", Offset = "0xFA2730", VA = "0xFA2730")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xFA2794", Offset = "0xFA2794", VA = "0xFA2794")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0xFA27C0", Offset = "0xFA27C0", VA = "0xFA27C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0xFA2824", Offset = "0xFA2824", VA = "0xFA2824")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0xFA2850", Offset = "0xFA2850", VA = "0xFA2850")]
			private set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0xFA28B4", Offset = "0xFA28B4", VA = "0xFA28B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0xFA28E0", Offset = "0xFA28E0", VA = "0xFA28E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xFA2944", Offset = "0xFA2944", VA = "0xFA2944")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xFA296C", Offset = "0xFA296C", VA = "0xFA296C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xFA29CC", Offset = "0xFA29CC", VA = "0xFA29CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xFA29F4", Offset = "0xFA29F4", VA = "0xFA29F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xFA2A54", Offset = "0xFA2A54", VA = "0xFA2A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A38")]
			[Address(RVA = "0xFA2A7C", Offset = "0xFA2A7C", VA = "0xFA2A7C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xFA2ADC", Offset = "0xFA2ADC", VA = "0xFA2ADC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xFA2B04", Offset = "0xFA2B04", VA = "0xFA2B04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000346")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xFA2B64", Offset = "0xFA2B64", VA = "0xFA2B64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0xFA2B8C", Offset = "0xFA2B8C", VA = "0xFA2B8C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000347")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xFA2BEC", Offset = "0xFA2BEC", VA = "0xFA2BEC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0xFA2C34", Offset = "0xFA2C34", VA = "0xFA2C34")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xFA2C8C", Offset = "0xFA2C8C", VA = "0xFA2C8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xFA3048", Offset = "0xFA3048", VA = "0xFA3048")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xFA2FD4", Offset = "0xFA2FD4", VA = "0xFA2FD4")]
		[IteratorStateMachine(typeof(<FindSkeletonVisualGameObjects>d__52))]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xFA30EC", Offset = "0xFA30EC", VA = "0xFA30EC")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xFA31B0", Offset = "0xFA31B0", VA = "0xFA31B0")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xFA3380", Offset = "0xFA3380", VA = "0xFA3380")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xFA35E4", Offset = "0xFA35E4", VA = "0xFA35E4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xFA3744", Offset = "0xFA3744", VA = "0xFA3744")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000413")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xFA4164", Offset = "0xFA4164", VA = "0xFA4164")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700034A")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xFA3B1C", Offset = "0xFA3B1C", VA = "0xFA3B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xFA3B24", Offset = "0xFA3B24", VA = "0xFA3B24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xFA3B2C", Offset = "0xFA3B2C", VA = "0xFA3B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xFA3B34", Offset = "0xFA3B34", VA = "0xFA3B34", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000043")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xFA3B3C", Offset = "0xFA3B3C", VA = "0xFA3B3C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xFA3BEC", Offset = "0xFA3BEC", VA = "0xFA3BEC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xFA3CB8", Offset = "0xFA3CB8", VA = "0xFA3CB8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xFA3D68", Offset = "0xFA3D68", VA = "0xFA3D68")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xFA3E34", Offset = "0xFA3E34", VA = "0xFA3E34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xFA3EE4", Offset = "0xFA3EE4", VA = "0xFA3EE4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xFA3C9C", Offset = "0xFA3C9C", VA = "0xFA3C9C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xFA3E18", Offset = "0xFA3E18", VA = "0xFA3E18", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xFA3F94", Offset = "0xFA3F94", VA = "0xFA3F94", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001A5A")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xFA1824", Offset = "0xFA1824", VA = "0xFA1824", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xFA4060", Offset = "0xFA4060", VA = "0xFA4060", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xFA2560", Offset = "0xFA2560", VA = "0xFA2560")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40016D1")]
		None,
		[Token(Token = "0x40016D2")]
		Proximity,
		[Token(Token = "0x40016D3")]
		Contact,
		[Token(Token = "0x40016D4")]
		Action
	}
	[Token(Token = "0x2000415")]
	public enum InteractableState
	{
		[Token(Token = "0x40016D6")]
		Default,
		[Token(Token = "0x40016D7")]
		ProximityState,
		[Token(Token = "0x40016D8")]
		ContactState,
		[Token(Token = "0x40016D9")]
		ActionState
	}
	[Token(Token = "0x2000416")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xFA20F4", Offset = "0xFA20F4", VA = "0xFA20F4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700034E")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xFA41AC", Offset = "0xFA41AC", VA = "0xFA41AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xFA3FB0", Offset = "0xFA3FB0", VA = "0xFA3FB0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xFA40B4", Offset = "0xFA40B4", VA = "0xFA40B4")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xFA4204", Offset = "0xFA4204", VA = "0xFA4204")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000419")]
		[CompilerGenerated]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40016E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40016E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40016E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40016E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40016E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700034F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A6D")]
				[Address(RVA = "0xFA49C4", Offset = "0xFA49C4", VA = "0xFA49C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000350")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A6F")]
				[Address(RVA = "0xFA4A0C", Offset = "0xFA4A0C", VA = "0xFA4A0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xFA43AC", Offset = "0xFA43AC", VA = "0xFA43AC")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xFA44E8", Offset = "0xFA44E8", VA = "0xFA44E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0xFA4504", Offset = "0xFA4504", VA = "0xFA4504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0xFA4974", Offset = "0xFA4974", VA = "0xFA4974")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0xFA49CC", Offset = "0xFA49CC", VA = "0xFA49CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xFA42A4", Offset = "0xFA42A4", VA = "0xFA42A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xFA4310", Offset = "0xFA4310", VA = "0xFA4310")]
		[IteratorStateMachine(typeof(<AttachToolsToHands>d__3))]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xFA43D4", Offset = "0xFA43D4", VA = "0xFA43D4")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xFA44E0", Offset = "0xFA44E0", VA = "0xFA44E0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000351")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001A70")]
			[Address(RVA = "0xFA4A14", Offset = "0xFA4A14", VA = "0xFA4A14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xFA4B70", Offset = "0xFA4B70", VA = "0xFA4B70")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xFA4C0C", Offset = "0xFA4C0C", VA = "0xFA4C0C")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xFA4CA8", Offset = "0xFA4CA8", VA = "0xFA4CA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xFA4F44", Offset = "0xFA4F44", VA = "0xFA4F44")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xFA4F80", Offset = "0xFA4F80", VA = "0xFA4F80")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xFA5260", Offset = "0xFA5260", VA = "0xFA5260")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xFA53D0", Offset = "0xFA53D0", VA = "0xFA53D0")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200041C")]
		[CompilerGenerated]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000356")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A89")]
				[Address(RVA = "0xFA75C0", Offset = "0xFA75C0", VA = "0xFA75C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000357")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A8B")]
				[Address(RVA = "0xFA7608", Offset = "0xFA7608", VA = "0xFA7608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A86")]
			[Address(RVA = "0xFA6674", Offset = "0xFA6674", VA = "0xFA6674")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001A87")]
			[Address(RVA = "0xFA7124", Offset = "0xFA7124", VA = "0xFA7124", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A88")]
			[Address(RVA = "0xFA7128", Offset = "0xFA7128", VA = "0xFA7128", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0xFA75C8", Offset = "0xFA75C8", VA = "0xFA75C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016F2")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000352")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001A78")]
			[Address(RVA = "0xFA64D8", Offset = "0xFA64D8", VA = "0xFA64D8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000353")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xFA64E0", Offset = "0xFA64E0", VA = "0xFA64E0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000354")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0xFA64E8", Offset = "0xFA64E8", VA = "0xFA64E8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000355")]
		public override bool EnableState
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xFA64F0", Offset = "0xFA64F0", VA = "0xFA64F0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xFA6518", Offset = "0xFA6518", VA = "0xFA6518", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xFA6548", Offset = "0xFA6548", VA = "0xFA6548", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xFA6600", Offset = "0xFA6600", VA = "0xFA6600")]
		[IteratorStateMachine(typeof(<AttachTriggerLogic>d__21))]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xFA669C", Offset = "0xFA669C", VA = "0xFA669C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xFA6924", Offset = "0xFA6924", VA = "0xFA6924")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xFA6AE0", Offset = "0xFA6AE0", VA = "0xFA6AE0")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xFA6BCC", Offset = "0xFA6BCC", VA = "0xFA6BCC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xFA6F60", Offset = "0xFA6F60", VA = "0xFA6F60", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xFA6F64", Offset = "0xFA6F64", VA = "0xFA6F64", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xFA6F68", Offset = "0xFA6F68", VA = "0xFA6F68")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x17000358")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0xFA7610", Offset = "0xFA7610", VA = "0xFA7610", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0xFA7618", Offset = "0xFA7618", VA = "0xFA7618")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public bool EnableState
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0xFA7620", Offset = "0xFA7620", VA = "0xFA7620", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0xFA763C", Offset = "0xFA763C", VA = "0xFA763C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0xFA765C", Offset = "0xFA765C", VA = "0xFA765C", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0xFA7664", Offset = "0xFA7664", VA = "0xFA7664", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public float SphereRadius
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0xFA7670", Offset = "0xFA7670", VA = "0xFA7670")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0xFA7678", Offset = "0xFA7678", VA = "0xFA7678")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xFA7680", Offset = "0xFA7680", VA = "0xFA7680")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xFA76BC", Offset = "0xFA76BC", VA = "0xFA76BC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xFA76C0", Offset = "0xFA76C0", VA = "0xFA76C0")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200041E")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001705")]
		None = 0,
		[Token(Token = "0x4001706")]
		Ray = 1,
		[Token(Token = "0x4001707")]
		Poke = 4,
		[Token(Token = "0x4001708")]
		All = -1
	}
	[Token(Token = "0x200041F")]
	public enum ToolInputState
	{
		[Token(Token = "0x400170A")]
		Inactive,
		[Token(Token = "0x400170B")]
		PrimaryInputDown,
		[Token(Token = "0x400170C")]
		PrimaryInputDownStay,
		[Token(Token = "0x400170D")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000420")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xFA6F0C", Offset = "0xFA6F0C", VA = "0xFA6F0C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000421")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x1700035C")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0xFA76C8", Offset = "0xFA76C8", VA = "0xFA76C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0xFA76D0", Offset = "0xFA76D0", VA = "0xFA76D0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0xFA76D8", Offset = "0xFA76D8", VA = "0xFA76D8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001A9B")]
			get;
		}

		[Token(Token = "0x1700035F")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001A9C")]
			get;
		}

		[Token(Token = "0x17000360")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001A9D")]
			get;
		}

		[Token(Token = "0x17000361")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0xFA76E4", Offset = "0xFA76E4", VA = "0xFA76E4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0xFA76F0", Offset = "0xFA76F0", VA = "0xFA76F0")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0xFA76FC", Offset = "0xFA76FC", VA = "0xFA76FC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xFA7708", Offset = "0xFA7708", VA = "0xFA7708")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001AA6")]
			get;
			[Token(Token = "0x6001AA7")]
			set;
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xFA7714", Offset = "0xFA7714", VA = "0xFA7714")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001AA3")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001AA4")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001AA5")]
		public abstract void DeFocus();

		[Token(Token = "0x6001AA8")]
		public abstract void Initialize();

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xFA771C", Offset = "0xFA771C", VA = "0xFA771C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xFA7764", Offset = "0xFA7764", VA = "0xFA7764")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xFA77B4", Offset = "0xFA77B4", VA = "0xFA77B4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xFA7A7C", Offset = "0xFA7A7C", VA = "0xFA7A7C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xFA6F7C", Offset = "0xFA6F7C", VA = "0xFA6F7C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000364")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001AAE")]
			get;
		}

		[Token(Token = "0x17000365")]
		bool EnableState
		{
			[Token(Token = "0x6001AB0")]
			get;
			[Token(Token = "0x6001AB1")]
			set;
		}

		[Token(Token = "0x17000366")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001AB2")]
			get;
			[Token(Token = "0x6001AB3")]
			set;
		}

		[Token(Token = "0x6001AAF")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000423")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000424")]
		private enum PinchState
		{
			[Token(Token = "0x400171E")]
			None,
			[Token(Token = "0x400171F")]
			PinchDown,
			[Token(Token = "0x4001720")]
			PinchStay,
			[Token(Token = "0x4001721")]
			PinchUp
		}

		[Token(Token = "0x400171A")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000367")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0xFA8318", Offset = "0xFA8318", VA = "0xFA8318")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000368")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xFA8394", Offset = "0xFA8394", VA = "0xFA8394")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000369")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0xFA8410", Offset = "0xFA8410", VA = "0xFA8410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xFA848C", Offset = "0xFA848C", VA = "0xFA848C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xFA84B4", Offset = "0xFA84B4", VA = "0xFA84B4")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001722")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001723")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001724")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001725")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001726")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0f, 45f)]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700036A")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xFA862C", Offset = "0xFA862C", VA = "0xFA862C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700036B")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0xFA8634", Offset = "0xFA8634", VA = "0xFA8634", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700036C")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0xFA8690", Offset = "0xFA8690", VA = "0xFA8690", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036D")]
		public override bool EnableState
		{
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0xFA8698", Offset = "0xFA8698", VA = "0xFA8698", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xFA86D8", Offset = "0xFA86D8", VA = "0xFA86D8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xFA8748", Offset = "0xFA8748", VA = "0xFA8748", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xFA87A4", Offset = "0xFA87A4", VA = "0xFA87A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xFA883C", Offset = "0xFA883C", VA = "0xFA883C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xFA8AE8", Offset = "0xFA8AE8", VA = "0xFA8AE8")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xFA8B64", Offset = "0xFA8B64", VA = "0xFA8B64", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xFA8F58", Offset = "0xFA8F58", VA = "0xFA8F58")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xFA90F4", Offset = "0xFA90F4", VA = "0xFA90F4")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xFA920C", Offset = "0xFA920C", VA = "0xFA920C")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xFA9530", Offset = "0xFA9530", VA = "0xFA9530")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xFA98AC", Offset = "0xFA98AC", VA = "0xFA98AC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xFA9984", Offset = "0xFA9984", VA = "0xFA9984", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xFA99B4", Offset = "0xFA99B4", VA = "0xFA99B4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001732")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001733")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x1700036E")]
		public bool EnableState
		{
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0xFA86BC", Offset = "0xFA86BC", VA = "0xFA86BC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0xFA86F4", Offset = "0xFA86F4", VA = "0xFA86F4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0xFA9AC8", Offset = "0xFA9AC8", VA = "0xFA9AC8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0xFA8AAC", Offset = "0xFA8AAC", VA = "0xFA8AAC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xFA9CF0", Offset = "0xFA9CF0", VA = "0xFA9CF0", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0xFA9CF8", Offset = "0xFA9CF8", VA = "0xFA9CF8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xFA9AD0", Offset = "0xFA9AD0", VA = "0xFA9AD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xFA98E4", Offset = "0xFA98E4", VA = "0xFA98E4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xFA9D00", Offset = "0xFA9D00", VA = "0xFA9D00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xFA9FAC", Offset = "0xFA9FAC", VA = "0xFA9FAC")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xFAA054", Offset = "0xFAA054", VA = "0xFAA054")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000371")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0xFAA0B8", Offset = "0xFAA0B8", VA = "0xFAA0B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0xFAA0C0", Offset = "0xFAA0C0", VA = "0xFAA0C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xFAA12C", Offset = "0xFAA12C", VA = "0xFAA12C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0xFAA134", Offset = "0xFAA134", VA = "0xFAA134")]
			set
			{
			}
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xFAA190", Offset = "0xFAA190", VA = "0xFAA190")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xFAA430", Offset = "0xFAA430", VA = "0xFAA430")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xFAA440", Offset = "0xFAA440", VA = "0xFAA440")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xFAA450", Offset = "0xFAA450", VA = "0xFAA450")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xFAA458", Offset = "0xFAA458", VA = "0xFAA458")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xFAA45C", Offset = "0xFAA45C", VA = "0xFAA45C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xFAA4E8", Offset = "0xFAA4E8", VA = "0xFAA4E8")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xFAA578", Offset = "0xFAA578", VA = "0xFAA578")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xFAA608", Offset = "0xFAA608", VA = "0xFAA608")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xFAA6B4", Offset = "0xFAA6B4", VA = "0xFAA6B4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xFAA790", Offset = "0xFAA790", VA = "0xFAA790")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xFAA7D4", Offset = "0xFAA7D4", VA = "0xFAA7D4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xFAA838", Offset = "0xFAA838", VA = "0xFAA838")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xFAA898", Offset = "0xFAA898", VA = "0xFAA898")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xFAA8A0", Offset = "0xFAA8A0", VA = "0xFAA8A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xFAA8A4", Offset = "0xFAA8A4", VA = "0xFAA8A4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xFAA868", Offset = "0xFAA868", VA = "0xFAA868")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xFAA8D8", Offset = "0xFAA8D8", VA = "0xFAA8D8")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200042B")]
		[CompilerGenerated]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400174D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400174E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000373")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF3")]
				[Address(RVA = "0xFAAF58", Offset = "0xFAAF58", VA = "0xFAAF58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000374")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF5")]
				[Address(RVA = "0xFAAFA0", Offset = "0xFAAFA0", VA = "0xFAAFA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xFAACD0", Offset = "0xFAACD0", VA = "0xFAACD0")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xFAAD98", Offset = "0xFAAD98", VA = "0xFAAD98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xFAAD9C", Offset = "0xFAAD9C", VA = "0xFAAD9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xFAAF60", Offset = "0xFAAF60", VA = "0xFAAF60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001743")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001744")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xFAA8E0", Offset = "0xFAA8E0", VA = "0xFAA8E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xFAA980", Offset = "0xFAA980", VA = "0xFAA980")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xFAAC90", Offset = "0xFAAC90", VA = "0xFAAC90")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xFAAC1C", Offset = "0xFAAC1C", VA = "0xFAAC1C")]
		[IteratorStateMachine(typeof(<LerpToHMD>d__13))]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xFAACF8", Offset = "0xFAACF8", VA = "0xFAACF8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200042D")]
		public enum SelectionState
		{
			[Token(Token = "0x400175A")]
			Off,
			[Token(Token = "0x400175B")]
			Selected,
			[Token(Token = "0x400175C")]
			Highlighted
		}

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000375")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xFAAFA8", Offset = "0xFAAFA8", VA = "0xFAAFA8")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xFAAFB0", Offset = "0xFAAFB0", VA = "0xFAAFB0")]
			set
			{
			}
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xFAB104", Offset = "0xFAB104", VA = "0xFAB104")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xFAB2C8", Offset = "0xFAB2C8", VA = "0xFAB2C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xFAB024", Offset = "0xFAB024", VA = "0xFAB024")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xFAB390", Offset = "0xFAB390", VA = "0xFAB390")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200042F")]
		public enum SegmentType
		{
			[Token(Token = "0x400176B")]
			Straight,
			[Token(Token = "0x400176C")]
			LeftTurn,
			[Token(Token = "0x400176D")]
			RightTurn,
			[Token(Token = "0x400176E")]
			Switch
		}

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001763")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001764")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000376")]
		public float StartDistance
		{
			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xFAB400", Offset = "0xFAB400", VA = "0xFAB400")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0xFAB408", Offset = "0xFAB408", VA = "0xFAB408")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public float GridSize
		{
			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0xFAB410", Offset = "0xFAB410", VA = "0xFAB410")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0xFAB418", Offset = "0xFAB418", VA = "0xFAB418")]
			private set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public int SubDivCount
		{
			[Token(Token = "0x6001B01")]
			[Address(RVA = "0xFAB420", Offset = "0xFAB420", VA = "0xFAB420")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B02")]
			[Address(RVA = "0xFAB428", Offset = "0xFAB428", VA = "0xFAB428")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public SegmentType Type
		{
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xFAB430", Offset = "0xFAB430", VA = "0xFAB430")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700037A")]
		public Pose EndPose
		{
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0xFAB438", Offset = "0xFAB438", VA = "0xFAB438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		public float Radius
		{
			[Token(Token = "0x6001B05")]
			[Address(RVA = "0xFAB80C", Offset = "0xFAB80C", VA = "0xFAB80C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037C")]
		public float SegmentLength
		{
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xFAB494", Offset = "0xFAB494", VA = "0xFAB494")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xFAB81C", Offset = "0xFAB81C", VA = "0xFAB81C")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xFAB834", Offset = "0xFAB834", VA = "0xFAB834")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xFAB4D4", Offset = "0xFAB4D4", VA = "0xFAB4D4")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xFAB838", Offset = "0xFAB838", VA = "0xFAB838")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xFAB83C", Offset = "0xFAB83C", VA = "0xFAB83C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xFAB898", Offset = "0xFAB898", VA = "0xFAB898")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xFAC1CC", Offset = "0xFAC1CC", VA = "0xFAC1CC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xFAC450", Offset = "0xFAC450", VA = "0xFAC450")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000431")]
		[CompilerGenerated]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700037D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B1D")]
				[Address(RVA = "0xFACF84", Offset = "0xFACF84", VA = "0xFACF84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B1F")]
				[Address(RVA = "0xFACFCC", Offset = "0xFACFCC", VA = "0xFACFCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0xFACDB8", Offset = "0xFACDB8", VA = "0xFACDB8")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xFACE08", Offset = "0xFACE08", VA = "0xFACE08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0xFACE0C", Offset = "0xFACE0C", VA = "0xFACE0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0xFACF8C", Offset = "0xFACF8C", VA = "0xFACF8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400176F")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001770")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xFAC5B0", Offset = "0xFAC5B0", VA = "0xFAC5B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xFAC668", Offset = "0xFAC668", VA = "0xFAC668")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xFAC6F8", Offset = "0xFAC6F8", VA = "0xFAC6F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xFAC848", Offset = "0xFAC848", VA = "0xFAC848")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xFAC9DC", Offset = "0xFAC9DC", VA = "0xFAC9DC")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xFACAEC", Offset = "0xFACAEC", VA = "0xFACAEC")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xFACCF0", Offset = "0xFACCF0", VA = "0xFACCF0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xFACBFC", Offset = "0xFACBFC", VA = "0xFACBFC")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xFACC10", Offset = "0xFACC10", VA = "0xFACC10")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xFACD44", Offset = "0xFACD44", VA = "0xFACD44")]
		[IteratorStateMachine(typeof(<ResetPosition>d__26))]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xFACDE0", Offset = "0xFACDE0", VA = "0xFACDE0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700037F")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xFACFD4", Offset = "0xFACFD4", VA = "0xFACFD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xFACFE4", Offset = "0xFACFE4", VA = "0xFACFE4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xFACFEC", Offset = "0xFACFEC", VA = "0xFACFEC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xFAD31C", Offset = "0xFAD31C", VA = "0xFAD31C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001788")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001789")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000380")]
		public float Distance
		{
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0xFAD418", Offset = "0xFAD418", VA = "0xFAD418")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0xFAD420", Offset = "0xFAD420", VA = "0xFAD420")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000381")]
		public float Scale
		{
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0xFAD428", Offset = "0xFAD428", VA = "0xFAD428")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B27")]
			[Address(RVA = "0xFAD430", Offset = "0xFAD430", VA = "0xFAD430")]
			set
			{
			}
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xFACFE8", Offset = "0xFACFE8", VA = "0xFACFE8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xFAD438", Offset = "0xFAD438", VA = "0xFAD438")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xFAD028", Offset = "0xFAD028", VA = "0xFAD028")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xFAD238", Offset = "0xFAD238", VA = "0xFAD238")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001B2C")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xFAD37C", Offset = "0xFAD37C", VA = "0xFAD37C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000435")]
		[CompilerGenerated]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400179C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400179D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400179E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40017A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40017A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40017A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40017A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40017A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40017A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000382")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B3B")]
				[Address(RVA = "0xFADD08", Offset = "0xFADD08", VA = "0xFADD08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000383")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B3D")]
				[Address(RVA = "0xFADD50", Offset = "0xFADD50", VA = "0xFADD50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xFAD97C", Offset = "0xFAD97C", VA = "0xFAD97C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xFADAF0", Offset = "0xFADAF0", VA = "0xFADAF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0xFADAF4", Offset = "0xFADAF4", VA = "0xFADAF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0xFADD10", Offset = "0xFADD10", VA = "0xFADD10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xFAD5A8", Offset = "0xFAD5A8", VA = "0xFAD5A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xFAD604", Offset = "0xFAD604", VA = "0xFAD604")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xFAD6DC", Offset = "0xFAD6DC", VA = "0xFAD6DC")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xFAD830", Offset = "0xFAD830", VA = "0xFAD830")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xFAD738", Offset = "0xFAD738", VA = "0xFAD738")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xFAD8F8", Offset = "0xFAD8F8", VA = "0xFAD8F8")]
		[IteratorStateMachine(typeof(<AnimateCrossing>d__15))]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xFAD9A4", Offset = "0xFAD9A4", VA = "0xFAD9A4")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xFADA3C", Offset = "0xFADA3C", VA = "0xFADA3C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xFADA98", Offset = "0xFADA98", VA = "0xFADA98")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000437")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40017C6")]
			Start,
			[Token(Token = "0x40017C7")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40017C8")]
			Stop
		}

		[Token(Token = "0x2000438")]
		[CompilerGenerated]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40017CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40017CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40017CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40017CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40017D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000384")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B50")]
				[Address(RVA = "0xFAE5E8", Offset = "0xFAE5E8", VA = "0xFAE5E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000385")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B52")]
				[Address(RVA = "0xFAE630", Offset = "0xFAE630", VA = "0xFAE630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0xFADFF8", Offset = "0xFADFF8", VA = "0xFADFF8")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0xFAE3C0", Offset = "0xFAE3C0", VA = "0xFAE3C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0xFAE3C4", Offset = "0xFAE3C4", VA = "0xFAE3C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B51")]
			[Address(RVA = "0xFAE5F0", Offset = "0xFAE5F0", VA = "0xFAE5F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017A8")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40017A9")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40017AA")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40017AB")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0.2f, 2.7f)]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xFADD58", Offset = "0xFADD58", VA = "0xFADD58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xFADEB4", Offset = "0xFADEB4", VA = "0xFADEB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xFADEC0", Offset = "0xFADEC0", VA = "0xFADEC0", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xFAA48C", Offset = "0xFAA48C", VA = "0xFAA48C")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xFADE2C", Offset = "0xFADE2C", VA = "0xFADE2C")]
		[IteratorStateMachine(typeof(<StartStopTrain>d__34))]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xFAE020", Offset = "0xFAE020", VA = "0xFAE020")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xFADF98", Offset = "0xFADF98", VA = "0xFADF98")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xFAA518", Offset = "0xFAA518", VA = "0xFAA518")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xFAA5A8", Offset = "0xFAA5A8", VA = "0xFAA5A8")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xFAE234", Offset = "0xFAE234", VA = "0xFAE234")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xFAE328", Offset = "0xFAE328", VA = "0xFAE328")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xFAA638", Offset = "0xFAA638", VA = "0xFAA638")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xFAA6E4", Offset = "0xFAA6E4", VA = "0xFAA6E4")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xFAA7C4", Offset = "0xFAA7C4", VA = "0xFAA7C4")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xFAE364", Offset = "0xFAE364", VA = "0xFAE364")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000386")]
		public float TrackLength
		{
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0xFAE638", Offset = "0xFAE638", VA = "0xFAE638")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B54")]
			[Address(RVA = "0xFAE640", Offset = "0xFAE640", VA = "0xFAE640")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xFAE648", Offset = "0xFAE648", VA = "0xFAE648")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xFAD4A0", Offset = "0xFAD4A0", VA = "0xFAD4A0")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xFAE64C", Offset = "0xFAE64C", VA = "0xFAE64C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xFAE844", Offset = "0xFAE844", VA = "0xFAE844")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xFAE924", Offset = "0xFAE924", VA = "0xFAE924")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class Pose
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xFAC518", Offset = "0xFAC518", VA = "0xFAC518")]
		public Pose()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xFAE940", Offset = "0xFAE940", VA = "0xFAE940")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200043C")]
		[CompilerGenerated]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40017E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40017EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40017EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000388")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B68")]
				[Address(RVA = "0xFAEF34", Offset = "0xFAEF34", VA = "0xFAEF34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000389")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B6A")]
				[Address(RVA = "0xFAEF7C", Offset = "0xFAEF7C", VA = "0xFAEF7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xFAEC1C", Offset = "0xFAEC1C", VA = "0xFAEC1C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001B66")]
			[Address(RVA = "0xFAED90", Offset = "0xFAED90", VA = "0xFAED90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xFAED94", Offset = "0xFAED94", VA = "0xFAED94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xFAEF3C", Offset = "0xFAEF3C", VA = "0xFAEF3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043D")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40017EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40017F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40017F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700038A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B6E")]
				[Address(RVA = "0xFAF058", Offset = "0xFAF058", VA = "0xFAF058", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B70")]
				[Address(RVA = "0xFAF0A0", Offset = "0xFAF0A0", VA = "0xFAF0A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xFAECF8", Offset = "0xFAECF8", VA = "0xFAECF8")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0xFAEF84", Offset = "0xFAEF84", VA = "0xFAEF84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xFAEF88", Offset = "0xFAEF88", VA = "0xFAEF88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xFAF060", Offset = "0xFAF060", VA = "0xFAF060", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017DB")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000387")]
		public bool IsMoving
		{
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0xFAE9A4", Offset = "0xFAE9A4", VA = "0xFAE9A4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xFAE9AC", Offset = "0xFAE9AC", VA = "0xFAE9AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xFAE9B8", Offset = "0xFAE9B8", VA = "0xFAE9B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xFAE9E8", Offset = "0xFAE9E8", VA = "0xFAE9E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xFAEB28", Offset = "0xFAEB28", VA = "0xFAEB28")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xFAEB98", Offset = "0xFAEB98", VA = "0xFAEB98")]
		[IteratorStateMachine(typeof(<LerpToSpeed>d__17))]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xFAEC44", Offset = "0xFAEC44", VA = "0xFAEC44")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__18))]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xFAED20", Offset = "0xFAED20", VA = "0xFAED20")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xFAED88", Offset = "0xFAED88", VA = "0xFAED88")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xFAF0A8", Offset = "0xFAF0A8", VA = "0xFAF0A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xFAF11C", Offset = "0xFAF11C", VA = "0xFAF11C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xFAF1E4", Offset = "0xFAF1E4", VA = "0xFAF1E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xFAF2F4", Offset = "0xFAF2F4", VA = "0xFAF2F4")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xFAF370", Offset = "0xFAF370", VA = "0xFAF370")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xFAF438", Offset = "0xFAF438", VA = "0xFAF438")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40017F8")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40017F9")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40017FA")]
		EUDT_None,
		[Token(Token = "0x40017FB")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000440")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000441")]
		[CompilerGenerated]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700038C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B8A")]
				[Address(RVA = "0xFB0AC8", Offset = "0xFB0AC8", VA = "0xFB0AC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B8C")]
				[Address(RVA = "0xFB0B10", Offset = "0xFB0B10", VA = "0xFB0B10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B87")]
			[Address(RVA = "0xFB0158", Offset = "0xFB0158", VA = "0xFB0158")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001B88")]
			[Address(RVA = "0xFB08CC", Offset = "0xFB08CC", VA = "0xFB08CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0xFB08D0", Offset = "0xFB08D0", VA = "0xFB08D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0xFB0AD0", Offset = "0xFB0AD0", VA = "0xFB0AD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40017FD")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40017FE")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40017FF")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("App vs Compositor Comparison Settings")]
		public GameObject mainCamera;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Level Loading Sim Settings")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xFAF448", Offset = "0xFAF448", VA = "0xFAF448")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xFAFC88", Offset = "0xFAFC88", VA = "0xFAFC88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xFAFDB0", Offset = "0xFAFDB0", VA = "0xFAFDB0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xFAFEE0", Offset = "0xFAFEE0", VA = "0xFAFEE0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xFB0010", Offset = "0xFB0010", VA = "0xFB0010")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xFAFD90", Offset = "0xFAFD90", VA = "0xFAFD90")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xFB00E4", Offset = "0xFB00E4", VA = "0xFB00E4")]
		[IteratorStateMachine(typeof(<WaitforOVROverlay>d__30))]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xFB0180", Offset = "0xFB0180", VA = "0xFB0180")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xFAF8B8", Offset = "0xFAF8B8", VA = "0xFAF8B8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xFB02C8", Offset = "0xFB02C8", VA = "0xFB02C8")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xFB01A8", Offset = "0xFB01A8", VA = "0xFB01A8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xFB0650", Offset = "0xFB0650", VA = "0xFB0650")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xFB073C", Offset = "0xFB073C", VA = "0xFB073C")]
		public OVROverlaySample()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000442")]
	[RequireComponent(typeof(OVRGrabber))]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x4001817")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001818")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001819")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400181A")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400181B")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400181C")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400181D")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400181E")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400181F")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001820")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001821")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xFB0B18", Offset = "0xFB0B18", VA = "0xFB0B18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xFB0B70", Offset = "0xFB0B70", VA = "0xFB0B70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xFB0FC0", Offset = "0xFB0FC0", VA = "0xFB0FC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xFB10AC", Offset = "0xFB10AC", VA = "0xFB10AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xFB1210", Offset = "0xFB1210", VA = "0xFB1210")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xFB14E0", Offset = "0xFB14E0", VA = "0xFB14E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xFB15C4", Offset = "0xFB15C4", VA = "0xFB15C4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xFB1774", Offset = "0xFB1774", VA = "0xFB1774")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xFB129C", Offset = "0xFB129C", VA = "0xFB129C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xFB12F0", Offset = "0xFB12F0", VA = "0xFB12F0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xFB0E80", Offset = "0xFB0E80", VA = "0xFB0E80")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xFB1898", Offset = "0xFB1898", VA = "0xFB1898")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001836")]
		Default,
		[Token(Token = "0x4001837")]
		Generic,
		[Token(Token = "0x4001838")]
		PingPongBall,
		[Token(Token = "0x4001839")]
		Controller
	}
	[Token(Token = "0x2000445")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700038E")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xFB1950", Offset = "0xFB1950", VA = "0xFB1950")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038F")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xFB1958", Offset = "0xFB1958", VA = "0xFB1958")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000390")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xFB1960", Offset = "0xFB1960", VA = "0xFB1960")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xFB1968", Offset = "0xFB1968", VA = "0xFB1968")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xFB1970", Offset = "0xFB1970", VA = "0xFB1970")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xFB1C3C", Offset = "0xFB1C3C", VA = "0xFB1C3C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xFB1C8C", Offset = "0xFB1C8C", VA = "0xFB1C8C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xFB1CC4", Offset = "0xFB1CC4", VA = "0xFB1CC4")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000447")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001840")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001841")]
		public const string Tab = "    ";

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xFB1CCC", Offset = "0xFB1CCC", VA = "0xFB1CCC")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xFB1D58", Offset = "0xFB1D58", VA = "0xFB1D58")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xFB1DEC", Offset = "0xFB1DEC", VA = "0xFB1DEC")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_WARNING")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xFB1E78", Offset = "0xFB1E78", VA = "0xFB1E78")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xFB1F04", Offset = "0xFB1F04", VA = "0xFB1F04")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class CAPI
	{
		[Token(Token = "0x2000449")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x200044A")]
		public enum Result
		{
			[Token(Token = "0x400184D")]
			Success = 0,
			[Token(Token = "0x400184E")]
			Failure = -1000,
			[Token(Token = "0x400184F")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001850")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001851")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001852")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001853")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001854")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001855")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200044B")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xFB948C", Offset = "0xFB948C", VA = "0xFB948C")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001842")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x400184A")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xFB1FF0", Offset = "0xFB1FF0", VA = "0xFB1FF0")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xFB207C", Offset = "0xFB207C", VA = "0xFB207C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xFB2298", Offset = "0xFB2298", VA = "0xFB2298")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xFB2370", Offset = "0xFB2370", VA = "0xFB2370")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xFB23D4", Offset = "0xFB23D4", VA = "0xFB23D4")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xFB243C", Offset = "0xFB243C", VA = "0xFB243C")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xFB24B8", Offset = "0xFB24B8", VA = "0xFB24B8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xFB25E8", Offset = "0xFB25E8", VA = "0xFB25E8")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xFB2664", Offset = "0xFB2664", VA = "0xFB2664")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xFB2794", Offset = "0xFB2794", VA = "0xFB2794")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xFB2810", Offset = "0xFB2810", VA = "0xFB2810")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xFB288C", Offset = "0xFB288C", VA = "0xFB288C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xFB2908", Offset = "0xFB2908", VA = "0xFB2908")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xFB2984", Offset = "0xFB2984", VA = "0xFB2984")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xFB2A08", Offset = "0xFB2A08", VA = "0xFB2A08")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xFB2A8C", Offset = "0xFB2A8C", VA = "0xFB2A8C")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xFB2B10", Offset = "0xFB2B10", VA = "0xFB2B10")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xFB2B8C", Offset = "0xFB2B8C", VA = "0xFB2B8C")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xFB2C08", Offset = "0xFB2C08", VA = "0xFB2C08")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xFB2C8C", Offset = "0xFB2C8C", VA = "0xFB2C8C")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xFB2D10", Offset = "0xFB2D10", VA = "0xFB2D10")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xFB2D94", Offset = "0xFB2D94", VA = "0xFB2D94")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xFB2E10", Offset = "0xFB2E10", VA = "0xFB2E10")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xFB2EA4", Offset = "0xFB2EA4", VA = "0xFB2EA4")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xFB2F0C", Offset = "0xFB2F0C", VA = "0xFB2F0C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xFB2FA8", Offset = "0xFB2FA8", VA = "0xFB2FA8")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xFB305C", Offset = "0xFB305C", VA = "0xFB305C")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xFB3120", Offset = "0xFB3120", VA = "0xFB3120")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xFB31AC", Offset = "0xFB31AC", VA = "0xFB31AC")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xFB3230", Offset = "0xFB3230", VA = "0xFB3230")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xFB32B4", Offset = "0xFB32B4", VA = "0xFB32B4")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xFB3338", Offset = "0xFB3338", VA = "0xFB3338")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xFB33BC", Offset = "0xFB33BC", VA = "0xFB33BC")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xFB3438", Offset = "0xFB3438", VA = "0xFB3438")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xFB353C", Offset = "0xFB353C", VA = "0xFB353C")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xFB34B8", Offset = "0xFB34B8", VA = "0xFB34B8")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xFB3728", Offset = "0xFB3728", VA = "0xFB3728")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xFB388C", Offset = "0xFB388C", VA = "0xFB388C")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001BCF")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xFB3908", Offset = "0xFB3908", VA = "0xFB3908")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xFB3B9C", Offset = "0xFB3B9C", VA = "0xFB3B9C")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xFB3C18", Offset = "0xFB3C18", VA = "0xFB3C18")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xFB3D7C", Offset = "0xFB3D7C", VA = "0xFB3D7C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xFB3DF8", Offset = "0xFB3DF8", VA = "0xFB3DF8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xFB3F5C", Offset = "0xFB3F5C", VA = "0xFB3F5C")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xFB3FD8", Offset = "0xFB3FD8", VA = "0xFB3FD8")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xFB413C", Offset = "0xFB413C", VA = "0xFB413C")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xFB41B8", Offset = "0xFB41B8", VA = "0xFB41B8")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xFB431C", Offset = "0xFB431C", VA = "0xFB431C")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xFB4398", Offset = "0xFB4398", VA = "0xFB4398")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xFB4414", Offset = "0xFB4414", VA = "0xFB4414")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xFB44A0", Offset = "0xFB44A0", VA = "0xFB44A0")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xFB451C", Offset = "0xFB451C", VA = "0xFB451C")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xFB46D4", Offset = "0xFB46D4", VA = "0xFB46D4")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xFB4810", Offset = "0xFB4810", VA = "0xFB4810")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xFB4658", Offset = "0xFB4658", VA = "0xFB4658")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xFB488C", Offset = "0xFB488C", VA = "0xFB488C")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xFB4908", Offset = "0xFB4908", VA = "0xFB4908")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xFB498C", Offset = "0xFB498C", VA = "0xFB498C")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xFB4A08", Offset = "0xFB4A08", VA = "0xFB4A08")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xFB4A8C", Offset = "0xFB4A8C", VA = "0xFB4A8C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xFB4B08", Offset = "0xFB4B08", VA = "0xFB4B08")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xFB4B84", Offset = "0xFB4B84", VA = "0xFB4B84")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xFB4DCC", Offset = "0xFB4DCC", VA = "0xFB4DCC")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xFB4E50", Offset = "0xFB4E50", VA = "0xFB4E50")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xFB5064", Offset = "0xFB5064", VA = "0xFB5064")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xFB50F8", Offset = "0xFB50F8", VA = "0xFB50F8")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xFB522C", Offset = "0xFB522C", VA = "0xFB522C")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xFB52A8", Offset = "0xFB52A8", VA = "0xFB52A8")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xFB5324", Offset = "0xFB5324", VA = "0xFB5324")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xFB545C", Offset = "0xFB545C", VA = "0xFB545C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xFB54D8", Offset = "0xFB54D8", VA = "0xFB54D8")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xFB5610", Offset = "0xFB5610", VA = "0xFB5610")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xFB568C", Offset = "0xFB568C", VA = "0xFB568C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xFB5710", Offset = "0xFB5710", VA = "0xFB5710")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xFB5794", Offset = "0xFB5794", VA = "0xFB5794")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xFB5818", Offset = "0xFB5818", VA = "0xFB5818")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xFB5894", Offset = "0xFB5894", VA = "0xFB5894")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xFB5918", Offset = "0xFB5918", VA = "0xFB5918")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xFB599C", Offset = "0xFB599C", VA = "0xFB599C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xFB5A18", Offset = "0xFB5A18", VA = "0xFB5A18")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xFB5A94", Offset = "0xFB5A94", VA = "0xFB5A94")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xFB5B44", Offset = "0xFB5B44", VA = "0xFB5B44")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xFB5BC8", Offset = "0xFB5BC8", VA = "0xFB5BC8")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xFB5C4C", Offset = "0xFB5C4C", VA = "0xFB5C4C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xFB5CC8", Offset = "0xFB5CC8", VA = "0xFB5CC8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xFB5D44", Offset = "0xFB5D44", VA = "0xFB5D44")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xFB5DC0", Offset = "0xFB5DC0", VA = "0xFB5DC0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xFB5E54", Offset = "0xFB5E54", VA = "0xFB5E54")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xFB5EE0", Offset = "0xFB5EE0", VA = "0xFB5EE0")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xFB5F6C", Offset = "0xFB5F6C", VA = "0xFB5F6C")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xFB5FF8", Offset = "0xFB5FF8", VA = "0xFB5FF8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xFB608C", Offset = "0xFB608C", VA = "0xFB608C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xFB6120", Offset = "0xFB6120", VA = "0xFB6120")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xFB619C", Offset = "0xFB619C", VA = "0xFB619C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xFB6218", Offset = "0xFB6218", VA = "0xFB6218")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xFB6350", Offset = "0xFB6350", VA = "0xFB6350")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xFB63CC", Offset = "0xFB63CC", VA = "0xFB63CC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xFB6504", Offset = "0xFB6504", VA = "0xFB6504")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xFB6580", Offset = "0xFB6580", VA = "0xFB6580")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xFB66A0", Offset = "0xFB66A0", VA = "0xFB66A0")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xFB671C", Offset = "0xFB671C", VA = "0xFB671C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xFB68D0", Offset = "0xFB68D0", VA = "0xFB68D0")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xFB6B78", Offset = "0xFB6B78", VA = "0xFB6B78")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xFB6854", Offset = "0xFB6854", VA = "0xFB6854")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xFB6BFC", Offset = "0xFB6BFC", VA = "0xFB6BFC")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xFB6C78", Offset = "0xFB6C78", VA = "0xFB6C78")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xFB6CFC", Offset = "0xFB6CFC", VA = "0xFB6CFC")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xFB6D80", Offset = "0xFB6D80", VA = "0xFB6D80")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xFB6E04", Offset = "0xFB6E04", VA = "0xFB6E04")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xFB6EA0", Offset = "0xFB6EA0", VA = "0xFB6EA0")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xFB6F3C", Offset = "0xFB6F3C", VA = "0xFB6F3C")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xFB6FD0", Offset = "0xFB6FD0", VA = "0xFB6FD0")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xFB704C", Offset = "0xFB704C", VA = "0xFB704C")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xFB70C8", Offset = "0xFB70C8", VA = "0xFB70C8")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xFB7144", Offset = "0xFB7144", VA = "0xFB7144")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xFB71C0", Offset = "0xFB71C0", VA = "0xFB71C0")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xFB723C", Offset = "0xFB723C", VA = "0xFB723C")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xFB7360", Offset = "0xFB7360", VA = "0xFB7360")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xFB73EC", Offset = "0xFB73EC", VA = "0xFB73EC")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xFB7468", Offset = "0xFB7468", VA = "0xFB7468")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xFB74BC", Offset = "0xFB74BC", VA = "0xFB74BC")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xFB75F0", Offset = "0xFB75F0", VA = "0xFB75F0")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xFB7674", Offset = "0xFB7674", VA = "0xFB7674")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xFB77A8", Offset = "0xFB77A8", VA = "0xFB77A8")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xFB782C", Offset = "0xFB782C", VA = "0xFB782C")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xFB78C0", Offset = "0xFB78C0", VA = "0xFB78C0")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xFB7BF8", Offset = "0xFB7BF8", VA = "0xFB7BF8")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xFB7C74", Offset = "0xFB7C74", VA = "0xFB7C74")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xFB7D00", Offset = "0xFB7D00", VA = "0xFB7D00")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xFB8454", Offset = "0xFB8454", VA = "0xFB8454")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xFB84D0", Offset = "0xFB84D0", VA = "0xFB84D0")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xFB1F98", Offset = "0xFB1F98", VA = "0xFB1F98")]
		[MonoPInvokeCallback(typeof(LoggingDelegate))]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xFB855C", Offset = "0xFB855C", VA = "0xFB855C")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xFB85DC", Offset = "0xFB85DC", VA = "0xFB85DC")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xFB8658", Offset = "0xFB8658", VA = "0xFB8658")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xFB86D4", Offset = "0xFB86D4", VA = "0xFB86D4")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xFB8750", Offset = "0xFB8750", VA = "0xFB8750")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xFB90A8", Offset = "0xFB90A8", VA = "0xFB90A8")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xFB9124", Offset = "0xFB9124", VA = "0xFB9124")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xFB9564", Offset = "0xFB9564", VA = "0xFB9564")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xFB9408", Offset = "0xFB9408", VA = "0xFB9408")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xFB95CC", Offset = "0xFB95CC", VA = "0xFB95CC")]
		public CAPI()
		{
		}
	}
}
namespace MA_Toolbox.Utils
{
	[Token(Token = "0x200044C")]
	public static class MA_StringUtils
	{
		[Token(Token = "0x4001857")]
		private const string ALPHABET = "aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ";

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xFB98AC", Offset = "0xFB98AC", VA = "0xFB98AC")]
		public static string RandomAlphabetString(int length)
		{
			return null;
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xFB9938", Offset = "0xFB9938", VA = "0xFB9938")]
		public static char RandomAlphabetChar()
		{
			return default(char);
		}
	}
}
namespace LuxURPEssentials
{
	[Token(Token = "0x200044D")]
	public class DecalManager : MonoBehaviour
	{
		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Gizmos;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DrawDecalGizmos;

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xFB99A4", Offset = "0xFB99A4", VA = "0xFB99A4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xFB9A04", Offset = "0xFB9A04", VA = "0xFB9A04")]
		public DecalManager()
		{
		}
	}
	[Token(Token = "0x200044E")]
	[RequireComponent(typeof(MeshFilter))]
	public class LuxURP_BillboardBounds : MonoBehaviour
	{
		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Scale of the tweaked bounding box.")]
		[Space(5f)]
		[SerializeField]
		[LuxURP_HelpBtn("h.9i03ddhmnooa")]
		[Space(18f)]
		private Vector3 _Scale;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Tooltip("If checked Unity will instantiate the assigned mesh on Start().")]
		private bool _createUniqueMesh;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[Space(8f)]
		[SerializeField]
		[Tooltip("Check this to preview the scaled bounding box.")]
		private bool _drawBounds;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh _Mesh;

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xFB9A60", Offset = "0xFB9A60", VA = "0xFB9A60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xFB9A70", Offset = "0xFB9A70", VA = "0xFB9A70")]
		private void SetBounds()
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xFB9C8C", Offset = "0xFB9C8C", VA = "0xFB9C8C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xFB9EC4", Offset = "0xFB9EC4", VA = "0xFB9EC4")]
		public LuxURP_BillboardBounds()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class LuxURP_HelpBtn : PropertyAttribute
	{
		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xFB9EE4", Offset = "0xFB9EE4", VA = "0xFB9EE4")]
		public LuxURP_HelpBtn(string URL)
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class LuxURP_LayerBasedCulling : MonoBehaviour
	{
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(5f, order = 1)]
		[LuxURP_HelpBtn("h.2uxuzzrgrwpo", order = 0)]
		public LayerMask SmallDetailsLayer;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SmallDetailsDistance;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask MediumDetailsLayer;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MediumDetailsDistance;

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xFB9F14", Offset = "0xFB9F14", VA = "0xFB9F14")]
		private int GetLayerNumber(int LayerValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xFB9F34", Offset = "0xFB9F34", VA = "0xFB9F34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xFBA0C8", Offset = "0xFBA0C8", VA = "0xFBA0C8")]
		public LuxURP_LayerBasedCulling()
		{
		}
	}
	[Token(Token = "0x2000451")]
	[ExecuteAlways]
	public class LuxURP_SetupGlobals : MonoBehaviour
	{
		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D _BestFittingNormal;

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xFBA0E0", Offset = "0xFBA0E0", VA = "0xFBA0E0")]
		private void SetupGlobals()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xFBA174", Offset = "0xFBA174", VA = "0xFBA174")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xFBA178", Offset = "0xFBA178", VA = "0xFBA178")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xFBA17C", Offset = "0xFBA17C", VA = "0xFBA17C")]
		public LuxURP_SetupGlobals()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000452")]
	public enum RTSize
	{
		[Token(Token = "0x4001865")]
		_128 = 128,
		[Token(Token = "0x4001866")]
		_256 = 256,
		[Token(Token = "0x4001867")]
		_384 = 384,
		[Token(Token = "0x4001868")]
		_512 = 512,
		[Token(Token = "0x4001869")]
		_1024 = 1024
	}
	[Serializable]
	[Token(Token = "0x2000453")]
	public enum RTFormat
	{
		[Token(Token = "0x400186B")]
		ARGB32,
		[Token(Token = "0x400186C")]
		ARGBHalf
	}
	[Serializable]
	[Token(Token = "0x2000454")]
	public enum GustMixLayer
	{
		[Token(Token = "0x400186E")]
		Layer_0,
		[Token(Token = "0x400186F")]
		Layer_1,
		[Token(Token = "0x4001870")]
		Layer_2
	}
	[Token(Token = "0x2000455")]
	[ExecuteAlways]
	[RequireComponent(typeof(WindZone))]
	public class LuxURP_Wind : MonoBehaviour
	{
		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(3f)]
		[LuxURP_HelpBtn("h.wnnhm4pxp610")]
		[Space(5f)]
		public bool UpdateInEditMode;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Space(4f)]
		[Header("Render Texture Settings")]
		[Tooltip("Smaller resoltions will speed up rendering but may result in some quantization regarding the final bending.")]
		public RTSize Resolution;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("ARGB32 needs less memory and bandwidth but creates a slightly more quantized results - while ARGBHalf needs more memory and bandwith but gives you smoother results.")]
		public RTFormat Format;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Expects an RGBA texture with diffirently scaled noise patterns. If left empty the script will grab the default one.")]
		public Texture WindBaseTex;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader WindCompositeShader;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Wind Frequency and Turbulence")]
		[Space(4f)]
		[Range(0.1f, 1f)]
		[Tooltip("Drives the frequency of the turbulence animation according to the main wind strength.")]
		public float WindToFrequency;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Drives the strength of turbulence according to the main wind strength.")]
		public AnimationCurve WindToTurbulence;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 4f)]
		[Tooltip("Scales the final turbulence value used by the shaders.")]
		public float MaxTurbulence;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Base Wind Speed in km/h at Main = 1 (WindZone).")]
		[Header("Wind Speed and Size")]
		[Space(4f)]
		public float BaseWindSpeed;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Size of the Wind RenderTexture in World Space.")]
		public float SizeInWorldSpace;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("Speed of Layer0 (red channel) relative to the Base Wind Speed.")]
		[Space(4f)]
		public float speedLayer0;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Speed of Layer1 (green channel) relative to the Base Wind Speed.")]
		public float speedLayer1;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("Speed of Layer3 (blue channel) relative to the Base Wind Speed.")]
		public float speedLayer2;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Tiling of the gust layer (alpha channel) relative to Size In WorldSpace.")]
		[Header("Noise")]
		[Space(4f)]
		public int GrassGustTiling;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("Speed of the gust layer (alpha channel) relative to the Base Wind Speed.")]
		public float GrassGustSpeed;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Lets you choose a Wind Layer you want the dedicated Gust sample to be combined with.")]
		public GustMixLayer LayerToMixWith;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Header("Wind Multipliers")]
		[Space(4f)]
		public float Grass;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float Foliage;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture WindRenderTexture;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material m_material;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 uvs;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 uvs1;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 uvs2;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 uvs3;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform trans;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WindZone windZone;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float mainWind;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int WindRTPID;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int LuxURPWindDirSizePID;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int LuxURPWindStrengthMultipliersPID;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int LuxURPSinTimePID;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int LuxURPGustPID;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int LuxURPGustMixLayerPID;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int LuxURPBendFrequencyPID;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int LuxURPWindUVsPID;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int LuxURPWindUVs1PID;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int LuxURPWindUVs2PID;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int LuxURPWindUVs3PID;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int previousRTSize;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int previousRTFormat;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector4 WindDirectionSize;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float WindTurbulence;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector3[] MixLayers;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private double currentTime;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private double domainTime_Wind;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float temp_WindFrequency;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float freqSpeed;

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xFBA184", Offset = "0xFBA184", VA = "0xFBA184")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xFBA4E0", Offset = "0xFBA4E0", VA = "0xFBA4E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xFBA36C", Offset = "0xFBA36C", VA = "0xFBA36C")]
		private void SetupRT()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xFBA624", Offset = "0xFBA624", VA = "0xFBA624")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xFBA858", Offset = "0xFBA858", VA = "0xFBA858")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xFBAC1C", Offset = "0xFBAC1C", VA = "0xFBAC1C")]
		public LuxURP_Wind()
		{
		}
	}
	[Token(Token = "0x2000456")]
	[RequireComponent(typeof(Terrain))]
	public class GetTerrainHeightNormalMap : MonoBehaviour
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData targetTerrainData;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string savePathTerrainHeightNormalMap;

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xFBB0BC", Offset = "0xFBB0BC", VA = "0xFBB0BC")]
		public void GetTerData()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xFBB18C", Offset = "0xFBB18C", VA = "0xFBB18C")]
		public GetTerrainHeightNormalMap()
		{
		}
	}
}
namespace Unity.IL2CPP.CompilerServices
{
	[Token(Token = "0x2000457")]
	public enum Option
	{
		[Token(Token = "0x40018A3")]
		NullChecks = 1,
		[Token(Token = "0x40018A4")]
		ArrayBoundsChecks,
		[Token(Token = "0x40018A5")]
		DivideByZeroChecks
	}
	[Token(Token = "0x2000458")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Method | AttributeTargets.Property, Inherited = false, AllowMultiple = true)]
	public class Il2CppSetOptionAttribute : Attribute
	{
		[Token(Token = "0x17000391")]
		public Option Option
		{
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xFBB194", Offset = "0xFBB194", VA = "0xFBB194")]
			[CompilerGenerated]
			get
			{
				return default(Option);
			}
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xFBB19C", Offset = "0xFBB19C", VA = "0xFBB19C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000392")]
		public object Value
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xFBB1A4", Offset = "0xFBB1A4", VA = "0xFBB1A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xFBB1AC", Offset = "0xFBB1AC", VA = "0xFBB1AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xFBB1B4", Offset = "0xFBB1B4", VA = "0xFBB1B4")]
		public Il2CppSetOptionAttribute(Option option, object value)
		{
		}
	}
}
namespace Assets.SimpleZip
{
	[Token(Token = "0x2000459")]
	public class Example : MonoBehaviour
	{
		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xFBB1EC", Offset = "0xFBB1EC", VA = "0xFBB1EC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xFBB5C0", Offset = "0xFBB5C0", VA = "0xFBB5C0")]
		public Example()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public static class Zip
	{
		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xFBB5C8", Offset = "0xFBB5C8", VA = "0xFBB5C8")]
		public static byte[] Compress(string text)
		{
			return null;
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xFBB4F8", Offset = "0xFBB4F8", VA = "0xFBB4F8")]
		public static string CompressToString(string text)
		{
			return null;
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xFBB5D0", Offset = "0xFBB5D0", VA = "0xFBB5D0")]
		public static string Decompress(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xFBB564", Offset = "0xFBB564", VA = "0xFBB564")]
		public static string Decompress(string data)
		{
			return null;
		}
	}
}
namespace cakeslice
{
	[Token(Token = "0x200045B")]
	public class Outline : MonoBehaviour
	{
		[Token(Token = "0x200045C")]
		private class CoSpatialVertex
		{
			[Token(Token = "0x40018BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Position;

			[Token(Token = "0x40018BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 AccumulatedNormal;

			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xFBCDD4", Offset = "0xFBCDD4", VA = "0xFBCDD4")]
			public CoSpatialVertex()
			{
			}
		}

		[Token(Token = "0x200045D")]
		[CompilerGenerated]
		private sealed class <CreateMeshFilter>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Outline <>4__this;

			[Token(Token = "0x40018BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MeshRenderer srcRend;

			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private MeshFilter <destFilter>5__2;

			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Mesh <destMesh>5__3;

			[Token(Token = "0x17000395")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C7A")]
				[Address(RVA = "0xFBCFE0", Offset = "0xFBCFE0", VA = "0xFBCFE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000396")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C7C")]
				[Address(RVA = "0xFBD028", Offset = "0xFBD028", VA = "0xFBD028", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xFBC458", Offset = "0xFBC458", VA = "0xFBC458")]
			[DebuggerHidden]
			public <CreateMeshFilter>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xFBCDDC", Offset = "0xFBCDDC", VA = "0xFBCDDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xFBCDE0", Offset = "0xFBCDE0", VA = "0xFBCDE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xFBCFE8", Offset = "0xFBCFE8", VA = "0xFBCFE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200045E")]
		[CompilerGenerated]
		private sealed class <SmoothNormals>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh src;

			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Outline <>4__this;

			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh dest;

			[Token(Token = "0x40018C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3[] <vertices>5__2;

			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int[] <triangles>5__3;

			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3[] <outlineNormals>5__4;

			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<CoSpatialVertex> <cospatialVerticesData>5__5;

			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int[] <cospacialVertexIndices>5__6;

			[Token(Token = "0x17000397")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C80")]
				[Address(RVA = "0xFBD50C", Offset = "0xFBD50C", VA = "0xFBD50C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000398")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C82")]
				[Address(RVA = "0xFBD554", Offset = "0xFBD554", VA = "0xFBD554", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xFBC524", Offset = "0xFBC524", VA = "0xFBC524")]
			[DebuggerHidden]
			public <SmoothNormals>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0xFBD030", Offset = "0xFBD030", VA = "0xFBD030", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xFBD034", Offset = "0xFBD034", VA = "0xFBD034", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xFBD514", Offset = "0xFBD514", VA = "0xFBD514", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200045F")]
		[CompilerGenerated]
		private sealed class <FindCoSpatialVertices>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Outline <>4__this;

			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] vertices;

			[Token(Token = "0x40018D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<CoSpatialVertex> registry;

			[Token(Token = "0x40018D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int[] indices;

			[Token(Token = "0x40018D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <v>5__2;

			[Token(Token = "0x17000399")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C86")]
				[Address(RVA = "0xFBD818", Offset = "0xFBD818", VA = "0xFBD818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C88")]
				[Address(RVA = "0xFBD860", Offset = "0xFBD860", VA = "0xFBD860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xFBD55C", Offset = "0xFBD55C", VA = "0xFBD55C")]
			[DebuggerHidden]
			public <FindCoSpatialVertices>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xFBD584", Offset = "0xFBD584", VA = "0xFBD584", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C85")]
			[Address(RVA = "0xFBD588", Offset = "0xFBD588", VA = "0xFBD588", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xFBD820", Offset = "0xFBD820", VA = "0xFBD820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018A9")]
		public const int StencilOutlineBit = 128;

		[Token(Token = "0x40018AA")]
		private const float CoSpatialVertexDistance = 0.0005f;

		[Token(Token = "0x40018AB")]
		private const string OutlineName = "Outline obj";

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int StencilShaderPropertyID;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int ReadMaskShaderPropertyID;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int StencilFailShaderPropertyID;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int shaderColorID;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int stencilCompShaderPropertyID;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int writeMaskShaderPropertyID;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int stencilOpShaderPropertyID;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int stencilZFailShaderPropertyID;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static OutlineColors outlineColors;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, Color> colorTranslation;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject outlineObject;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer outlineRenderer;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int color;

		[Token(Token = "0x17000393")]
		public int Color
		{
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xFBB78C", Offset = "0xFBB78C", VA = "0xFBB78C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xFBB61C", Offset = "0xFBB61C", VA = "0xFBB61C")]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public bool IsCreatingMesh
		{
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0xFBB794", Offset = "0xFBB794", VA = "0xFBB794")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xFBB79C", Offset = "0xFBB79C", VA = "0xFBB79C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xFBB7A8", Offset = "0xFBB7A8", VA = "0xFBB7A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xFBB9A4", Offset = "0xFBB9A4", VA = "0xFBB9A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xFBC13C", Offset = "0xFBC13C", VA = "0xFBC13C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xFBC438", Offset = "0xFBC438", VA = "0xFBC438")]
		public void Show(bool _enable)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xFBB620", Offset = "0xFBB620", VA = "0xFBB620")]
		private void SetColor(int _color)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xFBC0AC", Offset = "0xFBC0AC", VA = "0xFBC0AC")]
		[IteratorStateMachine(typeof(<CreateMeshFilter>d__29))]
		private IEnumerator CreateMeshFilter(MeshRenderer srcRend)
		{
			return null;
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xFBBFB4", Offset = "0xFBBFB4", VA = "0xFBBFB4")]
		public static void SetStencilComp(Material mat, bool enable)
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xFBC480", Offset = "0xFBC480", VA = "0xFBC480")]
		[IteratorStateMachine(typeof(<SmoothNormals>d__31))]
		private IEnumerator SmoothNormals(Mesh src, Mesh dest)
		{
			return null;
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xFBC54C", Offset = "0xFBC54C", VA = "0xFBC54C")]
		[IteratorStateMachine(typeof(<FindCoSpatialVertices>d__32))]
		private IEnumerator FindCoSpatialVertices(Vector3[] vertices, int[] indices, List<CoSpatialVertex> registry)
		{
			return null;
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xFBC60C", Offset = "0xFBC60C", VA = "0xFBC60C")]
		private bool SearchForPreviouslyRegisteredCV(Vector3 position, List<CoSpatialVertex> registry, out int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xFBC704", Offset = "0xFBC704", VA = "0xFBC704")]
		private void ComputeNormalAndWeights(Vector3 a, Vector3 b, Vector3 c, out Vector3 normal, out Vector3 weights)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xFBCB48", Offset = "0xFBCB48", VA = "0xFBCB48")]
		private void AddWeightedNormal(Vector3 weightedNormal, int vertexIndex, int[] cvIndices, List<CoSpatialVertex> cvRegistry)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xFBCC08", Offset = "0xFBCC08", VA = "0xFBCC08")]
		public Outline()
		{
		}
	}
}
namespace LibTessDotNet
{
	[Token(Token = "0x2000460")]
	internal class Dict<TValue> where TValue : class
	{
		[Token(Token = "0x2000461")]
		public class Node
		{
			[Token(Token = "0x40018D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal TValue _key;

			[Token(Token = "0x40018D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Node _prev;

			[Token(Token = "0x40018D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Node _next;

			[Token(Token = "0x1700039B")]
			public TValue Key
			{
				[Token(Token = "0x6001C8F")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039C")]
			public Node Prev
			{
				[Token(Token = "0x6001C90")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039D")]
			public Node Next
			{
				[Token(Token = "0x6001C91")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C92")]
			public Node()
			{
			}
		}

		[Token(Token = "0x2000462")]
		public delegate bool LessOrEqual(TValue lhs, TValue rhs);

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LessOrEqual _leq;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Node _head;

		[Token(Token = "0x6001C89")]
		public Dict(LessOrEqual leq)
		{
		}

		[Token(Token = "0x6001C8A")]
		public Node Insert(TValue key)
		{
			return null;
		}

		[Token(Token = "0x6001C8B")]
		public Node InsertBefore(Node node, TValue key)
		{
			return null;
		}

		[Token(Token = "0x6001C8C")]
		public Node Find(TValue key)
		{
			return null;
		}

		[Token(Token = "0x6001C8D")]
		public Node Min()
		{
			return null;
		}

		[Token(Token = "0x6001C8E")]
		public void Remove(Node node)
		{
		}
	}
	[Token(Token = "0x2000463")]
	internal static class Geom
	{
		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xFBD868", Offset = "0xFBD868", VA = "0xFBD868")]
		public static bool IsWindingInside(WindingRule rule, int n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xFBD914", Offset = "0xFBD914", VA = "0xFBD914")]
		public static bool VertCCW(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xFBD964", Offset = "0xFBD964", VA = "0xFBD964")]
		public static bool VertEq(MeshUtils.Vertex lhs, MeshUtils.Vertex rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xFBD9A4", Offset = "0xFBD9A4", VA = "0xFBD9A4")]
		public static bool VertLeq(MeshUtils.Vertex lhs, MeshUtils.Vertex rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xFBD9F0", Offset = "0xFBD9F0", VA = "0xFBD9F0")]
		public static float EdgeEval(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(float);
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xFBDA60", Offset = "0xFBDA60", VA = "0xFBDA60")]
		public static float EdgeSign(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(float);
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xFBDAC0", Offset = "0xFBDAC0", VA = "0xFBDAC0")]
		public static bool TransLeq(MeshUtils.Vertex lhs, MeshUtils.Vertex rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xFBDB0C", Offset = "0xFBDB0C", VA = "0xFBDB0C")]
		public static float TransEval(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(float);
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xFBDB7C", Offset = "0xFBDB7C", VA = "0xFBDB7C")]
		public static float TransSign(MeshUtils.Vertex u, MeshUtils.Vertex v, MeshUtils.Vertex w)
		{
			return default(float);
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xFBDBDC", Offset = "0xFBDBDC", VA = "0xFBDBDC")]
		public static bool EdgeGoesLeft(MeshUtils.Edge e)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xFBDC20", Offset = "0xFBDC20", VA = "0xFBDC20")]
		public static bool EdgeGoesRight(MeshUtils.Edge e)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xFBDC44", Offset = "0xFBDC44", VA = "0xFBDC44")]
		public static float VertL1dist(MeshUtils.Vertex u, MeshUtils.Vertex v)
		{
			return default(float);
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xFBDCC8", Offset = "0xFBDCC8", VA = "0xFBDCC8")]
		public static void AddWinding(MeshUtils.Edge eDst, MeshUtils.Edge eSrc)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xFBDD10", Offset = "0xFBDD10", VA = "0xFBDD10")]
		public static float Interpolate(float a, float x, float b, float y)
		{
			return default(float);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xFBDD6C", Offset = "0xFBDD6C", VA = "0xFBDD6C")]
		private static void Swap(ref MeshUtils.Vertex a, ref MeshUtils.Vertex b)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xFBDDA0", Offset = "0xFBDDA0", VA = "0xFBDDA0")]
		public static void EdgeIntersect(MeshUtils.Vertex o1, MeshUtils.Vertex d1, MeshUtils.Vertex o2, MeshUtils.Vertex d2, MeshUtils.Vertex v)
		{
		}
	}
	[Token(Token = "0x2000464")]
	internal class Mesh : Pooled<Mesh>
	{
		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal MeshUtils.Vertex _vHead;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal MeshUtils.Face _fHead;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal MeshUtils.Edge _eHead;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal MeshUtils.Edge _eHeadSym;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xFBE218", Offset = "0xFBE218", VA = "0xFBE218", Slot = "4")]
		public void Init(IPool pool)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xFBE5A4", Offset = "0xFBE5A4", VA = "0xFBE5A4", Slot = "5")]
		public void Reset(IPool pool)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xFBE7A0", Offset = "0xFBE7A0", VA = "0xFBE7A0")]
		public MeshUtils.Edge MakeEdge(IPool pool)
		{
			return null;
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xFBEBC8", Offset = "0xFBEBC8", VA = "0xFBEBC8")]
		public void Splice(IPool pool, MeshUtils.Edge eOrg, MeshUtils.Edge eDst)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xFBEF18", Offset = "0xFBEF18", VA = "0xFBEF18")]
		public void Delete(IPool pool, MeshUtils.Edge eDel)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xFBF1A8", Offset = "0xFBF1A8", VA = "0xFBF1A8")]
		public MeshUtils.Edge AddEdgeVertex(IPool pool, MeshUtils.Edge eOrg)
		{
			return null;
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xFBF24C", Offset = "0xFBF24C", VA = "0xFBF24C")]
		public MeshUtils.Edge SplitEdge(IPool pool, MeshUtils.Edge eOrg)
		{
			return null;
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xFBF348", Offset = "0xFBF348", VA = "0xFBF348")]
		public MeshUtils.Edge Connect(IPool pool, MeshUtils.Edge eOrg, MeshUtils.Edge eDst)
		{
			return null;
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xFBF454", Offset = "0xFBF454", VA = "0xFBF454")]
		public void ZapFace(IPool pool, MeshUtils.Face fZap)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xFBF600", Offset = "0xFBF600", VA = "0xFBF600")]
		public void MergeConvexFaces(IPool pool, int maxVertsPerFace)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xFBF7D4", Offset = "0xFBF7D4", VA = "0xFBF7D4")]
		[Conditional("DEBUG")]
		public void Check()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xFBF86C", Offset = "0xFBF86C", VA = "0xFBF86C")]
		public Mesh()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public struct Vec3
	{
		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vec3 Zero;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float X;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Y;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Z;

		[Token(Token = "0x1700039E")]
		public float this[int index]
		{
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xFBF874", Offset = "0xFBF874", VA = "0xFBF874")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0xFBF8E0", Offset = "0xFBF8E0", VA = "0xFBF8E0")]
			set
			{
			}
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xFBF94C", Offset = "0xFBF94C", VA = "0xFBF94C")]
		public Vec3(float x, float y, float z)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xFBF958", Offset = "0xFBF958", VA = "0xFBF958")]
		public static void Sub(ref Vec3 lhs, ref Vec3 rhs, out Vec3 result)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xFBF97C", Offset = "0xFBF97C", VA = "0xFBF97C")]
		public static void Neg(ref Vec3 v)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xFBF998", Offset = "0xFBF998", VA = "0xFBF998")]
		public static void Dot(ref Vec3 u, ref Vec3 v, out float dot)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xFBF9C4", Offset = "0xFBF9C4", VA = "0xFBF9C4")]
		public static void Normalize(ref Vec3 v)
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xFBFA60", Offset = "0xFBFA60", VA = "0xFBFA60")]
		public static int LongAxis(ref Vec3 v)
		{
			return default(int);
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xFBFB20", Offset = "0xFBFB20", VA = "0xFBFB20", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000466")]
	public interface ITypePool
	{
		[Token(Token = "0x6001CBD")]
		object Get();

		[Token(Token = "0x6001CBE")]
		void Return(object obj);
	}
	[Token(Token = "0x2000467")]
	public class DefaultTypePool<T> : ITypePool where T : class, Pooled<T>, new()
	{
		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> _pool;

		[Token(Token = "0x6001CBF")]
		public object Get()
		{
			return null;
		}

		[Token(Token = "0x6001CC0")]
		public void Return(object obj)
		{
		}

		[Token(Token = "0x6001CC1")]
		public DefaultTypePool()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public abstract class IPool
	{
		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xFBFBE8", Offset = "0xFBFBE8", VA = "0xFBFBE8")]
		public IPool()
		{
		}

		[Token(Token = "0x6001CC3")]
		public abstract void Register<T>(ITypePool typePool) where T : class, Pooled<T>, new();

		[Token(Token = "0x6001CC4")]
		public abstract T Get<T>() where T : class, Pooled<T>, new();

		[Token(Token = "0x6001CC5")]
		public abstract void Return<T>(T obj) where T : class, Pooled<T>, new();
	}
	[Token(Token = "0x2000469")]
	public class NullPool : IPool
	{
		[Token(Token = "0x6001CC6")]
		public override T Get<T>()
		{
			return null;
		}

		[Token(Token = "0x6001CC7")]
		public override void Register<T>(ITypePool typePool)
		{
		}

		[Token(Token = "0x6001CC8")]
		public override void Return<T>(T obj)
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xFBFE34", Offset = "0xFBFE34", VA = "0xFBFE34")]
		public NullPool()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class DefaultPool : IPool
	{
		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<Type, ITypePool> _register;

		[Token(Token = "0x6001CCA")]
		public override void Register<T>(ITypePool typePool)
		{
		}

		[Token(Token = "0x6001CCB")]
		public override T Get<T>()
		{
			return null;
		}

		[Token(Token = "0x6001CCC")]
		public override void Return<T>(T obj)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xFBFE38", Offset = "0xFBFE38", VA = "0xFBFE38")]
		public DefaultPool()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public interface Pooled<T> where T : class, Pooled<T>, new()
	{
		[Token(Token = "0x6001CCE")]
		void Init(IPool pool);

		[Token(Token = "0x6001CCF")]
		void Reset(IPool pool);
	}
	[Token(Token = "0x200046C")]
	internal static class MeshUtils
	{
		[Token(Token = "0x200046D")]
		internal class Vertex : Pooled<Vertex>
		{
			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vertex _prev;

			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vertex _next;

			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Edge _anEdge;

			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vec3 _coords;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal float _s;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float _t;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal PQHandle _pqHandle;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal int _n;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal object _data;

			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0xFBFED0", Offset = "0xFBFED0", VA = "0xFBFED0", Slot = "4")]
			public void Init(IPool pool)
			{
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xFBFED4", Offset = "0xFBFED4", VA = "0xFBFED4", Slot = "5")]
			public void Reset(IPool pool)
			{
			}

			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xFBFF80", Offset = "0xFBFF80", VA = "0xFBFF80")]
			public Vertex()
			{
			}
		}

		[Token(Token = "0x200046E")]
		internal class Face : Pooled<Face>
		{
			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Face _prev;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Face _next;

			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Edge _anEdge;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Face _trail;

			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal int _n;

			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal bool _marked;

			[Token(Token = "0x40018F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			internal bool _inside;

			[Token(Token = "0x1700039F")]
			internal int VertsCount
			{
				[Token(Token = "0x6001CDB")]
				[Address(RVA = "0xFBF784", Offset = "0xFBF784", VA = "0xFBF784")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xFBFF88", Offset = "0xFBFF88", VA = "0xFBFF88", Slot = "4")]
			public void Init(IPool pool)
			{
			}

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xFBFF8C", Offset = "0xFBFF8C", VA = "0xFBFF8C", Slot = "5")]
			public void Reset(IPool pool)
			{
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xFBFFE0", Offset = "0xFBFFE0", VA = "0xFBFFE0")]
			public Face()
			{
			}
		}

		[Token(Token = "0x200046F")]
		internal struct EdgePair
		{
			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal Edge _e;

			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Edge _eSym;

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xFBE49C", Offset = "0xFBE49C", VA = "0xFBE49C")]
			public static EdgePair Create(IPool pool)
			{
				return default(EdgePair);
			}

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0xFBFFE8", Offset = "0xFBFFE8", VA = "0xFBFFE8")]
			public void Reset(IPool pool)
			{
			}
		}

		[Token(Token = "0x2000470")]
		internal class Edge : Pooled<Edge>
		{
			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal EdgePair _pair;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal Edge _next;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Edge _Sym;

			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal Edge _Onext;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Edge _Lnext;

			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal Vertex _Org;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal Face _Lface;

			[Token(Token = "0x40018FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal Tess.ActiveRegion _activeRegion;

			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal int _winding;

			[Token(Token = "0x170003A0")]
			internal Face _Rface
			{
				[Token(Token = "0x6001CE1")]
				[Address(RVA = "0xFBF064", Offset = "0xFBF064", VA = "0xFBF064")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CE2")]
				[Address(RVA = "0xFBF32C", Offset = "0xFBF32C", VA = "0xFBF32C")]
				set
				{
				}
			}

			[Token(Token = "0x170003A1")]
			internal Vertex _Dst
			{
				[Token(Token = "0x6001CE3")]
				[Address(RVA = "0xFBDC04", Offset = "0xFBDC04", VA = "0xFBDC04")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CE4")]
				[Address(RVA = "0xFBF310", Offset = "0xFBF310", VA = "0xFBF310")]
				set
				{
				}
			}

			[Token(Token = "0x170003A2")]
			internal Edge _Oprev
			{
				[Token(Token = "0x6001CE5")]
				[Address(RVA = "0xFBF080", Offset = "0xFBF080", VA = "0xFBF080")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CE6")]
				[Address(RVA = "0xFC0010", Offset = "0xFC0010", VA = "0xFC0010")]
				set
				{
				}
			}

			[Token(Token = "0x170003A3")]
			internal Edge _Lprev
			{
				[Token(Token = "0x6001CE7")]
				[Address(RVA = "0xFBF7B8", Offset = "0xFBF7B8", VA = "0xFBF7B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CE8")]
				[Address(RVA = "0xFC002C", Offset = "0xFC002C", VA = "0xFC002C")]
				set
				{
				}
			}

			[Token(Token = "0x170003A4")]
			internal Edge _Dprev
			{
				[Token(Token = "0x6001CE9")]
				[Address(RVA = "0xFC0048", Offset = "0xFC0048", VA = "0xFC0048")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CEA")]
				[Address(RVA = "0xFC0064", Offset = "0xFC0064", VA = "0xFC0064")]
				set
				{
				}
			}

			[Token(Token = "0x170003A5")]
			internal Edge _Rprev
			{
				[Token(Token = "0x6001CEB")]
				[Address(RVA = "0xFC0080", Offset = "0xFC0080", VA = "0xFC0080")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CEC")]
				[Address(RVA = "0xFC009C", Offset = "0xFC009C", VA = "0xFC009C")]
				set
				{
				}
			}

			[Token(Token = "0x170003A6")]
			internal Edge _Dnext
			{
				[Token(Token = "0x6001CED")]
				[Address(RVA = "0xFC00B8", Offset = "0xFC00B8", VA = "0xFC00B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CEE")]
				[Address(RVA = "0xFC00DC", Offset = "0xFC00DC", VA = "0xFC00DC")]
				set
				{
				}
			}

			[Token(Token = "0x170003A7")]
			internal Edge _Rnext
			{
				[Token(Token = "0x6001CEF")]
				[Address(RVA = "0xFC0100", Offset = "0xFC0100", VA = "0xFC0100")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001CF0")]
				[Address(RVA = "0xFC0124", Offset = "0xFC0124", VA = "0xFC0124")]
				set
				{
				}
			}

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xFBFE3C", Offset = "0xFBFE3C", VA = "0xFBFE3C")]
			internal static void EnsureFirst(ref Edge e)
			{
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0xFC0148", Offset = "0xFC0148", VA = "0xFC0148", Slot = "4")]
			public void Init(IPool pool)
			{
			}

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0xFC014C", Offset = "0xFC014C", VA = "0xFC014C", Slot = "5")]
			public void Reset(IPool pool)
			{
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xFC01EC", Offset = "0xFC01EC", VA = "0xFC01EC")]
			public Edge()
			{
			}
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xFBEE94", Offset = "0xFBEE94", VA = "0xFBEE94")]
		public static void Splice(Edge a, Edge b)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xFBE980", Offset = "0xFBE980", VA = "0xFBE980")]
		public static void MakeVertex(IPool pool, Edge eOrig, Vertex vNext)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xFBEA94", Offset = "0xFBEA94", VA = "0xFBEA94")]
		public static void MakeFace(IPool pool, Edge eOrig, Face fNext)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xFBE80C", Offset = "0xFBE80C", VA = "0xFBE80C")]
		public static Edge MakeEdge(IPool pool, Edge eNext)
		{
			return null;
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xFBF09C", Offset = "0xFBF09C", VA = "0xFBF09C")]
		public static void KillEdge(IPool pool, Edge eDel)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xFBECB4", Offset = "0xFBECB4", VA = "0xFBECB4")]
		public static void KillVertex(IPool pool, Vertex vDel, Vertex newOrg)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xFBEDA4", Offset = "0xFBEDA4", VA = "0xFBEDA4")]
		public static void KillFace(IPool pool, Face fDel, Face newLFace)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xFBFE70", Offset = "0xFBFE70", VA = "0xFBFE70")]
		public static float FaceArea(Face f)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000471")]
	internal struct PQHandle
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Invalid;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int _handle;
	}
	[Token(Token = "0x2000472")]
	internal class PriorityHeap<TValue> where TValue : class
	{
		[Token(Token = "0x2000473")]
		public delegate bool LessOrEqual(TValue lhs, TValue rhs);

		[Token(Token = "0x2000474")]
		protected class HandleElem
		{
			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal TValue _key;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int _node;

			[Token(Token = "0x6001D03")]
			public HandleElem()
			{
			}
		}

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LessOrEqual _leq;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] _nodes;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HandleElem[] _handles;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _size;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _max;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _freeList;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _initialized;

		[Token(Token = "0x170003A8")]
		public bool Empty
		{
			[Token(Token = "0x6001CF6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CF7")]
		public PriorityHeap(int initialSize, LessOrEqual leq)
		{
		}

		[Token(Token = "0x6001CF8")]
		private void FloatDown(int curr)
		{
		}

		[Token(Token = "0x6001CF9")]
		private void FloatUp(int curr)
		{
		}

		[Token(Token = "0x6001CFA")]
		public void Init()
		{
		}

		[Token(Token = "0x6001CFB")]
		public PQHandle Insert(TValue value)
		{
			return default(PQHandle);
		}

		[Token(Token = "0x6001CFC")]
		public TValue ExtractMin()
		{
			return null;
		}

		[Token(Token = "0x6001CFD")]
		public TValue Minimum()
		{
			return null;
		}

		[Token(Token = "0x6001CFE")]
		public void Remove(PQHandle handle)
		{
		}
	}
	[Token(Token = "0x2000475")]
	internal class PriorityQueue<TValue> where TValue : class
	{
		[Token(Token = "0x2000476")]
		private class StackItem
		{
			[Token(Token = "0x400190F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int p;

			[Token(Token = "0x4001910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int r;

			[Token(Token = "0x6001D0C")]
			public StackItem()
			{
			}
		}

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PriorityHeap<TValue>.LessOrEqual _leq;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PriorityHeap<TValue> _heap;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TValue[] _keys;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] _order;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _size;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _max;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _initialized;

		[Token(Token = "0x170003A9")]
		public bool Empty
		{
			[Token(Token = "0x6001D04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D05")]
		public PriorityQueue(int initialSize, PriorityHeap<TValue>.LessOrEqual leq)
		{
		}

		[Token(Token = "0x6001D06")]
		private static void Swap(ref int a, ref int b)
		{
		}

		[Token(Token = "0x6001D07")]
		public void Init()
		{
		}

		[Token(Token = "0x6001D08")]
		public PQHandle Insert(TValue value)
		{
			return default(PQHandle);
		}

		[Token(Token = "0x6001D09")]
		public TValue ExtractMin()
		{
			return null;
		}

		[Token(Token = "0x6001D0A")]
		public TValue Minimum()
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		public void Remove(PQHandle handle)
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class Tess
	{
		[Token(Token = "0x2000478")]
		internal class ActiveRegion : Pooled<ActiveRegion>
		{
			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal MeshUtils.Edge _eUp;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Dict<ActiveRegion>.Node _nodeUp;

			[Token(Token = "0x400192B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal int _windingNumber;

			[Token(Token = "0x400192C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal bool _inside;

			[Token(Token = "0x400192D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			internal bool _sentinel;

			[Token(Token = "0x400192E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			internal bool _dirty;

			[Token(Token = "0x400192F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			internal bool _fixUpperEdge;

			[Token(Token = "0x6001D42")]
			[Address(RVA = "0xFC46A0", Offset = "0xFC46A0", VA = "0xFC46A0", Slot = "4")]
			public void Init(IPool pool)
			{
			}

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xFC46A4", Offset = "0xFC46A4", VA = "0xFC46A4", Slot = "5")]
			public void Reset(IPool pool)
			{
			}

			[Token(Token = "0x6001D44")]
			[Address(RVA = "0xFC46D4", Offset = "0xFC46D4", VA = "0xFC46D4")]
			public ActiveRegion()
			{
			}
		}

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPool _pool;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vec3 _normal;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vec3 _sUnit;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vec3 _tUnit;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _bminX;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _bminY;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _bmaxX;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _bmaxY;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private WindingRule _windingRule;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dict<ActiveRegion> _dict;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PriorityQueue<MeshUtils.Vertex> _pq;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshUtils.Vertex _event;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CombineCallback _combineCallback;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ContourVertex[] _vertices;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _vertexCount;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] _elements;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _elementCount;

		[Token(Token = "0x4001923")]
		public const int Undef = -1;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float SUnitX;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float SUnitY;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float SentinelCoord;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool NoEmptyPolygons;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[Obsolete]
		public bool UsePooling;

		[Token(Token = "0x170003AA")]
		public Vec3 Normal
		{
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0xFC28C8", Offset = "0xFC28C8", VA = "0xFC28C8")]
			get
			{
				return default(Vec3);
			}
		}

		[Token(Token = "0x170003AB")]
		public ContourVertex[] Vertices
		{
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0xFC28D4", Offset = "0xFC28D4", VA = "0xFC28D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AC")]
		public int VertexCount
		{
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0xFC28DC", Offset = "0xFC28DC", VA = "0xFC28DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AD")]
		public int[] Elements
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0xFC28E4", Offset = "0xFC28E4", VA = "0xFC28E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		public int ElementCount
		{
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0xFC28EC", Offset = "0xFC28EC", VA = "0xFC28EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xFC0240", Offset = "0xFC0240", VA = "0xFC0240")]
		private ActiveRegion RegionBelow(ActiveRegion reg)
		{
			return null;
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xFC0268", Offset = "0xFC0268", VA = "0xFC0268")]
		private ActiveRegion RegionAbove(ActiveRegion reg)
		{
			return null;
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xFC0290", Offset = "0xFC0290", VA = "0xFC0290")]
		private bool EdgeLeq(ActiveRegion reg1, ActiveRegion reg2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xFC038C", Offset = "0xFC038C", VA = "0xFC038C")]
		private void DeleteRegion(ActiveRegion reg)
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xFC0450", Offset = "0xFC0450", VA = "0xFC0450")]
		private void FixUpperEdge(ActiveRegion reg, MeshUtils.Edge newEdge)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xFC04B0", Offset = "0xFC04B0", VA = "0xFC04B0")]
		private ActiveRegion TopLeftRegion(ActiveRegion reg)
		{
			return null;
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xFC0570", Offset = "0xFC0570", VA = "0xFC0570")]
		private ActiveRegion TopRightRegion(ActiveRegion reg)
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xFC05C4", Offset = "0xFC05C4", VA = "0xFC05C4")]
		private ActiveRegion AddRegionBelow(ActiveRegion regAbove, MeshUtils.Edge eNewUp)
		{
			return null;
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xFC06C8", Offset = "0xFC06C8", VA = "0xFC06C8")]
		private void ComputeWinding(ActiveRegion reg)
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xFC071C", Offset = "0xFC071C", VA = "0xFC071C")]
		private void FinishRegion(ActiveRegion reg)
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xFC0768", Offset = "0xFC0768", VA = "0xFC0768")]
		private MeshUtils.Edge FinishLeftRegions(ActiveRegion regFirst, ActiveRegion regLast)
		{
			return null;
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xFC0890", Offset = "0xFC0890", VA = "0xFC0890")]
		private void AddRightEdges(ActiveRegion regUp, MeshUtils.Edge eFirst, MeshUtils.Edge eLast, MeshUtils.Edge eTopLeft, bool cleanUp)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xFC0E48", Offset = "0xFC0E48", VA = "0xFC0E48")]
		private void SpliceMergeVertices(MeshUtils.Edge e1, MeshUtils.Edge e2)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xFC0E6C", Offset = "0xFC0E6C", VA = "0xFC0E6C")]
		private void VertexWeights(MeshUtils.Vertex isect, MeshUtils.Vertex org, MeshUtils.Vertex dst, out float w0, out float w1)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xFC0F5C", Offset = "0xFC0F5C", VA = "0xFC0F5C")]
		private void GetIntersectData(MeshUtils.Vertex isect, MeshUtils.Vertex orgUp, MeshUtils.Vertex dstUp, MeshUtils.Vertex orgLo, MeshUtils.Vertex dstLo)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xFC0A58", Offset = "0xFC0A58", VA = "0xFC0A58")]
		private bool CheckForRightSplice(ActiveRegion regUp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xFC1224", Offset = "0xFC1224", VA = "0xFC1224")]
		private bool CheckForLeftSplice(ActiveRegion regUp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xFC1398", Offset = "0xFC1398", VA = "0xFC1398")]
		private bool CheckForIntersect(ActiveRegion regUp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xFC0C0C", Offset = "0xFC0C0C", VA = "0xFC0C0C")]
		private void WalkDirtyRegions(ActiveRegion regUp)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xFC1AB4", Offset = "0xFC1AB4", VA = "0xFC1AB4")]
		private void ConnectRightVertex(ActiveRegion regUp, MeshUtils.Edge eBottomLeft)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xFC1CBC", Offset = "0xFC1CBC", VA = "0xFC1CBC")]
		private void ConnectLeftDegenerate(ActiveRegion regUp, MeshUtils.Vertex vEvent)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xFC1E8C", Offset = "0xFC1E8C", VA = "0xFC1E8C")]
		private void ConnectLeftVertex(MeshUtils.Vertex vEvent)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xFC1DC0", Offset = "0xFC1DC0", VA = "0xFC1DC0")]
		private void SweepEvent(MeshUtils.Vertex vEvent)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xFC2108", Offset = "0xFC2108", VA = "0xFC2108")]
		private void AddSentinel(float smin, float smax, float t)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xFC2258", Offset = "0xFC2258", VA = "0xFC2258")]
		private void InitEdgeDict()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xFC2348", Offset = "0xFC2348", VA = "0xFC2348")]
		private void DoneEdgeDict()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xFC23D0", Offset = "0xFC23D0", VA = "0xFC23D0")]
		private void RemoveDegenerateEdges()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xFC2510", Offset = "0xFC2510", VA = "0xFC2510")]
		private void InitPriorityQ()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xFC2710", Offset = "0xFC2710", VA = "0xFC2710")]
		private void DonePriorityQ()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xFC271C", Offset = "0xFC271C", VA = "0xFC271C")]
		private void RemoveDegenerateFaces()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xFC27AC", Offset = "0xFC27AC", VA = "0xFC27AC")]
		protected void ComputeInterior()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xFC28F4", Offset = "0xFC28F4", VA = "0xFC28F4")]
		public Tess()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xFC2954", Offset = "0xFC2954", VA = "0xFC2954")]
		public Tess(IPool pool)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xFC2A8C", Offset = "0xFC2A8C", VA = "0xFC2A8C")]
		private void ComputeNormal(ref Vec3 norm)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xFC3174", Offset = "0xFC3174", VA = "0xFC3174")]
		private void CheckOrientation()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xFC3270", Offset = "0xFC3270", VA = "0xFC3270")]
		private void ProjectPolygon()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xFC3548", Offset = "0xFC3548", VA = "0xFC3548")]
		private void TessellateMonoRegion(MeshUtils.Face face)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xFC3734", Offset = "0xFC3734", VA = "0xFC3734")]
		private void TessellateInterior()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xFC3794", Offset = "0xFC3794", VA = "0xFC3794")]
		private void DiscardExterior()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xFC37F4", Offset = "0xFC37F4", VA = "0xFC37F4")]
		private void SetWindingNumber(int value, bool keepOnlyBoundary)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xFC38A4", Offset = "0xFC38A4", VA = "0xFC38A4")]
		private int GetNeighbourFace(MeshUtils.Edge edge)
		{
			return default(int);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xFC38DC", Offset = "0xFC38DC", VA = "0xFC38DC")]
		private void OutputPolymesh(ElementType elementType, int polySize)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xFC3D28", Offset = "0xFC3D28", VA = "0xFC3D28")]
		private void OutputContours()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xFC3F80", Offset = "0xFC3F80", VA = "0xFC3F80")]
		private float SignedArea(IList<ContourVertex> vertices)
		{
			return default(float);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xFC41AC", Offset = "0xFC41AC", VA = "0xFC41AC")]
		public void AddContour(ContourVertex[] vertices, ContourOrientation forceOrientation = ContourOrientation.Original)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xFC4538", Offset = "0xFC4538", VA = "0xFC4538")]
		public void AddContour(IList<ContourVertex> vertices, ContourOrientation forceOrientation = ContourOrientation.Original)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xFC41B0", Offset = "0xFC41B0", VA = "0xFC41B0")]
		private void AddContourInternal(IList<ContourVertex> vertices, ContourOrientation forceOrientation)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xFC453C", Offset = "0xFC453C", VA = "0xFC453C")]
		public void Tessellate(WindingRule windingRule = WindingRule.EvenOdd, ElementType elementType = ElementType.Polygons, int polySize = 3, [Optional] CombineCallback combineCallback, [Optional] Vec3 normal)
		{
		}
	}
	[Token(Token = "0x2000479")]
	public enum WindingRule
	{
		[Token(Token = "0x4001931")]
		EvenOdd,
		[Token(Token = "0x4001932")]
		NonZero,
		[Token(Token = "0x4001933")]
		Positive,
		[Token(Token = "0x4001934")]
		Negative,
		[Token(Token = "0x4001935")]
		AbsGeqTwo
	}
	[Token(Token = "0x200047A")]
	public enum ElementType
	{
		[Token(Token = "0x4001937")]
		Polygons,
		[Token(Token = "0x4001938")]
		ConnectedPolygons,
		[Token(Token = "0x4001939")]
		BoundaryContours
	}
	[Token(Token = "0x200047B")]
	public enum ContourOrientation
	{
		[Token(Token = "0x400193B")]
		Original,
		[Token(Token = "0x400193C")]
		Clockwise,
		[Token(Token = "0x400193D")]
		CounterClockwise
	}
	[Token(Token = "0x200047C")]
	public struct ContourVertex
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vec3 Position;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public object Data;

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xFC46DC", Offset = "0xFC46DC", VA = "0xFC46DC")]
		public ContourVertex(Vec3 position, [Optional] object data)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xFC46EC", Offset = "0xFC46EC", VA = "0xFC46EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200047D")]
	public delegate object CombineCallback(Vec3 position, object[] data, float[] weights);
}
namespace Doozy.Integrations.Playmaker
{
	[Token(Token = "0x200047E")]
	public class PlaymakerEventDispatcher : MonoBehaviour
	{
		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xFC4914", Offset = "0xFC4914", VA = "0xFC4914")]
		public PlaymakerEventDispatcher()
		{
		}
	}
}
namespace Doozy.Engine
{
	[Token(Token = "0x200047F")]
	public enum Language
	{
		[Token(Token = "0x4001941")]
		Unknown,
		[Token(Token = "0x4001942")]
		English
	}
	[Token(Token = "0x2000480")]
	public enum Module
	{
		[Token(Token = "0x4001944")]
		Unknown,
		[Token(Token = "0x4001945")]
		Nody,
		[Token(Token = "0x4001946")]
		Touchy,
		[Token(Token = "0x4001947")]
		Soundy,
		[Token(Token = "0x4001948")]
		UI
	}
	[Token(Token = "0x2000481")]
	public enum SetupMode
	{
		[Token(Token = "0x400194A")]
		Basic,
		[Token(Token = "0x400194B")]
		Touch,
		[Token(Token = "0x400194C")]
		Mouse,
		[Token(Token = "0x400194D")]
		Controller,
		[Token(Token = "0x400194E")]
		VR,
		[Token(Token = "0x400194F")]
		Advanced
	}
	[Token(Token = "0x2000482")]
	public enum SystemGameEvent
	{
		[Token(Token = "0x4001951")]
		ActivateLoadedScenes,
		[Token(Token = "0x4001952")]
		ApplicationQuit,
		[Token(Token = "0x4001953")]
		Back
	}
	[Token(Token = "0x2000483")]
	public class Coroutiner : MonoBehaviour
	{
		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Coroutiner s_instance;

		[Token(Token = "0x170003AF")]
		public static Coroutiner Instance
		{
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0xFC491C", Offset = "0xFC491C", VA = "0xFC491C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B0")]
		public static bool ApplicationIsQuitting
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xFC4B90", Offset = "0xFC4B90", VA = "0xFC4B90")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xFC4BD8", Offset = "0xFC4BD8", VA = "0xFC4BD8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xFC4C24", Offset = "0xFC4C24", VA = "0xFC4C24")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void RunOnStart()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xFC4C64", Offset = "0xFC4C64", VA = "0xFC4C64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xFC4D74", Offset = "0xFC4D74", VA = "0xFC4D74")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xFC4DB8", Offset = "0xFC4DB8", VA = "0xFC4DB8")]
		public Coroutine StartLocalCoroutine(IEnumerator enumerator)
		{
			return null;
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xFC4DC0", Offset = "0xFC4DC0", VA = "0xFC4DC0")]
		public void StopLocalCoroutine(Coroutine coroutine)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xFC4DC8", Offset = "0xFC4DC8", VA = "0xFC4DC8")]
		public void StopLocalCoroutine(IEnumerator enumerator)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xFC4DD0", Offset = "0xFC4DD0", VA = "0xFC4DD0")]
		public void StopAllLocalCoroutines()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xFC4DD8", Offset = "0xFC4DD8", VA = "0xFC4DD8")]
		public static Coroutine Start(IEnumerator enumerator)
		{
			return null;
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xFC4E70", Offset = "0xFC4E70", VA = "0xFC4E70")]
		public static void Stop(IEnumerator enumerator)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xFC4F04", Offset = "0xFC4F04", VA = "0xFC4F04")]
		public static void Stop(Coroutine coroutine)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xFC4F98", Offset = "0xFC4F98", VA = "0xFC4F98")]
		public static void StopAll()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xFC5020", Offset = "0xFC5020", VA = "0xFC5020")]
		public Coroutiner()
		{
		}
	}
	[Token(Token = "0x2000484")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Listeners/Game Event Listener", 13)]
	public class GameEventListener : MonoBehaviour
	{
		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugMode;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StringEvent Event;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string GameEvent;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ListenForAllGameEvents;

		[Token(Token = "0x170003B1")]
		private bool DebugComponent
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0xFC5028", Offset = "0xFC5028", VA = "0xFC5028")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xFC5060", Offset = "0xFC5060", VA = "0xFC5060")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xFC5100", Offset = "0xFC5100", VA = "0xFC5100")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xFC5130", Offset = "0xFC5130", VA = "0xFC5130")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xFC5268", Offset = "0xFC5268", VA = "0xFC5268")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xFC5134", Offset = "0xFC5134", VA = "0xFC5134")]
		private void RegisterListener()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xFC526C", Offset = "0xFC526C", VA = "0xFC526C")]
		private void UnregisterListener()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xFC53A0", Offset = "0xFC53A0", VA = "0xFC53A0")]
		private void OnMessage(GameEventMessage message)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xFC53F8", Offset = "0xFC53F8", VA = "0xFC53F8")]
		private void InvokeEvent(GameEventMessage message)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xFC5540", Offset = "0xFC5540", VA = "0xFC5540")]
		private static GameEventListener AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xFC5548", Offset = "0xFC5548", VA = "0xFC5548")]
		private static GameEventListener AddToScene(GameObject parent, bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xFC56DC", Offset = "0xFC56DC", VA = "0xFC56DC")]
		public GameEventListener()
		{
		}
	}
	[Token(Token = "0x2000485")]
	[DefaultExecutionOrder(-200)]
	[DisallowMultipleComponent]
	[AddComponentMenu("Doozy/Managers/Game Event Manager", 13)]
	public class GameEventManager : MonoBehaviour
	{
		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameEventManager s_instance;

		[Token(Token = "0x170003B2")]
		public static GameEventManager Instance
		{
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xFC56EC", Offset = "0xFC56EC", VA = "0xFC56EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private static bool ApplicationIsQuitting
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xFC58DC", Offset = "0xFC58DC", VA = "0xFC58DC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xFC5924", Offset = "0xFC5924", VA = "0xFC5924")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		private bool DebugComponent
		{
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xFC5970", Offset = "0xFC5970", VA = "0xFC5970")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xFC56E4", Offset = "0xFC56E4", VA = "0xFC56E4")]
		protected GameEventManager()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xFC5990", Offset = "0xFC5990", VA = "0xFC5990")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void RunOnStart()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xFC59D0", Offset = "0xFC59D0", VA = "0xFC59D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xFC5BB8", Offset = "0xFC5BB8", VA = "0xFC5BB8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xFC5854", Offset = "0xFC5854", VA = "0xFC5854")]
		public static GameEventManager AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xFC5BFC", Offset = "0xFC5BFC", VA = "0xFC5BFC")]
		public static void ProcessGameEvent(GameEventMessage message, bool debug = false)
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class GameEventMessage : Message
	{
		[Token(Token = "0x400195C")]
		private const string NO_GAME_EVENT = "None";

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string EventName;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Source;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object CustomObject;

		[Token(Token = "0x170003B5")]
		public bool HasCustomObject
		{
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xFC5E74", Offset = "0xFC5E74", VA = "0xFC5E74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B6")]
		public bool HasGameEvent
		{
			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xFC54E0", Offset = "0xFC54E0", VA = "0xFC54E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B7")]
		public bool HasSource
		{
			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xFC5ED4", Offset = "0xFC5ED4", VA = "0xFC5ED4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B8")]
		public bool IsSystemEvent
		{
			[Token(Token = "0x6001D74")]
			[Address(RVA = "0xFC5F34", Offset = "0xFC5F34", VA = "0xFC5F34")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xFC5F3C", Offset = "0xFC5F3C", VA = "0xFC5F3C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xFC5F48", Offset = "0xFC5F48", VA = "0xFC5F48")]
		public GameEventMessage(SystemGameEvent systemGameEvent)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xFC6028", Offset = "0xFC6028", VA = "0xFC6028")]
		public GameEventMessage(string gameEvent)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xFC60C4", Offset = "0xFC60C4", VA = "0xFC60C4")]
		public GameEventMessage(GameObject source)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xFC6174", Offset = "0xFC6174", VA = "0xFC6174")]
		public GameEventMessage(SystemGameEvent systemGameEvent, GameObject source, [Optional] UnityEngine.Object customObject)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xFC625C", Offset = "0xFC625C", VA = "0xFC625C")]
		public GameEventMessage(string gameEvent, GameObject source)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xFC62FC", Offset = "0xFC62FC", VA = "0xFC62FC")]
		public GameEventMessage(GameObject source, UnityEngine.Object customObject)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xFC63B0", Offset = "0xFC63B0", VA = "0xFC63B0")]
		public GameEventMessage(string gameEvent, UnityEngine.Object customObject)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xFC6450", Offset = "0xFC6450", VA = "0xFC6450")]
		public GameEventMessage(string gameEvent, GameObject source, UnityEngine.Object customObject)
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xFC64FC", Offset = "0xFC64FC", VA = "0xFC64FC")]
		public static void SendEvent(SystemGameEvent systemGameEvent)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xFC660C", Offset = "0xFC660C", VA = "0xFC660C")]
		public static void SendEvent(string gameEvent)
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xFC666C", Offset = "0xFC666C", VA = "0xFC666C")]
		public static void SendEvent(GameObject source)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xFC66CC", Offset = "0xFC66CC", VA = "0xFC66CC")]
		public static void SendEvent(SystemGameEvent systemGameEvent, GameObject source)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xFC6740", Offset = "0xFC6740", VA = "0xFC6740")]
		public static void SendEvent(string gameEvent, GameObject source)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xFC67B0", Offset = "0xFC67B0", VA = "0xFC67B0")]
		public static void SendEvent(string gameEvent, UnityEngine.Object customObject)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xFC6820", Offset = "0xFC6820", VA = "0xFC6820")]
		public static void SendEvent(GameObject source, UnityEngine.Object customObject)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xFC6890", Offset = "0xFC6890", VA = "0xFC6890")]
		public static void SendEvent(string gameEvent, GameObject source, UnityEngine.Object customObject)
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xFC6908", Offset = "0xFC6908", VA = "0xFC6908")]
		public static void SendEvents(List<string> gameEvents, [Optional] GameObject source, [Optional] UnityEngine.Object customObject)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xFC655C", Offset = "0xFC655C", VA = "0xFC655C")]
		private static void SendEvent(GameEventMessage gameEventMessage)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000487")]
	public class MColor
	{
		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color M50;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color M100;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color M200;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color M300;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color M400;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color M500;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color M600;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color M700;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color M800;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color M900;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Color A100;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Color A200;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color A400;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Color A700;

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xFC6A5C", Offset = "0xFC6A5C", VA = "0xFC6A5C")]
		public MColor(string name, Color m50, Color m100, Color m200, Color m300, Color m400, Color m500, Color m600, Color m700, Color m800, Color m900, Color a100, Color a200, Color a400, Color a700)
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xFC6BA8", Offset = "0xFC6BA8", VA = "0xFC6BA8")]
		public MColor(string name, string m50Hex, string m100Hex, string m200Hex, string m300Hex, string m400Hex, string m500Hex, string m600Hex, string m700Hex, string m800Hex, string m900Hex, string a100Hex, string a200Hex, string a400Hex, string a700Hex)
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class Message
	{
		[Token(Token = "0x2000489")]
		public delegate void OnMessageHandleDelegate(Type callerType, Type handlerType, Type messageType, string messageName, string handlerMethodName);

		[Token(Token = "0x4001970")]
		private const string TYPELESS_MESSAGE_PREFIX = "typeless ";

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, List<Delegate>> Handlers;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OnMessageHandleDelegate OnMessageHandle;

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xFC6020", Offset = "0xFC6020", VA = "0xFC6020")]
		protected Message()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xFC6D24", Offset = "0xFC6D24", VA = "0xFC6D24")]
		public static void AddListener(string messageName, Action callback)
		{
		}

		[Token(Token = "0x6001D8C")]
		public static void AddListener<T>(Action<T> callback) where T : Message
		{
		}

		[Token(Token = "0x6001D8D")]
		public static void AddListener<T>(string messageName, Action<T> callback) where T : Message
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xFC6FBC", Offset = "0xFC6FBC", VA = "0xFC6FBC")]
		public static void RemoveListener(string messageName, Action callback)
		{
		}

		[Token(Token = "0x6001D8F")]
		public static void RemoveListener<T>(Action<T> callback) where T : Message
		{
		}

		[Token(Token = "0x6001D90")]
		public static void RemoveListener<T>(string messageName, Action<T> callback) where T : Message
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xFC7208", Offset = "0xFC7208", VA = "0xFC7208")]
		public static void Send(string messageName)
		{
		}

		[Token(Token = "0x6001D92")]
		public static void Send<T>(T message) where T : Message
		{
		}

		[Token(Token = "0x6001D93")]
		public static void Send<T>(string messageName, T message) where T : Message
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xFC6DB4", Offset = "0xFC6DB4", VA = "0xFC6DB4")]
		private static void RegisterListener(string messageName, Delegate callback)
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xFC704C", Offset = "0xFC704C", VA = "0xFC704C")]
		private static void UnregisterListener(string messageName, Delegate callback)
		{
		}

		[Token(Token = "0x6001D96")]
		private static void SendMessage<T>(string messageName, T e) where T : Message
		{
		}
	}
	[Token(Token = "0x200048B")]
	public static class MessageExtensions
	{
		[Token(Token = "0x6001D9E")]
		public static void Send<T>(this T self) where T : Message
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048C")]
	public struct RangedFloat
	{
		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float MinValue;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float MaxValue;
	}
}
namespace Doozy.Engine.Utils
{
	[Token(Token = "0x200048D")]
	public static class AssetUtils
	{
		[Token(Token = "0x6001D9F")]
		public static T GetScriptableObject<T>(string fileName, string resourcesPath, bool saveAssetDatabase, bool refreshAssetDatabase) where T : ScriptableObject
		{
			return null;
		}

		[Token(Token = "0x6001DA0")]
		public static T GetResource<T>(string resourcesPath, string fileName) where T : ScriptableObject
		{
			return null;
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xFC7558", Offset = "0xFC7558", VA = "0xFC7558")]
		public static string CleanPath(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x200048E")]
	public static class ColorUtils
	{
		[Token(Token = "0x200048F")]
		public enum Conversions
		{
			[Token(Token = "0x4001977")]
			RGB_TO_RGB,
			[Token(Token = "0x4001978")]
			HEX_TO_RGB,
			[Token(Token = "0x4001979")]
			RGB_TO_HEX,
			[Token(Token = "0x400197A")]
			RGB_TO_FGC,
			[Token(Token = "0x400197B")]
			HSL_TO_RGB,
			[Token(Token = "0x400197C")]
			RGB_TO_HSL,
			[Token(Token = "0x400197D")]
			HSV_TO_RGB,
			[Token(Token = "0x400197E")]
			RGB_TO_HSV,
			[Token(Token = "0x400197F")]
			CMY_TO_RGB,
			[Token(Token = "0x4001980")]
			RGB_TO_CMY,
			[Token(Token = "0x4001981")]
			CMYK_TO_RGB,
			[Token(Token = "0x4001982")]
			RGB_TO_CMYK,
			[Token(Token = "0x4001983")]
			XYZ_TO_RGB,
			[Token(Token = "0x4001984")]
			RGB_TO_XYZ,
			[Token(Token = "0x4001985")]
			Yxy_TO_RGB,
			[Token(Token = "0x4001986")]
			RGB_TO_Yxy,
			[Token(Token = "0x4001987")]
			LAB_TO_RGB,
			[Token(Token = "0x4001988")]
			RGB_TO_LAB
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xFC7638", Offset = "0xFC7638", VA = "0xFC7638")]
		public static Vector3 HUEtoRGB(float H)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xFC7678", Offset = "0xFC7678", VA = "0xFC7678")]
		public static RGB HSLtoRGB(HSL values)
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xFC78C0", Offset = "0xFC78C0", VA = "0xFC78C0")]
		public static HSL RGBtoHSL(RGB values)
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xFC7AFC", Offset = "0xFC7AFC", VA = "0xFC7AFC")]
		public static RGB HSVtoRGB(HSV values)
		{
			return null;
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xFC7D18", Offset = "0xFC7D18", VA = "0xFC7D18")]
		public static HSV RGBtoHSV(RGB values)
		{
			return null;
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xFC7F2C", Offset = "0xFC7F2C", VA = "0xFC7F2C")]
		public static RGB CMYtoRGB(CMY values)
		{
			return null;
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xFC800C", Offset = "0xFC800C", VA = "0xFC800C")]
		public static CMY RGBtoCMY(RGB values)
		{
			return null;
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xFC80EC", Offset = "0xFC80EC", VA = "0xFC80EC")]
		public static RGB CMYKtoRGB(CMYK values)
		{
			return null;
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xFC81F0", Offset = "0xFC81F0", VA = "0xFC81F0")]
		public static CMYK RGBtoCMYK(RGB values)
		{
			return null;
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xFC8394", Offset = "0xFC8394", VA = "0xFC8394")]
		public static RGB XYZtoRGB(XYZ values)
		{
			return null;
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xFC85A8", Offset = "0xFC85A8", VA = "0xFC85A8")]
		public static XYZ RGBtoXYZ(RGB values)
		{
			return null;
		}
	}
	[Token(Token = "0x2000490")]
	public static class DataUtils
	{
		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xFC86FC", Offset = "0xFC86FC", VA = "0xFC86FC")]
		public static void PlayerPrefsSetInt(string key, int value)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xFC8704", Offset = "0xFC8704", VA = "0xFC8704")]
		public static void PlayerPrefsSetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xFC870C", Offset = "0xFC870C", VA = "0xFC870C")]
		public static void PlayerPrefsSetString(string key, string value)
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xFC8714", Offset = "0xFC8714", VA = "0xFC8714")]
		public static int PlayerPrefsGetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xFC871C", Offset = "0xFC871C", VA = "0xFC871C")]
		public static int PlayerPrefsGetInt(string key, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xFC8724", Offset = "0xFC8724", VA = "0xFC8724")]
		public static float PlayerPrefsGetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xFC872C", Offset = "0xFC872C", VA = "0xFC872C")]
		public static float PlayerPrefsGetFloat(string key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xFC8734", Offset = "0xFC8734", VA = "0xFC8734")]
		public static string PlayerPrefsGetString(string key)
		{
			return null;
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xFC873C", Offset = "0xFC873C", VA = "0xFC873C")]
		public static string PlayerPrefsGetString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xFC8744", Offset = "0xFC8744", VA = "0xFC8744")]
		public static void PlayerPrefsDeleteKey(string key)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xFC874C", Offset = "0xFC874C", VA = "0xFC874C")]
		public static void PlayerPrefsDeleteAll()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xFC8754", Offset = "0xFC8754", VA = "0xFC8754")]
		public static void PlayerPrefsSave()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xFC875C", Offset = "0xFC875C", VA = "0xFC875C")]
		public static bool PlayerPrefsHasKey(string key)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000491")]
	public class DColor
	{
		[Token(Token = "0x4001989")]
		private const string UNNAMED_COLOR = "Unnamed Color";

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ColorName;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color Light;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color Normal;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color Dark;

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xFC8764", Offset = "0xFC8764", VA = "0xFC8764")]
		private static Color GetLightColor(Color normalColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xFC8804", Offset = "0xFC8804", VA = "0xFC8804")]
		private static Color GetDarkColor(Color normalColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xFC88A4", Offset = "0xFC88A4", VA = "0xFC88A4")]
		public DColor(Color normal)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xFC8968", Offset = "0xFC8968", VA = "0xFC8968")]
		public DColor(string colorName)
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xFC89BC", Offset = "0xFC89BC", VA = "0xFC89BC")]
		public DColor(string colorName, Color normal)
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xFC8A58", Offset = "0xFC8A58", VA = "0xFC8A58")]
		public DColor(Color light, Color normal, Color dark)
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xFC8B2C", Offset = "0xFC8B2C", VA = "0xFC8B2C")]
		public DColor(string colorName, Color light, Color normal, Color dark)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xFC8BC8", Offset = "0xFC8BC8", VA = "0xFC8BC8")]
		public DColor(DColor dColor)
		{
		}
	}
	[Token(Token = "0x2000492")]
	public static class DoozyExecutionOrder
	{
		[Token(Token = "0x400198E")]
		private const int COMPONENT = -100;

		[Token(Token = "0x400198F")]
		private const int MANAGER = -200;

		[Token(Token = "0x4001990")]
		public const int BACK_BUTTON = -200;

		[Token(Token = "0x4001991")]
		public const int COLOR_TARGET_IMAGE = -100;

		[Token(Token = "0x4001992")]
		public const int COLOR_TARGET_PARTICLE_SYSTEM = -100;

		[Token(Token = "0x4001993")]
		public const int COLOR_TARGET_RAW_IMAGE = -100;

		[Token(Token = "0x4001994")]
		public const int COLOR_TARGET_SPRITE_RENDERER = -100;

		[Token(Token = "0x4001995")]
		public const int COLOR_TARGET_TEXT = -100;

		[Token(Token = "0x4001996")]
		public const int COLOR_TARGET_TEXTMESHPRO = -100;

		[Token(Token = "0x4001997")]
		public const int COLOR_TARGET_SELECTABLE = -100;

		[Token(Token = "0x4001998")]
		public const int COLOR_TARGET_UNITY_EVENT = -100;

		[Token(Token = "0x4001999")]
		public const int FONT_TARGET_TEXT = -100;

		[Token(Token = "0x400199A")]
		public const int FONT_TARGET_TEXTMESHPRO = -100;

		[Token(Token = "0x400199B")]
		public const int GAME_EVENT_LISTENER = -100;

		[Token(Token = "0x400199C")]
		public const int GAME_EVENT_MANAGER = -200;

		[Token(Token = "0x400199D")]
		public const int GESTURE_LISTENER = -100;

		[Token(Token = "0x400199E")]
		public const int GRAPH_CONTROLLER = -100;

		[Token(Token = "0x400199F")]
		public const int KEY_TO_ACTION = -100;

		[Token(Token = "0x40019A0")]
		public const int KEY_TO_GAME_EVENT = -100;

		[Token(Token = "0x40019A1")]
		public const int ORIENTATION_DETECTOR = -100;

		[Token(Token = "0x40019A2")]
		public const int PROGRESS_TARGET_ACTION = -99;

		[Token(Token = "0x40019A3")]
		public const int PROGRESS_TARGET_ANIMATOR = -99;

		[Token(Token = "0x40019A4")]
		public const int PROGRESS_TARGET_AUDIOMIXERGROUP = -99;

		[Token(Token = "0x40019A5")]
		public const int PROGRESS_TARGET_IMAGE = -99;

		[Token(Token = "0x40019A6")]
		public const int PROGRESS_TARGET_TEXT = -99;

		[Token(Token = "0x40019A7")]
		public const int PROGRESS_TARGET_TEXTMESHPRO = -99;

		[Token(Token = "0x40019A8")]
		public const int PROGRESSOR = -100;

		[Token(Token = "0x40019A9")]
		public const int PROGRESSOR_GROUP = -100;

		[Token(Token = "0x40019AA")]
		public const int RADIAL_LAYOUT = -98;

		[Token(Token = "0x40019AB")]
		public const int SCENE_DIRECTOR = -100;

		[Token(Token = "0x40019AC")]
		public const int SCENE_LOADER = -100;

		[Token(Token = "0x40019AD")]
		public const int SOUNDY_CONTROLLER = -100;

		[Token(Token = "0x40019AE")]
		public const int SOUNDY_MANAGER = -200;

		[Token(Token = "0x40019AF")]
		public const int SOUNDY_POOLER = -100;

		[Token(Token = "0x40019B0")]
		public const int SPRITE_TARGET_IMAGE = -100;

		[Token(Token = "0x40019B1")]
		public const int SPRITE_TARGET_SELECTABLE = -100;

		[Token(Token = "0x40019B2")]
		public const int SPRITE_TARGET_SPRITE_RENDERER = -100;

		[Token(Token = "0x40019B3")]
		public const int SPRITE_TARGET_UNITY_EVENT = -100;

		[Token(Token = "0x40019B4")]
		public const int TEXTURE_TARGET_RAW_IMAGE = -100;

		[Token(Token = "0x40019B5")]
		public const int TEXTURE_TARGET_UNITY_EVENT = -100;

		[Token(Token = "0x40019B6")]
		public const int THEME_MANAGER = -200;

		[Token(Token = "0x40019B7")]
		public const int TOUCH_DETECTOR = -200;

		[Token(Token = "0x40019B8")]
		public const int UIBUTTON = -100;

		[Token(Token = "0x40019B9")]
		public const int UIBUTTON_LISTENER = -100;

		[Token(Token = "0x40019BA")]
		public const int UICANVAS = -100;

		[Token(Token = "0x40019BB")]
		public const int UIDRAWER = -100;

		[Token(Token = "0x40019BC")]
		public const int UIDRAWER_LISTENER = -100;

		[Token(Token = "0x40019BD")]
		public const int UIIMAGE = -100;

		[Token(Token = "0x40019BE")]
		public const int UIPOPUP = -100;

		[Token(Token = "0x40019BF")]
		public const int UIPOPUP_MANAGER = -200;

		[Token(Token = "0x40019C0")]
		public const int UITOGGLE = -100;

		[Token(Token = "0x40019C1")]
		public const int UIVIEW = -100;

		[Token(Token = "0x40019C2")]
		public const int UIVIEW_LISTENER = -100;
	}
	[Serializable]
	[Token(Token = "0x2000493")]
	public class DoozyPath : ScriptableObject
	{
		[Token(Token = "0x2000494")]
		public enum ComponentName
		{
			[Token(Token = "0x4001A20")]
			Soundy,
			[Token(Token = "0x4001A21")]
			Themes,
			[Token(Token = "0x4001A22")]
			UIButton,
			[Token(Token = "0x4001A23")]
			UICanvas,
			[Token(Token = "0x4001A24")]
			UIDrawer,
			[Token(Token = "0x4001A25")]
			UIPopup,
			[Token(Token = "0x4001A26")]
			UIView
		}

		[Token(Token = "0x40019C3")]
		private const string ASSETS_PATH = "Assets/";

		[Token(Token = "0x40019C4")]
		private const string DATA = "Data";

		[Token(Token = "0x40019C5")]
		private const string DATABASE = "Database";

		[Token(Token = "0x40019C6")]
		private const string DOOZY = "Doozy";

		[Token(Token = "0x40019C7")]
		private const string EDITOR = "Editor";

		[Token(Token = "0x40019C8")]
		private const string ENGINE = "Engine";

		[Token(Token = "0x40019C9")]
		private const string FONTS = "Fonts";

		[Token(Token = "0x40019CA")]
		private const string GUI = "GUI";

		[Token(Token = "0x40019CB")]
		private const string IMAGES = "Images";

		[Token(Token = "0x40019CC")]
		private const string INTERNAL = "Internal";

		[Token(Token = "0x40019CD")]
		private const string NODY = "Nody";

		[Token(Token = "0x40019CE")]
		private const string RESOURCES = "Resources";

		[Token(Token = "0x40019CF")]
		private const string SETTINGS = "Settings";

		[Token(Token = "0x40019D0")]
		private const string SKINS = "Skins";

		[Token(Token = "0x40019D1")]
		private const string SOUNDY = "Soundy";

		[Token(Token = "0x40019D2")]
		private const string THEMES = "Themes";

		[Token(Token = "0x40019D3")]
		private const string TEMPLATES = "Templates";

		[Token(Token = "0x40019D4")]
		private const string TOUCHY = "Touchy";

		[Token(Token = "0x40019D5")]
		private const string UI = "UI";

		[Token(Token = "0x40019D6")]
		private const string UIBUTTON = "UIButton";

		[Token(Token = "0x40019D7")]
		private const string UICANVAS = "UICanvas";

		[Token(Token = "0x40019D8")]
		private const string UIDRAWER = "UIDrawer";

		[Token(Token = "0x40019D9")]
		private const string UIPOPUP = "UIPopup";

		[Token(Token = "0x40019DA")]
		private const string UITOGGLE = "UITOGGLE";

		[Token(Token = "0x40019DB")]
		private const string UIVIEW = "UIView";

		[Token(Token = "0x40019DC")]
		private const string UTILS = "Utils";

		[Token(Token = "0x40019DD")]
		public const string UIANIMATIONS = "UIAnimations";

		[Token(Token = "0x40019DE")]
		private const string HIDE = "Hide";

		[Token(Token = "0x40019DF")]
		private const string LOOP = "Loop";

		[Token(Token = "0x40019E0")]
		private const string PUNCH = "Punch";

		[Token(Token = "0x40019E1")]
		private const string SHOW = "Show";

		[Token(Token = "0x40019E2")]
		private const string STATE = "State";

		[Token(Token = "0x40019E3")]
		public const string SOUNDY_DATABASE = "SoundyDatabase";

		[Token(Token = "0x40019E4")]
		public const string THEMES_DATABASE = "ThemesDatabase";

		[Token(Token = "0x40019E5")]
		public const string UIBUTTON_DATABASE = "UIButtonDatabase";

		[Token(Token = "0x40019E6")]
		public const string UICANVAS_DATABASE = "UICanvasDatabase";

		[Token(Token = "0x40019E7")]
		public const string UIDRAWER_DATABASE = "UIDrawerDatabase";

		[Token(Token = "0x40019E8")]
		public const string UIPOPUP_DATABASE = "UIPopupDatabase";

		[Token(Token = "0x40019E9")]
		public const string UIVIEW_DATABASE = "UIViewDatabase";

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string DOOZY_PATH;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string EDITOR_PATH;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string ENGINE_PATH;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string EDITOR_FONTS_PATH;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string EDITOR_GUI_PATH;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string EDITOR_IMAGES_PATH;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string EDITOR_INTERNAL_PATH;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string EDITOR_SETTINGS_PATH;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string EDITOR_SKINS_PATH;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string EDITOR_NODY_PATH;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string EDITOR_NODY_IMAGES_PATH;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string EDITOR_NODY_SKINS_PATH;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string EDITOR_NODY_SETTINGS_PATH;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string EDITOR_NODY_UTILS_PATH;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string ENGINE_NODY_PATH;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string ENGINE_NODY_RESOURCES_PATH;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string ENGINE_SOUNDY_PATH;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string ENGINE_SOUNDY_RESOURCES_PATH;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static string ENGINE_TOUCHY_PATH;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static string ENGINE_TOUCHY_RESOURCES_PATH;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static string ENGINE_THEMES_PATH;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static string ENGINE_THEMES_RESOURCES_PATH;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static string ENGINE_RESOURCES_PATH;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static string ENGINE_RESOURCES_DATA_PATH;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static string ENGINE_RESOURCES_DATA_SOUNDY_PATH;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static string ENGINE_RESOURCES_DATA_UIBUTTON_PATH;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static string ENGINE_RESOURCES_DATA_UICANVAS_PATH;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static string ENGINE_RESOURCES_DATA_UIDRAWER_PATH;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static string ENGINE_RESOURCES_DATA_UIPOPUP_PATH;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static string ENGINE_RESOURCES_DATA_UIVIEW_PATH;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static string ENGINE_RESOURCES_DATA_THEMES_PATH;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static string ENGINE_UI_PATH;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static string ENGINE_UI_RESOURCES_PATH;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static string UIANIMATIONS_RESOURCES_PATH;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public static string HIDE_UIANIMATIONS_RESOURCES_PATH;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public static string LOOP_UIANIMATIONS_RESOURCES_PATH;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public static string PUNCH_UIANIMATIONS_RESOURCES_PATH;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public static string SHOW_UIANIMATIONS_RESOURCES_PATH;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public static string STATE_UIANIMATIONS_RESOURCES_PATH;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public static string UIBUTTON_PATH;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public static string UIBUTTON_RESOURCES_PATH;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public static string UICANVAS_PATH;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public static string UICANVAS_RESOURCES_PATH;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public static string UIDRAWER_PATH;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public static string UIDRAWER_RESOURCES_PATH;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public static string UIPOPUP_PATH;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public static string UIPOPUP_RESOURCES_PATH;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public static string UIVIEW_PATH;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public static string UIVIEW_RESOURCES_PATH;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public static string UITOGGLE_PATH;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public static string UITOGGLE_RESOURCES_PATH;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public static string ENGINE_UTILS_PATH;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private static string s_basePath;

		[Token(Token = "0x170003B9")]
		public static string BasePath
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xFC8CF4", Offset = "0xFC8CF4", VA = "0xFC8CF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xFC8C1C", Offset = "0xFC8C1C", VA = "0xFC8C1C")]
		public static string GetDataPath(ComponentName componentName)
		{
			return null;
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xFC8D34", Offset = "0xFC8D34", VA = "0xFC8D34")]
		public static string ReplaceBackslashesWithForwardSlashes(string path)
		{
			return null;
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xFC8D50", Offset = "0xFC8D50", VA = "0xFC8D50")]
		public static void CreateMissingFolders(bool silentMode = false)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xFC8D54", Offset = "0xFC8D54", VA = "0xFC8D54")]
		public DoozyPath()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public static class DoozyUtils
	{
		[Token(Token = "0x4001A27")]
		public const string BACKGROUND = "Background";

		[Token(Token = "0x4001A28")]
		public const string OVERLAY = "Overlay";

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color BackgroundColor;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Color CheckmarkColor;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Color OverlayColor;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Color TextColor;

		[Token(Token = "0x4001A2D")]
		public const int TEXT_FONT_SIZE = 14;

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xFC99E0", Offset = "0xFC99E0", VA = "0xFC99E0")]
		public static Image AddImageToGameObject(GameObject target)
		{
			return null;
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xFC9AB0", Offset = "0xFC9AB0", VA = "0xFC9AB0")]
		public static GameObject CreateGameObjectWithAnImageComponent(string objectName, Color color, [Optional] GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xFC9CEC", Offset = "0xFC9CEC", VA = "0xFC9CEC")]
		public static GameObject CreateBackgroundImage(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xFC9D68", Offset = "0xFC9D68", VA = "0xFC9D68")]
		public static GameObject CreateOverlayImage(GameObject parent)
		{
			return null;
		}

		[Token(Token = "0x6001DCC")]
		public static T AddToScene<T>(string gameObjectName, bool isSingleton, bool selectGameObjectAfterCreation = false) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xFC9DE4", Offset = "0xFC9DE4", VA = "0xFC9DE4")]
		public static void AddObjectToAsset(UnityEngine.Object objectToAdd, UnityEngine.Object assetObject)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xFC9DE8", Offset = "0xFC9DE8", VA = "0xFC9DE8")]
		public static bool DisplayDialog(string title, string message, string ok)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xFC9DF0", Offset = "0xFC9DF0", VA = "0xFC9DF0")]
		public static bool DisplayDialog(string title, string message, string ok, string cancel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xFC9DF8", Offset = "0xFC9DF8", VA = "0xFC9DF8")]
		public static void DisplayProgressBar(string title, string info, float progress)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xFC9DFC", Offset = "0xFC9DFC", VA = "0xFC9DFC")]
		public static bool DisplayCancelableProgressBar(string title, string info, float progress)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xFC9E04", Offset = "0xFC9E04", VA = "0xFC9E04")]
		public static void ClearProgressBar()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xFC9E08", Offset = "0xFC9E08", VA = "0xFC9E08")]
		public static bool MoveAssetToTrash(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xFC9E10", Offset = "0xFC9E10", VA = "0xFC9E10")]
		public static void SaveAssets()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xFC9E14", Offset = "0xFC9E14", VA = "0xFC9E14")]
		public static void SetDirty(UnityEngine.Object target)
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xFC9E70", Offset = "0xFC9E70", VA = "0xFC9E70")]
		public static void SetDirty(UnityEngine.Object target, bool saveAssets)
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xFC9F44", Offset = "0xFC9F44", VA = "0xFC9F44")]
		public static void UndoRecordObject(UnityEngine.Object objectToUndo, string undoMessage)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xFC9FA0", Offset = "0xFC9FA0", VA = "0xFC9FA0")]
		public static void UndoRecordObject(UnityEngine.Object objectToUndo, string undoMessage, bool saveAssets)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xFCA05C", Offset = "0xFCA05C", VA = "0xFCA05C")]
		public static void UndoRecordObjects(UnityEngine.Object[] objectsToUndo, string undoMessage)
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xFCA060", Offset = "0xFCA060", VA = "0xFCA060")]
		public static void UndoRecordObjects(UnityEngine.Object[] objectsToUndo, string undoMessage, bool saveAssets)
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class FileUtils
	{
		[Token(Token = "0x4001A2E")]
		public const bool IGNORE_META = true;

		[Token(Token = "0x4001A2F")]
		public const string UNITY_METAFILE_EXTENSION = ".meta";

		[Token(Token = "0x4001A30")]
		public const string DOTSTART_HIDDEN_FILE_HEADSTRING = ".";

		[Token(Token = "0x4001A31")]
		public const char UNITY_FOLDER_SEPARATOR = '/';

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xFCA160", Offset = "0xFCA160", VA = "0xFCA160")]
		public static void RemakeDirectory(string localFolderPath)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xFCA1D8", Offset = "0xFCA1D8", VA = "0xFCA1D8")]
		public static void CopyFile(string sourceFilePath, string targetFilePath)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xFCA258", Offset = "0xFCA258", VA = "0xFCA258")]
		public static void CopyTemplateFile(string sourceFilePath, string targetFilePath, string srcName, string dstName)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xFCA318", Offset = "0xFCA318", VA = "0xFCA318")]
		public static void DeleteFileThenDeleteFolderIfEmpty(string localTargetFilePath)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xFCA780", Offset = "0xFCA780", VA = "0xFCA780")]
		public static List<string> GetAllFilePathsInFolder(string localFolderPath, bool includeHidden = false, bool includeMeta = false)
		{
			return null;
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xFCA408", Offset = "0xFCA408", VA = "0xFCA408")]
		public static IEnumerable<string> GetFilePathsInFolder(string folderPath, bool includeHidden = false, bool includeMeta = false)
		{
			return null;
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xFCA838", Offset = "0xFCA838", VA = "0xFCA838")]
		private static void GetFilePathsRecursively(string localFolderPath, List<string> filePaths, bool includeHidden = false, bool includeMeta = false)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xFCA914", Offset = "0xFCA914", VA = "0xFCA914")]
		public static string PathCombine(params string[] paths)
		{
			return null;
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xFCAA44", Offset = "0xFCAA44", VA = "0xFCAA44")]
		private static string _PathCombine(string head, string tail)
		{
			return null;
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xFCAB60", Offset = "0xFCAB60", VA = "0xFCAB60")]
		public static string GetPathWithProjectPath(string pathUnderProjectFolder)
		{
			return null;
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xFCAC58", Offset = "0xFCAC58", VA = "0xFCAC58")]
		public static string GetPathWithAssetsPath(string pathUnderAssetsFolder)
		{
			return null;
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xFCAD38", Offset = "0xFCAD38", VA = "0xFCAD38")]
		public static string ProjectPathWithSlash()
		{
			return null;
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xFCAD98", Offset = "0xFCAD98", VA = "0xFCAD98")]
		public static bool IsMetaFile(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xFCADEC", Offset = "0xFCADEC", VA = "0xFCADEC")]
		public static bool ContainsHiddenFiles(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xFCA1A0", Offset = "0xFCA1A0", VA = "0xFCA1A0")]
		public static void DeleteDirectory(string dirPath, bool isRecursive, bool forceDelete = true)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xFCAF10", Offset = "0xFCAF10", VA = "0xFCAF10")]
		public static void RemoveFileAttributes(string dirPath, bool isRecursive)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xFCAFE0", Offset = "0xFCAFE0", VA = "0xFCAFE0")]
		public static string GetAbsoluteDirectoryPath(string directoryName, bool debug = false)
		{
			return null;
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xFCB2E0", Offset = "0xFCB2E0", VA = "0xFCB2E0")]
		public static string GetRelativeDirectoryPath(string directoryName)
		{
			return null;
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xFCB350", Offset = "0xFCB350", VA = "0xFCB350")]
		public FileUtils()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public static class GuidUtils
	{
		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xFCB578", Offset = "0xFCB578", VA = "0xFCB578")]
		public static byte[] GuidToSerializedGuid(Guid guid)
		{
			return null;
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xFCB604", Offset = "0xFCB604", VA = "0xFCB604")]
		public static Guid SerializedGuidToGuid(byte[] serializedGuid)
		{
			return default(Guid);
		}
	}
	[Serializable]
	[Token(Token = "0x2000499")]
	public class LanguagePack : ScriptableObject
	{
		[Token(Token = "0x4001A38")]
		private const string CURRENT_LANGUAGE_PREFS_KEY = "Doozy.CurrentLanguage";

		[Token(Token = "0x4001A39")]
		public const Language DEFAULT_LANGUAGE = Language.English;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Language s_currentLanguage;

		[Token(Token = "0x170003BA")]
		public static Language CurrentLanguage
		{
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xFCB688", Offset = "0xFCB688", VA = "0xFCB688")]
			get
			{
				return default(Language);
			}
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xFCB708", Offset = "0xFCB708", VA = "0xFCB708")]
			set
			{
			}
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xFCB75C", Offset = "0xFCB75C", VA = "0xFCB75C")]
		private static void SaveLanguagePreference(Language language)
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xFCB7B0", Offset = "0xFCB7B0", VA = "0xFCB7B0")]
		private static void SaveLanguagePreference(string prefsKey, Language language)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xFCB7C8", Offset = "0xFCB7C8", VA = "0xFCB7C8")]
		public LanguagePack()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public static class MenuUtils
	{
		[Token(Token = "0x4001A3B")]
		private const string GENERIC_VIDEO_LINK = "https://www.youtube.com/user/doozyplay/videos";

		[Token(Token = "0x4001A3C")]
		private const int INPUT_MENU_ORDER = 13;

		[Token(Token = "0x4001A3D")]
		private const int LAYOUTS_MENU_ORDER = 13;

		[Token(Token = "0x4001A3E")]
		private const int LISTENERS_MENU_ORDER = 13;

		[Token(Token = "0x4001A3F")]
		private const int MANAGERS_MENU_ORDER = 13;

		[Token(Token = "0x4001A40")]
		private const int NODY_MENU_ORDER = 13;

		[Token(Token = "0x4001A41")]
		private const int ORIENTATION_MENU_ORDER = 13;

		[Token(Token = "0x4001A42")]
		private const int PLAYMAKER_MENU_ORDER = 13;

		[Token(Token = "0x4001A43")]
		private const int PROGRESS_MENU_ORDER = 13;

		[Token(Token = "0x4001A44")]
		private const int SCENE_MANAGEMENT_MENU_ORDER = 13;

		[Token(Token = "0x4001A45")]
		private const int SOUNDY_MENU_ORDER = 13;

		[Token(Token = "0x4001A46")]
		private const int THEMES_MENU_ORDER = 13;

		[Token(Token = "0x4001A47")]
		private const int TOUCHY_MENU_ORDER = 13;

		[Token(Token = "0x4001A48")]
		private const int UI_MENU_ORDER = 2;

		[Token(Token = "0x4001A49")]
		private const string UI_INPUT_AddComponentMenu_Path = "Doozy/Input/";

		[Token(Token = "0x4001A4A")]
		private const string UI_INPUT_MenuItem_Path = "GameObject/Doozy/Input/";

		[Token(Token = "0x4001A4B")]
		public const string BackButton_GameObject_Name = "Back Button";

		[Token(Token = "0x4001A4C")]
		public const string BackButton_AddComponentMenu_MenuName = "Doozy/Input/Back Button";

		[Token(Token = "0x4001A4D")]
		public const int BackButton_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A4E")]
		public const string BackButton_MenuItem_ItemName = "GameObject/Doozy/Input/Back Button";

		[Token(Token = "0x4001A4F")]
		public const int BackButton_MenuItem_Priority = 13;

		[Token(Token = "0x4001A50")]
		public const string BackButton_Manual = "http://doozyui.com/back-button/";

		[Token(Token = "0x4001A51")]
		public const string BackButton_YouTube = "https://www.youtube.com/watch?v=IvFbtBYAZL4";

		[Token(Token = "0x4001A52")]
		public const string KeyToAction_GameObject_Name = "Key To Action";

		[Token(Token = "0x4001A53")]
		public const string KeyToAction_AddComponentMenu_MenuName = "Doozy/Input/Key To Action";

		[Token(Token = "0x4001A54")]
		public const int KeyToAction_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A55")]
		public const string KeyToAction_MenuItem_ItemName = "GameObject/Doozy/Input/Key To Action";

		[Token(Token = "0x4001A56")]
		public const int KeyToAction_MenuItem_Priority = 13;

		[Token(Token = "0x4001A57")]
		public const string KeyToAction_Manual = "http://doozyui.com/key-to-action/";

		[Token(Token = "0x4001A58")]
		public const string KeyToAction_YouTube = "https://youtu.be/ZOid_LaM6sM";

		[Token(Token = "0x4001A59")]
		public const string KeyToGameEvent_GameObject_Name = "Key To Game Event";

		[Token(Token = "0x4001A5A")]
		public const string KeyToGameEvent_AddComponentMenu_MenuName = "Doozy/Input/Key To Game Event";

		[Token(Token = "0x4001A5B")]
		public const int KeyToGameEvent_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A5C")]
		public const string KeyToGameEvent_MenuItem_ItemName = "GameObject/Doozy/Input/Key To Game Event";

		[Token(Token = "0x4001A5D")]
		public const int KeyToGameEvent_MenuItem_Priority = 13;

		[Token(Token = "0x4001A5E")]
		public const string KeyToGameEvent_Manual = "http://doozyui.com/key-to-game-event/";

		[Token(Token = "0x4001A5F")]
		public const string KeyToGameEvent_YouTube = "https://youtu.be/4xYR-p1gl3Q";

		[Token(Token = "0x4001A60")]
		private const string Layouts_AddComponentMenu_Path = "Doozy/Layouts/";

		[Token(Token = "0x4001A61")]
		private const string Layouts_MenuItem_Path = "GameObject/Doozy/Layouts/";

		[Token(Token = "0x4001A62")]
		public const string RadialLayout_GameObject_Name = "Radial Layout";

		[Token(Token = "0x4001A63")]
		public const string RadialLayout_AddComponentMenu_MenuName = "Doozy/Layouts/Radial Layout";

		[Token(Token = "0x4001A64")]
		public const int RadialLayout_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A65")]
		public const string RadialLayout_MenuItem_ItemName = "GameObject/Doozy/Layouts/Radial Layout";

		[Token(Token = "0x4001A66")]
		public const int RadialLayout_MenuItem_Priority = 13;

		[Token(Token = "0x4001A67")]
		public const string RadialLayout_Manual = "http://doozyui.com/radial-layout/";

		[Token(Token = "0x4001A68")]
		public const string RadialLayout_YouTube = "https://youtu.be/nrrdPa86tFY";

		[Token(Token = "0x4001A69")]
		private const string Listeners_AddComponentMenu_Path = "Doozy/Listeners/";

		[Token(Token = "0x4001A6A")]
		private const string Listeners_MenuItem_Path = "GameObject/Doozy/Listeners/";

		[Token(Token = "0x4001A6B")]
		public const string GameEventListener_GameObject_Name = "Game Event Listener";

		[Token(Token = "0x4001A6C")]
		public const string GameEventListener_AddComponentMenu_MenuName = "Doozy/Listeners/Game Event Listener";

		[Token(Token = "0x4001A6D")]
		public const int GameEventListener_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A6E")]
		public const string GameEventListener_MenuItem_ItemName = "GameObject/Doozy/Listeners/Game Event Listener";

		[Token(Token = "0x4001A6F")]
		public const int GameEventListener_MenuItem_Priority = 13;

		[Token(Token = "0x4001A70")]
		public const string GameEventListener_Manual = "http://doozyui.com/game-event-listener/";

		[Token(Token = "0x4001A71")]
		public const string GameEventListener_YouTube = "https://www.youtube.com/watch?v=7qLjgLKOH5w";

		[Token(Token = "0x4001A72")]
		public const string UIButtonListener_GameObject_Name = "UIButton Listener";

		[Token(Token = "0x4001A73")]
		public const string UIButtonListener_AddComponentMenu_MenuName = "Doozy/Listeners/UIButton Listener";

		[Token(Token = "0x4001A74")]
		public const int UIButtonListener_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A75")]
		public const string UIButtonListener_MenuItem_ItemName = "GameObject/Doozy/Listeners/UIButton Listener";

		[Token(Token = "0x4001A76")]
		public const int UIButtonListener_MenuItem_Priority = 13;

		[Token(Token = "0x4001A77")]
		public const string UIButtonListener_Manual = "http://doozyui.com/uibutton-listener/";

		[Token(Token = "0x4001A78")]
		public const string UIButtonListener_YouTube = "https://www.youtube.com/watch?v=BUpZMDX4IEs";

		[Token(Token = "0x4001A79")]
		public const string UIDrawerListener_GameObject_Name = "UIDrawer Listener";

		[Token(Token = "0x4001A7A")]
		public const string UIDrawerListener_AddComponentMenu_MenuName = "Doozy/Listeners/UIDrawer Listener";

		[Token(Token = "0x4001A7B")]
		public const int UIDrawerListener_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A7C")]
		public const string UIDrawerListener_MenuItem_ItemName = "GameObject/Doozy/Listeners/UIDrawer Listener";

		[Token(Token = "0x4001A7D")]
		public const int UIDrawerListener_MenuItem_Priority = 13;

		[Token(Token = "0x4001A7E")]
		public const string UIDrawerListener_Manual = "http://doozyui.com/uidrawer-listener/";

		[Token(Token = "0x4001A7F")]
		public const string UIDrawerListener_YouTube = "https://www.youtube.com/watch?v=gHwsfzXcvE4";

		[Token(Token = "0x4001A80")]
		public const string UIViewListener_GameObject_Name = "UIView Listener";

		[Token(Token = "0x4001A81")]
		public const string UIViewListener_AddComponentMenu_MenuName = "Doozy/Listeners/UIView Listener";

		[Token(Token = "0x4001A82")]
		public const int UIViewListener_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A83")]
		public const string UIViewListener_MenuItem_ItemName = "GameObject/Doozy/Listeners/UIView Listener";

		[Token(Token = "0x4001A84")]
		public const int UIViewListener_MenuItem_Priority = 13;

		[Token(Token = "0x4001A85")]
		public const string UIViewListener_Manual = "http://doozyui.com/uiview-listener/";

		[Token(Token = "0x4001A86")]
		public const string UIViewListener_YouTube = "https://www.youtube.com/watch?v=05xuFExYVZc";

		[Token(Token = "0x4001A87")]
		private const string Managers_AddComponentMenu_Path = "Doozy/Managers/";

		[Token(Token = "0x4001A88")]
		private const string Managers_MenuItem_Path = "GameObject/Doozy/Managers/";

		[Token(Token = "0x4001A89")]
		public const string GameEventManager_GameObject_Name = "Game Event Manager";

		[Token(Token = "0x4001A8A")]
		public const string GameEventManager_AddComponentMenu_MenuName = "Doozy/Managers/Game Event Manager";

		[Token(Token = "0x4001A8B")]
		public const int GameEventManager_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A8C")]
		public const string GameEventManager_MenuItem_ItemName = "GameObject/Doozy/Managers/Game Event Manager";

		[Token(Token = "0x4001A8D")]
		public const int GameEventManager_MenuItem_Priority = 13;

		[Token(Token = "0x4001A8E")]
		public const string GameEventManager_Manual = "http://doozyui.com/game-event-manager/";

		[Token(Token = "0x4001A8F")]
		public const string GameEventManager_YouTube = "https://www.youtube.com/watch?v=5hVP_El0tVA";

		[Token(Token = "0x4001A90")]
		public const string UIPopupManager_GameObject_Name = "UIPopup Manager";

		[Token(Token = "0x4001A91")]
		public const string UIPopupManager_AddComponentMenu_MenuName = "Doozy/Managers/UIPopup Manager";

		[Token(Token = "0x4001A92")]
		public const int UIPopupManager_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A93")]
		public const string UIPopupManager_MenuItem_ItemName = "GameObject/Doozy/Managers/UIPopup Manager";

		[Token(Token = "0x4001A94")]
		public const int UIPopupManager_MenuItem_Priority = 13;

		[Token(Token = "0x4001A95")]
		public const string UIPopupManager_Manual = "http://doozyui.com/uipopup-manager/";

		[Token(Token = "0x4001A96")]
		public const string UIPopupManager_YouTube = "https://www.youtube.com/watch?v=MH8a1G93mW8";

		[Token(Token = "0x4001A97")]
		private const string Nody_AddComponentMenu_Path = "Doozy/Nody/";

		[Token(Token = "0x4001A98")]
		private const string Nody_MenuItem_Path = "GameObject/Doozy/Nody/";

		[Token(Token = "0x4001A99")]
		public const string GraphController_GameObject_Name = "Graph Controller";

		[Token(Token = "0x4001A9A")]
		public const string GraphController_AddComponentMenu_MenuName = "Doozy/Nody/Graph Controller";

		[Token(Token = "0x4001A9B")]
		public const int GraphController_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001A9C")]
		public const string GraphController_MenuItem_ItemName = "GameObject/Doozy/Nody/Graph Controller";

		[Token(Token = "0x4001A9D")]
		public const int GraphController_MenuItem_Priority = 13;

		[Token(Token = "0x4001A9E")]
		public const string GraphController_Manual = "http://doozyui.com/graph-controller/";

		[Token(Token = "0x4001A9F")]
		public const string GraphController_YouTube = "https://www.youtube.com/watch?v=UuAkXDvXS1A";

		[Token(Token = "0x4001AA0")]
		public const string Graph_Manual = "http://doozyui.com";

		[Token(Token = "0x4001AA1")]
		public const string Graph_YouTube = "https://www.youtube.com/user/doozyplay/videos";

		[Token(Token = "0x4001AA2")]
		public const string HiddenNode = "";

		[Token(Token = "0x4001AA3")]
		public const int BaseNodeOrder = 0;

		[Token(Token = "0x4001AA4")]
		public const int DefaultNodeOrder = 50;

		[Token(Token = "0x4001AA5")]
		public const string ActivateLoadedScenesNode_CreateNodeMenu_Name = "Scene Management/Activate Loaded Scenes";

		[Token(Token = "0x4001AA6")]
		public const int ActivateLoadedScenesNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001AA7")]
		public const string ActivateLoadedScenesNode_Manual = "http://doozyui.com/nodes/#ActivateLoadedScenesNode";

		[Token(Token = "0x4001AA8")]
		public const string ActivateLoadedScenesNode_YouTube = "https://www.youtube.com/watch?v=rpGb6vKGqfU";

		[Token(Token = "0x4001AA9")]
		public const string ApplicationQuitNode_CreateNodeMenu_Name = "System/Application Quit";

		[Token(Token = "0x4001AAA")]
		public const int ApplicationQuitNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001AAB")]
		public const string ApplicationQuitNode_Manual = "http://doozyui.com/nodes/#ApplicationQuitNode";

		[Token(Token = "0x4001AAC")]
		public const string ApplicationQuitNode_YouTube = "https://www.youtube.com/watch?v=G4E_OSisXXM";

		[Token(Token = "0x4001AAD")]
		public const string BackButtonNode_CreateNodeMenu_Name = "Navigation/Back Button";

		[Token(Token = "0x4001AAE")]
		public const int BackButtonNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001AAF")]
		public const string BackButtonNode_Manual = "http://doozyui.com/nodes/#BackButtonNode";

		[Token(Token = "0x4001AB0")]
		public const string BackButtonNode_YouTube = "https://www.youtube.com/watch?v=PpZ27a517v0";

		[Token(Token = "0x4001AB1")]
		public const string EnterNode_Manual = "http://doozyui.com/nodes/#EnterNode";

		[Token(Token = "0x4001AB2")]
		public const string EnterNode_YouTube = "https://www.youtube.com/watch?v=LSLxgpsuJMs";

		[Token(Token = "0x4001AB3")]
		public const string ExitNode_Manual = "http://doozyui.com/nodes/#ExitNode";

		[Token(Token = "0x4001AB4")]
		public const string ExitNode_YouTube = "https://www.youtube.com/watch?v=LSLxgpsuJMs";

		[Token(Token = "0x4001AB5")]
		public const string GameEventNode_CreateNodeMenu_Name = "Game Event";

		[Token(Token = "0x4001AB6")]
		public const int GameEventNode_CreateNodeMenu_Order = 1;

		[Token(Token = "0x4001AB7")]
		public const string GameEventNode_Manual = "http://doozyui.com/nodes/#GameEventNode";

		[Token(Token = "0x4001AB8")]
		public const string GameEventNode_YouTube = "https://www.youtube.com/watch?v=is1C67fWy54";

		[Token(Token = "0x4001AB9")]
		public const string LoadSceneNode_CreateNodeMenu_Name = "Scene Management/Load Scene";

		[Token(Token = "0x4001ABA")]
		public const int LoadSceneNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001ABB")]
		public const string LoadSceneNode_Manual = "http://doozyui.com/nodes/#LoadSceneNode";

		[Token(Token = "0x4001ABC")]
		public const string LoadSceneNode_YouTube = "https://www.youtube.com/watch?v=rpGb6vKGqfU";

		[Token(Token = "0x4001ABD")]
		public const string PortalNode_CreateNodeMenu_Name = "Navigation/Portal";

		[Token(Token = "0x4001ABE")]
		public const int PortalNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001ABF")]
		public const string PortalNode_Manual = "http://doozyui.com/nodes/#PortalNode";

		[Token(Token = "0x4001AC0")]
		public const string PortalNode_YouTube = "https://www.youtube.com/watch?v=3CMbLmzVZ5o";

		[Token(Token = "0x4001AC1")]
		public const string RandomNode_CreateNodeMenu_Name = "System/Random";

		[Token(Token = "0x4001AC2")]
		public const int RandomNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001AC3")]
		public const string RandomNode_Manual = "http://doozyui.com/nodes/#RandomNode";

		[Token(Token = "0x4001AC4")]
		public const string RandomNode_YouTube = "https://www.youtube.com/watch?v=02Rqr4BF0rw";

		[Token(Token = "0x4001AC5")]
		public const string SoundNode_CreateNodeMenu_Name = "Sound";

		[Token(Token = "0x4001AC6")]
		public const int SoundNode_CreateNodeMenu_Order = 1;

		[Token(Token = "0x4001AC7")]
		public const string SoundNode_Manual = "http://doozyui.com/nodes/#SoundNode";

		[Token(Token = "0x4001AC8")]
		public const string SoundNode_YouTube = "https://www.youtube.com/watch?v=67QTFzPPFCA";

		[Token(Token = "0x4001AC9")]
		public const string StartNode_Manual = "http://doozyui.com/nodes/#StartNode";

		[Token(Token = "0x4001ACA")]
		public const string StartNode_YouTube = "https://www.youtube.com/watch?v=LSLxgpsuJMs";

		[Token(Token = "0x4001ACB")]
		public const string SubGraphNode_CreateNodeMenu_Name = "SubGraph";

		[Token(Token = "0x4001ACC")]
		public const int SubGraphNode_CreateNodeMenu_Order = 1;

		[Token(Token = "0x4001ACD")]
		public const string SubGraphNode_Manual = "http://doozyui.com/nodes/#SubGraphNode";

		[Token(Token = "0x4001ACE")]
		public const string SubGraphNode_YouTube = "https://www.youtube.com/watch?v=8ETnjKJNJfE";

		[Token(Token = "0x4001ACF")]
		public const string SwitchBackNode_CreateNodeMenu_Name = "Navigation/Switch Back";

		[Token(Token = "0x4001AD0")]
		public const int SwitchBackNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001AD1")]
		public const string SwitchBackNode_Manual = "http://doozyui.com/nodes/#SwitchBackNode";

		[Token(Token = "0x4001AD2")]
		public const string SwitchBackNode_YouTube = "https://www.youtube.com/watch?v=oKg1Im0_P54";

		[Token(Token = "0x4001AD3")]
		public const string ThemeNode_CreateNodeMenu_Name = "Theme";

		[Token(Token = "0x4001AD4")]
		public const int ThemeNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001AD5")]
		public const string ThemeNode_Manual = "http://doozyui.com/nodes/#ThemeNode";

		[Token(Token = "0x4001AD6")]
		public const string ThemeNode_YouTube = "https://youtu.be/kG6Oe6SXKdo";

		[Token(Token = "0x4001AD7")]
		public const string TimeScaleNode_CreateNodeMenu_Name = "System/TimeScale";

		[Token(Token = "0x4001AD8")]
		public const int TimeScaleNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001AD9")]
		public const string TimeScaleNode_Manual = "http://doozyui.com/nodes/#TimeScaleNode";

		[Token(Token = "0x4001ADA")]
		public const string TimeScaleNode_YouTube = "https://www.youtube.com/watch?v=A_9tuCsfB_0";

		[Token(Token = "0x4001ADB")]
		public const string UIDrawerNode_CreateNodeMenu_Name = "Navigation/UIDrawer";

		[Token(Token = "0x4001ADC")]
		public const int UIDrawerNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001ADD")]
		public const string UIDrawerNode_Manual = "http://doozyui.com/nodes/#UIDrawerNode";

		[Token(Token = "0x4001ADE")]
		public const string UIDrawerNode_YouTube = "https://www.youtube.com/watch?v=BTZRxxSTOcA";

		[Token(Token = "0x4001ADF")]
		public const string UINode_CreateNodeMenu_Name = "UINode";

		[Token(Token = "0x4001AE0")]
		public const int UINode_CreateNodeMenu_Order = 0;

		[Token(Token = "0x4001AE1")]
		public const string UINode_Manual = "http://doozyui.com/nodes/#UINode";

		[Token(Token = "0x4001AE2")]
		public const string UINode_YouTube = "https://www.youtube.com/watch?v=i-kvNakvtvA";

		[Token(Token = "0x4001AE3")]
		public const string UnloadSceneNode_CreateNodeMenu_Name = "Scene Management/Unload Scene";

		[Token(Token = "0x4001AE4")]
		public const int UnloadSceneNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001AE5")]
		public const string UnloadSceneNode_Manual = "http://doozyui.com/nodes/#UnloadSceneNode";

		[Token(Token = "0x4001AE6")]
		public const string UnloadSceneNode_YouTube = "https://www.youtube.com/watch?v=rpGb6vKGqfU";

		[Token(Token = "0x4001AE7")]
		public const string WaitNode_CreateNodeMenu_Name = "System/Wait";

		[Token(Token = "0x4001AE8")]
		public const int WaitNode_CreateNodeMenu_Order = 50;

		[Token(Token = "0x4001AE9")]
		public const string WaitNode_Manual = "http://doozyui.com/nodes/#WaitNode";

		[Token(Token = "0x4001AEA")]
		public const string WaitNode_YouTube = "https://www.youtube.com/watch?v=9vfO1N6fkiI";

		[Token(Token = "0x4001AEB")]
		private const string Orientation_AddComponentMenu_Path = "Doozy/Orientation/";

		[Token(Token = "0x4001AEC")]
		private const string Orientation_MenuItem_Path = "GameObject/Doozy/Orientation/";

		[Token(Token = "0x4001AED")]
		public const string OrientationDetector_GameObject_Name = "Orientation Detector";

		[Token(Token = "0x4001AEE")]
		public const string OrientationDetector_AddComponentMenu_MenuName = "Doozy/Orientation/Orientation Detector";

		[Token(Token = "0x4001AEF")]
		public const int OrientationDetector_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001AF0")]
		public const string OrientationDetector_MenuItem_ItemName = "GameObject/Doozy/Orientation/Orientation Detector";

		[Token(Token = "0x4001AF1")]
		public const int OrientationDetector_MenuItem_Priority = 13;

		[Token(Token = "0x4001AF2")]
		public const string OrientationDetector_Manual = "http://doozyui.com/orientation-detector/";

		[Token(Token = "0x4001AF3")]
		public const string OrientationDetector_YouTube = "https://www.youtube.com/watch?v=wT27M7O53g0";

		[Token(Token = "0x4001AF4")]
		private const string Playmaker_AddComponentMenu_Path = "Doozy/Playmaker/";

		[Token(Token = "0x4001AF5")]
		private const string Playmaker_MenuItem_Path = "GameObject/Doozy/Playmaker/";

		[Token(Token = "0x4001AF6")]
		public const string PlaymakerEventDispatcher_GameObject_Name = "Event Dispatcher";

		[Token(Token = "0x4001AF7")]
		public const string PlaymakerEventDispatcher_AddComponentMenu_MenuName = "Doozy/Playmaker/Event Dispatcher";

		[Token(Token = "0x4001AF8")]
		public const int PlaymakerEventDispatcher_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001AF9")]
		public const string PlaymakerEventDispatcher_MenuItem_ItemName = "GameObject/Doozy/Playmaker/Event Dispatcher";

		[Token(Token = "0x4001AFA")]
		public const int PlaymakerEventDispatcher_MenuItem_Priority = 13;

		[Token(Token = "0x4001AFB")]
		public const string PlaymakerEventDispatcher_Manual = "http://doozyui.com/playmaker-event-dispatcher/";

		[Token(Token = "0x4001AFC")]
		public const string PlaymakerEventDispatcher_YouTube = "https://www.youtube.com/user/doozyplay/videos";

		[Token(Token = "0x4001AFD")]
		private const string Progress_AddComponentMenu_Path = "Doozy/Progress/";

		[Token(Token = "0x4001AFE")]
		private const string Progress_MenuItem_Path = "GameObject/Doozy/Progress/";

		[Token(Token = "0x4001AFF")]
		public const string Progressor_GameObject_Name = "Progressor";

		[Token(Token = "0x4001B00")]
		public const string Progressor_AddComponentMenu_MenuName = "Doozy/Progress/Progressor";

		[Token(Token = "0x4001B01")]
		public const int Progressor_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B02")]
		public const string Progressor_MenuItem_ItemName = "GameObject/Doozy/Progress/Progressor";

		[Token(Token = "0x4001B03")]
		public const int Progressor_MenuItem_Priority = 13;

		[Token(Token = "0x4001B04")]
		public const string Progressor_Manual = "http://doozyui.com/progressor/";

		[Token(Token = "0x4001B05")]
		public const string Progressor_YouTube = "https://www.youtube.com/watch?v=kp84R8n7VLY";

		[Token(Token = "0x4001B06")]
		public const string ProgressorGroup_GameObject_Name = "Progressor Group";

		[Token(Token = "0x4001B07")]
		public const string ProgressorGroup_AddComponentMenu_MenuName = "Doozy/Progress/Progressor Group";

		[Token(Token = "0x4001B08")]
		public const int ProgressorGroup_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B09")]
		public const string ProgressorGroup_MenuItem_ItemName = "GameObject/Doozy/Progress/Progressor Group";

		[Token(Token = "0x4001B0A")]
		public const int ProgressorGroup_MenuItem_Priority = 13;

		[Token(Token = "0x4001B0B")]
		public const string ProgressorGroup_Manual = "http://doozyui.com/progressor-group/";

		[Token(Token = "0x4001B0C")]
		public const string ProgressorGroup_YouTube = "https://www.youtube.com/watch?v=y9-pit5yMsg";

		[Token(Token = "0x4001B0D")]
		private const string Progress_Targets_AddComponentMenu_Path = "Doozy/Progress/Targets/";

		[Token(Token = "0x4001B0E")]
		private const string Progress_Targets_MenuItem_Path = "GameObject/Doozy/Progress/Targets/";

		[Token(Token = "0x4001B0F")]
		public const string ProgressTargetAction_GameObject_Name = "Progress Target Action";

		[Token(Token = "0x4001B10")]
		public const string ProgressTargetAction_AddComponentMenu_MenuName = "Doozy/Progress/Targets/Progress Target Action";

		[Token(Token = "0x4001B11")]
		public const int ProgressTargetAction_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B12")]
		public const string ProgressTargetAction_MenuItem_ItemName = "GameObject/Doozy/Progress/Targets/Progress Target Action";

		[Token(Token = "0x4001B13")]
		public const int ProgressTargetAction_MenuItem_Priority = 13;

		[Token(Token = "0x4001B14")]
		public const string ProgressTargetAction_Manual = "http://doozyui.com/progress-target-action/";

		[Token(Token = "0x4001B15")]
		public const string ProgressTargetAction_YouTube = "https://youtu.be/3sbfZOJJzzE";

		[Token(Token = "0x4001B16")]
		public const string ProgressTargetAnimator_GameObject_Name = "Progress Target Animator";

		[Token(Token = "0x4001B17")]
		public const string ProgressTargetAnimator_AddComponentMenu_MenuName = "Doozy/Progress/Targets/Progress Target Animator";

		[Token(Token = "0x4001B18")]
		public const int ProgressTargetAnimator_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B19")]
		public const string ProgressTargetAnimator_MenuItem_ItemName = "GameObject/Doozy/Progress/Targets/Progress Target Animator";

		[Token(Token = "0x4001B1A")]
		public const int ProgressTargetAnimator_MenuItem_Priority = 13;

		[Token(Token = "0x4001B1B")]
		public const string ProgressTargetAnimator_Manual = "http://doozyui.com/progress-target-animator/";

		[Token(Token = "0x4001B1C")]
		public const string ProgressTargetAnimator_YouTube = "https://www.youtube.com/watch?v=c2T3M--Ty50";

		[Token(Token = "0x4001B1D")]
		public const string ProgressTargetAudioMixer_GameObject_Name = "Progress Target AudioMixer";

		[Token(Token = "0x4001B1E")]
		public const string ProgressTargetAudioMixer_AddComponentMenu_MenuName = "Doozy/Progress/Targets/Progress Target AudioMixer";

		[Token(Token = "0x4001B1F")]
		public const int ProgressTargetAudioMixer_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B20")]
		public const string ProgressTargetAudioMixer_MenuItem_ItemName = "GameObject/Doozy/Progress/Targets/Progress Target AudioMixer";

		[Token(Token = "0x4001B21")]
		public const int ProgressTargetAudioMixer_MenuItem_Priority = 13;

		[Token(Token = "0x4001B22")]
		public const string ProgressTargetAudioMixer_Manual = "http://doozyui.com/progress-target-audiomixer/";

		[Token(Token = "0x4001B23")]
		public const string ProgressTargetAudioMixer_YouTube = "https://youtu.be/rkfs7EHHKzY";

		[Token(Token = "0x4001B24")]
		public const string ProgressTargetImage_GameObject_Name = "Progress Target Image";

		[Token(Token = "0x4001B25")]
		public const string ProgressTargetImage_AddComponentMenu_MenuName = "Doozy/Progress/Targets/Progress Target Image";

		[Token(Token = "0x4001B26")]
		public const int ProgressTargetImage_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B27")]
		public const string ProgressTargetImage_MenuItem_ItemName = "GameObject/Doozy/Progress/Targets/Progress Target Image";

		[Token(Token = "0x4001B28")]
		public const int ProgressTargetImage_MenuItem_Priority = 13;

		[Token(Token = "0x4001B29")]
		public const string ProgressTargetImage_Manual = "http://doozyui.com/progress-target-image/";

		[Token(Token = "0x4001B2A")]
		public const string ProgressTargetImage_YouTube = "https://www.youtube.com/watch?v=XUH85WaPg_0";

		[Token(Token = "0x4001B2B")]
		public const string ProgressTargetText_GameObject_Name = "Progress Target Text";

		[Token(Token = "0x4001B2C")]
		public const string ProgressTargetText_AddComponentMenu_MenuName = "Doozy/Progress/Targets/Progress Target Text";

		[Token(Token = "0x4001B2D")]
		public const int ProgressTargetText_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B2E")]
		public const string ProgressTargetText_MenuItem_ItemName = "GameObject/Doozy/Progress/Targets/Progress Target Text";

		[Token(Token = "0x4001B2F")]
		public const int ProgressTargetText_MenuItem_Priority = 13;

		[Token(Token = "0x4001B30")]
		public const string ProgressTargetText_Manual = "http://doozyui.com/progress-target-text/";

		[Token(Token = "0x4001B31")]
		public const string ProgressTargetText_YouTube = "https://www.youtube.com/watch?v=yVIs0oq7S3w";

		[Token(Token = "0x4001B32")]
		public const string ProgressTargetTextMeshPro_GameObject_Name = "Progress Target TextMeshPro";

		[Token(Token = "0x4001B33")]
		public const string ProgressTargetTextMeshPro_AddComponentMenu_MenuName = "Doozy/Progress/Targets/Progress Target TextMeshPro";

		[Token(Token = "0x4001B34")]
		public const int ProgressTargetTextMeshPro_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B35")]
		public const string ProgressTargetTextMeshPro_MenuItem_ItemName = "GameObject/Doozy/Progress/Targets/Progress Target TextMeshPro";

		[Token(Token = "0x4001B36")]
		public const int ProgressTargetTextMeshPro_MenuItem_Priority = 13;

		[Token(Token = "0x4001B37")]
		public const string ProgressTargetTextMeshPro_Manual = "http://doozyui.com/progress-target-textmeshpro/";

		[Token(Token = "0x4001B38")]
		public const string ProgressTargetTextMeshPro_YouTube = "https://www.youtube.com/watch?v=iwhcj4XdBzM";

		[Token(Token = "0x4001B39")]
		private const string SceneManagement_AddComponentMenu_Path = "Doozy/SceneManagement/";

		[Token(Token = "0x4001B3A")]
		private const string SceneManagement_MenuItem_Path = "GameObject/Doozy/SceneManagement/";

		[Token(Token = "0x4001B3B")]
		public const string SceneLoader_GameObject_Name = "Scene Loader";

		[Token(Token = "0x4001B3C")]
		public const string SceneLoader_AddComponentMenu_MenuName = "Doozy/SceneManagement/Scene Loader";

		[Token(Token = "0x4001B3D")]
		public const int SceneLoader_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B3E")]
		public const string SceneLoader_MenuItem_ItemName = "GameObject/Doozy/SceneManagement/Scene Loader";

		[Token(Token = "0x4001B3F")]
		public const int SceneLoader_MenuItem_Priority = 13;

		[Token(Token = "0x4001B40")]
		public const string SceneLoader_Manual = "http://doozyui.com/scene-loader/";

		[Token(Token = "0x4001B41")]
		public const string SceneLoader_YouTube = "https://www.youtube.com/watch?v=mViQaOf3aO8";

		[Token(Token = "0x4001B42")]
		public const string SceneDirector_GameObject_Name = "Scene Director";

		[Token(Token = "0x4001B43")]
		public const string SceneDirector_AddComponentMenu_MenuName = "Doozy/SceneManagement/Scene Director";

		[Token(Token = "0x4001B44")]
		public const int SceneDirector_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B45")]
		public const string SceneDirector_MenuItem_ItemName = "GameObject/Doozy/SceneManagement/Scene Director";

		[Token(Token = "0x4001B46")]
		public const int SceneDirector_MenuItem_Priority = 13;

		[Token(Token = "0x4001B47")]
		public const string SceneDirector_Manual = "http://doozyui.com/scene-director/";

		[Token(Token = "0x4001B48")]
		public const string SceneDirector_YouTube = "https://www.youtube.com/watch?v=jhiAnlcRjug";

		[Token(Token = "0x4001B49")]
		private const string Soundy_AddComponentMenu_Path = "Doozy/Soundy/";

		[Token(Token = "0x4001B4A")]
		private const string Soundy_MenuItem_Path = "GameObject/Doozy/Soundy/";

		[Token(Token = "0x4001B4B")]
		public const string SoundyManager_GameObject_Name = "Soundy Manager";

		[Token(Token = "0x4001B4C")]
		public const string SoundyManager_AddComponentMenu_MenuName = "Doozy/Soundy/Soundy Manager";

		[Token(Token = "0x4001B4D")]
		public const int SoundyManager_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B4E")]
		public const string SoundyManager_MenuItem_ItemName = "GameObject/Doozy/Soundy/Soundy Manager";

		[Token(Token = "0x4001B4F")]
		public const int SoundyManager_MenuItem_Priority = 13;

		[Token(Token = "0x4001B50")]
		public const string SoundyManager_Manual = "http://doozyui.com/soundy-manager/";

		[Token(Token = "0x4001B51")]
		public const string SoundyManager_YouTube = "https://www.youtube.com/watch?v=oe86Q0Bljtc";

		[Token(Token = "0x4001B52")]
		private const string Themes_AddComponentMenu_Path = "Doozy/Themes/";

		[Token(Token = "0x4001B53")]
		private const string Themes_MenuItem_Path = "GameObject/Doozy/Themes/";

		[Token(Token = "0x4001B54")]
		public const string ThemeManager_GameObject_Name = "Theme Manager";

		[Token(Token = "0x4001B55")]
		public const string ThemeManager_AddComponentMenu_MenuName = "Doozy/Themes/Theme Manager";

		[Token(Token = "0x4001B56")]
		public const int ThemeManager_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B57")]
		public const string ThemeManager_MenuItem_ItemName = "GameObject/Doozy/Themes/Theme Manager";

		[Token(Token = "0x4001B58")]
		public const int ThemeManager_MenuItem_Priority = 13;

		[Token(Token = "0x4001B59")]
		public const string ThemeManager_Manual = "http://doozyui.com/theme-manager/";

		[Token(Token = "0x4001B5A")]
		public const string ThemeManager_YouTube = "https://youtu.be/h3Q8AvugeWc";

		[Token(Token = "0x4001B5B")]
		private const string Themes_Targets_AddComponentMenu_Path = "Doozy/Themes/Targets/";

		[Token(Token = "0x4001B5C")]
		private const string Themes_Targets_MenuItem_Path = "GameObject/Doozy/Themes/Targets/";

		[Token(Token = "0x4001B5D")]
		public const string ColorTargetImage_GameObject_Name = "Color Target Image";

		[Token(Token = "0x4001B5E")]
		public const string ColorTargetImage_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Color Target Image";

		[Token(Token = "0x4001B5F")]
		public const int ColorTargetImage_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B60")]
		public const string ColorTargetImage_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Color Target Image";

		[Token(Token = "0x4001B61")]
		public const int ColorTargetImage_MenuItem_Priority = 13;

		[Token(Token = "0x4001B62")]
		public const string ColorTargetImage_Manual = "http://doozyui.com/color-target-image/";

		[Token(Token = "0x4001B63")]
		public const string ColorTargetImage_YouTube = "https://youtu.be/RCo_mh15vDw";

		[Token(Token = "0x4001B64")]
		public const string ColorTargetParticleSystem_GameObject_Name = "Color Target ParticleSystem";

		[Token(Token = "0x4001B65")]
		public const string ColorTargetParticleSystem_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Color Target ParticleSystem";

		[Token(Token = "0x4001B66")]
		public const int ColorTargetParticleSystem_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B67")]
		public const string ColorTargetParticleSystem_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Color Target ParticleSystem";

		[Token(Token = "0x4001B68")]
		public const int ColorTargetParticleSystem_MenuItem_Priority = 13;

		[Token(Token = "0x4001B69")]
		public const string ColorTargetParticleSystem_Manual = "http://doozyui.com/color-target-particlesystem/";

		[Token(Token = "0x4001B6A")]
		public const string ColorTargetParticleSystem_YouTube = "https://youtu.be/eePa65aT_4Q";

		[Token(Token = "0x4001B6B")]
		public const string ColorTargetRawImage_GameObject_Name = "Color Target RawImage";

		[Token(Token = "0x4001B6C")]
		public const string ColorTargetRawImage_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Color Target RawImage";

		[Token(Token = "0x4001B6D")]
		public const int ColorTargetRawImage_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B6E")]
		public const string ColorTargetRawImage_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Color Target RawImage";

		[Token(Token = "0x4001B6F")]
		public const int ColorTargetRawImage_MenuItem_Priority = 13;

		[Token(Token = "0x4001B70")]
		public const string ColorTargetRawImage_Manual = "http://doozyui.com/color-target-rawimage/";

		[Token(Token = "0x4001B71")]
		public const string ColorTargetRawImage_YouTube = "https://youtu.be/5wgYhIY5hVQ";

		[Token(Token = "0x4001B72")]
		public const string ColorTargetSpriteRenderer_GameObject_Name = "Color Target SpriteRenderer";

		[Token(Token = "0x4001B73")]
		public const string ColorTargetSpriteRenderer_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Color Target SpriteRenderer";

		[Token(Token = "0x4001B74")]
		public const int ColorTargetSpriteRenderer_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B75")]
		public const string ColorTargetSpriteRenderer_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Color Target SpriteRenderer";

		[Token(Token = "0x4001B76")]
		public const int ColorTargetSpriteRenderer_MenuItem_Priority = 13;

		[Token(Token = "0x4001B77")]
		public const string ColorTargetSpriteRenderer_Manual = "http://doozyui.com/color-target-spriterenderer/";

		[Token(Token = "0x4001B78")]
		public const string ColorTargetSpriteRenderer_YouTube = "https://youtu.be/OJCM7nbIoQc";

		[Token(Token = "0x4001B79")]
		public const string ColorTargetText_GameObject_Name = "Color Target Text";

		[Token(Token = "0x4001B7A")]
		public const string ColorTargetText_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Color Target Text";

		[Token(Token = "0x4001B7B")]
		public const int ColorTargetText_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B7C")]
		public const string ColorTargetText_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Color Target Text";

		[Token(Token = "0x4001B7D")]
		public const int ColorTargetText_MenuItem_Priority = 13;

		[Token(Token = "0x4001B7E")]
		public const string ColorTargetText_Manual = "http://doozyui.com/color-target-text/";

		[Token(Token = "0x4001B7F")]
		public const string ColorTargetText_YouTube = "https://youtu.be/5HLQnq013ls";

		[Token(Token = "0x4001B80")]
		public const string ColorTargetTextMeshPro_GameObject_Name = "Color Target TextMeshPro";

		[Token(Token = "0x4001B81")]
		public const string ColorTargetTextMeshPro_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Color Target TextMeshPro";

		[Token(Token = "0x4001B82")]
		public const int ColorTargetTextMeshPro_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B83")]
		public const string ColorTargetTextMeshPro_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Color Target TextMeshPro";

		[Token(Token = "0x4001B84")]
		public const int ColorTargetTextMeshPro_MenuItem_Priority = 13;

		[Token(Token = "0x4001B85")]
		public const string ColorTargetTextMeshPro_Manual = "http://doozyui.com/color-target-textmeshpro/";

		[Token(Token = "0x4001B86")]
		public const string ColorTargetTextMeshPro_YouTube = "https://youtu.be/WEisFz1q0Uw";

		[Token(Token = "0x4001B87")]
		public const string ColorTargetSelectable_GameObject_Name = "Color Target Selectable";

		[Token(Token = "0x4001B88")]
		public const string ColorTargetSelectable_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Color Target Selectable";

		[Token(Token = "0x4001B89")]
		public const int ColorTargetSelectable_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B8A")]
		public const string ColorTargetSelectable_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Color Target Selectable";

		[Token(Token = "0x4001B8B")]
		public const int ColorTargetSelectable_MenuItem_Priority = 13;

		[Token(Token = "0x4001B8C")]
		public const string ColorTargetSelectable_Manual = "http://doozyui.com/color-target-selectable/";

		[Token(Token = "0x4001B8D")]
		public const string ColorTargetSelectable_YouTube = "https://youtu.be/y04XQORK6Kk";

		[Token(Token = "0x4001B8E")]
		public const string ColorTargetUnityEvent_GameObject_Name = "Color Target UnityEvent";

		[Token(Token = "0x4001B8F")]
		public const string ColorTargetUnityEvent_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Color Target UnityEvent";

		[Token(Token = "0x4001B90")]
		public const int ColorTargetUnityEvent_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B91")]
		public const string ColorTargetUnityEvent_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Color Target UnityEvent";

		[Token(Token = "0x4001B92")]
		public const int ColorTargetUnityEvent_MenuItem_Priority = 13;

		[Token(Token = "0x4001B93")]
		public const string ColorTargetUnityEvent_Manual = "http://doozyui.com/color-target-unityevent/";

		[Token(Token = "0x4001B94")]
		public const string ColorTargetUnityEvent_YouTube = "https://youtu.be/ChkOH_-zbHU";

		[Token(Token = "0x4001B95")]
		public const string FontTargetText_GameObject_Name = "Font Target Text";

		[Token(Token = "0x4001B96")]
		public const string FontTargetText_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Font Target Text";

		[Token(Token = "0x4001B97")]
		public const int FontTargetText_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B98")]
		public const string FontTargetText_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Font Target Text";

		[Token(Token = "0x4001B99")]
		public const int FontTargetText_MenuItem_Priority = 13;

		[Token(Token = "0x4001B9A")]
		public const string FontTargetText_Manual = "http://doozyui.com/font-target-text/";

		[Token(Token = "0x4001B9B")]
		public const string FontTargetText_YouTube = "https://youtu.be/Nwfj83VrMuM";

		[Token(Token = "0x4001B9C")]
		public const string FontTargetTextMeshPro_GameObject_Name = "Font Target TextMeshPro";

		[Token(Token = "0x4001B9D")]
		public const string FontTargetTextMeshPro_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Font Target TextMeshPro";

		[Token(Token = "0x4001B9E")]
		public const int FontTargetTextMeshPro_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001B9F")]
		public const string FontTargetTextMeshPro_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Font Target TextMeshPro";

		[Token(Token = "0x4001BA0")]
		public const int FontTargetTextMeshPro_MenuItem_Priority = 13;

		[Token(Token = "0x4001BA1")]
		public const string FontTargetTextMeshPro_Manual = "http://doozyui.com/font-target-textmeshpro/";

		[Token(Token = "0x4001BA2")]
		public const string FontTargetTextMeshPro_YouTube = "https://youtu.be/3YUXhF_eY8w";

		[Token(Token = "0x4001BA3")]
		public const string SpriteTargetImage_GameObject_Name = "Sprite Target Image";

		[Token(Token = "0x4001BA4")]
		public const string SpriteTargetImage_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Sprite Target Image";

		[Token(Token = "0x4001BA5")]
		public const int SpriteTargetImage_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001BA6")]
		public const string SpriteTargetImage_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Sprite Target Image";

		[Token(Token = "0x4001BA7")]
		public const int SpriteTargetImage_MenuItem_Priority = 13;

		[Token(Token = "0x4001BA8")]
		public const string SpriteTargetImage_Manual = "http://doozyui.com/sprite-target-image/";

		[Token(Token = "0x4001BA9")]
		public const string SpriteTargetImage_YouTube = "https://youtu.be/dZlHNHfR0po";

		[Token(Token = "0x4001BAA")]
		public const string SpriteTargetSelectable_GameObject_Name = "Sprite Target Selectable";

		[Token(Token = "0x4001BAB")]
		public const string SpriteTargetSelectable_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Sprite Target Selectable";

		[Token(Token = "0x4001BAC")]
		public const int SpriteTargetSelectable_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001BAD")]
		public const string SpriteTargetSelectable_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Sprite Target Selectable";

		[Token(Token = "0x4001BAE")]
		public const int SpriteTargetSelectable_MenuItem_Priority = 13;

		[Token(Token = "0x4001BAF")]
		public const string SpriteTargetSelectable_Manual = "http://doozyui.com/sprite-target-selectable/";

		[Token(Token = "0x4001BB0")]
		public const string SpriteTargetSelectable_YouTube = "https://youtu.be/jkIlc-6xv04";

		[Token(Token = "0x4001BB1")]
		public const string SpriteTargetSpriteRenderer_GameObject_Name = "Sprite Target SpriteRenderer";

		[Token(Token = "0x4001BB2")]
		public const string SpriteTargetSpriteRenderer_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Sprite Target SpriteRenderer";

		[Token(Token = "0x4001BB3")]
		public const int SpriteTargetSpriteRenderer_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001BB4")]
		public const string SpriteTargetSpriteRenderer_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Sprite Target SpriteRenderer";

		[Token(Token = "0x4001BB5")]
		public const int SpriteTargetSpriteRenderer_MenuItem_Priority = 13;

		[Token(Token = "0x4001BB6")]
		public const string SpriteTargetSpriteRenderer_Manual = "http://doozyui.com/sprite-target-spriterenderer/";

		[Token(Token = "0x4001BB7")]
		public const string SpriteTargetSpriteRenderer_YouTube = "https://youtu.be/umoIvXb57Ys";

		[Token(Token = "0x4001BB8")]
		public const string SpriteTargetUnityEvent_GameObject_Name = "Sprite Target UnityEvent";

		[Token(Token = "0x4001BB9")]
		public const string SpriteTargetUnityEvent_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Sprite Target UnityEvent";

		[Token(Token = "0x4001BBA")]
		public const int SpriteTargetUnityEvent_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001BBB")]
		public const string SpriteTargetUnityEvent_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Sprite Target UnityEvent";

		[Token(Token = "0x4001BBC")]
		public const int SpriteTargetUnityEvent_MenuItem_Priority = 13;

		[Token(Token = "0x4001BBD")]
		public const string SpriteTargetUnityEvent_Manual = "http://doozyui.com/sprite-target-unityevent/";

		[Token(Token = "0x4001BBE")]
		public const string SpriteTargetUnityEvent_YouTube = "https://youtu.be/Wbw_eHJRQcM";

		[Token(Token = "0x4001BBF")]
		public const string TextureTargetRawImage_GameObject_Name = "Texture Target RawImage";

		[Token(Token = "0x4001BC0")]
		public const string TextureTargetRawImage_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Texture Target RawImage";

		[Token(Token = "0x4001BC1")]
		public const int TextureTargetRawImage_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001BC2")]
		public const string TextureTargetRawImage_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Texture Target RawImage";

		[Token(Token = "0x4001BC3")]
		public const int TextureTargetRawImage_MenuItem_Priority = 13;

		[Token(Token = "0x4001BC4")]
		public const string TextureTargetRawImage_Manual = "http://doozyui.com/texture-target-rawimage/";

		[Token(Token = "0x4001BC5")]
		public const string TextureTargetRawImage_YouTube = "https://youtu.be/ZJkcAoiCV4Q";

		[Token(Token = "0x4001BC6")]
		public const string TextureTargetUnityEvent_GameObject_Name = "Texture Target UnityEvent";

		[Token(Token = "0x4001BC7")]
		public const string TextureTargetUnityEvent_AddComponentMenu_MenuName = "Doozy/Themes/Targets/Texture Target UnityEvent";

		[Token(Token = "0x4001BC8")]
		public const int TextureTargetUnityEvent_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001BC9")]
		public const string TextureTargetUnityEvent_MenuItem_ItemName = "GameObject/Doozy/Themes/Targets/Texture Target UnityEvent";

		[Token(Token = "0x4001BCA")]
		public const int TextureTargetUnityEvent_MenuItem_Priority = 13;

		[Token(Token = "0x4001BCB")]
		public const string TextureTargetUnityEvent_Manual = "http://doozyui.com/texture-target-unityevent/";

		[Token(Token = "0x4001BCC")]
		public const string TextureTargetUnityEvent_YouTube = "https://youtu.be/_-KnTuoBIhw";

		[Token(Token = "0x4001BCD")]
		private const string Touchy_AddComponentMenu_Path = "Doozy/Touchy/";

		[Token(Token = "0x4001BCE")]
		private const string Touchy_MenuItem_Path = "GameObject/Doozy/Touchy/";

		[Token(Token = "0x4001BCF")]
		public const string GestureListener_GameObject_Name = "Gesture Listener";

		[Token(Token = "0x4001BD0")]
		public const string GestureListener_AddComponentMenu_MenuName = "Doozy/Touchy/Gesture Listener";

		[Token(Token = "0x4001BD1")]
		public const int GestureListener_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001BD2")]
		public const string GestureListener_MenuItem_ItemName = "GameObject/Doozy/Touchy/Gesture Listener";

		[Token(Token = "0x4001BD3")]
		public const int GestureListener_MenuItem_Priority = 13;

		[Token(Token = "0x4001BD4")]
		public const string GestureListener_Manual = "http://doozyui.com/gesture-listener/";

		[Token(Token = "0x4001BD5")]
		public const string GestureListener_YouTube = "https://www.youtube.com/watch?v=x697qCs12QU";

		[Token(Token = "0x4001BD6")]
		public const string TouchDetector_GameObject_Name = "Touch Detector";

		[Token(Token = "0x4001BD7")]
		public const string TouchDetector_AddComponentMenu_MenuName = "Doozy/Touchy/Touch Detector";

		[Token(Token = "0x4001BD8")]
		public const int TouchDetector_AddComponentMenu_Order = 13;

		[Token(Token = "0x4001BD9")]
		public const string TouchDetector_MenuItem_ItemName = "GameObject/Doozy/Touchy/Touch Detector";

		[Token(Token = "0x4001BDA")]
		public const int TouchDetector_MenuItem_Priority = 13;

		[Token(Token = "0x4001BDB")]
		public const string TouchDetector_Manual = "http://doozyui.com/touch-detector/";

		[Token(Token = "0x4001BDC")]
		public const string TouchDetector_YouTube = "https://www.youtube.com/watch?v=ZTz3V8Lv-jQ";

		[Token(Token = "0x4001BDD")]
		private const string UI_AddComponentMenu_Path = "Doozy/UI/";

		[Token(Token = "0x4001BDE")]
		private const string UI_MenuItem_Path = "GameObject/Doozy/UI/";

		[Token(Token = "0x4001BDF")]
		public const string UIButton_GameObject_Name = "UIButton";

		[Token(Token = "0x4001BE0")]
		public const string UIButton_AddComponentMenu_MenuName = "Doozy/UI/UIButton";

		[Token(Token = "0x4001BE1")]
		public const int UIButton_AddComponentMenu_Order = 2;

		[Token(Token = "0x4001BE2")]
		public const string UIButton_MenuItem_ItemName = "GameObject/Doozy/UI/UIButton";

		[Token(Token = "0x4001BE3")]
		public const int UIButton_MenuItem_Priority = 2;

		[Token(Token = "0x4001BE4")]
		public const string UIButton_Manual = "http://doozyui.com/uibutton/";

		[Token(Token = "0x4001BE5")]
		public const string UIButton_YouTube = "https://www.youtube.com/watch?v=Cf73pHkkkAo";

		[Token(Token = "0x4001BE6")]
		public const string UICanvas_GameObject_Name = "UICanvas";

		[Token(Token = "0x4001BE7")]
		public const string UICanvas_AddComponentMenu_MenuName = "Doozy/UI/UICanvas";

		[Token(Token = "0x4001BE8")]
		public const int UICanvas_AddComponentMenu_Order = 2;

		[Token(Token = "0x4001BE9")]
		public const string UICanvas_MenuItem_ItemName = "GameObject/Doozy/UI/UICanvas";

		[Token(Token = "0x4001BEA")]
		public const int UICanvas_MenuItem_Priority = 2;

		[Token(Token = "0x4001BEB")]
		public const string UICanvas_Manual = "http://doozyui.com/uicanvas/";

		[Token(Token = "0x4001BEC")]
		public const string UICanvas_YouTube = "https://www.youtube.com/watch?v=6CCdgP-fdr4";

		[Token(Token = "0x4001BED")]
		public const string UIDrawer_GameObject_Name = "UIDrawer";

		[Token(Token = "0x4001BEE")]
		public const string UIDrawer_AddComponentMenu_MenuName = "Doozy/UI/UIDrawer";

		[Token(Token = "0x4001BEF")]
		public const int UIDrawer_AddComponentMenu_Order = 2;

		[Token(Token = "0x4001BF0")]
		public const string UIDrawer_MenuItem_ItemName = "GameObject/Doozy/UI/UIDrawer";

		[Token(Token = "0x4001BF1")]
		public const int UIDrawer_MenuItem_Priority = 2;

		[Token(Token = "0x4001BF2")]
		public const string UIDrawer_Manual = "http://doozyui.com/uidrawer/";

		[Token(Token = "0x4001BF3")]
		public const string UIDrawer_YouTube = "https://www.youtube.com/watch?v=rhHSvTZckAk";

		[Token(Token = "0x4001BF4")]
		public const string UIImage_GameObject_Name = "UIImage";

		[Token(Token = "0x4001BF5")]
		public const string UIImage_AddComponentMenu_MenuName = "Doozy/UI/UIImage";

		[Token(Token = "0x4001BF6")]
		public const int UIImage_AddComponentMenu_Order = 2;

		[Token(Token = "0x4001BF7")]
		public const string UIImage_MenuItem_ItemName = "GameObject/Doozy/UI/UIImage";

		[Token(Token = "0x4001BF8")]
		public const int UIImage_MenuItem_Priority = 2;

		[Token(Token = "0x4001BF9")]
		public const string UIImage_Manual = "http://doozyui.com/uiimage/";

		[Token(Token = "0x4001BFA")]
		public const string UIImage_YouTube = "https://youtu.be/rpeNiPES4e0";

		[Token(Token = "0x4001BFB")]
		public const string UIPopup_GameObject_Name = "UIPopup";

		[Token(Token = "0x4001BFC")]
		public const string UIPopup_AddComponentMenu_MenuName = "Doozy/UI/UIPopup";

		[Token(Token = "0x4001BFD")]
		public const int UIPopup_AddComponentMenu_Order = 2;

		[Token(Token = "0x4001BFE")]
		public const string UIPopup_MenuItem_ItemName = "GameObject/Doozy/UI/UIPopup";

		[Token(Token = "0x4001BFF")]
		public const int UIPopup_MenuItem_Priority = 2;

		[Token(Token = "0x4001C00")]
		public const string UIPopup_Manual = "http://doozyui.com/uipopup/";

		[Token(Token = "0x4001C01")]
		public const string UIPopup_YouTube = "https://www.youtube.com/watch?v=TQXgouPw5rY";

		[Token(Token = "0x4001C02")]
		public const string UIView_GameObject_Name = "UIView";

		[Token(Token = "0x4001C03")]
		public const string UIView_AddComponentMenu_MenuName = "Doozy/UI/UIView";

		[Token(Token = "0x4001C04")]
		public const int UIView_AddComponentMenu_Order = 2;

		[Token(Token = "0x4001C05")]
		public const string UIView_MenuItem_ItemName = "GameObject/Doozy/UI/UIView";

		[Token(Token = "0x4001C06")]
		public const int UIView_MenuItem_Priority = 2;

		[Token(Token = "0x4001C07")]
		public const string UIView_Manual = "http://doozyui.com/uiview/";

		[Token(Token = "0x4001C08")]
		public const string UIView_YouTube = "https://www.youtube.com/watch?v=fzetthl5dSA";

		[Token(Token = "0x4001C09")]
		public const string UIToggle_GameObject_Name = "UIToggle";

		[Token(Token = "0x4001C0A")]
		public const string UIToggle_AddComponentMenu_MenuName = "Doozy/UI/UIToggle";

		[Token(Token = "0x4001C0B")]
		public const int UIToggle_AddComponentMenu_Order = 2;

		[Token(Token = "0x4001C0C")]
		public const string UIToggle_MenuItem_ItemName = "GameObject/Doozy/UI/UIToggle";

		[Token(Token = "0x4001C0D")]
		public const int UIToggle_MenuItem_Priority = 2;

		[Token(Token = "0x4001C0E")]
		public const string UIToggle_Manual = "http://doozyui.com/uitoggle/";

		[Token(Token = "0x4001C0F")]
		public const string UIToggle_YouTube = "https://www.youtube.com/watch?v=aTzuxGstbbY";

		[Token(Token = "0x4001C10")]
		public const string DoozyWindow_MenuItem_ItemName = "Tools/Doozy/Control Panel &d";

		[Token(Token = "0x4001C11")]
		public const string DoozyWindow_OpenShortcut = " &d";

		[Token(Token = "0x4001C12")]
		public const int DoozyWindow_MenuItem_Order = 0;

		[Token(Token = "0x4001C13")]
		public const string Refresh_MenuItem_ItemName = "Tools/Doozy/Refresh";

		[Token(Token = "0x4001C14")]
		public const string Refresh_OpenShortcut = "";

		[Token(Token = "0x4001C15")]
		public const int Refresh_MenuItem_Order = 1;

		[Token(Token = "0x4001C16")]
		public const string NodyWindow_MenuItem_ItemName = "Tools/Doozy/Nody";

		[Token(Token = "0x4001C17")]
		public const string NodyWindow_OpenShortcut = "";

		[Token(Token = "0x4001C18")]
		public const int NodyWindow_MenuItem_Order = 900;
	}
	[Token(Token = "0x200049B")]
	public static class ScriptUtils
	{
		[Token(Token = "0x4001C19")]
		public const char STRING_SEPARATOR = '|';

		[Token(Token = "0x4001C1A")]
		private const string BASE64_IDENTIFIER = "B64|";

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly bool debug;

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xFCB7D0", Offset = "0xFCB7D0", VA = "0xFCB7D0")]
		public static string DecodeString(string data)
		{
			return null;
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xFCB8AC", Offset = "0xFCB8AC", VA = "0xFCB8AC")]
		public static string EncodeString(string data)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200049C")]
	public class UILanguagePack : LanguagePack
	{
		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Language s_loadedLanguage;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static UILanguagePack s_instance;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Language TargetLanguage;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Labels")]
		public string Action;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Actions;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string ActivateLoadedScenesNodeName;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string ActiveNode;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string ActiveVariant;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string ActiveSceneChange;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string AddCategory;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string AddItem;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string AddSounds;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string AddSource;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string AddSymbolToAllBuildTargetGroups;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string AddToPopupQueue;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string After;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string AfterDelay;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string AllowMultipleClicks;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string AllowSceneActivation;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string AllSoundsBeforePlaying;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string AlternateInput;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string AlternateKeyCode;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string AlternateVirtualButton;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string AnimateAllUIViewsWithSameCategoryAndName;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string AnimateValue;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string Animation;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string AnimationCurve;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string AnimationType;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string Animator;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string AnimatorEvents;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string Animators;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public string AnotherEntryExists;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string AnyButton;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string AnyGameEvent;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public string AnyGameEventWillTriggerThisListener;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string AnyScene;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public string AnyUIButton;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public string AnyUIDrawer;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public string AnyUIView;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string AnyUIButtonWillTriggerThisListener;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public string AnyUIDrawerWillTriggerThisListener;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public string AnyUIViewWillTriggerThisListener;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public string AutoSave;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public string AutoSaveDisabled;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public string AutoSaveEnabled;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string ApplicationQuit;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public string AreYouSureConvertToGraph;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string AreYouSureConvertToSubGraph;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public string AreYouSureYouWantToDeleteDatabase;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public string AreYouSureYouWantToDeleteTheme;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public string AreYouSureYouWantToDeletePopupReference;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public string AreYouSureYouWantToRemoveCategory;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public string AreYouSureYouWantToRemoveTheEntry;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public string AreYouSureYouWantToResetDatabase;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public string Arrow;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public string ArrowComponents;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public string AtFinish;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public string AtStart;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public string AudioClip;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public string AutoDisableUIInteractionsDescription;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public string AutoHideAfterShow;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public string AutoKillIdleControllers;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public string AutoKillIdleControllersDescription;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public string AutoRebuild;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public string AutoResetSequence;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public string AutoSelectButtonAfterShow;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public string AutoSelectPreviouslySelectedButtonAfterHide;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public string AutoSort;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public string AutoStartLoopAnimation;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public string BackButton;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public string BackButtonNodeName;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public string Behavior;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public string BehaviorAtStart;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public string Behaviors;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public string BlockBackButton;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public string BorderWidth;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public string BuildIndex;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public string ButtonCategory;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public string ButtonLabel;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public string ButtonName;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public string Buttons;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public string Cancel;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public string CannotAddEmptyEntry;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public string Canvas;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public string CanvasName;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public string Category;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public string CategoryIsEmpty;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public string Center;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public string CenterSelectedNodes;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public string Chance;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public string CheckingForIssues;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public string ChildHeight;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public string ChildHeightFactor;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public string ChildRotation;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public string ChildWidth;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public string ChildWidthFactor;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public string Clear;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public string ClearRecentOpenedGraphsList;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public string ClearRecentOpenedGraphsListDescription;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public string ClearSearch;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public string ClickAnywhere;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public string ClickContainer;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public string ClickMode;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public string ClickOverlay;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public string Clockwise;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public string Close;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public string Closed;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public string CloseDirection;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public string ClosedPosition;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public string CloseDrawer;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public string CloseSpeed;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		public string Color;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public string Compiling;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public string ComponentDisabled;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public string Connected;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public string ConnectionPoint;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public string Connections;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		public string Container;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public string ContainerSize;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public string Continue;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public string ControlChildHeight;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public string ControlChildWidth;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		public string ControllerIdleKillDuration;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		public string ControllerIdleKillDurationDescription;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		public string ControllerName;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		public string ConvertToGraph;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		public string ConvertToSubGraph;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		public string Copy;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public string Create;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		public string CreateAnimation;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		public string CreateGraph;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		public string CreateNewCategory;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		public string CreateNewGraph;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		public string CreateNewGraphAsSubGraph;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		public string CreateNode;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		public string CreateParentAndCenterPivot;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		public string CreateSubGraph;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		public string CurrentTimeScale;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		public string Custom;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		public string CustomName;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		public string CustomPosition;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		public string CustomResetValue;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		public string CustomSortingLayer;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		public string CustomSortingOrder;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		public string CustomStartPosition;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		public string Cut;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		public string Database;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		public string DatabaseAlreadyExists;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		public string ThemeNameAlreadyExists;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		public string DatabaseHasBeenReset;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		public string DatabaseIsEmpty;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		public string DatabaseName;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		public string DatabaseRefreshed;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		public string DatabaseSorted;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		public string Debug;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		public string DebugMode;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		public string DefaultDotAnimationSpeedDescription;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		public string DefaultValues;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		public string DefaultValuesDescription;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		public string DefaultZoom;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		public string DefaultZoomDescription;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		public string Delete;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		public string DeleteDatabase;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		public string DeleteTheme;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		public string DeletedPopupReference;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
		public string DeletePopupReference;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
		public string DeletePreset;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		public string Description;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		public string Deselect;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
		public string DeselectAnyButton;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		public string DeselectButton;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		public string DeselectButtonAfterClick;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		public string DestroyAfterHide;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		public string DetectGestures;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
		public string Direction;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		public string Disable;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		public string DisableButtonInterval;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
		public string DisableCanvas;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
		public string Disabled;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
		public string DisableFunctionality;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
		public string DisableGameObject;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
		public string DisableInterval;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
		public string DisablePlugin;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
		public string DisableTriggerAfterActivation;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
		public string Disconnect;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
		public string DispatchButtonClicks;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
		public string DispatchGameEvents;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
		public string DisplayTarget;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
		public string DontDestroyGameObjectOnLoad;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
		public string DotAnimationSpeed;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
		public string Down;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
		public string DragDrawer;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
		public string DrawerName;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
		public string DropAudioClipsHere;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
		public string Duration;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
		public string Ease;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
		public string EaseType;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
		public string EditMode;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
		public string Effect;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
		public string Elasticity;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
		public string Email;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
		public string Empty;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
		public string Enable;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
		public string Enabled;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
		public string EnableFunctionality;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
		public string EnablePlugin;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
		public string EnableSupportForMasterAudio;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
		public string EnterCategoryName;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
		public string EnterDatabaseName;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
		public string EnterThemeName;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
		public string EnterGameEventToListenFor;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
		public string EnterNodeName;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
		public string Error;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
		public string Event;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
		public string EveryLongTapWillTriggerThisListener;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
		public string EverySwipeWillTriggerThisListener;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
		public string EveryTapWillTriggerThisListener;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
		public string ExitNodeName;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
		public string ExposedParameterName;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
		public string Fade;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
		public string FadeBy;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
		public string FadeFrom;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
		public string FadeOutContainer;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
		public string FadeTo;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
		public string Feather;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
		public string FeatherExpandsSize;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
		public string FillAmount;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
		public string FillCenter;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
		public string FillMethod;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
		public string FillOrigin;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
		public string FixedSize;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
		public string Font;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
		public string FontAsset;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
		public string FsmName;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
		public string Functionality;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
		public string FunctionalityDescription;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
		public string GameEvent;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
		public string GameEvents;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
		public string GameObject;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
		public string GeneralSettings;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
		public string GestureType;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
		public string GetInTouch;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
		public string GetPosition;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
		public string GetSceneBy;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
		public string GlobalListener;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
		public string GoToEnterNode;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B8")]
		public string GoToExitNode;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
		public string GoToStartNode;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C8")]
		public string Graph;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
		public string GraphHasNoNodes;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D8")]
		public string GraphicRaycaster;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
		public string GraphId;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
		public string GraphModel;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
		public string HasBeenAddedToClipboard;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F8")]
		public string Height;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
		public string HeightFromRadius;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x808")]
		public string HeightRadiusFactor;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
		public string Help;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x818")]
		public string HelpResources;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
		public string Hide;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x828")]
		public string HideAnimationWillNotWork;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
		public string HideOnBackButton;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x838")]
		public string HidePopup;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
		public string HideProgressor;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x848")]
		public string HideUIPopupBy;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
		public string HideView;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x858")]
		public string HideViews;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
		public string HowToUse;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x868")]
		public string IdleCheckInterval;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
		public string IdleCheckIntervalDescription;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x878")]
		public string IgnoreListenerPause;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
		public string IgnoreTimescale;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x888")]
		public string Image;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
		public string Images;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x898")]
		public string ImageType;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
		public string IncludeAudioClipNamesInSearch;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A8")]
		public string Info;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
		public string InputConnected;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B8")]
		public string InputConnections;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C0")]
		public string InputMode;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C8")]
		public string InputNotConnected;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D0")]
		public string Installed;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D8")]
		public string InstantAction;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E0")]
		public string InstantAnimation;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E8")]
		public string Integrations;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F0")]
		public string IsNotPrefab;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8F8")]
		public string Key;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x900")]
		public string KeyCode;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x908")]
		public string Label;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x910")]
		public string Labels;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x918")]
		public string Language;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x920")]
		public string LastModified;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x928")]
		public string Left;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x930")]
		public string ListenFor;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x938")]
		public string ListenForAllGameEvents;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x940")]
		public string ListenForAllUIButtons;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x948")]
		public string ListenForAllUIDrawers;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x950")]
		public string ListenForAllUIViews;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x958")]
		public string ListeningForGameEvent;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x960")]
		public string ListIsEmpty;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x968")]
		public string Load;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x970")]
		public string LoadBehavior;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x978")]
		public string LoadedGraph;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x980")]
		public string LoadPreset;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x988")]
		public string LoadSceneBy;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x990")]
		public string LoadSceneMode;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x998")]
		public string LoadSceneNodeName;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A0")]
		public string LoadSelectedPresetAtRuntime;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A8")]
		public string LongTapDuration;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B0")]
		public string LongTapDurationDescription;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B8")]
		public string LoopSound;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C0")]
		public string LoopType;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C8")]
		public string LoopView;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D0")]
		public string Manual;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D8")]
		public string Material;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E0")]
		public string Max;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E8")]
		public string MaxAngle;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F0")]
		public string MaxHeightFactor;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F8")]
		public string MaxRadius;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA00")]
		public string MaxValue;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA08")]
		public string MaxWidthFactor;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA10")]
		public string Min;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA18")]
		public string MinAngle;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA20")]
		public string MinimumNumberOfControllers;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA28")]
		public string MinimumNumberOfControllersDescription;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA30")]
		public string MinimumSize;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA38")]
		public string MinValue;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA40")]
		public string MissingPrefabReference;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA48")]
		public string Move;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA50")]
		public string MoveBy;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA58")]
		public string MoveDown;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA60")]
		public string MoveFrom;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA68")]
		public string MoveTo;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA70")]
		public string MoveUp;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA78")]
		public string Multiplier;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA80")]
		public string MuteAllSounds;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA88")]
		public string Name;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA90")]
		public string New;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA98")]
		public string NewCategory;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA0")]
		public string NewCategoryNameCannotBeEmpty;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA8")]
		public string NewColor;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB0")]
		public string NewDatabase;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB8")]
		public string NewFont;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC0")]
		public string NewFontAsset;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC8")]
		public string NewPopup;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD0")]
		public string NewPreset;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD8")]
		public string NewPresetNameCannotBeEmpty;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE0")]
		public string NewSprite;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE8")]
		public string NewTexture;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF0")]
		public string News;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAF8")]
		public string NewSoundDatabase;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB00")]
		public string NewTheme;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB08")]
		public string NewThemeName;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB10")]
		public string NewThemeVariant;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB18")]
		public string No;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB20")]
		public string NoAnimationEnabled;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB28")]
		public string NoAnimatorFound;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB30")]
		public string Node;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB38")]
		public string NodeId;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB40")]
		public string NodeName;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB48")]
		public string NodeNameTooltip;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB50")]
		public string Nodes;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB58")]
		public string NodeState;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB60")]
		public string NodeWidth;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB68")]
		public string NodySettings;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB70")]
		public string NoGraphReferenced;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB78")]
		public string NoPropertyFound;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB80")]
		public string NormalLoopAnimation;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB88")]
		public string NoSound;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB90")]
		public string NoSoundsHaveBeenAdded;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB98")]
		public string NotConnected;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA0")]
		public string Notes;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA8")]
		public string NoteworthyInformation;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB0")]
		public string NotInstalled;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB8")]
		public string NumberOfLoops;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC0")]
		public string Ok;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC8")]
		public string OnAnimationFinished;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD0")]
		public string OnAnimationStart;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD8")]
		public string OnClick;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE0")]
		public string OnDeselected;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE8")]
		public string OnDisable;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF0")]
		public string OnDoubleClick;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF8")]
		public string OnEnable;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC00")]
		public string OnEnter;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC08")]
		public string OnEnterNode;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC10")]
		public string OnExit;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC18")]
		public string OnExitNode;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC20")]
		public string OnFixedUpdate;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC28")]
		public string OnLateUpdate;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC30")]
		public string OnLoadScene;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC38")]
		public string OnLongClick;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC40")]
		public string OnNodeFixedUpdate;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC48")]
		public string OnNodeLateUpdate;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC50")]
		public string OnNodeUpdate;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC58")]
		public string OnPointerDown;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC60")]
		public string OnPointerEnter;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC68")]
		public string OnPointerExit;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC70")]
		public string OnPointerUp;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC78")]
		public string OnRightClick;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC80")]
		public string OnSceneLoaded;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC88")]
		public string OnSelected;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC90")]
		public string OnTrigger;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC98")]
		public string OnUpdate;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA0")]
		public string Open;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA8")]
		public string OpenControlPanel;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB0")]
		public string OpenDatabase;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB8")]
		public string OpenDrawer;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC0")]
		public string Opened;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC8")]
		public string OpenedPosition;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD0")]
		public string OpenGraph;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD8")]
		public string OpenNody;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE0")]
		public string OpenSpeed;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE8")]
		public string OpenSubGraph;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF0")]
		public string OperationCannotBeUndone;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCF8")]
		public string OrientationDetectorDescription;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD00")]
		public string OtherReferences;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD08")]
		public string OutputAudioMixerGroup;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD10")]
		public string OutputConnected;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD18")]
		public string OutputConnections;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD20")]
		public string OutputMixerGroup;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD28")]
		public string OutputNotConnected;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD30")]
		public string Overlay;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD38")]
		public string Override;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD40")]
		public string OverrideAlpha;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD48")]
		public string OverrideColor;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD50")]
		public string Overview;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD58")]
		public string OverviewZoom;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD60")]
		public string ParameterName;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD68")]
		public string ParameterType;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD70")]
		public string ParticleSystem;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD78")]
		public string Paste;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD80")]
		public string PauseAllSounds;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD88")]
		public string PercentageOfScreenZeroToOne;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD90")]
		public string PitchSemitones;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD98")]
		public string Play;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA0")]
		public string PlayAnimationInZeroSeconds;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA8")]
		public string PlayMode;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB0")]
		public string PlaySound;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB8")]
		public string PleaseEnterNewName;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC0")]
		public string PopupName;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC8")]
		public string PopupPrefab;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD0")]
		public string Portal;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD8")]
		public string PortalNodeName;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE0")]
		public string Prefab;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE8")]
		public string Prefix;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF0")]
		public string PreserveAspect;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF8")]
		public string PresetCategory;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE00")]
		public string PresetName;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE08")]
		public string PreviewAnimation;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE10")]
		public string Progress;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE18")]
		public string Progressor;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE20")]
		public string Progressors;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE28")]
		public string ProgressTargets;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE30")]
		public string PunchBy;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE38")]
		public string Radius;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE40")]
		public string RadiusControlsHeight;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE48")]
		public string RadiusControlsWidth;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE50")]
		public string RadiusHeightFactor;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE58")]
		public string RadiusWidthFactor;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE60")]
		public string RandomDuration;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE68")]
		public string RandomNodeName;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE70")]
		public string Range;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE78")]
		public string RawImage;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE80")]
		public string RaycastTarget;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE88")]
		public string Recent;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE90")]
		public string Refresh;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE98")]
		public string RefreshDatabase;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA0")]
		public string RegisterInterval;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA8")]
		public string Remove;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB0")]
		public string RemoveCategory;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB8")]
		public string RemovedDuplicateEntries;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC0")]
		public string RemovedEntriesWithNoName;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC8")]
		public string RemovedEntriesWithNullPrefabs;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED0")]
		public string RemovedEntry;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED8")]
		public string RemovedNullEntries;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE0")]
		public string RemoveDuplicates;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE8")]
		public string RemoveEmptyCategories;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF0")]
		public string RemoveEmptyEntries;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF8")]
		public string RemoveItem;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF00")]
		public string RemoveNullEntries;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF08")]
		public string RemoveSymbolFromAllBuildTargetGroups;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF10")]
		public string Rename;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF18")]
		public string RenameCategory;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF20")]
		public string RenameCategoryDialogMessage;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF28")]
		public string RenameGameObjectTo;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF30")]
		public string RenameNodeTo;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF38")]
		public string RenamePrefix;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF40")]
		public string RenameSoundDatabase;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF48")]
		public string RenameTheme;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF50")]
		public string RenameSoundDatabaseDialogMessage;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF58")]
		public string RenameSuffix;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF60")]
		public string RenameTo;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF68")]
		public string Reset;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF70")]
		public string ResetAnimationSettings;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF78")]
		public string ResetClosedPosition;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF80")]
		public string ResetDatabase;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF88")]
		public string ResetDelay;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF90")]
		public string ResetOpenedPosition;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF98")]
		public string ResetPosition;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA0")]
		public string ResetRoot;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA8")]
		public string ResetTrigger;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB0")]
		public string ResetValue;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB8")]
		public string Right;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC0")]
		public string Rotate;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC8")]
		public string RotateBy;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD0")]
		public string RotateChildren;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD8")]
		public string RotateFrom;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE0")]
		public string RotateMode;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE8")]
		public string RotateTo;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF0")]
		public string RuntimeOptions;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFF8")]
		public string RuntimePreset;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1000")]
		public string Save;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1008")]
		public string SaveAs;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1010")]
		public string SavePreset;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1018")]
		public string Scale;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1020")]
		public string ScaleBy;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1028")]
		public string ScaleFrom;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1030")]
		public string ScaleTo;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1038")]
		public string Scene;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1040")]
		public string SceneActivationDelay;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1048")]
		public string SceneBuildIndex;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1050")]
		public string SceneLoad;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1058")]
		public string SceneName;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1060")]
		public string SceneUnload;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1068")]
		public string ScriptingDefineSymbol;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1070")]
		public string Search;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1078")]
		public string SearchForCategories;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1080")]
		public string SearchForDatabases;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1088")]
		public string SearchForUIPopupLinks;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1090")]
		public string SearchForThemes;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1098")]
		public string Seconds;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A0")]
		public string SecondsDelay;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A8")]
		public string Select;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B0")]
		public string Selectable;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B8")]
		public string SelectButton;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C0")]
		public string SelectedLoopAnimation;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C8")]
		public string SelectedTheme;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D0")]
		public string SelectSwipeDirection;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D8")]
		public string Send;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E0")]
		public string SendGameEvent;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E8")]
		public string SendGameEvents;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F0")]
		public string SetActiveNode;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F8")]
		public string SetAsSoundName;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1100")]
		public string SetBoolValueTo;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1108")]
		public string SetFloatValueTo;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1110")]
		public string SetIntValueTo;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1118")]
		public string SetPosition;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1120")]
		public string SetTargetGameObject;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1128")]
		public string Settings;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1130")]
		public string SetUIButtonToListenFor;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1138")]
		public string SetUIDrawerToListenFor;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1140")]
		public string SetUIViewToListenFor;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1148")]
		public string SetValue;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1150")]
		public string Show;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1158")]
		public string ShowAnimationWillNotWork;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1160")]
		public string ShowCurveModifier;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1168")]
		public string ShowNodeNotes;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1170")]
		public string ShowNodeNotesDescription;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1178")]
		public string ShowPopup;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1180")]
		public string ShowProgressor;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1188")]
		public string ShowView;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1190")]
		public string ShowViews;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1198")]
		public string Simulate;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A0")]
		public string SocialLinks;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A8")]
		public string Socket;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B0")]
		public string Sort;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11B8")]
		public string SortDatabase;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C0")]
		public string SortingSteps;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C8")]
		public string Sound;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D0")]
		public string SoundAction;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D8")]
		public string SoundDatabases;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E0")]
		public string SoundName;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E8")]
		public string SoundNodeName;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F0")]
		public string Sounds;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F8")]
		public string SoundSource;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1200")]
		public string Soundy;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1208")]
		public string SoundyDatabase;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1210")]
		public string ThemeName;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1218")]
		public string SoundySettings;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1220")]
		public string SourceImage;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1228")]
		public string SourceName;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1230")]
		public string Sources;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1238")]
		public string Spacing;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1240")]
		public string SpatialBlend;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1248")]
		public string Speed;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1250")]
		public string Sprite;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1258")]
		public string SpriteRenderer;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1260")]
		public string StartAngle;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1268")]
		public string StartDelay;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1270")]
		public string StartNodeName;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1278")]
		public string StopAllSounds;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1280")]
		public string StopAnimation;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1288")]
		public string StopBehavior;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1290")]
		public string StopSound;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1298")]
		public string SubGraph;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A0")]
		public string SubGraphNodeName;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A8")]
		public string Suffix;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B0")]
		public string SupportEmail;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B8")]
		public string SwipeDirection;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C0")]
		public string SwipeLength;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C8")]
		public string SwipeLengthDescription;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D0")]
		public string SwitchBackNodeName;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D8")]
		public string SwitchBackMode;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E0")]
		public string Target;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E8")]
		public string TargetAnimator;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12F0")]
		public string TargetAnimatorDoesNotHaveAnAnimatorController;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12F8")]
		public string TargetAnimatorDoesNotHaveAnyParameters;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1300")]
		public string TargetCanvas;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1308")]
		public string TargetFsm;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1310")]
		public string TargetGameObject;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1318")]
		public string TargetLabel;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1320")]
		public string TargetMixer;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1328")]
		public string TargetOrientation;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1330")]
		public string TargetProgress;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1338")]
		public string TargetTheme;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1340")]
		public string TargetTimeScale;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1348")]
		public string TargetValue;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1350")]
		public string TargetVariable;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1358")]
		public string TargetVariant;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1360")]
		public string Text;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1368")]
		public string TextLabel;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1370")]
		public string TextMeshPro;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1378")]
		public string TextMeshProLabel;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1380")]
		public string Texture;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1388")]
		public string ThemeNode;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1390")]
		public string Themes;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1398")]
		public string ThemesAutoSaveEnabled;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A0")]
		public string ThemesAutoSaveDisabled;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A8")]
		public string ThemesDisableAutoSave;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B0")]
		public string ThemesEnableAutoSave;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B8")]
		public string Time;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C0")]
		public string TimeScaleNodeName;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C8")]
		public string ToggleComponentBehaviors;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D0")]
		public string ToggleOFF;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D8")]
		public string ToggleON;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E0")]
		public string ToggleProgressor;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E8")]
		public string ToggleSupportForThirdPartyPlugins;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13F0")]
		public string Tolerance;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13F8")]
		public string TouchySettings;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1400")]
		public string TriggerAction;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1408")]
		public string TriggerEventsAfterAnimation;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1410")]
		public string TriggerName;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1418")]
		public string TriggerValue;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1420")]
		public string UIDrawerNodeName;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1428")]
		public string UINodeNodeName;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1430")]
		public string UIPopupDatabase;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1438")]
		public string UnityEvent;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1440")]
		public string UnityEvents;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1448")]
		public string UnloadSceneNodeName;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1450")]
		public string UnmuteAllSounds;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1458")]
		public string UnpauseAllSounds;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1460")]
		public string Up;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1468")]
		public string UpdateContainer;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1470")]
		public string UpdateEffect;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1478")]
		public string TriggerActions;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1480")]
		public string Is;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1488")]
		public string And;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1490")]
		public string To;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1498")]
		public string UpdateOnHide;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A0")]
		public string UpdateOnShow;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A8")]
		public string UpdatePopupName;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B0")]
		public string UpdatePopupPrefab;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B8")]
		public string UpdateValue;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C0")]
		public string UseBackButtonDescription;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C8")]
		public string UseCustomFromAndTo;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D0")]
		public string UsefulLinks;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D8")]
		public string UseLogarithmicConversion;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14E0")]
		public string UseMultiplier;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14E8")]
		public string UseUnscaledTime;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14F0")]
		public string Value;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14F8")]
		public string Version;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1500")]
		public string Vibrato;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1508")]
		public string ViewCategory;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1510")]
		public string ViewName;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1518")]
		public string VirtualButton;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1520")]
		public string VolumeDb;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1528")]
		public string WaitFor;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1530")]
		public string WaitForAnimationToFinish;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1538")]
		public string WaitForSceneToUnload;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1540")]
		public string WaitNodeName;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1548")]
		public string Warning;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1550")]
		public string Weight;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1558")]
		public string When;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1560")]
		public string WhenUIDrawerIsClosed;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1568")]
		public string WhenUIPopupIsHiddenDisable;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1570")]
		public string WhenUIViewIsHiddenDisable;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1578")]
		public string WholeNumbers;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1580")]
		public string Width;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1588")]
		public string X;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1590")]
		public string Y;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1598")]
		public string Yes;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A0")]
		public string YouAreResponsibleToUpdateYourCode;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A8")]
		public string YouTube;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B0")]
		[Header("Info Messages")]
		public string MissingTargetFsmMessage;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B8")]
		public string SelectListenerToActivateMessage;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C0")]
		public string HasChildViews;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C8")]
		public string HowToUsePlaymakerEventDispatcherMessage;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D0")]
		public string MissingDrawerNameTitle;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D8")]
		public string MissingDrawerNameMessage;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15E0")]
		public string MissingGameEventTitle;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15E8")]
		public string MissingGameEventMessage;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15F0")]
		public string MissingSceneNameTitle;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15F8")]
		public string MissingSceneNameMessage;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1600")]
		public string WrongSceneBuildIndexTitle;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1608")]
		public string WrongSceneBuildIndexMessage;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1610")]
		public string DoubleClickNodeToOpenSubGraphMessage;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1618")]
		public string DuplicateNodeMessage;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1620")]
		public string DuplicateNodeTitle;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1628")]
		public string NoGraphReferencedMessage;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1630")]
		public string NoGraphReferencedTitle;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1638")]
		public string NoSourceConnectedMessage;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1640")]
		public string NoSourceConnectedTitle;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1648")]
		public string NoSubGraphReferencedMessage;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1650")]
		public string NoSubGraphReferencedTitle;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1658")]
		public string NoTargetConnectedMessage;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1660")]
		public string NoTargetConnectedTitle;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1668")]
		public string NotConnectedMessage;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1670")]
		public string NotConnectedTitle;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1678")]
		public string NotListeningForAnyGameEventMessage;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1680")]
		public string NotListeningForAnyGameEventTitle;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1688")]
		public string NotSendingAnyGameEventMessage;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1690")]
		public string NotSendingAnyGameEventTitle;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1698")]
		public string ProgressTargetAnimatorParameterInfo;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A0")]
		public string ReferencedGraphIsNotSubGraphMessage;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A8")]
		public string ReferencedGraphIsNotSubGraphTitle;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16B0")]
		public string ReferencedGraphIsSubGraphMessage;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16B8")]
		public string ReferencedGraphIsSubGraphTitle;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C0")]
		public string SomeProgressTargetsGetUpdatedOnlyInPlayMode;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C8")]
		public string SupportForMasterAudioNotEnabled;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D0")]
		public string SupportForPlaymakerNotEnabled;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D8")]
		public string SupportForTextMeshProNotEnabled;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E0")]
		public string ThisClassShouldBeExtended;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E8")]
		public string UnnamedNodeMessage;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16F0")]
		public string UnnamedNodeTitle;

		[Token(Token = "0x170003BB")]
		public static UILanguagePack Instance
		{
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xFCB98C", Offset = "0xFCB98C", VA = "0xFCB98C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xFCBB34", Offset = "0xFCBB34", VA = "0xFCBB34")]
		public UILanguagePack()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public static class UnityResources
	{
	}
}
namespace Doozy.Engine.Utils.ColorModels
{
	[Serializable]
	[Token(Token = "0x200049E")]
	public class CMY
	{
		[Token(Token = "0x200049F")]
		public class C
		{
			[Token(Token = "0x4001EFD")]
			public const float MIN = 0f;

			[Token(Token = "0x4001EFE")]
			public const float MAX = 1f;

			[Token(Token = "0x4001EFF")]
			public const int F = 100;

			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xFD3CA0", Offset = "0xFD3CA0", VA = "0xFD3CA0")]
			public C()
			{
			}
		}

		[Token(Token = "0x20004A0")]
		public class M
		{
			[Token(Token = "0x4001F00")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F01")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F02")]
			public const int F = 100;

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xFD3CA8", Offset = "0xFD3CA8", VA = "0xFD3CA8")]
			public M()
			{
			}
		}

		[Token(Token = "0x20004A1")]
		public class Y
		{
			[Token(Token = "0x4001F03")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F04")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F05")]
			public const int F = 100;

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xFD3CB0", Offset = "0xFD3CB0", VA = "0xFD3CB0")]
			public Y()
			{
			}
		}

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float c;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float y;

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xFD3590", Offset = "0xFD3590", VA = "0xFD3590")]
		public CMY(float C, float M, float Y)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xFD35CC", Offset = "0xFD35CC", VA = "0xFD35CC")]
		public CMY Copy()
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xFD3644", Offset = "0xFD3644", VA = "0xFD3644")]
		public Color Color(float alpha = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xFD36E8", Offset = "0xFD36E8", VA = "0xFD36E8")]
		public RGB ToRGB()
		{
			return null;
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xFD36F0", Offset = "0xFD36F0", VA = "0xFD36F0")]
		public CMY Validate()
		{
			return null;
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xFD3724", Offset = "0xFD3724", VA = "0xFD3724")]
		private float ValidateColor(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xFD3738", Offset = "0xFD3738", VA = "0xFD3738")]
		public Vector3 Factorize()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xFD37B4", Offset = "0xFD37B4", VA = "0xFD37B4")]
		private int FactorizeColor(float value, float min, float max, float f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xFD3884", Offset = "0xFD3884", VA = "0xFD3884")]
		public string ToString(bool factorize = false)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004A2")]
	public class CMYK
	{
		[Token(Token = "0x20004A3")]
		public class C
		{
			[Token(Token = "0x4001F0A")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F0B")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F0C")]
			public const int F = 100;

			[Token(Token = "0x6001E16")]
			[Address(RVA = "0xFD44C8", Offset = "0xFD44C8", VA = "0xFD44C8")]
			public C()
			{
			}
		}

		[Token(Token = "0x20004A4")]
		public class M
		{
			[Token(Token = "0x4001F0D")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F0E")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F0F")]
			public const int F = 100;

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0xFD44D0", Offset = "0xFD44D0", VA = "0xFD44D0")]
			public M()
			{
			}
		}

		[Token(Token = "0x20004A5")]
		public class Y
		{
			[Token(Token = "0x4001F10")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F11")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F12")]
			public const int F = 100;

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xFD44D8", Offset = "0xFD44D8", VA = "0xFD44D8")]
			public Y()
			{
			}
		}

		[Token(Token = "0x20004A6")]
		public class K
		{
			[Token(Token = "0x4001F13")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F14")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F15")]
			public const int F = 100;

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xFD44E0", Offset = "0xFD44E0", VA = "0xFD44E0")]
			public K()
			{
			}
		}

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float c;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float y;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float k;

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xFD3CB8", Offset = "0xFD3CB8", VA = "0xFD3CB8")]
		public CMYK(float C, float M, float Y, float K)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xFD3CF8", Offset = "0xFD3CF8", VA = "0xFD3CF8")]
		public CMYK Copy()
		{
			return null;
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xFD3D70", Offset = "0xFD3D70", VA = "0xFD3D70")]
		public Color Color(float alpha = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xFD3DBC", Offset = "0xFD3DBC", VA = "0xFD3DBC")]
		public RGB ToRGB()
		{
			return null;
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xFD3DC4", Offset = "0xFD3DC4", VA = "0xFD3DC4")]
		public CMYK Validate()
		{
			return null;
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xFD3E00", Offset = "0xFD3E00", VA = "0xFD3E00")]
		private float ValidateColor(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xFD3E14", Offset = "0xFD3E14", VA = "0xFD3E14")]
		public Vector4 Factorize()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xFD3EB4", Offset = "0xFD3EB4", VA = "0xFD3EB4")]
		private int FactorizeColor(float value, float min, float max, float f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xFD3F84", Offset = "0xFD3F84", VA = "0xFD3F84")]
		public string ToString(bool factorize = false)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004A7")]
	public class HSL
	{
		[Token(Token = "0x20004A8")]
		public class H
		{
			[Token(Token = "0x4001F19")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F1A")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F1B")]
			public const int F = 360;

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0xFD4BB8", Offset = "0xFD4BB8", VA = "0xFD4BB8")]
			public H()
			{
			}
		}

		[Token(Token = "0x20004A9")]
		public class S
		{
			[Token(Token = "0x4001F1C")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F1D")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F1E")]
			public const int F = 100;

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0xFD4BC0", Offset = "0xFD4BC0", VA = "0xFD4BC0")]
			public S()
			{
			}
		}

		[Token(Token = "0x20004AA")]
		public class L
		{
			[Token(Token = "0x4001F1F")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F20")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F21")]
			public const int F = 100;

			[Token(Token = "0x6001E25")]
			[Address(RVA = "0xFD4BC8", Offset = "0xFD4BC8", VA = "0xFD4BC8")]
			public L()
			{
			}
		}

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float h;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float s;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float l;

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xFD44E8", Offset = "0xFD44E8", VA = "0xFD44E8")]
		public HSL(float H, float S, float L)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xFD4524", Offset = "0xFD4524", VA = "0xFD4524")]
		public HSL Copy()
		{
			return null;
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xFD459C", Offset = "0xFD459C", VA = "0xFD459C")]
		public Color Color(float alpha = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xFD45E8", Offset = "0xFD45E8", VA = "0xFD45E8")]
		public RGB ToRGB()
		{
			return null;
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xFD45F0", Offset = "0xFD45F0", VA = "0xFD45F0")]
		public HSL Validate()
		{
			return null;
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xFD4624", Offset = "0xFD4624", VA = "0xFD4624")]
		private float ValidateColor(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xFD4638", Offset = "0xFD4638", VA = "0xFD4638")]
		public Vector3 Factorize()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xFD46B8", Offset = "0xFD46B8", VA = "0xFD46B8")]
		private int FactorizeColor(float value, float min, float max, float f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xFD4788", Offset = "0xFD4788", VA = "0xFD4788")]
		public string ToString(bool factorize = false)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004AB")]
	public class HSV
	{
		[Token(Token = "0x20004AC")]
		public class H
		{
			[Token(Token = "0x4001F25")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F26")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F27")]
			public const int F = 360;

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xFD52A0", Offset = "0xFD52A0", VA = "0xFD52A0")]
			public H()
			{
			}
		}

		[Token(Token = "0x20004AD")]
		public class S
		{
			[Token(Token = "0x4001F28")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F29")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F2A")]
			public const int F = 100;

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xFD52A8", Offset = "0xFD52A8", VA = "0xFD52A8")]
			public S()
			{
			}
		}

		[Token(Token = "0x20004AE")]
		public class V
		{
			[Token(Token = "0x4001F2B")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F2C")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F2D")]
			public const int F = 100;

			[Token(Token = "0x6001E31")]
			[Address(RVA = "0xFD52B0", Offset = "0xFD52B0", VA = "0xFD52B0")]
			public V()
			{
			}
		}

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float h;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float s;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float v;

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xFD4BD0", Offset = "0xFD4BD0", VA = "0xFD4BD0")]
		public HSV(float H, float S, float V)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xFD4C0C", Offset = "0xFD4C0C", VA = "0xFD4C0C")]
		public HSV Copy()
		{
			return null;
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xFD4C84", Offset = "0xFD4C84", VA = "0xFD4C84")]
		public Color Color(float alpha = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xFD4CD0", Offset = "0xFD4CD0", VA = "0xFD4CD0")]
		public RGB ToRGB()
		{
			return null;
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xFD4CD8", Offset = "0xFD4CD8", VA = "0xFD4CD8")]
		public HSV Validate()
		{
			return null;
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xFD4D0C", Offset = "0xFD4D0C", VA = "0xFD4D0C")]
		private float ValidateColor(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xFD4D20", Offset = "0xFD4D20", VA = "0xFD4D20")]
		public Vector3 Factorize()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xFD4DA0", Offset = "0xFD4DA0", VA = "0xFD4DA0")]
		private int FactorizeColor(float value, float min, float max, float f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xFD4E70", Offset = "0xFD4E70", VA = "0xFD4E70")]
		public string ToString(bool factorize = false)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004AF")]
	public class RGB
	{
		[Token(Token = "0x20004B0")]
		public class R
		{
			[Token(Token = "0x4001F31")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F32")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F33")]
			public const int F = 255;

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xFD599C", Offset = "0xFD599C", VA = "0xFD599C")]
			public R()
			{
			}
		}

		[Token(Token = "0x20004B1")]
		public class G
		{
			[Token(Token = "0x4001F34")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F35")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F36")]
			public const int F = 255;

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xFD59A4", Offset = "0xFD59A4", VA = "0xFD59A4")]
			public G()
			{
			}
		}

		[Token(Token = "0x20004B2")]
		public class B
		{
			[Token(Token = "0x4001F37")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F38")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F39")]
			public const int F = 255;

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xFD59AC", Offset = "0xFD59AC", VA = "0xFD59AC")]
			public B()
			{
			}
		}

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float r;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float g;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float b;

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xFD52B8", Offset = "0xFD52B8", VA = "0xFD52B8")]
		public RGB(float R, float G, float B)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xFD52F4", Offset = "0xFD52F4", VA = "0xFD52F4")]
		public RGB Copy()
		{
			return null;
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xFD36C4", Offset = "0xFD36C4", VA = "0xFD36C4")]
		public Color Color(float alpha = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xFD536C", Offset = "0xFD536C", VA = "0xFD536C")]
		public HSL ToHSL()
		{
			return null;
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xFD5374", Offset = "0xFD5374", VA = "0xFD5374")]
		public HSV ToHSV()
		{
			return null;
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xFD537C", Offset = "0xFD537C", VA = "0xFD537C")]
		public CMY ToCMY()
		{
			return null;
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xFD5384", Offset = "0xFD5384", VA = "0xFD5384")]
		public CMYK ToCMYK()
		{
			return null;
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xFD538C", Offset = "0xFD538C", VA = "0xFD538C")]
		public XYZ ToXYZ()
		{
			return null;
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xFD3690", Offset = "0xFD3690", VA = "0xFD3690")]
		public RGB Validate()
		{
			return null;
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xFD5394", Offset = "0xFD5394", VA = "0xFD5394")]
		private float ValidateColor(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xFD53A8", Offset = "0xFD53A8", VA = "0xFD53A8")]
		public Vector3 Factorize()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xFD5424", Offset = "0xFD5424", VA = "0xFD5424")]
		private int FactorizeColor(float value, float min, float max, float f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xFD54F4", Offset = "0xFD54F4", VA = "0xFD54F4")]
		public string ToString(bool factorize = false)
		{
			return null;
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xFD5910", Offset = "0xFD5910", VA = "0xFD5910")]
		public string ToHEX(bool addHashTag = true)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004B3")]
	public class XYZ
	{
		[Token(Token = "0x20004B4")]
		public class X
		{
			[Token(Token = "0x4001F3D")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F3E")]
			public const float MAX = 0.95047f;

			[Token(Token = "0x4001F3F")]
			public const int F = 100;

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xFD6084", Offset = "0xFD6084", VA = "0xFD6084")]
			public X()
			{
			}
		}

		[Token(Token = "0x20004B5")]
		public class Y
		{
			[Token(Token = "0x4001F40")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F41")]
			public const float MAX = 1f;

			[Token(Token = "0x4001F42")]
			public const int F = 100;

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xFD608C", Offset = "0xFD608C", VA = "0xFD608C")]
			public Y()
			{
			}
		}

		[Token(Token = "0x20004B6")]
		public class Z
		{
			[Token(Token = "0x4001F43")]
			public const float MIN = 0f;

			[Token(Token = "0x4001F44")]
			public const float MAX = 1.08883f;

			[Token(Token = "0x4001F45")]
			public const int F = 100;

			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0xFD6094", Offset = "0xFD6094", VA = "0xFD6094")]
			public Z()
			{
			}
		}

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float x;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float z;

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xFD59B4", Offset = "0xFD59B4", VA = "0xFD59B4")]
		public XYZ(float X, float Y, float Z)
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xFD59F0", Offset = "0xFD59F0", VA = "0xFD59F0")]
		public XYZ Copy()
		{
			return null;
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xFD5A68", Offset = "0xFD5A68", VA = "0xFD5A68")]
		public Color Color(float alpha = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xFD5AB4", Offset = "0xFD5AB4", VA = "0xFD5AB4")]
		public RGB ToRGB()
		{
			return null;
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xFD5ABC", Offset = "0xFD5ABC", VA = "0xFD5ABC")]
		public XYZ Validate()
		{
			return null;
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xFD5B04", Offset = "0xFD5B04", VA = "0xFD5B04")]
		private float ValidateColor(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xFD5B18", Offset = "0xFD5B18", VA = "0xFD5B18")]
		public Vector3 Factorize()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xFD5B98", Offset = "0xFD5B98", VA = "0xFD5B98")]
		private int FactorizeColor(float value, float min, float max, float f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xFD5C68", Offset = "0xFD5C68", VA = "0xFD5C68")]
		public string ToString(bool factorize = false)
		{
			return null;
		}
	}
}
namespace Doozy.Engine.UI
{
	[Token(Token = "0x20004B7")]
	public enum DynamicSorting
	{
		[Token(Token = "0x4001F47")]
		Disabled,
		[Token(Token = "0x4001F48")]
		InFront,
		[Token(Token = "0x4001F49")]
		Behind,
		[Token(Token = "0x4001F4A")]
		Custom
	}
	[Token(Token = "0x20004B8")]
	public enum PopupDisplayOn
	{
		[Token(Token = "0x4001F4C")]
		PopupCanvas,
		[Token(Token = "0x4001F4D")]
		TargetCanvas
	}
	[Token(Token = "0x20004B9")]
	public enum TargetLabel
	{
		[Token(Token = "0x4001F4F")]
		None,
		[Token(Token = "0x4001F50")]
		Text,
		[Token(Token = "0x4001F51")]
		TextMeshPro
	}
	[Token(Token = "0x20004BA")]
	public enum TargetOrientation
	{
		[Token(Token = "0x4001F53")]
		Portrait,
		[Token(Token = "0x4001F54")]
		Landscape,
		[Token(Token = "0x4001F55")]
		Any
	}
	[Token(Token = "0x20004BB")]
	public enum UIEffectBehavior
	{
		[Token(Token = "0x4001F57")]
		Play,
		[Token(Token = "0x4001F58")]
		Stop
	}
	[Token(Token = "0x20004BC")]
	public enum VisibilityState
	{
		[Token(Token = "0x4001F5A")]
		Visible,
		[Token(Token = "0x4001F5B")]
		NotVisible,
		[Token(Token = "0x4001F5C")]
		Hiding,
		[Token(Token = "0x4001F5D")]
		Showing
	}
	[Token(Token = "0x20004BD")]
	public enum SingleClickMode
	{
		[Token(Token = "0x4001F5F")]
		Instant,
		[Token(Token = "0x4001F60")]
		Delayed
	}
	[Token(Token = "0x20004BE")]
	public enum UIButtonBehaviorType
	{
		[Token(Token = "0x4001F62")]
		OnClick,
		[Token(Token = "0x4001F63")]
		OnDoubleClick,
		[Token(Token = "0x4001F64")]
		OnLongClick,
		[Token(Token = "0x4001F65")]
		OnPointerEnter,
		[Token(Token = "0x4001F66")]
		OnPointerExit,
		[Token(Token = "0x4001F67")]
		OnPointerDown,
		[Token(Token = "0x4001F68")]
		OnPointerUp,
		[Token(Token = "0x4001F69")]
		OnSelected,
		[Token(Token = "0x4001F6A")]
		OnDeselected,
		[Token(Token = "0x4001F6B")]
		OnRightClick
	}
	[Token(Token = "0x20004BF")]
	[DefaultExecutionOrder(-100)]
	[RequireComponent(typeof(Button))]
	[AddComponentMenu("Doozy/UI/UIButton", 2)]
	[RequireComponent(typeof(RectTransform))]
	[DisallowMultipleComponent]
	public class UIButton : UIComponentBase<UIButton>, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler, ISelectHandler, IDeselectHandler
	{
		[Token(Token = "0x20004C0")]
		[CompilerGenerated]
		private sealed class <DeselectButtonEnumerator>d__102 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIButton <>4__this;

			[Token(Token = "0x170003C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E94")]
				[Address(RVA = "0xFD96E8", Offset = "0xFD96E8", VA = "0xFD96E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E96")]
				[Address(RVA = "0xFD9730", Offset = "0xFD9730", VA = "0xFD9730", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E91")]
			[Address(RVA = "0xFD8D64", Offset = "0xFD8D64", VA = "0xFD8D64")]
			[DebuggerHidden]
			public <DeselectButtonEnumerator>d__102(int <>1__state)
			{
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0xFD9588", Offset = "0xFD9588", VA = "0xFD9588", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E93")]
			[Address(RVA = "0xFD958C", Offset = "0xFD958C", VA = "0xFD958C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E95")]
			[Address(RVA = "0xFD96F0", Offset = "0xFD96F0", VA = "0xFD96F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C1")]
		[CompilerGenerated]
		private sealed class <ExecuteButtonBehaviorEnumerator>d__103 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIButtonBehavior behavior;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIButton <>4__this;

			[Token(Token = "0x170003CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9A")]
				[Address(RVA = "0xFDA49C", Offset = "0xFDA49C", VA = "0xFDA49C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9C")]
				[Address(RVA = "0xFDA4E4", Offset = "0xFDA4E4", VA = "0xFDA4E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0xFD8D8C", Offset = "0xFD8D8C", VA = "0xFD8D8C")]
			[DebuggerHidden]
			public <ExecuteButtonBehaviorEnumerator>d__103(int <>1__state)
			{
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xFD9738", Offset = "0xFD9738", VA = "0xFD9738", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E99")]
			[Address(RVA = "0xFD973C", Offset = "0xFD973C", VA = "0xFD973C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xFDA4A4", Offset = "0xFDA4A4", VA = "0xFDA4A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C2")]
		[CompilerGenerated]
		private sealed class <DisableButtonEnumerator>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIButton <>4__this;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x170003CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA0")]
				[Address(RVA = "0xFDA67C", Offset = "0xFDA67C", VA = "0xFDA67C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA2")]
				[Address(RVA = "0xFDA6C4", Offset = "0xFDA6C4", VA = "0xFDA6C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xFD8DB4", Offset = "0xFD8DB4", VA = "0xFD8DB4")]
			[DebuggerHidden]
			public <DisableButtonEnumerator>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xFDA4EC", Offset = "0xFDA4EC", VA = "0xFDA4EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0xFDA4F0", Offset = "0xFDA4F0", VA = "0xFDA4F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xFDA684", Offset = "0xFDA684", VA = "0xFDA684", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C3")]
		[CompilerGenerated]
		private sealed class <DisableButtonBehaviorEnumerator>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIButtonBehavior behavior;

			[Token(Token = "0x170003CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA6")]
				[Address(RVA = "0xFDA848", Offset = "0xFDA848", VA = "0xFDA848", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA8")]
				[Address(RVA = "0xFDA890", Offset = "0xFDA890", VA = "0xFDA890", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0xFD8DDC", Offset = "0xFD8DDC", VA = "0xFD8DDC")]
			[DebuggerHidden]
			public <DisableButtonBehaviorEnumerator>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0xFDA6CC", Offset = "0xFDA6CC", VA = "0xFDA6CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0xFDA6D0", Offset = "0xFDA6D0", VA = "0xFDA6D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xFDA850", Offset = "0xFDA850", VA = "0xFDA850", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C4")]
		[CompilerGenerated]
		private sealed class <RunOnClickEnumerator>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIButton <>4__this;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool debug;

			[Token(Token = "0x170003D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EAC")]
				[Address(RVA = "0xFDAA64", Offset = "0xFDAA64", VA = "0xFDAA64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EAE")]
				[Address(RVA = "0xFDAAAC", Offset = "0xFDAAAC", VA = "0xFDAAAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0xFD8E04", Offset = "0xFD8E04", VA = "0xFD8E04")]
			[DebuggerHidden]
			public <RunOnClickEnumerator>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xFDA898", Offset = "0xFDA898", VA = "0xFDA898", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0xFDA89C", Offset = "0xFDA89C", VA = "0xFDA89C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xFDAA6C", Offset = "0xFDAA6C", VA = "0xFDAA6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C5")]
		[CompilerGenerated]
		private sealed class <RunOnLongClickEnumerator>d__107 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIButton <>4__this;

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool debug;

			[Token(Token = "0x170003D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB2")]
				[Address(RVA = "0xFDABC0", Offset = "0xFDABC0", VA = "0xFDABC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB4")]
				[Address(RVA = "0xFDAC08", Offset = "0xFDAC08", VA = "0xFDAC08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xFD8E2C", Offset = "0xFD8E2C", VA = "0xFD8E2C")]
			[DebuggerHidden]
			public <RunOnLongClickEnumerator>d__107(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xFDAAB4", Offset = "0xFDAAB4", VA = "0xFDAAB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xFDAAB8", Offset = "0xFDAAB8", VA = "0xFDAAB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xFDABC8", Offset = "0xFDABC8", VA = "0xFDABC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<UIButton, UIButtonBehaviorType> OnUIButtonAction;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool AllowMultipleClicks;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string ButtonCategory;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string ButtonName;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SingleClickMode ClickMode;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool DeselectButtonAfterClick;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float DisableButtonBetweenClicksInterval;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float DoubleClickRegisterInterval;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InputData InputData;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float LongClickRegisterInterval;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UIButtonBehavior OnPointerEnter;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UIButtonBehavior OnPointerExit;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UIButtonBehavior OnPointerDown;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UIButtonBehavior OnPointerUp;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UIButtonBehavior OnClick;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UIButtonBehavior OnDoubleClick;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UIButtonBehavior OnLongClick;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UIButtonBehavior OnRightClick;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UIButtonBehavior OnSelected;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public UIButtonBehavior OnDeselected;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UIButtonLoopAnimation NormalLoopAnimation;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public UIButtonLoopAnimation SelectedLoopAnimation;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TargetLabel TargetLabel;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Text TextLabel;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Button m_button;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_clickedOnce;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Coroutine m_disableButtonCoroutine;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float m_doubleClickTimeoutCounter;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private bool m_executedLongClick;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Coroutine m_longClickRegisterCoroutine;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float m_longClickTimeoutCounter;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool m_updateStartValuesRequired;

		[Token(Token = "0x170003BC")]
		public static string BackButtonName
		{
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0xFD609C", Offset = "0xFD609C", VA = "0xFD609C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BD")]
		public static string CustomButtonCategory
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xFD60DC", Offset = "0xFD60DC", VA = "0xFD60DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BE")]
		public static string DefaultButtonCategory
		{
			[Token(Token = "0x6001E51")]
			[Address(RVA = "0xFD611C", Offset = "0xFD611C", VA = "0xFD611C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BF")]
		public static string DefaultButtonName
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xFD615C", Offset = "0xFD615C", VA = "0xFD615C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C0")]
		public Button Button
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xFD619C", Offset = "0xFD619C", VA = "0xFD619C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C1")]
		public CanvasGroup CanvasGroup
		{
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xFD6244", Offset = "0xFD6244", VA = "0xFD6244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		public bool HasLabel
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xFD6354", Offset = "0xFD6354", VA = "0xFD6354")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C3")]
		public bool Interactable
		{
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xFD63D0", Offset = "0xFD63D0", VA = "0xFD63D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xFD63EC", Offset = "0xFD63EC", VA = "0xFD63EC")]
			set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public bool IsBackButton
		{
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xFD6410", Offset = "0xFD6410", VA = "0xFD6410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C5")]
		public bool IsSelected
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xFD64A0", Offset = "0xFD64A0", VA = "0xFD64A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C6")]
		public bool UpdateStartValuesRequired
		{
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xFD65BC", Offset = "0xFD65BC", VA = "0xFD65BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xFD65C4", Offset = "0xFD65C4", VA = "0xFD65C4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		private bool DebugComponent
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xFD65D0", Offset = "0xFD65D0", VA = "0xFD65D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xFD6608", Offset = "0xFD6608", VA = "0xFD6608", Slot = "4")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xFD6744", Offset = "0xFD6744", VA = "0xFD6744", Slot = "5")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xFD6904", Offset = "0xFD6904", VA = "0xFD6904", Slot = "7")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xFD6AA0", Offset = "0xFD6AA0", VA = "0xFD6AA0", Slot = "8")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xFD6D7C", Offset = "0xFD6D7C", VA = "0xFD6D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xFD6F6C", Offset = "0xFD6F6C", VA = "0xFD6F6C", Slot = "21")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xFD7334", Offset = "0xFD7334", VA = "0xFD7334", Slot = "22")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xFD7340", Offset = "0xFD7340", VA = "0xFD7340", Slot = "23")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xFD734C", Offset = "0xFD734C", VA = "0xFD734C", Slot = "24")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xFD7358", Offset = "0xFD7358", VA = "0xFD7358", Slot = "25")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xFD7398", Offset = "0xFD7398", VA = "0xFD7398", Slot = "26")]
		private void UnityEngine.EventSystems.ISelectHandler.OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xFD7468", Offset = "0xFD7468", VA = "0xFD7468", Slot = "27")]
		private void UnityEngine.EventSystems.IDeselectHandler.OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xFD7538", Offset = "0xFD7538", VA = "0xFD7538")]
		public void DeselectButton()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xFD75CC", Offset = "0xFD75CC", VA = "0xFD75CC")]
		public void DeselectButton(float delay)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xFD7664", Offset = "0xFD7664", VA = "0xFD7664")]
		public void DisableButton()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xFD766C", Offset = "0xFD766C", VA = "0xFD766C")]
		public void DisableButton(float duration)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xFD6D74", Offset = "0xFD6D74", VA = "0xFD6D74")]
		public void EnableButton()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xFD7754", Offset = "0xFD7754", VA = "0xFD7754")]
		public void ExecutePointerEnter(bool debug = false)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xFD7C3C", Offset = "0xFD7C3C", VA = "0xFD7C3C")]
		public void ExecutePointerExit(bool debug = false)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xFD7D18", Offset = "0xFD7D18", VA = "0xFD7D18")]
		public void ExecutePointerDown(bool debug = false)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xFD7F58", Offset = "0xFD7F58", VA = "0xFD7F58")]
		public void ExecutePointerUp(bool debug = false)
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xFD6E38", Offset = "0xFD6E38", VA = "0xFD6E38")]
		public void ExecuteClick(bool debug = false)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xFD80A0", Offset = "0xFD80A0", VA = "0xFD80A0")]
		public void ExecuteDoubleClick(bool debug = false)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xFD81D4", Offset = "0xFD81D4", VA = "0xFD81D4")]
		public void ExecuteLongClick(bool debug = false)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xFD8308", Offset = "0xFD8308", VA = "0xFD8308")]
		public void ExecuteRightClick(bool debug = false)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xFD8450", Offset = "0xFD8450", VA = "0xFD8450")]
		public void ExecuteOnButtonDeselected(bool debug = false)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xFD852C", Offset = "0xFD852C", VA = "0xFD852C")]
		public void ExecuteOnButtonSelected(bool debug = false)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xFD6794", Offset = "0xFD6794", VA = "0xFD6794")]
		public void LoadPresets()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xFD86C8", Offset = "0xFD86C8", VA = "0xFD86C8")]
		public void NotifySystemOfTriggeredBehavior(UIButtonBehaviorType behaviorType)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xFD8874", Offset = "0xFD8874", VA = "0xFD8874")]
		public void SelectButton()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xFD8904", Offset = "0xFD8904", VA = "0xFD8904")]
		public void SetLabelText(string text)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xFD6A08", Offset = "0xFD6A08", VA = "0xFD6A08")]
		public void StartNormalLoopAnimation()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xFD6970", Offset = "0xFD6970", VA = "0xFD6970")]
		public void StartSelectedLoopAnimation()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xFD6C58", Offset = "0xFD6C58", VA = "0xFD6C58")]
		public void StopNormalLoopAnimation()
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xFD6BD8", Offset = "0xFD6BD8", VA = "0xFD6BD8")]
		public void StopSelectedLoopAnimation()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xFD783C", Offset = "0xFD783C", VA = "0xFD783C")]
		private void PrintBehaviorDebugMessage(UIButtonBehavior behavior, string action, bool debug = false)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xFD6F78", Offset = "0xFD6F78", VA = "0xFD6F78")]
		private void TriggerButtonBehavior(UIButtonBehavior behavior, bool debug = false)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xFD8AF4", Offset = "0xFD8AF4", VA = "0xFD8AF4")]
		private void InitiateClick(bool debug = false)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xFD6CD8", Offset = "0xFD6CD8", VA = "0xFD6CD8")]
		private void ReadyAllBehaviors()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xFD7EA4", Offset = "0xFD7EA4", VA = "0xFD7EA4")]
		private void RegisterLongClick(bool debug = false)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xFD801C", Offset = "0xFD801C", VA = "0xFD801C")]
		private void UnregisterLongClick(bool debug = false)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xFD7E04", Offset = "0xFD7E04", VA = "0xFD7E04")]
		private void ResetLongClick(bool debug = false)
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xFD8C44", Offset = "0xFD8C44", VA = "0xFD8C44")]
		private bool BehaviorEnabled(UIButtonBehaviorType behaviorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xFD75E0", Offset = "0xFD75E0", VA = "0xFD75E0")]
		[IteratorStateMachine(typeof(<DeselectButtonEnumerator>d__102))]
		private IEnumerator DeselectButtonEnumerator(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xFD7B38", Offset = "0xFD7B38", VA = "0xFD7B38")]
		[IteratorStateMachine(typeof(<ExecuteButtonBehaviorEnumerator>d__103))]
		private IEnumerator ExecuteButtonBehaviorEnumerator(UIButtonBehavior behavior)
		{
			return null;
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xFD76D0", Offset = "0xFD76D0", VA = "0xFD76D0")]
		[IteratorStateMachine(typeof(<DisableButtonEnumerator>d__104))]
		private IEnumerator DisableButtonEnumerator(float duration)
		{
			return null;
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xFD7BC8", Offset = "0xFD7BC8", VA = "0xFD7BC8")]
		[IteratorStateMachine(typeof(<DisableButtonBehaviorEnumerator>d__105))]
		private IEnumerator DisableButtonBehaviorEnumerator(UIButtonBehavior behavior)
		{
			return null;
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xFD8B34", Offset = "0xFD8B34", VA = "0xFD8B34")]
		[IteratorStateMachine(typeof(<RunOnClickEnumerator>d__106))]
		private IEnumerator RunOnClickEnumerator(bool debug = false)
		{
			return null;
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xFD8BBC", Offset = "0xFD8BBC", VA = "0xFD8BBC")]
		[IteratorStateMachine(typeof(<RunOnLongClickEnumerator>d__107))]
		private IEnumerator RunOnLongClickEnumerator(bool debug = false)
		{
			return null;
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xFD8E54", Offset = "0xFD8E54", VA = "0xFD8E54")]
		public static List<UIButton> GetButtons(string buttonCategory, string buttonName)
		{
			return null;
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xFD90E0", Offset = "0xFD90E0", VA = "0xFD90E0")]
		public UIButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C7")]
	public class UIButtonBehavior
	{
		[Token(Token = "0x20004C8")]
		[CompilerGenerated]
		private sealed class <InvokeCallbacks>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIAnimation animation;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction onStartCallback;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityAction onCompleteCallback;

			[Token(Token = "0x170003E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED1")]
				[Address(RVA = "0xFDB4D8", Offset = "0xFDB4D8", VA = "0xFDB4D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED3")]
				[Address(RVA = "0xFDB520", Offset = "0xFDB520", VA = "0xFDB520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xFDB338", Offset = "0xFDB338", VA = "0xFDB338")]
			[DebuggerHidden]
			public <InvokeCallbacks>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xFDB360", Offset = "0xFDB360", VA = "0xFDB360", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0xFDB364", Offset = "0xFDB364", VA = "0xFDB364", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xFDB4E0", Offset = "0xFDB4E0", VA = "0xFDB4E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FA5")]
		public const ButtonAnimationType DEFAULT_BUTTON_ANIMATION_TYPE = ButtonAnimationType.Punch;

		[Token(Token = "0x4001FA6")]
		public const bool DEFAULT_DESELECT_BUTTON = false;

		[Token(Token = "0x4001FA7")]
		public const bool DEFAULT_ENABLED = false;

		[Token(Token = "0x4001FA8")]
		public const bool DEFAULT_LOAD_SELECTED_PRESET_AT_RUNTIME = false;

		[Token(Token = "0x4001FA9")]
		public const bool DEFAULT_READY = true;

		[Token(Token = "0x4001FAA")]
		public const bool DEFAULT_SELECT_BUTTON = false;

		[Token(Token = "0x4001FAB")]
		public const bool DEFAULT_TRIGGER_EVENTS_AFTER_ANIMATION = false;

		[Token(Token = "0x4001FAC")]
		public const float ON_BUTTON_DESELECTED_DISABLE_INTERVAL = 0f;

		[Token(Token = "0x4001FAD")]
		public const float ON_BUTTON_SELECTED_DISABLE_INTERVAL = 0f;

		[Token(Token = "0x4001FAE")]
		public const float ON_CLICK_DISABLE_INTERVAL = 0.4f;

		[Token(Token = "0x4001FAF")]
		public const float ON_DOUBLE_CLICK_DISABLE_INTERVAL = 0.2f;

		[Token(Token = "0x4001FB0")]
		public const float ON_LONG_CLICK_DISABLE_INTERVAL = 0.2f;

		[Token(Token = "0x4001FB1")]
		public const float ON_POINTER_DOWN_DISABLE_INTERVAL = 0f;

		[Token(Token = "0x4001FB2")]
		public const float ON_POINTER_ENTER_DISABLE_INTERVAL = 0.4f;

		[Token(Token = "0x4001FB3")]
		public const float ON_POINTER_EXIT_DISABLE_INTERVAL = 0.4f;

		[Token(Token = "0x4001FB4")]
		public const float ON_POINTER_UP_DISABLE_INTERVAL = 0f;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AnimatorEvent> Animators;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonAnimationType ButtonAnimationType;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool DeselectButton;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DisableInterval;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool Enabled;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool LoadSelectedPresetAtRuntime;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIAction OnTrigger;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string PresetCategory;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string PresetName;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIAnimation PunchAnimation;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool Ready;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool SelectButton;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UIAnimation StateAnimation;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool TriggerEventsAfterAnimation;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private UIButtonBehaviorType m_behaviorType;

		[Token(Token = "0x170003D4")]
		public static string DefaultPresetCategory
		{
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xFDAC8C", Offset = "0xFDAC8C", VA = "0xFDAC8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D5")]
		public static string DefaultPresetName
		{
			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xFDACCC", Offset = "0xFDACCC", VA = "0xFDACCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		public int AnimatorsCount
		{
			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xFDAD0C", Offset = "0xFDAD0C", VA = "0xFDAD0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003D7")]
		public UIButtonBehaviorType BehaviorType
		{
			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0xFDAD58", Offset = "0xFDAD58", VA = "0xFDAD58")]
			get
			{
				return default(UIButtonBehaviorType);
			}
		}

		[Token(Token = "0x170003D8")]
		public bool HasAnimation
		{
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xFDAD60", Offset = "0xFDAD60", VA = "0xFDAD60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D9")]
		public bool HasAnimators
		{
			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0xFDAE64", Offset = "0xFDAE64", VA = "0xFDAE64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DA")]
		public bool HasAnimatorEvents
		{
			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0xFDAEC4", Offset = "0xFDAEC4", VA = "0xFDAEC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DB")]
		public bool HasEffect
		{
			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0xFDAEE0", Offset = "0xFDAEE0", VA = "0xFDAEE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DC")]
		public bool HasGameEvents
		{
			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0xFDAEFC", Offset = "0xFDAEFC", VA = "0xFDAEFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DD")]
		public bool HasPunchAnimation
		{
			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0xFDADD0", Offset = "0xFDADD0", VA = "0xFDADD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DE")]
		public bool HasSound
		{
			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0xFDAF18", Offset = "0xFDAF18", VA = "0xFDAF18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DF")]
		public bool HasStateAnimation
		{
			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0xFDAE18", Offset = "0xFDAE18", VA = "0xFDAE18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E0")]
		public bool HasUnityEvents
		{
			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xFDAF34", Offset = "0xFDAF34", VA = "0xFDAF34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xFD9454", Offset = "0xFD9454", VA = "0xFD9454")]
		public UIButtonBehavior(UIButtonBehaviorType behaviorType, bool enabled = false)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xFDA45C", Offset = "0xFDA45C", VA = "0xFDA45C")]
		public float GetAnimationTotalDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xFD8608", Offset = "0xFD8608", VA = "0xFD8608")]
		public void LoadPreset()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xFDB134", Offset = "0xFDB134", VA = "0xFDB134")]
		public void LoadPreset(string presetCategory, string presetName)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xFDA00C", Offset = "0xFDA00C", VA = "0xFDA00C")]
		public void PlayAnimation(UIButton button, bool withSound = true, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xFDAF50", Offset = "0xFDAF50", VA = "0xFDAF50")]
		public void Reset(UIButtonBehaviorType behaviorType)
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xFDB274", Offset = "0xFDB274", VA = "0xFDB274")]
		[IteratorStateMachine(typeof(<InvokeCallbacks>d__63))]
		private static IEnumerator InvokeCallbacks(UIAnimation animation, UnityAction onStartCallback, UnityAction onCompleteCallback)
		{
			return null;
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xFDB258", Offset = "0xFDB258", VA = "0xFDB258")]
		public static AnimationType GetAnimationType(ButtonAnimationType type)
		{
			return default(AnimationType);
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xFDB318", Offset = "0xFDB318", VA = "0xFDB318")]
		public static float GetDefaultDisableInterval(UIButtonBehaviorType type)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20004C9")]
	public class UIButtonEvent : UnityEvent<UIButton>
	{
		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xFDB528", Offset = "0xFDB528", VA = "0xFDB528")]
		public UIButtonEvent()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	[AddComponentMenu("Doozy/Listeners/UIButton Listener", 13)]
	[DefaultExecutionOrder(-100)]
	public class UIButtonListener : MonoBehaviour
	{
		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ButtonCategory;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ButtonName;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DebugMode;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIButtonEvent Event;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ListenForAllUIButtons;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public UIButtonBehaviorType TriggerAction;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_listeningForBackButton;

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xFDB570", Offset = "0xFDB570", VA = "0xFDB570")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xFDB67C", Offset = "0xFDB67C", VA = "0xFDB67C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xFDB81C", Offset = "0xFDB81C", VA = "0xFDB81C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xFDB680", Offset = "0xFDB680", VA = "0xFDB680")]
		private void RegisterListener()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xFDB820", Offset = "0xFDB820", VA = "0xFDB820")]
		private void UnregisterListener()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xFDB950", Offset = "0xFDB950", VA = "0xFDB950")]
		private void OnMessage(UIButtonMessage message)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xFDBAD8", Offset = "0xFDBAD8", VA = "0xFDBAD8")]
		private void InvokeEvent(UIButtonMessage message)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xFDBE1C", Offset = "0xFDBE1C", VA = "0xFDBE1C")]
		private static UIButtonListener AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xFDBE24", Offset = "0xFDBE24", VA = "0xFDBE24")]
		private static UIButtonListener AddToScene(GameObject parent, bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xFDBFB8", Offset = "0xFDBFB8", VA = "0xFDBFB8")]
		public UIButtonListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CB")]
	public class UIButtonLoopAnimation
	{
		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIAnimation Animation;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Enabled;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IsPlaying;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ButtonLoopAnimationType LoopAnimationType;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool LoadSelectedPresetAtRuntime;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string PresetCategory;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string PresetName;

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xFD948C", Offset = "0xFD948C", VA = "0xFD948C")]
		public UIButtonLoopAnimation(ButtonLoopAnimationType loopAnimationType)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xFD8610", Offset = "0xFD8610", VA = "0xFD8610")]
		public void LoadPreset()
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xFDC044", Offset = "0xFDC044", VA = "0xFDC044")]
		public void LoadPreset(string presetCategory, string presetName)
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xFDBFC0", Offset = "0xFDBFC0", VA = "0xFDBFC0")]
		public void Reset(ButtonLoopAnimationType loopAnimationType)
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xFD895C", Offset = "0xFD895C", VA = "0xFD895C")]
		public void Start(RectTransform target, Vector3 startPosition, Vector3 startRotation)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xFD8A78", Offset = "0xFD8A78", VA = "0xFD8A78")]
		public void Stop(RectTransform target)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CC")]
	public class UIButtonMessage : Message
	{
		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIButton Button;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ButtonName;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIButtonBehaviorType Type;

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xFDC114", Offset = "0xFDC114", VA = "0xFDC114")]
		public UIButtonMessage(UIButton button)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xFD87DC", Offset = "0xFD87DC", VA = "0xFD87DC")]
		public UIButtonMessage(UIButton button, UIButtonBehaviorType type)
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xFDC1A0", Offset = "0xFDC1A0", VA = "0xFDC1A0")]
		public UIButtonMessage(string buttonName)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xFDC224", Offset = "0xFDC224", VA = "0xFDC224")]
		public UIButtonMessage(string buttonName, UIButtonBehaviorType type)
		{
		}
	}
	[Token(Token = "0x20004CD")]
	[RequireComponent(typeof(Canvas))]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/UI/UICanvas", 2)]
	public class UICanvas : UIComponentBase<UICanvas>
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string CanvasName;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool CustomCanvasName;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool DontDestroyCanvasOnLoad;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Canvas m_canvas;

		[Token(Token = "0x170003E3")]
		public static string DefaultCanvasCategory
		{
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xFDC2B4", Offset = "0xFDC2B4", VA = "0xFDC2B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E4")]
		public static string DefaultCanvasName
		{
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xFDC2F4", Offset = "0xFDC2F4", VA = "0xFDC2F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E5")]
		public static UICanvas MasterCanvas
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xFDC334", Offset = "0xFDC334", VA = "0xFDC334")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xFDC37C", Offset = "0xFDC37C", VA = "0xFDC37C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public static string MasterCanvasName
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xFDC3D4", Offset = "0xFDC3D4", VA = "0xFDC3D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E7")]
		public Canvas Canvas
		{
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xFDC414", Offset = "0xFDC414", VA = "0xFDC414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		public bool IsMasterCanvas
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xFDC4BC", Offset = "0xFDC4BC", VA = "0xFDC4BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E9")]
		private bool DebugComponent
		{
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xFDC788", Offset = "0xFDC788", VA = "0xFDC788")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xFDC7C0", Offset = "0xFDC7C0", VA = "0xFDC7C0", Slot = "4")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xFDC85C", Offset = "0xFDC85C", VA = "0xFDC85C", Slot = "5")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xFDCDC8", Offset = "0xFDCDC8", VA = "0xFDCDC8")]
		public static UICanvas CreateUICanvas(string canvasName)
		{
			return null;
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xFDCCBC", Offset = "0xFDCCBC", VA = "0xFDCCBC")]
		public static bool DatabaseContains(string canvasName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xFDC580", Offset = "0xFDC580", VA = "0xFDC580")]
		public static UICanvas GetMasterCanvas(bool createMasterCanvasIfNotFound = true)
		{
			return null;
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xFDD1AC", Offset = "0xFDD1AC", VA = "0xFDD1AC")]
		public static UICanvas GetUICanvas(string canvasName)
		{
			return null;
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xFDD2C8", Offset = "0xFDD2C8", VA = "0xFDD2C8")]
		public static UICanvas GetUICanvas(string canvasName, bool createUICanvasIfNotFound, bool returnMasterCanvasIfUICanvasNotFound = true)
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xFDD39C", Offset = "0xFDD39C", VA = "0xFDD39C")]
		public UICanvas()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public enum UIDrawerBehaviorType
	{
		[Token(Token = "0x4001FE2")]
		Open,
		[Token(Token = "0x4001FE3")]
		Close,
		[Token(Token = "0x4001FE4")]
		Drag
	}
	[Token(Token = "0x20004D1")]
	public enum UIDrawerContainerSize
	{
		[Token(Token = "0x4001FE6")]
		FullScreen,
		[Token(Token = "0x4001FE7")]
		PercentageOfScreen,
		[Token(Token = "0x4001FE8")]
		FixedSize
	}
	[Token(Token = "0x20004D2")]
	[AddComponentMenu("Doozy/UI/UIDrawer", 2)]
	[RequireComponent(typeof(RectTransform))]
	[RequireComponent(typeof(Canvas))]
	[DefaultExecutionOrder(-100)]
	[DisallowMultipleComponent]
	public class UIDrawer : UIComponentBase<UIDrawer>, IDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler
	{
		[Token(Token = "0x4001FE9")]
		private const float AUTO_OPEN_IF_DRAGGED_OVER_VISIBILITY_PERCENT = 0.5f;

		[Token(Token = "0x4001FEA")]
		private const float AUTO_CLOSE_IF_DRAGGED_UNDER_VISIBILITY_PERCENT = 0.5f;

		[Token(Token = "0x4001FEB")]
		private const float AUTO_OPEN_OR_CLOSE_TERMINAL_SWIPE_VELOCITY = 800f;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<UIDrawer, UIDrawerBehaviorType> OnUIDrawerBehavior;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIDrawerArrow Arrow;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool BlockBackButton;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UIDrawerBehavior CloseBehavior;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SimpleSwipe CloseDirection;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float CloseSpeed;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UIDrawerContainer Container;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 CustomStartAnchoredPosition;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool CustomDrawerName;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string DrawerName;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool DetectGestures;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UIDrawerBehavior DragBehavior;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool HideOnBackButton;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ProgressEvent OnProgressChanged;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ProgressEvent OnInverseProgressChanged;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UIDrawerBehavior OpenBehavior;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float OpenSpeed;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public UIContainer Overlay;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Progressor Progressor;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool UseCustomStartAnchoredPosition;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Canvas m_canvas;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private VisibilityState m_visibility;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float m_visibilityProgress;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector2 m_scaledCanvas;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_availableForDrag;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector2 m_dragStartPosition;

		[Token(Token = "0x4002009")]
		private const string GIZMOS_TEXTURE_PATH = "Doozy/UI/UIDrawer/";

		[Token(Token = "0x400200A")]
		private const bool GIZMOS_ALLOW_SCALING = true;

		[Token(Token = "0x400200B")]
		private const string ARROW_ROOT = "ArrowRoot";

		[Token(Token = "0x400200C")]
		private const string ARROW_LEFT = "ArrowLeft";

		[Token(Token = "0x400200D")]
		private const string ARROW_RIGHT = "ArrowRight";

		[Token(Token = "0x400200E")]
		private const string ARROW_UP = "ArrowUp";

		[Token(Token = "0x400200F")]
		private const string ARROW_DOWN = "ArrowDown";

		[Token(Token = "0x170003EA")]
		public static bool AnyDrawerOpened
		{
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xFDD4A4", Offset = "0xFDD4A4", VA = "0xFDD4A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EB")]
		public static string DefaultDrawerCategory
		{
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xFDD560", Offset = "0xFDD560", VA = "0xFDD560")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		public static string DefaultDrawerName
		{
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xFDD5A0", Offset = "0xFDD5A0", VA = "0xFDD5A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003ED")]
		public static UIDrawer DraggedDrawer
		{
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xFDD5E0", Offset = "0xFDD5E0", VA = "0xFDD5E0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xFDD638", Offset = "0xFDD638", VA = "0xFDD638")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		public static UIDrawer OpenedDrawer
		{
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xFDD6A0", Offset = "0xFDD6A0", VA = "0xFDD6A0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0xFDD6F8", Offset = "0xFDD6F8", VA = "0xFDD6F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		private static TouchDetector Detector
		{
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xFDD758", Offset = "0xFDD758", VA = "0xFDD758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F0")]
		public bool ArrowEnabled
		{
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xFDD760", Offset = "0xFDD760", VA = "0xFDD760")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F1")]
		public Canvas Canvas
		{
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xFDD844", Offset = "0xFDD844", VA = "0xFDD844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		public bool Closed
		{
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0xFDD920", Offset = "0xFDD920", VA = "0xFDD920")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F3")]
		public bool HasArrow
		{
			[Token(Token = "0x6001F08")]
			[Address(RVA = "0xFDD798", Offset = "0xFDD798", VA = "0xFDD798")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F4")]
		public bool HasContainer
		{
			[Token(Token = "0x6001F09")]
			[Address(RVA = "0xFDD930", Offset = "0xFDD930", VA = "0xFDD930")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F5")]
		public bool HasOverlay
		{
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xFDD9A8", Offset = "0xFDD9A8", VA = "0xFDD9A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F6")]
		public float InverseVisibility
		{
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0xFDDA20", Offset = "0xFDDA20", VA = "0xFDDA20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F7")]
		public bool IsClosing
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xFDDA30", Offset = "0xFDDA30", VA = "0xFDDA30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F8")]
		public bool IsDragged
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xFDDA40", Offset = "0xFDDA40", VA = "0xFDDA40")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xFDDA48", Offset = "0xFDDA48", VA = "0xFDDA48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public bool IsOpening
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xFDDA54", Offset = "0xFDDA54", VA = "0xFDDA54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FA")]
		public bool Opened
		{
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xFDDA64", Offset = "0xFDDA64", VA = "0xFDDA64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FB")]
		public VisibilityState Visibility
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xFDDA74", Offset = "0xFDDA74", VA = "0xFDDA74")]
			get
			{
				return default(VisibilityState);
			}
		}

		[Token(Token = "0x170003FC")]
		public float VisibilityProgress
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xFDDA7C", Offset = "0xFDDA7C", VA = "0xFDDA7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xFDDA84", Offset = "0xFDDA84", VA = "0xFDDA84")]
			private set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		private bool DebugComponent
		{
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xFDDD30", Offset = "0xFDDD30", VA = "0xFDDD30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xFDDD68", Offset = "0xFDDD68", VA = "0xFDDD68")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xFDE108", Offset = "0xFDE108", VA = "0xFDE108", Slot = "4")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xFDE480", Offset = "0xFDE480", VA = "0xFDE480", Slot = "5")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xFDE9D4", Offset = "0xFDE9D4", VA = "0xFDE9D4", Slot = "7")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xFDEAD0", Offset = "0xFDEAD0", VA = "0xFDEAD0", Slot = "8")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xFDEBF4", Offset = "0xFDEBF4", VA = "0xFDEBF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xFE01F0", Offset = "0xFE01F0", VA = "0xFE01F0", Slot = "21")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xFE01FC", Offset = "0xFE01FC", VA = "0xFE01FC", Slot = "22")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xFE0208", Offset = "0xFE0208", VA = "0xFE0208", Slot = "23")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xFE0210", Offset = "0xFE0210", VA = "0xFE0210")]
		private void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xFDE86C", Offset = "0xFDE86C", VA = "0xFDE86C")]
		public void Close(bool instantAction = false)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xFE0420", Offset = "0xFE0420", VA = "0xFE0420")]
		public void DisableGestureDetection()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xFE0428", Offset = "0xFE0428", VA = "0xFE0428")]
		public void EnableGestureDetection()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xFE00D8", Offset = "0xFE00D8", VA = "0xFE00D8")]
		public void NotifySystemOfTriggeredBehavior(UIDrawerBehaviorType behaviorType)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xFDFE98", Offset = "0xFDFE98", VA = "0xFDFE98")]
		public void Open(bool instantAction = false)
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xFE05CC", Offset = "0xFE05CC", VA = "0xFE05CC")]
		public void Toggle(bool instantAction = false)
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xFE05FC", Offset = "0xFE05FC", VA = "0xFE05FC")]
		public void ToggleGestureDetection()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xFE060C", Offset = "0xFE060C", VA = "0xFE060C")]
		public void UpdateArrowContainer()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xFE0638", Offset = "0xFE0638", VA = "0xFE0638")]
		public void UpdateContainer()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xFDE720", Offset = "0xFDE720", VA = "0xFDE720")]
		public void UpdateContainerSize()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xFE0CF0", Offset = "0xFE0CF0", VA = "0xFE0CF0")]
		public void UpdateContainerSize(float fixedSize)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xFE0D18", Offset = "0xFE0D18", VA = "0xFE0D18")]
		public void UpdateContainerSize(float percentageOfScreen, float minimumSize)
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xFE0D38", Offset = "0xFE0D38", VA = "0xFE0D38")]
		public void UpdateDrawerCloseDirection(SimpleSwipe hideDirection)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xFE0434", Offset = "0xFE0434", VA = "0xFE0434")]
		private void InitiateOpen()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xFE050C", Offset = "0xFE050C", VA = "0xFE050C")]
		private void FinalizeOpen()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xFE02AC", Offset = "0xFE02AC", VA = "0xFE02AC")]
		private void InitiateClose()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xFE02B0", Offset = "0xFE02B0", VA = "0xFE02B0")]
		private void FinalizeClose()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xFE0E20", Offset = "0xFE0E20", VA = "0xFE0E20")]
		private void MoveToCustomStartPosition()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xFE0214", Offset = "0xFE0214", VA = "0xFE0214")]
		private void OnOrientationChanged(DetectedOrientation detectedOrientation)
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xFDE744", Offset = "0xFDE744", VA = "0xFDE744")]
		private void InitContainerPositions()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xFE06B4", Offset = "0xFE06B4", VA = "0xFE06B4")]
		private void UpdateContainerSize(UIDrawerContainerSize size, float percentageOfScreen, float minimumSize, float fixedSize)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xFE0E80", Offset = "0xFE0E80", VA = "0xFE0E80")]
		private Vector3 GetContainerClosedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xFDF9D0", Offset = "0xFDF9D0", VA = "0xFDF9D0")]
		private void UpdateContainerAnimation()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xFDF938", Offset = "0xFDF938", VA = "0xFDF938")]
		private void UpdateContainerVelocity()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xFDFB80", Offset = "0xFDFB80", VA = "0xFDFB80")]
		private void UpdateContainerDraggedPosition()
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xFDF438", Offset = "0xFDF438", VA = "0xFDF438")]
		private void UpdateShowProgress()
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xFDE7DC", Offset = "0xFDE7DC", VA = "0xFDE7DC")]
		private void InitArrow()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xFDF4E8", Offset = "0xFDF4E8", VA = "0xFDF4E8")]
		private void UpdateArrow()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xFDDB88", Offset = "0xFDDB88", VA = "0xFDDB88")]
		private void UpdateOverlayAlpha(float value)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xFDDBD4", Offset = "0xFDDBD4", VA = "0xFDDBD4")]
		private void UpdateContainerAlpha(float value)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xFDDC28", Offset = "0xFDDC28", VA = "0xFDDC28")]
		private void UpdateArrowActiveState()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xFE0FA8", Offset = "0xFE0FA8", VA = "0xFE0FA8")]
		private float ScaledPositionX(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xFE1064", Offset = "0xFE1064", VA = "0xFE1064")]
		private float ScaledPositionY(float y)
		{
			return default(float);
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xFE00A0", Offset = "0xFE00A0", VA = "0xFE00A0")]
		private Vector2 ScaledTouchPosition(Vector2 touchPosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xFDDC78", Offset = "0xFDDC78", VA = "0xFDDC78")]
		private void DebugOpenProgress()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xFE1C34", Offset = "0xFE1C34", VA = "0xFE1C34")]
		public static void Close(string drawerName, bool debug = false)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xFE1FE4", Offset = "0xFE1FE4", VA = "0xFE1FE4")]
		public static bool Contains(string drawerName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xFE1E2C", Offset = "0xFE1E2C", VA = "0xFE1E2C")]
		public static UIDrawer Get(string drawerName)
		{
			return null;
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xFE219C", Offset = "0xFE219C", VA = "0xFE219C")]
		public static void Open(string drawerName, bool debug = false)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xFE2394", Offset = "0xFE2394", VA = "0xFE2394")]
		public static void Toggle(string drawerName, bool debug = false)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xFE24AC", Offset = "0xFE24AC", VA = "0xFE24AC")]
		public UIDrawer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D4")]
	public class UIDrawerArrow
	{
		[Serializable]
		[Token(Token = "0x20004D5")]
		public class Holder
		{
			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform Closed;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RectTransform Opened;

			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RectTransform Root;

			[Token(Token = "0x170003FE")]
			public Vector3 ClosedLocalPosition
			{
				[Token(Token = "0x6001F56")]
				[Address(RVA = "0xFE2FC8", Offset = "0xFE2FC8", VA = "0xFE2FC8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170003FF")]
			public Vector3 OpenedLocalPosition
			{
				[Token(Token = "0x6001F57")]
				[Address(RVA = "0xFE2FE4", Offset = "0xFE2FE4", VA = "0xFE2FE4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0xFE28C4", Offset = "0xFE28C4", VA = "0xFE28C4")]
			public Holder(RectTransform parent)
			{
			}

			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xFE3000", Offset = "0xFE3000", VA = "0xFE3000")]
			public void Reset(RectTransform parent)
			{
			}
		}

		[Token(Token = "0x4002011")]
		private const bool DEFAULT_ENABLED = true;

		[Token(Token = "0x4002012")]
		private const bool DEFAULT_OVERRIDE_COLOR = false;

		[Token(Token = "0x4002013")]
		private const float DEFAULT_SCALE = 1f;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color DefaultOpenedColor;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Color DefaultClosedColor;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIDrawerArrowAnimator Animator;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color ClosedColor;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform Container;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Holder Down;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool Enabled;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Holder Left;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color OpenedColor;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool OverrideColor;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Holder Right;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float Scale;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Holder Up;

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xFDE464", Offset = "0xFDE464", VA = "0xFDE464")]
		public UIDrawerArrow()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xFE2874", Offset = "0xFE2874", VA = "0xFE2874")]
		public Holder GetHolder(SimpleSwipe closeDirection)
		{
			return null;
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xFE26EC", Offset = "0xFE26EC", VA = "0xFE26EC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xFE28F0", Offset = "0xFE28F0", VA = "0xFE28F0")]
		public void ResetArrowClosedPosition(SimpleSwipe closeDirection)
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xFE29F8", Offset = "0xFE29F8", VA = "0xFE29F8")]
		public static void ResetArrowClosedPosition(RectTransform closed, SimpleSwipe closeDirection)
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xFE2AD0", Offset = "0xFE2AD0", VA = "0xFE2AD0")]
		public void ResetArrowOpenedPosition(SimpleSwipe closeDirection)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xFE2BD8", Offset = "0xFE2BD8", VA = "0xFE2BD8")]
		public static void ResetArrowOpenedPosition(RectTransform opened, SimpleSwipe closeDirection)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xFE2CB0", Offset = "0xFE2CB0", VA = "0xFE2CB0")]
		public void ResetArrowRootPosition(SimpleSwipe closeDirection)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xFE2DB8", Offset = "0xFE2DB8", VA = "0xFE2DB8")]
		public static void ResetArrowRootPosition(RectTransform root, SimpleSwipe closeDirection)
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class UIDrawerArrowAnimator : MonoBehaviour
	{
		[Token(Token = "0x4002024")]
		private const float CLOSED_DRAWER_VELOCITY = 0.75f;

		[Token(Token = "0x4002025")]
		private const float MAX_BAR_ROTATION = 45f;

		[Token(Token = "0x4002026")]
		private const float ROTATION_SPEED = 10f;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform Rotator;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform LeftBar;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform RightBar;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image m_leftBarImage;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Image m_rightBarImage;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_velocity;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3[] m_rotatorCorners;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] m_drawerCorners;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_rotatorDisableThreshold;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] m_tempCorners;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rect m_rotatorRect;

		[Token(Token = "0x17000400")]
		public UIDrawer Drawer
		{
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0xFE3134", Offset = "0xFE3134", VA = "0xFE3134")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0xFE313C", Offset = "0xFE313C", VA = "0xFE313C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000401")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0xFE3144", Offset = "0xFE3144", VA = "0xFE3144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000402")]
		public float Width
		{
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0xFE31EC", Offset = "0xFE31EC", VA = "0xFE31EC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0xFE31F4", Offset = "0xFE31F4", VA = "0xFE31F4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public float Height
		{
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xFE31FC", Offset = "0xFE31FC", VA = "0xFE31FC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F60")]
			[Address(RVA = "0xFE3204", Offset = "0xFE3204", VA = "0xFE3204")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000404")]
		public Vector2 Size
		{
			[Token(Token = "0x6001F61")]
			[Address(RVA = "0xFE320C", Offset = "0xFE320C", VA = "0xFE320C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xFE3214", Offset = "0xFE3214", VA = "0xFE3214")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xFE3358", Offset = "0xFE3358", VA = "0xFE3358")]
		public Vector3[] AdjustCornersToIdentityRotation(RectTransform target, Vector3[] corners)
		{
			return null;
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xFE1120", Offset = "0xFE1120", VA = "0xFE1120")]
		public void SetTargetDrawer(UIDrawer drawer)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xFE1394", Offset = "0xFE1394", VA = "0xFE1394")]
		public void UpdateArrow()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xFE1150", Offset = "0xFE1150", VA = "0xFE1150")]
		public void UpdateArrowColor(UIDrawer drawer)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xFE3854", Offset = "0xFE3854", VA = "0xFE3854")]
		public void UpdateLocalScale(Vector3 scale)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xFE3898", Offset = "0xFE3898", VA = "0xFE3898")]
		public void UpdateLocalScale(float scale)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xFE166C", Offset = "0xFE166C", VA = "0xFE166C")]
		public void UpdateRotatorPosition(float visibility)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xFE366C", Offset = "0xFE366C", VA = "0xFE366C")]
		private void RotateAndMoveArrowToMatchDrawerDirection(UIDrawer drawer)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xFE3308", Offset = "0xFE3308", VA = "0xFE3308")]
		private void UpdateSize()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xFE38D8", Offset = "0xFE38D8", VA = "0xFE38D8")]
		public UIDrawerArrowAnimator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D7")]
	public class UIDrawerBehavior
	{
		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIDrawerBehaviorType DrawerBehaviorType;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIAction OnFinished;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIAction OnStart;

		[Token(Token = "0x17000405")]
		public bool HasAnimatorEvents
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xFE3980", Offset = "0xFE3980", VA = "0xFE3980")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000406")]
		public bool HasEffect
		{
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0xFE39C0", Offset = "0xFE39C0", VA = "0xFE39C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000407")]
		public bool HasGameEvents
		{
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xFE3A00", Offset = "0xFE3A00", VA = "0xFE3A00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000408")]
		public bool HasSound
		{
			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xFE3A40", Offset = "0xFE3A40", VA = "0xFE3A40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000409")]
		public bool HasUnityEvents
		{
			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xFE3A80", Offset = "0xFE3A80", VA = "0xFE3A80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xFDE38C", Offset = "0xFDE38C", VA = "0xFDE38C")]
		public UIDrawerBehavior(UIDrawerBehaviorType behaviorType)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xFE3AC0", Offset = "0xFE3AC0", VA = "0xFE3AC0")]
		public void Reset(UIDrawerBehaviorType behaviorType)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D8")]
	public class UIDrawerContainer : UIContainer
	{
		[Token(Token = "0x4002039")]
		private const UIDrawerContainerSize DEFAULT_CONTAINER_SIZE = UIDrawerContainerSize.PercentageOfScreen;

		[Token(Token = "0x400203A")]
		private const bool DEFAULT_FADE_OUT = true;

		[Token(Token = "0x400203B")]
		private const float DEFAULT_FIXED_SIZE = 128f;

		[Token(Token = "0x400203C")]
		private const float DEFAULT_MINIMUM_SIZE = 128f;

		[Token(Token = "0x400203D")]
		private const float DEFAULT_PERCENTAGE_OF_SCREEN_SIZE = 0.5f;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 CalculatedSize;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 ClosedPosition;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 CurrentPosition;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool FadeOut;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float FixedSize;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float MinimumSize;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 OpenedPosition;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float PercentageOfScreen;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 PreviousPosition;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UIDrawerContainerSize Size;

		[Token(Token = "0x1700040A")]
		public Vector2 Velocity
		{
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xFE3840", Offset = "0xFE3840", VA = "0xFE3840")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xFDE440", Offset = "0xFDE440", VA = "0xFDE440")]
		public UIDrawerContainer()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xFE3B60", Offset = "0xFE3B60", VA = "0xFE3B60", Slot = "7")]
		public override void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D9")]
	public class UIDrawerEvent : UnityEvent<UIDrawer>
	{
		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xFE3B94", Offset = "0xFE3B94", VA = "0xFE3B94")]
		public UIDrawerEvent()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Listeners/UIDrawer Listener", 13)]
	public class UIDrawerListener : MonoBehaviour
	{
		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugMode;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string DrawerName;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CustomDrawerName;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIDrawerEvent Event;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ListenForAllUIDrawers;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public UIDrawerBehaviorType TriggerAction;

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xFE3BDC", Offset = "0xFE3BDC", VA = "0xFE3BDC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xFE3CB0", Offset = "0xFE3CB0", VA = "0xFE3CB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xFE3DE4", Offset = "0xFE3DE4", VA = "0xFE3DE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xFE3CB4", Offset = "0xFE3CB4", VA = "0xFE3CB4")]
		private void RegisterListener()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xFE3DE8", Offset = "0xFE3DE8", VA = "0xFE3DE8")]
		private void UnregisterListener()
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xFE3F18", Offset = "0xFE3F18", VA = "0xFE3F18")]
		private void OnMessage(UIDrawerMessage message)
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xFE3F78", Offset = "0xFE3F78", VA = "0xFE3F78")]
		private void InvokeEvent(UIDrawerMessage message)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xFE4250", Offset = "0xFE4250", VA = "0xFE4250")]
		private static UIDrawerListener AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xFE4258", Offset = "0xFE4258", VA = "0xFE4258")]
		private static UIDrawerListener AddToScene(GameObject parent, bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xFE43EC", Offset = "0xFE43EC", VA = "0xFE43EC")]
		public UIDrawerListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DB")]
	public class UIDrawerMessage : Message
	{
		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIDrawer Drawer;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIDrawerBehaviorType Type;

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xFE43F4", Offset = "0xFE43F4", VA = "0xFE43F4")]
		public UIDrawerMessage(UIDrawer drawer, UIDrawerBehaviorType type)
		{
		}
	}
	[Token(Token = "0x20004DC")]
	[RequireComponent(typeof(Canvas))]
	[RequireComponent(typeof(GraphicRaycaster))]
	[DisallowMultipleComponent]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/UI/UIPopup", 2)]
	[RequireComponent(typeof(RectTransform))]
	public class UIPopup : UIComponentBase<UIPopup>
	{
		[Token(Token = "0x20004DD")]
		[CompilerGenerated]
		private sealed class <TriggerShowInNextFrame>d__111 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPopup <>4__this;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool instantAction;

			[Token(Token = "0x1700041F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FC3")]
				[Address(RVA = "0xFE6FF0", Offset = "0xFE6FF0", VA = "0xFE6FF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000420")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FC5")]
				[Address(RVA = "0xFE7038", Offset = "0xFE7038", VA = "0xFE7038", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0xFE6538", Offset = "0xFE6538", VA = "0xFE6538")]
			[DebuggerHidden]
			public <TriggerShowInNextFrame>d__111(int <>1__state)
			{
			}

			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0xFE6F58", Offset = "0xFE6F58", VA = "0xFE6F58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0xFE6F5C", Offset = "0xFE6F5C", VA = "0xFE6F5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0xFE6FF8", Offset = "0xFE6FF8", VA = "0xFE6FF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DE")]
		[CompilerGenerated]
		private sealed class <ShowEnumerator>d__112 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPopup <>4__this;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool instantAction;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startTime>5__2;

			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <totalDuration>5__3;

			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startDelay>5__5;

			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <invokedOnStart>5__6;

			[Token(Token = "0x17000421")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FC9")]
				[Address(RVA = "0xFE7CEC", Offset = "0xFE7CEC", VA = "0xFE7CEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000422")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FCB")]
				[Address(RVA = "0xFE7D34", Offset = "0xFE7D34", VA = "0xFE7D34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0xFE6560", Offset = "0xFE6560", VA = "0xFE6560")]
			[DebuggerHidden]
			public <ShowEnumerator>d__112(int <>1__state)
			{
			}

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0xFE7040", Offset = "0xFE7040", VA = "0xFE7040", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0xFE7044", Offset = "0xFE7044", VA = "0xFE7044", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0xFE7CF4", Offset = "0xFE7CF4", VA = "0xFE7CF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DF")]
		[CompilerGenerated]
		private sealed class <HideEnumerator>d__113 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPopup <>4__this;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool instantAction;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startTime>5__2;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <totalDuration>5__3;

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startDelay>5__5;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <invokedOnStart>5__6;

			[Token(Token = "0x17000423")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FCF")]
				[Address(RVA = "0xFE8930", Offset = "0xFE8930", VA = "0xFE8930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000424")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD1")]
				[Address(RVA = "0xFE8978", Offset = "0xFE8978", VA = "0xFE8978", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0xFE6588", Offset = "0xFE6588", VA = "0xFE6588")]
			[DebuggerHidden]
			public <HideEnumerator>d__113(int <>1__state)
			{
			}

			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0xFE7D3C", Offset = "0xFE7D3C", VA = "0xFE7D3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0xFE7D40", Offset = "0xFE7D40", VA = "0xFE7D40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0xFE8938", Offset = "0xFE8938", VA = "0xFE8938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E0")]
		[CompilerGenerated]
		private sealed class <HideWithDelayEnumerator>d__114 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIPopup <>4__this;

			[Token(Token = "0x17000425")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FD5")]
				[Address(RVA = "0xFE8A5C", Offset = "0xFE8A5C", VA = "0xFE8A5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000426")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD7")]
				[Address(RVA = "0xFE8AA4", Offset = "0xFE8AA4", VA = "0xFE8AA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0xFE65B0", Offset = "0xFE65B0", VA = "0xFE65B0")]
			[DebuggerHidden]
			public <HideWithDelayEnumerator>d__114(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0xFE8980", Offset = "0xFE8980", VA = "0xFE8980", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0xFE8984", Offset = "0xFE8984", VA = "0xFE8984", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0xFE8A64", Offset = "0xFE8A64", VA = "0xFE8A64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E1")]
		[CompilerGenerated]
		private sealed class <ExecuteShowSelectDeselectButtonEnumerator>d__115 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPopup <>4__this;

			[Token(Token = "0x17000427")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FDB")]
				[Address(RVA = "0xFE8BF4", Offset = "0xFE8BF4", VA = "0xFE8BF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000428")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FDD")]
				[Address(RVA = "0xFE8C3C", Offset = "0xFE8C3C", VA = "0xFE8C3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xFE664C", Offset = "0xFE664C", VA = "0xFE664C")]
			[DebuggerHidden]
			public <ExecuteShowSelectDeselectButtonEnumerator>d__115(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xFE8AAC", Offset = "0xFE8AAC", VA = "0xFE8AAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0xFE8AB0", Offset = "0xFE8AB0", VA = "0xFE8AB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0xFE8BFC", Offset = "0xFE8BFC", VA = "0xFE8BFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E2")]
		[CompilerGenerated]
		private sealed class <ExecuteHideDeselectButtonEnumerator>d__116 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPopup <>4__this;

			[Token(Token = "0x17000429")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FE1")]
				[Address(RVA = "0xFE8D58", Offset = "0xFE8D58", VA = "0xFE8D58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FE3")]
				[Address(RVA = "0xFE8DA0", Offset = "0xFE8DA0", VA = "0xFE8DA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0xFE66E8", Offset = "0xFE66E8", VA = "0xFE66E8")]
			[DebuggerHidden]
			public <ExecuteHideDeselectButtonEnumerator>d__116(int <>1__state)
			{
			}

			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xFE8C44", Offset = "0xFE8C44", VA = "0xFE8C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0xFE8C48", Offset = "0xFE8C48", VA = "0xFE8C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0xFE8D60", Offset = "0xFE8D60", VA = "0xFE8D60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002050")]
		public const string DEFAULT_POPUP_CANVAS_NAME = "PopupCanvas";

		[Token(Token = "0x4002051")]
		public const int DEFAULT_POPUP_CANVAS_OVERLAY_SORT_ORDER = 10000;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<UIPopup, AnimationType> OnUIPopupAction;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly List<UIPopup> VisiblePopups;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool AddToPopupQueue;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool AutoHideAfterShow;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float AutoHideAfterShowDelay;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool AutoSelectButtonAfterShow;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool AutoSelectPreviouslySelectedButtonAfterHide;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool BlockBackButton;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string CanvasName;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UIContainer Container;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CustomCanvasName;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UIPopupContentReferences Data;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool DestroyAfterHide;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public PopupDisplayOn DisplayTarget;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UIPopupBehavior HideBehavior;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool HideOnAnyButton;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool HideOnBackButton;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool HideOnClickAnywhere;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		public bool HideOnClickContainer;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool HideOnClickOverlay;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Progressor HideProgressor;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ProgressEvent OnInverseVisibilityChanged;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ProgressEvent OnVisibilityChanged;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UIContainer Overlay;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject SelectedButton;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UIPopupBehavior ShowBehavior;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Progressor ShowProgressor;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool UpdateHideProgressorOnShow;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool UpdateShowProgressorOnHide;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool UseOverlay;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Canvas m_canvas;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GraphicRaycaster m_graphicRaycaster;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject m_previousSelectedButton;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float m_visibilityProgress;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private VisibilityState m_visibilityState;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_addedToQueue;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine m_showCoroutine;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Coroutine m_hideCoroutine;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Coroutine m_autoHideCoroutine;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Coroutine m_disableButtonClickCoroutine;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private UIButton[] m_childUIButtons;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool m_initialized;

		[Token(Token = "0x1700040B")]
		public static bool AnyPopupVisible
		{
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0xFE4474", Offset = "0xFE4474", VA = "0xFE4474")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700040C")]
		public static string DefaultPopupName
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0xFE464C", Offset = "0xFE464C", VA = "0xFE464C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040D")]
		public static string DefaultTargetCanvasName
		{
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xFE468C", Offset = "0xFE468C", VA = "0xFE468C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040E")]
		public static UIPopup LastShownPopup
		{
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0xFE4694", Offset = "0xFE4694", VA = "0xFE4694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040F")]
		private static TouchDetector Detector
		{
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xFE475C", Offset = "0xFE475C", VA = "0xFE475C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000410")]
		public bool AddedToQueue
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0xFE4764", Offset = "0xFE4764", VA = "0xFE4764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0xFE476C", Offset = "0xFE476C", VA = "0xFE476C")]
			set
			{
			}
		}

		[Token(Token = "0x17000411")]
		public Canvas Canvas
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xFE4778", Offset = "0xFE4778", VA = "0xFE4778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000412")]
		public bool DetectsTouch
		{
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xFE4820", Offset = "0xFE4820", VA = "0xFE4820")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000413")]
		public GraphicRaycaster GraphicRaycaster
		{
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xFE4960", Offset = "0xFE4960", VA = "0xFE4960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000414")]
		public bool HasContainer
		{
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0xFE48E8", Offset = "0xFE48E8", VA = "0xFE48E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000415")]
		public bool HasOverlay
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0xFE4870", Offset = "0xFE4870", VA = "0xFE4870")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000416")]
		public float InverseVisibility
		{
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0xFE4A08", Offset = "0xFE4A08", VA = "0xFE4A08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000417")]
		public bool IsHidden
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xFE4A18", Offset = "0xFE4A18", VA = "0xFE4A18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000418")]
		public bool IsHiding
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0xFE4A28", Offset = "0xFE4A28", VA = "0xFE4A28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000419")]
		public bool IsShowing
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xFE4A38", Offset = "0xFE4A38", VA = "0xFE4A38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041A")]
		public bool IsVisible
		{
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0xFE4A48", Offset = "0xFE4A48", VA = "0xFE4A48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700041B")]
		public string PopupName
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0xFE4A58", Offset = "0xFE4A58", VA = "0xFE4A58")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0xFE4A60", Offset = "0xFE4A60", VA = "0xFE4A60")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public VisibilityState Visibility
		{
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0xFE4A68", Offset = "0xFE4A68", VA = "0xFE4A68")]
			get
			{
				return default(VisibilityState);
			}
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0xFE4A70", Offset = "0xFE4A70", VA = "0xFE4A70")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public float VisibilityProgress
		{
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0xFE4C68", Offset = "0xFE4C68", VA = "0xFE4C68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xFE4A94", Offset = "0xFE4A94", VA = "0xFE4A94")]
			set
			{
			}
		}

		[Token(Token = "0x1700041E")]
		private bool DebugComponent
		{
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0xFE4CC4", Offset = "0xFE4CC4", VA = "0xFE4CC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xFE4CFC", Offset = "0xFE4CFC", VA = "0xFE4CFC", Slot = "4")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xFE4D60", Offset = "0xFE4D60", VA = "0xFE4D60", Slot = "5")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xFE4FA0", Offset = "0xFE4FA0", VA = "0xFE4FA0", Slot = "8")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xFE536C", Offset = "0xFE536C", VA = "0xFE536C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xFE56FC", Offset = "0xFE56FC", VA = "0xFE56FC")]
		public void CancelAutoHide()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xFE5788", Offset = "0xFE5788", VA = "0xFE5788")]
		public UICanvas GetTargetCanvas()
		{
			return null;
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xFE5854", Offset = "0xFE5854", VA = "0xFE5854")]
		public void Hide(float delay)
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xFE5514", Offset = "0xFE5514", VA = "0xFE5514")]
		public void Hide(bool instantAction = false)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xFE5A30", Offset = "0xFE5A30", VA = "0xFE5A30")]
		public void InstantHide()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xFE5CD0", Offset = "0xFE5CD0", VA = "0xFE5CD0")]
		public void ResetTargetCanvasToPopupCanvas(bool reparentImmediately = true)
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xFE5D94", Offset = "0xFE5D94", VA = "0xFE5D94")]
		public void Show(bool instantAction = false)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xFE60EC", Offset = "0xFE60EC", VA = "0xFE60EC")]
		public void NotifySystemOfTriggeredBehavior(AnimationType animationType)
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xFE6280", Offset = "0xFE6280", VA = "0xFE6280")]
		public void SetPopupName(string popupName)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xFE6304", Offset = "0xFE6304", VA = "0xFE6304")]
		public void SetTargetCanvasName(string canvasName, bool reparentImmediately = true)
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xFE4EB4", Offset = "0xFE4EB4", VA = "0xFE4EB4")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xFE4E1C", Offset = "0xFE4E1C", VA = "0xFE4E1C")]
		private void LoadPresets()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xFE50C0", Offset = "0xFE50C0", VA = "0xFE50C0")]
		private void StopHide()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xFE5218", Offset = "0xFE5218", VA = "0xFE5218")]
		private void StopShow()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xFE63AC", Offset = "0xFE63AC", VA = "0xFE63AC")]
		private void UpdateChildUIButtonsStartValues()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xFE4C70", Offset = "0xFE4C70", VA = "0xFE4C70")]
		private void UpdateOverlayAlpha(float value)
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xFE5FD4", Offset = "0xFE5FD4", VA = "0xFE5FD4")]
		private void ReparentToTargetCanvas()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xFE5CE0", Offset = "0xFE5CE0", VA = "0xFE5CE0")]
		private void ReparentToPopupCanvas()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xFE64B0", Offset = "0xFE64B0", VA = "0xFE64B0")]
		[IteratorStateMachine(typeof(<TriggerShowInNextFrame>d__111))]
		private IEnumerator TriggerShowInNextFrame(bool instantAction)
		{
			return null;
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xFE6064", Offset = "0xFE6064", VA = "0xFE6064")]
		[IteratorStateMachine(typeof(<ShowEnumerator>d__112))]
		private IEnumerator ShowEnumerator(bool instantAction)
		{
			return null;
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xFE59A8", Offset = "0xFE59A8", VA = "0xFE59A8")]
		[IteratorStateMachine(typeof(<HideEnumerator>d__113))]
		private IEnumerator HideEnumerator(bool instantAction)
		{
			return null;
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xFE5924", Offset = "0xFE5924", VA = "0xFE5924")]
		[IteratorStateMachine(typeof(<HideWithDelayEnumerator>d__114))]
		private IEnumerator HideWithDelayEnumerator(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xFE65D8", Offset = "0xFE65D8", VA = "0xFE65D8")]
		[IteratorStateMachine(typeof(<ExecuteShowSelectDeselectButtonEnumerator>d__115))]
		private IEnumerator ExecuteShowSelectDeselectButtonEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xFE6674", Offset = "0xFE6674", VA = "0xFE6674")]
		[IteratorStateMachine(typeof(<ExecuteHideDeselectButtonEnumerator>d__116))]
		private IEnumerator ExecuteHideDeselectButtonEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xFE6710", Offset = "0xFE6710", VA = "0xFE6710")]
		public static UIPopup GetPopup(string popupName)
		{
			return null;
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xFE641C", Offset = "0xFE641C", VA = "0xFE641C")]
		public static UICanvas GetPopupOverlayCanvas()
		{
			return null;
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xFE57E8", Offset = "0xFE57E8", VA = "0xFE57E8")]
		public static UICanvas GetTargetCanvas(PopupDisplayOn popupDisplayOn, string targetCanvasName)
		{
			return null;
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xFE6988", Offset = "0xFE6988", VA = "0xFE6988")]
		public static bool HidePopup(string popupName, bool instantAction = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xFE5BA8", Offset = "0xFE5BA8", VA = "0xFE5BA8")]
		private static void RemoveHiddenFromVisiblePopups()
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xFE44F0", Offset = "0xFE44F0", VA = "0xFE44F0")]
		private static void RemoveNullsFromVisiblePopups()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xFE6BC8", Offset = "0xFE6BC8", VA = "0xFE6BC8")]
		public UIPopup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E4")]
	public class UIPopupBehavior
	{
		[Token(Token = "0x400209E")]
		public const bool DEFAULT_INSTANT_ANIMATION = false;

		[Token(Token = "0x400209F")]
		public const bool DEFAULT_LOAD_SELECTED_PRESET_AT_RUNTIME = false;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIAnimation Animation;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool LoadSelectedPresetAtRuntime;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool InstantAnimation;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIAction OnFinished;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIAction OnStart;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string PresetCategory;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string PresetName;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_progress;

		[Token(Token = "0x1700042B")]
		public static string DefaultPresetCategory
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0xFE8E24", Offset = "0xFE8E24", VA = "0xFE8E24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042C")]
		public static string DefaultPresetName
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0xFE8E64", Offset = "0xFE8E64", VA = "0xFE8E64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		public bool HasAnimation
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0xFE8EA4", Offset = "0xFE8EA4", VA = "0xFE8EA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700042E")]
		public bool HasAnimatorEvents
		{
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0xFE8EDC", Offset = "0xFE8EDC", VA = "0xFE8EDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700042F")]
		public bool HasEffect
		{
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0xFE8F1C", Offset = "0xFE8F1C", VA = "0xFE8F1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000430")]
		public bool HasGameEvents
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0xFE8F5C", Offset = "0xFE8F5C", VA = "0xFE8F5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000431")]
		public bool HasSound
		{
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0xFE8F9C", Offset = "0xFE8F9C", VA = "0xFE8F9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000432")]
		public bool HasUnityEvents
		{
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0xFE8FDC", Offset = "0xFE8FDC", VA = "0xFE8FDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xFE6D7C", Offset = "0xFE6D7C", VA = "0xFE6D7C")]
		public UIPopupBehavior(AnimationType animationType)
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xFE6414", Offset = "0xFE6414", VA = "0xFE6414")]
		public void LoadPreset()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xFE916C", Offset = "0xFE916C", VA = "0xFE916C")]
		public void LoadPreset(string presetCategory, string presetName)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xFE901C", Offset = "0xFE901C", VA = "0xFE901C")]
		public void Reset(AnimationType animationType)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E5")]
	public class UIPopupContentData
	{
		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<UnityAction> ButtonCallbacks;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> ButtonLabels;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> ButtonNames;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> Labels;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Sprite> Sprites;

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xFE9244", Offset = "0xFE9244", VA = "0xFE9244")]
		public UIPopupContentData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E6")]
	public class UIPopupContentReferences
	{
		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<UIButton> Buttons;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Image> Images;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> Labels;

		[Token(Token = "0x17000433")]
		public int ButtonsCount
		{
			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0xFE93C4", Offset = "0xFE93C4", VA = "0xFE93C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000434")]
		public bool HasButtons
		{
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0xFE7CD4", Offset = "0xFE7CD4", VA = "0xFE7CD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000435")]
		public bool HasImages
		{
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0xFE940C", Offset = "0xFE940C", VA = "0xFE940C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000436")]
		public bool HasLabels
		{
			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xFE946C", Offset = "0xFE946C", VA = "0xFE946C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000437")]
		public int ImagesCount
		{
			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xFE9424", Offset = "0xFE9424", VA = "0xFE9424")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000438")]
		public int LabelsCount
		{
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xFE9484", Offset = "0xFE9484", VA = "0xFE9484")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xFE94CC", Offset = "0xFE94CC", VA = "0xFE94CC")]
		public void SetButtonsCallbacks(params UnityAction[] callbacks)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xFE95FC", Offset = "0xFE95FC", VA = "0xFE95FC")]
		public void SetButtonsLabels(params string[] buttonLabels)
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xFE9714", Offset = "0xFE9714", VA = "0xFE9714")]
		public void SetButtonsNames(params string[] buttonNames)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xFE9870", Offset = "0xFE9870", VA = "0xFE9870")]
		public void SetContentData(UIPopupContentData data)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xFE9AC0", Offset = "0xFE9AC0", VA = "0xFE9AC0")]
		public void SetImagesSprites(params Sprite[] sprites)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xFE9978", Offset = "0xFE9978", VA = "0xFE9978")]
		public void SetLabelsTexts(params string[] labels)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xFE9BD8", Offset = "0xFE9BD8", VA = "0xFE9BD8")]
		public UIPopupContentReferences()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E7")]
	public class UIPopupDatabase : ScriptableObject
	{
		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> PopupNames;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<UIPopupLink> Popups;

		[Token(Token = "0x17000439")]
		private static UILanguagePack UILabels
		{
			[Token(Token = "0x6002001")]
			[Address(RVA = "0xFE9D00", Offset = "0xFE9D00", VA = "0xFE9D00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043A")]
		public bool IsEmpty
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0xFE9D08", Offset = "0xFE9D08", VA = "0xFE9D08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xFE9D58", Offset = "0xFE9D58", VA = "0xFE9D58")]
		public bool Add(UIPopupLink popupLink, bool performUndo, bool saveAssets)
		{
			return default(bool);
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xFEA1EC", Offset = "0xFEA1EC", VA = "0xFEA1EC")]
		public bool Contains(string popupName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xFEA394", Offset = "0xFEA394", VA = "0xFEA394")]
		public bool Contains(UIPopup prefab)
		{
			return default(bool);
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xFEA598", Offset = "0xFEA598", VA = "0xFEA598")]
		public bool CreateUIPopupLink(string popupName, GameObject prefab, bool performUndo, bool saveAssets)
		{
			return default(bool);
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xFEA8F4", Offset = "0xFEA8F4", VA = "0xFEA8F4")]
		public bool DeletePopupLink(UIPopupLink reference)
		{
			return default(bool);
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xFEA9A0", Offset = "0xFEA9A0", VA = "0xFEA9A0")]
		public GameObject GetPrefab(string popupName)
		{
			return null;
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xFEAB34", Offset = "0xFEAB34", VA = "0xFEAB34")]
		public string GetPopupName(UIPopup prefab)
		{
			return null;
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xFEAD34", Offset = "0xFEAD34", VA = "0xFEAD34")]
		public int IndexOf(string popupName)
		{
			return default(int);
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xFEADF4", Offset = "0xFEADF4", VA = "0xFEADF4")]
		public int IndexOf(UIPopup prefab)
		{
			return default(int);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xFEAEF8", Offset = "0xFEAEF8", VA = "0xFEAEF8")]
		public void RefreshDatabase(bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xFEB1CC", Offset = "0xFEB1CC", VA = "0xFEB1CC")]
		public void RemoveLink(string popupName, bool showDialog, bool saveAssets)
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xFEB05C", Offset = "0xFEB05C", VA = "0xFEB05C")]
		public void RemoveUnreferencedData(bool saveAssets = false)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xFEB2C4", Offset = "0xFEB2C4", VA = "0xFEB2C4")]
		public bool ResetDatabase()
		{
			return default(bool);
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xFEB2CC", Offset = "0xFEB2CC", VA = "0xFEB2CC")]
		public void SearchForUnregisteredLinks(bool saveAssets)
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xFEA184", Offset = "0xFEA184", VA = "0xFEA184")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xFEB060", Offset = "0xFEB060", VA = "0xFEB060")]
		public void Sort(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xFE9EF8", Offset = "0xFE9EF8", VA = "0xFE9EF8")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xFE9F60", Offset = "0xFE9F60", VA = "0xFE9F60")]
		public void UpdateListOfPopupNames()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xFEB5FC", Offset = "0xFEB5FC", VA = "0xFEB5FC")]
		public UIPopupDatabase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E9")]
	public class UIPopupLink : ScriptableObject
	{
		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PopupName;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Prefab;

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xFEB764", Offset = "0xFEB764", VA = "0xFEB764")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xFEB7CC", Offset = "0xFEB7CC", VA = "0xFEB7CC")]
		public void UpdateAssetName(bool saveAsset)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xFEB7D0", Offset = "0xFEB7D0", VA = "0xFEB7D0")]
		public UIPopupLink()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	[DefaultExecutionOrder(-200)]
	[AddComponentMenu("Doozy/Managers/UIPopup Manager", 13)]
	[DisallowMultipleComponent]
	public class UIPopupManager : MonoBehaviour
	{
		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIPopupManager s_instance;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UIPopup CurrentVisibleQueuePopup;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly List<UIPopupQueueData> PopupQueue;

		[Token(Token = "0x1700043B")]
		public static UIPopupManager Instance
		{
			[Token(Token = "0x600201D")]
			[Address(RVA = "0xFEB7E0", Offset = "0xFEB7E0", VA = "0xFEB7E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043C")]
		public static UIPopupDatabase PopupDatabase
		{
			[Token(Token = "0x600201E")]
			[Address(RVA = "0xFEBA48", Offset = "0xFEBA48", VA = "0xFEBA48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		public static bool QueueIsEmpty
		{
			[Token(Token = "0x600201F")]
			[Address(RVA = "0xFEBA50", Offset = "0xFEBA50", VA = "0xFEBA50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043E")]
		private static bool ApplicationIsQuitting
		{
			[Token(Token = "0x6002020")]
			[Address(RVA = "0xFEBAC8", Offset = "0xFEBAC8", VA = "0xFEBAC8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002021")]
			[Address(RVA = "0xFEBB20", Offset = "0xFEBB20", VA = "0xFEBB20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		private bool DebugComponent
		{
			[Token(Token = "0x6002022")]
			[Address(RVA = "0xFEBB7C", Offset = "0xFEBB7C", VA = "0xFEBB7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xFEB7D8", Offset = "0xFEB7D8", VA = "0xFEB7D8")]
		protected UIPopupManager()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xFEBB9C", Offset = "0xFEBB9C", VA = "0xFEBB9C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void RunOnStart()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xFEBC7C", Offset = "0xFEBC7C", VA = "0xFEBC7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xFEBE9C", Offset = "0xFEBE9C", VA = "0xFEBE9C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xFEBF28", Offset = "0xFEBF28", VA = "0xFEBF28")]
		public static void AddToQueue(UIPopup popup, bool instantAction = false)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xFEC308", Offset = "0xFEC308", VA = "0xFEC308")]
		public static void ClearQueue(bool instantAction = false)
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xFE6764", Offset = "0xFE6764", VA = "0xFE6764")]
		public static UIPopup GetPopup(string popupName)
		{
			return null;
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xFEC680", Offset = "0xFEC680", VA = "0xFEC680")]
		private static UIPopupQueueData GetPopupData(string popupName)
		{
			return null;
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xFEC870", Offset = "0xFEC870", VA = "0xFEC870")]
		private static UIPopupQueueData GetPopupData(UIPopup popup)
		{
			return null;
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xFECA8C", Offset = "0xFECA8C", VA = "0xFECA8C")]
		public static bool HideCurrentVisiblePopup(bool instantAction = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xFECB60", Offset = "0xFECB60", VA = "0xFECB60")]
		public static bool IsInQueue(string popupName)
		{
			return default(bool);
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xFECD48", Offset = "0xFECD48", VA = "0xFECD48")]
		public static bool IsInQueue(UIPopup popup)
		{
			return default(bool);
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xFECF58", Offset = "0xFECF58", VA = "0xFECF58")]
		public static void RemoveFromQueue(string popupName, bool showNextInQueue = true)
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xFE8744", Offset = "0xFE8744", VA = "0xFE8744")]
		public static void RemoveFromQueue(UIPopup popup, bool showNextInQueue = true)
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xFEC1A0", Offset = "0xFEC1A0", VA = "0xFEC1A0")]
		public static void ShowNextInQueue()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xFED208", Offset = "0xFED208", VA = "0xFED208")]
		public static void ShowPopup(UIPopup popup, bool addToPopupQueue, bool instantAction, string targetCanvasName)
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xFED2E4", Offset = "0xFED2E4", VA = "0xFED2E4")]
		public static void ShowPopup(UIPopup popup, bool addToPopupQueue, bool instantAction)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xFED448", Offset = "0xFED448", VA = "0xFED448")]
		public static UIPopup ShowPopup(string popupName, bool addToPopupQueue, bool instantAction, string targetCanvasName)
		{
			return null;
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xFED4D4", Offset = "0xFED4D4", VA = "0xFED4D4")]
		public static UIPopup ShowPopup(string popupName, bool addToPopupQueue, bool instantAction)
		{
			return null;
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xFEB9C0", Offset = "0xFEB9C0", VA = "0xFEB9C0")]
		private static UIPopupManager AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004EB")]
	public class UIPopupMessage : Message
	{
		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIPopup Popup;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationType AnimationType;

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xFED5E0", Offset = "0xFED5E0", VA = "0xFED5E0")]
		public UIPopupMessage(UIPopup popup)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xFE6200", Offset = "0xFE6200", VA = "0xFE6200")]
		public UIPopupMessage(UIPopup popup, AnimationType animationType)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004EC")]
	public class UIPopupQueueData
	{
		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIPopup Popup;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PopupName;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool InstantAction;

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xFEC148", Offset = "0xFEC148", VA = "0xFEC148")]
		public UIPopupQueueData(UIPopup popup, bool instantAction = false)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xFED65C", Offset = "0xFED65C", VA = "0xFED65C")]
		public UIPopupQueueData(string popupName, UIPopup popup, bool instantAction = false)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xFED180", Offset = "0xFED180", VA = "0xFED180")]
		public UIPopup Show()
		{
			return null;
		}
	}
	[Token(Token = "0x20004ED")]
	[AddComponentMenu("Doozy/UI/UIToggle", 2)]
	[DisallowMultipleComponent]
	[DefaultExecutionOrder(-100)]
	[RequireComponent(typeof(Toggle))]
	[RequireComponent(typeof(RectTransform))]
	public class UIToggle : UIComponentBase<UIToggle>, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, ISelectHandler, IDeselectHandler
	{
		[Token(Token = "0x20004EE")]
		[CompilerGenerated]
		private sealed class <DeselectToggleEnumerator>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIToggle <>4__this;

			[Token(Token = "0x17000448")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600206F")]
				[Address(RVA = "0xFEFA14", Offset = "0xFEFA14", VA = "0xFEFA14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000449")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002071")]
				[Address(RVA = "0xFEFA5C", Offset = "0xFEFA5C", VA = "0xFEFA5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600206C")]
			[Address(RVA = "0xFEF6F8", Offset = "0xFEF6F8", VA = "0xFEF6F8")]
			[DebuggerHidden]
			public <DeselectToggleEnumerator>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x600206D")]
			[Address(RVA = "0xFEF958", Offset = "0xFEF958", VA = "0xFEF958", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0xFEF95C", Offset = "0xFEF95C", VA = "0xFEF95C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002070")]
			[Address(RVA = "0xFEFA1C", Offset = "0xFEFA1C", VA = "0xFEFA1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004EF")]
		[CompilerGenerated]
		private sealed class <ExecuteToggleBehaviorEnumerator>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIToggleBehavior behavior;

			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIToggle <>4__this;

			[Token(Token = "0x1700044A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002075")]
				[Address(RVA = "0xFF0170", Offset = "0xFF0170", VA = "0xFF0170", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002077")]
				[Address(RVA = "0xFF01B8", Offset = "0xFF01B8", VA = "0xFF01B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0xFEF720", Offset = "0xFEF720", VA = "0xFEF720")]
			[DebuggerHidden]
			public <ExecuteToggleBehaviorEnumerator>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6002073")]
			[Address(RVA = "0xFEFA64", Offset = "0xFEFA64", VA = "0xFEFA64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002074")]
			[Address(RVA = "0xFEFA68", Offset = "0xFEFA68", VA = "0xFEFA68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002076")]
			[Address(RVA = "0xFF0178", Offset = "0xFF0178", VA = "0xFF0178", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F0")]
		[CompilerGenerated]
		private sealed class <DisableToggleEnumerator>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIToggle <>4__this;

			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x1700044C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600207B")]
				[Address(RVA = "0xFF02A4", Offset = "0xFF02A4", VA = "0xFF02A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600207D")]
				[Address(RVA = "0xFF02EC", Offset = "0xFF02EC", VA = "0xFF02EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002078")]
			[Address(RVA = "0xFEF748", Offset = "0xFEF748", VA = "0xFEF748")]
			[DebuggerHidden]
			public <DisableToggleEnumerator>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6002079")]
			[Address(RVA = "0xFF01C0", Offset = "0xFF01C0", VA = "0xFF01C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600207A")]
			[Address(RVA = "0xFF01C4", Offset = "0xFF01C4", VA = "0xFF01C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600207C")]
			[Address(RVA = "0xFF02AC", Offset = "0xFF02AC", VA = "0xFF02AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F1")]
		[CompilerGenerated]
		private sealed class <DisableToggleBehaviorEnumerator>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIToggleBehavior behavior;

			[Token(Token = "0x1700044E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002081")]
				[Address(RVA = "0xFF03C8", Offset = "0xFF03C8", VA = "0xFF03C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002083")]
				[Address(RVA = "0xFF0410", Offset = "0xFF0410", VA = "0xFF0410", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600207E")]
			[Address(RVA = "0xFEF770", Offset = "0xFEF770", VA = "0xFEF770")]
			[DebuggerHidden]
			public <DisableToggleBehaviorEnumerator>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x600207F")]
			[Address(RVA = "0xFF02F4", Offset = "0xFF02F4", VA = "0xFF02F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002080")]
			[Address(RVA = "0xFF02F8", Offset = "0xFF02F8", VA = "0xFF02F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002082")]
			[Address(RVA = "0xFF03D0", Offset = "0xFF03D0", VA = "0xFF03D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<UIToggle, UIToggleState, UIToggleBehaviorType> OnUIToggleAction;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool AllowMultipleClicks;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float DisableButtonBetweenClicksInterval;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool DeselectButtonAfterClick;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InputData InputData;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UIToggleBehavior OnPointerEnter;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UIToggleBehavior OnPointerExit;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UIToggleBehavior OnClick;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UIToggleBehavior OnSelected;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UIToggleBehavior OnDeselected;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BoolEvent OnValueChanged;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TargetLabel TargetLabel;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Text TextLabel;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Progressor ToggleProgressor;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Coroutine m_disableButtonCoroutine;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_previousValue;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Toggle m_toggle;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_updateStartValuesRequired;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_initialized;

		[Token(Token = "0x17000440")]
		public CanvasGroup CanvasGroup
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0xFED6B4", Offset = "0xFED6B4", VA = "0xFED6B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000441")]
		public bool HasLabel
		{
			[Token(Token = "0x600203D")]
			[Address(RVA = "0xFED7C4", Offset = "0xFED7C4", VA = "0xFED7C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000442")]
		public bool Interactable
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0xFED840", Offset = "0xFED840", VA = "0xFED840")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600203F")]
			[Address(RVA = "0xFED904", Offset = "0xFED904", VA = "0xFED904")]
			set
			{
			}
		}

		[Token(Token = "0x17000443")]
		public bool IsOn
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0xFED928", Offset = "0xFED928", VA = "0xFED928")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002041")]
			[Address(RVA = "0xFED944", Offset = "0xFED944", VA = "0xFED944")]
			set
			{
			}
		}

		[Token(Token = "0x17000444")]
		public bool IsSelected
		{
			[Token(Token = "0x6002042")]
			[Address(RVA = "0xFED968", Offset = "0xFED968", VA = "0xFED968")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000445")]
		public Toggle Toggle
		{
			[Token(Token = "0x6002043")]
			[Address(RVA = "0xFED85C", Offset = "0xFED85C", VA = "0xFED85C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000446")]
		public bool UpdateStartValuesRequired
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0xFEDA84", Offset = "0xFEDA84", VA = "0xFEDA84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002045")]
			[Address(RVA = "0xFEDA8C", Offset = "0xFEDA8C", VA = "0xFEDA8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000447")]
		private bool DebugComponent
		{
			[Token(Token = "0x6002046")]
			[Address(RVA = "0xFEDA98", Offset = "0xFEDA98", VA = "0xFEDA98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xFEDAD0", Offset = "0xFEDAD0", VA = "0xFEDAD0", Slot = "4")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xFEDB44", Offset = "0xFEDB44", VA = "0xFEDB44", Slot = "5")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xFEDCE8", Offset = "0xFEDCE8", VA = "0xFEDCE8", Slot = "7")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xFEE054", Offset = "0xFEE054", VA = "0xFEE054", Slot = "6")]
		public override void Start()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xFEE0A8", Offset = "0xFEE0A8", VA = "0xFEE0A8", Slot = "8")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xFEE224", Offset = "0xFEE224", VA = "0xFEE224")]
		private void Update()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xFEE414", Offset = "0xFEE414", VA = "0xFEE414", Slot = "21")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xFEE688", Offset = "0xFEE688", VA = "0xFEE688", Slot = "22")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xFEE694", Offset = "0xFEE694", VA = "0xFEE694", Slot = "23")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xFEE6A0", Offset = "0xFEE6A0", VA = "0xFEE6A0", Slot = "24")]
		private void UnityEngine.EventSystems.ISelectHandler.OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xFEE758", Offset = "0xFEE758", VA = "0xFEE758", Slot = "25")]
		private void UnityEngine.EventSystems.IDeselectHandler.OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xFEE810", Offset = "0xFEE810", VA = "0xFEE810")]
		public void DeselectToggle()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xFEE8A4", Offset = "0xFEE8A4", VA = "0xFEE8A4")]
		public void DeselectToggle(float delay)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xFEE93C", Offset = "0xFEE93C", VA = "0xFEE93C")]
		public void DisableToggle()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xFEE944", Offset = "0xFEE944", VA = "0xFEE944")]
		public void DisableToggle(float duration)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xFEE21C", Offset = "0xFEE21C", VA = "0xFEE21C")]
		public void EnableToggle()
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xFEEA2C", Offset = "0xFEEA2C", VA = "0xFEEA2C")]
		public void ExecutePointerEnter(bool debug = false)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xFEEFE8", Offset = "0xFEEFE8", VA = "0xFEEFE8")]
		public void ExecutePointerExit(bool debug = false)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xFEE2E0", Offset = "0xFEE2E0", VA = "0xFEE2E0")]
		public void ExecuteClick(bool debug = false)
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xFEF0C4", Offset = "0xFEF0C4", VA = "0xFEF0C4")]
		public void ExecuteOnButtonDeselected(bool debug = false)
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xFEF1A0", Offset = "0xFEF1A0", VA = "0xFEF1A0")]
		public void ExecuteOnButtonSelected(bool debug = false)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xFEDC30", Offset = "0xFEDC30", VA = "0xFEDC30")]
		public void LoadPresets()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xFEF284", Offset = "0xFEF284", VA = "0xFEF284")]
		public void NotifySystemOfTriggeredBehavior(UIToggleState toggleState, UIToggleBehaviorType behaviorType)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xFEF438", Offset = "0xFEF438", VA = "0xFEF438")]
		public void SelectToggle()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xFEF4C8", Offset = "0xFEF4C8", VA = "0xFEF4C8")]
		public void SetLabelText(string text)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xFEF520", Offset = "0xFEF520", VA = "0xFEF520")]
		public void ToggleOff()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xFEF528", Offset = "0xFEF528", VA = "0xFEF528")]
		public void ToggleOn()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xFEEB08", Offset = "0xFEEB08", VA = "0xFEEB08")]
		private void PrintBehaviorDebugMessage(UIToggleBehavior behavior, string action, bool debug = false)
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xFEF530", Offset = "0xFEF530", VA = "0xFEF530")]
		private void ToggleOnValueChanged(bool value)
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xFEE420", Offset = "0xFEE420", VA = "0xFEE420")]
		private void TriggerToggleBehavior(UIToggleBehavior behavior, bool debug = false)
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xFEF614", Offset = "0xFEF614", VA = "0xFEF614")]
		private bool BehaviorEnabled(UIToggleBehaviorType behaviorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xFEE8B8", Offset = "0xFEE8B8", VA = "0xFEE8B8")]
		[IteratorStateMachine(typeof(<DeselectToggleEnumerator>d__70))]
		private IEnumerator DeselectToggleEnumerator(float delay)
		{
			return null;
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xFEEEE4", Offset = "0xFEEEE4", VA = "0xFEEEE4")]
		[IteratorStateMachine(typeof(<ExecuteToggleBehaviorEnumerator>d__71))]
		private IEnumerator ExecuteToggleBehaviorEnumerator(UIToggleBehavior behavior)
		{
			return null;
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xFEE9A8", Offset = "0xFEE9A8", VA = "0xFEE9A8")]
		[IteratorStateMachine(typeof(<DisableToggleEnumerator>d__72))]
		private IEnumerator DisableToggleEnumerator(float duration)
		{
			return null;
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xFEEF74", Offset = "0xFEEF74", VA = "0xFEEF74")]
		[IteratorStateMachine(typeof(<DisableToggleBehaviorEnumerator>d__73))]
		private IEnumerator DisableToggleBehaviorEnumerator(UIToggleBehavior behavior)
		{
			return null;
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xFEF798", Offset = "0xFEF798", VA = "0xFEF798")]
		public UIToggle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F3")]
	public class UIToggleBehavior
	{
		[Token(Token = "0x20004F5")]
		[CompilerGenerated]
		private sealed class <InvokeCallbacks>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIAnimation animation;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction onStartCallback;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityAction onCompleteCallback;

			[Token(Token = "0x1700045D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020A4")]
				[Address(RVA = "0xFF142C", Offset = "0xFF142C", VA = "0xFF142C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020A6")]
				[Address(RVA = "0xFF1474", Offset = "0xFF1474", VA = "0xFF1474", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0xFF1180", Offset = "0xFF1180", VA = "0xFF1180")]
			[DebuggerHidden]
			public <InvokeCallbacks>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x60020A2")]
			[Address(RVA = "0xFF12B4", Offset = "0xFF12B4", VA = "0xFF12B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020A3")]
			[Address(RVA = "0xFF12B8", Offset = "0xFF12B8", VA = "0xFF12B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020A5")]
			[Address(RVA = "0xFF1434", Offset = "0xFF1434", VA = "0xFF1434", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F6")]
		[CompilerGenerated]
		private sealed class <InvokeCallbackAfterDelay>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityAction callback;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x1700045F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020AA")]
				[Address(RVA = "0xFF1554", Offset = "0xFF1554", VA = "0xFF1554", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000460")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020AC")]
				[Address(RVA = "0xFF159C", Offset = "0xFF159C", VA = "0xFF159C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020A7")]
			[Address(RVA = "0xFF11A8", Offset = "0xFF11A8", VA = "0xFF11A8")]
			[DebuggerHidden]
			public <InvokeCallbackAfterDelay>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x60020A8")]
			[Address(RVA = "0xFF147C", Offset = "0xFF147C", VA = "0xFF147C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020A9")]
			[Address(RVA = "0xFF1480", Offset = "0xFF1480", VA = "0xFF1480", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0xFF155C", Offset = "0xFF155C", VA = "0xFF155C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020E3")]
		public const ButtonAnimationType DEFAULT_BUTTON_ANIMATION_TYPE = ButtonAnimationType.Punch;

		[Token(Token = "0x40020E4")]
		public const bool DEFAULT_DESELECT_BUTTON = false;

		[Token(Token = "0x40020E5")]
		public const bool DEFAULT_ENABLED = false;

		[Token(Token = "0x40020E6")]
		public const bool DEFAULT_LOAD_SELECTED_PRESET_AT_RUNTIME = false;

		[Token(Token = "0x40020E7")]
		public const bool DEFAULT_READY = true;

		[Token(Token = "0x40020E8")]
		public const bool DEFAULT_SELECT_BUTTON = false;

		[Token(Token = "0x40020E9")]
		public const bool DEFAULT_TRIGGER_EVENTS_AFTER_ANIMATION = false;

		[Token(Token = "0x40020EA")]
		public const float ON_BUTTON_DESELECTED_DISABLE_INTERVAL = 0f;

		[Token(Token = "0x40020EB")]
		public const float ON_BUTTON_SELECTED_DISABLE_INTERVAL = 0f;

		[Token(Token = "0x40020EC")]
		public const float ON_CLICK_DISABLE_INTERVAL = 0.4f;

		[Token(Token = "0x40020ED")]
		public const float ON_POINTER_ENTER_DISABLE_INTERVAL = 0.4f;

		[Token(Token = "0x40020EE")]
		public const float ON_POINTER_EXIT_DISABLE_INTERVAL = 0.4f;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AnimatorEvent> Animators;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ButtonAnimationType ButtonAnimationType;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool DeselectButton;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DisableInterval;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool Enabled;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool LoadSelectedPresetAtRuntime;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIAction OnToggleOff;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIAction OnToggleOn;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string PresetCategory;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string PresetName;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIAnimation PunchAnimation;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool Ready;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool SelectButton;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIAnimation StateAnimation;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool TriggerEventsAfterAnimation;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private UIToggleBehaviorType m_behaviorType;

		[Token(Token = "0x17000450")]
		public static string DefaultPresetCategory
		{
			[Token(Token = "0x6002087")]
			[Address(RVA = "0xFF0494", Offset = "0xFF0494", VA = "0xFF0494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		public static string DefaultPresetName
		{
			[Token(Token = "0x6002088")]
			[Address(RVA = "0xFF04D4", Offset = "0xFF04D4", VA = "0xFF04D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000452")]
		public int AnimatorsCount
		{
			[Token(Token = "0x6002089")]
			[Address(RVA = "0xFF0514", Offset = "0xFF0514", VA = "0xFF0514")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000453")]
		public UIToggleBehaviorType BehaviorType
		{
			[Token(Token = "0x600208A")]
			[Address(RVA = "0xFF0560", Offset = "0xFF0560", VA = "0xFF0560")]
			get
			{
				return default(UIToggleBehaviorType);
			}
		}

		[Token(Token = "0x17000454")]
		public bool HasAnimation
		{
			[Token(Token = "0x600208B")]
			[Address(RVA = "0xFF0568", Offset = "0xFF0568", VA = "0xFF0568")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000455")]
		public bool HasAnimators
		{
			[Token(Token = "0x600208C")]
			[Address(RVA = "0xFF066C", Offset = "0xFF066C", VA = "0xFF066C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000456")]
		public bool HasAnimatorEvents
		{
			[Token(Token = "0x600208D")]
			[Address(RVA = "0xFF06CC", Offset = "0xFF06CC", VA = "0xFF06CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000457")]
		public bool HasEffect
		{
			[Token(Token = "0x600208E")]
			[Address(RVA = "0xFF070C", Offset = "0xFF070C", VA = "0xFF070C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000458")]
		public bool HasGameEvents
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0xFF074C", Offset = "0xFF074C", VA = "0xFF074C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000459")]
		public bool HasPunchAnimation
		{
			[Token(Token = "0x6002090")]
			[Address(RVA = "0xFF05D8", Offset = "0xFF05D8", VA = "0xFF05D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700045A")]
		public bool HasSound
		{
			[Token(Token = "0x6002091")]
			[Address(RVA = "0xFF078C", Offset = "0xFF078C", VA = "0xFF078C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700045B")]
		public bool HasStateAnimation
		{
			[Token(Token = "0x6002092")]
			[Address(RVA = "0xFF0620", Offset = "0xFF0620", VA = "0xFF0620")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700045C")]
		public bool HasUnityEvents
		{
			[Token(Token = "0x6002093")]
			[Address(RVA = "0xFF07CC", Offset = "0xFF07CC", VA = "0xFF07CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xFF080C", Offset = "0xFF080C", VA = "0xFF080C")]
		public UIToggleBehavior(UIToggleBehaviorType behaviorType, bool enabled = false)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xFF0A40", Offset = "0xFF0A40", VA = "0xFF0A40")]
		public float GetAnimationTotalDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xFEDD94", Offset = "0xFEDD94", VA = "0xFEDD94")]
		public void Invoke(UIToggle toggle, bool playAnimation = true, bool playSound = true, bool executeEffect = true, bool executeAnimatorEvents = true, bool sendGameEvents = true, bool executeUnityEvent = true)
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xFEF27C", Offset = "0xFEF27C", VA = "0xFEF27C")]
		public void LoadPreset()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xFF0F84", Offset = "0xFF0F84", VA = "0xFF0F84")]
		public void LoadPreset(string presetCategory, string presetName)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xFF0A88", Offset = "0xFF0A88", VA = "0xFF0A88")]
		public void PlayAnimation(UIToggle toggle, bool withSound = true, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xFF0844", Offset = "0xFF0844", VA = "0xFF0844")]
		public void Reset(UIToggleBehaviorType behaviorType)
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xFF10C4", Offset = "0xFF10C4", VA = "0xFF10C4")]
		[IteratorStateMachine(typeof(<InvokeCallbacks>d__61))]
		private static IEnumerator InvokeCallbacks(UIAnimation animation, UnityAction onStartCallback, UnityAction onCompleteCallback)
		{
			return null;
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xFF0F00", Offset = "0xFF0F00", VA = "0xFF0F00")]
		[IteratorStateMachine(typeof(<InvokeCallbackAfterDelay>d__62))]
		private static IEnumerator InvokeCallbackAfterDelay(UnityAction callback, float delay)
		{
			return null;
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xFF10A8", Offset = "0xFF10A8", VA = "0xFF10A8")]
		public static AnimationType GetAnimationType(ButtonAnimationType type)
		{
			return default(AnimationType);
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xFF1168", Offset = "0xFF1168", VA = "0xFF1168")]
		public static float GetDefaultDisableInterval(UIToggleBehaviorType type)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20004F7")]
	public enum UIToggleBehaviorType
	{
		[Token(Token = "0x400210D")]
		OnClick,
		[Token(Token = "0x400210E")]
		OnPointerEnter,
		[Token(Token = "0x400210F")]
		OnPointerExit,
		[Token(Token = "0x4002110")]
		OnSelected,
		[Token(Token = "0x4002111")]
		OnDeselected
	}
	[Serializable]
	[Token(Token = "0x20004F8")]
	public class UIToggleEvent : UnityEvent<UIToggle>
	{
		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xFF15A4", Offset = "0xFF15A4", VA = "0xFF15A4")]
		public UIToggleEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F9")]
	public class UIToggleMessage : Message
	{
		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIToggle Toggle;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIToggleState ToggleState;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UIToggleBehaviorType Type;

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xFF15EC", Offset = "0xFF15EC", VA = "0xFF15EC")]
		public UIToggleMessage(UIToggleState toggleState, UIToggleBehaviorType type)
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xFEF3AC", Offset = "0xFEF3AC", VA = "0xFEF3AC")]
		public UIToggleMessage(UIToggle toggle, UIToggleState toggleState, UIToggleBehaviorType type)
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public enum UIToggleState
	{
		[Token(Token = "0x4002116")]
		On,
		[Token(Token = "0x4002117")]
		Off
	}
	[Token(Token = "0x20004FB")]
	public enum UIViewBehaviorType
	{
		[Token(Token = "0x4002119")]
		Unknown,
		[Token(Token = "0x400211A")]
		Show,
		[Token(Token = "0x400211B")]
		Hide,
		[Token(Token = "0x400211C")]
		Loop
	}
	[Token(Token = "0x20004FC")]
	public enum UIViewStartBehavior
	{
		[Token(Token = "0x400211E")]
		DoNothing,
		[Token(Token = "0x400211F")]
		Hide,
		[Token(Token = "0x4002120")]
		PlayShowAnimation
	}
	[Token(Token = "0x20004FD")]
	[RequireComponent(typeof(Canvas))]
	[RequireComponent(typeof(GraphicRaycaster))]
	[AddComponentMenu("Doozy/UI/UIView", 2)]
	[RequireComponent(typeof(RectTransform))]
	[DefaultExecutionOrder(-100)]
	[RequireComponent(typeof(CanvasGroup))]
	[DisallowMultipleComponent]
	public class UIView : UIComponentBase<UIView>
	{
		[Token(Token = "0x20004FF")]
		[CompilerGenerated]
		private sealed class <ShowViewNextFrame>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string viewCategory;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string viewName;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool instantAction;

			[Token(Token = "0x17000471")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020FE")]
				[Address(RVA = "0xFF90C8", Offset = "0xFF90C8", VA = "0xFF90C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000472")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002100")]
				[Address(RVA = "0xFF9110", Offset = "0xFF9110", VA = "0xFF9110", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020FB")]
			[Address(RVA = "0xFF44EC", Offset = "0xFF44EC", VA = "0xFF44EC")]
			[DebuggerHidden]
			public <ShowViewNextFrame>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x60020FC")]
			[Address(RVA = "0xFF9018", Offset = "0xFF9018", VA = "0xFF9018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020FD")]
			[Address(RVA = "0xFF901C", Offset = "0xFF901C", VA = "0xFF901C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020FF")]
			[Address(RVA = "0xFF90D0", Offset = "0xFF90D0", VA = "0xFF90D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000500")]
		[CompilerGenerated]
		private sealed class <HideViewNextFrame>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string viewCategory;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string viewName;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool instantAction;

			[Token(Token = "0x17000473")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002104")]
				[Address(RVA = "0xFF91C8", Offset = "0xFF91C8", VA = "0xFF91C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000474")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002106")]
				[Address(RVA = "0xFF9210", Offset = "0xFF9210", VA = "0xFF9210", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002101")]
			[Address(RVA = "0xFF45B0", Offset = "0xFF45B0", VA = "0xFF45B0")]
			[DebuggerHidden]
			public <HideViewNextFrame>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x6002102")]
			[Address(RVA = "0xFF9118", Offset = "0xFF9118", VA = "0xFF9118", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002103")]
			[Address(RVA = "0xFF911C", Offset = "0xFF911C", VA = "0xFF911C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002105")]
			[Address(RVA = "0xFF91D0", Offset = "0xFF91D0", VA = "0xFF91D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000501")]
		[CompilerGenerated]
		private sealed class <ShowEnumerator>d__107 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIView <>4__this;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool instantAction;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startTime>5__2;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <totalDuration>5__3;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startDelay>5__5;

			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <invokedOnStart>5__6;

			[Token(Token = "0x17000475")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600210A")]
				[Address(RVA = "0xFF9D34", Offset = "0xFF9D34", VA = "0xFF9D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600210C")]
				[Address(RVA = "0xFF9D7C", Offset = "0xFF9D7C", VA = "0xFF9D7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002107")]
			[Address(RVA = "0xFF45D8", Offset = "0xFF45D8", VA = "0xFF45D8")]
			[DebuggerHidden]
			public <ShowEnumerator>d__107(int <>1__state)
			{
			}

			[Token(Token = "0x6002108")]
			[Address(RVA = "0xFF9218", Offset = "0xFF9218", VA = "0xFF9218", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002109")]
			[Address(RVA = "0xFF921C", Offset = "0xFF921C", VA = "0xFF921C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600210B")]
			[Address(RVA = "0xFF9D3C", Offset = "0xFF9D3C", VA = "0xFF9D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000502")]
		[CompilerGenerated]
		private sealed class <HideEnumerator>d__108 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIView <>4__this;

			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool instantAction;

			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startTime>5__2;

			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <totalDuration>5__3;

			[Token(Token = "0x4002166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startDelay>5__5;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <invokedOnStart>5__6;

			[Token(Token = "0x17000477")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002110")]
				[Address(RVA = "0xFFA874", Offset = "0xFFA874", VA = "0xFFA874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000478")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002112")]
				[Address(RVA = "0xFFA8BC", Offset = "0xFFA8BC", VA = "0xFFA8BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600210D")]
			[Address(RVA = "0xFF4600", Offset = "0xFF4600", VA = "0xFF4600")]
			[DebuggerHidden]
			public <HideEnumerator>d__108(int <>1__state)
			{
			}

			[Token(Token = "0x600210E")]
			[Address(RVA = "0xFF9D84", Offset = "0xFF9D84", VA = "0xFF9D84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600210F")]
			[Address(RVA = "0xFF9D88", Offset = "0xFF9D88", VA = "0xFF9D88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002111")]
			[Address(RVA = "0xFFA87C", Offset = "0xFFA87C", VA = "0xFFA87C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000503")]
		[CompilerGenerated]
		private sealed class <HideWithDelayEnumerator>d__109 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIView <>4__this;

			[Token(Token = "0x17000479")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002116")]
				[Address(RVA = "0xFFA9A0", Offset = "0xFFA9A0", VA = "0xFFA9A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002118")]
				[Address(RVA = "0xFFA9E8", Offset = "0xFFA9E8", VA = "0xFFA9E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002113")]
			[Address(RVA = "0xFF4628", Offset = "0xFF4628", VA = "0xFF4628")]
			[DebuggerHidden]
			public <HideWithDelayEnumerator>d__109(int <>1__state)
			{
			}

			[Token(Token = "0x6002114")]
			[Address(RVA = "0xFFA8C4", Offset = "0xFFA8C4", VA = "0xFFA8C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002115")]
			[Address(RVA = "0xFFA8C8", Offset = "0xFFA8C8", VA = "0xFFA8C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002117")]
			[Address(RVA = "0xFFA9A8", Offset = "0xFFA9A8", VA = "0xFFA9A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000504")]
		[CompilerGenerated]
		private sealed class <ExecuteGetOrientationEnumerator>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIView <>4__this;

			[Token(Token = "0x1700047B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600211C")]
				[Address(RVA = "0xFFAAD0", Offset = "0xFFAAD0", VA = "0xFFAAD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600211E")]
				[Address(RVA = "0xFFAB18", Offset = "0xFFAB18", VA = "0xFFAB18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002119")]
			[Address(RVA = "0xFF4650", Offset = "0xFF4650", VA = "0xFF4650")]
			[DebuggerHidden]
			public <ExecuteGetOrientationEnumerator>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x600211A")]
			[Address(RVA = "0xFFA9F0", Offset = "0xFFA9F0", VA = "0xFFA9F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600211B")]
			[Address(RVA = "0xFFA9F4", Offset = "0xFFA9F4", VA = "0xFFA9F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600211D")]
			[Address(RVA = "0xFFAAD8", Offset = "0xFFAAD8", VA = "0xFFAAD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<UIView, UIViewBehaviorType> OnUIViewAction;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly List<UIView> VisibleViews;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool AutoHideAfterShow;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float AutoHideAfterShowDelay;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool AutoSelectButtonAfterShow;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public UIViewStartBehavior BehaviorAtStart;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 CustomStartAnchoredPosition;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool DeselectAnyButtonSelectedOnHide;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool DeselectAnyButtonSelectedOnShow;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool DisableCanvasWhenHidden;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool DisableGameObjectWhenHidden;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool DisableGraphicRaycasterWhenHidden;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UIViewBehavior HideBehavior;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Progressor HideProgressor;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UIViewBehavior LoopBehavior;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ProgressEvent OnInverseVisibilityChanged;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ProgressEvent OnVisibilityChanged;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject SelectedButton;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UIViewBehavior ShowBehavior;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Progressor ShowProgressor;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TargetOrientation TargetOrientation;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool UpdateHideProgressorOnShow;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool UpdateShowProgressorOnHide;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		public bool UseCustomStartAnchoredPosition;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string ViewCategory;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string ViewName;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Canvas m_canvas;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GraphicRaycaster m_graphicRaycaster;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_visibilityProgress;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private VisibilityState m_visibility;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine m_showCoroutine;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine m_hideCoroutine;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Coroutine m_autoHideCoroutine;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine m_disableButtonClickCoroutine;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private UIButton[] m_childUIButtons;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private UIView[] m_childUIViews;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool m_initialized;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private LayoutController m_layoutController;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool m_hasLayoutController;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		private bool m_controlledByLayoutGroup;

		[Token(Token = "0x17000461")]
		public static string DefaultViewCategory
		{
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0xFF166C", Offset = "0xFF166C", VA = "0xFF166C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000462")]
		public static string DefaultViewName
		{
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0xFF16AC", Offset = "0xFF16AC", VA = "0xFF16AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000463")]
		private static OrientationDetector OrientationDetector
		{
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0xFF16EC", Offset = "0xFF16EC", VA = "0xFF16EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000464")]
		public Canvas Canvas
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0xFF16F4", Offset = "0xFF16F4", VA = "0xFF16F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000465")]
		public CanvasGroup CanvasGroup
		{
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0xFF179C", Offset = "0xFF179C", VA = "0xFF179C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000466")]
		public Vector3 CurrentStartPosition
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0xFF1878", Offset = "0xFF1878", VA = "0xFF1878")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000467")]
		public GraphicRaycaster GraphicRaycaster
		{
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0xFF18B4", Offset = "0xFF18B4", VA = "0xFF18B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000468")]
		public float InverseVisibility
		{
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0xFF195C", Offset = "0xFF195C", VA = "0xFF195C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000469")]
		public bool IsHidden
		{
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0xFF196C", Offset = "0xFF196C", VA = "0xFF196C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046A")]
		public bool IsHiding
		{
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0xFF197C", Offset = "0xFF197C", VA = "0xFF197C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046B")]
		public bool IsShowing
		{
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0xFF198C", Offset = "0xFF198C", VA = "0xFF198C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046C")]
		public bool IsVisible
		{
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0xFF199C", Offset = "0xFF199C", VA = "0xFF199C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046D")]
		public VisibilityState Visibility
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0xFF19AC", Offset = "0xFF19AC", VA = "0xFF19AC")]
			get
			{
				return default(VisibilityState);
			}
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0xFF19B4", Offset = "0xFF19B4", VA = "0xFF19B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700046E")]
		public float VisibilityProgress
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0xFF1BA4", Offset = "0xFF1BA4", VA = "0xFF1BA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0xFF19D8", Offset = "0xFF19D8", VA = "0xFF19D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700046F")]
		private bool HasChildUIViews
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0xFF1BAC", Offset = "0xFF1BAC", VA = "0xFF1BAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000470")]
		private bool DebugComponent
		{
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0xFF1BCC", Offset = "0xFF1BCC", VA = "0xFF1BCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xFF1C04", Offset = "0xFF1C04", VA = "0xFF1C04", Slot = "4")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xFF1D48", Offset = "0xFF1D48", VA = "0xFF1D48", Slot = "5")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xFF1ED0", Offset = "0xFF1ED0", VA = "0xFF1ED0", Slot = "6")]
		public override void Start()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xFF1F28", Offset = "0xFF1F28", VA = "0xFF1F28")]
		private void CheckForLayoutController()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xFF23CC", Offset = "0xFF23CC", VA = "0xFF23CC", Slot = "7")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xFF25E4", Offset = "0xFF25E4", VA = "0xFF25E4", Slot = "8")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xFF2AF4", Offset = "0xFF2AF4", VA = "0xFF2AF4")]
		public void CancelAutoHide()
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xFF2B38", Offset = "0xFF2B38", VA = "0xFF2B38")]
		public void Hide(bool instantAction = false)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xFF2F04", Offset = "0xFF2F04", VA = "0xFF2F04")]
		public void Hide(float delay)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xFF2FB8", Offset = "0xFF2FB8", VA = "0xFF2FB8")]
		public void InstantHide()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xFF34C4", Offset = "0xFF34C4", VA = "0xFF34C4")]
		public void InstantShow()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xFF3288", Offset = "0xFF3288", VA = "0xFF3288")]
		public void NotifySystemOfTriggeredBehavior(UIViewBehaviorType behaviorType)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xFF3918", Offset = "0xFF3918", VA = "0xFF3918", Slot = "15")]
		public override void ResetAlpha()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xFF393C", Offset = "0xFF393C", VA = "0xFF393C", Slot = "12")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xFF39CC", Offset = "0xFF39CC", VA = "0xFF39CC")]
		public void SetVisibility(bool visible)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xFF3DE8", Offset = "0xFF3DE8", VA = "0xFF3DE8")]
		public void SetVisibility(bool visible, bool instantAction)
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xFF39E0", Offset = "0xFF39E0", VA = "0xFF39E0")]
		public void Show(bool instantAction = false)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xFF3E84", Offset = "0xFF3E84", VA = "0xFF3E84")]
		public void StartLoopAnimation()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xFF3168", Offset = "0xFF3168", VA = "0xFF3168")]
		public void StopLoopAnimation()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xFF4038", Offset = "0xFF4038", VA = "0xFF4038")]
		public void Toggle(bool instantAction = false)
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xFF31F8", Offset = "0xFF31F8", VA = "0xFF31F8")]
		private void HideDeselectButton()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xFF217C", Offset = "0xFF217C", VA = "0xFF217C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xFF1DE0", Offset = "0xFF1DE0", VA = "0xFF1DE0")]
		private void MoveToCustomStartPosition()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xFF1E70", Offset = "0xFF1E70", VA = "0xFF1E70")]
		private void LoadPresets()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xFF412C", Offset = "0xFF412C", VA = "0xFF412C")]
		private void OnOrientationChange(DetectedOrientation newDeviceOrientation)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xFF36F8", Offset = "0xFF36F8", VA = "0xFF36F8")]
		private void ShowSelectDeselectButton()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xFF2848", Offset = "0xFF2848", VA = "0xFF2848")]
		private void StopHide()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xFF29A0", Offset = "0xFF29A0", VA = "0xFF29A0")]
		private void StopShow()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xFF42E4", Offset = "0xFF42E4", VA = "0xFF42E4")]
		private void RemoveNullChildUIButtons()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xFF4050", Offset = "0xFF4050", VA = "0xFF4050")]
		private void UpdateChildUIButtonsStartValues()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xFF37FC", Offset = "0xFF37FC", VA = "0xFF37FC")]
		[IteratorStateMachine(typeof(<ShowViewNextFrame>d__105))]
		public static IEnumerator ShowViewNextFrame(string viewCategory, string viewName, bool instantAction = false)
		{
			return null;
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xFF4514", Offset = "0xFF4514", VA = "0xFF4514")]
		[IteratorStateMachine(typeof(<HideViewNextFrame>d__106))]
		public static IEnumerator HideViewNextFrame(string viewCategory, string viewName, bool instantAction = false)
		{
			return null;
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xFF3DFC", Offset = "0xFF3DFC", VA = "0xFF3DFC")]
		[IteratorStateMachine(typeof(<ShowEnumerator>d__107))]
		private IEnumerator ShowEnumerator(bool instantAction)
		{
			return null;
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xFF2E7C", Offset = "0xFF2E7C", VA = "0xFF2E7C")]
		[IteratorStateMachine(typeof(<HideEnumerator>d__108))]
		private IEnumerator HideEnumerator(bool instantAction)
		{
			return null;
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xFF2F34", Offset = "0xFF2F34", VA = "0xFF2F34")]
		[IteratorStateMachine(typeof(<HideWithDelayEnumerator>d__109))]
		private IEnumerator HideWithDelayEnumerator(float delay)
		{
			return null;
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xFF40B8", Offset = "0xFF40B8", VA = "0xFF40B8")]
		[IteratorStateMachine(typeof(<ExecuteGetOrientationEnumerator>d__110))]
		private IEnumerator ExecuteGetOrientationEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xFF4678", Offset = "0xFF4678", VA = "0xFF4678")]
		public static List<UIView> GetViews(string viewCategory, string viewName)
		{
			return null;
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xFF4904", Offset = "0xFF4904", VA = "0xFF4904")]
		public static void HideView(string viewName, bool instantAction = false)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xFF420C", Offset = "0xFF420C", VA = "0xFF420C")]
		public static void HideView(string viewCategory, string viewName, bool instantAction = false)
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xFF4FBC", Offset = "0xFF4FBC", VA = "0xFF4FBC")]
		public static void HideViewCategory(string viewCategory, bool instantAction = false)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xFF5604", Offset = "0xFF5604", VA = "0xFF5604")]
		public static bool IsViewVisible(string viewCategory, string viewName)
		{
			return default(bool);
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xFF57F0", Offset = "0xFF57F0", VA = "0xFF57F0")]
		public static void ShowView(string viewName, bool instantAction = false)
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xFF4278", Offset = "0xFF4278", VA = "0xFF4278")]
		public static void ShowView(string viewCategory, string viewName, bool instantAction = false)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xFF715C", Offset = "0xFF715C", VA = "0xFF715C")]
		public static void ShowViewCategory(string viewCategory, bool instantAction = false)
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xFF4994", Offset = "0xFF4994", VA = "0xFF4994")]
		private static void ExecuteHide(string viewCategory, string viewName, bool instantAction = false)
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xFF5020", Offset = "0xFF5020", VA = "0xFF5020")]
		private static void ExecuteHideCategory(string viewCategory, bool instantAction = false)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xFF5880", Offset = "0xFF5880", VA = "0xFF5880")]
		private static void ExecuteShow(string viewCategory, string viewName, bool instantAction)
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xFF71C0", Offset = "0xFF71C0", VA = "0xFF71C0")]
		private static void ExecuteShowCategory(string viewCategory, bool instantAction = false)
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xFF339C", Offset = "0xFF339C", VA = "0xFF339C")]
		private static void RemoveHiddenFromVisibleViews()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xFF8A3C", Offset = "0xFF8A3C", VA = "0xFF8A3C")]
		private static void RemoveNullsFromVisibleViews()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xFF8B98", Offset = "0xFF8B98", VA = "0xFF8B98")]
		public UIView()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000505")]
	public class UIViewBehavior
	{
		[Token(Token = "0x4002170")]
		public const bool DEFAULT_INSTANT_ANIMATION = false;

		[Token(Token = "0x4002171")]
		public const bool DEFAULT_LOAD_SELECTED_PRESET_AT_RUNTIME = false;

		[Token(Token = "0x4002172")]
		public const bool DEFAULT_AUTO_START_LOOP_ANIMATION = true;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIAnimation Animation;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool AutoStartLoopAnimation;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool LoadSelectedPresetAtRuntime;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool InstantAnimation;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIAction OnFinished;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIAction OnStart;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string PresetCategory;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string PresetName;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_progress;

		[Token(Token = "0x1700047D")]
		public static string DefaultPresetCategory
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0xFFAB20", Offset = "0xFFAB20", VA = "0xFFAB20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		public static string DefaultPresetName
		{
			[Token(Token = "0x6002120")]
			[Address(RVA = "0xFFAB60", Offset = "0xFFAB60", VA = "0xFFAB60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047F")]
		public bool HasAnimation
		{
			[Token(Token = "0x6002121")]
			[Address(RVA = "0xFFABA0", Offset = "0xFFABA0", VA = "0xFFABA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000480")]
		public bool HasAnimatorEvents
		{
			[Token(Token = "0x6002122")]
			[Address(RVA = "0xFFABD8", Offset = "0xFFABD8", VA = "0xFFABD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000481")]
		public bool HasEffect
		{
			[Token(Token = "0x6002123")]
			[Address(RVA = "0xFFAC18", Offset = "0xFFAC18", VA = "0xFFAC18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000482")]
		public bool HasGameEvents
		{
			[Token(Token = "0x6002124")]
			[Address(RVA = "0xFFAC58", Offset = "0xFFAC58", VA = "0xFFAC58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000483")]
		public bool HasSound
		{
			[Token(Token = "0x6002125")]
			[Address(RVA = "0xFFAC98", Offset = "0xFFAC98", VA = "0xFFAC98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000484")]
		public bool HasUnityEvents
		{
			[Token(Token = "0x6002126")]
			[Address(RVA = "0xFFACD8", Offset = "0xFFACD8", VA = "0xFFACD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xFF8D0C", Offset = "0xFF8D0C", VA = "0xFF8D0C")]
		public UIViewBehavior(AnimationType animationType)
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xFF4204", Offset = "0xFF4204", VA = "0xFF4204")]
		public void LoadPreset()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xFFAE68", Offset = "0xFFAE68", VA = "0xFFAE68")]
		public void LoadPreset(string presetCategory, string presetName)
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xFFAD18", Offset = "0xFFAD18", VA = "0xFFAD18")]
		public void Reset(AnimationType animationType)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000506")]
	public class UIViewEvent : UnityEvent<UIView>
	{
		[Token(Token = "0x600212B")]
		[Address(RVA = "0xFFAF40", Offset = "0xFFAF40", VA = "0xFFAF40")]
		public UIViewEvent()
		{
		}
	}
	[Token(Token = "0x2000507")]
	[AddComponentMenu("Doozy/Listeners/UIView Listener", 13)]
	[DefaultExecutionOrder(-100)]
	public class UIViewListener : MonoBehaviour
	{
		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugMode;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIViewEvent Event;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ListenForAllUIViews;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UIViewBehaviorType TriggerAction;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string ViewCategory;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string ViewName;

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xFFAF88", Offset = "0xFFAF88", VA = "0xFFAF88")]
		private void Reset()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xFFB098", Offset = "0xFFB098", VA = "0xFFB098")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xFFB1CC", Offset = "0xFFB1CC", VA = "0xFFB1CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xFFB09C", Offset = "0xFFB09C", VA = "0xFFB09C")]
		private void RegisterListener()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xFFB1D0", Offset = "0xFFB1D0", VA = "0xFFB1D0")]
		private void UnregisterListener()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xFFB300", Offset = "0xFFB300", VA = "0xFFB300")]
		private void OnMessage(UIViewMessage message)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xFFB380", Offset = "0xFFB380", VA = "0xFFB380")]
		private void InvokeEvent(UIViewMessage message)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xFFB6F4", Offset = "0xFFB6F4", VA = "0xFFB6F4")]
		private static UIViewListener AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xFFB6FC", Offset = "0xFFB6FC", VA = "0xFFB6FC")]
		private static UIViewListener AddToScene(GameObject parent, bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xFFB890", Offset = "0xFFB890", VA = "0xFFB890")]
		public UIViewListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000508")]
	public class UIViewMessage : Message
	{
		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIView View;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIViewBehaviorType Type;

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xFFB898", Offset = "0xFFB898", VA = "0xFFB898")]
		public UIViewMessage(UIView view)
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0xFF3898", Offset = "0xFF3898", VA = "0xFF3898")]
		public UIViewMessage(UIView view, UIViewBehaviorType type)
		{
		}
	}
}
namespace Doozy.Engine.UI.Internal
{
	[Serializable]
	[Token(Token = "0x2000509")]
	public class UIViewCategoryName
	{
		[Token(Token = "0x4002184")]
		private const string DEFAULT_CATEGORY = "General";

		[Token(Token = "0x4002185")]
		private const string DEFAULT_NAME = "Unnamed";

		[Token(Token = "0x4002186")]
		private const bool DEFAULT_INSTANT_ACTION = false;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Category;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool InstantAction;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xFFB914", Offset = "0xFFB914", VA = "0xFFB914")]
		public UIViewCategoryName()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xFFB9B0", Offset = "0xFFB9B0", VA = "0xFFB9B0")]
		public UIViewCategoryName(string viewCategory, string viewName)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xFFB9FC", Offset = "0xFFB9FC", VA = "0xFFB9FC")]
		public UIViewCategoryName(string viewCategory, string viewName, bool instantAction)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xFFBA5C", Offset = "0xFFBA5C", VA = "0xFFBA5C")]
		public UIViewCategoryName Copy()
		{
			return null;
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xFFB930", Offset = "0xFFB930", VA = "0xFFB930")]
		public void Reset()
		{
		}
	}
}
namespace Doozy.Engine.UI.Settings
{
	[Serializable]
	[Token(Token = "0x200050A")]
	public class UIButtonSettings : ScriptableObject
	{
		[Token(Token = "0x400218A")]
		public const string FILE_NAME = "UIButtonSettings";

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIButtonSettings s_instance;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NamesDatabase database;

		[Token(Token = "0x400218D")]
		public const SingleClickMode DEFAULT_SINGLE_CLICK_MODE = SingleClickMode.Instant;

		[Token(Token = "0x400218E")]
		public const bool DEFAULT_ALLOW_MULTIPLE_CLICKS = true;

		[Token(Token = "0x400218F")]
		public const bool DEFAULT_DESELECT_BUTTON_AFTER_CLICK = false;

		[Token(Token = "0x4002190")]
		public const float BETWEEN_CLICKS_DISABLE_INTERVAL = 0.2f;

		[Token(Token = "0x4002191")]
		public const float DEFAULT_BUTTON_HEIGHT = 30f;

		[Token(Token = "0x4002192")]
		public const float DEFAULT_BUTTON_WIDTH = 160f;

		[Token(Token = "0x4002193")]
		public const float DOUBLE_CLICK_REGISTER_INTERVAL = 0.2f;

		[Token(Token = "0x4002194")]
		public const float LONG_CLICK_REGISTER_INTERVAL = 0.5f;

		[Token(Token = "0x4002195")]
		public const string DEFAULT_RENAME_PREFIX = "Button - ";

		[Token(Token = "0x4002196")]
		public const string DEFAULT_RENAME_SUFFIX = "";

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputMode InputMode;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode KeyCode;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode KeyCodeAlt;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SingleClickMode ClickMode;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool AllowMultipleClicks;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool DeselectButtonAfterClick;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool EnableAlternateInputs;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool ShowNormalLoopAnimation;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool ShowOnButtonDeselected;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool ShowOnButtonSelected;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool ShowOnClick;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool ShowOnDoubleClick;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ShowOnLongClick;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool ShowOnRightClick;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool ShowOnPointerDown;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool ShowOnPointerEnter;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool ShowOnPointerExit;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool ShowOnPointerUp;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool ShowSelectedLoopAnimation;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float DisableButtonBetweenClicksInterval;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string RenamePrefix;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string RenameSuffix;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string VirtualButtonName;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string VirtualButtonNameAlt;

		[Token(Token = "0x17000485")]
		private static string ResourcesPath
		{
			[Token(Token = "0x600213D")]
			[Address(RVA = "0xFFBAEC", Offset = "0xFFBAEC", VA = "0xFFBAEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		public static UIButtonSettings Instance
		{
			[Token(Token = "0x600213E")]
			[Address(RVA = "0xFFBB44", Offset = "0xFFBB44", VA = "0xFFBB44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000487")]
		public static NamesDatabase Database
		{
			[Token(Token = "0x600213F")]
			[Address(RVA = "0xFFBC74", Offset = "0xFFBC74", VA = "0xFFBC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xFFBCF0", Offset = "0xFFBCF0", VA = "0xFFBCF0")]
		public static void UpdateDatabase()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xFFBD68", Offset = "0xFFBD68", VA = "0xFFBD68")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xFFBE54", Offset = "0xFFBE54", VA = "0xFFBE54")]
		public void Reset(bool saveAssets)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xFFBEE4", Offset = "0xFFBEE4", VA = "0xFFBEE4")]
		public void ResetComponent(UIButton button)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xFFBE7C", Offset = "0xFFBE7C", VA = "0xFFBE7C")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xFFC214", Offset = "0xFFC214", VA = "0xFFC214")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xFFC27C", Offset = "0xFFC27C", VA = "0xFFC27C")]
		public UIButtonSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050B")]
	public class UICanvasSettings : ScriptableObject
	{
		[Token(Token = "0x40021AF")]
		public const string FILE_NAME = "UICanvasSettings";

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UICanvasSettings s_instance;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NamesDatabase database;

		[Token(Token = "0x40021B2")]
		public const bool DONT_DESTROY_CANVAS_ON_LOAD_DEFAULT_VALUE = true;

		[Token(Token = "0x40021B3")]
		public const string RENAME_PREFIX_DEFAULT_VALUE = "Canvas - ";

		[Token(Token = "0x40021B4")]
		public const string RENAME_SUFFIX_DEFAULT_VALUE = "";

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DontDestroyCanvasOnLoad;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string RenamePrefix;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string RenameSuffix;

		[Token(Token = "0x17000488")]
		private static string ResourcesPath
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0xFFC384", Offset = "0xFFC384", VA = "0xFFC384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000489")]
		public static UICanvasSettings Instance
		{
			[Token(Token = "0x6002148")]
			[Address(RVA = "0xFFC3DC", Offset = "0xFFC3DC", VA = "0xFFC3DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048A")]
		public static NamesDatabase Database
		{
			[Token(Token = "0x6002149")]
			[Address(RVA = "0xFFC50C", Offset = "0xFFC50C", VA = "0xFFC50C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xFFC588", Offset = "0xFFC588", VA = "0xFFC588")]
		public static void UpdateDatabase()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xFFC6E0", Offset = "0xFFC6E0", VA = "0xFFC6E0")]
		private void Reset()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xFFC760", Offset = "0xFFC760", VA = "0xFFC760")]
		public void Reset(bool saveAssets)
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xFFC7F0", Offset = "0xFFC7F0", VA = "0xFFC7F0")]
		public void ResetComponent(UICanvas canvas)
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xFFC788", Offset = "0xFFC788", VA = "0xFFC788")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xFFC80C", Offset = "0xFFC80C", VA = "0xFFC80C")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xFFC874", Offset = "0xFFC874", VA = "0xFFC874")]
		public UICanvasSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050C")]
	public class UIDrawerSettings : ScriptableObject
	{
		[Token(Token = "0x40021B8")]
		public const string FILE_NAME = "UIDrawerSettings";

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIDrawerSettings s_instance;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NamesDatabase database;

		[Token(Token = "0x40021BB")]
		public const bool BLOCK_BACK_BUTTON_DEFAULT_VALUE = true;

		[Token(Token = "0x40021BC")]
		public const bool DETECT_GESTURES_DEFAULT_VALUE = true;

		[Token(Token = "0x40021BD")]
		public const bool HIDE_ON_BACK_BUTTON_DEFAULT_VALUE = true;

		[Token(Token = "0x40021BE")]
		public const bool USE_CUSTOM_START_ANCHORED_POSITION_DEFAULT_VALUE = true;

		[Token(Token = "0x40021BF")]
		public const float CLOSE_SPEED_DEFAULT_VALUE = 10f;

		[Token(Token = "0x40021C0")]
		public const float OPEN_SPEED_DEFAULT_VALUE = 10f;

		[Token(Token = "0x40021C1")]
		public const SimpleSwipe CLOSE_DIRECTION_DEFAULT_VALUE = SimpleSwipe.Left;

		[Token(Token = "0x40021C2")]
		public const string RENAME_PREFIX_DEFAULT_VALUE = "Drawer - ";

		[Token(Token = "0x40021C3")]
		public const string RENAME_SUFFIX_DEFAULT_VALUE = "";

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Vector3 CUSTOM_START_ANCHORED_POSITION_DEFAULT_VALUE;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimpleSwipe CloseDirection;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 CustomStartAnchoredPosition;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool BlockBackButton;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool HideOnBackButton;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool DetectGestures;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool UseCustomStartAnchoredPosition;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float CloseSpeed;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float OpenSpeed;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string RenamePrefix;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string RenameSuffix;

		[Token(Token = "0x1700048B")]
		private static string ResourcesPath
		{
			[Token(Token = "0x6002151")]
			[Address(RVA = "0xFFC900", Offset = "0xFFC900", VA = "0xFFC900")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		public static UIDrawerSettings Instance
		{
			[Token(Token = "0x6002152")]
			[Address(RVA = "0xFFC958", Offset = "0xFFC958", VA = "0xFFC958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		public static NamesDatabase Database
		{
			[Token(Token = "0x6002153")]
			[Address(RVA = "0xFFCABC", Offset = "0xFFCABC", VA = "0xFFCABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xFFCB84", Offset = "0xFFCB84", VA = "0xFFCB84")]
		public static void UpdateDatabase()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xFFCC18", Offset = "0xFFCC18", VA = "0xFFCC18")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xFFCCFC", Offset = "0xFFCCFC", VA = "0xFFCCFC")]
		public void Reset(bool saveAssets)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xFFCD8C", Offset = "0xFFCD8C", VA = "0xFFCD8C")]
		public void ResetComponent(UIDrawer drawer)
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xFFCD24", Offset = "0xFFCD24", VA = "0xFFCD24")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xFFCDE8", Offset = "0xFFCDE8", VA = "0xFFCDE8")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xFFCE50", Offset = "0xFFCE50", VA = "0xFFCE50")]
		public UIDrawerSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050D")]
	public class UIPopupSettings : ScriptableObject
	{
		[Token(Token = "0x40021CF")]
		public const string FILE_NAME = "UIPopupSettings";

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIPopupSettings s_instance;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UIPopupDatabase database;

		[Token(Token = "0x40021D2")]
		public const bool ADD_TO_POPUP_QUEUE_DEFAULT_VALUE = true;

		[Token(Token = "0x40021D3")]
		public const bool AUTO_HIDE_AFTER_SHOW_DEFAULT_VALUE = false;

		[Token(Token = "0x40021D4")]
		public const bool AUTO_SELECT_BUTTON_AFTER_SHOW_DEFAULT_VALUE = false;

		[Token(Token = "0x40021D5")]
		public const bool BLOCK_BACK_BUTTON_DEFAULT_VALUE = true;

		[Token(Token = "0x40021D6")]
		public const bool CUSTOM_CANVAS_NAME_DEFAULT_VALUE = false;

		[Token(Token = "0x40021D7")]
		public const bool DESTROY_AFTER_HIDE_DEFAULT_VALUE = true;

		[Token(Token = "0x40021D8")]
		public const bool HIDE_ON_ANY_BUTTON_DEFAULT_VALUE = false;

		[Token(Token = "0x40021D9")]
		public const bool HIDE_ON_BACK_BUTTON_DEFAULT_VALUE = true;

		[Token(Token = "0x40021DA")]
		public const bool HIDE_ON_CLICK_ANYWHERE_DEFAULT_VALUE = false;

		[Token(Token = "0x40021DB")]
		public const bool HIDE_ON_CLICK_CONTAINER_DEFAULT_VALUE = true;

		[Token(Token = "0x40021DC")]
		public const bool HIDE_ON_CLICK_OVERLAY_DEFAULT_VALUE = true;

		[Token(Token = "0x40021DD")]
		public const bool UPDATE_HIDE_PROGRESSOR_ON_SHOW_DEFAULT_VALUE = false;

		[Token(Token = "0x40021DE")]
		public const bool UPDATE_SHOW_PROGRESSOR_ON_HIDE_DEFAULT_VALUE = false;

		[Token(Token = "0x40021DF")]
		public const bool USE_OVERLAY_DEFAULT_VALUE = true;

		[Token(Token = "0x40021E0")]
		public const float AUTO_HIDE_AFTER_SHOW_DELAY_DEFAULT_VALUE = 3f;

		[Token(Token = "0x40021E1")]
		public const float DISABLE_WHEN_HIDDEN_TIME_BUFFER = 0.05f;

		[Token(Token = "0x40021E2")]
		public const PopupDisplayOn DISPLAY_ON_DEFAULT_VALUE = PopupDisplayOn.PopupCanvas;

		[Token(Token = "0x40021E3")]
		public const VisibilityState VISIBILITY_DEFAULT_VALUE = VisibilityState.Visible;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopupDisplayOn DisplayTarget;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool AddToPopupQueue;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool AutoHideAfterShow;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool AutoSelectButtonAfterShow;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool BlockBackButton;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CustomCanvasName;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool DestroyAfterHide;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool HideOnAnyButton;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool HideOnBackButton;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool HideOnClickAnywhere;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool HideOnClickContainer;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool HideOnClickOverlay;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool UpdateHideProgressorOnShow;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool UpdateShowProgressorOnHide;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool UseOverlay;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float AutoHideAfterShowDelay;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string CanvasName;

		[Token(Token = "0x1700048E")]
		private static string ResourcesPath
		{
			[Token(Token = "0x600215C")]
			[Address(RVA = "0xFFCFA8", Offset = "0xFFCFA8", VA = "0xFFCFA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		public static UIPopupSettings Instance
		{
			[Token(Token = "0x600215D")]
			[Address(RVA = "0xFFD000", Offset = "0xFFD000", VA = "0xFFD000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		public static UIPopupDatabase Database
		{
			[Token(Token = "0x600215E")]
			[Address(RVA = "0xFFD130", Offset = "0xFFD130", VA = "0xFFD130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xFFD1AC", Offset = "0xFFD1AC", VA = "0xFFD1AC")]
		public static void UpdateDatabase()
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xFFD268", Offset = "0xFFD268", VA = "0xFFD268")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xFFD2FC", Offset = "0xFFD2FC", VA = "0xFFD2FC")]
		public void Reset(bool saveAssets)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xFFD38C", Offset = "0xFFD38C", VA = "0xFFD38C")]
		public void ResetComponent(UIPopup popup)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xFFD324", Offset = "0xFFD324", VA = "0xFFD324")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xFFD658", Offset = "0xFFD658", VA = "0xFFD658")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xFFD6C0", Offset = "0xFFD6C0", VA = "0xFFD6C0")]
		public UIPopupSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050E")]
	public class UIToggleSettings : ScriptableObject
	{
		[Token(Token = "0x40021F5")]
		public const string FILE_NAME = "UIToggleSettings";

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIToggleSettings s_instance;

		[Token(Token = "0x40021F7")]
		public const bool ALLOW_MULTIPLE_CLICKS_DEFAULT_VALUE = true;

		[Token(Token = "0x40021F8")]
		public const bool DESELECT_BUTTON_AFTER_CLICK_DEFAULT_VALUE = false;

		[Token(Token = "0x40021F9")]
		public const float BETWEEN_CLICKS_DISABLE_INTERVAL_DEFAULT_VALUE = 0.2f;

		[Token(Token = "0x40021FA")]
		public const float DEFAULT_BUTTON_HEIGHT = 20f;

		[Token(Token = "0x40021FB")]
		public const float DEFAULT_BUTTON_WIDTH = 160f;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputMode InputMode;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode KeyCode;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode KeyCodeAlt;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool AllowMultipleClicks;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool DeselectButtonAfterClick;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool EnableAlternateInputs;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool ShowOnButtonDeselected;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ShowOnButtonSelected;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool ShowOnClick;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool ShowOnPointerEnter;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool ShowOnPointerExit;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DisableButtonBetweenClicksInterval;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string VirtualButtonName;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string VirtualButtonNameAlt;

		[Token(Token = "0x17000491")]
		private static string ResourcesPath
		{
			[Token(Token = "0x6002166")]
			[Address(RVA = "0xFFD758", Offset = "0xFFD758", VA = "0xFFD758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		public static UIToggleSettings Instance
		{
			[Token(Token = "0x6002167")]
			[Address(RVA = "0xFFD7B0", Offset = "0xFFD7B0", VA = "0xFFD7B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xFFD8E0", Offset = "0xFFD8E0", VA = "0xFFD8E0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xFFD984", Offset = "0xFFD984", VA = "0xFFD984")]
		public void Reset(bool saveAssets)
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xFFDA14", Offset = "0xFFDA14", VA = "0xFFDA14")]
		public void ResetComponent(UIToggle toggle)
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xFFD9AC", Offset = "0xFFD9AC", VA = "0xFFD9AC")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xFFDC04", Offset = "0xFFDC04", VA = "0xFFDC04")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xFFDC6C", Offset = "0xFFDC6C", VA = "0xFFDC6C")]
		public UIToggleSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050F")]
	public class UIViewSettings : ScriptableObject
	{
		[Token(Token = "0x400220A")]
		public const string FILE_NAME = "UIViewSettings";

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIViewSettings s_instance;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NamesDatabase database;

		[Token(Token = "0x400220D")]
		public const TargetOrientation TARGET_ORIENTATION_DEFAULT_VALUE = TargetOrientation.Any;

		[Token(Token = "0x400220E")]
		public const UIViewStartBehavior BEHAVIOUR_AT_START_DEFAULT_VALUE = UIViewStartBehavior.DoNothing;

		[Token(Token = "0x400220F")]
		public const bool DEFAULT_AUTO_HIDE_AFTER_SHOW = false;

		[Token(Token = "0x4002210")]
		public const bool DEFAULT_AUTO_SELECT_BUTTON_AFTER_SHOW = false;

		[Token(Token = "0x4002211")]
		public const bool DESELECT_ANY_BUTTON_SELECTED_ON_HIDE_DEFAULT_VALUE = false;

		[Token(Token = "0x4002212")]
		public const bool DESELECT_ANY_BUTTON_SELECTED_ON_SHOW_DEFAULT_VALUE = false;

		[Token(Token = "0x4002213")]
		public const bool DISABLE_CANVAS_WHEN_HIDDEN_DEFAULT_VALUE = true;

		[Token(Token = "0x4002214")]
		public const bool DISABLE_GAME_OBJECT_WHEN_HIDDEN_DEFAULT_VALUE = true;

		[Token(Token = "0x4002215")]
		public const bool DISABLE_GRAPHIC_RAYCASTER_WHEN_HIDDEN_DEFAULT_VALUE = true;

		[Token(Token = "0x4002216")]
		public const bool USE_CUSTOM_START_ANCHORED_POSITION_DEFAULT_VALUE = true;

		[Token(Token = "0x4002217")]
		public const float DEFAULT_AUTO_HIDE_AFTER_SHOW_DELAY = 3f;

		[Token(Token = "0x4002218")]
		public const float DISABLE_WHEN_HIDDEN_TIME_BUFFER = 0.05f;

		[Token(Token = "0x4002219")]
		public const string RENAME_PREFIX_DEFAULT_VALUE = "View - ";

		[Token(Token = "0x400221A")]
		public const string RENAME_SUFFIX_DEFAULT_VALUE = "";

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Vector3 CUSTOM_START_ANCHORED_POSITION_DEFAULT_VALUE;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetOrientation TargetOrientation;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UIViewStartBehavior BehaviorAtStart;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 CustomStartAnchoredPosition;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool DeselectAnyButtonSelectedOnHide;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool DeselectAnyButtonSelectedOnShow;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool DisableCanvasWhenHidden;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool DisableGameObjectWhenHidden;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool DisableGraphicRaycasterWhenHidden;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool UseCustomStartAnchoredPosition;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string RenamePrefix;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string RenameSuffix;

		[Token(Token = "0x17000493")]
		private static string ResourcesPath
		{
			[Token(Token = "0x600216E")]
			[Address(RVA = "0xFFDD24", Offset = "0xFFDD24", VA = "0xFFDD24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		public static UIViewSettings Instance
		{
			[Token(Token = "0x600216F")]
			[Address(RVA = "0xFFDD7C", Offset = "0xFFDD7C", VA = "0xFFDD7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000495")]
		public static NamesDatabase Database
		{
			[Token(Token = "0x6002170")]
			[Address(RVA = "0xFFDEE0", Offset = "0xFFDEE0", VA = "0xFFDEE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xFFDFA8", Offset = "0xFFDFA8", VA = "0xFFDFA8")]
		public static void UpdateDatabase()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xFFE03C", Offset = "0xFFE03C", VA = "0xFFE03C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xFFE110", Offset = "0xFFE110", VA = "0xFFE110")]
		public void Reset(bool saveAssets)
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xFFE1A0", Offset = "0xFFE1A0", VA = "0xFFE1A0")]
		public void ResetComponent(UIView view)
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xFFE138", Offset = "0xFFE138", VA = "0xFFE138")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xFFE2D8", Offset = "0xFFE2D8", VA = "0xFFE2D8")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xFFE340", Offset = "0xFFE340", VA = "0xFFE340")]
		public UIViewSettings()
		{
		}
	}
}
namespace Doozy.Engine.UI.Nodes
{
	[Token(Token = "0x2000510")]
	[NodeMenu("Scene Management/Activate Loaded Scenes", 50, false, false)]
	public class ActivateLoadedScenesNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x4002227")]
		private const float NODE_WIDTH = 236f;

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xFFE448", Offset = "0xFFE448", VA = "0xFFE448", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xFFE498", Offset = "0xFFE498", VA = "0xFFE498", Slot = "11")]
		public override float GetDefaultNodeWidth()
		{
			return default(float);
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xFFE4A4", Offset = "0xFFE4A4", VA = "0xFFE4A4", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xFFE56C", Offset = "0xFFE56C", VA = "0xFFE56C", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xFFE660", Offset = "0xFFE660", VA = "0xFFE660")]
		public ActivateLoadedScenesNode()
		{
		}
	}
	[Token(Token = "0x2000511")]
	[NodeMenu("System/Application Quit", 50, false, false)]
	public class ApplicationQuitNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x4002228")]
		private const float NODE_WIDTH = 180f;

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xFFE668", Offset = "0xFFE668", VA = "0xFFE668", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xFFE6B8", Offset = "0xFFE6B8", VA = "0xFFE6B8", Slot = "11")]
		public override float GetDefaultNodeWidth()
		{
			return default(float);
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xFFE6C4", Offset = "0xFFE6C4", VA = "0xFFE6C4", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xFFE764", Offset = "0xFFE764", VA = "0xFFE764", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xFFE808", Offset = "0xFFE808", VA = "0xFFE808")]
		public ApplicationQuitNode()
		{
		}
	}
	[Token(Token = "0x2000512")]
	[NodeMenu("Navigation/Back Button", 50, false, false)]
	public class BackButtonNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x2000513")]
		public enum BackButtonState
		{
			[Token(Token = "0x400222B")]
			Disable,
			[Token(Token = "0x400222C")]
			Enable,
			[Token(Token = "0x400222D")]
			EnableByForce
		}

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public BackButtonState BackButtonAction;

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xFFE810", Offset = "0xFFE810", VA = "0xFFE810", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xFFE854", Offset = "0xFFE854", VA = "0xFFE854", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xFFE91C", Offset = "0xFFE91C", VA = "0xFFE91C", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xFFE9B4", Offset = "0xFFE9B4", VA = "0xFFE9B4", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xFFEAA4", Offset = "0xFFEAA4", VA = "0xFFEAA4")]
		private void ExecuteActions()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xFFEB68", Offset = "0xFFEB68", VA = "0xFFEB68")]
		public BackButtonNode()
		{
		}
	}
	[Token(Token = "0x2000514")]
	[NodeMenu("Game Event", 1, false, false)]
	public class GameEventNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string GameEvent;

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xFFEB78", Offset = "0xFFEB78", VA = "0xFFEB78", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xFFEBBC", Offset = "0xFFEBBC", VA = "0xFFEBBC", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xFFEC84", Offset = "0xFFEC84", VA = "0xFFEC84", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xFFED20", Offset = "0xFFED20", VA = "0xFFED20", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xFFEE44", Offset = "0xFFEE44", VA = "0xFFEE44", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xFFEE10", Offset = "0xFFEE10", VA = "0xFFEE10")]
		private void SendGameEvent()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xFFEE4C", Offset = "0xFFEE4C", VA = "0xFFEE4C")]
		public GameEventNode()
		{
		}
	}
	[Token(Token = "0x2000515")]
	[NodeMenu("Scene Management/Load Scene", 50, false, false)]
	public class LoadSceneNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public GetSceneBy GetSceneBy;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LoadSceneMode LoadSceneMode;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool AllowSceneActivation;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float SceneActivationDelay;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int SceneBuildIndex;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string SceneName;

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xFFEE54", Offset = "0xFFEE54", VA = "0xFFEE54", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xFFEE98", Offset = "0xFFEE98", VA = "0xFFEE98", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xFFEF60", Offset = "0xFFEF60", VA = "0xFFEF60", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xFFF014", Offset = "0xFFF014", VA = "0xFFF014", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xFFF104", Offset = "0xFFF104", VA = "0xFFF104")]
		private void LoadScene()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xFFF1DC", Offset = "0xFFF1DC", VA = "0xFFF1DC", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xFFF1E4", Offset = "0xFFF1E4", VA = "0xFFF1E4")]
		public LoadSceneNode()
		{
		}
	}
	[Token(Token = "0x2000516")]
	[NodeMenu("Navigation/Portal", 50, false, false)]
	public class PortalNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x2000517")]
		public enum ListenerType
		{
			[Token(Token = "0x4002249")]
			GameEvent,
			[Token(Token = "0x400224A")]
			UIButton,
			[Token(Token = "0x400224B")]
			UIView,
			[Token(Token = "0x400224C")]
			UIDrawer
		}

		[Token(Token = "0x4002235")]
		private const ListenerType DEFAULT_LISTENER_TYPE = ListenerType.GameEvent;

		[Token(Token = "0x4002236")]
		private const bool DEFAULT_ANY_VALUE = false;

		[Token(Token = "0x4002237")]
		private const string DEFAULT_GAME_EVENT = "";

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string m_gameEvent;

		[NonSerialized]
		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Graph m_portalGraph;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ListenerType ListenFor;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool AnyValue;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UIViewBehaviorType UIViewTriggerAction;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string ViewCategory;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string ViewName;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UIButtonBehaviorType UIButtonTriggerAction;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string ButtonCategory;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string ButtonName;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UIDrawerBehaviorType UIDrawerTriggerAction;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string DrawerName;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool CustomDrawerName;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool SwitchBackMode;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Doozy.Engine.Nody.Models.Node m_sourceNode;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_activatedByEvent;

		[Token(Token = "0x17000496")]
		public string GameEventToListenFor
		{
			[Token(Token = "0x6002197")]
			[Address(RVA = "0xFFF250", Offset = "0xFFF250", VA = "0xFFF250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000497")]
		public Graph PortalGraph
		{
			[Token(Token = "0x6002198")]
			[Address(RVA = "0xFFF258", Offset = "0xFFF258", VA = "0xFFF258")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002199")]
			[Address(RVA = "0xFFF260", Offset = "0xFFF260", VA = "0xFFF260")]
			set
			{
			}
		}

		[Token(Token = "0x17000498")]
		public bool HasSource
		{
			[Token(Token = "0x600219A")]
			[Address(RVA = "0xFFF268", Offset = "0xFFF268", VA = "0xFFF268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000499")]
		public Doozy.Engine.Nody.Models.Node Source
		{
			[Token(Token = "0x600219B")]
			[Address(RVA = "0xFFF2C8", Offset = "0xFFF2C8", VA = "0xFFF2C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		public string WaitForInfoTitle
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0xFFF2D0", Offset = "0xFFF2D0", VA = "0xFFF2D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049B")]
		public string WaitForInfoDescription
		{
			[Token(Token = "0x600219D")]
			[Address(RVA = "0xFFF430", Offset = "0xFFF430", VA = "0xFFF430")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xFFF560", Offset = "0xFFF560", VA = "0xFFF560", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xFFF5A4", Offset = "0xFFF5A4", VA = "0xFFF5A4", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xFFF644", Offset = "0xFFF644", VA = "0xFFF644")]
		private void AddListeners()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xFFF87C", Offset = "0xFFF87C", VA = "0xFFF87C")]
		private void RemoveListeners()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xFFFAB4", Offset = "0xFFFAB4", VA = "0xFFFAB4", Slot = "5")]
		public override void Activate(Graph portalGraph)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xFFFB00", Offset = "0xFFFB00", VA = "0xFFFB00", Slot = "9")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xFFFB2C", Offset = "0xFFFB2C", VA = "0xFFFB2C")]
		private void UpdateSourceNode(Doozy.Engine.Nody.Models.Node node)
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xFFFB40", Offset = "0xFFFB40", VA = "0xFFFB40")]
		private void OnGameEventMessage(GameEventMessage message)
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xFFFC0C", Offset = "0xFFFC0C", VA = "0xFFFC0C")]
		private void OnUIViewMessage(UIViewMessage message)
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x10000A4", Offset = "0x10000A4", VA = "0x10000A4")]
		private void OnUIButtonMessage(UIButtonMessage message)
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x10004F4", Offset = "0x10004F4", VA = "0x10004F4")]
		private void OnUIDrawerMessage(UIDrawerMessage message)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1000840", Offset = "0x1000840", VA = "0x1000840", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1000968", Offset = "0x1000968", VA = "0x1000968", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x1000ACC", Offset = "0x1000ACC", VA = "0x1000ACC", Slot = "15")]
		public override void OnExit(Doozy.Engine.Nody.Models.Node nextActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x1000AE8", Offset = "0x1000AE8", VA = "0x1000AE8", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x1000AF0", Offset = "0x1000AF0", VA = "0x1000AF0")]
		public PortalNode()
		{
		}
	}
	[Token(Token = "0x2000518")]
	[NodeMenu("System/Random", 50, false, false)]
	public class RandomNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly List<int> m_selectChances;

		[Token(Token = "0x1700049C")]
		public int MaxChance
		{
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x1000C40", Offset = "0x1000C40", VA = "0x1000C40")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x1000C48", Offset = "0x1000C48", VA = "0x1000C48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700049D")]
		public int ConnectedOutputSockets
		{
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x1000C50", Offset = "0x1000C50", VA = "0x1000C50")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x1000C58", Offset = "0x1000C58", VA = "0x1000C58")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x1000C60", Offset = "0x1000C60", VA = "0x1000C60", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x1000CB4", Offset = "0x1000CB4", VA = "0x1000CB4", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x1000DB8", Offset = "0x1000DB8", VA = "0x1000DB8", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x1001210", Offset = "0x1001210", VA = "0x1001210")]
		public void UpdateMaxChance()
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1001444", Offset = "0x1001444", VA = "0x1001444")]
		public void UpdateConnectedOutputSockets()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1000E58", Offset = "0x1000E58", VA = "0x1000E58")]
		private void SelectRandomOutputSocket()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x10015C4", Offset = "0x10015C4", VA = "0x10015C4")]
		public RandomNode()
		{
		}
	}
	[Token(Token = "0x2000519")]
	[NodeMenu("Sound", 1, false, false)]
	public class SoundNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x200051A")]
		public enum SoundActions
		{
			[Token(Token = "0x4002253")]
			Play,
			[Token(Token = "0x4002254")]
			Stop,
			[Token(Token = "0x4002255")]
			Pause,
			[Token(Token = "0x4002256")]
			Unpause,
			[Token(Token = "0x4002257")]
			Mute,
			[Token(Token = "0x4002258")]
			Unmute
		}

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoundyData SoundData;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SoundActions SoundAction;

		[Token(Token = "0x1700049E")]
		public bool HasSound
		{
			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x100164C", Offset = "0x100164C", VA = "0x100164C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1001728", Offset = "0x1001728", VA = "0x1001728", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x100177C", Offset = "0x100177C", VA = "0x100177C", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1001844", Offset = "0x1001844", VA = "0x1001844", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x100198C", Offset = "0x100198C", VA = "0x100198C", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x1001B28", Offset = "0x1001B28", VA = "0x1001B28", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x1001B30", Offset = "0x1001B30", VA = "0x1001B30")]
		public SoundNode()
		{
		}
	}
	[Token(Token = "0x200051B")]
	[NodeMenu("Theme", 50, false, false)]
	public class ThemeNode : Doozy.Engine.Nody.Models.Node, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Guid ThemeId;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Guid VariantId;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private byte[] ThemeIdSerializedGuid;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private byte[] VariantIdSerializedGuid;

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x1001B38", Offset = "0x1001B38", VA = "0x1001B38", Slot = "22")]
		public virtual void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x1001B84", Offset = "0x1001B84", VA = "0x1001B84", Slot = "23")]
		public virtual void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x1001BC0", Offset = "0x1001BC0", VA = "0x1001BC0", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x1001C10", Offset = "0x1001C10", VA = "0x1001C10", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1001CD8", Offset = "0x1001CD8", VA = "0x1001CD8", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x1001D94", Offset = "0x1001D94", VA = "0x1001D94", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x1001E84", Offset = "0x1001E84", VA = "0x1001E84")]
		private void ExecuteActions()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x1001F00", Offset = "0x1001F00", VA = "0x1001F00")]
		public ThemeNode()
		{
		}
	}
	[Token(Token = "0x200051C")]
	[NodeMenu("System/TimeScale", 50, false, false)]
	public class TimeScaleNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x400225D")]
		private const float DEFAULT_TARGET_VALUE = 1f;

		[Token(Token = "0x400225E")]
		private const bool DEFAULT_ANIMATE_VALUE = false;

		[Token(Token = "0x400225F")]
		private const float DEFAULT_ANIMATION_DURATION = 1f;

		[Token(Token = "0x4002260")]
		private const Ease DEFAULT_ANIMATION_EASE = Ease.Linear;

		[Token(Token = "0x4002261")]
		private const bool DEFAULT_WAIT_FOR_ANIMATION_TO_FINISH = false;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float TargetValue;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool AnimateValue;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float AnimationDuration;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Ease AnimationEase;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool WaitForAnimationToFinish;

		[NonSerialized]
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Sequence m_animationSequence;

		[NonSerialized]
		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_timerIsActive;

		[NonSerialized]
		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private double m_timerStart;

		[NonSerialized]
		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_timeDuration;

		[Token(Token = "0x1700049F")]
		private string GetAnimationId
		{
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x1001F64", Offset = "0x1001F64", VA = "0x1001F64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		public float TimerProgress
		{
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x1001FA4", Offset = "0x1001FA4", VA = "0x1001FA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x1001FF8", Offset = "0x1001FF8", VA = "0x1001FF8", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x100204C", Offset = "0x100204C", VA = "0x100204C", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x1002114", Offset = "0x1002114", VA = "0x1002114", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x10021C4", Offset = "0x10021C4", VA = "0x10021C4", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x10024CC", Offset = "0x10024CC", VA = "0x10024CC", Slot = "18")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x1002528", Offset = "0x1002528", VA = "0x1002528")]
		private void ContinueToNextNode()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x10022C4", Offset = "0x10022C4", VA = "0x10022C4")]
		private void ExecuteActions()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x1002804", Offset = "0x1002804", VA = "0x1002804")]
		private void ActivateTimer()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x1002840", Offset = "0x1002840", VA = "0x1002840")]
		private void StopTimer()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x1002594", Offset = "0x1002594", VA = "0x1002594")]
		private void KillAnimation(bool complete = false)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x10025DC", Offset = "0x10025DC", VA = "0x10025DC")]
		private static Tween GetAnimationTween(float targetValue, float duration, Ease ease, string id)
		{
			return null;
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x100284C", Offset = "0x100284C", VA = "0x100284C")]
		public TimeScaleNode()
		{
		}
	}
	[Token(Token = "0x200051E")]
	[NodeMenu("Navigation/UIDrawer", 50, false, false)]
	public class UIDrawerNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x200051F")]
		public enum DrawerAction
		{
			[Token(Token = "0x4002272")]
			Open,
			[Token(Token = "0x4002273")]
			Close,
			[Token(Token = "0x4002274")]
			Toggle
		}

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string DrawerName;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool CustomDrawerName;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public DrawerAction Action;

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x10028F0", Offset = "0x10028F0", VA = "0x10028F0", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x1002944", Offset = "0x1002944", VA = "0x1002944", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x1002A0C", Offset = "0x1002A0C", VA = "0x1002A0C", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x1002ABC", Offset = "0x1002ABC", VA = "0x1002ABC", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x1002BAC", Offset = "0x1002BAC", VA = "0x1002BAC")]
		private void ExecuteActions()
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x1002CA0", Offset = "0x1002CA0", VA = "0x1002CA0", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x1002CA8", Offset = "0x1002CA8", VA = "0x1002CA8")]
		public UIDrawerNode()
		{
		}
	}
	[Token(Token = "0x2000520")]
	[NodeMenu("UINode", 0, false, false)]
	public class UINode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x2000521")]
		public enum NodeState
		{
			[Token(Token = "0x400227E")]
			OnEnter,
			[Token(Token = "0x400227F")]
			OnExit
		}

		[Token(Token = "0x2000522")]
		public enum ViewAction
		{
			[Token(Token = "0x4002281")]
			ShowView,
			[Token(Token = "0x4002282")]
			HideView
		}

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private List<UIViewCategoryName> m_onEnterShowViews;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private List<UIViewCategoryName> m_onEnterHideViews;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private List<UIViewCategoryName> m_onExitShowViews;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private List<UIViewCategoryName> m_onExitHideViews;

		[NonSerialized]
		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_timerIsActive;

		[NonSerialized]
		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double m_timerStart;

		[NonSerialized]
		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_timeDelay;

		[NonSerialized]
		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Socket m_activeSocketAfterTimeDelay;

		[Token(Token = "0x170004A1")]
		public List<UIViewCategoryName> OnEnterShowViews
		{
			[Token(Token = "0x60021E1")]
			[Address(RVA = "0x1002D18", Offset = "0x1002D18", VA = "0x1002D18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		public List<UIViewCategoryName> OnEnterHideViews
		{
			[Token(Token = "0x60021E2")]
			[Address(RVA = "0x1002D20", Offset = "0x1002D20", VA = "0x1002D20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A3")]
		public List<UIViewCategoryName> OnExitShowViews
		{
			[Token(Token = "0x60021E3")]
			[Address(RVA = "0x1002D28", Offset = "0x1002D28", VA = "0x1002D28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		public List<UIViewCategoryName> OnExitHideViews
		{
			[Token(Token = "0x60021E4")]
			[Address(RVA = "0x1002D30", Offset = "0x1002D30", VA = "0x1002D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A5")]
		public float TimerProgress
		{
			[Token(Token = "0x60021E5")]
			[Address(RVA = "0x1002D38", Offset = "0x1002D38", VA = "0x1002D38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x1002D8C", Offset = "0x1002D8C", VA = "0x1002D8C", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x1002E78", Offset = "0x1002E78", VA = "0x1002E78")]
		private List<UIViewCategoryName> UIViewCategoryNameListCopy(List<UIViewCategoryName> original)
		{
			return null;
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x1003084", Offset = "0x1003084", VA = "0x1003084", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x10030E0", Offset = "0x10030E0", VA = "0x10030E0", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x100335C", Offset = "0x100335C", VA = "0x100335C")]
		public void SortShowViewsList()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x1003670", Offset = "0x1003670", VA = "0x1003670")]
		public void SortHideViewsList()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x100344C", Offset = "0x100344C", VA = "0x100344C")]
		private static List<UIViewCategoryName> SortViewsList(IEnumerable<UIViewCategoryName> list)
		{
			return null;
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x1003760", Offset = "0x1003760", VA = "0x1003760")]
		private void AddListeners()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x1003888", Offset = "0x1003888", VA = "0x1003888")]
		private void RemoveListeners()
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x10039B0", Offset = "0x10039B0", VA = "0x10039B0")]
		private void OnButtonMessage(UIButtonMessage message)
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x1003D80", Offset = "0x1003D80", VA = "0x1003D80")]
		private void OnGameEventMessage(GameEventMessage message)
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x1003FCC", Offset = "0x1003FCC", VA = "0x1003FCC")]
		private void LookForTimeDelay()
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x10041DC", Offset = "0x10041DC", VA = "0x10041DC")]
		private void ActivateTimer(float timeDelay, Socket socket)
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x1003CB0", Offset = "0x1003CB0", VA = "0x1003CB0")]
		private void ActivateOutputSocketInputNode(Socket socket)
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x1004234", Offset = "0x1004234", VA = "0x1004234", Slot = "5")]
		public override void Activate(Graph portalGraph)
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x1004260", Offset = "0x1004260", VA = "0x1004260", Slot = "9")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x100428C", Offset = "0x100428C", VA = "0x100428C", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x100470C", Offset = "0x100470C", VA = "0x100470C", Slot = "18")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1004764", Offset = "0x1004764", VA = "0x1004764", Slot = "15")]
		public override void OnExit(Doozy.Engine.Nody.Models.Node nextActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x10042D4", Offset = "0x10042D4", VA = "0x10042D4")]
		public void ShowViews(List<UIViewCategoryName> views)
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x10044F0", Offset = "0x10044F0", VA = "0x10044F0")]
		public void HideViews(List<UIViewCategoryName> views)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x10047A0", Offset = "0x10047A0", VA = "0x10047A0")]
		public void AddView(UIViewCategoryName view, NodeState nodeState, ViewAction viewAction, bool saveAssets = false)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x1004928", Offset = "0x1004928", VA = "0x1004928")]
		public UINode()
		{
		}
	}
	[Token(Token = "0x2000524")]
	[NodeMenu("Scene Management/Unload Scene", 50, false, false)]
	public class UnloadSceneNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public GetSceneBy GetSceneBy;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int SceneBuildIndex;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string SceneName;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool WaitForSceneToUnload;

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x10049D8", Offset = "0x10049D8", VA = "0x10049D8", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x1004A1C", Offset = "0x1004A1C", VA = "0x1004A1C", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x1004AE4", Offset = "0x1004AE4", VA = "0x1004AE4", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1004B94", Offset = "0x1004B94", VA = "0x1004B94", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1004D84", Offset = "0x1004D84", VA = "0x1004D84", Slot = "15")]
		public override void OnExit(Doozy.Engine.Nody.Models.Node nextActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1004D14", Offset = "0x1004D14", VA = "0x1004D14")]
		private void UnloadScene()
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x1004E6C", Offset = "0x1004E6C", VA = "0x1004E6C")]
		private void SceneUnloaded(Scene unloadedScene)
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x1004F90", Offset = "0x1004F90", VA = "0x1004F90", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1004F98", Offset = "0x1004F98", VA = "0x1004F98")]
		public UnloadSceneNode()
		{
		}
	}
	[Token(Token = "0x2000525")]
	[NodeMenu("System/Wait", 50, false, false)]
	public class WaitNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x2000526")]
		public enum WaitType
		{
			[Token(Token = "0x40022AB")]
			Time,
			[Token(Token = "0x40022AC")]
			GameEvent,
			[Token(Token = "0x40022AD")]
			SceneLoad,
			[Token(Token = "0x40022AE")]
			SceneUnload,
			[Token(Token = "0x40022AF")]
			ActiveSceneChange,
			[Token(Token = "0x40022B0")]
			UIView,
			[Token(Token = "0x40022B1")]
			UIButton,
			[Token(Token = "0x40022B2")]
			UIDrawer
		}

		[Token(Token = "0x400228A")]
		private const WaitType DEFAULT_WAIT_TYPE = WaitType.Time;

		[Token(Token = "0x400228B")]
		private const bool DEFAULT_ANY_VALUE = false;

		[Token(Token = "0x400228C")]
		private const bool DEFAULT_IGNORE_UNITY_TIMESCALE = true;

		[Token(Token = "0x400228D")]
		private const bool DEFAULT_RANDOM_DURATION = false;

		[Token(Token = "0x400228E")]
		private const float DEFAULT_DURATION = 1f;

		[Token(Token = "0x400228F")]
		private const float DEFAULT_DURATION_MAX = 1f;

		[Token(Token = "0x4002290")]
		private const float DEFAULT_DURATION_MIN = 0f;

		[Token(Token = "0x4002291")]
		private const string DEFAULT_GAME_EVENT = "";

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public GetSceneBy GetSceneBy;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public WaitType WaitFor;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool AnyValue;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool IgnoreUnityTimescale;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public bool RandomDuration;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float Duration;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float DurationMax;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float DurationMin;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int SceneBuildIndex;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string GameEvent;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string SceneName;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UIViewBehaviorType UIViewTriggerAction;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string ViewCategory;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string ViewName;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UIButtonBehaviorType UIButtonTriggerAction;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string ButtonCategory;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string ButtonName;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public UIDrawerBehaviorType UIDrawerTriggerAction;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string DrawerName;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool CustomDrawerName;

		[NonSerialized]
		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float CurrentDuration;

		[NonSerialized]
		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_timerIsActive;

		[NonSerialized]
		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private double m_timerStart;

		[NonSerialized]
		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_timeDelay;

		[Token(Token = "0x170004A6")]
		public float TimerProgress
		{
			[Token(Token = "0x600220A")]
			[Address(RVA = "0x1004FF0", Offset = "0x1004FF0", VA = "0x1004FF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A7")]
		public string WaitForInfoTitle
		{
			[Token(Token = "0x600220B")]
			[Address(RVA = "0x1005044", Offset = "0x1005044", VA = "0x1005044")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A8")]
		public string WaitForInfoDescription
		{
			[Token(Token = "0x600220C")]
			[Address(RVA = "0x1005444", Offset = "0x1005444", VA = "0x1005444")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x1005638", Offset = "0x1005638", VA = "0x1005638", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x100568C", Offset = "0x100568C", VA = "0x100568C", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x1005754", Offset = "0x1005754", VA = "0x1005754", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x100589C", Offset = "0x100589C", VA = "0x100589C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x1005994", Offset = "0x1005994", VA = "0x1005994", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1005D78", Offset = "0x1005D78", VA = "0x1005D78", Slot = "18")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x1005E38", Offset = "0x1005E38", VA = "0x1005E38", Slot = "15")]
		public override void OnExit(Doozy.Engine.Nody.Models.Node nextActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x10058C8", Offset = "0x10058C8", VA = "0x10058C8")]
		private void UpdateCurrentDuration()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x1005A34", Offset = "0x1005A34", VA = "0x1005A34")]
		private void StartWait()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1005E54", Offset = "0x1005E54", VA = "0x1005E54")]
		private void EndWait()
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x1006208", Offset = "0x1006208", VA = "0x1006208")]
		private void ActivateTimer()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x1006244", Offset = "0x1006244", VA = "0x1006244")]
		private void StopTimer()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x1006250", Offset = "0x1006250", VA = "0x1006250")]
		private void OnGameEventMessage(GameEventMessage message)
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x1006368", Offset = "0x1006368", VA = "0x1006368")]
		private void SceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x1006558", Offset = "0x1006558", VA = "0x1006558")]
		private void SceneUnloaded(Scene unloadedScene)
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x10065F0", Offset = "0x10065F0", VA = "0x10065F0")]
		private void ActiveSceneChanged(Scene current, Scene next)
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x100646C", Offset = "0x100646C", VA = "0x100646C")]
		private bool IsTargetScene(Scene scene)
		{
			return default(bool);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x10066C8", Offset = "0x10066C8", VA = "0x10066C8")]
		private void OnUIViewMessage(UIViewMessage message)
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x1006B48", Offset = "0x1006B48", VA = "0x1006B48")]
		private void OnUIButtonMessage(UIButtonMessage message)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x1006F80", Offset = "0x1006F80", VA = "0x1006F80")]
		private void OnUIDrawerMessage(UIDrawerMessage message)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x1005DCC", Offset = "0x1005DCC", VA = "0x1005DCC")]
		private void ContinueToNextNode()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x10072B4", Offset = "0x10072B4", VA = "0x10072B4", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x10072BC", Offset = "0x10072BC", VA = "0x10072BC")]
		public WaitNode()
		{
		}
	}
}
namespace Doozy.Engine.UI.Input
{
	[Token(Token = "0x2000527")]
	[DefaultExecutionOrder(-200)]
	[AddComponentMenu("Doozy/Input/Back Button", 13)]
	[DisallowMultipleComponent]
	public class BackButton : MonoBehaviour
	{
		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BackButton s_instance;

		[Token(Token = "0x40022B4")]
		public const bool DEFAULT_ENABLE_ALTERNATE_INPUTS = false;

		[Token(Token = "0x40022B5")]
		public const float BACK_BUTTON_DETECTION_DISABLE_INTERVAL = 0.2f;

		[Token(Token = "0x40022B6")]
		public const InputMode DEFAULT_INPUT_MODE = InputMode.VirtualButton;

		[Token(Token = "0x40022B7")]
		public const KeyCode DEFAULT_BACK_BUTTON_KEY_CODE = KeyCode.Escape;

		[Token(Token = "0x40022B8")]
		public const KeyCode DEFAULT_BACK_BUTTON_KEY_CODE_ALT = KeyCode.Backspace;

		[Token(Token = "0x40022B9")]
		public const string DEFAULT_BACK_BUTTON_VIRTUAL_BUTTON_NAME = "Cancel";

		[Token(Token = "0x40022BA")]
		public const string DEFAULT_BACK_BUTTON_VIRTUAL_BUTTON_NAME_ALT = "Cancel";

		[Token(Token = "0x40022BB")]
		public const string NAME = "Back";

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool s_applicationIsQuitting;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool s_initialized;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputData BackButtonInputData;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DebugMode;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_backButtonDisableLevel;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double m_lastBackButtonPressTime;

		[Token(Token = "0x170004A9")]
		public static BackButton Instance
		{
			[Token(Token = "0x6002225")]
			[Address(RVA = "0x1007420", Offset = "0x1007420", VA = "0x1007420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		public bool BackButtonDisabled
		{
			[Token(Token = "0x6002226")]
			[Address(RVA = "0x10075EC", Offset = "0x10075EC", VA = "0x10075EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AB")]
		public bool CanExecuteBackButton
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0x1007608", Offset = "0x1007608", VA = "0x1007608")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AC")]
		private bool DebugComponent
		{
			[Token(Token = "0x6002228")]
			[Address(RVA = "0x100763C", Offset = "0x100763C", VA = "0x100763C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x1007418", Offset = "0x1007418", VA = "0x1007418")]
		protected BackButton()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x1007674", Offset = "0x1007674", VA = "0x1007674")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void RunOnStart()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x10076BC", Offset = "0x10076BC", VA = "0x10076BC")]
		private void Reset()
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x100778C", Offset = "0x100778C", VA = "0x100778C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x1007978", Offset = "0x1007978", VA = "0x1007978")]
		private void Update()
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x1007D58", Offset = "0x1007D58", VA = "0x1007D58")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x1007B28", Offset = "0x1007B28", VA = "0x1007B28")]
		public void Execute()
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x1007564", Offset = "0x1007564", VA = "0x1007564")]
		public static BackButton AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xFFEAE8", Offset = "0xFFEAE8", VA = "0xFFEAE8")]
		public static void Disable()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xFFEB0C", Offset = "0xFFEB0C", VA = "0xFFEB0C")]
		public static void Enable()
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xFFEB4C", Offset = "0xFFEB4C", VA = "0xFFEB4C")]
		public static void EnableByForce()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x1007DA4", Offset = "0x1007DA4", VA = "0x1007DA4")]
		public static void Init()
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x10076DC", Offset = "0x10076DC", VA = "0x10076DC")]
		private static InputData GetBackButtonInputData()
		{
			return null;
		}
	}
	[Token(Token = "0x2000528")]
	public enum InputMode
	{
		[Token(Token = "0x40022C3")]
		None,
		[Token(Token = "0x40022C4")]
		KeyCode,
		[Token(Token = "0x40022C5")]
		VirtualButton
	}
	[Serializable]
	[Token(Token = "0x2000529")]
	public class InputData
	{
		[Token(Token = "0x40022C6")]
		public const bool DEFAULT_ENABLE_ALTERNATE_INPUTS = true;

		[Token(Token = "0x40022C7")]
		public const InputMode DEFAULT_INPUT_MODE = InputMode.VirtualButton;

		[Token(Token = "0x40022C8")]
		public const KeyCode DEFAULT_ON_CLICK_KEY_CODE = KeyCode.Return;

		[Token(Token = "0x40022C9")]
		public const KeyCode DEFAULT_ON_CLICK_KEY_CODE_ALT = KeyCode.Space;

		[Token(Token = "0x40022CA")]
		public const string DEFAULT_ON_CLICK_VIRTUAL_BUTTON_NAME = "Submit";

		[Token(Token = "0x40022CB")]
		public const string DEFAULT_ON_CLICK_VIRTUAL_BUTTON_NAME_ALT = "Jump";

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool EnableAlternateInputs;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public InputMode InputMode;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode KeyCode;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode KeyCodeAlt;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string VirtualButtonName;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string VirtualButtonNameAlt;

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xFFDBE8", Offset = "0xFFDBE8", VA = "0xFFDBE8")]
		public InputData()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x1007E54", Offset = "0x1007E54", VA = "0x1007E54")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200052A")]
	[AddComponentMenu("Doozy/Input/Key To Action", 13)]
	[DefaultExecutionOrder(-100)]
	public class KeyToAction : MonoBehaviour
	{
		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIAction Actions;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DebugMode;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputData InputData;

		[Token(Token = "0x170004AD")]
		private bool DebugComponent
		{
			[Token(Token = "0x6002237")]
			[Address(RVA = "0x1007EE4", Offset = "0x1007EE4", VA = "0x1007EE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x1007F1C", Offset = "0x1007F1C", VA = "0x1007F1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1007F34", Offset = "0x1007F34", VA = "0x1007F34")]
		private void Update()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x1008118", Offset = "0x1008118", VA = "0x1008118")]
		public void Execute()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x10082B4", Offset = "0x10082B4", VA = "0x10082B4")]
		private static KeyToAction AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x100833C", Offset = "0x100833C", VA = "0x100833C")]
		public KeyToAction()
		{
		}
	}
	[Token(Token = "0x200052B")]
	[AddComponentMenu("Doozy/Input/Key To Game Event", 13)]
	[DefaultExecutionOrder(-100)]
	public class KeyToGameEvent : MonoBehaviour
	{
		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugMode;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputData InputData;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string GameEvent;

		[Token(Token = "0x170004AE")]
		public bool HasGameEvent
		{
			[Token(Token = "0x600223D")]
			[Address(RVA = "0x1008594", Offset = "0x1008594", VA = "0x1008594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004AF")]
		private bool DebugComponent
		{
			[Token(Token = "0x600223E")]
			[Address(RVA = "0x10085C4", Offset = "0x10085C4", VA = "0x10085C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x10085FC", Offset = "0x10085FC", VA = "0x10085FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x1008614", Offset = "0x1008614", VA = "0x1008614")]
		private void Update()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x1008858", Offset = "0x1008858", VA = "0x1008858")]
		public void Execute()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x100887C", Offset = "0x100887C", VA = "0x100887C")]
		private static KeyToGameEvent AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x1008904", Offset = "0x1008904", VA = "0x1008904")]
		public KeyToGameEvent()
		{
		}
	}
}
namespace Doozy.Engine.UI.Connections
{
	[Token(Token = "0x200052C")]
	public enum UIConnectionTrigger
	{
		[Token(Token = "0x40022D9")]
		ButtonClick,
		[Token(Token = "0x40022DA")]
		ButtonDoubleClick,
		[Token(Token = "0x40022DB")]
		ButtonLongClick,
		[Token(Token = "0x40022DC")]
		GameEvent,
		[Token(Token = "0x40022DD")]
		TimeDelay
	}
	[Serializable]
	[Token(Token = "0x200052D")]
	public class UIConnection
	{
		[Token(Token = "0x40022DE")]
		public const float DEFAULT_TIME_DELAY = 3f;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ButtonCategory;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ButtonName;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string GameEvent;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float TimeDelay;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UIConnectionTrigger Trigger;

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x1008980", Offset = "0x1008980", VA = "0x1008980")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x1003254", Offset = "0x1003254", VA = "0x1003254")]
		public static UIConnection GetValue(Socket socket)
		{
			return null;
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x100332C", Offset = "0x100332C", VA = "0x100332C")]
		public static void SetValue(Socket socket, UIConnection value)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x1008A34", Offset = "0x1008A34", VA = "0x1008A34")]
		public UIConnection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200052E")]
	public class WeightedConnection : PassthroughConnection
	{
		[Token(Token = "0x40022E4")]
		private const int DEFAULT_WEIGHT = 100;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Weight;

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x10013A8", Offset = "0x10013A8", VA = "0x10013A8")]
		public static WeightedConnection GetValue(Socket socket)
		{
			return null;
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x1008AEC", Offset = "0x1008AEC", VA = "0x1008AEC")]
		public static void SetValue(Socket socket, WeightedConnection value)
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x1008B1C", Offset = "0x1008B1C", VA = "0x1008B1C")]
		public WeightedConnection()
		{
		}
	}
}
namespace Doozy.Engine.UI.Base
{
	[Token(Token = "0x200052F")]
	public enum NamesDatabaseType
	{
		[Token(Token = "0x40022E7")]
		UIButton,
		[Token(Token = "0x40022E8")]
		UICanvas,
		[Token(Token = "0x40022E9")]
		UIView,
		[Token(Token = "0x40022EA")]
		UIDrawer
	}
	[Serializable]
	[Token(Token = "0x2000530")]
	public class ListOfNames : ScriptableObject
	{
		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CategoryName;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NamesDatabaseType DatabaseType;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> Names;

		[Token(Token = "0x170004B0")]
		private static UILanguagePack UILabels
		{
			[Token(Token = "0x600224B")]
			[Address(RVA = "0x1008B2C", Offset = "0x1008B2C", VA = "0x1008B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x1008B34", Offset = "0x1008B34", VA = "0x1008B34")]
		public void AddName(string value, bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x1008DAC", Offset = "0x1008DAC", VA = "0x1008DAC")]
		public void AddNames(List<string> names, bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x1009054", Offset = "0x1009054", VA = "0x1009054")]
		public void Clear(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x1009154", Offset = "0x1009154", VA = "0x1009154")]
		public bool Contains(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x1009204", Offset = "0x1009204", VA = "0x1009204")]
		public void RemoveDuplicateNames()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x1009324", Offset = "0x1009324", VA = "0x1009324")]
		public void RemoveEmptyNames()
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x100947C", Offset = "0x100947C", VA = "0x100947C")]
		public void RemoveName(string value, bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x10095D0", Offset = "0x10095D0", VA = "0x10095D0")]
		public void Rename(string newCategoryName, string newAssetName, bool saveAssets)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x1008D44", Offset = "0x1008D44", VA = "0x1008D44")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x1008CDC", Offset = "0x1008CDC", VA = "0x1008CDC")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x10095D4", Offset = "0x10095D4", VA = "0x10095D4")]
		public ListOfNames()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000531")]
	public class NamesDatabase : ScriptableObject
	{
		[Token(Token = "0x40022EE")]
		public const string BACK = "Back";

		[Token(Token = "0x40022EF")]
		public const string CUSTOM = "Custom";

		[Token(Token = "0x40022F0")]
		public const string DOWN = "Down";

		[Token(Token = "0x40022F1")]
		public const string GENERAL = "General";

		[Token(Token = "0x40022F2")]
		public const string LEFT = "Left";

		[Token(Token = "0x40022F3")]
		public const string MASTER_CANVAS = "MasterCanvas";

		[Token(Token = "0x40022F4")]
		public const string RIGHT = "Right";

		[Token(Token = "0x40022F5")]
		public const string UNNAMED = "Unnamed";

		[Token(Token = "0x40022F6")]
		public const string UP = "Up";

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NamesDatabaseType DatabaseType;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> CategoryNames;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ListOfNames> Categories;

		[Token(Token = "0x170004B1")]
		private static UILanguagePack UILabels
		{
			[Token(Token = "0x6002257")]
			[Address(RVA = "0x1009664", Offset = "0x1009664", VA = "0x1009664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B2")]
		public bool IsEmpty
		{
			[Token(Token = "0x6002258")]
			[Address(RVA = "0x100966C", Offset = "0x100966C", VA = "0x100966C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x10096BC", Offset = "0x10096BC", VA = "0x10096BC")]
		public bool Add(ListOfNames category, bool performUndo, bool saveAssets)
		{
			return default(bool);
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x1009E58", Offset = "0x1009E58", VA = "0x1009E58")]
		public void AddDefaultCategories(bool saveAssets)
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x100A15C", Offset = "0x100A15C", VA = "0x100A15C")]
		public bool Contains(string categoryName)
		{
			return default(bool);
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x100A564", Offset = "0x100A564", VA = "0x100A564")]
		public bool CreateCategory(string categoryName, List<string> names, bool showDialog = false, bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x100A5AC", Offset = "0x100A5AC", VA = "0x100A5AC")]
		public bool CreateCategory(string relativePath, string categoryName, List<string> names, bool showDialog = false, bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x100A758", Offset = "0x100A758", VA = "0x100A758")]
		public bool DeleteCategory(ListOfNames category)
		{
			return default(bool);
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x100A3CC", Offset = "0x100A3CC", VA = "0x100A3CC")]
		public ListOfNames GetCategory(string categoryName)
		{
			return null;
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x100A7C0", Offset = "0x100A7C0", VA = "0x100A7C0")]
		public List<string> GetNamesList(string categoryName, bool getDirectReference = false)
		{
			return null;
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x100A9B8", Offset = "0x100A9B8", VA = "0x100A9B8")]
		public void RefreshDatabase(bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x100B14C", Offset = "0x100B14C", VA = "0x100B14C")]
		public void RemoveCategory(string categoryName, bool showDialog, bool saveAssets)
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x100B240", Offset = "0x100B240", VA = "0x100B240")]
		public bool Rename(string oldCategoryName, string newCategoryName, bool performUndo = true, bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x100AD44", Offset = "0x100AD44", VA = "0x100AD44")]
		public void RemoveDuplicateNamesFromCategories(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x100B4F0", Offset = "0x100B4F0", VA = "0x100B4F0")]
		public void RemoveNullDatabases(bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x100ABDC", Offset = "0x100ABDC", VA = "0x100ABDC")]
		public void RemoveEmptyNames(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x100ABD8", Offset = "0x100ABD8", VA = "0x100ABD8")]
		public void RemoveUnreferencedData(bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x100B6B8", Offset = "0x100B6B8", VA = "0x100B6B8")]
		public bool ResetDatabase()
		{
			return default(bool);
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x100B6C0", Offset = "0x100B6C0", VA = "0x100B6C0")]
		public void SearchForUnregisteredDatabases(bool saveAssets)
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x1009DF0", Offset = "0x1009DF0", VA = "0x1009DF0")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x100AEAC", Offset = "0x100AEAC", VA = "0x100AEAC")]
		public void Sort(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x100986C", Offset = "0x100986C", VA = "0x100986C")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x10098D4", Offset = "0x10098D4", VA = "0x10098D4")]
		public void UpdateListOfCategoryNames()
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x100BA10", Offset = "0x100BA10", VA = "0x100BA10")]
		public static bool CanDeleteItem(NamesDatabase database, string itemName)
		{
			return default(bool);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xFFC660", Offset = "0xFFC660", VA = "0xFFC660")]
		public static NamesDatabase GetDatabase(string fileName, string resourcesPath)
		{
			return null;
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xFFC5F8", Offset = "0xFFC5F8", VA = "0xFFC5F8")]
		public static string GetPath(NamesDatabaseType databaseType)
		{
			return null;
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x100BB98", Offset = "0x100BB98", VA = "0x100BB98")]
		public static DoozyPath.ComponentName GetComponentName(NamesDatabaseType databaseType)
		{
			return default(DoozyPath.ComponentName);
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x100B408", Offset = "0x100B408", VA = "0x100B408")]
		private static string GetDatabaseFileName(NamesDatabaseType databaseType, string categoryName)
		{
			return null;
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x100BBF4", Offset = "0x100BBF4", VA = "0x100BBF4")]
		public NamesDatabase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000534")]
	public class UIAction
	{
		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<GameObject> Action;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AnimatorEvent> AnimatorEvents;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIEffect Effect;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent Event;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> GameEvents;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundyData SoundData;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas m_canvasForEffect;

		[Token(Token = "0x170004B3")]
		public int AnimatorEventsCount
		{
			[Token(Token = "0x600227C")]
			[Address(RVA = "0x100BEAC", Offset = "0x100BEAC", VA = "0x100BEAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B4")]
		public int GameEventsCount
		{
			[Token(Token = "0x600227D")]
			[Address(RVA = "0x100BEF4", Offset = "0x100BEF4", VA = "0x100BEF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004B5")]
		public bool HasAnimatorEvents
		{
			[Token(Token = "0x600227E")]
			[Address(RVA = "0x100BF3C", Offset = "0x100BF3C", VA = "0x100BF3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B6")]
		public bool HasEffect
		{
			[Token(Token = "0x600227F")]
			[Address(RVA = "0x100BF64", Offset = "0x100BF64", VA = "0x100BF64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B7")]
		public bool HasGameEvents
		{
			[Token(Token = "0x6002280")]
			[Address(RVA = "0x100BFDC", Offset = "0x100BFDC", VA = "0x100BFDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B8")]
		public bool HasSound
		{
			[Token(Token = "0x6002281")]
			[Address(RVA = "0x100C004", Offset = "0x100C004", VA = "0x100C004")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004B9")]
		public bool HasUnityEvent
		{
			[Token(Token = "0x6002282")]
			[Address(RVA = "0x100C0E0", Offset = "0x100C0E0", VA = "0x100C0E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BA")]
		public int UnityEventListenerCount
		{
			[Token(Token = "0x6002283")]
			[Address(RVA = "0x100C104", Offset = "0x100C104", VA = "0x100C104")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x10083F0", Offset = "0x10083F0", VA = "0x10083F0")]
		public UIAction()
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x100C324", Offset = "0x100C324", VA = "0x100C324")]
		public UIAction AddAnimatorEvent(AnimatorEvent animatorEvent)
		{
			return null;
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x100C408", Offset = "0x100C408", VA = "0x100C408")]
		public UIAction AddAnimatorEvents(List<AnimatorEvent> animatorEvents)
		{
			return null;
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x100C700", Offset = "0x100C700", VA = "0x100C700")]
		public UIAction AddGameEvent(string gameEvent, bool clearGameEventsList = false)
		{
			return null;
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x100C848", Offset = "0x100C848", VA = "0x100C848")]
		public UIAction AddGameEvents(List<string> gameEvents, bool clearGameEventsList = false)
		{
			return null;
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x100CC0C", Offset = "0x100CC0C", VA = "0x100CC0C")]
		public Canvas GetCanvas(GameObject source, bool refresh = false)
		{
			return null;
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x10081D4", Offset = "0x10081D4", VA = "0x10081D4")]
		public void Invoke(GameObject source, bool playSound = true, bool playEffect = true, bool playAnimatorEvents = true, bool sendGameEvents = true, bool invokeUnityEvent = true, bool invokeAction = true)
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x100D040", Offset = "0x100D040", VA = "0x100D040")]
		public void InvokeAction(GameObject source)
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x100D02C", Offset = "0x100D02C", VA = "0x100D02C")]
		public void InvokeUnityEvent()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x100CE60", Offset = "0x100CE60", VA = "0x100CE60")]
		public void InvokeAnimatorEvents()
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x100CD94", Offset = "0x100CD94", VA = "0x100CD94")]
		public void ExecuteEffect(Canvas canvas)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x100CD6C", Offset = "0x100CD6C", VA = "0x100CD6C")]
		public void PlaySound()
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x100C120", Offset = "0x100C120", VA = "0x100C120")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x100CFC8", Offset = "0x100CFC8", VA = "0x100CFC8")]
		public void SendGameEvents(GameObject source)
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x100D09C", Offset = "0x100D09C", VA = "0x100D09C")]
		public UIAction SetAction(Action<GameObject> action)
		{
			return null;
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x100D0B8", Offset = "0x100D0B8", VA = "0x100D0B8")]
		public UIAction SetEffect(UIEffect effect)
		{
			return null;
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x100D0DC", Offset = "0x100D0DC", VA = "0x100D0DC")]
		public UIAction SetSoundyData(SoundyData soundyData)
		{
			return null;
		}
	}
	[Token(Token = "0x2000536")]
	public abstract class UIComponentBase<T> : MonoBehaviour
	{
		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<T> Database;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_uiInteractionsDisableLevel;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EventSystem s_unityEventSystem;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool DebugMode;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 StartPosition;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 StartRotation;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 StartScale;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float StartAlpha;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x170004BB")]
		protected static DoozySettings Settings
		{
			[Token(Token = "0x600229B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BC")]
		public static bool UIInteractionsDisabled
		{
			[Token(Token = "0x600229C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004BD")]
		public static EventSystem UnityEventSystem
		{
			[Token(Token = "0x600229D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BE")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x600229E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600229F")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x60022A0")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60022A1")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x60022A2")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60022A3")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60022A4")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60022A5")]
		public virtual bool IsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A6")]
		public bool IsDestroyed()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A7")]
		public virtual void ResetToStartValues()
		{
		}

		[Token(Token = "0x60022A8")]
		public virtual void ResetPosition()
		{
		}

		[Token(Token = "0x60022A9")]
		public virtual void ResetRotation()
		{
		}

		[Token(Token = "0x60022AA")]
		public virtual void ResetScale()
		{
		}

		[Token(Token = "0x60022AB")]
		public virtual void ResetAlpha()
		{
		}

		[Token(Token = "0x60022AC")]
		public virtual void UpdateStartValues()
		{
		}

		[Token(Token = "0x60022AD")]
		public virtual void UpdateStartPosition()
		{
		}

		[Token(Token = "0x60022AE")]
		public virtual void UpdateStartRotation()
		{
		}

		[Token(Token = "0x60022AF")]
		public virtual void UpdateStartScale()
		{
		}

		[Token(Token = "0x60022B0")]
		public virtual void UpdateStartAlpha()
		{
		}

		[Token(Token = "0x60022B1")]
		protected static void RemoveAnyNullReferencesFromTheDatabase()
		{
		}

		[Token(Token = "0x60022B2")]
		public static void EnableUIInteractions()
		{
		}

		[Token(Token = "0x60022B3")]
		public static void EnableUIInteractionsByForce()
		{
		}

		[Token(Token = "0x60022B4")]
		public static void DisableUIInteractions()
		{
		}

		[Token(Token = "0x60022B5")]
		protected UIComponentBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000537")]
	public class UIContainer
	{
		[Token(Token = "0x4002314")]
		public const bool DEFAULT_DISABLE_CANVAS = true;

		[Token(Token = "0x4002315")]
		public const bool DEFAULT_DISABLE_GAME_OBJECT = true;

		[Token(Token = "0x4002316")]
		public const bool DEFAULT_DISABLE_GRAPHIC_RAYCASTER = true;

		[Token(Token = "0x4002317")]
		public const bool DEFAULT_ENABLED = true;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Canvas Canvas;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup CanvasGroup;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DisableCanvas;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DisableGameObject;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool DisableGraphicRaycaster;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool Enabled;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GraphicRaycaster GraphicRaycaster;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform RectTransform;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float StartAlpha;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 StartPosition;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 StartRotation;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 StartScale;

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xFFD5A0", Offset = "0xFFD5A0", VA = "0xFFD5A0")]
		public UIContainer()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x100D1AC", Offset = "0x100D1AC", VA = "0x100D1AC", Slot = "4")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x100D280", Offset = "0x100D280", VA = "0x100D280", Slot = "5")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x100D344", Offset = "0x100D344", VA = "0x100D344")]
		public void FullScreen(bool resetScaleToOne)
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x100D3D4", Offset = "0x100D3D4", VA = "0x100D3D4", Slot = "6")]
		public virtual void Init()
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x100D760", Offset = "0x100D760", VA = "0x100D760", Slot = "7")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x100D76C", Offset = "0x100D76C", VA = "0x100D76C", Slot = "8")]
		public virtual void ResetAlpha()
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x100D828", Offset = "0x100D828", VA = "0x100D828", Slot = "9")]
		public virtual void ResetPosition()
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x100D850", Offset = "0x100D850", VA = "0x100D850", Slot = "10")]
		public virtual void ResetRotation()
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x100D878", Offset = "0x100D878", VA = "0x100D878", Slot = "11")]
		public virtual void ResetScale()
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x100D8A0", Offset = "0x100D8A0", VA = "0x100D8A0", Slot = "12")]
		public virtual void ResetToStartValues()
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x100D98C", Offset = "0x100D98C", VA = "0x100D98C", Slot = "13")]
		public virtual void UpdateStartAlpha()
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x100DA48", Offset = "0x100DA48", VA = "0x100DA48", Slot = "14")]
		public virtual void UpdateStartPosition()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x100DA74", Offset = "0x100DA74", VA = "0x100DA74", Slot = "15")]
		public virtual void UpdateStartRotation()
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x100DAA0", Offset = "0x100DAA0", VA = "0x100DAA0", Slot = "16")]
		public virtual void UpdateStartScale()
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x100DACC", Offset = "0x100DACC", VA = "0x100DACC", Slot = "17")]
		public virtual void UpdateStartValues()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000538")]
	public class UIEffect
	{
		[Token(Token = "0x4002324")]
		public const DynamicSorting DEFAULT_AUTO_SORT = DynamicSorting.InFront;

		[Token(Token = "0x4002325")]
		public const UIEffectBehavior DEFAULT_BEHAVIOR = UIEffectBehavior.Play;

		[Token(Token = "0x4002326")]
		public const int DEFAULT_SORTING_ORDER = 0;

		[Token(Token = "0x4002327")]
		public const int DEFAULT_SORTING_STEPS = 1;

		[Token(Token = "0x4002328")]
		public const ParticleSystemStopBehavior DEFAULT_STOP_BEHAVIOR = ParticleSystemStopBehavior.StopEmitting;

		[Token(Token = "0x4002329")]
		public const string DEFAULT_SORTING_LAYER = "Default";

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DynamicSorting AutoSort;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UIEffectBehavior Behavior;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int CustomSortingOrder;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int SortingSteps;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem ParticleSystem;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystemStopBehavior StopBehavior;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string CustomSortingLayer;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer[] m_renderers;

		[Token(Token = "0x170004BF")]
		public ParticleSystem.MainModule MainModule
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x100DB8C", Offset = "0x100DB8C", VA = "0x100DB8C")]
			get
			{
				return default(ParticleSystem.MainModule);
			}
		}

		[Token(Token = "0x170004C0")]
		public Renderer[] Renderers
		{
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0x100DBA8", Offset = "0x100DBA8", VA = "0x100DBA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C1")]
		public string SortingLayerName
		{
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x100DC1C", Offset = "0x100DC1C", VA = "0x100DC1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		public int SortingOrder
		{
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x100DC4C", Offset = "0x100DC4C", VA = "0x100DC4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x100DC7C", Offset = "0x100DC7C", VA = "0x100DC7C")]
		public UIEffect()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x100DD58", Offset = "0x100DD58", VA = "0x100DD58")]
		public void Clear()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x100DDDC", Offset = "0x100DDDC", VA = "0x100DDDC")]
		public void Emit(int count)
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x100D05C", Offset = "0x100D05C", VA = "0x100D05C")]
		public void Execute()
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x100D07C", Offset = "0x100D07C", VA = "0x100D07C")]
		public void Execute(string sortingLayer, int sortingOrder)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x100E034", Offset = "0x100E034", VA = "0x100E034")]
		public void OverrideSortingAndPlay(string overrideSortingLayer, int overrideSortingOrder)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x100DF98", Offset = "0x100DF98", VA = "0x100DF98")]
		public void Play(string sortingLayer, int sortingOrder)
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x100DE74", Offset = "0x100DE74", VA = "0x100DE74")]
		public void Play()
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x100DCEC", Offset = "0x100DCEC", VA = "0x100DCEC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x100E0D8", Offset = "0x100E0D8", VA = "0x100E0D8")]
		public bool SetSortingLayer(string sortingLayerName)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x100E1B0", Offset = "0x100E1B0", VA = "0x100E1B0")]
		public void SetSortingOrder(int sortingOrder)
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x100E364", Offset = "0x100E364", VA = "0x100E364")]
		public void Stop()
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x100DEFC", Offset = "0x100DEFC", VA = "0x100DEFC")]
		public void Stop(ParticleSystemStopBehavior stopBehavior)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x100E27C", Offset = "0x100E27C", VA = "0x100E27C")]
		public void UpdateSorting(string sortingLayer, int sortingOrder)
		{
		}
	}
}
namespace Doozy.Engine.UI.Animation
{
	[Serializable]
	[Token(Token = "0x2000539")]
	public class Move
	{
		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationType AnimationType;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Enabled;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 From;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 To;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 By;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseCustomFromAndTo;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int Vibrato;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Elasticity;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int NumberOfLoops;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LoopType LoopType;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Direction Direction;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 CustomPosition;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EaseType EaseType;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Ease Ease;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve AnimationCurve;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float StartDelay;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float Duration;

		[Token(Token = "0x170004C3")]
		public float TotalDuration
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0x100E3E0", Offset = "0x100E3E0", VA = "0x100E3E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x100E3EC", Offset = "0x100E3EC", VA = "0x100E3EC")]
		public Move(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x100E544", Offset = "0x100E544", VA = "0x100E544")]
		public Move(AnimationType animationType, bool enabled, Vector3 from, Vector3 to, Vector3 by, bool useCustomFromAndTo, int vibrato, float elasticity, int numberOfLoops, LoopType loopType, Direction direction, Vector3 customPosition, EaseType easeType, Ease ease, AnimationCurve animationCurve, float startDelay, float duration)
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x100E418", Offset = "0x100E418", VA = "0x100E418")]
		public void Reset(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x100E6E0", Offset = "0x100E6E0", VA = "0x100E6E0")]
		public Move Copy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200053A")]
	public class Rotate
	{
		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationType AnimationType;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Enabled;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 From;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 To;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 By;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseCustomFromAndTo;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int Vibrato;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Elasticity;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int NumberOfLoops;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LoopType LoopType;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RotateMode RotateMode;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public EaseType EaseType;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Ease Ease;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve AnimationCurve;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float StartDelay;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Duration;

		[Token(Token = "0x170004C4")]
		public float TotalDuration
		{
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0x100E828", Offset = "0x100E828", VA = "0x100E828")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x100E834", Offset = "0x100E834", VA = "0x100E834")]
		public Rotate(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x100E970", Offset = "0x100E970", VA = "0x100E970")]
		public Rotate(AnimationType animationType, bool enabled, Vector3 from, Vector3 to, Vector3 by, bool useCustomFromAndTo, int vibrato, float elasticity, int numberOfLoops, LoopType loopType, RotateMode rotateMode, EaseType easeType, Ease ease, AnimationCurve animationCurve, float startDelay, float duration)
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x100E860", Offset = "0x100E860", VA = "0x100E860")]
		public void Reset(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x100EAEC", Offset = "0x100EAEC", VA = "0x100EAEC")]
		public Rotate Copy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200053B")]
	public class Scale
	{
		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationType AnimationType;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Enabled;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 From;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 To;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 By;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseCustomFromAndTo;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int Vibrato;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Elasticity;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int NumberOfLoops;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LoopType LoopType;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public EaseType EaseType;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Ease Ease;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve AnimationCurve;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float StartDelay;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float Duration;

		[Token(Token = "0x170004C5")]
		public float TotalDuration
		{
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x100EC2C", Offset = "0x100EC2C", VA = "0x100EC2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x100EC38", Offset = "0x100EC38", VA = "0x100EC38")]
		public Scale(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x100ED6C", Offset = "0x100ED6C", VA = "0x100ED6C")]
		public Scale(AnimationType animationType, bool enabled, Vector3 from, Vector3 to, Vector3 by, bool useCustomFromAndTo, int vibrato, float elasticity, int numberOfLoops, LoopType loopType, EaseType easeType, Ease ease, AnimationCurve animationCurve, float startDelay, float duration)
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x100EC64", Offset = "0x100EC64", VA = "0x100EC64")]
		public void Reset(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x100EEDC", Offset = "0x100EEDC", VA = "0x100EEDC")]
		public Scale Copy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200053C")]
	public class Fade
	{
		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationType AnimationType;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Enabled;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float From;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float To;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float By;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool UseCustomFromAndTo;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int NumberOfLoops;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LoopType LoopType;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EaseType EaseType;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Ease Ease;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve AnimationCurve;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float StartDelay;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float Duration;

		[Token(Token = "0x170004C6")]
		public float TotalDuration
		{
			[Token(Token = "0x60022E8")]
			[Address(RVA = "0x100F014", Offset = "0x100F014", VA = "0x100F014")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x100F020", Offset = "0x100F020", VA = "0x100F020")]
		public Fade(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x100F0F4", Offset = "0x100F0F4", VA = "0x100F0F4")]
		public Fade(AnimationType animationType, bool enabled, float from, float to, float by, bool useCustomFromAndTo, int numberOfLoops, LoopType loopType, EaseType easeType, Ease ease, AnimationCurve animationCurve, float startDelay, float duration)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x100F04C", Offset = "0x100F04C", VA = "0x100F04C")]
		public void Reset(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x100F220", Offset = "0x100F220", VA = "0x100F220")]
		public Fade Copy()
		{
			return null;
		}
	}
	[Token(Token = "0x200053D")]
	public enum AnimationAction
	{
		[Token(Token = "0x4002370")]
		Move,
		[Token(Token = "0x4002371")]
		Rotate,
		[Token(Token = "0x4002372")]
		Scale,
		[Token(Token = "0x4002373")]
		Fade
	}
	[Token(Token = "0x200053E")]
	public enum AnimationType
	{
		[Token(Token = "0x4002375")]
		Undefined,
		[Token(Token = "0x4002376")]
		Show,
		[Token(Token = "0x4002377")]
		Hide,
		[Token(Token = "0x4002378")]
		Loop,
		[Token(Token = "0x4002379")]
		Punch,
		[Token(Token = "0x400237A")]
		State
	}
	[Token(Token = "0x200053F")]
	public enum ButtonAnimationType
	{
		[Token(Token = "0x400237C")]
		Punch,
		[Token(Token = "0x400237D")]
		State,
		[Token(Token = "0x400237E")]
		Animator
	}
	[Token(Token = "0x2000540")]
	public enum ButtonLoopAnimationType
	{
		[Token(Token = "0x4002380")]
		Normal,
		[Token(Token = "0x4002381")]
		Selected
	}
	[Token(Token = "0x2000541")]
	public enum Direction
	{
		[Token(Token = "0x4002383")]
		Left,
		[Token(Token = "0x4002384")]
		Right,
		[Token(Token = "0x4002385")]
		Top,
		[Token(Token = "0x4002386")]
		Bottom,
		[Token(Token = "0x4002387")]
		TopLeft,
		[Token(Token = "0x4002388")]
		TopCenter,
		[Token(Token = "0x4002389")]
		TopRight,
		[Token(Token = "0x400238A")]
		MiddleLeft,
		[Token(Token = "0x400238B")]
		MiddleCenter,
		[Token(Token = "0x400238C")]
		MiddleRight,
		[Token(Token = "0x400238D")]
		BottomLeft,
		[Token(Token = "0x400238E")]
		BottomCenter,
		[Token(Token = "0x400238F")]
		BottomRight,
		[Token(Token = "0x4002390")]
		CustomPosition
	}
	[Token(Token = "0x2000542")]
	public enum EaseType
	{
		[Token(Token = "0x4002392")]
		Ease,
		[Token(Token = "0x4002393")]
		AnimationCurve
	}
	[Serializable]
	[Token(Token = "0x2000543")]
	public class UIAnimation
	{
		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationType AnimationType;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Move Move;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rotate Rotate;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Scale Scale;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Fade Fade;

		[Token(Token = "0x170004C7")]
		public bool Enabled
		{
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x100F328", Offset = "0x100F328", VA = "0x100F328")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004C8")]
		public float StartDelay
		{
			[Token(Token = "0x60022EE")]
			[Address(RVA = "0x100F3E0", Offset = "0x100F3E0", VA = "0x100F3E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004C9")]
		public float TotalDuration
		{
			[Token(Token = "0x60022EF")]
			[Address(RVA = "0x100F524", Offset = "0x100F524", VA = "0x100F524")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x100F664", Offset = "0x100F664", VA = "0x100F664")]
		public UIAnimation(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x100F7EC", Offset = "0x100F7EC", VA = "0x100F7EC")]
		public UIAnimation(AnimationType animationType, Move move, Rotate rotate, Scale scale, Fade fade)
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x100F690", Offset = "0x100F690", VA = "0x100F690")]
		public void Reset(AnimationType animationType)
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x100F878", Offset = "0x100F878", VA = "0x100F878")]
		public UIAnimation Copy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000544")]
	public class UIAnimationData : ScriptableObject
	{
		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIAnimation Animation;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Category;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Name;

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x100F960", Offset = "0x100F960", VA = "0x100F960")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x100F9C8", Offset = "0x100F9C8", VA = "0x100F9C8")]
		public UIAnimationData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000545")]
	public class UIAnimationDatabase : ScriptableObject
	{
		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> AnimationNames;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<UIAnimationData> Database;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string DatabaseName;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationType DataType;

		[Token(Token = "0x170004CA")]
		private static UILanguagePack UILabels
		{
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x100F9D0", Offset = "0x100F9D0", VA = "0x100F9D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x100F9D8", Offset = "0x100F9D8", VA = "0x100F9D8")]
		public bool Add(UIAnimation animation, string animationName, bool saveAssets = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x100FDCC", Offset = "0x100FDCC", VA = "0x100FDCC")]
		public UIAnimationData AddDefaultData(bool saveAssets)
		{
			return null;
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x100FB88", Offset = "0x100FB88", VA = "0x100FB88")]
		public bool Contains(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x10100B4", Offset = "0x10100B4", VA = "0x10100B4")]
		public bool Contains(UIAnimationData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x1010160", Offset = "0x1010160", VA = "0x1010160")]
		public void CreatePreset(string newPresetName, UIAnimation animation, bool saveAssets = true)
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x10101A0", Offset = "0x10101A0", VA = "0x10101A0")]
		public bool Delete(string animationName, bool saveAssets)
		{
			return default(bool);
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x10101CC", Offset = "0x10101CC", VA = "0x10101CC")]
		public bool Delete(UIAnimationData data, bool saveAssets)
		{
			return default(bool);
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x100FF24", Offset = "0x100FF24", VA = "0x100FF24")]
		public UIAnimationData Get(string animationName)
		{
			return null;
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x100FC74", Offset = "0x100FC74", VA = "0x100FC74")]
		public void RefreshDatabase(bool saveAssets)
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x10102E0", Offset = "0x10102E0", VA = "0x10102E0")]
		public void RemoveNullEntries(bool saveAssets)
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x100FD64", Offset = "0x100FD64", VA = "0x100FD64")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x1010638", Offset = "0x1010638", VA = "0x1010638")]
		public void Sort(bool saveAssets)
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x100FBA4", Offset = "0x100FBA4", VA = "0x100FBA4")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x1010784", Offset = "0x1010784", VA = "0x1010784")]
		private void UpdateAnimationNames(bool saveAssets)
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x100FC0C", Offset = "0x100FC0C", VA = "0x100FC0C")]
		private void AddObjectToAsset(UnityEngine.Object objectToAdd)
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x1010A10", Offset = "0x1010A10", VA = "0x1010A10")]
		private void Rename(string oldAnimationName, string newAnimationName)
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x101042C", Offset = "0x101042C", VA = "0x101042C")]
		private void RenameAssetFileNamesToReflectAnimationNames()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x1010C08", Offset = "0x1010C08", VA = "0x1010C08")]
		public UIAnimationDatabase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000547")]
	public class UIAnimations : ScriptableObject
	{
		[Token(Token = "0x40023A3")]
		private const string FILE_NAME = "_UIAnimations";

		[Token(Token = "0x40023A4")]
		public const string DEFAULT_DATABASE_NAME = "Uncategorized";

		[Token(Token = "0x40023A5")]
		public const string DEFAULT_PRESET_NAME = "Default";

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UIAnimations s_instance;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIAnimationsDatabase Show;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIAnimationsDatabase Hide;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIAnimationsDatabase Loop;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIAnimationsDatabase Punch;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIAnimationsDatabase State;

		[Token(Token = "0x170004CB")]
		public static UIAnimations Instance
		{
			[Token(Token = "0x600230D")]
			[Address(RVA = "0x1010DCC", Offset = "0x1010DCC", VA = "0x1010DCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x101161C", Offset = "0x101161C", VA = "0x101161C")]
		public UIAnimationDatabase CreateDatabase(AnimationType databaseType, string newPresetCategory, bool saveAssets = false)
		{
			return null;
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x101172C", Offset = "0x101172C", VA = "0x101172C")]
		public UIAnimationsDatabase Get(AnimationType databaseType)
		{
			return null;
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x10117EC", Offset = "0x10117EC", VA = "0x10117EC")]
		public UIAnimationData Get(AnimationType databaseType, string databaseName, string animationName)
		{
			return null;
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x101180C", Offset = "0x101180C", VA = "0x101180C")]
		public UIAnimationDatabase Get(AnimationType databaseType, string databaseName)
		{
			return null;
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x1010F84", Offset = "0x1010F84", VA = "0x1010F84")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x1011224", Offset = "0x1011224", VA = "0x1011224")]
		public void SearchForUnregisteredDatabases(bool saveAssets)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x1011784", Offset = "0x1011784", VA = "0x1011784")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x1011874", Offset = "0x1011874", VA = "0x1011874")]
		public static UIAnimation LoadPreset(AnimationType animationType, string presetCategory, string presetName)
		{
			return null;
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x101192C", Offset = "0x101192C", VA = "0x101192C")]
		public UIAnimations()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000548")]
	public class UIAnimationsDatabase
	{
		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> DatabaseNames;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationType DatabaseType;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<UIAnimationDatabase> Databases;

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1011934", Offset = "0x1011934", VA = "0x1011934")]
		public UIAnimationsDatabase(AnimationType animationType)
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x1011A1C", Offset = "0x1011A1C", VA = "0x1011A1C")]
		public bool AddUIAnimationDatabase(UIAnimationDatabase database)
		{
			return default(bool);
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x1011BE8", Offset = "0x1011BE8", VA = "0x1011BE8")]
		public bool Contains(string databaseName)
		{
			return default(bool);
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1011B3C", Offset = "0x1011B3C", VA = "0x1011B3C")]
		public bool Contains(UIAnimationDatabase database)
		{
			return default(bool);
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1011C64", Offset = "0x1011C64", VA = "0x1011C64")]
		public UIAnimationDatabase Get(string databaseName)
		{
			return null;
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1011DF4", Offset = "0x1011DF4", VA = "0x1011DF4")]
		public void Update()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1011F70", Offset = "0x1011F70", VA = "0x1011F70")]
		private void AddTheDefaultUIAnimationDatabase()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x1011E2C", Offset = "0x1011E2C", VA = "0x1011E2C")]
		private void AddUnreferencedPresets()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x10120E8", Offset = "0x10120E8", VA = "0x10120E8")]
		private void RenameAssetFileNamesToReflectDatabaseNames()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x1011E30", Offset = "0x1011E30", VA = "0x1011E30")]
		private void RemoveEmptyDatabases()
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x10122D4", Offset = "0x10122D4", VA = "0x10122D4")]
		private void Sort()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1012404", Offset = "0x1012404", VA = "0x1012404")]
		private void UpdateDatabaseNames()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1012668", Offset = "0x1012668", VA = "0x1012668")]
		private void UpdateDatabases()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public static class UIAnimator
	{
		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 DEFAULT_START_POSITION;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 DEFAULT_START_ROTATION;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Vector3 DEFAULT_START_SCALE;

		[Token(Token = "0x40023B4")]
		public const float DEFAULT_START_ALPHA = 1f;

		[Token(Token = "0x40023B5")]
		public const bool DefaultAnimationEnabledState = false;

		[Token(Token = "0x40023B6")]
		public const Direction DefaultDirection = Direction.Left;

		[Token(Token = "0x40023B7")]
		public const RotateMode DefaultRotateMode = RotateMode.FastBeyond360;

		[Token(Token = "0x40023B8")]
		public const LoopType DefaultLoopType = LoopType.Yoyo;

		[Token(Token = "0x40023B9")]
		public const EaseType DefaultEaseType = EaseType.Ease;

		[Token(Token = "0x40023BA")]
		public const Ease DefaultEase = Ease.Linear;

		[Token(Token = "0x40023BB")]
		public const float DefaultDuration = 1f;

		[Token(Token = "0x40023BC")]
		public const float DefaultStartDelay = 0f;

		[Token(Token = "0x40023BD")]
		public const int DefaultNumberOfLoops = -1;

		[Token(Token = "0x40023BE")]
		public const float DefaultDurationOnComplete = 0.05f;

		[Token(Token = "0x40023BF")]
		public const float DefaultDurationInitLoop = 0.2f;

		[Token(Token = "0x40023C0")]
		public const float DefaultDurationResetTarget = 0.1f;

		[Token(Token = "0x40023C1")]
		public const int DefaultVibrato = 10;

		[Token(Token = "0x40023C2")]
		public const float DefaultElasticity = 1f;

		[Token(Token = "0x170004CC")]
		private static DoozySettings Settings
		{
			[Token(Token = "0x600235A")]
			[Address(RVA = "0x10129BC", Offset = "0x10129BC", VA = "0x10129BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x1012848", Offset = "0x1012848", VA = "0x1012848")]
		public static Tween MoveTween(RectTransform target, UIAnimation animation, Vector3 startValue, Vector3 endValue)
		{
			return null;
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x1012A64", Offset = "0x1012A64", VA = "0x1012A64")]
		public static Vector3 MoveLoopPositionA(UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x1012A94", Offset = "0x1012A94", VA = "0x1012A94")]
		public static Vector3 MoveLoopPositionB(UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x1012AC4", Offset = "0x1012AC4", VA = "0x1012AC4")]
		public static Tween MoveLoopTween(RectTransform target, UIAnimation animation, Vector3 startValue)
		{
			return null;
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x1012C14", Offset = "0x1012C14", VA = "0x1012C14")]
		public static Tween MovePunchTween(RectTransform target, UIAnimation animation)
		{
			return null;
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x1012D28", Offset = "0x1012D28", VA = "0x1012D28")]
		public static Tween MoveStateTween(RectTransform target, UIAnimation animation, Vector3 startValue)
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x1012E60", Offset = "0x1012E60", VA = "0x1012E60")]
		public static Tween RotateTween(RectTransform target, UIAnimation animation, Vector3 startValue, Vector3 endValue)
		{
			return null;
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x1013084", Offset = "0x1013084", VA = "0x1013084")]
		public static Vector3 RotateLoopRotationA(UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x10130B4", Offset = "0x10130B4", VA = "0x10130B4")]
		public static Vector3 RotateLoopRotationB(UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x10130E4", Offset = "0x10130E4", VA = "0x10130E4")]
		public static Tween RotateLoopTween(RectTransform target, UIAnimation animation, Vector3 startValue)
		{
			return null;
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x1013234", Offset = "0x1013234", VA = "0x1013234")]
		public static Tween RotatePunchTween(RectTransform target, UIAnimation animation)
		{
			return null;
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x1013348", Offset = "0x1013348", VA = "0x1013348")]
		public static Tween RotateStateTween(RectTransform target, UIAnimation animation, Vector3 startValue)
		{
			return null;
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x1013494", Offset = "0x1013494", VA = "0x1013494")]
		public static Tween ScaleTween(RectTransform target, UIAnimation animation, Vector3 startValue, Vector3 endValue)
		{
			return null;
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x1013694", Offset = "0x1013694", VA = "0x1013694")]
		public static Tween ScaleLoopTween(RectTransform target, UIAnimation animation)
		{
			return null;
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x10137C0", Offset = "0x10137C0", VA = "0x10137C0")]
		public static Tween ScalePunchTween(RectTransform target, UIAnimation animation)
		{
			return null;
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x10138D8", Offset = "0x10138D8", VA = "0x10138D8")]
		public static Tween ScaleStateTween(RectTransform target, UIAnimation animation, Vector3 startValue)
		{
			return null;
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x1013A24", Offset = "0x1013A24", VA = "0x1013A24")]
		public static Tween FadeTween(RectTransform target, UIAnimation animation, float startValue, float endValue)
		{
			return null;
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1013C80", Offset = "0x1013C80", VA = "0x1013C80")]
		public static Tween FadeLoopTween(RectTransform target, UIAnimation animation)
		{
			return null;
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x1013E70", Offset = "0x1013E70", VA = "0x1013E70")]
		public static Tween FadeStateTween(RectTransform target, UIAnimation animation, float startValue)
		{
			return null;
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x1014058", Offset = "0x1014058", VA = "0x1014058")]
		public static void Move(RectTransform target, UIAnimation animation, Vector3 startValue, Vector3 endValue, bool instantAction = false, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x101464C", Offset = "0x101464C", VA = "0x101464C")]
		public static void Rotate(RectTransform target, UIAnimation animation, Vector3 startValue, Vector3 endValue, bool instantAction = false, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x10149F8", Offset = "0x10149F8", VA = "0x10149F8")]
		public static void Scale(RectTransform target, UIAnimation animation, Vector3 startValue, Vector3 endValue, bool instantAction = false, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x1014D7C", Offset = "0x1014D7C", VA = "0x1014D7C")]
		public static void Fade(RectTransform target, UIAnimation animation, float startValue, float endValue, bool instantAction = false, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x1015124", Offset = "0x1015124", VA = "0x1015124")]
		public static void MoveLoop(RectTransform target, UIAnimation animation, Vector3 startValue, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x10156A4", Offset = "0x10156A4", VA = "0x10156A4")]
		public static void RotateLoop(RectTransform target, UIAnimation animation, Vector3 startValue, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x1015C2C", Offset = "0x1015C2C", VA = "0x1015C2C")]
		public static void ScaleLoop(RectTransform target, UIAnimation animation, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x1016158", Offset = "0x1016158", VA = "0x1016158")]
		public static void FadeLoop(RectTransform target, UIAnimation animation, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x101672C", Offset = "0x101672C", VA = "0x101672C")]
		public static void MovePunch(RectTransform target, UIAnimation animation, Vector3 startValue, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x1016A4C", Offset = "0x1016A4C", VA = "0x1016A4C")]
		public static void RotatePunch(RectTransform target, UIAnimation animation, Vector3 startValue, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x1016D6C", Offset = "0x1016D6C", VA = "0x1016D6C")]
		public static void ScalePunch(RectTransform target, UIAnimation animation, Vector3 startValue, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x101708C", Offset = "0x101708C", VA = "0x101708C")]
		public static void MoveState(RectTransform target, UIAnimation animation, Vector3 startValue, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x1017394", Offset = "0x1017394", VA = "0x1017394")]
		public static void RotateState(RectTransform target, UIAnimation animation, Vector3 startValue, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x101769C", Offset = "0x101769C", VA = "0x101769C")]
		public static void ScaleState(RectTransform target, UIAnimation animation, Vector3 startValue, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x10179A4", Offset = "0x10179A4", VA = "0x10179A4")]
		public static void FadeState(RectTransform target, UIAnimation animation, float startValue, [Optional] UnityAction onStartCallback, [Optional] UnityAction onCompleteCallback)
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x1017C90", Offset = "0x1017C90", VA = "0x1017C90")]
		public static Vector3 GetAnimationMoveFrom(RectTransform target, UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x1017FE8", Offset = "0x1017FE8", VA = "0x1017FE8")]
		public static Vector3 GetAnimationMoveTo(RectTransform target, UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x10180F8", Offset = "0x10180F8", VA = "0x10180F8")]
		public static Vector3 GetAnimationRotateFrom(UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x10181C4", Offset = "0x10181C4", VA = "0x10181C4")]
		public static Vector3 GetAnimationRotateTo(UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x10182A4", Offset = "0x10182A4", VA = "0x10182A4")]
		public static Vector3 GetAnimationScaleFrom(UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x1018360", Offset = "0x1018360", VA = "0x1018360")]
		public static Vector3 GetAnimationScaleTo(UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x1018428", Offset = "0x1018428", VA = "0x1018428")]
		public static float GetAnimationFadeFrom(UIAnimation animation, float startValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x1018478", Offset = "0x1018478", VA = "0x1018478")]
		public static float GetAnimationFadeTo(UIAnimation animation, float startValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x10184C8", Offset = "0x10184C8", VA = "0x10184C8")]
		public static Direction ReverseDirection(Direction direction)
		{
			return default(Direction);
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x1017D9C", Offset = "0x1017D9C", VA = "0x1017D9C")]
		public static Vector3 GetToPositionByDirection(RectTransform target, UIAnimation animation, Vector3 startValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x10143F4", Offset = "0x10143F4", VA = "0x10143F4")]
		public static string GetTweenId(RectTransform target, AnimationType animationType, AnimationAction animationAction)
		{
			return null;
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x10184E8", Offset = "0x10184E8", VA = "0x10184E8")]
		public static void ResetCanvasGroup(RectTransform target, bool interactable = true, bool blocksRaycasts = true)
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x10185E0", Offset = "0x10185E0", VA = "0x10185E0")]
		public static void StopAnimations(RectTransform target, AnimationType animationType, bool complete = true)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x10129C4", Offset = "0x10129C4", VA = "0x10129C4")]
		private static void SetEase(this Tween tween, Move move)
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x1012FE4", Offset = "0x1012FE4", VA = "0x1012FE4")]
		private static void SetEase(this Tween tween, Rotate rotate)
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x10135F4", Offset = "0x10135F4", VA = "0x10135F4")]
		private static void SetEase(this Tween tween, Scale scale)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x1013BE0", Offset = "0x1013BE0", VA = "0x1013BE0")]
		private static void SetEase(this Tween tween, Fade fade)
		{
		}
	}
}
namespace Doozy.Engine.Touchy
{
	[Token(Token = "0x200055A")]
	public static class CardinalDirection
	{
		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector2 None;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2 Up;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2 Down;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector2 Right;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Vector2 Left;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Vector2 UpRight;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly Vector2 UpLeft;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly Vector2 DownRight;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly Vector2 DownLeft;

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x1018FCC", Offset = "0x1018FCC", VA = "0x1018FCC")]
		public static Vector2 Get(Swipe swipe)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200055B")]
	public enum GestureType
	{
		[Token(Token = "0x40023F8")]
		Tap,
		[Token(Token = "0x40023F9")]
		LongTap,
		[Token(Token = "0x40023FA")]
		Swipe
	}
	[Token(Token = "0x200055C")]
	public enum SimpleSwipe
	{
		[Token(Token = "0x40023FC")]
		None,
		[Token(Token = "0x40023FD")]
		Left,
		[Token(Token = "0x40023FE")]
		Right,
		[Token(Token = "0x40023FF")]
		Up,
		[Token(Token = "0x4002400")]
		Down
	}
	[Token(Token = "0x200055D")]
	public enum Swipe
	{
		[Token(Token = "0x4002402")]
		None,
		[Token(Token = "0x4002403")]
		UpLeft,
		[Token(Token = "0x4002404")]
		Up,
		[Token(Token = "0x4002405")]
		UpRight,
		[Token(Token = "0x4002406")]
		Left,
		[Token(Token = "0x4002407")]
		Right,
		[Token(Token = "0x4002408")]
		DownLeft,
		[Token(Token = "0x4002409")]
		Down,
		[Token(Token = "0x400240A")]
		DownRight
	}
	[Token(Token = "0x200055E")]
	[AddComponentMenu("Doozy/Touchy/Gesture Listener", 13)]
	[DefaultExecutionOrder(-100)]
	public class GestureListener : MonoBehaviour
	{
		[Token(Token = "0x2000560")]
		[CompilerGenerated]
		private sealed class <SendGameEventsInTheNextFrame>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GestureListener <>4__this;

			[Token(Token = "0x170004CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023AF")]
				[Address(RVA = "0x101A6D4", Offset = "0x101A6D4", VA = "0x101A6D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023B1")]
				[Address(RVA = "0x101A71C", Offset = "0x101A71C", VA = "0x101A71C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x101A408", Offset = "0x101A408", VA = "0x101A408")]
			[DebuggerHidden]
			public <SendGameEventsInTheNextFrame>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60023AD")]
			[Address(RVA = "0x101A654", Offset = "0x101A654", VA = "0x101A654", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023AE")]
			[Address(RVA = "0x101A658", Offset = "0x101A658", VA = "0x101A658", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B0")]
			[Address(RVA = "0x101A6DC", Offset = "0x101A6DC", VA = "0x101A6DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugMode;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool GlobalListener;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool OverrideTarget;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TargetGameObject;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GestureType GestureType;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Swipe SwipeDirection;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TouchInfoEvent OnGestureEvent;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<TouchInfo> OnGestureAction;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> GameEvents;

		[Token(Token = "0x170004CD")]
		private static TouchySettings Settings
		{
			[Token(Token = "0x6002396")]
			[Address(RVA = "0x1019238", Offset = "0x1019238", VA = "0x1019238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CE")]
		private bool DebugComponent
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0x101936C", Offset = "0x101936C", VA = "0x101936C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x10193A4", Offset = "0x10193A4", VA = "0x10193A4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x1019588", Offset = "0x1019588", VA = "0x1019588")]
		private void Awake()
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x1019798", Offset = "0x1019798", VA = "0x1019798")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x10199C8", Offset = "0x10199C8", VA = "0x10199C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x101979C", Offset = "0x101979C", VA = "0x101979C")]
		private void RegisterToTouchDetector()
		{
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0x10199CC", Offset = "0x10199CC", VA = "0x10199CC")]
		private void UnregisterFromTouchDetector()
		{
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x1019E1C", Offset = "0x1019E1C", VA = "0x1019E1C")]
		private void HandleTap(TouchInfo touchInfo)
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x101A0D4", Offset = "0x101A0D4", VA = "0x101A0D4")]
		private void HandleLongTap(TouchInfo touchInfo)
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x101A1F8", Offset = "0x101A1F8", VA = "0x101A1F8")]
		private void HandleSwipe(TouchInfo touchInfo)
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x1019F3C", Offset = "0x1019F3C", VA = "0x1019F3C")]
		private bool HasValidTarget(TouchInfo touchInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x1019FF8", Offset = "0x1019FF8", VA = "0x1019FF8")]
		private void TriggerListener(TouchInfo touchInfo)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x101A32C", Offset = "0x101A32C", VA = "0x101A32C")]
		private void SendGameEvents()
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x101A394", Offset = "0x101A394", VA = "0x101A394")]
		[IteratorStateMachine(typeof(<SendGameEventsInTheNextFrame>d__25))]
		private IEnumerator SendGameEventsInTheNextFrame()
		{
			return null;
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x101A430", Offset = "0x101A430", VA = "0x101A430")]
		private static GestureListener AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x101A438", Offset = "0x101A438", VA = "0x101A438")]
		private static GestureListener AddToScene(GameObject parent, bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x101A5CC", Offset = "0x101A5CC", VA = "0x101A5CC")]
		public GestureListener()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class SimulatedTouch
	{
		[Token(Token = "0x400241B")]
		private const BindingFlags FLAGS = BindingFlags.Instance | BindingFlags.NonPublic;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, FieldInfo> Fields;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object m_touch;

		[Token(Token = "0x170004D1")]
		public bool WasModified
		{
			[Token(Token = "0x60023B2")]
			[Address(RVA = "0x101A724", Offset = "0x101A724", VA = "0x101A724")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0x101A72C", Offset = "0x101A72C", VA = "0x101A72C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170004D2")]
		public int FingerId
		{
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0x101A950", Offset = "0x101A950", VA = "0x101A950")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0x101A9F0", Offset = "0x101A9F0", VA = "0x101A9F0")]
			set
			{
			}
		}

		[Token(Token = "0x170004D3")]
		public Vector2 Position
		{
			[Token(Token = "0x60023B8")]
			[Address(RVA = "0x101AAD8", Offset = "0x101AAD8", VA = "0x101AAD8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60023B9")]
			[Address(RVA = "0x101AB78", Offset = "0x101AB78", VA = "0x101AB78")]
			set
			{
			}
		}

		[Token(Token = "0x170004D4")]
		public Vector2 RawPosition
		{
			[Token(Token = "0x60023BA")]
			[Address(RVA = "0x101AC6C", Offset = "0x101AC6C", VA = "0x101AC6C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x101AD0C", Offset = "0x101AD0C", VA = "0x101AD0C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D5")]
		public Vector2 DeltaPosition
		{
			[Token(Token = "0x60023BC")]
			[Address(RVA = "0x101AE00", Offset = "0x101AE00", VA = "0x101AE00")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x101AEA0", Offset = "0x101AEA0", VA = "0x101AEA0")]
			set
			{
			}
		}

		[Token(Token = "0x170004D6")]
		public float DeltaTime
		{
			[Token(Token = "0x60023BE")]
			[Address(RVA = "0x101AF94", Offset = "0x101AF94", VA = "0x101AF94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023BF")]
			[Address(RVA = "0x101B034", Offset = "0x101B034", VA = "0x101B034")]
			set
			{
			}
		}

		[Token(Token = "0x170004D7")]
		public int TapCount
		{
			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x101B11C", Offset = "0x101B11C", VA = "0x101B11C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60023C1")]
			[Address(RVA = "0x101B1BC", Offset = "0x101B1BC", VA = "0x101B1BC")]
			set
			{
			}
		}

		[Token(Token = "0x170004D8")]
		public TouchPhase Phase
		{
			[Token(Token = "0x60023C2")]
			[Address(RVA = "0x101B2A4", Offset = "0x101B2A4", VA = "0x101B2A4")]
			get
			{
				return default(TouchPhase);
			}
			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x101B344", Offset = "0x101B344", VA = "0x101B344")]
			set
			{
			}
		}

		[Token(Token = "0x170004D9")]
		public float Pressure
		{
			[Token(Token = "0x60023C4")]
			[Address(RVA = "0x101B42C", Offset = "0x101B42C", VA = "0x101B42C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023C5")]
			[Address(RVA = "0x101B4CC", Offset = "0x101B4CC", VA = "0x101B4CC")]
			set
			{
			}
		}

		[Token(Token = "0x170004DA")]
		public float MaximumPossiblePressure
		{
			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x101B5B4", Offset = "0x101B5B4", VA = "0x101B5B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x101B654", Offset = "0x101B654", VA = "0x101B654")]
			set
			{
			}
		}

		[Token(Token = "0x170004DB")]
		public TouchType Type
		{
			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x101B73C", Offset = "0x101B73C", VA = "0x101B73C")]
			get
			{
				return default(TouchType);
			}
			[Token(Token = "0x60023C9")]
			[Address(RVA = "0x101B7DC", Offset = "0x101B7DC", VA = "0x101B7DC")]
			set
			{
			}
		}

		[Token(Token = "0x170004DC")]
		public float AltitudeAngle
		{
			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x101B8C4", Offset = "0x101B8C4", VA = "0x101B8C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023CB")]
			[Address(RVA = "0x101B964", Offset = "0x101B964", VA = "0x101B964")]
			set
			{
			}
		}

		[Token(Token = "0x170004DD")]
		public float AzimuthAngle
		{
			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x101BA4C", Offset = "0x101BA4C", VA = "0x101BA4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x101BAEC", Offset = "0x101BAEC", VA = "0x101BAEC")]
			set
			{
			}
		}

		[Token(Token = "0x170004DE")]
		public float Radius
		{
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x101BBD4", Offset = "0x101BBD4", VA = "0x101BBD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x101BC74", Offset = "0x101BC74", VA = "0x101BC74")]
			set
			{
			}
		}

		[Token(Token = "0x170004DF")]
		public float RadiusVariance
		{
			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x101BD5C", Offset = "0x101BD5C", VA = "0x101BD5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x101BDFC", Offset = "0x101BDFC", VA = "0x101BDFC")]
			set
			{
			}
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x101A738", Offset = "0x101A738", VA = "0x101A738")]
		public SimulatedTouch()
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x101A7BC", Offset = "0x101A7BC", VA = "0x101A7BC")]
		static SimulatedTouch()
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x101BEE4", Offset = "0x101BEE4", VA = "0x101BEE4")]
		public Touch Get()
		{
			return default(Touch);
		}
	}
	[Token(Token = "0x2000562")]
	[AddComponentMenu("Doozy/Touchy/Touch Detector", 13)]
	[DisallowMultipleComponent]
	[DefaultExecutionOrder(-200)]
	public class TouchDetector : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TouchDetector s_instance;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<TouchInfo> OnTapAction;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<TouchInfo> OnLongTapAction;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<TouchInfo> OnSwipeAction;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 m_currentSwipe;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_swipeEnded;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TouchInfo m_currentTouchInfo;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<Touch> m_touches;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Touch m_touch;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private PointerEventData m_pointerEventData;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<RaycastResult> m_raycastResults;

		[Token(Token = "0x170004E0")]
		public static TouchDetector Instance
		{
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x1019CB4", Offset = "0x1019CB4", VA = "0x1019CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E1")]
		private static TouchySettings Settings
		{
			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x101C0CC", Offset = "0x101C0CC", VA = "0x101C0CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E2")]
		public static bool ApplicationIsQuitting
		{
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x101C0D0", Offset = "0x101C0D0", VA = "0x101C0D0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023D7")]
			[Address(RVA = "0x101C118", Offset = "0x101C118", VA = "0x101C118")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004E3")]
		public static float SwipeLength
		{
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0x101C164", Offset = "0x101C164", VA = "0x101C164")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004E4")]
		public static float LongTapDuration
		{
			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x101C180", Offset = "0x101C180", VA = "0x101C180")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004E5")]
		private static bool DebugComponent
		{
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x101C19C", Offset = "0x101C19C", VA = "0x101C19C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E6")]
		public bool TouchInProgress
		{
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x101C1BC", Offset = "0x101C1BC", VA = "0x101C1BC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x101C1C4", Offset = "0x101C1C4", VA = "0x101C1C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004E7")]
		public TouchInfo CurrentTouchInfo
		{
			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x101C1D0", Offset = "0x101C1D0", VA = "0x101C1D0")]
			get
			{
				return default(TouchInfo);
			}
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x101BF60", Offset = "0x101BF60", VA = "0x101BF60")]
		protected TouchDetector()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x101C1E0", Offset = "0x101C1E0", VA = "0x101C1E0")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void RunOnStart()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x101C220", Offset = "0x101C220", VA = "0x101C220")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x101C8BC", Offset = "0x101C8BC", VA = "0x101C8BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x101CD30", Offset = "0x101CD30", VA = "0x101CD30")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x101CD74", Offset = "0x101CD74", VA = "0x101CD74", Slot = "4")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x101CDF8", Offset = "0x101CDF8", VA = "0x101CDF8", Slot = "5")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x101CE7C", Offset = "0x101CE7C", VA = "0x101CE7C", Slot = "6")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x101CF00", Offset = "0x101CF00", VA = "0x101CF00")]
		public void SetDraggedObject(GameObject target)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x101C5AC", Offset = "0x101C5AC", VA = "0x101C5AC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x101C8C0", Offset = "0x101C8C0", VA = "0x101C8C0")]
		private void DetectTouch()
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x101D430", Offset = "0x101D430", VA = "0x101D430")]
		private void UpdateCurrentTouchInfo(Touch touch)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x101D7F8", Offset = "0x101D7F8", VA = "0x101D7F8")]
		private void HandleSwipe(TouchInfo touchInfo)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x101D8A4", Offset = "0x101D8A4", VA = "0x101D8A4")]
		private void HandleTap(TouchInfo touchInfo)
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x101D950", Offset = "0x101D950", VA = "0x101D950")]
		private void HandleLongTap(TouchInfo touchInfo)
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x10196F0", Offset = "0x10196F0", VA = "0x10196F0")]
		public static void Init()
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x101D9FC", Offset = "0x101D9FC", VA = "0x101D9FC")]
		public static Vector2 GetCardinalDirection(Swipe swipe)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x101DA50", Offset = "0x101DA50", VA = "0x101DA50")]
		public static Swipe GetSwipe(SimpleSwipe simpleSwipe, bool reverse = false)
		{
			return default(Swipe);
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x101DAC0", Offset = "0x101DAC0", VA = "0x101DAC0")]
		public static SimpleSwipe GetSimpleSwipe(Swipe swipe, bool reverse = false)
		{
			return default(SimpleSwipe);
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x101D57C", Offset = "0x101D57C", VA = "0x101D57C")]
		public static Swipe GetSwipeDirection(Vector2 direction)
		{
			return default(Swipe);
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x101DB24", Offset = "0x101DB24", VA = "0x101DB24")]
		public static SimpleSwipe GetSimpleSwipeDirection(Vector2 direction)
		{
			return default(SimpleSwipe);
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x101C044", Offset = "0x101C044", VA = "0x101C044")]
		private static TouchDetector AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000563")]
	public static class TouchHelper
	{
		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SimulatedTouch s_lastSimulatedTouch;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Touch> s_touches;

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x101CF08", Offset = "0x101CF08", VA = "0x101CF08")]
		public static List<Touch> GetTouches()
		{
			return null;
		}
	}
	[Token(Token = "0x2000564")]
	public struct TouchInfo
	{
		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Touch Touch;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Swipe Direction;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 RawDirection;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector2 StartPosition;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector2 EndPosition;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 Velocity;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float StartTime;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float EndTime;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float Duration;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool Tap;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool LongTap;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float Distance;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float LongestDistance;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject GameObject;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject DraggedObject;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector2 CurrentTouchPosition;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector2 PreviousTouchPosition;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float TouchDeltaTime;

		[Token(Token = "0x170004E8")]
		public bool IsDragging
		{
			[Token(Token = "0x60023F4")]
			[Address(RVA = "0x101DD54", Offset = "0x101DD54", VA = "0x101DD54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E9")]
		public Vector2 TouchVelocity
		{
			[Token(Token = "0x60023F5")]
			[Address(RVA = "0x101DDB4", Offset = "0x101DDB4", VA = "0x101DDB4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x101D36C", Offset = "0x101D36C", VA = "0x101D36C")]
		public void Update(Touch touch, [Optional] GameObject gameObject)
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x101DDC4", Offset = "0x101DDC4", VA = "0x101DDC4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000565")]
	public class TouchInfoEvent : UnityEvent<TouchInfo>
	{
		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x1019540", Offset = "0x1019540", VA = "0x1019540")]
		public TouchInfoEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000566")]
	public class TouchySettings : ScriptableObject
	{
		[Token(Token = "0x400243F")]
		public const string FILE_NAME = "TouchySettings";

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TouchySettings s_instance;

		[Token(Token = "0x4002441")]
		public const float LONG_TAP_DURATION_DEFAULT_VALUE = 0.4f;

		[Token(Token = "0x4002442")]
		public const float LONG_TAP_DURATION_MAX = 1f;

		[Token(Token = "0x4002443")]
		public const float LONG_TAP_DURATION_MIN = 0.2f;

		[Token(Token = "0x4002444")]
		public const float SWIPE_LENGTH_DEFAULT_VALUE = 2f;

		[Token(Token = "0x4002445")]
		public const float SWIPE_LENGTH_MAX = 200f;

		[Token(Token = "0x4002446")]
		public const float SWIPE_LENGTH_MIN = 0.1f;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LongTapDuration;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0.1f, 200f)]
		public float SwipeLength;

		[Token(Token = "0x170004EA")]
		private static string ResourcesPath
		{
			[Token(Token = "0x60023F9")]
			[Address(RVA = "0x101E0A0", Offset = "0x101E0A0", VA = "0x101E0A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EB")]
		public static TouchySettings Instance
		{
			[Token(Token = "0x60023FA")]
			[Address(RVA = "0x101923C", Offset = "0x101923C", VA = "0x101923C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x101E0F8", Offset = "0x101E0F8", VA = "0x101E0F8")]
		private void Reset()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x101E108", Offset = "0x101E108", VA = "0x101E108")]
		public void Reset(bool saveAssets)
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x101E11C", Offset = "0x101E11C", VA = "0x101E11C")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x101E184", Offset = "0x101E184", VA = "0x101E184")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x101E1EC", Offset = "0x101E1EC", VA = "0x101E1EC")]
		public TouchySettings()
		{
		}
	}
}
namespace Doozy.Engine.Themes
{
	[Serializable]
	[Token(Token = "0x2000567")]
	public struct ColorId : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Color m_color;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private byte[] SerializedGuid;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Guid m_id;

		[Token(Token = "0x170004EC")]
		public Guid Id
		{
			[Token(Token = "0x6002400")]
			[Address(RVA = "0x101E200", Offset = "0x101E200", VA = "0x101E200")]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x6002401")]
			[Address(RVA = "0x101E20C", Offset = "0x101E20C", VA = "0x101E20C")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public Color Color
		{
			[Token(Token = "0x6002402")]
			[Address(RVA = "0x101E214", Offset = "0x101E214", VA = "0x101E214")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002403")]
			[Address(RVA = "0x101E220", Offset = "0x101E220", VA = "0x101E220")]
			set
			{
			}
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x101E22C", Offset = "0x101E22C", VA = "0x101E22C")]
		public ColorId(Color color)
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x101E27C", Offset = "0x101E27C", VA = "0x101E27C")]
		public ColorId(Guid id, Color color)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x101E290", Offset = "0x101E290", VA = "0x101E290", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x101E2BC", Offset = "0x101E2BC", VA = "0x101E2BC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x101E2DC", Offset = "0x101E2DC", VA = "0x101E2DC")]
		public void SetId(Guid newGuid)
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x101E2E4", Offset = "0x101E2E4", VA = "0x101E2E4")]
		public void SetColor(Color color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000568")]
	public struct FontAssetId : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private byte[] SerializedGuid;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private Guid m_id;

		[Token(Token = "0x170004EE")]
		public Guid Id
		{
			[Token(Token = "0x600240A")]
			[Address(RVA = "0x101E2F0", Offset = "0x101E2F0", VA = "0x101E2F0")]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x600240B")]
			[Address(RVA = "0x101E2FC", Offset = "0x101E2FC", VA = "0x101E2FC")]
			set
			{
			}
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x101E304", Offset = "0x101E304", VA = "0x101E304", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x101E330", Offset = "0x101E330", VA = "0x101E330", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x101E350", Offset = "0x101E350", VA = "0x101E350")]
		public void SetId(Guid newGuid)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000569")]
	public struct FontId : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Font m_font;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private byte[] SerializedGuid;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Guid m_id;

		[Token(Token = "0x170004EF")]
		public Guid Id
		{
			[Token(Token = "0x600240F")]
			[Address(RVA = "0x101E358", Offset = "0x101E358", VA = "0x101E358")]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x6002410")]
			[Address(RVA = "0x101E364", Offset = "0x101E364", VA = "0x101E364")]
			set
			{
			}
		}

		[Token(Token = "0x170004F0")]
		public Font Font
		{
			[Token(Token = "0x6002411")]
			[Address(RVA = "0x101E36C", Offset = "0x101E36C", VA = "0x101E36C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002412")]
			[Address(RVA = "0x101E374", Offset = "0x101E374", VA = "0x101E374")]
			set
			{
			}
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x101E37C", Offset = "0x101E37C", VA = "0x101E37C")]
		public FontId(Font font)
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x101E3B8", Offset = "0x101E3B8", VA = "0x101E3B8")]
		public FontId(Guid id, Font font)
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x101E3C8", Offset = "0x101E3C8", VA = "0x101E3C8", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x101E3F4", Offset = "0x101E3F4", VA = "0x101E3F4", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x101E414", Offset = "0x101E414", VA = "0x101E414")]
		public void SetId(Guid newGuid)
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x101E41C", Offset = "0x101E41C", VA = "0x101E41C")]
		public void SetFont(Font font)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056A")]
	public struct LabelId : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string m_label;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private byte[] SerializedGuid;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Guid m_id;

		[Token(Token = "0x170004F1")]
		public Guid Id
		{
			[Token(Token = "0x6002419")]
			[Address(RVA = "0x101E424", Offset = "0x101E424", VA = "0x101E424")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x170004F2")]
		public string Label
		{
			[Token(Token = "0x600241A")]
			[Address(RVA = "0x101E430", Offset = "0x101E430", VA = "0x101E430")]
			get
			{
				return null;
			}
			[Token(Token = "0x600241B")]
			[Address(RVA = "0x101E438", Offset = "0x101E438", VA = "0x101E438")]
			set
			{
			}
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x101E440", Offset = "0x101E440", VA = "0x101E440")]
		public LabelId(string label)
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x101E47C", Offset = "0x101E47C", VA = "0x101E47C")]
		public LabelId(Guid guid, string label)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x101E48C", Offset = "0x101E48C", VA = "0x101E48C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x101E4B8", Offset = "0x101E4B8", VA = "0x101E4B8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x101E4D8", Offset = "0x101E4D8", VA = "0x101E4D8")]
		public void SetId(Guid newGuid)
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x101E4E0", Offset = "0x101E4E0", VA = "0x101E4E0")]
		public void SetLabel(string label)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056B")]
	public struct SpriteId : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Sprite m_sprite;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private byte[] SerializedGuid;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Guid m_id;

		[Token(Token = "0x170004F3")]
		public Guid Id
		{
			[Token(Token = "0x6002422")]
			[Address(RVA = "0x101E4E8", Offset = "0x101E4E8", VA = "0x101E4E8")]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x6002423")]
			[Address(RVA = "0x101E4F4", Offset = "0x101E4F4", VA = "0x101E4F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004F4")]
		public Sprite Sprite
		{
			[Token(Token = "0x6002424")]
			[Address(RVA = "0x101E4FC", Offset = "0x101E4FC", VA = "0x101E4FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002425")]
			[Address(RVA = "0x101E504", Offset = "0x101E504", VA = "0x101E504")]
			set
			{
			}
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x101E50C", Offset = "0x101E50C", VA = "0x101E50C")]
		public SpriteId(Sprite sprite)
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x101E548", Offset = "0x101E548", VA = "0x101E548")]
		public SpriteId(Guid id, Sprite sprite)
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x101E558", Offset = "0x101E558", VA = "0x101E558", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x101E584", Offset = "0x101E584", VA = "0x101E584", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x101E5A4", Offset = "0x101E5A4", VA = "0x101E5A4")]
		public void SetId(Guid newGuid)
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x101E5AC", Offset = "0x101E5AC", VA = "0x101E5AC")]
		public void SetSprite(Sprite sprite)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056C")]
	public struct TextureId : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Texture m_texture;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private byte[] SerializedGuid;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Guid m_id;

		[Token(Token = "0x170004F5")]
		public Guid Id
		{
			[Token(Token = "0x600242C")]
			[Address(RVA = "0x101E5B4", Offset = "0x101E5B4", VA = "0x101E5B4")]
			get
			{
				return default(Guid);
			}
			[Token(Token = "0x600242D")]
			[Address(RVA = "0x101E5C0", Offset = "0x101E5C0", VA = "0x101E5C0")]
			set
			{
			}
		}

		[Token(Token = "0x170004F6")]
		public Texture Texture
		{
			[Token(Token = "0x600242E")]
			[Address(RVA = "0x101E5C8", Offset = "0x101E5C8", VA = "0x101E5C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600242F")]
			[Address(RVA = "0x101E5D0", Offset = "0x101E5D0", VA = "0x101E5D0")]
			set
			{
			}
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x101E5D8", Offset = "0x101E5D8", VA = "0x101E5D8")]
		public TextureId(Texture texture)
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x101E614", Offset = "0x101E614", VA = "0x101E614")]
		public TextureId(Guid id, Texture texture)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x101E624", Offset = "0x101E624", VA = "0x101E624", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x101E650", Offset = "0x101E650", VA = "0x101E650", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x101E670", Offset = "0x101E670", VA = "0x101E670")]
		public void SetId(Guid newGuid)
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x101E678", Offset = "0x101E678", VA = "0x101E678")]
		public void SetTexture(Texture texture)
		{
		}
	}
	[Token(Token = "0x200056D")]
	[AddComponentMenu("Doozy/Themes/Targets/Color Target Image", 13)]
	[DefaultExecutionOrder(-100)]
	public class ColorTargetImage : ThemeTarget
	{
		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image Image;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool OverrideAlpha;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Alpha;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_previousAlphaValue;

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x101E680", Offset = "0x101E680", VA = "0x101E680")]
		private void Update()
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x101E770", Offset = "0x101E770", VA = "0x101E770", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x101E6B4", Offset = "0x101E6B4", VA = "0x101E6B4")]
		public void SetAlpha(float value)
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x101E96C", Offset = "0x101E96C", VA = "0x101E96C")]
		private void Reset()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x101E9D8", Offset = "0x101E9D8", VA = "0x101E9D8")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x101EA88", Offset = "0x101EA88", VA = "0x101EA88")]
		public ColorTargetImage()
		{
		}
	}
	[Token(Token = "0x200056E")]
	[AddComponentMenu("Doozy/Themes/Targets/Color Target ParticleSystem", 13)]
	[DefaultExecutionOrder(-100)]
	public class ColorTargetParticleSystem : ThemeTarget
	{
		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ParticleSystem ParticleSystem;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool OverrideAlpha;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Alpha;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_previousAlphaValue;

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x101EB04", Offset = "0x101EB04", VA = "0x101EB04")]
		private void Update()
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x101EC58", Offset = "0x101EC58", VA = "0x101EC58", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x101EB38", Offset = "0x101EB38", VA = "0x101EB38")]
		public void SetAlpha(float value)
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x101EDD4", Offset = "0x101EDD4", VA = "0x101EDD4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x101EE40", Offset = "0x101EE40", VA = "0x101EE40")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x101EEF0", Offset = "0x101EEF0", VA = "0x101EEF0")]
		public ColorTargetParticleSystem()
		{
		}
	}
	[Token(Token = "0x200056F")]
	[AddComponentMenu("Doozy/Themes/Targets/Color Target RawImage", 13)]
	[DefaultExecutionOrder(-100)]
	public class ColorTargetRawImage : ThemeTarget
	{
		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RawImage Image;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool OverrideAlpha;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Alpha;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_previousAlphaValue;

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x101EEFC", Offset = "0x101EEFC", VA = "0x101EEFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x101EFEC", Offset = "0x101EFEC", VA = "0x101EFEC", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x101EF30", Offset = "0x101EF30", VA = "0x101EF30")]
		public void SetAlpha(float value)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x101F138", Offset = "0x101F138", VA = "0x101F138")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x101F1A4", Offset = "0x101F1A4", VA = "0x101F1A4")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x101F254", Offset = "0x101F254", VA = "0x101F254")]
		public ColorTargetRawImage()
		{
		}
	}
	[Token(Token = "0x2000570")]
	[AddComponentMenu("Doozy/Themes/Targets/Color Target Selectable", 13)]
	[DefaultExecutionOrder(-100)]
	public class ColorTargetSelectable : ThemeTarget
	{
		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Guid NormalColorPropertyId;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Guid HighlightedColorPropertyId;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Guid PressedColorPropertyId;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Guid SelectedColorPropertyId;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Guid DisabledColorPropertyId;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Selectable Selectable;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private byte[] NormalPropertyIdSerializedGuid;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private byte[] HighlightedPropertyIdSerializedGuid;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private byte[] PressedPropertyIdSerializedGuid;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private byte[] SelectedPropertyIdSerializedGuid;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private byte[] DisabledPropertyIdSerializedGuid;

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x101F260", Offset = "0x101F260", VA = "0x101F260", Slot = "6")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x101F588", Offset = "0x101F588", VA = "0x101F588", Slot = "10")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x101F688", Offset = "0x101F688", VA = "0x101F688", Slot = "11")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x101F744", Offset = "0x101F744", VA = "0x101F744", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x101FA80", Offset = "0x101FA80", VA = "0x101FA80")]
		private void Reset()
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x101FB28", Offset = "0x101FB28", VA = "0x101FB28")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x101FBD8", Offset = "0x101FBD8", VA = "0x101FBD8")]
		public ColorTargetSelectable()
		{
		}
	}
	[Token(Token = "0x2000571")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Themes/Targets/Color Target SpriteRenderer", 13)]
	public class ColorTargetSpriteRenderer : ThemeTarget
	{
		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SpriteRenderer SpriteRenderer;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool OverrideAlpha;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Alpha;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_previousAlphaValue;

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x101FC5C", Offset = "0x101FC5C", VA = "0x101FC5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x101FD3C", Offset = "0x101FD3C", VA = "0x101FD3C", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x101FC90", Offset = "0x101FC90", VA = "0x101FC90")]
		public void SetAlpha(float value)
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x101FE80", Offset = "0x101FE80", VA = "0x101FE80")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x101FEEC", Offset = "0x101FEEC", VA = "0x101FEEC")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x101FF9C", Offset = "0x101FF9C", VA = "0x101FF9C")]
		public ColorTargetSpriteRenderer()
		{
		}
	}
	[Token(Token = "0x2000572")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Themes/Targets/Color Target Text", 13)]
	public class ColorTargetText : ThemeTarget
	{
		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text Text;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool OverrideAlpha;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Alpha;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_previousAlphaValue;

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x101FFA8", Offset = "0x101FFA8", VA = "0x101FFA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x1020098", Offset = "0x1020098", VA = "0x1020098", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x101FFDC", Offset = "0x101FFDC", VA = "0x101FFDC")]
		public void SetAlpha(float value)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x10201E4", Offset = "0x10201E4", VA = "0x10201E4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x1020250", Offset = "0x1020250", VA = "0x1020250")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x1020300", Offset = "0x1020300", VA = "0x1020300")]
		public ColorTargetText()
		{
		}
	}
	[Token(Token = "0x2000573")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Themes/Targets/Color Target TextMeshPro", 13)]
	public class ColorTargetTextMeshPro : ThemeTarget
	{
		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool OverrideAlpha;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float Alpha;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_previousAlphaValue;

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x102030C", Offset = "0x102030C", VA = "0x102030C")]
		private void Update()
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x1020330", Offset = "0x1020330", VA = "0x1020330", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x102032C", Offset = "0x102032C", VA = "0x102032C")]
		public void SetAlpha(float value)
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x1020334", Offset = "0x1020334", VA = "0x1020334")]
		private void Reset()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x102039C", Offset = "0x102039C", VA = "0x102039C")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x10203A0", Offset = "0x10203A0", VA = "0x10203A0")]
		public ColorTargetTextMeshPro()
		{
		}
	}
	[Token(Token = "0x2000574")]
	[AddComponentMenu("Doozy/Themes/Targets/Color Target UnityEvent", 13)]
	[DefaultExecutionOrder(-100)]
	public class ColorTargetUnityEvent : ThemeTarget
	{
		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ColorEvent Event;

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x10203AC", Offset = "0x10203AC", VA = "0x10203AC", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x10204C4", Offset = "0x10204C4", VA = "0x10204C4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x1020530", Offset = "0x1020530", VA = "0x1020530")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x10205AC", Offset = "0x10205AC", VA = "0x10205AC")]
		public ColorTargetUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000575")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Themes/Targets/Font Target Text", 13)]
	public class FontTargetText : ThemeTarget
	{
		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text Text;

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x10205B0", Offset = "0x10205B0", VA = "0x10205B0", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x1020700", Offset = "0x1020700", VA = "0x1020700")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x102076C", Offset = "0x102076C", VA = "0x102076C")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x102081C", Offset = "0x102081C", VA = "0x102081C")]
		public FontTargetText()
		{
		}
	}
	[Token(Token = "0x2000576")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Themes/Targets/Font Target TextMeshPro", 13)]
	public class FontTargetTextMeshPro : ThemeTarget
	{
		[Token(Token = "0x6002469")]
		[Address(RVA = "0x1020820", Offset = "0x1020820", VA = "0x1020820", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x1020824", Offset = "0x1020824", VA = "0x1020824")]
		private void Reset()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x102088C", Offset = "0x102088C", VA = "0x102088C")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x1020890", Offset = "0x1020890", VA = "0x1020890")]
		public FontTargetTextMeshPro()
		{
		}
	}
	[Token(Token = "0x2000577")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Themes/Targets/Sprite Target Image", 13)]
	public class SpriteTargetImage : ThemeTarget
	{
		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image Image;

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x1020894", Offset = "0x1020894", VA = "0x1020894", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x10209C8", Offset = "0x10209C8", VA = "0x10209C8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x1020A34", Offset = "0x1020A34", VA = "0x1020A34")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x1020AE4", Offset = "0x1020AE4", VA = "0x1020AE4")]
		public SpriteTargetImage()
		{
		}
	}
	[Token(Token = "0x2000578")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Themes/Targets/Sprite Target Selectable", 13)]
	public class SpriteTargetSelectable : ThemeTarget
	{
		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Guid HighlightedSpritePropertyId;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Guid PressedSpritePropertyId;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Guid SelectedSpritePropertyId;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Guid DisabledSpritePropertyId;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Selectable Selectable;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private byte[] HighlightedPropertyIdSerializedGuid;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private byte[] PressedPropertyIdSerializedGuid;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private byte[] SelectedPropertyIdSerializedGuid;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private byte[] DisabledPropertyIdSerializedGuid;

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x1020AE8", Offset = "0x1020AE8", VA = "0x1020AE8", Slot = "6")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x1020C0C", Offset = "0x1020C0C", VA = "0x1020C0C", Slot = "10")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x1020C8C", Offset = "0x1020C8C", VA = "0x1020C8C", Slot = "11")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x1020CEC", Offset = "0x1020CEC", VA = "0x1020CEC", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x1020F40", Offset = "0x1020F40", VA = "0x1020F40")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x1020FDC", Offset = "0x1020FDC", VA = "0x1020FDC")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x102108C", Offset = "0x102108C", VA = "0x102108C")]
		public SpriteTargetSelectable()
		{
		}
	}
	[Token(Token = "0x2000579")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Themes/Targets/Sprite Target SpriteRenderer", 13)]
	public class SpriteTargetSpriteRenderer : ThemeTarget
	{
		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SpriteRenderer SpriteRenderer;

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x1021104", Offset = "0x1021104", VA = "0x1021104", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x1021238", Offset = "0x1021238", VA = "0x1021238")]
		private void Reset()
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x10212A4", Offset = "0x10212A4", VA = "0x10212A4")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x1021354", Offset = "0x1021354", VA = "0x1021354")]
		public SpriteTargetSpriteRenderer()
		{
		}
	}
	[Token(Token = "0x200057A")]
	[AddComponentMenu("Doozy/Themes/Targets/Sprite Target UnityEvent", 13)]
	[DefaultExecutionOrder(-100)]
	public class SpriteTargetUnityEvent : ThemeTarget
	{
		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SpriteEvent Event;

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x1021358", Offset = "0x1021358", VA = "0x1021358", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x1021474", Offset = "0x1021474", VA = "0x1021474")]
		private void Reset()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x10214E0", Offset = "0x10214E0", VA = "0x10214E0")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x102155C", Offset = "0x102155C", VA = "0x102155C")]
		public SpriteTargetUnityEvent()
		{
		}
	}
	[Token(Token = "0x200057B")]
	[AddComponentMenu("Doozy/Themes/Targets/Texture Target RawImage", 13)]
	[DefaultExecutionOrder(-100)]
	public class TextureTargetRawImage : ThemeTarget
	{
		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RawImage Image;

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x1021560", Offset = "0x1021560", VA = "0x1021560", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x1021694", Offset = "0x1021694", VA = "0x1021694")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x1021700", Offset = "0x1021700", VA = "0x1021700")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x10217B0", Offset = "0x10217B0", VA = "0x10217B0")]
		public TextureTargetRawImage()
		{
		}
	}
	[Token(Token = "0x200057C")]
	[AddComponentMenu("Doozy/Themes/Targets/Texture Target UnityEvent", 13)]
	[DefaultExecutionOrder(-100)]
	public class TextureTargetUnityEvent : ThemeTarget
	{
		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextureEvent Event;

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x10217B4", Offset = "0x10217B4", VA = "0x10217B4", Slot = "12")]
		public override void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x10218D0", Offset = "0x10218D0", VA = "0x10218D0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x102193C", Offset = "0x102193C", VA = "0x102193C")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x10219B8", Offset = "0x10219B8", VA = "0x10219B8")]
		public TextureTargetUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057D")]
	public abstract class ThemeTarget : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Guid ThemeId;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Guid VariantId;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Guid PropertyId;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private byte[] ThemeIdSerializedGuid;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private byte[] VariantIdSerializedGuid;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private byte[] PropertyIdSerializedGuid;

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x10219BC", Offset = "0x10219BC", VA = "0x10219BC", Slot = "6")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x1021A8C", Offset = "0x1021A8C", VA = "0x1021A8C", Slot = "7")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x1021A90", Offset = "0x1021A90", VA = "0x1021A90", Slot = "8")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x1021E14", Offset = "0x1021E14", VA = "0x1021E14", Slot = "9")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x101F624", Offset = "0x101F624", VA = "0x101F624", Slot = "10")]
		public virtual void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x101F6FC", Offset = "0x101F6FC", VA = "0x101F6FC", Slot = "11")]
		public virtual void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x101E8BC", Offset = "0x101E8BC", VA = "0x101E8BC", Slot = "12")]
		public virtual void UpdateTarget(ThemeData theme)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x101EA94", Offset = "0x101EA94", VA = "0x101EA94")]
		protected ThemeTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057E")]
	public class ThemeData : ScriptableObject, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002492")]
		public const string UNNAMED_THEME_NAME = "Unnamed Theme";

		[Token(Token = "0x4002493")]
		public const string UNNAMED_VARIANT_NAME = "Unnamed Variant";

		[Token(Token = "0x4002494")]
		public const string UNNAMED_PROPERTY = "Unnamed Property";

		[Token(Token = "0x4002495")]
		public const string DEFAULT_VARIANT_NAME = "Default";

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_themeName;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private byte[] SerializedGuid;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Guid m_id;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ThemeVariantData m_activeVariant;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<LabelId> ColorLabels;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LabelId> SpriteLabels;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<LabelId> TextureLabels;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<LabelId> FontLabels;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LabelId> FontAssetLabels;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<string> VariantsNames;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<ThemeVariantData> Variants;

		[Token(Token = "0x40024A1")]
		private const string COLOR_DEFAULT_COLOR_LABEL_1 = "Primary";

		[Token(Token = "0x40024A2")]
		private const string COLOR_DEFAULT_COLOR_LABEL_2 = "Secondary";

		[Token(Token = "0x40024A3")]
		private const string COLOR_DEFAULT_COLOR_LABEL_3 = "Accent 1";

		[Token(Token = "0x40024A4")]
		private const string COLOR_DEFAULT_COLOR_LABEL_4 = "Accent 2";

		[Token(Token = "0x40024A5")]
		private const string COLOR_DEFAULT_COLOR_LABEL_5 = "Text";

		[Token(Token = "0x40024A6")]
		private const string COLOR_DEFAULT_COLOR_LABEL_6 = "Disabled";

		[Token(Token = "0x170004F7")]
		private static UILanguagePack UILabels
		{
			[Token(Token = "0x6002490")]
			[Address(RVA = "0x1022074", Offset = "0x1022074", VA = "0x1022074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F8")]
		public ThemeVariantData ActiveVariant
		{
			[Token(Token = "0x6002491")]
			[Address(RVA = "0x101E8C0", Offset = "0x101E8C0", VA = "0x101E8C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F9")]
		public Guid Id
		{
			[Token(Token = "0x6002492")]
			[Address(RVA = "0x10222D0", Offset = "0x10222D0", VA = "0x10222D0")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x170004FA")]
		public string ThemeName
		{
			[Token(Token = "0x6002493")]
			[Address(RVA = "0x10222DC", Offset = "0x10222DC", VA = "0x10222DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002494")]
			[Address(RVA = "0x10222E4", Offset = "0x10222E4", VA = "0x10222E4")]
			set
			{
			}
		}

		[Token(Token = "0x170004FB")]
		public bool IsGeneralTheme
		{
			[Token(Token = "0x6002495")]
			[Address(RVA = "0x10222EC", Offset = "0x10222EC", VA = "0x10222EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x1022340", Offset = "0x1022340", VA = "0x1022340")]
		public ThemeData()
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x1022544", Offset = "0x1022544", VA = "0x1022544", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1022570", Offset = "0x1022570", VA = "0x1022570", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x1022590", Offset = "0x1022590", VA = "0x1022590")]
		public void ActivateVariant(ThemeVariantData variant)
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x1022618", Offset = "0x1022618", VA = "0x1022618")]
		public void ActivateVariant(Guid variantId)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x10228A4", Offset = "0x10228A4", VA = "0x10228A4")]
		public void ActivateVariant(string variantName)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x10229E4", Offset = "0x10229E4", VA = "0x10229E4")]
		public void AddColorProperty(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x1022CE4", Offset = "0x1022CE4", VA = "0x1022CE4")]
		public void AddSpriteProperty(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x1022F7C", Offset = "0x1022F7C", VA = "0x1022F7C")]
		public void AddTextureProperty(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x1023214", Offset = "0x1023214", VA = "0x1023214")]
		public void AddFontProperty(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x10234AC", Offset = "0x10234AC", VA = "0x10234AC")]
		public void AddFontAssetProperty(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x10234B0", Offset = "0x10234B0", VA = "0x10234B0")]
		public void AddVariant(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x10236C8", Offset = "0x10236C8", VA = "0x10236C8")]
		public bool ContainsColorProperty(Guid propertyId)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x10237C4", Offset = "0x10237C4", VA = "0x10237C4")]
		public bool ContainsSpriteProperty(Guid propertyId)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x10238C0", Offset = "0x10238C0", VA = "0x10238C0")]
		public bool ContainsTextureProperty(Guid propertyId)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x10239BC", Offset = "0x10239BC", VA = "0x10239BC")]
		public bool ContainsFontProperty(Guid propertyId)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x1023AB8", Offset = "0x1023AB8", VA = "0x1023AB8")]
		public bool ContainsFontAssetProperty(Guid propertyId)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x10226D4", Offset = "0x10226D4", VA = "0x10226D4")]
		public bool ContainsVariant(Guid variantGuid)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x1023BBC", Offset = "0x1023BBC", VA = "0x1023BBC")]
		public bool ContainsVariant(string variantName)
		{
			return default(bool);
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x10227C8", Offset = "0x10227C8", VA = "0x10227C8")]
		public ThemeVariantData GetVariant(Guid variantId)
		{
			return null;
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x1022900", Offset = "0x1022900", VA = "0x1022900")]
		public ThemeVariantData GetVariant(string variantName)
		{
			return null;
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x1023CD0", Offset = "0x1023CD0", VA = "0x1023CD0")]
		public int GetColorPropertyIndex(Guid id)
		{
			return default(int);
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x1023DE4", Offset = "0x1023DE4", VA = "0x1023DE4")]
		public int GetSpritePropertyIndex(Guid id)
		{
			return default(int);
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x1023DF8", Offset = "0x1023DF8", VA = "0x1023DF8")]
		public int GetTexturePropertyIndex(Guid id)
		{
			return default(int);
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x1023E0C", Offset = "0x1023E0C", VA = "0x1023E0C")]
		public int GetFontPropertyIndex(Guid id)
		{
			return default(int);
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1023E20", Offset = "0x1023E20", VA = "0x1023E20")]
		public int GetFontAssetPropertyIndex(Guid id)
		{
			return default(int);
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1023E34", Offset = "0x1023E34", VA = "0x1023E34")]
		public int GetVariantIndex(Guid id)
		{
			return default(int);
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x1023F30", Offset = "0x1023F30", VA = "0x1023F30")]
		public void Init(bool showProgress, bool saveAssets)
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x1024384", Offset = "0x1024384", VA = "0x1024384")]
		public void RemoveColorProperty(Guid deleteGuid, bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x1024804", Offset = "0x1024804", VA = "0x1024804")]
		public void RemoveSpriteProperty(Guid deleteGuid, bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1024B80", Offset = "0x1024B80", VA = "0x1024B80")]
		public void RemoveTextureProperty(Guid deleteGuid, bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x1024EFC", Offset = "0x1024EFC", VA = "0x1024EFC")]
		public void RemoveFontProperty(Guid deleteGuid, bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x1025278", Offset = "0x1025278", VA = "0x1025278")]
		public void RemoveFontAssetProperty(Guid deleteGuid, bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1023FF0", Offset = "0x1023FF0", VA = "0x1023FF0")]
		public void RefreshThemeVariants(bool showProgress, bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x1025C58", Offset = "0x1025C58", VA = "0x1025C58")]
		public bool RemoveVariant(ThemeVariantData data, bool performUndo = false, bool showDialog = false, bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x1022268", Offset = "0x1022268", VA = "0x1022268")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1025D8C", Offset = "0x1025D8C", VA = "0x1025D8C")]
		public void Sort(bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1022C7C", Offset = "0x1022C7C", VA = "0x1022C7C")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x1025A9C", Offset = "0x1025A9C", VA = "0x1025A9C")]
		public void UpdateVariantsNames(bool saveAssets)
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x10255DC", Offset = "0x10255DC", VA = "0x10255DC")]
		private void AddDefaultColorLabels()
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x102207C", Offset = "0x102207C", VA = "0x102207C")]
		private bool AddDefaultVariant(bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x1023CE4", Offset = "0x1023CE4", VA = "0x1023CE4")]
		private static int GetPropertyIndex(Guid id, List<LabelId> propertyList)
		{
			return default(int);
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x1024728", Offset = "0x1024728", VA = "0x1024728")]
		private static void RemoveProperty(Guid deleteGuid, List<LabelId> propertyList)
		{
		}
	}
	[Token(Token = "0x2000589")]
	[DefaultExecutionOrder(-200)]
	[DisallowMultipleComponent]
	[AddComponentMenu("Doozy/Themes/Theme Manager", 13)]
	public class ThemeManager : MonoBehaviour
	{
		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ThemeManager s_instance;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool s_initialized;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Dictionary<Guid, List<ThemeTarget>> ThemeTargets;

		[Token(Token = "0x170004FC")]
		public static ThemeManager Instance
		{
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0x1026140", Offset = "0x1026140", VA = "0x1026140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FD")]
		public static bool ApplicationIsQuitting
		{
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x10263A8", Offset = "0x10263A8", VA = "0x10263A8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x1026400", Offset = "0x1026400", VA = "0x1026400")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170004FE")]
		public static bool AutoSave
		{
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x102645C", Offset = "0x102645C", VA = "0x102645C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004FF")]
		public static ThemesDatabase Database
		{
			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x101F3A0", Offset = "0x101F3A0", VA = "0x101F3A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x1026138", Offset = "0x1026138", VA = "0x1026138")]
		protected ThemeManager()
		{
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x102647C", Offset = "0x102647C", VA = "0x102647C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void RunOnStart()
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x1026528", Offset = "0x1026528", VA = "0x1026528")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x102675C", Offset = "0x102675C", VA = "0x102675C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x10267E8", Offset = "0x10267E8", VA = "0x10267E8")]
		public ThemeData GetTheme(Guid themeId)
		{
			return null;
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x10268A4", Offset = "0x10268A4", VA = "0x10268A4")]
		public ThemeData GetTheme(string themeName)
		{
			return null;
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x1026B10", Offset = "0x1026B10", VA = "0x1026B10")]
		public ThemeVariantData GetVariant(Guid variantId)
		{
			return null;
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x1026F3C", Offset = "0x1026F3C", VA = "0x1026F3C")]
		public ThemeVariantData GetVariant(Guid themeId, Guid variantId)
		{
			return null;
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x1027080", Offset = "0x1027080", VA = "0x1027080")]
		public ThemeVariantData GetVariant(Guid themeId, string variantName)
		{
			return null;
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x10271A0", Offset = "0x10271A0", VA = "0x10271A0")]
		public ThemeVariantData GetVariant(string themeName, Guid variantId)
		{
			return null;
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x10272C0", Offset = "0x10272C0", VA = "0x10272C0")]
		public ThemeVariantData GetVariant(string themeName, string variantName)
		{
			return null;
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x10273A8", Offset = "0x10273A8", VA = "0x10273A8")]
		public static void ActivateVariant(Guid themeId, Guid variantId)
		{
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x1027BBC", Offset = "0x1027BBC", VA = "0x1027BBC")]
		public static void ActivateVariant(Guid themeId, string variantName)
		{
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x1027D00", Offset = "0x1027D00", VA = "0x1027D00")]
		public static void ActivateVariant(string themeName, Guid variantId)
		{
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1027E44", Offset = "0x1027E44", VA = "0x1027E44")]
		public static void ActivateVariant(string themeName, string variantName)
		{
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x1027F80", Offset = "0x1027F80", VA = "0x1027F80")]
		public static void ActivateVariant(Guid variantId)
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x1027500", Offset = "0x1027500", VA = "0x1027500")]
		public static void Init()
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x1028818", Offset = "0x1028818", VA = "0x1028818")]
		public static void LoadActiveVariant(ThemeData theme)
		{
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x1021AE4", Offset = "0x1021AE4", VA = "0x1021AE4")]
		public static void RegisterTarget(ThemeTarget target)
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x1027AF0", Offset = "0x1027AF0", VA = "0x1027AF0")]
		public static void SaveActiveVariant(ThemeData theme)
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x1021E68", Offset = "0x1021E68", VA = "0x1021E68")]
		public static void UnregisterTarget(ThemeTarget target)
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x1028B78", Offset = "0x1028B78", VA = "0x1028B78")]
		public static void UpdateTargets()
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x1027740", Offset = "0x1027740", VA = "0x1027740")]
		public static void UpdateTargets(ThemeData themeData)
		{
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x1028F4C", Offset = "0x1028F4C", VA = "0x1028F4C")]
		public static void UpdateTargets(Guid themeId)
		{
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x1026320", Offset = "0x1026320", VA = "0x1026320")]
		private static ThemeManager AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200058B")]
	public class ThemesDatabase : ScriptableObject
	{
		[Token(Token = "0x40024BA")]
		public const string GENERAL_THEME_NAME = "General";

		[Token(Token = "0x40024BB")]
		public const string THEME_ASSET_PREFIX = "Theme_";

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> ThemesNames;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ThemeData> Themes;

		[Token(Token = "0x17000500")]
		private static UILanguagePack UILabels
		{
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x10294E8", Offset = "0x10294E8", VA = "0x10294E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x10294F0", Offset = "0x10294F0", VA = "0x10294F0")]
		public bool AddTheme(ThemeData themeData, bool saveAssets)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x102891C", Offset = "0x102891C", VA = "0x102891C")]
		public bool Contains(Guid themeGuid)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x1029C34", Offset = "0x1029C34", VA = "0x1029C34")]
		public bool Contains(string themeName)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x1029E80", Offset = "0x1029E80", VA = "0x1029E80")]
		public bool CreateTheme(string themeName, bool showDialog = false, bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x1029EFC", Offset = "0x1029EFC", VA = "0x1029EFC")]
		public bool CreateTheme(string relativePath, string themeName, bool showDialog = false, bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x102A030", Offset = "0x102A030", VA = "0x102A030")]
		public bool DeleteThemeData(ThemeData themeData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x101F3A8", Offset = "0x101F3A8", VA = "0x101F3A8")]
		public ThemeData GetThemeData(Guid themeGuid)
		{
			return null;
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x1026928", Offset = "0x1026928", VA = "0x1026928")]
		public ThemeData GetThemeData(string themeName)
		{
			return null;
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x102A098", Offset = "0x102A098", VA = "0x102A098")]
		public int GetThemeIndex(Guid id)
		{
			return default(int);
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x1026BCC", Offset = "0x1026BCC", VA = "0x1026BCC")]
		public ThemeVariantData GetVariant(Guid variantId)
		{
			return null;
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x102A194", Offset = "0x102A194", VA = "0x102A194")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x102A20C", Offset = "0x102A20C", VA = "0x102A20C")]
		public bool ContainsTheme(string themeName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x102A2F0", Offset = "0x102A2F0", VA = "0x102A2F0")]
		public void InitializeThemes()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x102A464", Offset = "0x102A464", VA = "0x102A464")]
		public void RefreshDatabase(bool performUndo = true, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x102A3B0", Offset = "0x102A3B0", VA = "0x102A3B0")]
		public void RemoveDuplicates(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x1029A7C", Offset = "0x1029A7C", VA = "0x1029A7C")]
		public bool RemoveNullDatabases(bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x102A660", Offset = "0x102A660", VA = "0x102A660")]
		public bool RenameThemeData(ThemeData themeData, string newThemeName)
		{
			return default(bool);
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x102A6F0", Offset = "0x102A6F0", VA = "0x102A6F0")]
		public bool ResetDatabase()
		{
			return default(bool);
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x102A6F8", Offset = "0x102A6F8", VA = "0x102A6F8")]
		public void SearchForUnregisteredThemes(bool saveAssets)
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x1029A14", Offset = "0x1029A14", VA = "0x1029A14")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x102A9C8", Offset = "0x102A9C8", VA = "0x102A9C8")]
		public void Sort(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x102A5F8", Offset = "0x102A5F8", VA = "0x102A5F8")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x1029664", Offset = "0x1029664", VA = "0x1029664")]
		public void UpdateThemesNames(bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x102AC48", Offset = "0x102AC48", VA = "0x102AC48")]
		public static string[] GetThemesNames(ThemesDatabase database)
		{
			return null;
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x102AD6C", Offset = "0x102AD6C", VA = "0x102AD6C")]
		public static string[] GetVariantNames(ThemeData themeData)
		{
			return null;
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x102AE90", Offset = "0x102AE90", VA = "0x102AE90")]
		public static string GetThemeDataFilename(string themeName)
		{
			return null;
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x102AEF4", Offset = "0x102AEF4", VA = "0x102AEF4")]
		public ThemesDatabase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058E")]
	public class ThemesSettings : ScriptableObject
	{
		[Token(Token = "0x40024C2")]
		public const string FILE_NAME = "ThemesSettings";

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ThemesSettings s_instance;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ThemesDatabase database;

		[Token(Token = "0x40024C5")]
		public const bool DEFAULT_AUTO_SAVE = true;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool AutoSave;

		[Token(Token = "0x17000501")]
		private static string ResourcesPath
		{
			[Token(Token = "0x600251C")]
			[Address(RVA = "0x102C0E8", Offset = "0x102C0E8", VA = "0x102C0E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000502")]
		public static ThemesSettings Instance
		{
			[Token(Token = "0x600251D")]
			[Address(RVA = "0x102C140", Offset = "0x102C140", VA = "0x102C140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000503")]
		public static ThemesDatabase Database
		{
			[Token(Token = "0x600251E")]
			[Address(RVA = "0x102C270", Offset = "0x102C270", VA = "0x102C270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x102C2EC", Offset = "0x102C2EC", VA = "0x102C2EC")]
		public static void UpdateDatabase()
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x102C3A8", Offset = "0x102C3A8", VA = "0x102C3A8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x102C3B4", Offset = "0x102C3B4", VA = "0x102C3B4")]
		public void Reset(bool saveAssets)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x102C3C4", Offset = "0x102C3C4", VA = "0x102C3C4")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x102C42C", Offset = "0x102C42C", VA = "0x102C42C")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x102C494", Offset = "0x102C494", VA = "0x102C494")]
		public ThemesSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058F")]
	public class ThemeVariantData : ISerializationCallbackReceiver
	{
		[Token(Token = "0x40024C7")]
		public const string DEFAULT_THEME_VARIANT_NAME = "Unnamed Variant";

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_variantName;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private byte[] SerializedGuid;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Guid m_id;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ColorId> Colors;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SpriteId> Sprites;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<TextureId> Textures;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<FontId> Fonts;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<FontAssetId> FontAssets;

		[Token(Token = "0x17000504")]
		public static Color DefaultColor
		{
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x102C4A4", Offset = "0x102C4A4", VA = "0x102C4A4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000505")]
		public static Sprite DefaultSprite
		{
			[Token(Token = "0x6002526")]
			[Address(RVA = "0x102C4B8", Offset = "0x102C4B8", VA = "0x102C4B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000506")]
		public static Texture DefaultTexture
		{
			[Token(Token = "0x6002527")]
			[Address(RVA = "0x102C4C0", Offset = "0x102C4C0", VA = "0x102C4C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000507")]
		public static Font DefaultFont
		{
			[Token(Token = "0x6002528")]
			[Address(RVA = "0x102C4C8", Offset = "0x102C4C8", VA = "0x102C4C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000508")]
		public Guid Id
		{
			[Token(Token = "0x6002529")]
			[Address(RVA = "0x102C520", Offset = "0x102C520", VA = "0x102C520")]
			get
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x17000509")]
		public string VariantName
		{
			[Token(Token = "0x600252A")]
			[Address(RVA = "0x102C52C", Offset = "0x102C52C", VA = "0x102C52C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600252B")]
			[Address(RVA = "0x102C534", Offset = "0x102C534", VA = "0x102C534")]
			set
			{
			}
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x102C53C", Offset = "0x102C53C", VA = "0x102C53C")]
		public ThemeVariantData()
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x102C740", Offset = "0x102C740", VA = "0x102C740")]
		public ThemeVariantData(string variantName)
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x102C958", Offset = "0x102C958", VA = "0x102C958")]
		public ThemeVariantData(string variantName, List<LabelId> colorLabels, List<LabelId> spriteLabels, List<LabelId> textureLabels, List<LabelId> fontLabels, List<LabelId> fontAssetLabels)
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x102D28C", Offset = "0x102D28C", VA = "0x102D28C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x102D2B8", Offset = "0x102D2B8", VA = "0x102D2B8", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x102D2D8", Offset = "0x102D2D8", VA = "0x102D2D8")]
		public void AddColorProperty(Guid guid)
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x102D404", Offset = "0x102D404", VA = "0x102D404")]
		public void AddColorProperty(Guid guid, Color color)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x102D550", Offset = "0x102D550", VA = "0x102D550")]
		public bool ContainsColor(Guid propertyId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x102D634", Offset = "0x102D634", VA = "0x102D634")]
		public Color GetColor(Guid propertyId)
		{
			return default(Color);
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x102DA44", Offset = "0x102DA44", VA = "0x102DA44")]
		public void AddSpriteProperty(Guid guid)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x102DB44", Offset = "0x102DB44", VA = "0x102DB44")]
		public void AddSpriteProperty(Guid guid, Sprite sprite)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x102DC48", Offset = "0x102DC48", VA = "0x102DC48")]
		public bool ContainsSprite(Guid propertyId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x102DD2C", Offset = "0x102DD2C", VA = "0x102DD2C")]
		public Sprite GetSprite(Guid propertyId)
		{
			return null;
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x102E108", Offset = "0x102E108", VA = "0x102E108")]
		public void AddTextureProperty(Guid guid)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x102E208", Offset = "0x102E208", VA = "0x102E208")]
		public void AddTextureProperty(Guid guid, Texture texture)
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x102E30C", Offset = "0x102E30C", VA = "0x102E30C")]
		public bool ContainsTexture(Guid propertyId)
		{
			return default(bool);
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x102E3F0", Offset = "0x102E3F0", VA = "0x102E3F0")]
		public Texture GetTexture(Guid propertyId)
		{
			return null;
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x102E7CC", Offset = "0x102E7CC", VA = "0x102E7CC")]
		public void AddFontProperty(Guid guid)
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x102E8D0", Offset = "0x102E8D0", VA = "0x102E8D0")]
		public void AddFontProperty(Guid guid, Font font)
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x102E9D4", Offset = "0x102E9D4", VA = "0x102E9D4")]
		public bool ContainsFont(Guid propertyId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x102EAB8", Offset = "0x102EAB8", VA = "0x102EAB8")]
		public Font GetFont(Guid propertyId)
		{
			return null;
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x102CBC0", Offset = "0x102CBC0", VA = "0x102CBC0")]
		private void SyncColorIdsToLabelIds(List<LabelId> colorLabels)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x102CDA0", Offset = "0x102CDA0", VA = "0x102CDA0")]
		private void SyncSpriteIdsToLabelIds(List<LabelId> spriteLabels)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x102CF3C", Offset = "0x102CF3C", VA = "0x102CF3C")]
		private void SyncTextureIdsToLabelIds(List<LabelId> textureLabels)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x102D0D8", Offset = "0x102D0D8", VA = "0x102D0D8")]
		private void SyncFontIdsToLabelIds(List<LabelId> fontLabels)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x102D288", Offset = "0x102D288", VA = "0x102D288")]
		private void SyncFontAssetIdsToLabelIds(List<LabelId> fontAssetLabels)
		{
		}
	}
}
namespace Doozy.Engine.Soundy
{
	[Serializable]
	[Token(Token = "0x2000598")]
	public class AudioData
	{
		[Token(Token = "0x40024DC")]
		public const float DEFAULT_WEIGHT = 1f;

		[Token(Token = "0x40024DD")]
		public const float MAX_WEIGHT = 1f;

		[Token(Token = "0x40024DE")]
		public const float MIN_WEIGHT = 0f;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip AudioClip;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float Weight;

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x102F018", Offset = "0x102F018", VA = "0x102F018")]
		public AudioData()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x102F07C", Offset = "0x102F07C", VA = "0x102F07C")]
		public AudioData(AudioClip audioClip)
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x102F0D4", Offset = "0x102F0D4", VA = "0x102F0D4")]
		public AudioData(AudioClip audioClip, float weight)
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x102F054", Offset = "0x102F054", VA = "0x102F054")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000599")]
	public enum SoundSource
	{
		[Token(Token = "0x40024E2")]
		Soundy,
		[Token(Token = "0x40024E3")]
		AudioClip,
		[Token(Token = "0x40024E4")]
		MasterAudio
	}
	[Serializable]
	[Token(Token = "0x200059A")]
	public class SoundDatabase : ScriptableObject
	{
		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DatabaseName;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup OutputAudioMixerGroup;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> SoundNames;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SoundGroupData> Database;

		[Token(Token = "0x1700050A")]
		private static UILanguagePack UILabels
		{
			[Token(Token = "0x600255A")]
			[Address(RVA = "0x102F140", Offset = "0x102F140", VA = "0x102F140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700050B")]
		public bool HasSoundsWithMissingAudioClips
		{
			[Token(Token = "0x600255B")]
			[Address(RVA = "0x102F148", Offset = "0x102F148", VA = "0x102F148")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x102F4A8", Offset = "0x102F4A8", VA = "0x102F4A8")]
		public bool Add(SoundGroupData data, bool saveAssets)
		{
			return default(bool);
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x102F628", Offset = "0x102F628", VA = "0x102F628")]
		public SoundGroupData Add(string soundName, bool performUndo, bool saveAssets)
		{
			return null;
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x102F890", Offset = "0x102F890", VA = "0x102F890")]
		public bool Contains(string soundName)
		{
			return default(bool);
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x102FB48", Offset = "0x102FB48", VA = "0x102FB48")]
		public bool Contains(SoundGroupData soundGroupData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x102FBF4", Offset = "0x102FBF4", VA = "0x102FBF4")]
		public SoundGroupData GetData(string soundName)
		{
			return null;
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x102FD84", Offset = "0x102FD84", VA = "0x102FD84")]
		public void Initialize(bool saveAssets)
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x102FD90", Offset = "0x102FD90", VA = "0x102FD90")]
		public void RefreshDatabase(bool performUndo, bool saveAssets)
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x1030FFC", Offset = "0x1030FFC", VA = "0x1030FFC")]
		public bool Remove(SoundGroupData data, bool showDialog = false, bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x1031198", Offset = "0x1031198", VA = "0x1031198")]
		public void RemoveEntriesWithNoAudioClipsReferenced(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x1030510", Offset = "0x1030510", VA = "0x1030510")]
		public void RemoveDuplicateEntries(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x10303A4", Offset = "0x10303A4", VA = "0x10303A4")]
		public void RemoveUnnamedEntries(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x102F5C0", Offset = "0x102F5C0", VA = "0x102F5C0")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x103094C", Offset = "0x103094C", VA = "0x103094C")]
		public void Sort(bool performUndo, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x102FA78", Offset = "0x102FA78", VA = "0x102FA78")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x1030CD4", Offset = "0x1030CD4", VA = "0x1030CD4")]
		public void UpdateSoundNames(bool saveAssets)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x1030110", Offset = "0x1030110", VA = "0x1030110")]
		private bool AddNoSound(bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x102F558", Offset = "0x102F558", VA = "0x102F558")]
		private void AddObjectToAsset(UnityEngine.Object objectToAdd)
		{
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x1030740", Offset = "0x1030740", VA = "0x1030740")]
		private bool CheckAllDataForCorrectDatabaseName(bool saveAssets)
		{
			return default(bool);
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x10303A0", Offset = "0x10303A0", VA = "0x10303A0")]
		private void RemoveUnreferencedData(bool saveAssets = false)
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x1031344", Offset = "0x1031344", VA = "0x1031344")]
		public SoundDatabase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059C")]
	public class SoundGroupData : ScriptableObject
	{
		[Token(Token = "0x200059D")]
		public enum PlayMode
		{
			[Token(Token = "0x400250D")]
			Random,
			[Token(Token = "0x400250E")]
			Sequence
		}

		[Token(Token = "0x40024EE")]
		public const bool DEFAULT_IGNORE_LISTENER_PAUSE = true;

		[Token(Token = "0x40024EF")]
		public const bool DEFAULT_LOOP = false;

		[Token(Token = "0x40024F0")]
		public const bool DEFAULT_RESET_SEQUENCE_AFTER_INACTIVE_TIME = false;

		[Token(Token = "0x40024F1")]
		public const float DEFAULT_PITCH = 0f;

		[Token(Token = "0x40024F2")]
		public const float DEFAULT_SEQUENCE_RESET_TIME = 5f;

		[Token(Token = "0x40024F3")]
		public const float DEFAULT_SPATIAL_BLEND = 0f;

		[Token(Token = "0x40024F4")]
		public const float DEFAULT_VOLUME = 0f;

		[Token(Token = "0x40024F5")]
		public const float MAX_PITCH = 24f;

		[Token(Token = "0x40024F6")]
		public const float MAX_SPATIAL_BLEND = 1f;

		[Token(Token = "0x40024F7")]
		public const float MAX_VOLUME = 0f;

		[Token(Token = "0x40024F8")]
		public const float MIN_PITCH = -24f;

		[Token(Token = "0x40024F9")]
		public const float MIN_SPATIAL_BLEND = 0f;

		[Token(Token = "0x40024FA")]
		public const float MIN_VOLUME = -80f;

		[Token(Token = "0x40024FB")]
		public const PlayMode DEFAULT_PLAY_MODE = PlayMode.Random;

		[Token(Token = "0x40024FC")]
		public const string DEFAULT_SOUND_NAME = "No Sound";

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DatabaseName;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SoundName;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IgnoreListenerPause;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[MinMaxRange(-80f, 0f)]
		public RangedFloat Volume;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[MinMaxRange(-24f, 24f)]
		public RangedFloat Pitch;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0f, 1f)]
		public float SpatialBlend;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool Loop;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public PlayMode Mode;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ResetSequenceAfterInactiveTime;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float SequenceResetTime;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<AudioData> Sounds;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_lastPlayedSoundsIndex;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_lastPlayedSoundTime;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<AudioData> m_playedSounds;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioData m_lastPlayedAudioData;

		[Token(Token = "0x1700050C")]
		public bool HasMissingAudioClips
		{
			[Token(Token = "0x6002576")]
			[Address(RVA = "0x102F2B8", Offset = "0x102F2B8", VA = "0x102F2B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700050D")]
		public bool HasSound
		{
			[Token(Token = "0x6002577")]
			[Address(RVA = "0x1031540", Offset = "0x1031540", VA = "0x1031540")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700050E")]
		public float RandomPitch
		{
			[Token(Token = "0x6002578")]
			[Address(RVA = "0x10315D0", Offset = "0x10315D0", VA = "0x10315D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700050F")]
		public float RandomVolume
		{
			[Token(Token = "0x6002579")]
			[Address(RVA = "0x10316BC", Offset = "0x10316BC", VA = "0x10316BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x10317A8", Offset = "0x10317A8", VA = "0x10317A8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x103181C", Offset = "0x103181C", VA = "0x103181C")]
		public bool Contains(AudioClip audioClip)
		{
			return default(bool);
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x10319EC", Offset = "0x10319EC", VA = "0x10319EC")]
		public SoundyController Play(Transform followTarget, [Optional] AudioMixerGroup outputAudioMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x1031A44", Offset = "0x1031A44", VA = "0x1031A44")]
		public SoundyController Play(Vector3 position, [Optional] AudioMixerGroup outputAudioMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x1032478", Offset = "0x1032478", VA = "0x1032478")]
		public void PlaySoundPreview(AudioSource audioSource, AudioMixerGroup outputAudioMixerGroup, AudioClip audioClip)
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x103269C", Offset = "0x103269C", VA = "0x103269C")]
		public void PlaySoundPreview(AudioSource audioSource, AudioMixerGroup outputAudioMixerGroup)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x10326A4", Offset = "0x10326A4", VA = "0x10326A4")]
		public void StopSoundPreview(AudioSource audioSource)
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x102FAE0", Offset = "0x102FAE0", VA = "0x102FAE0")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x1031E38", Offset = "0x1031E38", VA = "0x1031E38")]
		private AudioData GetAudioData(PlayMode playMode)
		{
			return null;
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x1032724", Offset = "0x1032724", VA = "0x1032724")]
		public SoundGroupData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200059E")]
	public class SoundyDatabase : ScriptableObject
	{
		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> DatabaseNames;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SoundDatabase> SoundDatabases;

		[Token(Token = "0x17000510")]
		private static UILanguagePack UILabels
		{
			[Token(Token = "0x6002584")]
			[Address(RVA = "0x10327E8", Offset = "0x10327E8", VA = "0x10327E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x10327F0", Offset = "0x10327F0", VA = "0x10327F0")]
		public bool AddSoundDatabase(SoundDatabase database, bool saveAssets)
		{
			return default(bool);
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x1032E30", Offset = "0x1032E30", VA = "0x1032E30")]
		public bool Contains(string databaseName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x1033248", Offset = "0x1033248", VA = "0x1033248")]
		public bool Contains(string databaseName, string soundName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x1033480", Offset = "0x1033480", VA = "0x1033480")]
		public bool CreateSoundDatabase(string databaseName, bool showDialog = false, bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x10334FC", Offset = "0x10334FC", VA = "0x10334FC")]
		public bool CreateSoundDatabase(string relativePath, string databaseName, bool showDialog = false, bool saveAssets = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x10335D4", Offset = "0x10335D4", VA = "0x10335D4")]
		public bool DeleteDatabase(SoundDatabase database)
		{
			return default(bool);
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x103363C", Offset = "0x103363C", VA = "0x103363C")]
		public SoundGroupData GetAudioData(string databaseName, string soundName)
		{
			return null;
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x1033298", Offset = "0x1033298", VA = "0x1033298")]
		public SoundDatabase GetSoundDatabase(string databaseName)
		{
			return null;
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x103368C", Offset = "0x103368C", VA = "0x103368C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0x1033754", Offset = "0x1033754", VA = "0x1033754")]
		public void InitializeSoundDatabases()
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x10338A8", Offset = "0x10338A8", VA = "0x10338A8")]
		public void RefreshDatabase(bool performUndo = true, bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x103307C", Offset = "0x103307C", VA = "0x103307C")]
		public void RemoveNullDatabases(bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x1033AA0", Offset = "0x1033AA0", VA = "0x1033AA0")]
		public bool RenameSoundDatabase(SoundDatabase soundDatabase, string newDatabaseName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x1033B30", Offset = "0x1033B30", VA = "0x1033B30")]
		public void SearchForUnregisteredDatabases(bool saveAssets)
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x1032DC8", Offset = "0x1032DC8", VA = "0x1032DC8")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x1033A38", Offset = "0x1033A38", VA = "0x1033A38")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x1032964", Offset = "0x1032964", VA = "0x1032964")]
		public void UpdateDatabaseNames(bool saveAssets = false)
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x1033CC4", Offset = "0x1033CC4", VA = "0x1033CC4")]
		public SoundyDatabase()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	[DefaultExecutionOrder(-100)]
	public class SoundyController : MonoBehaviour
	{
		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SoundyController> s_database;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool s_pauseAllControllers;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool s_muteAllControllers;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_transform;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_followTarget;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource m_audioSource;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_inUse;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_playProgress;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isPaused;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isMuted;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_lastPlayedTime;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isPlaying;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_autoPaused;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool m_muted;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool m_paused;

		[Token(Token = "0x17000511")]
		private static bool DebugComponent
		{
			[Token(Token = "0x600259A")]
			[Address(RVA = "0x1033E70", Offset = "0x1033E70", VA = "0x1033E70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000512")]
		public static bool PauseAllControllers
		{
			[Token(Token = "0x600259B")]
			[Address(RVA = "0x1033FBC", Offset = "0x1033FBC", VA = "0x1033FBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600259C")]
			[Address(RVA = "0x1034014", Offset = "0x1034014", VA = "0x1034014")]
			set
			{
			}
		}

		[Token(Token = "0x17000513")]
		public static bool MuteAllControllers
		{
			[Token(Token = "0x600259D")]
			[Address(RVA = "0x10343F0", Offset = "0x10343F0", VA = "0x10343F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600259E")]
			[Address(RVA = "0x1034448", Offset = "0x1034448", VA = "0x1034448")]
			set
			{
			}
		}

		[Token(Token = "0x17000514")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x600259F")]
			[Address(RVA = "0x10346A4", Offset = "0x10346A4", VA = "0x10346A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025A0")]
			[Address(RVA = "0x10346AC", Offset = "0x10346AC", VA = "0x10346AC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000515")]
		public bool InUse
		{
			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x10346B4", Offset = "0x10346B4", VA = "0x10346B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0x10346BC", Offset = "0x10346BC", VA = "0x10346BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000516")]
		public float PlayProgress
		{
			[Token(Token = "0x60025A3")]
			[Address(RVA = "0x10346C8", Offset = "0x10346C8", VA = "0x10346C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025A4")]
			[Address(RVA = "0x10346D0", Offset = "0x10346D0", VA = "0x10346D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000517")]
		public bool IsPaused
		{
			[Token(Token = "0x60025A5")]
			[Address(RVA = "0x10346D8", Offset = "0x10346D8", VA = "0x10346D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025A6")]
			[Address(RVA = "0x103474C", Offset = "0x103474C", VA = "0x103474C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000518")]
		public bool IsMuted
		{
			[Token(Token = "0x60025A7")]
			[Address(RVA = "0x1034758", Offset = "0x1034758", VA = "0x1034758")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025A8")]
			[Address(RVA = "0x10347FC", Offset = "0x10347FC", VA = "0x10347FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000519")]
		public float LastPlayedTime
		{
			[Token(Token = "0x60025A9")]
			[Address(RVA = "0x1034808", Offset = "0x1034808", VA = "0x1034808")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025AA")]
			[Address(RVA = "0x1034810", Offset = "0x1034810", VA = "0x1034810")]
			private set
			{
			}
		}

		[Token(Token = "0x1700051A")]
		public float IdleDuration
		{
			[Token(Token = "0x60025AB")]
			[Address(RVA = "0x1034818", Offset = "0x1034818", VA = "0x1034818")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x1034838", Offset = "0x1034838", VA = "0x1034838")]
		private void Reset()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x10348A0", Offset = "0x10348A0", VA = "0x10348A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x1034A24", Offset = "0x1034A24", VA = "0x1034A24")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x1034AA4", Offset = "0x1034AA4", VA = "0x1034AA4")]
		private void Update()
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x1034FC8", Offset = "0x1034FC8", VA = "0x1034FC8")]
		public void Kill()
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x10350C8", Offset = "0x10350C8", VA = "0x10350C8")]
		public void Mute()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x1035188", Offset = "0x1035188", VA = "0x1035188")]
		public void Pause()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x103239C", Offset = "0x103239C", VA = "0x103239C")]
		public void Play()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x1035248", Offset = "0x1035248", VA = "0x1035248")]
		public void SetFollowTarget(Transform followTarget)
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x10322EC", Offset = "0x10322EC", VA = "0x10322EC")]
		public void SetOutputAudioMixerGroup(AudioMixerGroup outputAudioMixerGroup)
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x1032380", Offset = "0x1032380", VA = "0x1032380")]
		public void SetPosition(Vector3 position)
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x10321DC", Offset = "0x10321DC", VA = "0x10321DC")]
		public void SetSourceProperties(AudioClip clip, float volume, float pitch, bool loop, float spatialBlend)
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x1034D88", Offset = "0x1034D88", VA = "0x1034D88")]
		public void Stop()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x10345E8", Offset = "0x10345E8", VA = "0x10345E8")]
		public void Unmute()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x1034334", Offset = "0x1034334", VA = "0x1034334")]
		public void Unpause()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x1034E88", Offset = "0x1034E88", VA = "0x1034E88")]
		private void FollowTarget()
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x103486C", Offset = "0x103486C", VA = "0x103486C")]
		private void ResetController()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x1034C70", Offset = "0x1034C70", VA = "0x1034C70")]
		private void UpdateLastPlayedTime()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x1034C8C", Offset = "0x1034C8C", VA = "0x1034C8C")]
		private void UpdatePlayProgress()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x10355EC", Offset = "0x10355EC", VA = "0x10355EC")]
		public static SoundyController GetController()
		{
			return null;
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x1035794", Offset = "0x1035794", VA = "0x1035794")]
		public static void KillAll()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x1035940", Offset = "0x1035940", VA = "0x1035940")]
		public static void MuteAll()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x10359CC", Offset = "0x10359CC", VA = "0x10359CC")]
		public static void PauseAll()
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x10341B4", Offset = "0x10341B4", VA = "0x10341B4")]
		public static void RemoveNullControllersFromDatabase()
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x1035A58", Offset = "0x1035A58", VA = "0x1035A58")]
		public static void StopAll()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x1035C04", Offset = "0x1035C04", VA = "0x1035C04")]
		public static void UnmuteAll()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x1035C90", Offset = "0x1035C90", VA = "0x1035C90")]
		public static void UnpauseAll()
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x1035D18", Offset = "0x1035D18", VA = "0x1035D18")]
		public SoundyController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A2")]
	public class SoundyData
	{
		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundSource SoundSource;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DatabaseName;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SoundName;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip AudioClip;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioMixerGroup OutputAudioMixerGroup;

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x1035E8C", Offset = "0x1035E8C", VA = "0x1035E8C")]
		public SoundyData()
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x1035F34", Offset = "0x1035F34", VA = "0x1035F34")]
		public SoundGroupData GetAudioData()
		{
			return null;
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x1035EA8", Offset = "0x1035EA8", VA = "0x1035EA8")]
		public void Reset()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x1035FD0", Offset = "0x1035FD0", VA = "0x1035FD0")]
		public SoundyData SetAudioClip(AudioClip audioClip)
		{
			return null;
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x1035FEC", Offset = "0x1035FEC", VA = "0x1035FEC")]
		public SoundyData SetDatabaseName(string databaseName)
		{
			return null;
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x1036008", Offset = "0x1036008", VA = "0x1036008")]
		public SoundyData SetOutputAudioMixerGroup(AudioMixerGroup audioMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x1036024", Offset = "0x1036024", VA = "0x1036024")]
		public SoundyData SetSoundName(string soundName)
		{
			return null;
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x1036040", Offset = "0x1036040", VA = "0x1036040")]
		public SoundyData SetSoundSource(SoundSource soundSource)
		{
			return null;
		}
	}
	[Token(Token = "0x20005A3")]
	[DefaultExecutionOrder(-200)]
	[DisallowMultipleComponent]
	[AddComponentMenu("Doozy/Soundy/Soundy Manager", 13)]
	public class SoundyManager : MonoBehaviour
	{
		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SoundyManager s_instance;

		[Token(Token = "0x400252A")]
		public const string DATABASE = "Database";

		[Token(Token = "0x400252B")]
		public const string GENERAL = "General";

		[Token(Token = "0x400252C")]
		public const string NEW_SOUND_GROUP = "New Sound Group";

		[Token(Token = "0x400252D")]
		public const string NO_SOUND = "No Sound";

		[Token(Token = "0x400252E")]
		public const string SOUNDS = "Sounds";

		[Token(Token = "0x400252F")]
		public const string SOUNDY = "Soundy";

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool ApplicationIsQuitting;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool s_initialized;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static SoundyPooler s_pooler;

		[Token(Token = "0x1700051B")]
		public static SoundyManager Instance
		{
			[Token(Token = "0x60025D5")]
			[Address(RVA = "0x1036050", Offset = "0x1036050", VA = "0x1036050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051C")]
		public static SoundyPooler Pooler
		{
			[Token(Token = "0x60025D6")]
			[Address(RVA = "0x103621C", Offset = "0x103621C", VA = "0x103621C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051D")]
		public static SoundyDatabase Database
		{
			[Token(Token = "0x60025D7")]
			[Address(RVA = "0x103636C", Offset = "0x103636C", VA = "0x103636C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700051E")]
		private bool DebugComponent
		{
			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x1036370", Offset = "0x1036370", VA = "0x1036370")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x1036048", Offset = "0x1036048", VA = "0x1036048")]
		protected SoundyManager()
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x103638C", Offset = "0x103638C", VA = "0x103638C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void RunOnStart()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x10363DC", Offset = "0x10363DC", VA = "0x10363DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x1036194", Offset = "0x1036194", VA = "0x1036194")]
		public static SoundyManager AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x1036428", Offset = "0x1036428", VA = "0x1036428")]
		public static SoundyController GetController()
		{
			return null;
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x1036474", Offset = "0x1036474", VA = "0x1036474")]
		public static string GetSoundDatabaseFilename(string databaseName)
		{
			return null;
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x10364D8", Offset = "0x10364D8", VA = "0x10364D8")]
		public static void Init()
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x10365D4", Offset = "0x10365D4", VA = "0x10365D4")]
		public static void KillAllControllers()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x1036668", Offset = "0x1036668", VA = "0x1036668")]
		public static void MuteAllControllers()
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x10366FC", Offset = "0x10366FC", VA = "0x10366FC")]
		public static void MuteAllSounds()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x1036764", Offset = "0x1036764", VA = "0x1036764")]
		public static void PauseAllControllers()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x10367F8", Offset = "0x10367F8", VA = "0x10367F8")]
		public static void PauseAllSounds()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x1036860", Offset = "0x1036860", VA = "0x1036860")]
		public static SoundyController Play(string databaseName, string soundName, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x1036C94", Offset = "0x1036C94", VA = "0x1036C94")]
		public static SoundyController Play(AudioClip audioClip, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x1036F7C", Offset = "0x1036F7C", VA = "0x1036F7C")]
		public static SoundyController Play(string databaseName, string soundName, Transform followTarget)
		{
			return null;
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x1037380", Offset = "0x1037380", VA = "0x1037380")]
		public static SoundyController Play(AudioClip audioClip, Transform followTarget)
		{
			return null;
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x1037674", Offset = "0x1037674", VA = "0x1037674")]
		public static SoundyController Play(string databaseName, string soundName)
		{
			return null;
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x1037864", Offset = "0x1037864", VA = "0x1037864")]
		public static SoundyController Play(AudioClip audioClip)
		{
			return null;
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x1036D44", Offset = "0x1036D44", VA = "0x1036D44")]
		public static SoundyController Play(AudioClip audioClip, AudioMixerGroup outputAudioMixerGroup, Vector3 position, float volume = 1f, float pitch = 1f, bool loop = false, float spatialBlend = 1f)
		{
			return null;
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x1037418", Offset = "0x1037418", VA = "0x1037418")]
		public static SoundyController Play(AudioClip audioClip, AudioMixerGroup outputAudioMixerGroup, [Optional] Transform followTarget, float volume = 1f, float pitch = 1f, bool loop = false, float spatialBlend = 1f)
		{
			return null;
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x1037904", Offset = "0x1037904", VA = "0x1037904")]
		public static SoundyController Play(SoundyData data)
		{
			return null;
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x1037A38", Offset = "0x1037A38", VA = "0x1037A38")]
		public static void StopAllControllers()
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x1037ACC", Offset = "0x1037ACC", VA = "0x1037ACC")]
		public static void StopAllSounds()
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x1037B34", Offset = "0x1037B34", VA = "0x1037B34")]
		public static void UnmuteAllControllers()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x1037BC8", Offset = "0x1037BC8", VA = "0x1037BC8")]
		public static void UnmuteAllSounds()
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x1037C30", Offset = "0x1037C30", VA = "0x1037C30")]
		public static void UnpauseAllControllers()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x1037CC4", Offset = "0x1037CC4", VA = "0x1037CC4")]
		public static void UnpauseAllSounds()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	[DefaultExecutionOrder(-100)]
	public class SoundyPooler : MonoBehaviour
	{
		[Token(Token = "0x20005A6")]
		[CompilerGenerated]
		private sealed class <KillIdleControllersEnumerator>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400253A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400253B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundyPooler <>4__this;

			[Token(Token = "0x17000526")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600260D")]
				[Address(RVA = "0x1038DD0", Offset = "0x1038DD0", VA = "0x1038DD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000527")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600260F")]
				[Address(RVA = "0x1038E18", Offset = "0x1038E18", VA = "0x1038E18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600260A")]
			[Address(RVA = "0x1038AC4", Offset = "0x1038AC4", VA = "0x1038AC4")]
			[DebuggerHidden]
			public <KillIdleControllersEnumerator>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x600260B")]
			[Address(RVA = "0x1038BC8", Offset = "0x1038BC8", VA = "0x1038BC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600260C")]
			[Address(RVA = "0x1038BCC", Offset = "0x1038BCC", VA = "0x1038BCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600260E")]
			[Address(RVA = "0x1038DD8", Offset = "0x1038DD8", VA = "0x1038DD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SoundyController> s_pool;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Coroutine m_idleCheckCoroutine;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaitForSecondsRealtime m_idleCheckIntervalWaitForSecondsRealtime;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SoundyController m_tempController;

		[Token(Token = "0x1700051F")]
		public static SoundyPooler Instance
		{
			[Token(Token = "0x60025F3")]
			[Address(RVA = "0x1037D2C", Offset = "0x1037D2C", VA = "0x1037D2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000520")]
		private static List<SoundyController> Pool
		{
			[Token(Token = "0x60025F4")]
			[Address(RVA = "0x1037D30", Offset = "0x1037D30", VA = "0x1037D30")]
			get
			{
				return null;
			}
			[Token(Token = "0x60025F5")]
			[Address(RVA = "0x1037DE0", Offset = "0x1037DE0", VA = "0x1037DE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000521")]
		public static bool AutoKillIdleControllers
		{
			[Token(Token = "0x60025F6")]
			[Address(RVA = "0x1037E38", Offset = "0x1037E38", VA = "0x1037E38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000522")]
		public static float ControllerIdleKillDuration
		{
			[Token(Token = "0x60025F7")]
			[Address(RVA = "0x1037F84", Offset = "0x1037F84", VA = "0x1037F84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000523")]
		public static float IdleCheckInterval
		{
			[Token(Token = "0x60025F8")]
			[Address(RVA = "0x1037FA0", Offset = "0x1037FA0", VA = "0x1037FA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000524")]
		public static int MinimumNumberOfControllers
		{
			[Token(Token = "0x60025F9")]
			[Address(RVA = "0x10365B8", Offset = "0x10365B8", VA = "0x10365B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000525")]
		private bool DebugComponent
		{
			[Token(Token = "0x60025FA")]
			[Address(RVA = "0x1037FBC", Offset = "0x1037FBC", VA = "0x1037FBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x1037FD8", Offset = "0x1037FD8", VA = "0x1037FD8")]
		private void Reset()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x1037FF4", Offset = "0x1037FF4", VA = "0x1037FF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x1038120", Offset = "0x1038120", VA = "0x1038120")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x10381C8", Offset = "0x10381C8", VA = "0x10381C8")]
		public static void ClearPool(bool keepMinimumNumberOfControllers = false)
		{
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x1031D4C", Offset = "0x1031D4C", VA = "0x1031D4C")]
		public static SoundyController GetControllerFromPool()
		{
			return null;
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x1038790", Offset = "0x1038790", VA = "0x1038790")]
		public static void PopulatePool(int numberOfControllers)
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x1035250", Offset = "0x1035250", VA = "0x1035250")]
		public static void PutControllerInPool(SoundyController controller)
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x1038018", Offset = "0x1038018", VA = "0x1038018")]
		private void StartIdleCheckInterval()
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x1038124", Offset = "0x1038124", VA = "0x1038124")]
		private void StopIdleCheckInterval()
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x1038620", Offset = "0x1038620", VA = "0x1038620")]
		private static void RemoveNullControllersFromThePool()
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x1038A50", Offset = "0x1038A50", VA = "0x1038A50")]
		[IteratorStateMachine(typeof(<KillIdleControllersEnumerator>d__29))]
		private IEnumerator KillIdleControllersEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x1038AEC", Offset = "0x1038AEC", VA = "0x1038AEC")]
		public SoundyPooler()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005A7")]
	public class SoundySettings : ScriptableObject
	{
		[Token(Token = "0x400253C")]
		public const string FILE_NAME = "SoundySettings";

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SoundySettings s_instance;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SoundyDatabase database;

		[Token(Token = "0x400253F")]
		public const bool AUTO_KILL_IDLE_CONTROLLERS_DEFAULT_VALUE = true;

		[Token(Token = "0x4002540")]
		public const float CONTROLLER_IDLE_KILL_DURATION_DEFAULT_VALUE = 20f;

		[Token(Token = "0x4002541")]
		public const float CONTROLLER_IDLE_KILL_DURATION_MIN = 0f;

		[Token(Token = "0x4002542")]
		public const float CONTROLLER_IDLE_KILL_DURATION_MAX = 300f;

		[Token(Token = "0x4002543")]
		public const float IDLE_CHECK_INTERVAL_DEFAULT_VALUE = 5f;

		[Token(Token = "0x4002544")]
		public const float IDLE_CHECK_INTERVAL_MIN = 0.1f;

		[Token(Token = "0x4002545")]
		public const float IDLE_CHECK_INTERVAL_MAX = 60f;

		[Token(Token = "0x4002546")]
		public const int MINIMUM_NUMBER_OF_CONTROLLERS_DEFAULT_VALUE = 3;

		[Token(Token = "0x4002547")]
		public const int MINIMUM_NUMBER_OF_CONTROLLERS_MIN = 0;

		[Token(Token = "0x4002548")]
		public const int MINIMUM_NUMBER_OF_CONTROLLERS_MAX = 20;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool AutoKillIdleControllers;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float ControllerIdleKillDuration;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float IdleCheckInterval;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MinimumNumberOfControllers;

		[Token(Token = "0x17000528")]
		private static string ResourcesPath
		{
			[Token(Token = "0x6002610")]
			[Address(RVA = "0x1038E20", Offset = "0x1038E20", VA = "0x1038E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000529")]
		public static SoundySettings Instance
		{
			[Token(Token = "0x6002611")]
			[Address(RVA = "0x1037E54", Offset = "0x1037E54", VA = "0x1037E54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052A")]
		public static SoundyDatabase Database
		{
			[Token(Token = "0x6002612")]
			[Address(RVA = "0x1035F54", Offset = "0x1035F54", VA = "0x1035F54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x1038E78", Offset = "0x1038E78", VA = "0x1038E78")]
		public static void UpdateDatabase()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x1038F34", Offset = "0x1038F34", VA = "0x1038F34")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x1038F54", Offset = "0x1038F54", VA = "0x1038F54")]
		public void Reset(bool saveAssets)
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x1037FF0", Offset = "0x1037FF0", VA = "0x1037FF0")]
		public void ResetComponent(SoundyPooler pooler)
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x1038F78", Offset = "0x1038F78", VA = "0x1038F78")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x1038FE0", Offset = "0x1038FE0", VA = "0x1038FE0")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x1039048", Offset = "0x1039048", VA = "0x1039048")]
		public SoundySettings()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public static class SoundyUtils
	{
		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float TwelfthRootOfTwo;

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x103163C", Offset = "0x103163C", VA = "0x103163C")]
		public static float SemitonesToPitch(float semitones)
		{
			return default(float);
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x103906C", Offset = "0x103906C", VA = "0x103906C")]
		public static float PitchToSemitones(float pitch)
		{
			return default(float);
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x103175C", Offset = "0x103175C", VA = "0x103175C")]
		public static float DecibelToLinear(float dB)
		{
			return default(float);
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x103911C", Offset = "0x103911C", VA = "0x103911C")]
		public static float LinearToDecibel(float linear)
		{
			return default(float);
		}
	}
}
namespace Doozy.Engine.Shop.UIPacks
{
	[Token(Token = "0x20005A9")]
	public class UIPackData : ScriptableObject
	{
		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PackName;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MajorVersion;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int MinorVersion;

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x10391B0", Offset = "0x10391B0", VA = "0x10391B0")]
		public UIPackData()
		{
		}
	}
}
namespace Doozy.Engine.Settings
{
	[Serializable]
	[Token(Token = "0x20005AA")]
	public class DoozySettings : ScriptableObject
	{
		[Token(Token = "0x4002551")]
		public const string FILE_NAME = "DoozySettings";

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DoozySettings s_instance;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Language SelectedLanguage;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool AutoDisableUIInteractions;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool DebugBackButton;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool DebugGameEventListener;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool DebugGameEventManager;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DebugGestureListener;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DebugGraphController;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool DebugKeyToAction;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool DebugKeyToGameEvent;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool DebugOrientationDetector;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool DebugProgressor;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool DebugProgressorGroup;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool DebugSceneDirector;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DebugSceneLoader;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool DebugSoundyController;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool DebugSoundyManager;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool DebugSoundyPooler;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool DebugTouchDetector;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool DebugUIButton;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool DebugUIButtonListener;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool DebugUICanvas;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DebugUIDrawer;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool DebugUIDrawerListener;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool DebugUIPopup;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool DebugUIPopupManager;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool DebugUIToggle;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool DebugUIView;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool DebugUIViewListener;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		public bool DOTweenDetected;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool DoozyUIVersion3Detected;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool DoozyUIVersion2Detected;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool MasterAudioDetected;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool PlaymakerDetected;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TextMeshProDetected;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool IgnoreUnityTimescale;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool SpeedBasedAnimations;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool UseBackButton;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool UseMasterAudio;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool UseOrientationDetector;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool UsePlaymaker;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool UseTextMeshPro;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool AssetDatabaseSaveAssetsNeeded;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool AssetDatabaseRefreshNeeded;

		[Token(Token = "0x400257E")]
		public const string MAILTO = "mailto:";

		[Token(Token = "0x400257F")]
		public const string SUPPORT_EMAIL_ADDRESS = "support@doozyui.com";

		[Token(Token = "0x4002580")]
		public const string LINK_DISCORD_INVITE = "https://discord.gg/y9Axq7b";

		[Token(Token = "0x4002581")]
		public const string LINK_FACEBOOK = "https://www.facebook.com/doozyentertainment";

		[Token(Token = "0x4002582")]
		public const string LINK_TWITTER = "https://twitter.com/doozyplay";

		[Token(Token = "0x4002583")]
		public const string LINK_WEBSITE_DOOZYUI = "http://doozyui.com/";

		[Token(Token = "0x4002584")]
		public const string LINK_WEBSITE_DOOZYUI_DOCUMENTATION = "http://doozyui.com/learn/documentation/";

		[Token(Token = "0x4002585")]
		public const string LINK_WEBSITE_DOOZYUI_DOCUMENTATION_GETTING_STARTED = "http://doozyui.com/getting-started/";

		[Token(Token = "0x4002586")]
		public const string LINK_WEBSITE_DOOZYUI_FAQ = "http://doozyui.com/learn/faq/";

		[Token(Token = "0x4002587")]
		public const string LINK_WEBSITE_DOOZYUI_LEARN = "http://doozyui.com/learn/";

		[Token(Token = "0x4002588")]
		public const string LINK_WEBSITE_DOOZYUI_SUPPORT_REQUEST = "http://doozyui.com/support-request/";

		[Token(Token = "0x4002589")]
		public const string LINK_WEBSITE_DOTWEEN = "http://dotween.demigiant.com/";

		[Token(Token = "0x400258A")]
		public const string LINK_WEBSITE_MICROSOFT_DOT_NET_API = "https://docs.microsoft.com/en-us/dotnet/api/";

		[Token(Token = "0x400258B")]
		public const string LINK_WEBSITE_UNITY_MANUAL = "https://docs.unity3d.com/Manual/index.html";

		[Token(Token = "0x400258C")]
		public const string LINK_WEBSITE_UNITY_SCRIPTING_API = "https://docs.unity3d.com/ScriptReference/index.html";

		[Token(Token = "0x400258D")]
		public const string LINK_YOUTUBE_CHANNEL = "http://www.youtube.com/c/DoozyEntertainment";

		[Token(Token = "0x400258E")]
		public const string LINK_YOUTUBE_VIDEOS = "https://www.youtube.com/user/doozyplay/videos";

		[Token(Token = "0x400258F")]
		public const string LINK_ZENDESK_TICKET = "https://doozyentertainment.zendesk.com/hc/en-us/requests/new";

		[Token(Token = "0x4002590")]
		public const string DOOZYUI_ABOUT = "DoozyUI is a complete User Interface (UI) management system for Unity. It does that by manipulating native Unity components and taking full advantage of their intended usage.\n\nThis approach assures maximum compatibility with uGUI, best performance and makes the entire system behave in a predictable manner.\n\nAlso, by working only with native components, the system will be compatible with any other asset that uses uGUI correctly.\n\nEasy to use and understand, given the user has some basic knowledge of how Unity’s native UI solution (uGUI) works, DoozyUI has flexible components that can be configured in a lot of ways. Functionality and design go hand in hand in order to offer a pleasant User Experience (UX) while using the system.";

		[Token(Token = "0x4002591")]
		public const string SOUNDY_VERSION = "1.0.0";

		[Token(Token = "0x4002592")]
		public const string SOUNDY_ABOUT = "Soundy is a complex sound management system that works side by side with DoozyUI. It can play sounds from one of its sound databases, or directly by using AudioClip references, or through MasterAudio (a third-party plugin).\n\nAn automated sound pooling system (Soundy Pooler) manages memory consumption while playing sounds in a dynamic way by reusing Soundy Controllers. The sounds pool is dynamic, Soundy Pooler being able to grow and shrink it as needed.";

		[Token(Token = "0x4002593")]
		public const string TOUCHY_VERSION = "1.0.0";

		[Token(Token = "0x4002594")]
		public const string TOUCHY_ABOUT = "Touchy is a touch detection system that comes with DoozyUI. It captures touches (and clicks) from Unity's native Input solution and passes it the system with a few extra bits of info.\n\nA Gesture Listener is also included, and it is responsible of interpreting the touch and can identify taps, long taps and swipes.";

		[Token(Token = "0x4002595")]
		public const string NODY_VERSION = "1.0.0";

		[Token(Token = "0x4002596")]
		public const string NODY_ABOUT = "Nody is a node graph engine built around modular node components which can be connected to form Graphs. Being an important part of DoozyUI, it was specifically designed to help create, visualize and manage UI navigation flows.\n\nTypical node graphs are intended to be drawn (and work) from left to right or from top to bottom. An UI can flow in any direction and Nody was designed to accommodate that requirement. Each selected node shows its input and output connections in a visual way.\n\nThe node graph architecture implemented in Nody is robust and reliable enough to handle very complex UI flows to create deep UI interactions. Graph UI flows can be set up to work together or separately all together.";

		[Token(Token = "0x1700052B")]
		private static string ResourcesPath
		{
			[Token(Token = "0x6002620")]
			[Address(RVA = "0x10391C0", Offset = "0x10391C0", VA = "0x10391C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052C")]
		public static DoozySettings Instance
		{
			[Token(Token = "0x6002621")]
			[Address(RVA = "0x1033E8C", Offset = "0x1033E8C", VA = "0x1033E8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x1039218", Offset = "0x1039218", VA = "0x1039218")]
		public void SaveAndRefreshAssetDatabase()
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x103921C", Offset = "0x103921C", VA = "0x103921C")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x1039284", Offset = "0x1039284", VA = "0x1039284")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x10392EC", Offset = "0x10392EC", VA = "0x10392EC")]
		public DoozySettings()
		{
		}
	}
}
namespace Doozy.Engine.SceneManagement
{
	[Serializable]
	[Token(Token = "0x20005AB")]
	public class ActiveSceneChangedEvent : UnityEvent<Scene, Scene>
	{
		[Token(Token = "0x6002626")]
		[Address(RVA = "0x1039308", Offset = "0x1039308", VA = "0x1039308")]
		public ActiveSceneChangedEvent()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public enum GetSceneBy
	{
		[Token(Token = "0x4002598")]
		Name,
		[Token(Token = "0x4002599")]
		BuildIndex
	}
	[Token(Token = "0x20005AD")]
	[AddComponentMenu("Doozy/SceneManagement/Scene Director", 13)]
	[DefaultExecutionOrder(-100)]
	[DisallowMultipleComponent]
	public class SceneDirector : MonoBehaviour
	{
		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SceneDirector s_instance;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugMode;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActiveSceneChangedEvent OnActiveSceneChanged;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneLoadedEvent OnSceneLoaded;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SceneUnloadedEvent OnSceneUnloaded;

		[Token(Token = "0x1700052D")]
		public static SceneDirector Instance
		{
			[Token(Token = "0x6002628")]
			[Address(RVA = "0x10394C0", Offset = "0x10394C0", VA = "0x10394C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700052E")]
		private static bool ApplicationIsQuitting
		{
			[Token(Token = "0x6002629")]
			[Address(RVA = "0x10396B0", Offset = "0x10396B0", VA = "0x10396B0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600262A")]
			[Address(RVA = "0x10396F8", Offset = "0x10396F8", VA = "0x10396F8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700052F")]
		private bool DebugComponent
		{
			[Token(Token = "0x600262B")]
			[Address(RVA = "0x1039744", Offset = "0x1039744", VA = "0x1039744")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x1039350", Offset = "0x1039350", VA = "0x1039350")]
		protected SceneDirector()
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x1039778", Offset = "0x1039778", VA = "0x1039778")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void RunOnStart()
		{
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x10397B8", Offset = "0x10397B8", VA = "0x10397B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x10399A0", Offset = "0x10399A0", VA = "0x10399A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x1039AF4", Offset = "0x1039AF4", VA = "0x1039AF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x1039C48", Offset = "0x1039C48", VA = "0x1039C48")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x1039C8C", Offset = "0x1039C8C", VA = "0x1039C8C")]
		private void ActiveSceneChanged(Scene current, Scene next)
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x1039D7C", Offset = "0x1039D7C", VA = "0x1039D7C")]
		private void SceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x1039E94", Offset = "0x1039E94", VA = "0x1039E94")]
		private void SceneUnloaded(Scene unloadedScene)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x1039F44", Offset = "0x1039F44", VA = "0x1039F44")]
		public static SceneLoader LoadSceneAsync(int sceneBuildIndex, LoadSceneMode loadSceneMode, [Optional] Progressor progressor)
		{
			return null;
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x103A464", Offset = "0x103A464", VA = "0x103A464")]
		public static SceneLoader LoadSceneAsync(string sceneName, LoadSceneMode loadSceneMode, [Optional] Progressor progressor)
		{
			return null;
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x103A7E8", Offset = "0x103A7E8", VA = "0x103A7E8")]
		public static AsyncOperation UnloadSceneAsync(Scene scene)
		{
			return null;
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x103A8AC", Offset = "0x103A8AC", VA = "0x103A8AC")]
		public static AsyncOperation UnloadSceneAsync(int sceneBuildIndex)
		{
			return null;
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x103A970", Offset = "0x103A970", VA = "0x103A970")]
		public static AsyncOperation UnloadSceneAsync(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x1039628", Offset = "0x1039628", VA = "0x1039628")]
		public static SceneDirector AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20005AE")]
	public class SceneLoadBehavior
	{
		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIAction OnLoadScene;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIAction OnSceneLoaded;

		[Token(Token = "0x17000530")]
		public bool HasAnimatorEvents
		{
			[Token(Token = "0x600263A")]
			[Address(RVA = "0x103AA18", Offset = "0x103AA18", VA = "0x103AA18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000531")]
		public bool HasEffect
		{
			[Token(Token = "0x600263B")]
			[Address(RVA = "0x103AA58", Offset = "0x103AA58", VA = "0x103AA58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000532")]
		public bool HasGameEvents
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0x103AA98", Offset = "0x103AA98", VA = "0x103AA98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000533")]
		public bool HasSound
		{
			[Token(Token = "0x600263D")]
			[Address(RVA = "0x103AAD8", Offset = "0x103AAD8", VA = "0x103AAD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000534")]
		public bool HasUnityEvents
		{
			[Token(Token = "0x600263E")]
			[Address(RVA = "0x103AB18", Offset = "0x103AB18", VA = "0x103AB18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x103AB58", Offset = "0x103AB58", VA = "0x103AB58")]
		public SceneLoadBehavior()
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x103ABFC", Offset = "0x103ABFC", VA = "0x103ABFC")]
		public void Reset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005AF")]
	public class SceneLoadedEvent : UnityEvent<Scene, LoadSceneMode>
	{
		[Token(Token = "0x6002641")]
		[Address(RVA = "0x1039430", Offset = "0x1039430", VA = "0x1039430")]
		public SceneLoadedEvent()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/SceneManagement/Scene Loader", 13)]
	public class SceneLoader : MonoBehaviour
	{
		[Token(Token = "0x20005B1")]
		[CompilerGenerated]
		private sealed class <AsynchronousLoad>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x40025BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x40025C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LoadSceneMode mode;

			[Token(Token = "0x40025C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <sceneLoadedAndReady>5__2;

			[Token(Token = "0x40025C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			private bool <activatingScene>5__3;

			[Token(Token = "0x17000539")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600266B")]
				[Address(RVA = "0x103C804", Offset = "0x103C804", VA = "0x103C804", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600266D")]
				[Address(RVA = "0x103C84C", Offset = "0x103C84C", VA = "0x103C84C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002668")]
			[Address(RVA = "0x103B99C", Offset = "0x103B99C", VA = "0x103B99C")]
			[DebuggerHidden]
			public <AsynchronousLoad>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6002669")]
			[Address(RVA = "0x103BFC0", Offset = "0x103BFC0", VA = "0x103BFC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600266A")]
			[Address(RVA = "0x103BFC4", Offset = "0x103BFC4", VA = "0x103BFC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600266C")]
			[Address(RVA = "0x103C80C", Offset = "0x103C80C", VA = "0x103C80C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B2")]
		[CompilerGenerated]
		private sealed class <AsynchronousLoad>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x40025C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int sceneBuildIndex;

			[Token(Token = "0x40025C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public LoadSceneMode mode;

			[Token(Token = "0x40025C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <sceneLoadedAndReady>5__2;

			[Token(Token = "0x40025C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			private bool <activatingScene>5__3;

			[Token(Token = "0x1700053B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002671")]
				[Address(RVA = "0x103D094", Offset = "0x103D094", VA = "0x103D094", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002673")]
				[Address(RVA = "0x103D0DC", Offset = "0x103D0DC", VA = "0x103D0DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0x103BA4C", Offset = "0x103BA4C", VA = "0x103BA4C")]
			[DebuggerHidden]
			public <AsynchronousLoad>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x600266F")]
			[Address(RVA = "0x103C854", Offset = "0x103C854", VA = "0x103C854", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0x103C858", Offset = "0x103C858", VA = "0x103C858", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002672")]
			[Address(RVA = "0x103D09C", Offset = "0x103D09C", VA = "0x103D09C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B3")]
		[CompilerGenerated]
		private sealed class <SelfDestruct>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x1700053D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002677")]
				[Address(RVA = "0x103D1A0", Offset = "0x103D1A0", VA = "0x103D1A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002679")]
				[Address(RVA = "0x103D1E8", Offset = "0x103D1E8", VA = "0x103D1E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002674")]
			[Address(RVA = "0x103BA74", Offset = "0x103BA74", VA = "0x103BA74")]
			[DebuggerHidden]
			public <SelfDestruct>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6002675")]
			[Address(RVA = "0x103D0E4", Offset = "0x103D0E4", VA = "0x103D0E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0x103D0E8", Offset = "0x103D0E8", VA = "0x103D0E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002678")]
			[Address(RVA = "0x103D1A8", Offset = "0x103D1A8", VA = "0x103D1A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025A2")]
		public const GetSceneBy DEFAULT_GET_SCENE_BY = GetSceneBy.Name;

		[Token(Token = "0x40025A3")]
		public const LoadSceneMode DEFAULT_LOAD_SCENE_MODE = LoadSceneMode.Single;

		[Token(Token = "0x40025A4")]
		public const bool DEFAULT_AUTO_SCENE_ACTIVATION = true;

		[Token(Token = "0x40025A5")]
		public const bool DEFAULT_SELF_DESTRUCT_AFTER_SCENE_LOADED = false;

		[Token(Token = "0x40025A6")]
		public const float DEFAULT_SCENE_ACTIVATION_DELAY = 0.2f;

		[Token(Token = "0x40025A7")]
		public const int DEFAULT_BUILD_INDEX = 0;

		[Token(Token = "0x40025A8")]
		public const string DEFAULT_SCENE_NAME = "";

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<SceneLoader> Database;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool AllowSceneActivation;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool DebugMode;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneLoadBehavior LoadBehavior;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GetSceneBy GetSceneBy;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LoadSceneMode LoadSceneMode;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ProgressEvent OnProgressChanged;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ProgressEvent OnInverseProgressChanged;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Progressor Progressor;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float SceneActivationDelay;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int SceneBuildIndex;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string SceneName;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool SelfDestructAfterSceneLoaded;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_loadInProgress;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool m_sceneLoadedAndReady;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool m_activatingScene;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_sceneLoadedAndReadyTime;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_progress;

		[Token(Token = "0x17000535")]
		public AsyncOperation CurrentAsyncOperation
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0x103AC8C", Offset = "0x103AC8C", VA = "0x103AC8C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002643")]
			[Address(RVA = "0x103AC94", Offset = "0x103AC94", VA = "0x103AC94")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000536")]
		public float InverseProgress
		{
			[Token(Token = "0x6002644")]
			[Address(RVA = "0x103AC9C", Offset = "0x103AC9C", VA = "0x103AC9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000537")]
		public float Progress
		{
			[Token(Token = "0x6002645")]
			[Address(RVA = "0x103ACAC", Offset = "0x103ACAC", VA = "0x103ACAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002646")]
			[Address(RVA = "0x103ACB4", Offset = "0x103ACB4", VA = "0x103ACB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000538")]
		private bool DebugComponent
		{
			[Token(Token = "0x6002647")]
			[Address(RVA = "0x103ADC8", Offset = "0x103ADC8", VA = "0x103ADC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x103ADFC", Offset = "0x103ADFC", VA = "0x103ADFC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x103AF58", Offset = "0x103AF58", VA = "0x103AF58")]
		private void Awake()
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x103B030", Offset = "0x103B030", VA = "0x103B030")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x103B038", Offset = "0x103B038", VA = "0x103B038")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x103B0B8", Offset = "0x103B0B8", VA = "0x103B0B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x103B594", Offset = "0x103B594", VA = "0x103B594")]
		public void ActivateLoadedScene()
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x103A438", Offset = "0x103A438", VA = "0x103A438")]
		public void LoadSceneAsync()
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x103B7A8", Offset = "0x103B7A8", VA = "0x103B7A8")]
		public Progressor LoadSceneAsync(int sceneBuildIndex, LoadSceneMode mode)
		{
			return null;
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x103B6C0", Offset = "0x103B6C0", VA = "0x103B6C0")]
		public Progressor LoadSceneAsync(string sceneName, LoadSceneMode mode)
		{
			return null;
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x103B8C4", Offset = "0x103B8C4", VA = "0x103B8C4")]
		public void LoadSceneAsyncAdditive(int sceneBuildIndex)
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x103B8CC", Offset = "0x103B8CC", VA = "0x103B8CC")]
		public void LoadSceneAsyncAdditive(string sceneName)
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x103B8D4", Offset = "0x103B8D4", VA = "0x103B8D4")]
		public void LoadSceneAsyncSingle(int sceneBuildIndex)
		{
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x103B8DC", Offset = "0x103B8DC", VA = "0x103B8DC")]
		public void LoadSceneAsyncSingle(string sceneName)
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x103B8E4", Offset = "0x103B8E4", VA = "0x103B8E4")]
		public SceneLoader SetAllowSceneActivation(bool allowSceneActivation)
		{
			return null;
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x103A40C", Offset = "0x103A40C", VA = "0x103A40C")]
		public SceneLoader SetLoadSceneBy(GetSceneBy getSceneBy)
		{
			return null;
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x103A430", Offset = "0x103A430", VA = "0x103A430")]
		public SceneLoader SetLoadSceneMode(LoadSceneMode loadSceneMode)
		{
			return null;
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x103A414", Offset = "0x103A414", VA = "0x103A414")]
		public SceneLoader SetProgressor(Progressor progressor)
		{
			return null;
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x103B8F0", Offset = "0x103B8F0", VA = "0x103B8F0")]
		public SceneLoader SetSceneActivationDelay(float sceneActivationDelay)
		{
			return null;
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x103A404", Offset = "0x103A404", VA = "0x103A404")]
		public SceneLoader SetSceneBuildIndex(int sceneBuildIndex)
		{
			return null;
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x103A7CC", Offset = "0x103A7CC", VA = "0x103A7CC")]
		public SceneLoader SetSceneName(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x103B8F8", Offset = "0x103B8F8", VA = "0x103B8F8")]
		public SceneLoader SetSelfDestructAfterSceneLoaded(bool selfDestruct)
		{
			return null;
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x103AF50", Offset = "0x103AF50", VA = "0x103AF50")]
		private void ResetProgress()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x103B890", Offset = "0x103B890", VA = "0x103B890")]
		private void StartSceneLoad()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x103B904", Offset = "0x103B904", VA = "0x103B904")]
		[IteratorStateMachine(typeof(<AsynchronousLoad>d__59))]
		private IEnumerator AsynchronousLoad(string sceneName, LoadSceneMode mode)
		{
			return null;
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x103B9C4", Offset = "0x103B9C4", VA = "0x103B9C4")]
		[IteratorStateMachine(typeof(<AsynchronousLoad>d__60))]
		private IEnumerator AsynchronousLoad(int sceneBuildIndex, LoadSceneMode mode)
		{
			return null;
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x103B64C", Offset = "0x103B64C", VA = "0x103B64C")]
		[IteratorStateMachine(typeof(<SelfDestruct>d__61))]
		private IEnumerator SelfDestruct()
		{
			return null;
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x103BA9C", Offset = "0x103BA9C", VA = "0x103BA9C")]
		public static void ActivateLoadedScenes()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x103A2B8", Offset = "0x103A2B8", VA = "0x103A2B8")]
		public static SceneLoader GetLoader([Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0x103BD9C", Offset = "0x103BD9C", VA = "0x103BD9C")]
		private static SceneLoader AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0x103BC40", Offset = "0x103BC40", VA = "0x103BC40")]
		private static void RemoveNullReferencesFromDatabase()
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x103BE24", Offset = "0x103BE24", VA = "0x103BE24")]
		public SceneLoader()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005B4")]
	public class SceneUnloadedEvent : UnityEvent<Scene>
	{
		[Token(Token = "0x600267A")]
		[Address(RVA = "0x1039478", Offset = "0x1039478", VA = "0x1039478")]
		public SceneUnloadedEvent()
		{
		}
	}
}
namespace Doozy.Engine.Progress
{
	[Token(Token = "0x20005B5")]
	public enum CompareType
	{
		[Token(Token = "0x40025CE")]
		Between,
		[Token(Token = "0x40025CF")]
		NotBetween,
		[Token(Token = "0x40025D0")]
		EqualTo,
		[Token(Token = "0x40025D1")]
		NotEqualTo,
		[Token(Token = "0x40025D2")]
		GreaterThan,
		[Token(Token = "0x40025D3")]
		LessThan,
		[Token(Token = "0x40025D4")]
		GreaterThanOrEqualTo,
		[Token(Token = "0x40025D5")]
		LessThanOrEqualTo
	}
	[Token(Token = "0x20005B6")]
	public enum ProgressorVariable
	{
		[Token(Token = "0x40025D7")]
		Value,
		[Token(Token = "0x40025D8")]
		Progress,
		[Token(Token = "0x40025D9")]
		InverseProgress
	}
	[Serializable]
	[Token(Token = "0x20005B7")]
	public enum ResetValue
	{
		[Token(Token = "0x40025DB")]
		Disabled,
		[Token(Token = "0x40025DC")]
		ToMinValue,
		[Token(Token = "0x40025DD")]
		ToMaxValue,
		[Token(Token = "0x40025DE")]
		ToCustomValue
	}
	[Token(Token = "0x20005B8")]
	public enum TargetProgress
	{
		[Token(Token = "0x40025E0")]
		Progress,
		[Token(Token = "0x40025E1")]
		InverseProgress
	}
	[Token(Token = "0x20005B9")]
	public enum TargetVariable
	{
		[Token(Token = "0x40025E3")]
		Value,
		[Token(Token = "0x40025E4")]
		MinValue,
		[Token(Token = "0x40025E5")]
		MaxValue,
		[Token(Token = "0x40025E6")]
		Progress,
		[Token(Token = "0x40025E7")]
		InverseProgress
	}
	[Serializable]
	[Token(Token = "0x20005BA")]
	public class ProgressEvent : UnityEvent<float>
	{
		[Token(Token = "0x600267B")]
		[Address(RVA = "0x103AF08", Offset = "0x103AF08", VA = "0x103AF08")]
		public ProgressEvent()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	[AddComponentMenu("Doozy/Progress/Progressor", 13)]
	[DefaultExecutionOrder(-100)]
	public class Progressor : MonoBehaviour
	{
		[Token(Token = "0x40025E8")]
		public const float TOLERANCE = 0.001f;

		[Token(Token = "0x40025E9")]
		public const bool DEFAULT_ANIMATE_VALUE = false;

		[Token(Token = "0x40025EA")]
		public const float DEFAULT_DURATION = 0.5f;

		[Token(Token = "0x40025EB")]
		public const Ease DEFAULT_EASE = Ease.Linear;

		[Token(Token = "0x40025EC")]
		public const bool DEFAULT_IGNORE_UNITY_TIMESCALE = true;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugMode;

		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ProgressTarget> ProgressTargets;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool AnimateValue;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AnimationDuration;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Ease AnimationEase;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool AnimationIgnoresUnityTimescale;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ResetValue OnEnableResetValue;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ResetValue OnDisableResetValue;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float CustomResetValue;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ProgressEvent OnValueChanged;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ProgressEvent OnProgressChanged;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ProgressEvent OnInverseProgressChanged;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_minValue;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_maxValue;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_wholeNumbers;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_currentValue;

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_previousValue;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sequence m_animationSequence;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_value;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_progress;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_inverseProgress;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_updatePreviousValue;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Tweener m_tween;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_tweenInitialized;

		[Token(Token = "0x1700053F")]
		public float Progress
		{
			[Token(Token = "0x600267C")]
			[Address(RVA = "0x103D1F0", Offset = "0x103D1F0", VA = "0x103D1F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000540")]
		public float InverseProgress
		{
			[Token(Token = "0x600267D")]
			[Address(RVA = "0x103D288", Offset = "0x103D288", VA = "0x103D288")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000541")]
		public float Value
		{
			[Token(Token = "0x600267E")]
			[Address(RVA = "0x103D2A0", Offset = "0x103D2A0", VA = "0x103D2A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600267F")]
			[Address(RVA = "0x103D2A8", Offset = "0x103D2A8", VA = "0x103D2A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000542")]
		public float MinValue
		{
			[Token(Token = "0x6002680")]
			[Address(RVA = "0x103D2B0", Offset = "0x103D2B0", VA = "0x103D2B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002681")]
			[Address(RVA = "0x103D2B8", Offset = "0x103D2B8", VA = "0x103D2B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000543")]
		public float MaxValue
		{
			[Token(Token = "0x6002682")]
			[Address(RVA = "0x103D2C0", Offset = "0x103D2C0", VA = "0x103D2C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002683")]
			[Address(RVA = "0x103D2C8", Offset = "0x103D2C8", VA = "0x103D2C8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000544")]
		public bool WholeNumbers
		{
			[Token(Token = "0x6002684")]
			[Address(RVA = "0x103D2D0", Offset = "0x103D2D0", VA = "0x103D2D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000545")]
		private bool DebugComponent
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0x103D2D8", Offset = "0x103D2D8", VA = "0x103D2D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000546")]
		private string GetAnimationId
		{
			[Token(Token = "0x6002686")]
			[Address(RVA = "0x103D30C", Offset = "0x103D30C", VA = "0x103D30C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x103D37C", Offset = "0x103D37C", VA = "0x103D37C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0x103D4A4", Offset = "0x103D4A4", VA = "0x103D4A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x103D4E8", Offset = "0x103D4E8", VA = "0x103D4E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x103D568", Offset = "0x103D568", VA = "0x103D568")]
		public void OnValueUpdated()
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x103D968", Offset = "0x103D968", VA = "0x103D968")]
		public void UpdateProgressTargets()
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x103DBCC", Offset = "0x103DBCC", VA = "0x103DBCC")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x103DD4C", Offset = "0x103DD4C", VA = "0x103DD4C")]
		public void InstantSetValue(float value)
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x103DBD4", Offset = "0x103DBD4", VA = "0x103DBD4")]
		public void SetValue(float value, bool instantUpdate)
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x103AD9C", Offset = "0x103AD9C", VA = "0x103AD9C")]
		public void SetProgress(float progressValue)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x103DF50", Offset = "0x103DF50", VA = "0x103DF50")]
		public void InstantSetProgress(float progressValue)
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x103DF24", Offset = "0x103DF24", VA = "0x103DF24")]
		public void SetProgress(float progressValue, bool instantUpdate)
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x103DF7C", Offset = "0x103DF7C", VA = "0x103DF7C")]
		public float GetProgress(TargetProgress direction)
		{
			return default(float);
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x103D5CC", Offset = "0x103D5CC", VA = "0x103D5CC")]
		public void UpdateProgress()
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x103E024", Offset = "0x103E024", VA = "0x103E024")]
		public void SetMin(float value)
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x103E100", Offset = "0x103E100", VA = "0x103E100")]
		public void SetMax(float value)
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x103E148", Offset = "0x103E148", VA = "0x103E148")]
		public void EnableWholeNumbers()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x103E154", Offset = "0x103E154", VA = "0x103E154")]
		public void DisableWholeNumbers()
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x103D470", Offset = "0x103D470", VA = "0x103D470")]
		public void ResetValueTo(ResetValue resetValue)
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x103E15C", Offset = "0x103E15C", VA = "0x103E15C")]
		public void ResetValueTo(ResetValue resetValue, bool instantUpdate)
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x103D548", Offset = "0x103D548", VA = "0x103D548")]
		public float ClampValueBetweenMinAndMax(float value, bool roundValue = false)
		{
			return default(float);
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x103DD54", Offset = "0x103DD54", VA = "0x103DD54")]
		public Tweener GetAnimationTween(float targetValue, float duration, Ease ease, bool ignoreTimescale)
		{
			return null;
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x103E334", Offset = "0x103E334", VA = "0x103E334")]
		public void StopAnimation(bool complete = false)
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x103D3D0", Offset = "0x103D3D0", VA = "0x103D3D0")]
		private void KillAnimation(bool complete = false)
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x103D478", Offset = "0x103D478", VA = "0x103D478")]
		private void KillTweener(bool complete = false)
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x103E06C", Offset = "0x103E06C", VA = "0x103E06C")]
		private static float RoundValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x103E33C", Offset = "0x103E33C", VA = "0x103E33C")]
		private static Progressor AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x103E3C4", Offset = "0x103E3C4", VA = "0x103E3C4")]
		public Progressor()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	[AddComponentMenu("Doozy/Progress/Progressor Group", 13)]
	[DefaultExecutionOrder(-100)]
	public class ProgressorGroup : MonoBehaviour
	{
		[Token(Token = "0x4002605")]
		public const float TOLERANCE = 0.001f;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugMode;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Progressor> Progressors;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ProgressEvent OnProgressChanged;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ProgressEvent OnInverseProgressChanged;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Sequence m_animationSequence;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_previousProgress;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_progress;

		[Token(Token = "0x17000547")]
		public float Progress
		{
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x103E4B4", Offset = "0x103E4B4", VA = "0x103E4B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x103E4BC", Offset = "0x103E4BC", VA = "0x103E4BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000548")]
		public float InverseProgress
		{
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x103E7B4", Offset = "0x103E7B4", VA = "0x103E7B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000549")]
		private bool DebugComponent
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x103E7C4", Offset = "0x103E7C4", VA = "0x103E7C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x103E7F8", Offset = "0x103E7F8", VA = "0x103E7F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x103EB34", Offset = "0x103EB34", VA = "0x103EB34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x103EB38", Offset = "0x103EB38", VA = "0x103EB38")]
		private void Update()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x103E9AC", Offset = "0x103E9AC", VA = "0x103E9AC")]
		public void UpdateProgress()
		{
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x103EB68", Offset = "0x103EB68", VA = "0x103EB68")]
		public float GetProgress(TargetProgress direction)
		{
			return default(float);
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x103E810", Offset = "0x103E810", VA = "0x103E810")]
		private void RemoveAnyNullProgressors()
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x103E4D8", Offset = "0x103E4D8", VA = "0x103E4D8")]
		private void OnProgressUpdated()
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x103EC0C", Offset = "0x103EC0C", VA = "0x103EC0C")]
		private static ProgressorGroup AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x103EC94", Offset = "0x103EC94", VA = "0x103EC94")]
		public ProgressorGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005BE")]
	public abstract class ProgressTarget : MonoBehaviour
	{
		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x103EDFC", Offset = "0x103EDFC", VA = "0x103EDFC", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x103EE00", Offset = "0x103EE00", VA = "0x103EE00", Slot = "5")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x103EE04", Offset = "0x103EE04", VA = "0x103EE04", Slot = "6")]
		public virtual void UpdateTarget(Progressor progressor)
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x103EE08", Offset = "0x103EE08", VA = "0x103EE08")]
		protected ProgressTarget()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	[AddComponentMenu("Doozy/Progress/Targets/Progress Target Action", 13)]
	[DefaultExecutionOrder(-99)]
	public class ProgressTargetAction : ProgressTarget
	{
		[Token(Token = "0x20005C0")]
		[CompilerGenerated]
		private sealed class <ExecuteResetTrigger>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002629")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400262A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400262B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressTargetAction <>4__this;

			[Token(Token = "0x1700054B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026C6")]
				[Address(RVA = "0x103F414", Offset = "0x103F414", VA = "0x103F414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026C8")]
				[Address(RVA = "0x103F45C", Offset = "0x103F45C", VA = "0x103F45C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026C3")]
			[Address(RVA = "0x103F1EC", Offset = "0x103F1EC", VA = "0x103F1EC")]
			[DebuggerHidden]
			public <ExecuteResetTrigger>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0x103F2D8", Offset = "0x103F2D8", VA = "0x103F2D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x103F2DC", Offset = "0x103F2DC", VA = "0x103F2DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026C7")]
			[Address(RVA = "0x103F41C", Offset = "0x103F41C", VA = "0x103F41C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400260F")]
		private const float TRIGGER_VALUE_DEFAULT_VALUE = 1f;

		[Token(Token = "0x4002610")]
		private const float TOLERANCE_DEFAULT_VALUE = 0.01f;

		[Token(Token = "0x4002611")]
		private const bool DISABLE_TRIGGER_AFTER_ACTIVATION_DEFAULT_VALUE = true;

		[Token(Token = "0x4002612")]
		private const bool RESET_ON_ENABLE_DEFAULT_VALUE = true;

		[Token(Token = "0x4002613")]
		private const bool RESET_ON_DISABLE_DEFAULT_VALUE = true;

		[Token(Token = "0x4002614")]
		private const bool RESET_AFTER_DELAY_DEFAULT_VALUE = true;

		[Token(Token = "0x4002615")]
		private const float RESET_DELAY_DEFAULT_VALUE = 3f;

		[Token(Token = "0x4002616")]
		private const bool USE_UNSCALED_TIME_DEFAULT_VALUE = true;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIAction Actions;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompareType CompareMethod;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool DisableTriggerAfterActivation;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool ResetAfterDelay;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ResetDelay;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ResetOnDisable;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool ResetOnEnable;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float TriggerValue;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float TriggerMinValue;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float TriggerMaxValue;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ProgressorVariable TargetVariable;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Tolerance;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool UseUnscaledTime;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool m_actionTriggered;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_resetCoroutine;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Progressor m_progressor;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_updateInterval;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_nextUpdateTime;

		[Token(Token = "0x1700054A")]
		public bool IsActive
		{
			[Token(Token = "0x60026B8")]
			[Address(RVA = "0x103EE10", Offset = "0x103EE10", VA = "0x103EE10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x103EE20", Offset = "0x103EE20", VA = "0x103EE20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x103EE6C", Offset = "0x103EE6C", VA = "0x103EE6C", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x103EE7C", Offset = "0x103EE7C", VA = "0x103EE7C", Slot = "5")]
		public override void OnDisable()
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x103EE8C", Offset = "0x103EE8C", VA = "0x103EE8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x103EE24", Offset = "0x103EE24", VA = "0x103EE24")]
		public void ResetTrigger()
		{
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x103F088", Offset = "0x103F088", VA = "0x103F088")]
		public void TriggerActions()
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x103F1A4", Offset = "0x103F1A4", VA = "0x103F1A4", Slot = "6")]
		public override void UpdateTarget(Progressor progressor)
		{
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x103EEC8", Offset = "0x103EEC8", VA = "0x103EEC8")]
		private void CheckTriggerValue()
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x103F130", Offset = "0x103F130", VA = "0x103F130")]
		[IteratorStateMachine(typeof(<ExecuteResetTrigger>d__36))]
		private IEnumerator ExecuteResetTrigger()
		{
			return null;
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x103F214", Offset = "0x103F214", VA = "0x103F214")]
		public ProgressTargetAction()
		{
		}
	}
	[Token(Token = "0x20005C1")]
	[AddComponentMenu("Doozy/Progress/Targets/Progress Target Animator", 13)]
	[DefaultExecutionOrder(-99)]
	public class ProgressTargetAnimator : ProgressTarget
	{
		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator Animator;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ParameterName;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetProgress TargetProgress;

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x103F464", Offset = "0x103F464", VA = "0x103F464", Slot = "6")]
		public override void UpdateTarget(Progressor progressor)
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x103F554", Offset = "0x103F554", VA = "0x103F554")]
		private void Reset()
		{
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x103F558", Offset = "0x103F558", VA = "0x103F558")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x103F608", Offset = "0x103F608", VA = "0x103F608")]
		public ProgressTargetAnimator()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	[AddComponentMenu("Doozy/Progress/Targets/Progress Target AudioMixer", 13)]
	[DefaultExecutionOrder(-99)]
	public class ProgressTargetAudioMixer : ProgressTarget
	{
		[Token(Token = "0x400262F")]
		private const float MIN_VALUE = 0.0001f;

		[Token(Token = "0x4002630")]
		private const float MAX_VALUE = 1f;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ExposedParameterName;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixer TargetMixer;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UseLogarithmicConversion;

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x103F660", Offset = "0x103F660", VA = "0x103F660", Slot = "6")]
		public override void UpdateTarget(Progressor progressor)
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x103F73C", Offset = "0x103F73C", VA = "0x103F73C")]
		private static float GetLogarithmicValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x103F76C", Offset = "0x103F76C", VA = "0x103F76C")]
		public ProgressTargetAudioMixer()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	[AddComponentMenu("Doozy/Progress/Targets/Progress Target Image", 13)]
	[DefaultExecutionOrder(-99)]
	public class ProgressTargetImage : ProgressTarget
	{
		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Image;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetProgress TargetProgress;

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x103F77C", Offset = "0x103F77C", VA = "0x103F77C", Slot = "6")]
		public override void UpdateTarget(Progressor progressor)
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x103F834", Offset = "0x103F834", VA = "0x103F834")]
		private void Reset()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x103F838", Offset = "0x103F838", VA = "0x103F838")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x103F8E8", Offset = "0x103F8E8", VA = "0x103F8E8")]
		public ProgressTargetImage()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	[AddComponentMenu("Doozy/Progress/Targets/Progress Target Text", 13)]
	[DefaultExecutionOrder(-99)]
	public class ProgressTargetText : ProgressTarget
	{
		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Text;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetVariable TargetVariable;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool WholeNumbers;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UseMultiplier;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Multiplier;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Prefix;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Suffix;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_initialized;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_targetValue;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StringBuilder m_stringBuilder;

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x103F8F0", Offset = "0x103F8F0", VA = "0x103F8F0", Slot = "6")]
		public override void UpdateTarget(Progressor progressor)
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x103FC1C", Offset = "0x103FC1C", VA = "0x103FC1C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x103FB94", Offset = "0x103FB94", VA = "0x103FB94")]
		private void Init()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x103FC20", Offset = "0x103FC20", VA = "0x103FC20")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x103FCD0", Offset = "0x103FCD0", VA = "0x103FCD0")]
		public ProgressTargetText()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	[AddComponentMenu("Doozy/Progress/Targets/Progress Target TextMeshPro", 13)]
	[DefaultExecutionOrder(-99)]
	public class ProgressTargetTextMeshPro : ProgressTarget
	{
		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetVariable TargetVariable;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool WholeNumbers;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool UseMultiplier;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Multiplier;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Prefix;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Suffix;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_initialized;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_targetValue;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StringBuilder m_stringBuilder;

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x103FD88", Offset = "0x103FD88", VA = "0x103FD88", Slot = "6")]
		public override void UpdateTarget(Progressor progressor)
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x103FE18", Offset = "0x103FE18", VA = "0x103FE18")]
		private void Reset()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x103FD98", Offset = "0x103FD98", VA = "0x103FD98")]
		private void Init()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x103FE1C", Offset = "0x103FE1C", VA = "0x103FE1C")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x103FE20", Offset = "0x103FE20", VA = "0x103FE20")]
		public ProgressTargetTextMeshPro()
		{
		}
	}
}
namespace Doozy.Engine.Orientation
{
	[Token(Token = "0x20005C6")]
	public enum DetectedOrientation
	{
		[Token(Token = "0x400264A")]
		Unknown,
		[Token(Token = "0x400264B")]
		Portrait,
		[Token(Token = "0x400264C")]
		Landscape
	}
	[Token(Token = "0x20005C7")]
	[RequireComponent(typeof(RectTransform), typeof(Canvas))]
	[DisallowMultipleComponent]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Orientation/Orientation Detector", 13)]
	public class OrientationDetector : MonoBehaviour
	{
		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OrientationDetector s_instance;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool DebugMode;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OrientationEvent OnOrientationEvent;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DetectedOrientation m_currentOrientation;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_canvas;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_deviceOrientationCheckCount;

		[Token(Token = "0x1700054D")]
		public static OrientationDetector Instance
		{
			[Token(Token = "0x60026DF")]
			[Address(RVA = "0x103FF90", Offset = "0x103FF90", VA = "0x103FF90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700054E")]
		public static bool ApplicationIsQuitting
		{
			[Token(Token = "0x60026E0")]
			[Address(RVA = "0x1040180", Offset = "0x1040180", VA = "0x1040180")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026E1")]
			[Address(RVA = "0x10401C8", Offset = "0x10401C8", VA = "0x10401C8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700054F")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x60026E2")]
			[Address(RVA = "0x1040214", Offset = "0x1040214", VA = "0x1040214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000550")]
		public Canvas Canvas
		{
			[Token(Token = "0x60026E3")]
			[Address(RVA = "0x10402BC", Offset = "0x10402BC", VA = "0x10402BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000551")]
		public DetectedOrientation CurrentOrientation
		{
			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x1040364", Offset = "0x1040364", VA = "0x1040364")]
			get
			{
				return default(DetectedOrientation);
			}
		}

		[Token(Token = "0x17000552")]
		private bool DebugComponent
		{
			[Token(Token = "0x60026E5")]
			[Address(RVA = "0x104036C", Offset = "0x104036C", VA = "0x104036C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x103FED8", Offset = "0x103FED8", VA = "0x103FED8")]
		protected OrientationDetector()
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x10403A0", Offset = "0x10403A0", VA = "0x10403A0")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.SubsystemRegistration)]
		private static void RunOnStart()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x10403E0", Offset = "0x10403E0", VA = "0x10403E0")]
		private void Reset()
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x1040400", Offset = "0x1040400", VA = "0x1040400")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x1040420", Offset = "0x1040420", VA = "0x1040420")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x10406E4", Offset = "0x10406E4", VA = "0x10406E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x10407AC", Offset = "0x10407AC", VA = "0x10407AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x10407C0", Offset = "0x10407C0", VA = "0x10407C0")]
		private void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x10407C8", Offset = "0x10407C8", VA = "0x10407C8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x10406EC", Offset = "0x10406EC", VA = "0x10406EC")]
		public void CheckDeviceOrientation(bool forceUpdate = false)
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x104080C", Offset = "0x104080C", VA = "0x104080C")]
		public void ChangeOrientation(DetectedOrientation newOrientation, bool forceUpdate = false)
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x10400F8", Offset = "0x10400F8", VA = "0x10400F8")]
		private static OrientationDetector AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20005C8")]
	public class OrientationEvent : UnityEvent<DetectedOrientation>
	{
		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x103FF48", Offset = "0x103FF48", VA = "0x103FF48")]
		public OrientationEvent()
		{
		}
	}
}
namespace Doozy.Engine.Nody
{
	[Token(Token = "0x20005C9")]
	[DefaultExecutionOrder(-100)]
	[AddComponentMenu("Doozy/Nody/Graph Controller", 13)]
	public class GraphController : MonoBehaviour
	{
		[Token(Token = "0x20005CA")]
		[CompilerGenerated]
		private sealed class <ActivateStartOrEnterNodeEnumerator>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400265E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400265F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GraphController <>4__this;

			[Token(Token = "0x17000558")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600270D")]
				[Address(RVA = "0x1042864", Offset = "0x1042864", VA = "0x1042864", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000559")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600270F")]
				[Address(RVA = "0x10428AC", Offset = "0x10428AC", VA = "0x10428AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600270A")]
			[Address(RVA = "0x10423C8", Offset = "0x10423C8", VA = "0x10423C8")]
			[DebuggerHidden]
			public <ActivateStartOrEnterNodeEnumerator>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600270B")]
			[Address(RVA = "0x104271C", Offset = "0x104271C", VA = "0x104271C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600270C")]
			[Address(RVA = "0x1042720", Offset = "0x1042720", VA = "0x1042720", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600270E")]
			[Address(RVA = "0x104286C", Offset = "0x104286C", VA = "0x104286C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002655")]
		private const string DEFAULT_CONTROLLER_NAME = "";

		[Token(Token = "0x4002656")]
		private const bool DEFAULT_DONT_DESTROY_CONTROLLER_ON_LOAD = true;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<GraphController> Database;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool DebugMode;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ControllerName;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DontDestroyControllerOnLoad;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Graph m_graphModel;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graph m_graph;

		[Token(Token = "0x17000553")]
		private static UILanguagePack UILabels
		{
			[Token(Token = "0x60026F2")]
			[Address(RVA = "0x1040978", Offset = "0x1040978", VA = "0x1040978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000554")]
		public Graph Graph
		{
			[Token(Token = "0x60026F3")]
			[Address(RVA = "0x1040980", Offset = "0x1040980", VA = "0x1040980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000555")]
		public Graph GraphModel
		{
			[Token(Token = "0x60026F4")]
			[Address(RVA = "0x1040988", Offset = "0x1040988", VA = "0x1040988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000556")]
		public bool Initialized
		{
			[Token(Token = "0x60026F5")]
			[Address(RVA = "0x1040990", Offset = "0x1040990", VA = "0x1040990")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026F6")]
			[Address(RVA = "0x1040998", Offset = "0x1040998", VA = "0x1040998")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000557")]
		private bool DebugComponent
		{
			[Token(Token = "0x60026F7")]
			[Address(RVA = "0x10409A4", Offset = "0x10409A4", VA = "0x10409A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x10409D8", Offset = "0x10409D8", VA = "0x10409D8")]
		public GraphController()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x10409F4", Offset = "0x10409F4", VA = "0x10409F4")]
		private void Reset()
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x1040A4C", Offset = "0x1040A4C", VA = "0x1040A4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x10411A8", Offset = "0x10411A8", VA = "0x10411A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x10412C0", Offset = "0x10412C0", VA = "0x10412C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x1041344", Offset = "0x1041344", VA = "0x1041344", Slot = "4")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x10413C4", Offset = "0x10413C4", VA = "0x10413C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x104144C", Offset = "0x104144C", VA = "0x104144C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x10414D4", Offset = "0x10414D4", VA = "0x10414D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x104155C", Offset = "0x104155C", VA = "0x104155C")]
		public void GoToNode(Doozy.Engine.Nody.Models.Node node)
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x1041DC0", Offset = "0x1041DC0", VA = "0x1041DC0")]
		public void GoToNodeByName(string nodeName)
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x1042064", Offset = "0x1042064", VA = "0x1042064")]
		public void GoToNodeById(string nodeId)
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x1040FFC", Offset = "0x1040FFC", VA = "0x1040FFC")]
		private void InitializeGraph(bool reset = true)
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x1042308", Offset = "0x1042308", VA = "0x1042308")]
		private void ResetController()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x1042354", Offset = "0x1042354", VA = "0x1042354")]
		[IteratorStateMachine(typeof(<ActivateStartOrEnterNodeEnumerator>d__34))]
		private IEnumerator ActivateStartOrEnterNodeEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x10423F0", Offset = "0x10423F0", VA = "0x10423F0")]
		public static GraphController AddToScene(bool selectGameObjectAfterCreation = false)
		{
			return null;
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x1042478", Offset = "0x1042478", VA = "0x1042478")]
		public static GraphController Get(string controllerName)
		{
			return null;
		}
	}
	[Token(Token = "0x20005CB")]
	public class NodySettings : ScriptableObject
	{
		[Token(Token = "0x4002661")]
		public const string FILE_NAME = "NodySettings";

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NodySettings s_instance;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Opacity Values")]
		public float NormalOpacity;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ActiveOpacity;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float HoverOpacity;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("Node GUI")]
		public float FooterHeight;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxNodeWidth;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MinNodeWidth;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float NodeAccentLineHeight;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float NodeAddSocketButtonSize;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float NodeBodyOpacity;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float NodeDeleteButtonSize;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float NodeGlowOpacity;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float NodeHeaderHeight;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float NodeHeaderIconSize;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float PingColorChangeSpeed;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Socket GUI")]
		public float SocketConnectedOpacity;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float SocketCurveModifierMaxValue;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float SocketCurveModifierMinValue;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float SocketDividerHeight;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float SocketDividerOpacity;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float SocketHeight;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float SocketNotConnectedOpacity;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float SocketVerticalSpacing;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Connection GUI")]
		public float ConnectionPointHeight;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float ConnectionPointOffsetFromLeftMargin;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float ConnectionPointOffsetFromRightMargin;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float ConnectionPointWidth;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Curve Settings")]
		public float CurvePointsMultiplier;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float CurveStrengthModifier;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float CurveWidth;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float DefaultCurveModifier;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float MaxCurveModifier;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float MinCurveModifier;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Graph Tabs")]
		public float GraphTabDividerWidth;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float GraphTabElementSpacing;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float GraphTabMaximumWidth;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float GraphTabMinimumWidth;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float GraphTabsAreaHeight;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float GraphTabsBackgroundOpacity;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Header("Repaint Intervals")]
		public double RepaintIntervalDuringPlayMode;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public double RepaintIntervalWhileIdle;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Editor Prefs Keys")]
		public string EditorPrefsKeyWindowToolbar;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string EditorPrefsKeyDotAnimationSpeed;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Header("Default Node Sizes")]
		public float DefaultNodeHeight;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float DefaultNodeWidth;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float EnterNodeWidth;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float ExitNodeWidth;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float StartNodeWidth;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float SubGraphNodeWidth;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float SwitchBackNodeWidth;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[Header("Misc")]
		public HideFlags DefaultHideFlagsForNodes;

		[Token(Token = "0x1700055A")]
		private static string ResourcesPath
		{
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x10428B4", Offset = "0x10428B4", VA = "0x10428B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055B")]
		public static NodySettings Instance
		{
			[Token(Token = "0x6002711")]
			[Address(RVA = "0x104290C", Offset = "0x104290C", VA = "0x104290C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x1042A3C", Offset = "0x1042A3C", VA = "0x1042A3C")]
		public void SetDirty(bool saveAssets)
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x1042AA4", Offset = "0x1042AA4", VA = "0x1042AA4")]
		public void UndoRecord(string undoMessage)
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x1042B0C", Offset = "0x1042B0C", VA = "0x1042B0C")]
		public NodySettings()
		{
		}
	}
}
namespace Doozy.Engine.Nody.Nodes
{
	[Token(Token = "0x20005CC")]
	[NodeMenu("", 0, false, false)]
	public class EnterNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x6002715")]
		[Address(RVA = "0x1042C38", Offset = "0x1042C38", VA = "0x1042C38", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x1042C8C", Offset = "0x1042C8C", VA = "0x1042C8C", Slot = "11")]
		public override float GetDefaultNodeWidth()
		{
			return default(float);
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1042CA8", Offset = "0x1042CA8", VA = "0x1042CA8", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x1042D48", Offset = "0x1042D48", VA = "0x1042D48", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x1042D50", Offset = "0x1042D50", VA = "0x1042D50", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x1042E80", Offset = "0x1042E80", VA = "0x1042E80")]
		public EnterNode()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	[NodeMenu("", 0, false, false)]
	public class ExitNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x600271B")]
		[Address(RVA = "0x1042E88", Offset = "0x1042E88", VA = "0x1042E88", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x1042EDC", Offset = "0x1042EDC", VA = "0x1042EDC", Slot = "11")]
		public override float GetDefaultNodeWidth()
		{
			return default(float);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x1042EF8", Offset = "0x1042EF8", VA = "0x1042EF8", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x1042F98", Offset = "0x1042F98", VA = "0x1042F98", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x1042FA0", Offset = "0x1042FA0", VA = "0x1042FA0", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x104316C", Offset = "0x104316C", VA = "0x104316C")]
		public ExitNode()
		{
		}
	}
	[Token(Token = "0x20005CE")]
	[NodeMenu("", 0, false, false)]
	public class StartNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x6002721")]
		[Address(RVA = "0x1043174", Offset = "0x1043174", VA = "0x1043174", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x10431C4", Offset = "0x10431C4", VA = "0x10431C4", Slot = "11")]
		public override float GetDefaultNodeWidth()
		{
			return default(float);
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x10431E0", Offset = "0x10431E0", VA = "0x10431E0", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x1043280", Offset = "0x1043280", VA = "0x1043280", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x1043288", Offset = "0x1043288", VA = "0x1043288", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x1043380", Offset = "0x1043380", VA = "0x1043380")]
		public StartNode()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	[NodeMenu("SubGraph", 1, true, false)]
	public class SubGraphNode : Doozy.Engine.Nody.Models.Node
	{
		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Graph m_subGraph;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool ErrorNoGraphReferenced;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool ErrorReferencedGraphIsNotSubGraph;

		[Token(Token = "0x1700055C")]
		public Graph SubGraph
		{
			[Token(Token = "0x6002727")]
			[Address(RVA = "0x1043388", Offset = "0x1043388", VA = "0x1043388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x1043390", Offset = "0x1043390", VA = "0x1043390", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x10433E8", Offset = "0x10433E8", VA = "0x10433E8", Slot = "11")]
		public override float GetDefaultNodeWidth()
		{
			return default(float);
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x1043404", Offset = "0x1043404", VA = "0x1043404", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x10434CC", Offset = "0x10434CC", VA = "0x10434CC", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x104357C", Offset = "0x104357C", VA = "0x104357C", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x1043618", Offset = "0x1043618", VA = "0x1043618", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x10430C4", Offset = "0x10430C4", VA = "0x10430C4")]
		public void ExitSubGraphNode()
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x1043974", Offset = "0x1043974", VA = "0x1043974")]
		public SubGraphNode()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	[NodeMenu("Navigation/Switch Back", 50, false, false)]
	public class SwitchBackNode : Doozy.Engine.Nody.Models.Node
	{
		[Serializable]
		[Token(Token = "0x20005D1")]
		public class SourceInfo
		{
			[Token(Token = "0x400269B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string SourceName;

			[Token(Token = "0x400269C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string InputSocketId;

			[Token(Token = "0x400269D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string OutputSocketId;

			[Token(Token = "0x400269E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool InputSocketIsConnected;

			[Token(Token = "0x400269F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool OutputSocketIsConnected;

			[Token(Token = "0x17000560")]
			public bool IsConnected
			{
				[Token(Token = "0x600273F")]
				[Address(RVA = "0x10448EC", Offset = "0x10448EC", VA = "0x10448EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002740")]
			[Address(RVA = "0x1043D94", Offset = "0x1043D94", VA = "0x1043D94")]
			public SourceInfo(string sourceName, string inputSocketId, string outputSocketId)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Graph m_targetGraph;

		[NonSerialized]
		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string m_returnSourceOutputSocketId;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<SourceInfo> Sources;

		[Token(Token = "0x1700055D")]
		public Socket TargetInputSocket
		{
			[Token(Token = "0x6002730")]
			[Address(RVA = "0x104397C", Offset = "0x104397C", VA = "0x104397C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055E")]
		public Socket TargetOutputSocket
		{
			[Token(Token = "0x6002731")]
			[Address(RVA = "0x10439D8", Offset = "0x10439D8", VA = "0x10439D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700055F")]
		public string ReturnSourceOutputSocketId
		{
			[Token(Token = "0x6002732")]
			[Address(RVA = "0x1043A34", Offset = "0x1043A34", VA = "0x1043A34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x1043A3C", Offset = "0x1043A3C", VA = "0x1043A3C", Slot = "13")]
		public override void OnCreate()
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x1043A9C", Offset = "0x1043A9C", VA = "0x1043A9C", Slot = "11")]
		public override float GetDefaultNodeWidth()
		{
			return default(float);
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x1043AB8", Offset = "0x1043AB8", VA = "0x1043AB8", Slot = "6")]
		public override void AddDefaultSockets()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x1043B90", Offset = "0x1043B90", VA = "0x1043B90")]
		public void AddSourceSocketPair()
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x1043DF4", Offset = "0x1043DF4", VA = "0x1043DF4", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x1043E54", Offset = "0x1043E54", VA = "0x1043E54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x1043EA8", Offset = "0x1043EA8", VA = "0x1043EA8")]
		private SourceInfo GetSource(Connection connection)
		{
			return null;
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x1044038", Offset = "0x1044038", VA = "0x1044038", Slot = "8")]
		public override void CopyNode(Doozy.Engine.Nody.Models.Node original)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x10442A4", Offset = "0x10442A4", VA = "0x10442A4", Slot = "14")]
		public override void OnEnter(Doozy.Engine.Nody.Models.Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x104467C", Offset = "0x104467C", VA = "0x104467C", Slot = "7")]
		public override void CheckForErrors()
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x1044684", Offset = "0x1044684", VA = "0x1044684")]
		public void RegenerateSourcesSocketIds()
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x1044864", Offset = "0x1044864", VA = "0x1044864")]
		public SwitchBackNode()
		{
		}
	}
}
namespace Doozy.Engine.Nody.Models
{
	[Serializable]
	[Token(Token = "0x20005D2")]
	public class Connection
	{
		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Vector2 m_inputConnectionPoint;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector2 m_outputConnectionPoint;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_id;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_inputNodeId;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_inputSocketId;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_outputNodeId;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string m_outputSocketId;

		[Token(Token = "0x17000561")]
		public bool Ping
		{
			[Token(Token = "0x6002741")]
			[Address(RVA = "0x104490C", Offset = "0x104490C", VA = "0x104490C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002742")]
			[Address(RVA = "0x1044914", Offset = "0x1044914", VA = "0x1044914")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000562")]
		public string Id
		{
			[Token(Token = "0x6002743")]
			[Address(RVA = "0x1044920", Offset = "0x1044920", VA = "0x1044920")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002744")]
			[Address(RVA = "0x1044928", Offset = "0x1044928", VA = "0x1044928")]
			set
			{
			}
		}

		[Token(Token = "0x17000563")]
		public string InputNodeId
		{
			[Token(Token = "0x6002745")]
			[Address(RVA = "0x1044930", Offset = "0x1044930", VA = "0x1044930")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002746")]
			[Address(RVA = "0x1044938", Offset = "0x1044938", VA = "0x1044938")]
			set
			{
			}
		}

		[Token(Token = "0x17000564")]
		public string InputSocketId
		{
			[Token(Token = "0x6002747")]
			[Address(RVA = "0x1044940", Offset = "0x1044940", VA = "0x1044940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002748")]
			[Address(RVA = "0x1044948", Offset = "0x1044948", VA = "0x1044948")]
			set
			{
			}
		}

		[Token(Token = "0x17000565")]
		public string OutputNodeId
		{
			[Token(Token = "0x6002749")]
			[Address(RVA = "0x1044950", Offset = "0x1044950", VA = "0x1044950")]
			get
			{
				return null;
			}
			[Token(Token = "0x600274A")]
			[Address(RVA = "0x1044958", Offset = "0x1044958", VA = "0x1044958")]
			set
			{
			}
		}

		[Token(Token = "0x17000566")]
		public string OutputSocketId
		{
			[Token(Token = "0x600274B")]
			[Address(RVA = "0x1044960", Offset = "0x1044960", VA = "0x1044960")]
			get
			{
				return null;
			}
			[Token(Token = "0x600274C")]
			[Address(RVA = "0x1044968", Offset = "0x1044968", VA = "0x1044968")]
			set
			{
			}
		}

		[Token(Token = "0x17000567")]
		public Vector2 InputConnectionPoint
		{
			[Token(Token = "0x600274D")]
			[Address(RVA = "0x1044970", Offset = "0x1044970", VA = "0x1044970")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600274E")]
			[Address(RVA = "0x1044978", Offset = "0x1044978", VA = "0x1044978")]
			set
			{
			}
		}

		[Token(Token = "0x17000568")]
		public Vector2 OutputConnectionPoint
		{
			[Token(Token = "0x600274F")]
			[Address(RVA = "0x1044980", Offset = "0x1044980", VA = "0x1044980")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002750")]
			[Address(RVA = "0x1044988", Offset = "0x1044988", VA = "0x1044988")]
			set
			{
			}
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x1044990", Offset = "0x1044990", VA = "0x1044990")]
		public Connection(Socket socket1, Socket socket2)
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x1044B30", Offset = "0x1044B30", VA = "0x1044B30")]
		public Connection(Connection other)
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x1044AEC", Offset = "0x1044AEC", VA = "0x1044AEC")]
		public string GenerateNewId()
		{
			return null;
		}
	}
	[Token(Token = "0x20005D3")]
	public enum ConnectionMode
	{
		[Token(Token = "0x40026A9")]
		Override,
		[Token(Token = "0x40026AA")]
		Multiple
	}
	[Token(Token = "0x20005D4")]
	public enum NodeType
	{
		[Token(Token = "0x40026AC")]
		Start,
		[Token(Token = "0x40026AD")]
		Enter,
		[Token(Token = "0x40026AE")]
		Exit,
		[Token(Token = "0x40026AF")]
		SubGraph,
		[Token(Token = "0x40026B0")]
		General,
		[Token(Token = "0x40026B1")]
		Global
	}
	[Token(Token = "0x20005D5")]
	public enum SocketDirection
	{
		[Token(Token = "0x40026B3")]
		Input,
		[Token(Token = "0x40026B4")]
		Output
	}
	[Serializable]
	[Token(Token = "0x20005D6")]
	public class Graph : ScriptableObject
	{
		[Token(Token = "0x40026B5")]
		public const int FILE_VERSION = 1;

		[Token(Token = "0x40026B6")]
		public const string NODE_NOT_FOUND = "Node Not Found";

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool DebugMode;

		[NonSerialized]
		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Graph ParentGraph;

		[NonSerialized]
		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SubGraphNode ParentSubGraphNode;

		[NonSerialized]
		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Node> m_activatedNodesHistory;

		[NonSerialized]
		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Node> m_globalNodes;

		[NonSerialized]
		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Node m_enterNode;

		[NonSerialized]
		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Node m_exitNode;

		[NonSerialized]
		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Node m_startNode;

		[NonSerialized]
		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_isDirty;

		[NonSerialized]
		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double m_infiniteLoopTimerStart;

		[NonSerialized]
		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_infiniteLoopTimeBreak;

		[NonSerialized]
		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool m_enabled;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private List<Node> m_nodes;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool m_isSubGraph;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private int m_version;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string m_description;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string m_id;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string m_lastModified;

		[Token(Token = "0x17000569")]
		public DateTime LastModified
		{
			[Token(Token = "0x6002754")]
			[Address(RVA = "0x1044BBC", Offset = "0x1044BBC", VA = "0x1044BBC")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x1700056A")]
		public Graph ActiveSubGraph
		{
			[Token(Token = "0x6002755")]
			[Address(RVA = "0x1044C28", Offset = "0x1044C28", VA = "0x1044C28")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002756")]
			[Address(RVA = "0x1044C30", Offset = "0x1044C30", VA = "0x1044C30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700056B")]
		public List<Node> GlobalNodes
		{
			[Token(Token = "0x6002757")]
			[Address(RVA = "0x1044C38", Offset = "0x1044C38", VA = "0x1044C38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056C")]
		public List<Node> Nodes
		{
			[Token(Token = "0x6002758")]
			[Address(RVA = "0x1040F70", Offset = "0x1040F70", VA = "0x1040F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002759")]
			[Address(RVA = "0x1044CC4", Offset = "0x1044CC4", VA = "0x1044CC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700056D")]
		public Node ActiveNode
		{
			[Token(Token = "0x600275A")]
			[Address(RVA = "0x1044CCC", Offset = "0x1044CCC", VA = "0x1044CCC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600275B")]
			[Address(RVA = "0x1044CD4", Offset = "0x1044CD4", VA = "0x1044CD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700056E")]
		public Node PreviousActiveNode
		{
			[Token(Token = "0x600275C")]
			[Address(RVA = "0x1044CDC", Offset = "0x1044CDC", VA = "0x1044CDC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600275D")]
			[Address(RVA = "0x1044CE4", Offset = "0x1044CE4", VA = "0x1044CE4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700056F")]
		public bool HasGlobalNodes
		{
			[Token(Token = "0x600275E")]
			[Address(RVA = "0x1044CEC", Offset = "0x1044CEC", VA = "0x1044CEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000570")]
		public bool IsDirty
		{
			[Token(Token = "0x600275F")]
			[Address(RVA = "0x1044D40", Offset = "0x1044D40", VA = "0x1044D40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002760")]
			[Address(RVA = "0x1044D48", Offset = "0x1044D48", VA = "0x1044D48")]
			set
			{
			}
		}

		[Token(Token = "0x17000571")]
		public bool IsSubGraph
		{
			[Token(Token = "0x6002761")]
			[Address(RVA = "0x1044D54", Offset = "0x1044D54", VA = "0x1044D54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002762")]
			[Address(RVA = "0x1044D5C", Offset = "0x1044D5C", VA = "0x1044D5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000572")]
		public string Description
		{
			[Token(Token = "0x6002763")]
			[Address(RVA = "0x1044D68", Offset = "0x1044D68", VA = "0x1044D68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000573")]
		public string Id
		{
			[Token(Token = "0x6002764")]
			[Address(RVA = "0x1044D70", Offset = "0x1044D70", VA = "0x1044D70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002765")]
			[Address(RVA = "0x1044D78", Offset = "0x1044D78", VA = "0x1044D78")]
			set
			{
			}
		}

		[Token(Token = "0x17000574")]
		public int Version
		{
			[Token(Token = "0x6002766")]
			[Address(RVA = "0x1044D80", Offset = "0x1044D80", VA = "0x1044D80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000575")]
		public bool Enabled
		{
			[Token(Token = "0x6002767")]
			[Address(RVA = "0x1044D88", Offset = "0x1044D88", VA = "0x1044D88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002768")]
			[Address(RVA = "0x104122C", Offset = "0x104122C", VA = "0x104122C")]
			set
			{
			}
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x1044D90", Offset = "0x1044D90", VA = "0x1044D90", Slot = "4")]
		public virtual void ActivateGlobalNodes()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x1044FD0", Offset = "0x1044FD0", VA = "0x1044FD0", Slot = "5")]
		public virtual void DeactivateGlobalNodes()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x1045188", Offset = "0x1045188", VA = "0x1045188", Slot = "6")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x1045374", Offset = "0x1045374", VA = "0x1045374", Slot = "7")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x1045560", Offset = "0x1045560", VA = "0x1045560", Slot = "8")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x10427F0", Offset = "0x10427F0", VA = "0x10427F0")]
		public void ActivateStartOrEnterNode()
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x104166C", Offset = "0x104166C", VA = "0x104166C")]
		public bool ContainsNode(Node node)
		{
			return default(bool);
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x104574C", Offset = "0x104574C", VA = "0x104574C")]
		public bool ContainsNodeById(string nodeId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x10457C8", Offset = "0x10457C8", VA = "0x10457C8")]
		public bool ContainsNodeByName(string nodeName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x1045844", Offset = "0x1045844", VA = "0x1045844")]
		public bool ContainsSocket(string socketId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x10437BC", Offset = "0x10437BC", VA = "0x10437BC")]
		public Node GetEnterNode()
		{
			return null;
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x10459D0", Offset = "0x10459D0", VA = "0x10459D0")]
		public Node GetExitNode()
		{
			return null;
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x1042174", Offset = "0x1042174", VA = "0x1042174")]
		public Node GetNodeById(string nodeId)
		{
			return null;
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x1041ED0", Offset = "0x1041ED0", VA = "0x1041ED0")]
		public Node GetNodeByName(string nodeName)
		{
			return null;
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x1045B88", Offset = "0x1045B88", VA = "0x1045B88")]
		public string GetNodeIdFromNodeName(string nodeName)
		{
			return null;
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x1045C34", Offset = "0x1045C34", VA = "0x1045C34")]
		public string GetNodeNameFromNodeId(string nodeId)
		{
			return null;
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x1045CE0", Offset = "0x1045CE0", VA = "0x1045CE0")]
		public Node GetStartNode()
		{
			return null;
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x1042344", Offset = "0x1042344", VA = "0x1042344")]
		public Node GetStartOrEnterNode()
		{
			return null;
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x104585C", Offset = "0x104585C", VA = "0x104585C")]
		public Socket GetSocket(string socketId)
		{
			return null;
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x10416E0", Offset = "0x10416E0", VA = "0x10416E0")]
		public void SetActiveNode(Node nextActiveNode, [Optional] Connection connection)
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x1042E48", Offset = "0x1042E48", VA = "0x1042E48")]
		public void SetActiveNodeByConnection(Connection connection)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x1044650", Offset = "0x1044650", VA = "0x1044650")]
		public void SetActiveNodeById(string nodeId, [Optional] Connection connection)
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x104602C", Offset = "0x104602C", VA = "0x104602C")]
		public void SetActiveNodeByName(string nodeName, [Optional] Connection connection)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x1046058", Offset = "0x1046058", VA = "0x1046058")]
		public void SetLastModified(string time)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x1046060", Offset = "0x1046060", VA = "0x1046060")]
		public void SetVersion(int version)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x1045E94", Offset = "0x1045E94", VA = "0x1045E94")]
		private bool InfiniteLoopDetected(Node nextActiveNode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x1046068", Offset = "0x1046068", VA = "0x1046068")]
		public Graph()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D7")]
	[NodeMenu("", 0, false, false)]
	public class Node : ScriptableObject
	{
		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Socket> m_inputSockets;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Socket> m_outputSockets;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NodeType m_nodeType;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_allowDuplicateNodeName;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool m_allowEmptyNodeName;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[SerializeField]
		private bool m_canBeDeleted;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		[SerializeField]
		private bool m_debugMode;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_useFixedUpdate;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool m_useLateUpdate;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool m_useUpdate;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_height;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_width;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_x;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_y;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int m_minimumInputSocketsCount;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_minimumOutputSocketsCount;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_graphId;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string m_id;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string m_name;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string m_notes;

		[NonSerialized]
		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Graph m_activeGraph;

		[NonSerialized]
		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected bool m_activated;

		[Token(Token = "0x17000576")]
		protected static UILanguagePack UILabels
		{
			[Token(Token = "0x6002784")]
			[Address(RVA = "0x10460FC", Offset = "0x10460FC", VA = "0x10460FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000577")]
		public bool AllowDuplicateNodeName
		{
			[Token(Token = "0x6002785")]
			[Address(RVA = "0x1046104", Offset = "0x1046104", VA = "0x1046104")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000578")]
		public bool AllowEmptyNodeName
		{
			[Token(Token = "0x6002786")]
			[Address(RVA = "0x104610C", Offset = "0x104610C", VA = "0x104610C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000579")]
		public bool CanBeDeleted
		{
			[Token(Token = "0x6002787")]
			[Address(RVA = "0x1046114", Offset = "0x1046114", VA = "0x1046114")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002788")]
			[Address(RVA = "0x104611C", Offset = "0x104611C", VA = "0x104611C")]
			set
			{
			}
		}

		[Token(Token = "0x1700057A")]
		public bool DebugMode
		{
			[Token(Token = "0x6002789")]
			[Address(RVA = "0x1046128", Offset = "0x1046128", VA = "0x1046128")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600278A")]
			[Address(RVA = "0x1046130", Offset = "0x1046130", VA = "0x1046130")]
			set
			{
			}
		}

		[Token(Token = "0x1700057B")]
		public bool Ping
		{
			[Token(Token = "0x600278B")]
			[Address(RVA = "0x104613C", Offset = "0x104613C", VA = "0x104613C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600278C")]
			[Address(RVA = "0x1046144", Offset = "0x1046144", VA = "0x1046144")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700057C")]
		public bool UseFixedUpdate
		{
			[Token(Token = "0x600278D")]
			[Address(RVA = "0x1046150", Offset = "0x1046150", VA = "0x1046150")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600278E")]
			[Address(RVA = "0x1046158", Offset = "0x1046158", VA = "0x1046158")]
			set
			{
			}
		}

		[Token(Token = "0x1700057D")]
		public bool UseLateUpdate
		{
			[Token(Token = "0x600278F")]
			[Address(RVA = "0x1046164", Offset = "0x1046164", VA = "0x1046164")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002790")]
			[Address(RVA = "0x104616C", Offset = "0x104616C", VA = "0x104616C")]
			set
			{
			}
		}

		[Token(Token = "0x1700057E")]
		public bool UseUpdate
		{
			[Token(Token = "0x6002791")]
			[Address(RVA = "0x1046178", Offset = "0x1046178", VA = "0x1046178")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002792")]
			[Address(RVA = "0x1046180", Offset = "0x1046180", VA = "0x1046180")]
			set
			{
			}
		}

		[Token(Token = "0x1700057F")]
		public Graph ActiveGraph
		{
			[Token(Token = "0x6002793")]
			[Address(RVA = "0x104618C", Offset = "0x104618C", VA = "0x104618C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002794")]
			[Address(RVA = "0x1046194", Offset = "0x1046194", VA = "0x1046194")]
			set
			{
			}
		}

		[Token(Token = "0x17000580")]
		public int MinimumInputSocketsCount
		{
			[Token(Token = "0x6002795")]
			[Address(RVA = "0x104619C", Offset = "0x104619C", VA = "0x104619C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002796")]
			[Address(RVA = "0x10461A4", Offset = "0x10461A4", VA = "0x10461A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000581")]
		public int MinimumOutputSocketsCount
		{
			[Token(Token = "0x6002797")]
			[Address(RVA = "0x10461AC", Offset = "0x10461AC", VA = "0x10461AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002798")]
			[Address(RVA = "0x10461B4", Offset = "0x10461B4", VA = "0x10461B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000582")]
		public List<Socket> InputSockets
		{
			[Token(Token = "0x6002799")]
			[Address(RVA = "0x10461BC", Offset = "0x10461BC", VA = "0x10461BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600279A")]
			[Address(RVA = "0x1046248", Offset = "0x1046248", VA = "0x1046248")]
			set
			{
			}
		}

		[Token(Token = "0x17000583")]
		public List<Socket> OutputSockets
		{
			[Token(Token = "0x600279B")]
			[Address(RVA = "0x1046250", Offset = "0x1046250", VA = "0x1046250")]
			get
			{
				return null;
			}
			[Token(Token = "0x600279C")]
			[Address(RVA = "0x10462DC", Offset = "0x10462DC", VA = "0x10462DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000584")]
		public NodeType NodeType
		{
			[Token(Token = "0x600279D")]
			[Address(RVA = "0x10462E4", Offset = "0x10462E4", VA = "0x10462E4")]
			get
			{
				return default(NodeType);
			}
		}

		[Token(Token = "0x17000585")]
		public Socket FirstInputSocket
		{
			[Token(Token = "0x600279E")]
			[Address(RVA = "0x10462EC", Offset = "0x10462EC", VA = "0x10462EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000586")]
		public Socket FirstOutputSocket
		{
			[Token(Token = "0x600279F")]
			[Address(RVA = "0x1046378", Offset = "0x1046378", VA = "0x1046378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000587")]
		public string GraphId
		{
			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x1046404", Offset = "0x1046404", VA = "0x1046404")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x104640C", Offset = "0x104640C", VA = "0x104640C")]
			set
			{
			}
		}

		[Token(Token = "0x17000588")]
		public string Id
		{
			[Token(Token = "0x60027A2")]
			[Address(RVA = "0x1046414", Offset = "0x1046414", VA = "0x1046414")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027A3")]
			[Address(RVA = "0x104641C", Offset = "0x104641C", VA = "0x104641C")]
			set
			{
			}
		}

		[Token(Token = "0x17000589")]
		public string Name
		{
			[Token(Token = "0x60027A4")]
			[Address(RVA = "0x1046424", Offset = "0x1046424", VA = "0x1046424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x104642C", Offset = "0x104642C", VA = "0x104642C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x1046430", Offset = "0x1046430", VA = "0x1046430", Slot = "5")]
		public virtual void Activate(Graph portalGraph)
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x10464B8", Offset = "0x10464B8", VA = "0x10464B8", Slot = "6")]
		public virtual void AddDefaultSockets()
		{
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x10464BC", Offset = "0x10464BC", VA = "0x10464BC", Slot = "7")]
		public virtual void CheckForErrors()
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x10464C0", Offset = "0x10464C0", VA = "0x10464C0", Slot = "8")]
		public virtual void CopyNode(Node original)
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x1046D04", Offset = "0x1046D04", VA = "0x1046D04", Slot = "9")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x1046D88", Offset = "0x1046D88", VA = "0x1046D88", Slot = "10")]
		public virtual float GetDefaultNodeHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x1046DA8", Offset = "0x1046DA8", VA = "0x1046DA8", Slot = "11")]
		public virtual float GetDefaultNodeWidth()
		{
			return default(float);
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x1046DC8", Offset = "0x1046DC8", VA = "0x1046DC8", Slot = "12")]
		public virtual void InitNode(Graph graph, Vector2 pos, int minimumInputSocketsCount = 1, int minimumOutputSocketsCount = 1)
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x1046F8C", Offset = "0x1046F8C", VA = "0x1046F8C", Slot = "13")]
		public virtual void OnCreate()
		{
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x1046F90", Offset = "0x1046F90", VA = "0x1046F90", Slot = "14")]
		public virtual void OnEnter(Node previousActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x1047010", Offset = "0x1047010", VA = "0x1047010", Slot = "15")]
		public virtual void OnExit(Node nextActiveNode, Connection connection)
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x104709C", Offset = "0x104709C", VA = "0x104709C", Slot = "16")]
		public virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x10470A0", Offset = "0x10470A0", VA = "0x10470A0", Slot = "17")]
		public virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x10470A4", Offset = "0x10470A4", VA = "0x10470A4", Slot = "18")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x10470A8", Offset = "0x10470A8", VA = "0x10470A8")]
		public Socket AddInputSocket(string socketName, ConnectionMode connectionMode, List<Vector2> connectionPoints, Type valueType, bool canBeDeleted, bool canBeReordered = true)
		{
			return null;
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x10477EC", Offset = "0x10477EC", VA = "0x10477EC")]
		public Socket AddInputSocket(string socketName, ConnectionMode connectionMode, Type valueType, bool canBeDeleted, bool canBeReordered)
		{
			return null;
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x1047994", Offset = "0x1047994", VA = "0x1047994")]
		public Socket AddInputSocket(ConnectionMode connectionMode, Type valueType, bool canBeDeleted, bool canBeReordered)
		{
			return null;
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x1047A28", Offset = "0x1047A28", VA = "0x1047A28")]
		public Socket AddOutputSocket(string socketName, ConnectionMode connectionMode, List<Vector2> connectionPoints, Type valueType, bool canBeDeleted, bool canBeReordered)
		{
			return null;
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x1047A60", Offset = "0x1047A60", VA = "0x1047A60")]
		public Socket AddOutputSocket(string socketName, ConnectionMode connectionMode, Type valueType, bool canBeDeleted, bool canBeReordered)
		{
			return null;
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x1047ACC", Offset = "0x1047ACC", VA = "0x1047ACC")]
		public Socket AddOutputSocket(ConnectionMode connectionMode, Type valueType, bool canBeDeleted, bool canBeReordered)
		{
			return null;
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x10470E0", Offset = "0x10470E0", VA = "0x10470E0")]
		private Socket AddSocket(string socketName, SocketDirection direction, ConnectionMode connectionMode, List<Vector2> connectionPoints, Type valueType, bool canBeDeleted, bool canBeReordered = true)
		{
			return null;
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x1047CE0", Offset = "0x1047CE0", VA = "0x1047CE0")]
		public bool CanDeleteSocket(Socket socket)
		{
			return default(bool);
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x1047D98", Offset = "0x1047D98", VA = "0x1047D98")]
		public bool ContainsConnection(string connectionId)
		{
			return default(bool);
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x1047FF0", Offset = "0x1047FF0", VA = "0x1047FF0")]
		public bool ContainsSocket(string socketId)
		{
			return default(bool);
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x1048250", Offset = "0x1048250", VA = "0x1048250")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x10484D8", Offset = "0x10484D8", VA = "0x10484D8")]
		public void DisconnectFromNode(string nodeId)
		{
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x1046F48", Offset = "0x1046F48", VA = "0x1046F48")]
		public string GenerateNewId()
		{
			return null;
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x104882C", Offset = "0x104882C", VA = "0x104882C")]
		public Vector2 GetCenterConnectionPointPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x1047DB0", Offset = "0x1047DB0", VA = "0x1047DB0")]
		public Connection GetConnection(string connectionId)
		{
			return null;
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x1048A34", Offset = "0x1048A34", VA = "0x1048A34")]
		public List<string> GetConnectedInputNodesIds()
		{
			return null;
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x1048E9C", Offset = "0x1048E9C", VA = "0x1048E9C")]
		public List<string> GetConnectedInputSocketsIds()
		{
			return null;
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x10492B4", Offset = "0x10492B4", VA = "0x10492B4")]
		public List<string> GetConnectedOutputNodesIds()
		{
			return null;
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x1049484", Offset = "0x1049484", VA = "0x1049484")]
		public List<string> GetConnectedOutputSocketsIds()
		{
			return null;
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x1049654", Offset = "0x1049654", VA = "0x1049654")]
		public Rect GetFooterRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x1049700", Offset = "0x1049700", VA = "0x1049700")]
		public Rect GetHeaderRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x104977C", Offset = "0x104977C", VA = "0x104977C")]
		public float GetHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x1049784", Offset = "0x1049784", VA = "0x1049784")]
		public Socket GetInputSocketFromId(string socketId)
		{
			return null;
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x104990C", Offset = "0x104990C", VA = "0x104990C")]
		public Socket GetInputSocketFromName(string socketName)
		{
			return null;
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x1049A94", Offset = "0x1049A94", VA = "0x1049A94")]
		private List<Vector2> GetLeftAndCenterAndRightConnectionPoints()
		{
			return null;
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x1049C2C", Offset = "0x1049C2C", VA = "0x1049C2C")]
		public Vector2 GetLeftConnectionPointPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x1047858", Offset = "0x1047858", VA = "0x1047858")]
		public List<Vector2> GetLeftAndRightConnectionPoints()
		{
			return null;
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x1049D14", Offset = "0x1049D14", VA = "0x1049D14")]
		public Vector2 GetPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x1049D1C", Offset = "0x1049D1C", VA = "0x1049D1C")]
		public Socket GetOutputSocketFromId(string socketId)
		{
			return null;
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x1049EA4", Offset = "0x1049EA4", VA = "0x1049EA4")]
		public Socket GetOutputSocketFromName(string socketName)
		{
			return null;
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x104A02C", Offset = "0x104A02C", VA = "0x104A02C")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x1049C88", Offset = "0x1049C88", VA = "0x1049C88")]
		public Vector2 GetRightConnectionPointPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x104A088", Offset = "0x104A088", VA = "0x104A088", Slot = "19")]
		public virtual float GetWidth()
		{
			return default(float);
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x104A090", Offset = "0x104A090", VA = "0x104A090")]
		public Vector2 GetSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x1048008", Offset = "0x1048008", VA = "0x1048008")]
		public Socket GetSocketFromId(string socketId)
		{
			return null;
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x104A0B4", Offset = "0x104A0B4", VA = "0x104A0B4")]
		public Socket GetSocketFromName(string socketName)
		{
			return null;
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x104A2FC", Offset = "0x104A2FC", VA = "0x104A2FC")]
		public float GetX()
		{
			return default(float);
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x104A304", Offset = "0x104A304", VA = "0x104A304")]
		public float GetY()
		{
			return default(float);
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x104A30C", Offset = "0x104A30C", VA = "0x104A30C")]
		public bool IsConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x104A534", Offset = "0x104A534", VA = "0x104A534")]
		public bool IsConnectedToNode(string nodeId)
		{
			return default(bool);
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x104A92C", Offset = "0x104A92C", VA = "0x104A92C")]
		public bool IsConnectedToSocket(string socketId)
		{
			return default(bool);
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x104AD24", Offset = "0x104AD24", VA = "0x104AD24")]
		public void RemoveConnection(string connectionId)
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x104B02C", Offset = "0x104B02C", VA = "0x104B02C")]
		public void SetActiveGraph(Graph graph)
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0x104B034", Offset = "0x104B034", VA = "0x104B034")]
		protected void SetAllowEmptyNodeName(bool value)
		{
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x104B040", Offset = "0x104B040", VA = "0x104B040")]
		protected void SetAllowDuplicateNodeName(bool value)
		{
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0x104B04C", Offset = "0x104B04C", VA = "0x104B04C")]
		public void SetName(string value)
		{
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x104B054", Offset = "0x104B054", VA = "0x104B054")]
		public void SetNodeType(NodeType nodeType)
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0x104B05C", Offset = "0x104B05C", VA = "0x104B05C")]
		public void SetPosition(Vector2 position)
		{
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x104B064", Offset = "0x104B064", VA = "0x104B064")]
		public void SetPosition(float x, float y)
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x104B06C", Offset = "0x104B06C", VA = "0x104B06C")]
		public void SetRect(Rect rect)
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x104B0CC", Offset = "0x104B0CC", VA = "0x104B0CC")]
		public void SetRect(Vector2 position, Vector2 size)
		{
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x104B0D8", Offset = "0x104B0D8", VA = "0x104B0D8")]
		public void SetRect(float x, float y, float width, float height)
		{
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x104B0E4", Offset = "0x104B0E4", VA = "0x104B0E4")]
		public void SetSize(Vector2 size)
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x104B0EC", Offset = "0x104B0EC", VA = "0x104B0EC")]
		public void SetSize(float width, float height)
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x104B0F4", Offset = "0x104B0F4", VA = "0x104B0F4")]
		public void SetWidth(float value)
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x104B0FC", Offset = "0x104B0FC", VA = "0x104B0FC")]
		public void SetHeight(float value)
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x104B104", Offset = "0x104B104", VA = "0x104B104")]
		public void SetX(float value)
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x104B10C", Offset = "0x104B10C", VA = "0x104B10C")]
		public void SetY(float value)
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x104B114", Offset = "0x104B114", VA = "0x104B114")]
		private void CheckThatNodeNameIsNotEmpty()
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x104B118", Offset = "0x104B118", VA = "0x104B118")]
		public Node()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D8")]
	public class Socket
	{
		[Token(Token = "0x40026E3")]
		public const string DEFAULT_INPUT_SOCKET_NAME_PREFIX = "InputSocket_";

		[Token(Token = "0x40026E4")]
		public const string DEFAULT_OUTPUT_SOCKET_NAME_PREFIX = "OutputSocket_";

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ConnectionMode m_connectionMode;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Connection> m_connections;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Vector2> m_connectionPoints;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SocketDirection m_direction;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Type m_valueType;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_canBeDeleted;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool m_canBeReordered;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_curveModifier;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_height;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_width;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_x;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_y;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_id;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string m_nodeId;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string m_socketName;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string m_value;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string m_valueTypeQualifiedName;

		[NonSerialized]
		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rect m_hoverRect;

		[Token(Token = "0x1700058A")]
		public bool AcceptsMultipleConnections
		{
			[Token(Token = "0x60027F0")]
			[Address(RVA = "0x104B120", Offset = "0x104B120", VA = "0x104B120")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058B")]
		public bool CanBeDeleted
		{
			[Token(Token = "0x60027F1")]
			[Address(RVA = "0x104B130", Offset = "0x104B130", VA = "0x104B130")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058C")]
		public bool CanBeReordered
		{
			[Token(Token = "0x60027F2")]
			[Address(RVA = "0x104B138", Offset = "0x104B138", VA = "0x104B138")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700058D")]
		public List<Vector2> ConnectionPoints
		{
			[Token(Token = "0x60027F3")]
			[Address(RVA = "0x104B140", Offset = "0x104B140", VA = "0x104B140")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027F4")]
			[Address(RVA = "0x104B1CC", Offset = "0x104B1CC", VA = "0x104B1CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700058E")]
		public List<Connection> Connections
		{
			[Token(Token = "0x60027F5")]
			[Address(RVA = "0x104B1D4", Offset = "0x104B1D4", VA = "0x104B1D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027F6")]
			[Address(RVA = "0x104B260", Offset = "0x104B260", VA = "0x104B260")]
			set
			{
			}
		}

		[Token(Token = "0x1700058F")]
		public float CurveModifier
		{
			[Token(Token = "0x60027F7")]
			[Address(RVA = "0x104B268", Offset = "0x104B268", VA = "0x104B268")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027F8")]
			[Address(RVA = "0x104B270", Offset = "0x104B270", VA = "0x104B270")]
			set
			{
			}
		}

		[Token(Token = "0x17000590")]
		public Connection FirstConnection
		{
			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x104B278", Offset = "0x104B278", VA = "0x104B278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000591")]
		public Rect HoverRect
		{
			[Token(Token = "0x60027FA")]
			[Address(RVA = "0x104B304", Offset = "0x104B304", VA = "0x104B304")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60027FB")]
			[Address(RVA = "0x104B310", Offset = "0x104B310", VA = "0x104B310")]
			set
			{
			}
		}

		[Token(Token = "0x17000592")]
		public string Id
		{
			[Token(Token = "0x60027FC")]
			[Address(RVA = "0x104B31C", Offset = "0x104B31C", VA = "0x104B31C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027FD")]
			[Address(RVA = "0x104B324", Offset = "0x104B324", VA = "0x104B324")]
			set
			{
			}
		}

		[Token(Token = "0x17000593")]
		public bool IsConnected
		{
			[Token(Token = "0x60027FE")]
			[Address(RVA = "0x1048C04", Offset = "0x1048C04", VA = "0x1048C04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000594")]
		public bool IsInput
		{
			[Token(Token = "0x60027FF")]
			[Address(RVA = "0x1047D78", Offset = "0x1047D78", VA = "0x1047D78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000595")]
		public bool IsOutput
		{
			[Token(Token = "0x6002800")]
			[Address(RVA = "0x1047D88", Offset = "0x1047D88", VA = "0x1047D88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000596")]
		public bool OverrideConnection
		{
			[Token(Token = "0x6002801")]
			[Address(RVA = "0x104B32C", Offset = "0x104B32C", VA = "0x104B32C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000597")]
		public string NodeId
		{
			[Token(Token = "0x6002802")]
			[Address(RVA = "0x104B33C", Offset = "0x104B33C", VA = "0x104B33C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002803")]
			[Address(RVA = "0x104B344", Offset = "0x104B344", VA = "0x104B344")]
			set
			{
			}
		}

		[Token(Token = "0x17000598")]
		public string SocketName
		{
			[Token(Token = "0x6002804")]
			[Address(RVA = "0x104B34C", Offset = "0x104B34C", VA = "0x104B34C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000599")]
		public string Value
		{
			[Token(Token = "0x6002805")]
			[Address(RVA = "0x104B354", Offset = "0x104B354", VA = "0x104B354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002806")]
			[Address(RVA = "0x104B35C", Offset = "0x104B35C", VA = "0x104B35C")]
			set
			{
			}
		}

		[Token(Token = "0x1700059A")]
		public Type ValueType
		{
			[Token(Token = "0x6002807")]
			[Address(RVA = "0x104B364", Offset = "0x104B364", VA = "0x104B364")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002808")]
			[Address(RVA = "0x104B454", Offset = "0x104B454", VA = "0x104B454")]
			private set
			{
			}
		}

		[Token(Token = "0x1700059B")]
		private string ValueTypeQualifiedName
		{
			[Token(Token = "0x6002809")]
			[Address(RVA = "0x104B50C", Offset = "0x104B50C", VA = "0x104B50C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600280A")]
			[Address(RVA = "0x104B514", Offset = "0x104B514", VA = "0x104B514")]
			set
			{
			}
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x1047B60", Offset = "0x1047B60", VA = "0x1047B60")]
		public Socket(Node node, string socketName, SocketDirection direction, ConnectionMode connectionMode, List<Vector2> connectionPoints, Type valueType, bool canBeDeleted, bool canBeReordered)
		{
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0x1046988", Offset = "0x1046988", VA = "0x1046988")]
		public Socket(Socket other)
		{
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0x104B60C", Offset = "0x104B60C", VA = "0x104B60C")]
		public bool CanConnect(Socket other, bool ignoreValueType = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x104B84C", Offset = "0x104B84C", VA = "0x104B84C")]
		public bool ContainsConnection(string connectionId)
		{
			return default(bool);
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x104B9D4", Offset = "0x104B9D4", VA = "0x104B9D4")]
		public bool ContainsConnection(Connection connection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x1048464", Offset = "0x1048464", VA = "0x1048464")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x10486F8", Offset = "0x10486F8", VA = "0x10486F8")]
		public void DisconnectFromNode(string nodeId)
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x104B9EC", Offset = "0x104B9EC", VA = "0x104B9EC")]
		public Vector2 GetClosestConnectionPointToPosition(Vector2 position)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x104BBFC", Offset = "0x104BBFC", VA = "0x104BBFC")]
		public Vector2 GetClosestConnectionPointToSocket(Socket other)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x1048C54", Offset = "0x1048C54", VA = "0x1048C54")]
		public List<string> GetConnectedNodesIds()
		{
			return null;
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x104906C", Offset = "0x104906C", VA = "0x104906C")]
		public List<string> GetConnectedSocketIds()
		{
			return null;
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x10488AC", Offset = "0x10488AC", VA = "0x10488AC")]
		public Connection GetConnection(string connectionId)
		{
			return null;
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x104BEFC", Offset = "0x104BEFC", VA = "0x104BEFC")]
		public List<string> GetConnectionIds()
		{
			return null;
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x104C108", Offset = "0x104C108", VA = "0x104C108")]
		public ConnectionMode GetConnectionMode()
		{
			return default(ConnectionMode);
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x104C110", Offset = "0x104C110", VA = "0x104C110")]
		public SocketDirection GetDirection()
		{
			return default(SocketDirection);
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x104B5C8", Offset = "0x104B5C8", VA = "0x104B5C8")]
		public string GenerateNewId()
		{
			return null;
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x104C118", Offset = "0x104C118", VA = "0x104C118")]
		public float GetHeight()
		{
			return default(float);
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x104C120", Offset = "0x104C120", VA = "0x104C120")]
		public Vector2 GetPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600281D")]
		[Address(RVA = "0x104C128", Offset = "0x104C128", VA = "0x104C128")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x104C15C", Offset = "0x104C15C", VA = "0x104C15C")]
		public Vector2 GetSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600281F")]
		[Address(RVA = "0x104C164", Offset = "0x104C164", VA = "0x104C164")]
		public float GetWidth()
		{
			return default(float);
		}

		[Token(Token = "0x6002820")]
		[Address(RVA = "0x104C16C", Offset = "0x104C16C", VA = "0x104C16C")]
		public float GetX()
		{
			return default(float);
		}

		[Token(Token = "0x6002821")]
		[Address(RVA = "0x104C174", Offset = "0x104C174", VA = "0x104C174")]
		public float GetY()
		{
			return default(float);
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0x104A768", Offset = "0x104A768", VA = "0x104A768")]
		public bool IsConnectedToNode(string nodeId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0x104AB60", Offset = "0x104AB60", VA = "0x104AB60")]
		public bool IsConnectedToSocket(string socketId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x104AF44", Offset = "0x104AF44", VA = "0x104AF44")]
		public void RemoveConnection(string connectionId)
		{
		}

		[Token(Token = "0x6002825")]
		[Address(RVA = "0x104C17C", Offset = "0x104C17C", VA = "0x104C17C")]
		public void SetHeight(float value)
		{
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0x104C184", Offset = "0x104C184", VA = "0x104C184")]
		public void SetName(string value)
		{
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x104C18C", Offset = "0x104C18C", VA = "0x104C18C")]
		public void SetPosition(Vector2 position)
		{
		}

		[Token(Token = "0x6002828")]
		[Address(RVA = "0x104C194", Offset = "0x104C194", VA = "0x104C194")]
		public void SetPosition(float x, float y)
		{
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0x104C19C", Offset = "0x104C19C", VA = "0x104C19C")]
		public void SetRect(Rect rect)
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0x104C1FC", Offset = "0x104C1FC", VA = "0x104C1FC")]
		public void SetRect(Vector2 position, Vector2 size)
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0x104C208", Offset = "0x104C208", VA = "0x104C208")]
		public void SetRect(float x, float y, float width, float height)
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0x104C214", Offset = "0x104C214", VA = "0x104C214")]
		public void SetSize(Vector2 size)
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0x104C21C", Offset = "0x104C21C", VA = "0x104C21C")]
		public void SetSize(float width, float height)
		{
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x104C224", Offset = "0x104C224", VA = "0x104C224")]
		public void SetWidth(float value)
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x104C22C", Offset = "0x104C22C", VA = "0x104C22C")]
		public void SetX(float value)
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x104C234", Offset = "0x104C234", VA = "0x104C234")]
		public void SetY(float value)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x104C23C", Offset = "0x104C23C", VA = "0x104C23C")]
		public void UpdateHoverRect()
		{
		}
	}
}
namespace Doozy.Engine.Nody.Connections
{
	[Serializable]
	[Token(Token = "0x20005D9")]
	public class PassthroughConnection
	{
		[Token(Token = "0x6002832")]
		[Address(RVA = "0x104C318", Offset = "0x104C318", VA = "0x104C318")]
		public PassthroughConnection()
		{
		}
	}
}
namespace Doozy.Engine.Nody.Attributes
{
	[Token(Token = "0x20005DA")]
	[AttributeUsage(AttributeTargets.Class)]
	public class NodeMenu : Attribute
	{
		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string MenuName;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Order;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly bool AddSeparatorAfter;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public readonly bool AddSeparatorBefore;

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x104C320", Offset = "0x104C320", VA = "0x104C320")]
		public NodeMenu(string menuName, int order, bool addSeparatorAfter = false, bool addSeparatorBefore = false)
		{
		}
	}
}
namespace Doozy.Engine.Layouts
{
	[Token(Token = "0x20005DB")]
	public class LayoutController : MonoBehaviour
	{
		[Token(Token = "0x40026FB")]
		private const bool DEFAULT_NEEDS_REBUILD = true;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool NeedsRebuild;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_lastRebuildTime;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LayoutGroup m_layoutGroup;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x1700059C")]
		public LayoutGroup Layout
		{
			[Token(Token = "0x6002834")]
			[Address(RVA = "0x104C374", Offset = "0x104C374", VA = "0x104C374")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002835")]
			[Address(RVA = "0x104C4A8", Offset = "0x104C4A8", VA = "0x104C4A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700059D")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x6002836")]
			[Address(RVA = "0x104C4CC", Offset = "0x104C4CC", VA = "0x104C4CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x104C5BC", Offset = "0x104C5BC", VA = "0x104C5BC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x104C5D8", Offset = "0x104C5D8", VA = "0x104C5D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x104C784", Offset = "0x104C784", VA = "0x104C784")]
		private void Update()
		{
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x104C78C", Offset = "0x104C78C", VA = "0x104C78C")]
		public void DisableLayoutGroup()
		{
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x104C824", Offset = "0x104C824", VA = "0x104C824")]
		public void EnableLayoutGroup()
		{
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x104C668", Offset = "0x104C668", VA = "0x104C668")]
		public void Rebuild(bool forced = false)
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x104C3F8", Offset = "0x104C3F8", VA = "0x104C3F8")]
		private void UpdateReference()
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x104C8BC", Offset = "0x104C8BC", VA = "0x104C8BC")]
		public LayoutController()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	[RequireComponent(typeof(RectTransform))]
	[DefaultExecutionOrder(-98)]
	[AddComponentMenu("Doozy/Layouts/Radial Layout", 13)]
	public class RadialLayout : LayoutGroup
	{
		[Token(Token = "0x4002700")]
		public const bool AUTO_REBUILD_DEFAULT_VALUE = true;

		[Token(Token = "0x4002701")]
		public const bool CLOCKWISE_DEFAULT_VALUE = false;

		[Token(Token = "0x4002702")]
		public const bool CONTROL_CHILD_HEIGHT_DEFAULT_VALUE = false;

		[Token(Token = "0x4002703")]
		public const bool CONTROL_CHILD_WIDTH_DEFAULT_VALUE = false;

		[Token(Token = "0x4002704")]
		public const bool RADIUS_CONTROLS_HEIGHT_DEFAULT_VALUE = false;

		[Token(Token = "0x4002705")]
		public const bool RADIUS_CONTROLS_WIDTH_DEFAULT_VALUE = false;

		[Token(Token = "0x4002706")]
		public const bool ROTATE_CHILDREN_DEFAULT_VALUE = false;

		[Token(Token = "0x4002707")]
		public const float CHILD_HEIGHT_DEFAULT_VALUE = 100f;

		[Token(Token = "0x4002708")]
		public const float CHILD_ROTATION_DEFAULT_VALUE = 0f;

		[Token(Token = "0x4002709")]
		public const float CHILD_WIDTH_DEFAULT_VALUE = 100f;

		[Token(Token = "0x400270A")]
		public const float MAX_ANGLE = 360f;

		[Token(Token = "0x400270B")]
		public const float MAX_ANGLE_DEFAULT_VALUE = 360f;

		[Token(Token = "0x400270C")]
		public const float MAX_RADIUS_DEFAULT_VALUE = 1000f;

		[Token(Token = "0x400270D")]
		public const float MIN_ANGLE = 0f;

		[Token(Token = "0x400270E")]
		public const float MIN_ANGLE_DEFAULT_VALUE = 0f;

		[Token(Token = "0x400270F")]
		public const float RADIUS_DEFAULT_VALUE = 100f;

		[Token(Token = "0x4002710")]
		public const float RADIUS_HEIGHT_FACTOR_DEFAULT_VALUE = 1f;

		[Token(Token = "0x4002711")]
		public const float RADIUS_WIDTH_FACTOR_DEFAULT_VALUE = 1f;

		[Token(Token = "0x4002712")]
		public const float SPACING_DEFAULT_VALUE = 0f;

		[Token(Token = "0x4002713")]
		public const float START_ANGLE_DEFAULT_VALUE = 0f;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected bool m_AutoRebuild;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		protected float m_ChildHeight;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected float m_ChildRotation;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		protected float m_ChildWidth;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected bool m_Clockwise;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		protected bool m_ControlChildHeight;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[SerializeField]
		protected bool m_ControlChildWidth;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[Range(0f, 360f)]
		protected float m_MaxAngle;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected float m_MaxRadius;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Range(0f, 360f)]
		[SerializeField]
		protected float m_MinAngle;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected float m_Radius;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		protected bool m_RadiusControlsHeight;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[SerializeField]
		protected bool m_RadiusControlsWidth;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected float m_RadiusHeightFactor;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		protected float m_RadiusWidthFactor;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected bool m_RotateChildren;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		protected float m_Spacing;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Range(0f, 360f)]
		[SerializeField]
		protected float m_StartAngle;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<RectTransform> m_childList;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x1700059E")]
		public bool AutoRebuild
		{
			[Token(Token = "0x600283F")]
			[Address(RVA = "0x104C8CC", Offset = "0x104C8CC", VA = "0x104C8CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002840")]
			[Address(RVA = "0x104C8D4", Offset = "0x104C8D4", VA = "0x104C8D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700059F")]
		public float ChildHeight
		{
			[Token(Token = "0x6002841")]
			[Address(RVA = "0x104C904", Offset = "0x104C904", VA = "0x104C904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002842")]
			[Address(RVA = "0x104C90C", Offset = "0x104C90C", VA = "0x104C90C")]
			set
			{
			}
		}

		[Token(Token = "0x170005A0")]
		public float ChildRotation
		{
			[Token(Token = "0x6002843")]
			[Address(RVA = "0x104C92C", Offset = "0x104C92C", VA = "0x104C92C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002844")]
			[Address(RVA = "0x104C934", Offset = "0x104C934", VA = "0x104C934")]
			set
			{
			}
		}

		[Token(Token = "0x170005A1")]
		public float ChildWidth
		{
			[Token(Token = "0x6002845")]
			[Address(RVA = "0x104C954", Offset = "0x104C954", VA = "0x104C954")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002846")]
			[Address(RVA = "0x104C95C", Offset = "0x104C95C", VA = "0x104C95C")]
			set
			{
			}
		}

		[Token(Token = "0x170005A2")]
		public bool Clockwise
		{
			[Token(Token = "0x6002847")]
			[Address(RVA = "0x104C97C", Offset = "0x104C97C", VA = "0x104C97C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002848")]
			[Address(RVA = "0x104C984", Offset = "0x104C984", VA = "0x104C984")]
			set
			{
			}
		}

		[Token(Token = "0x170005A3")]
		public bool ControlChildHeight
		{
			[Token(Token = "0x6002849")]
			[Address(RVA = "0x104C9A8", Offset = "0x104C9A8", VA = "0x104C9A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600284A")]
			[Address(RVA = "0x104C9B0", Offset = "0x104C9B0", VA = "0x104C9B0")]
			set
			{
			}
		}

		[Token(Token = "0x170005A4")]
		public bool ControlChildWidth
		{
			[Token(Token = "0x600284B")]
			[Address(RVA = "0x104C9C8", Offset = "0x104C9C8", VA = "0x104C9C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600284C")]
			[Address(RVA = "0x104C9D0", Offset = "0x104C9D0", VA = "0x104C9D0")]
			set
			{
			}
		}

		[Token(Token = "0x170005A5")]
		public float MaxAngle
		{
			[Token(Token = "0x600284D")]
			[Address(RVA = "0x104C9E8", Offset = "0x104C9E8", VA = "0x104C9E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600284E")]
			[Address(RVA = "0x104C9F0", Offset = "0x104C9F0", VA = "0x104C9F0")]
			set
			{
			}
		}

		[Token(Token = "0x170005A6")]
		public float MinAngle
		{
			[Token(Token = "0x600284F")]
			[Address(RVA = "0x104CA10", Offset = "0x104CA10", VA = "0x104CA10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002850")]
			[Address(RVA = "0x104CA18", Offset = "0x104CA18", VA = "0x104CA18")]
			set
			{
			}
		}

		[Token(Token = "0x170005A7")]
		public float Radius
		{
			[Token(Token = "0x6002851")]
			[Address(RVA = "0x104CA38", Offset = "0x104CA38", VA = "0x104CA38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002852")]
			[Address(RVA = "0x104CA40", Offset = "0x104CA40", VA = "0x104CA40")]
			set
			{
			}
		}

		[Token(Token = "0x170005A8")]
		public bool RadiusControlsHeight
		{
			[Token(Token = "0x6002853")]
			[Address(RVA = "0x104CA60", Offset = "0x104CA60", VA = "0x104CA60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002854")]
			[Address(RVA = "0x104CA68", Offset = "0x104CA68", VA = "0x104CA68")]
			set
			{
			}
		}

		[Token(Token = "0x170005A9")]
		public bool RadiusControlsWidth
		{
			[Token(Token = "0x6002855")]
			[Address(RVA = "0x104CA80", Offset = "0x104CA80", VA = "0x104CA80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002856")]
			[Address(RVA = "0x104CA88", Offset = "0x104CA88", VA = "0x104CA88")]
			set
			{
			}
		}

		[Token(Token = "0x170005AA")]
		public float RadiusHeightFactor
		{
			[Token(Token = "0x6002857")]
			[Address(RVA = "0x104CAA0", Offset = "0x104CAA0", VA = "0x104CAA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002858")]
			[Address(RVA = "0x104CAA8", Offset = "0x104CAA8", VA = "0x104CAA8")]
			set
			{
			}
		}

		[Token(Token = "0x170005AB")]
		public float RadiusWidthFactor
		{
			[Token(Token = "0x6002859")]
			[Address(RVA = "0x104CAC8", Offset = "0x104CAC8", VA = "0x104CAC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600285A")]
			[Address(RVA = "0x104CAD0", Offset = "0x104CAD0", VA = "0x104CAD0")]
			set
			{
			}
		}

		[Token(Token = "0x170005AC")]
		public RectTransform RectTransform
		{
			[Token(Token = "0x600285B")]
			[Address(RVA = "0x104CAF0", Offset = "0x104CAF0", VA = "0x104CAF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005AD")]
		public bool RotateChildren
		{
			[Token(Token = "0x600285C")]
			[Address(RVA = "0x104CB98", Offset = "0x104CB98", VA = "0x104CB98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600285D")]
			[Address(RVA = "0x104CBA0", Offset = "0x104CBA0", VA = "0x104CBA0")]
			set
			{
			}
		}

		[Token(Token = "0x170005AE")]
		public float Spacing
		{
			[Token(Token = "0x600285E")]
			[Address(RVA = "0x104CBB8", Offset = "0x104CBB8", VA = "0x104CBB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600285F")]
			[Address(RVA = "0x104CBC0", Offset = "0x104CBC0", VA = "0x104CBC0")]
			set
			{
			}
		}

		[Token(Token = "0x170005AF")]
		public float StartAngle
		{
			[Token(Token = "0x6002860")]
			[Address(RVA = "0x104CBE0", Offset = "0x104CBE0", VA = "0x104CBE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002861")]
			[Address(RVA = "0x104CBE8", Offset = "0x104CBE8", VA = "0x104CBE8")]
			set
			{
			}
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x104CC08", Offset = "0x104CC08", VA = "0x104CC08", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x104D374", Offset = "0x104D374", VA = "0x104D374", Slot = "37")]
		public override void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x104D378", Offset = "0x104D378", VA = "0x104D378", Slot = "38")]
		public override void SetLayoutVertical()
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x104D37C", Offset = "0x104D37C", VA = "0x104D37C", Slot = "29")]
		public override void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x104D380", Offset = "0x104D380", VA = "0x104D380", Slot = "28")]
		public override void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x104CC24", Offset = "0x104CC24", VA = "0x104CC24")]
		public void CalculateRadial()
		{
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x104C8F4", Offset = "0x104C8F4", VA = "0x104C8F4")]
		private void OnValueChanged()
		{
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x104D384", Offset = "0x104D384", VA = "0x104D384")]
		public RadialLayout()
		{
		}
	}
}
namespace Doozy.Engine.Extensions
{
	[Token(Token = "0x20005DD")]
	public static class ClassUtils
	{
		[Token(Token = "0x600286A")]
		public static T Clone<T>(this T source)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20005DE")]
	public static class ColorExtensions
	{
		[Token(Token = "0x4002728")]
		private const float LIGHT_OFFSET = 0.0625f;

		[Token(Token = "0x4002729")]
		private const float DARKER_FACTOR = 0.9f;

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x104D438", Offset = "0x104D438", VA = "0x104D438")]
		public static Color FromHex(this Color color, string hexValue, float alpha = 1f)
		{
			return default(Color);
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x104D514", Offset = "0x104D514", VA = "0x104D514")]
		public static Color ColorFrom256(this Color color, float r, float g, float b, float a = 255f)
		{
			return default(Color);
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x104D530", Offset = "0x104D530", VA = "0x104D530")]
		public static Color ColorFrom256(float r, float g, float b, float a = 255f)
		{
			return default(Color);
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x104D54C", Offset = "0x104D54C", VA = "0x104D54C")]
		public static Color Lighter(this Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x104D564", Offset = "0x104D564", VA = "0x104D564")]
		public static Color Darker(this Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x104D57C", Offset = "0x104D57C", VA = "0x104D57C")]
		public static float Brightness(this Color color)
		{
			return default(float);
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x104D590", Offset = "0x104D590", VA = "0x104D590")]
		public static Color WithBrightness(this Color color, float brightness)
		{
			return default(Color);
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x104D604", Offset = "0x104D604", VA = "0x104D604")]
		public static bool IsApproximatelyBlack(this Color color)
		{
			return default(bool);
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x104D678", Offset = "0x104D678", VA = "0x104D678")]
		public static bool IsApproximatelyWhite(this Color color)
		{
			return default(bool);
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x104D6F4", Offset = "0x104D6F4", VA = "0x104D6F4")]
		public static Color Opaque(this Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x104D6FC", Offset = "0x104D6FC", VA = "0x104D6FC")]
		public static Color Invert(this Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x104D710", Offset = "0x104D710", VA = "0x104D710")]
		public static Color WithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x20005DF")]
	public static class RectExtensions
	{
		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 s_tmpTopLeft;

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x104D718", Offset = "0x104D718", VA = "0x104D718")]
		public static Vector2 TopLeft(this Rect rect)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x104D7AC", Offset = "0x104D7AC", VA = "0x104D7AC")]
		public static Rect ScaleSizeBy(this Rect rect, float scale)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x104D870", Offset = "0x104D870", VA = "0x104D870")]
		public static Rect ScaleSizeBy(this Rect rect, float scale, Vector2 pivotPoint)
		{
			return default(Rect);
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x104D990", Offset = "0x104D990", VA = "0x104D990")]
		public static Rect ScaleSizeBy(this Rect rect, Vector2 scale)
		{
			return default(Rect);
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x104DA5C", Offset = "0x104DA5C", VA = "0x104DA5C")]
		public static Rect ScaleSizeBy(this Rect rect, Vector2 scale, Vector2 pivotPoint)
		{
			return default(Rect);
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x104DB80", Offset = "0x104DB80", VA = "0x104DB80")]
		public static Rect Below(this Rect source, Rect belowSource)
		{
			return default(Rect);
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x104DC28", Offset = "0x104DC28", VA = "0x104DC28")]
		public static Rect RightOf(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x104DCD0", Offset = "0x104DCD0", VA = "0x104DCD0")]
		public static Rect WithSize(this Rect source, float width, float height)
		{
			return default(Rect);
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x104DD48", Offset = "0x104DD48", VA = "0x104DD48")]
		public static Rect WithWidth(this Rect source, float width)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x104DDCC", Offset = "0x104DDCC", VA = "0x104DDCC")]
		public static Rect WithHeight(this Rect source, float height)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x104DE50", Offset = "0x104DE50", VA = "0x104DE50")]
		public static Rect Pad(this Rect source, float left, float top, float right, float bottom)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x104DF04", Offset = "0x104DF04", VA = "0x104DF04")]
		public static Rect PadSides(this Rect source, float padding)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x104DFA0", Offset = "0x104DFA0", VA = "0x104DFA0")]
		public static Rect AlignTopRight(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x104E048", Offset = "0x104E048", VA = "0x104E048")]
		public static Rect AlignHorizontallyByCenter(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x104E10C", Offset = "0x104E10C", VA = "0x104E10C")]
		public static Rect AlignVerticallyByCenter(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x104E1D8", Offset = "0x104E1D8", VA = "0x104E1D8")]
		public static Rect Translate(this Rect source, float x, float y)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x104E278", Offset = "0x104E278", VA = "0x104E278")]
		public static Rect WithOrigin(this Rect source, float x, float y)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x104E2F0", Offset = "0x104E2F0", VA = "0x104E2F0")]
		public static Rect Align(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x104E388", Offset = "0x104E388", VA = "0x104E388")]
		public static Rect AlignAndScale(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x104E418", Offset = "0x104E418", VA = "0x104E418")]
		public static Rect AlignHorizontally(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x104E4B0", Offset = "0x104E4B0", VA = "0x104E4B0")]
		public static Rect AlignVertically(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x104E548", Offset = "0x104E548", VA = "0x104E548")]
		public static Rect CenterInsideOf(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x104E63C", Offset = "0x104E63C", VA = "0x104E63C")]
		public static Rect LeftHalf(this Rect source)
		{
			return default(Rect);
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x104E6D0", Offset = "0x104E6D0", VA = "0x104E6D0")]
		public static Rect RightHalf(this Rect source)
		{
			return default(Rect);
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x104E778", Offset = "0x104E778", VA = "0x104E778")]
		public static Rect TopHalf(this Rect source)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x104E80C", Offset = "0x104E80C", VA = "0x104E80C")]
		public static Rect BottomHalf(this Rect source)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x104E8B4", Offset = "0x104E8B4", VA = "0x104E8B4")]
		public static Rect Clip(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x104EAB8", Offset = "0x104EAB8", VA = "0x104EAB8")]
		public static Rect InnerAlignWithBottomRight(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x104EB78", Offset = "0x104EB78", VA = "0x104EB78")]
		public static Rect InnerAlignWithCenterRight(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x104EC38", Offset = "0x104EC38", VA = "0x104EC38")]
		public static Rect InnerAlignWithCenterLeft(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x104ECF8", Offset = "0x104ECF8", VA = "0x104ECF8")]
		public static Rect InnerAlignWithBottomLeft(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x104EDA0", Offset = "0x104EDA0", VA = "0x104EDA0")]
		public static Rect InnerAlignWithUpperRight(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x104EE48", Offset = "0x104EE48", VA = "0x104EE48")]
		public static Rect InnerAlignWithBottomCenter(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x104EF48", Offset = "0x104EF48", VA = "0x104EF48")]
		public static Rect LeftOf(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x104EFF0", Offset = "0x104EFF0", VA = "0x104EFF0")]
		public static Rect Above(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x104F098", Offset = "0x104F098", VA = "0x104F098")]
		public static Rect AboveAll(this Rect source, Rect target, int i)
		{
			return default(Rect);
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x104F14C", Offset = "0x104F14C", VA = "0x104F14C")]
		public static Rect Cover(this Rect source, params Rect[] targets)
		{
			return default(Rect);
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x104F3F8", Offset = "0x104F3F8", VA = "0x104F3F8")]
		public static Rect StretchedVerticallyAlong(this Rect source, Rect target)
		{
			return default(Rect);
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x104F4A0", Offset = "0x104F4A0", VA = "0x104F4A0")]
		public static Rect AddHeight(this Rect source, int height)
		{
			return default(Rect);
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x104F538", Offset = "0x104F538", VA = "0x104F538")]
		public static Rect AddWidth(this Rect source, int width)
		{
			return default(Rect);
		}
	}
	[Token(Token = "0x20005E2")]
	public static class RectTransformExtensions
	{
		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x104F704", Offset = "0x104F704", VA = "0x104F704")]
		public static void Copy(this RectTransform target, RectTransform from)
		{
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x104F7B8", Offset = "0x104F7B8", VA = "0x104F7B8")]
		public static void FullScreen(this RectTransform target, bool resetScaleToOne)
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x104FA64", Offset = "0x104FA64", VA = "0x104FA64")]
		public static void Center(this RectTransform target, bool resetScaleToOne)
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x104F9A4", Offset = "0x104F9A4", VA = "0x104F9A4")]
		public static void ResetAnchoredPosition3D(this RectTransform target)
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x104FA04", Offset = "0x104FA04", VA = "0x104FA04")]
		public static void ResetLocalPosition(this RectTransform target)
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x104F814", Offset = "0x104F814", VA = "0x104F814")]
		public static void ResetLocalScaleToOne(this RectTransform target)
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x104F874", Offset = "0x104F874", VA = "0x104F874")]
		public static void AnchorMinToZero(this RectTransform target)
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x104FAD4", Offset = "0x104FAD4", VA = "0x104FAD4")]
		public static void AnchorMinToCenter(this RectTransform target)
		{
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x104F8D0", Offset = "0x104F8D0", VA = "0x104F8D0")]
		public static void AnchorMaxToOne(this RectTransform target)
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x104FAF0", Offset = "0x104FAF0", VA = "0x104FAF0")]
		public static void AnchorMaxToCenter(this RectTransform target)
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x104F92C", Offset = "0x104F92C", VA = "0x104F92C")]
		public static void CenterPivot(this RectTransform target)
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x104F948", Offset = "0x104F948", VA = "0x104F948")]
		public static void SizeDeltaToZero(this RectTransform target)
		{
		}
	}
}
namespace Doozy.Engine.Events
{
	[Serializable]
	[Token(Token = "0x20005E3")]
	public class AnimatorEvent
	{
		[Token(Token = "0x20005E4")]
		public enum ParameterType
		{
			[Token(Token = "0x4002738")]
			Bool,
			[Token(Token = "0x4002739")]
			Float,
			[Token(Token = "0x400273A")]
			Int,
			[Token(Token = "0x400273B")]
			Trigger
		}

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator Animator;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool BoolValue;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FloatValue;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int IntValue;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ParameterName;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ResetTrigger;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public ParameterType TargetParameterType;

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x104FB0C", Offset = "0x104FB0C", VA = "0x104FB0C")]
		public AnimatorEvent()
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x104FB9C", Offset = "0x104FB9C", VA = "0x104FB9C")]
		public AnimatorEvent(Animator animator, string parameterName, bool boolValue)
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x104FC00", Offset = "0x104FC00", VA = "0x104FC00")]
		public AnimatorEvent(Animator animator, string parameterName, int intValue)
		{
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0x104FC68", Offset = "0x104FC68", VA = "0x104FC68")]
		public AnimatorEvent(Animator animator, string parameterName, float floatValue)
		{
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x104FCD0", Offset = "0x104FCD0", VA = "0x104FCD0")]
		public AnimatorEvent(Animator animator, string parameterName)
		{
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x104FD24", Offset = "0x104FD24", VA = "0x104FD24")]
		public void Invoke([Optional] UnityAction<bool> callback)
		{
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x104FB28", Offset = "0x104FB28", VA = "0x104FB28")]
		public void Reset()
		{
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x104FDFC", Offset = "0x104FDFC", VA = "0x104FDFC")]
		public void SetValue()
		{
		}

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0x104FDDC", Offset = "0x104FDDC", VA = "0x104FDDC")]
		private static void InvokeCallback(UnityAction<bool> callback, bool value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E5")]
	public class BoolEvent : UnityEvent<bool>
	{
		[Token(Token = "0x60028BC")]
		[Address(RVA = "0x104FEF0", Offset = "0x104FEF0", VA = "0x104FEF0")]
		public BoolEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E6")]
	public class ColorEvent : UnityEvent<Color>
	{
		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x104FF38", Offset = "0x104FF38", VA = "0x104FF38")]
		public ColorEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E7")]
	public class GameObjectEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x104FF80", Offset = "0x104FF80", VA = "0x104FF80")]
		public GameObjectEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E8")]
	public class SpriteEvent : UnityEvent<Sprite>
	{
		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x104FFC8", Offset = "0x104FFC8", VA = "0x104FFC8")]
		public SpriteEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E9")]
	public class StringEvent : UnityEvent<string>
	{
		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x1050010", Offset = "0x1050010", VA = "0x1050010")]
		public StringEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005EA")]
	public class TextureEvent : UnityEvent<Texture>
	{
		[Token(Token = "0x60028C1")]
		[Address(RVA = "0x1050058", Offset = "0x1050058", VA = "0x1050058")]
		public TextureEvent()
		{
		}
	}
}
namespace Doozy.Engine.Attributes
{
	[Token(Token = "0x20005EB")]
	public class MinMaxRangeAttribute : Attribute
	{
		[Token(Token = "0x170005B0")]
		public float Min
		{
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x10500CC", Offset = "0x10500CC", VA = "0x10500CC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028C4")]
			[Address(RVA = "0x10500D4", Offset = "0x10500D4", VA = "0x10500D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170005B1")]
		public float Max
		{
			[Token(Token = "0x60028C5")]
			[Address(RVA = "0x10500DC", Offset = "0x10500DC", VA = "0x10500DC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028C6")]
			[Address(RVA = "0x10500E4", Offset = "0x10500E4", VA = "0x10500E4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x10500A0", Offset = "0x10500A0", VA = "0x10500A0")]
		public MinMaxRangeAttribute(float min, float max)
		{
		}
	}
}
namespace ClipperLib
{
	[Token(Token = "0x20005EC")]
	public struct DoublePoint
	{
		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double X;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double Y;

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x10500EC", Offset = "0x10500EC", VA = "0x10500EC")]
		public DoublePoint(double x = 0.0, double y = 0.0)
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x10500F4", Offset = "0x10500F4", VA = "0x10500F4")]
		public DoublePoint(DoublePoint dp)
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x10500FC", Offset = "0x10500FC", VA = "0x10500FC")]
		public DoublePoint(IntPoint ip)
		{
		}
	}
	[Token(Token = "0x20005ED")]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
	public class PolyTree : PolyNode
	{
		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal List<PolyNode> m_AllPolys;

		[Token(Token = "0x170005B2")]
		public int Total
		{
			[Token(Token = "0x60028CC")]
			[Address(RVA = "0x1050274", Offset = "0x1050274", VA = "0x1050274")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x105010C", Offset = "0x105010C", VA = "0x105010C")]
		public void Clear()
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x1050200", Offset = "0x1050200", VA = "0x1050200")]
		public PolyNode GetFirst()
		{
			return null;
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x105030C", Offset = "0x105030C", VA = "0x105030C")]
		public PolyTree()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
	public class PolyNode
	{
		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal PolyNode m_Parent;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal List<IntPoint> m_polygon;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int m_Index;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal JoinType m_jointype;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal EndType m_endtype;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal List<PolyNode> m_Childs;

		[Token(Token = "0x170005B3")]
		public int ChildCount
		{
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x1050488", Offset = "0x1050488", VA = "0x1050488")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005B4")]
		public List<IntPoint> Contour
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x10504C8", Offset = "0x10504C8", VA = "0x10504C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B5")]
		public List<PolyNode> Childs
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x10506AC", Offset = "0x10506AC", VA = "0x10506AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B6")]
		public PolyNode Parent
		{
			[Token(Token = "0x60028D5")]
			[Address(RVA = "0x10506B4", Offset = "0x10506B4", VA = "0x10506B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B7")]
		public bool IsHole
		{
			[Token(Token = "0x60028D6")]
			[Address(RVA = "0x10506BC", Offset = "0x10506BC", VA = "0x10506BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005B8")]
		public bool IsOpen
		{
			[Token(Token = "0x60028D7")]
			[Address(RVA = "0x10506D8", Offset = "0x10506D8", VA = "0x10506D8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028D8")]
			[Address(RVA = "0x10506E0", Offset = "0x10506E0", VA = "0x10506E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0x105046C", Offset = "0x105046C", VA = "0x105046C")]
		private bool IsHoleNode()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0x10504D0", Offset = "0x10504D0", VA = "0x10504D0")]
		internal void AddChild(PolyNode Child)
		{
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0x10505A0", Offset = "0x10505A0", VA = "0x10505A0")]
		public PolyNode GetNext()
		{
			return null;
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0x1050614", Offset = "0x1050614", VA = "0x1050614")]
		internal PolyNode GetNextSiblingUp()
		{
			return null;
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x1050390", Offset = "0x1050390", VA = "0x1050390")]
		public PolyNode()
		{
		}
	}
	[Token(Token = "0x20005EF")]
	internal struct Int128
	{
		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private long hi;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong lo;

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x10506EC", Offset = "0x10506EC", VA = "0x10506EC")]
		public Int128(long _lo)
		{
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x10506F8", Offset = "0x10506F8", VA = "0x10506F8")]
		public Int128(long _hi, ulong _lo)
		{
		}

		[Token(Token = "0x60028DC")]
		[Address(RVA = "0x1050700", Offset = "0x1050700", VA = "0x1050700")]
		public Int128(Int128 val)
		{
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0x1050708", Offset = "0x1050708", VA = "0x1050708")]
		public bool IsNegative()
		{
			return default(bool);
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x1050714", Offset = "0x1050714", VA = "0x1050714")]
		public static bool operator ==(Int128 val1, Int128 val2)
		{
			return default(bool);
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x10507C0", Offset = "0x10507C0", VA = "0x10507C0")]
		public static bool operator !=(Int128 val1, Int128 val2)
		{
			return default(bool);
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x10507D8", Offset = "0x10507D8", VA = "0x10507D8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x1050860", Offset = "0x1050860", VA = "0x1050860", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x1050894", Offset = "0x1050894", VA = "0x1050894")]
		public static bool operator >(Int128 val1, Int128 val2)
		{
			return default(bool);
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x10508AC", Offset = "0x10508AC", VA = "0x10508AC")]
		public static bool operator <(Int128 val1, Int128 val2)
		{
			return default(bool);
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x10508C4", Offset = "0x10508C4", VA = "0x10508C4")]
		public static Int128 operator +(Int128 lhs, Int128 rhs)
		{
			return default(Int128);
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x10508D4", Offset = "0x10508D4", VA = "0x10508D4")]
		public static Int128 operator -(Int128 lhs, Int128 rhs)
		{
			return default(Int128);
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x10508F8", Offset = "0x10508F8", VA = "0x10508F8")]
		public static Int128 operator -(Int128 val)
		{
			return default(Int128);
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x1050910", Offset = "0x1050910", VA = "0x1050910")]
		public static explicit operator double(Int128 val)
		{
			return default(double);
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x1050970", Offset = "0x1050970", VA = "0x1050970")]
		public static Int128 Int128Mul(long lhs, long rhs)
		{
			return default(Int128);
		}
	}
	[Token(Token = "0x20005F0")]
	public struct IntPoint
	{
		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long X;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long Y;

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0x10509D4", Offset = "0x10509D4", VA = "0x10509D4")]
		public IntPoint(long X, long Y)
		{
		}

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x10509DC", Offset = "0x10509DC", VA = "0x10509DC")]
		public IntPoint(double x, double y)
		{
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x1050A08", Offset = "0x1050A08", VA = "0x1050A08")]
		public IntPoint(IntPoint pt)
		{
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0x1050A10", Offset = "0x1050A10", VA = "0x1050A10")]
		public static bool operator ==(IntPoint a, IntPoint b)
		{
			return default(bool);
		}

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0x1050A28", Offset = "0x1050A28", VA = "0x1050A28")]
		public static bool operator !=(IntPoint a, IntPoint b)
		{
			return default(bool);
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0x1050A40", Offset = "0x1050A40", VA = "0x1050A40", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0x1050AC8", Offset = "0x1050AC8", VA = "0x1050AC8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005F1")]
	public struct IntRect
	{
		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long left;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long top;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long right;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long bottom;

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0x1050B2C", Offset = "0x1050B2C", VA = "0x1050B2C")]
		public IntRect(long l, long t, long r, long b)
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x1050B38", Offset = "0x1050B38", VA = "0x1050B38")]
		public IntRect(IntRect ir)
		{
		}
	}
	[Token(Token = "0x20005F2")]
	public enum ClipType
	{
		[Token(Token = "0x4002751")]
		ctIntersection,
		[Token(Token = "0x4002752")]
		ctUnion,
		[Token(Token = "0x4002753")]
		ctDifference,
		[Token(Token = "0x4002754")]
		ctXor
	}
	[Token(Token = "0x20005F3")]
	public enum PolyType
	{
		[Token(Token = "0x4002756")]
		ptSubject,
		[Token(Token = "0x4002757")]
		ptClip
	}
	[Token(Token = "0x20005F4")]
	public enum PolyFillType
	{
		[Token(Token = "0x4002759")]
		pftEvenOdd,
		[Token(Token = "0x400275A")]
		pftNonZero,
		[Token(Token = "0x400275B")]
		pftPositive,
		[Token(Token = "0x400275C")]
		pftNegative
	}
	[Token(Token = "0x20005F5")]
	public enum JoinType
	{
		[Token(Token = "0x400275E")]
		jtSquare,
		[Token(Token = "0x400275F")]
		jtRound,
		[Token(Token = "0x4002760")]
		jtMiter
	}
	[Token(Token = "0x20005F6")]
	public enum EndType
	{
		[Token(Token = "0x4002762")]
		etClosedPolygon,
		[Token(Token = "0x4002763")]
		etClosedLine,
		[Token(Token = "0x4002764")]
		etOpenButt,
		[Token(Token = "0x4002765")]
		etOpenSquare,
		[Token(Token = "0x4002766")]
		etOpenRound
	}
	[Token(Token = "0x20005F7")]
	internal enum EdgeSide
	{
		[Token(Token = "0x4002768")]
		esLeft,
		[Token(Token = "0x4002769")]
		esRight
	}
	[Token(Token = "0x20005F8")]
	internal enum Direction
	{
		[Token(Token = "0x400276B")]
		dRightToLeft,
		[Token(Token = "0x400276C")]
		dLeftToRight
	}
	[Token(Token = "0x20005F9")]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
	internal class TEdge
	{
		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal IntPoint Bot;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal IntPoint Curr;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal IntPoint Top;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal IntPoint Delta;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal double Dx;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal PolyType PolyTyp;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal EdgeSide Side;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal int WindDelta;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		internal int WindCnt;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal int WindCnt2;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		internal int OutIdx;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal TEdge Next;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal TEdge Prev;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal TEdge NextInLML;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal TEdge NextInAEL;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal TEdge PrevInAEL;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal TEdge NextInSEL;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal TEdge PrevInSEL;

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x1050B5C", Offset = "0x1050B5C", VA = "0x1050B5C")]
		public TEdge()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	public class IntersectNode
	{
		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal TEdge Edge1;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal TEdge Edge2;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal IntPoint Pt;

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x1050B64", Offset = "0x1050B64", VA = "0x1050B64")]
		public IntersectNode()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class MyIntersectNodeSort : IComparer<IntersectNode>
	{
		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x1050B6C", Offset = "0x1050B6C", VA = "0x1050B6C", Slot = "4")]
		public int Compare(IntersectNode node1, IntersectNode node2)
		{
			return default(int);
		}

		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x1050BA4", Offset = "0x1050BA4", VA = "0x1050BA4")]
		public MyIntersectNodeSort()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	internal class LocalMinima
	{
		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal long Y;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal TEdge LeftBound;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TEdge RightBound;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LocalMinima Next;

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x1050BAC", Offset = "0x1050BAC", VA = "0x1050BAC")]
		public LocalMinima()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	internal class Scanbeam
	{
		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal long Y;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Scanbeam Next;

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x1050BB4", Offset = "0x1050BB4", VA = "0x1050BB4")]
		public Scanbeam()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	internal class Maxima
	{
		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal long X;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Maxima Next;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Maxima Prev;

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x1050BBC", Offset = "0x1050BBC", VA = "0x1050BBC")]
		public Maxima()
		{
		}
	}
	[Token(Token = "0x20005FF")]
	internal class OutRec
	{
		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int Idx;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal bool IsHole;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		internal bool IsOpen;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal OutRec FirstLeft;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal OutPt Pts;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal OutPt BottomPt;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal PolyNode PolyNode;

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0x1050BC4", Offset = "0x1050BC4", VA = "0x1050BC4")]
		public OutRec()
		{
		}
	}
	[Token(Token = "0x2000600")]
	internal class OutPt
	{
		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int Idx;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal IntPoint Pt;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal OutPt Next;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal OutPt Prev;

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0x1050BCC", Offset = "0x1050BCC", VA = "0x1050BCC")]
		public OutPt()
		{
		}
	}
	[Token(Token = "0x2000601")]
	internal class Join
	{
		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal OutPt OutPt1;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal OutPt OutPt2;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal IntPoint OffPt;

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x1050BD4", Offset = "0x1050BD4", VA = "0x1050BD4")]
		public Join()
		{
		}
	}
	[Token(Token = "0x2000602")]
	public class ClipperBase
	{
		[Token(Token = "0x4002799")]
		internal const double horizontal = -3.4E+38;

		[Token(Token = "0x400279A")]
		internal const int Skip = -2;

		[Token(Token = "0x400279B")]
		internal const int Unassigned = -1;

		[Token(Token = "0x400279C")]
		internal const double tolerance = 1E-20;

		[Token(Token = "0x400279D")]
		public const long loRange = 1073741823L;

		[Token(Token = "0x400279E")]
		public const long hiRange = 4611686018427387903L;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal LocalMinima m_MinimaList;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal LocalMinima m_CurrentLM;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<List<TEdge>> m_edges;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Scanbeam m_Scanbeam;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal List<OutRec> m_PolyOuts;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal TEdge m_ActiveEdges;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool m_UseFullRange;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		internal bool m_HasOpenPaths;

		[Token(Token = "0x170005B9")]
		public bool PreserveCollinear
		{
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x1050C04", Offset = "0x1050C04", VA = "0x1050C04")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028FE")]
			[Address(RVA = "0x1050C0C", Offset = "0x1050C0C", VA = "0x1050C0C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60028FC")]
		[Address(RVA = "0x1050BDC", Offset = "0x1050BDC", VA = "0x1050BDC")]
		internal static bool near_zero(double val)
		{
			return default(bool);
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x1050C18", Offset = "0x1050C18", VA = "0x1050C18")]
		public void Swap(ref long val1, ref long val2)
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x1050C2C", Offset = "0x1050C2C", VA = "0x1050C2C")]
		internal static bool IsHorizontal(TEdge e)
		{
			return default(bool);
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x1050C4C", Offset = "0x1050C4C", VA = "0x1050C4C")]
		internal bool PointIsVertex(IntPoint pt, OutPt pp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0x1050C94", Offset = "0x1050C94", VA = "0x1050C94")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		internal bool PointOnLineSegment(IntPoint pt, IntPoint linePt1, IntPoint linePt2, bool UseFullRange)
		{
			return default(bool);
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x1050DBC", Offset = "0x1050DBC", VA = "0x1050DBC")]
		internal bool PointOnPolygon(IntPoint pt, OutPt pp, bool UseFullRange)
		{
			return default(bool);
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x1050E38", Offset = "0x1050E38", VA = "0x1050E38")]
		internal static bool SlopesEqual(TEdge e1, TEdge e2, bool UseFullRange)
		{
			return default(bool);
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x1050EBC", Offset = "0x1050EBC", VA = "0x1050EBC")]
		internal static bool SlopesEqual(IntPoint pt1, IntPoint pt2, IntPoint pt3, bool UseFullRange)
		{
			return default(bool);
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x1050F50", Offset = "0x1050F50", VA = "0x1050F50")]
		internal static bool SlopesEqual(IntPoint pt1, IntPoint pt2, IntPoint pt3, IntPoint pt4, bool UseFullRange)
		{
			return default(bool);
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x1050FE8", Offset = "0x1050FE8", VA = "0x1050FE8")]
		internal ClipperBase()
		{
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x1051098", Offset = "0x1051098", VA = "0x1051098", Slot = "4")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x1051204", Offset = "0x1051204", VA = "0x1051204")]
		private void DisposeLocalMinimaList()
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x1051260", Offset = "0x1051260", VA = "0x1051260")]
		private void RangeTest(IntPoint Pt, ref bool useFullRange)
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x1051338", Offset = "0x1051338", VA = "0x1051338")]
		private void InitEdge(TEdge e, TEdge eNext, TEdge ePrev, IntPoint pt)
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0x1051398", Offset = "0x1051398", VA = "0x1051398")]
		private void InitEdge2(TEdge e, PolyType polyType)
		{
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x1051454", Offset = "0x1051454", VA = "0x1051454")]
		private TEdge FindNextLocMin(TEdge E)
		{
			return null;
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x1051544", Offset = "0x1051544", VA = "0x1051544")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		private TEdge ProcessBound(TEdge E, bool LeftBoundIsForward)
		{
			return null;
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x10519EC", Offset = "0x10519EC", VA = "0x10519EC")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		public bool AddPath(List<IntPoint> pg, PolyType polyType, bool Closed)
		{
			return default(bool);
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x105248C", Offset = "0x105248C", VA = "0x105248C")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		public bool AddPaths(List<List<IntPoint>> ppg, PolyType polyType, bool closed)
		{
			return default(bool);
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0x1052424", Offset = "0x1052424", VA = "0x1052424")]
		internal bool Pt2IsBetweenPt1AndPt3(IntPoint pt1, IntPoint pt2, IntPoint pt3)
		{
			return default(bool);
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0x10523C0", Offset = "0x10523C0", VA = "0x10523C0")]
		private TEdge RemoveEdge(TEdge e)
		{
			return null;
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0x1051408", Offset = "0x1051408", VA = "0x1051408")]
		private void SetDx(TEdge e)
		{
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0x1051940", Offset = "0x1051940", VA = "0x1051940")]
		private void InsertLocalMinima(LocalMinima newLm)
		{
		}

		[Token(Token = "0x6002915")]
		[Address(RVA = "0x1052550", Offset = "0x1052550", VA = "0x1052550")]
		internal bool PopLocalMinima(long Y, out LocalMinima current)
		{
			return default(bool);
		}

		[Token(Token = "0x6002916")]
		[Address(RVA = "0x10519C8", Offset = "0x10519C8", VA = "0x10519C8")]
		private void ReverseHorizontal(TEdge e)
		{
		}

		[Token(Token = "0x6002917")]
		[Address(RVA = "0x10525AC", Offset = "0x10525AC", VA = "0x10525AC", Slot = "5")]
		internal virtual void Reset()
		{
		}

		[Token(Token = "0x6002918")]
		[Address(RVA = "0x105279C", Offset = "0x105279C", VA = "0x105279C")]
		public static IntRect GetBounds(List<List<IntPoint>> paths)
		{
			return default(IntRect);
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0x1052654", Offset = "0x1052654", VA = "0x1052654")]
		internal void InsertScanbeam(long Y)
		{
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x1052A4C", Offset = "0x1052A4C", VA = "0x1052A4C")]
		internal bool PopScanbeam(out long Y)
		{
			return default(bool);
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x1052A84", Offset = "0x1052A84", VA = "0x1052A84")]
		internal bool LocalMinimaPending()
		{
			return default(bool);
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x1052A94", Offset = "0x1052A94", VA = "0x1052A94")]
		internal OutRec CreateOutRec()
		{
			return null;
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0x1052BDC", Offset = "0x1052BDC", VA = "0x1052BDC")]
		internal void DisposeOutRec(int index)
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0x1052C70", Offset = "0x1052C70", VA = "0x1052C70")]
		internal void UpdateEdgeIntoAEL(ref TEdge e)
		{
		}

		[Token(Token = "0x600291F")]
		[Address(RVA = "0x1052DB8", Offset = "0x1052DB8", VA = "0x1052DB8")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		internal void SwapPositionsInAEL(TEdge edge1, TEdge edge2)
		{
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0x1052FE8", Offset = "0x1052FE8", VA = "0x1052FE8")]
		internal void DeleteFromAEL(TEdge e)
		{
		}
	}
	[Token(Token = "0x2000603")]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
	[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
	public class Clipper : ClipperBase
	{
		[Token(Token = "0x2000604")]
		internal enum NodeType
		{
			[Token(Token = "0x40027B9")]
			ntAny,
			[Token(Token = "0x40027BA")]
			ntOpen,
			[Token(Token = "0x40027BB")]
			ntClosed
		}

		[Token(Token = "0x40027A8")]
		public const int ioReverseSolution = 1;

		[Token(Token = "0x40027A9")]
		public const int ioStrictlySimple = 2;

		[Token(Token = "0x40027AA")]
		public const int ioPreserveCollinear = 4;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private ClipType m_ClipType;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Maxima m_Maxima;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TEdge m_SortedEdges;

		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<IntersectNode> m_IntersectList;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IComparer<IntersectNode> m_IntersectNodeComparer;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_ExecuteLocked;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private PolyFillType m_ClipFillType;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PolyFillType m_SubjFillType;

		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Join> m_Joins;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Join> m_GhostJoins;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_UsingPolyTree;

		[Token(Token = "0x170005BA")]
		public bool ReverseSolution
		{
			[Token(Token = "0x6002923")]
			[Address(RVA = "0x10533CC", Offset = "0x10533CC", VA = "0x10533CC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002924")]
			[Address(RVA = "0x10533D4", Offset = "0x10533D4", VA = "0x10533D4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005BB")]
		public bool StrictlySimple
		{
			[Token(Token = "0x6002925")]
			[Address(RVA = "0x10533E0", Offset = "0x10533E0", VA = "0x10533E0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002926")]
			[Address(RVA = "0x10533E8", Offset = "0x10533E8", VA = "0x10533E8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x105308C", Offset = "0x105308C", VA = "0x105308C")]
		public Clipper(int InitOptions = 0)
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x1053288", Offset = "0x1053288", VA = "0x1053288")]
		private void InsertMaxima(long X)
		{
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0x10533F4", Offset = "0x10533F4", VA = "0x10533F4")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		public bool Execute(ClipType clipType, List<List<IntPoint>> solution, PolyFillType FillType = PolyFillType.pftEvenOdd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x1053594", Offset = "0x1053594", VA = "0x1053594")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		public bool Execute(ClipType clipType, PolyTree polytree, PolyFillType FillType = PolyFillType.pftEvenOdd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0x10533FC", Offset = "0x10533FC", VA = "0x10533FC")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		public bool Execute(ClipType clipType, List<List<IntPoint>> solution, PolyFillType subjFillType, PolyFillType clipFillType)
		{
			return default(bool);
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x105359C", Offset = "0x105359C", VA = "0x105359C")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		public bool Execute(ClipType clipType, PolyTree polytree, PolyFillType subjFillType, PolyFillType clipFillType)
		{
			return default(bool);
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0x10540D4", Offset = "0x10540D4", VA = "0x10540D4")]
		internal void FixHoleLinkage(OutRec outRec)
		{
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x1053688", Offset = "0x1053688", VA = "0x1053688")]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.NullChecks, false)]
		[Il2CppSetOption(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false)]
		private bool ExecuteInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x10552C8", Offset = "0x10552C8", VA = "0x10552C8")]
		private void DisposeAllPolyPts()
		{
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0x1055378", Offset = "0x1055378", VA = "0x1055378")]
		private void AddJoin(OutPt Op1, OutPt Op2, IntPoint OffPt)
		{
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0x10554A0", Offset = "0x10554A0", VA = "0x10554A0")]
		private void AddGhostJoin(OutPt Op, IntPoint OffPt)
		{
		}

		[Token(Token = "0x6002930")]
		[Address(RVA = "0x1054128", Offset = "0x1054128", VA = "0x1054128")]
		private void InsertLocalMinimaIntoAEL(long botY)
		{
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0x10555A8", Offset = "0x10555A8", VA = "0x10555A8")]
		private void InsertEdgeIntoAEL(TEdge edge, TEdge startEdge)
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0x10563E4", Offset = "0x10563E4", VA = "0x10563E4")]
		private bool E2InsertsBeforeE1(TEdge e1, TEdge e2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0x10564A4", Offset = "0x10564A4", VA = "0x10564A4")]
		private bool IsEvenOddFillType(TEdge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0x10564C8", Offset = "0x10564C8", VA = "0x10564C8")]
		private bool IsEvenOddAltFillType(TEdge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6002935")]
		[Address(RVA = "0x10558C8", Offset = "0x10558C8", VA = "0x10558C8")]
		private bool IsContributing(TEdge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0x10556AC", Offset = "0x10556AC", VA = "0x10556AC")]
		private void SetWindingCount(TEdge edge)
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x1055DA8", Offset = "0x1055DA8", VA = "0x1055DA8")]
		private void AddEdgeToSEL(TEdge edge)
		{
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0x10564EC", Offset = "0x10564EC", VA = "0x10564EC")]
		internal bool PopEdgeFromSEL(out TEdge e)
		{
			return default(bool);
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0x1056578", Offset = "0x1056578", VA = "0x1056578")]
		private void CopyAELToSEL()
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0x10565C0", Offset = "0x10565C0", VA = "0x10565C0")]
		private void SwapPositionsInSEL(TEdge edge1, TEdge edge2)
		{
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x10567F0", Offset = "0x10567F0", VA = "0x10567F0")]
		private void AddLocalMaxPoly(TEdge e1, TEdge e2, IntPoint pt)
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0x1055C18", Offset = "0x1055C18", VA = "0x1055C18")]
		private OutPt AddLocalMinPoly(TEdge e1, TEdge e2, IntPoint pt)
		{
			return null;
		}

		[Token(Token = "0x600293D")]
		[Address(RVA = "0x1055A2C", Offset = "0x1055A2C", VA = "0x1055A2C")]
		private OutPt AddOutPt(TEdge e, IntPoint pt)
		{
			return null;
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x1056C80", Offset = "0x1056C80", VA = "0x1056C80")]
		private OutPt GetLastOutPt(TEdge e)
		{
			return null;
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0x1056CEC", Offset = "0x1056CEC", VA = "0x1056CEC")]
		internal void SwapPoints(ref IntPoint pt1, ref IntPoint pt2)
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0x1055E38", Offset = "0x1055E38", VA = "0x1055E38")]
		private bool HorzSegmentsOverlap(long seg1a, long seg1b, long seg2a, long seg2b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x1056B9C", Offset = "0x1056B9C", VA = "0x1056B9C")]
		private void SetHoleState(TEdge e, OutRec outRec)
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0x1056D00", Offset = "0x1056D00", VA = "0x1056D00")]
		private double GetDx(IntPoint pt1, IntPoint pt2)
		{
			return default(double);
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0x1056D28", Offset = "0x1056D28", VA = "0x1056D28")]
		private bool FirstIsBottomPt(OutPt btmPt1, OutPt btmPt2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x1057034", Offset = "0x1057034", VA = "0x1057034")]
		private OutPt GetBottomPt(OutPt pp)
		{
			return null;
		}

		[Token(Token = "0x6002945")]
		[Address(RVA = "0x1057114", Offset = "0x1057114", VA = "0x1057114")]
		private OutRec GetLowermostRec(OutRec outRec1, OutRec outRec2)
		{
			return null;
		}

		[Token(Token = "0x6002946")]
		[Address(RVA = "0x10571F4", Offset = "0x10571F4", VA = "0x10571F4")]
		private bool OutRec1RightOfOutRec2(OutRec outRec1, OutRec outRec2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x1057214", Offset = "0x1057214", VA = "0x1057214")]
		private OutRec GetOutRec(int idx)
		{
			return null;
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0x1056890", Offset = "0x1056890", VA = "0x1056890")]
		private void AppendPolygon(TEdge e1, TEdge e2)
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0x1054A20", Offset = "0x1054A20", VA = "0x1054A20")]
		private void ReversePolyPtLinks(OutPt pp)
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x10572A4", Offset = "0x10572A4", VA = "0x10572A4")]
		private static void SwapSides(TEdge edge1, TEdge edge2)
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x10572B8", Offset = "0x10572B8", VA = "0x10572B8")]
		private static void SwapPolyIndexes(TEdge edge1, TEdge edge2)
		{
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0x1055E68", Offset = "0x1055E68", VA = "0x1055E68")]
		private void IntersectEdges(TEdge e1, TEdge e2, IntPoint pt)
		{
		}

		[Token(Token = "0x600294D")]
		[Address(RVA = "0x10572CC", Offset = "0x10572CC", VA = "0x10572CC")]
		private void DeleteFromSEL(TEdge e)
		{
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x10544B8", Offset = "0x10544B8", VA = "0x10544B8")]
		private void ProcessHorizontals()
		{
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0x10578D0", Offset = "0x10578D0", VA = "0x10578D0")]
		private void GetHorzDirection(TEdge HorzEdge, out Direction Dir, out long Left, out long Right)
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0x1057368", Offset = "0x1057368", VA = "0x1057368")]
		private void ProcessHorizontal(TEdge horzEdge)
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x1057958", Offset = "0x1057958", VA = "0x1057958")]
		private TEdge GetNextInAEL(TEdge e, Direction Direction)
		{
			return null;
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x1057970", Offset = "0x1057970", VA = "0x1057970")]
		private bool IsMinima(TEdge e)
		{
			return default(bool);
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x10579A0", Offset = "0x10579A0", VA = "0x10579A0")]
		private bool IsMaxima(TEdge e, double Y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0x10579CC", Offset = "0x10579CC", VA = "0x10579CC")]
		private bool IsIntermediate(TEdge e, double Y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x1057900", Offset = "0x1057900", VA = "0x1057900")]
		internal TEdge GetMaximaPair(TEdge e)
		{
			return null;
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0x10579F4", Offset = "0x10579F4", VA = "0x10579F4")]
		internal TEdge GetMaximaPairEx(TEdge e)
		{
			return null;
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x10544F8", Offset = "0x10544F8", VA = "0x10544F8")]
		private bool ProcessIntersections(long topY)
		{
			return default(bool);
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0x1057A30", Offset = "0x1057A30", VA = "0x1057A30")]
		private void BuildIntersectList(long topY)
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x10581F4", Offset = "0x10581F4", VA = "0x10581F4")]
		private bool EdgesAdjacent(IntersectNode inode)
		{
			return default(bool);
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x105821C", Offset = "0x105821C", VA = "0x105821C")]
		private static int IntersectNodeSort(IntersectNode node1, IntersectNode node2)
		{
			return default(int);
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x1057C40", Offset = "0x1057C40", VA = "0x1057C40")]
		private bool FixupIntersectionOrder()
		{
			return default(bool);
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x1057E10", Offset = "0x1057E10", VA = "0x1057E10")]
		private void ProcessIntersectList()
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0x105822C", Offset = "0x105822C", VA = "0x105822C")]
		internal static long Round(double value)
		{
			return default(long);
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x1056444", Offset = "0x1056444", VA = "0x1056444")]
		private static long TopX(TEdge edge, long currentY)
		{
			return default(long);
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x1057F00", Offset = "0x1057F00", VA = "0x1057F00")]
		private void IntersectPoint(TEdge edge1, TEdge edge2, out IntPoint ip)
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x1054674", Offset = "0x1054674", VA = "0x1054674")]
		private void ProcessEdgesAtTopOfScanbeam(long topY)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x1058260", Offset = "0x1058260", VA = "0x1058260")]
		private void DoMaxima(TEdge e)
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x10583E4", Offset = "0x10583E4", VA = "0x10583E4")]
		public static void ReversePaths(List<List<IntPoint>> polys)
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x1058528", Offset = "0x1058528", VA = "0x1058528")]
		public static bool Orientation(List<IntPoint> poly)
		{
			return default(bool);
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x1058648", Offset = "0x1058648", VA = "0x1058648")]
		private int PointCount(OutPt pts)
		{
			return default(int);
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x1053B70", Offset = "0x1053B70", VA = "0x1053B70")]
		private void BuildResult(List<List<IntPoint>> polyg)
		{
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x1053DD8", Offset = "0x1053DD8", VA = "0x1053DD8")]
		private void BuildResult2(PolyTree polytree)
		{
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x1054E30", Offset = "0x1054E30", VA = "0x1054E30")]
		private void FixupOutPolyline(OutRec outrec)
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x1054EE0", Offset = "0x1054EE0", VA = "0x1054EE0")]
		private void FixupOutPolygon(OutRec outRec)
		{
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x1058668", Offset = "0x1058668", VA = "0x1058668")]
		private OutPt DupOutPt(OutPt outPt, bool InsertAfter)
		{
			return null;
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x1058754", Offset = "0x1058754", VA = "0x1058754")]
		private bool GetOverlap(long a1, long a2, long b1, long b2, out long Left, out long Right)
		{
			return default(bool);
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0x105886C", Offset = "0x105886C", VA = "0x105886C")]
		private bool JoinHorz(OutPt op1, OutPt op1b, OutPt op2, OutPt op2b, IntPoint Pt, bool DiscardLeft)
		{
			return default(bool);
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x1058B18", Offset = "0x1058B18", VA = "0x1058B18")]
		private bool JoinPoints(Join j, OutRec outRec1, OutRec outRec2)
		{
			return default(bool);
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x1059098", Offset = "0x1059098", VA = "0x1059098")]
		public static int PointInPolygon(IntPoint pt, List<IntPoint> path)
		{
			return default(int);
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x1059224", Offset = "0x1059224", VA = "0x1059224")]
		private static int PointInPolygon(IntPoint pt, OutPt op)
		{
			return default(int);
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x1059308", Offset = "0x1059308", VA = "0x1059308")]
		private static bool Poly2ContainsPoly1(OutPt outPt1, OutPt outPt2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x1059354", Offset = "0x1059354", VA = "0x1059354")]
		private void FixupFirstLefts1(OutRec OldOutRec, OutRec NewOutRec)
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x10594E4", Offset = "0x10594E4", VA = "0x10594E4")]
		private void FixupFirstLefts2(OutRec innerOutRec, OutRec outerOutRec)
		{
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0x10596F4", Offset = "0x10596F4", VA = "0x10596F4")]
		private void FixupFirstLefts3(OutRec OldOutRec, OutRec NewOutRec)
		{
		}

		[Token(Token = "0x6002973")]
		[Address(RVA = "0x10594CC", Offset = "0x10594CC", VA = "0x10594CC")]
		private static OutRec ParseFirstLeft(OutRec FirstLeft)
		{
			return null;
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0x1054A70", Offset = "0x1054A70", VA = "0x1054A70")]
		private void JoinCommonEdges()
		{
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0x105985C", Offset = "0x105985C", VA = "0x105985C")]
		private void UpdateOutPtIdxs(OutRec outrec)
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x1055030", Offset = "0x1055030", VA = "0x1055030")]
		private void DoSimplePolygons()
		{
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x1058540", Offset = "0x1058540", VA = "0x1058540")]
		public static double Area(List<IntPoint> poly)
		{
			return default(double);
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x10549CC", Offset = "0x10549CC", VA = "0x10549CC")]
		internal double Area(OutRec outRec)
		{
			return default(double);
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x1056FEC", Offset = "0x1056FEC", VA = "0x1056FEC")]
		internal double Area(OutPt op)
		{
			return default(double);
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x105987C", Offset = "0x105987C", VA = "0x105987C")]
		public static List<List<IntPoint>> SimplifyPolygon(List<IntPoint> poly, PolyFillType fillType = PolyFillType.pftEvenOdd)
		{
			return null;
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x1059958", Offset = "0x1059958", VA = "0x1059958")]
		public static List<List<IntPoint>> SimplifyPolygons(List<List<IntPoint>> polys, PolyFillType fillType = PolyFillType.pftEvenOdd)
		{
			return null;
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x1059A34", Offset = "0x1059A34", VA = "0x1059A34")]
		private static double DistanceSqrd(IntPoint pt1, IntPoint pt2)
		{
			return default(double);
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x1059A5C", Offset = "0x1059A5C", VA = "0x1059A5C")]
		private static double DistanceFromLineSqrd(IntPoint pt, IntPoint ln1, IntPoint ln2)
		{
			return default(double);
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x1059AB0", Offset = "0x1059AB0", VA = "0x1059AB0")]
		private static bool SlopesNearCollinear(IntPoint pt1, IntPoint pt2, IntPoint pt3, double distSqrd)
		{
			return default(bool);
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x1059BFC", Offset = "0x1059BFC", VA = "0x1059BFC")]
		private static bool PointsAreClose(IntPoint pt1, IntPoint pt2, double distSqrd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x1059C2C", Offset = "0x1059C2C", VA = "0x1059C2C")]
		private static OutPt ExcludeOp(OutPt op)
		{
			return null;
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0x1059C6C", Offset = "0x1059C6C", VA = "0x1059C6C")]
		public static List<IntPoint> CleanPolygon(List<IntPoint> path, double distance = 1.415)
		{
			return null;
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0x105A068", Offset = "0x105A068", VA = "0x105A068")]
		public static List<List<IntPoint>> CleanPolygons(List<List<IntPoint>> polys, double distance = 1.415)
		{
			return null;
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0x105A1BC", Offset = "0x105A1BC", VA = "0x105A1BC")]
		internal static List<List<IntPoint>> Minkowski(List<IntPoint> pattern, List<IntPoint> path, bool IsSum, bool IsClosed)
		{
			return null;
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x105AAB4", Offset = "0x105AAB4", VA = "0x105AAB4")]
		public static List<List<IntPoint>> MinkowskiSum(List<IntPoint> pattern, List<IntPoint> path, bool pathIsClosed)
		{
			return null;
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x105AB64", Offset = "0x105AB64", VA = "0x105AB64")]
		private static List<IntPoint> TranslatePath(List<IntPoint> path, IntPoint delta)
		{
			return null;
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0x105ACD4", Offset = "0x105ACD4", VA = "0x105ACD4")]
		public static List<List<IntPoint>> MinkowskiSum(List<IntPoint> pattern, List<List<IntPoint>> paths, bool pathIsClosed)
		{
			return null;
		}

		[Token(Token = "0x6002987")]
		[Address(RVA = "0x105AE80", Offset = "0x105AE80", VA = "0x105AE80")]
		public static List<List<IntPoint>> MinkowskiDiff(List<IntPoint> poly1, List<IntPoint> poly2)
		{
			return null;
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x105AF2C", Offset = "0x105AF2C", VA = "0x105AF2C")]
		public static List<List<IntPoint>> PolyTreeToPaths(PolyTree polytree)
		{
			return null;
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0x105AFDC", Offset = "0x105AFDC", VA = "0x105AFDC")]
		internal static void AddPolyNodeToPaths(PolyNode polynode, NodeType nt, List<List<IntPoint>> paths)
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0x105B1CC", Offset = "0x105B1CC", VA = "0x105B1CC")]
		public static List<List<IntPoint>> OpenPathsFromPolyTree(PolyTree polytree)
		{
			return null;
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0x105B380", Offset = "0x105B380", VA = "0x105B380")]
		public static List<List<IntPoint>> ClosedPathsFromPolyTree(PolyTree polytree)
		{
			return null;
		}
	}
	[Token(Token = "0x2000605")]
	public class ClipperOffset
	{
		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<List<IntPoint>> m_destPolys;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IntPoint> m_srcPoly;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<IntPoint> m_destPoly;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DoublePoint> m_normals;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double m_delta;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double m_sinA;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double m_sin;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double m_cos;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double m_miterLim;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double m_StepsPerRad;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IntPoint m_lowest;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PolyNode m_polyNodes;

		[Token(Token = "0x40027CA")]
		private const double two_pi = Math.PI * 2.0;

		[Token(Token = "0x40027CB")]
		private const double def_arc_tolerance = 0.25;

		[Token(Token = "0x170005BC")]
		public double ArcTolerance
		{
			[Token(Token = "0x600298C")]
			[Address(RVA = "0x1072788", Offset = "0x1072788", VA = "0x1072788")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600298D")]
			[Address(RVA = "0x1072790", Offset = "0x1072790", VA = "0x1072790")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170005BD")]
		public double MiterLimit
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0x1072798", Offset = "0x1072798", VA = "0x1072798")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600298F")]
			[Address(RVA = "0x10727A0", Offset = "0x10727A0", VA = "0x10727A0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x10727A8", Offset = "0x10727A8", VA = "0x10727A8")]
		public ClipperOffset(double miterLimit = 2.0, double arcTolerance = 0.25)
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x107288C", Offset = "0x107288C", VA = "0x107288C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x1072904", Offset = "0x1072904", VA = "0x1072904")]
		internal static long Round(double value)
		{
			return default(long);
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x1072938", Offset = "0x1072938", VA = "0x1072938")]
		public void AddPath(List<IntPoint> path, JoinType joinType, EndType endType)
		{
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x1072DBC", Offset = "0x1072DBC", VA = "0x1072DBC")]
		public void AddPaths(List<List<IntPoint>> paths, JoinType joinType, EndType endType)
		{
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x1072F10", Offset = "0x1072F10", VA = "0x1072F10")]
		private void FixOrientations()
		{
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x107309C", Offset = "0x107309C", VA = "0x107309C")]
		internal static DoublePoint GetUnitNormal(IntPoint pt1, IntPoint pt2)
		{
			return default(DoublePoint);
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x1073164", Offset = "0x1073164", VA = "0x1073164")]
		private void DoOffset(double delta)
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x10754D0", Offset = "0x10754D0", VA = "0x10754D0")]
		public void Execute(ref List<List<IntPoint>> solution, double delta)
		{
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0x10758C0", Offset = "0x10758C0", VA = "0x10758C0")]
		public void Execute(ref PolyTree solution, double delta)
		{
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0x107452C", Offset = "0x107452C", VA = "0x107452C")]
		private void OffsetPoint(int j, ref int k, JoinType jointype)
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x1074C50", Offset = "0x1074C50", VA = "0x1074C50")]
		internal void DoSquare(int j, int k)
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x1075DF0", Offset = "0x1075DF0", VA = "0x1075DF0")]
		internal void DoMiter(int j, int k, double r)
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x10750B0", Offset = "0x10750B0", VA = "0x10750B0")]
		internal void DoRound(int j, int k)
		{
		}
	}
	[Token(Token = "0x2000606")]
	internal class ClipperException : Exception
	{
		[Token(Token = "0x600299E")]
		[Address(RVA = "0x1076010", Offset = "0x1076010", VA = "0x1076010")]
		public ClipperException(string description)
		{
		}
	}
}
