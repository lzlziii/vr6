using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net.Security;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography.X509Certificates;
using System.Threading;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;
using AlmostEngine.Screenshot;
using Ara;
using CubicleNinjas.GuidedTaiChi;
using CubicleNinjas.GuidedTaiChi.ScriptableObjects;
using DigitalRuby.FastLineRenderer;
using Il2CppDummyDll;
using MeshBrush;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using ParticlePlayground;
using PlaygroundSplines;
using ProBuilder2.Common;
using RenderHeads.Media.AVProVideo;
using SoftMasking;
using TMPro;
using UltimateGameTools.MeshSimplifier;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnitySampleAssets.CrossPlatformInput;
using VRStandardAssets.Common;
using VRStandardAssets.Utils;
using Virtence.VText;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class Loom : MonoBehaviour
{
	[Token(Token = "0x200053B")]
	public struct DelayedQueueItem
	{
		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Action action;
	}

	[Serializable]
	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF00", Offset = "0x85CF00")]
	private sealed class <>c
	{
		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<DelayedQueueItem, bool> <>9__21_0;

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0xA163C8", Offset = "0xA163C8", VA = "0xA163C8")]
		public <>c()
		{
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0xA163D0", Offset = "0xA163D0", VA = "0xA163D0")]
		internal bool <Update>b__21_0(DelayedQueueItem d)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int maxThreads;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int numThreads;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Loom _current;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _count;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool initialized;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<Action> _actions;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly List<DelayedQueueItem> _delayed;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly List<DelayedQueueItem> _currentDelayed;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Action> _currentActions;

	[Token(Token = "0x17000001")]
	public static Loom Current
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xA154C0", Offset = "0xA154C0", VA = "0xA154C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xA153FC", Offset = "0xA153FC", VA = "0xA153FC")]
		set
		{
		}
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xA1561C", Offset = "0xA1561C", VA = "0xA1561C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xA1552C", Offset = "0xA1552C", VA = "0xA1552C")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xA15694", Offset = "0xA15694", VA = "0xA15694")]
	public static void QueueOnMainThread(Action action)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xA156FC", Offset = "0xA156FC", VA = "0xA156FC")]
	public static void QueueOnMainThread(Action action, float time)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xA15980", Offset = "0xA15980", VA = "0xA15980")]
	public static Thread RunAsync(Action a)
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xA15A90", Offset = "0xA15A90", VA = "0xA15A90")]
	private static void RunAction(object action)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xA15C38", Offset = "0xA15C38", VA = "0xA15C38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xA15D08", Offset = "0xA15D08", VA = "0xA15D08")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xA15D0C", Offset = "0xA15D0C", VA = "0xA15D0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xA16238", Offset = "0xA16238", VA = "0xA16238")]
	public Loom()
	{
	}
}
[Token(Token = "0x2000003")]
public class GenericEventArgs<T> : EventArgs, IGenericEventArgs<T>
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T _value;

	[Token(Token = "0x17000002")]
	public T Value
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x600000F")]
	public GenericEventArgs(T value)
	{
	}
}
[Token(Token = "0x2000004")]
public interface IGenericEventArgs<T>
{
	[Token(Token = "0x17000003")]
	T Value
	{
		[Token(Token = "0x6000010")]
		get;
	}
}
[Serializable]
[Token(Token = "0x2000005")]
public class VTextParameter
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float m_depth;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float m_bevel;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool m_needTangents;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	private bool m_backface;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float m_crease;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int m_quality;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string m_fontname;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ShadowCastingMode m_shadowCastMode;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private bool m_receiveShadows;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	[SerializeField]
	private bool m_useLightProbes;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	[HideInInspector]
	private bool m_modified;

	[Token(Token = "0x17000004")]
	public float Depth
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0xC13690", Offset = "0xC13690", VA = "0xC13690")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000026")]
		[Address(RVA = "0xC13698", Offset = "0xC13698", VA = "0xC13698")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public float Crease
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0xC138B0", Offset = "0xC138B0", VA = "0xC138B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000028")]
		[Address(RVA = "0xC138B8", Offset = "0xC138B8", VA = "0xC138B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public float Bevel
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0xC139AC", Offset = "0xC139AC", VA = "0xC139AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600002A")]
		[Address(RVA = "0xC137A0", Offset = "0xC137A0", VA = "0xC137A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public int Quality
	{
		[Token(Token = "0x600002B")]
		[Address(RVA = "0xC139B4", Offset = "0xC139B4", VA = "0xC139B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600002C")]
		[Address(RVA = "0xC139BC", Offset = "0xC139BC", VA = "0xC139BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public bool Backface
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0xC13A6C", Offset = "0xC13A6C", VA = "0xC13A6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600002E")]
		[Address(RVA = "0xC13A74", Offset = "0xC13A74", VA = "0xC13A74")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public bool GenerateTangents
	{
		[Token(Token = "0x600002F")]
		[Address(RVA = "0xC13B30", Offset = "0xC13B30", VA = "0xC13B30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000030")]
		[Address(RVA = "0xC13B38", Offset = "0xC13B38", VA = "0xC13B38")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public string Fontname
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0xC13BF4", Offset = "0xC13BF4", VA = "0xC13BF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000032")]
		[Address(RVA = "0xC13BFC", Offset = "0xC13BFC", VA = "0xC13BFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public ShadowCastingMode ShadowCastMode
	{
		[Token(Token = "0x6000033")]
		[Address(RVA = "0xC13CB4", Offset = "0xC13CB4", VA = "0xC13CB4")]
		get
		{
			return default(ShadowCastingMode);
		}
		[Token(Token = "0x6000034")]
		[Address(RVA = "0xC13CBC", Offset = "0xC13CBC", VA = "0xC13CBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public bool ReceiveShadows
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xC13D60", Offset = "0xC13D60", VA = "0xC13D60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000036")]
		[Address(RVA = "0xC13D68", Offset = "0xC13D68", VA = "0xC13D68")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public bool UseLightProbes
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0xC13E10", Offset = "0xC13E10", VA = "0xC13E10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000038")]
		[Address(RVA = "0xC13E18", Offset = "0xC13E18", VA = "0xC13E18")]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event EventHandler<GenericEventArgs<float>> DepthChanged
	{
		[Token(Token = "0x6000011")]
		[Address(RVA = "0xC129C0", Offset = "0xC129C0", VA = "0xC129C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD0C", Offset = "0x86CD0C")]
		add
		{
		}
		[Token(Token = "0x6000012")]
		[Address(RVA = "0xC12A64", Offset = "0xC12A64", VA = "0xC12A64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD1C", Offset = "0x86CD1C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event EventHandler<GenericEventArgs<float>> BevelChanged
	{
		[Token(Token = "0x6000013")]
		[Address(RVA = "0xC12B08", Offset = "0xC12B08", VA = "0xC12B08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD2C", Offset = "0x86CD2C")]
		add
		{
		}
		[Token(Token = "0x6000014")]
		[Address(RVA = "0xC12BAC", Offset = "0xC12BAC", VA = "0xC12BAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD3C", Offset = "0x86CD3C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event EventHandler<GenericEventArgs<bool>> NeedTangentsChanged
	{
		[Token(Token = "0x6000015")]
		[Address(RVA = "0xC12C50", Offset = "0xC12C50", VA = "0xC12C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD4C", Offset = "0x86CD4C")]
		add
		{
		}
		[Token(Token = "0x6000016")]
		[Address(RVA = "0xC12CF4", Offset = "0xC12CF4", VA = "0xC12CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD5C", Offset = "0x86CD5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event EventHandler<GenericEventArgs<bool>> BackfaceChanged
	{
		[Token(Token = "0x6000017")]
		[Address(RVA = "0xC12D98", Offset = "0xC12D98", VA = "0xC12D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD6C", Offset = "0x86CD6C")]
		add
		{
		}
		[Token(Token = "0x6000018")]
		[Address(RVA = "0xC12E3C", Offset = "0xC12E3C", VA = "0xC12E3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD7C", Offset = "0x86CD7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event EventHandler<GenericEventArgs<float>> CreaseChanged
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0xC12EE0", Offset = "0xC12EE0", VA = "0xC12EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD8C", Offset = "0x86CD8C")]
		add
		{
		}
		[Token(Token = "0x600001A")]
		[Address(RVA = "0xC12F84", Offset = "0xC12F84", VA = "0xC12F84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CD9C", Offset = "0x86CD9C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event EventHandler<GenericEventArgs<int>> QualityChanged
	{
		[Token(Token = "0x600001B")]
		[Address(RVA = "0xC13028", Offset = "0xC13028", VA = "0xC13028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CDAC", Offset = "0x86CDAC")]
		add
		{
		}
		[Token(Token = "0x600001C")]
		[Address(RVA = "0xC130CC", Offset = "0xC130CC", VA = "0xC130CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CDBC", Offset = "0x86CDBC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event EventHandler<GenericEventArgs<string>> FontNameChanged
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0xC13170", Offset = "0xC13170", VA = "0xC13170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CDCC", Offset = "0x86CDCC")]
		add
		{
		}
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xC13214", Offset = "0xC13214", VA = "0xC13214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CDDC", Offset = "0x86CDDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event EventHandler<GenericEventArgs<ShadowCastingMode>> ShadowCastingModeChanged
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xC132B8", Offset = "0xC132B8", VA = "0xC132B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CDEC", Offset = "0x86CDEC")]
		add
		{
		}
		[Token(Token = "0x6000020")]
		[Address(RVA = "0xC1335C", Offset = "0xC1335C", VA = "0xC1335C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CDFC", Offset = "0x86CDFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event EventHandler<GenericEventArgs<bool>> ReceiveShadowsChanged
	{
		[Token(Token = "0x6000021")]
		[Address(RVA = "0xC13400", Offset = "0xC13400", VA = "0xC13400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE0C", Offset = "0x86CE0C")]
		add
		{
		}
		[Token(Token = "0x6000022")]
		[Address(RVA = "0xC134A4", Offset = "0xC134A4", VA = "0xC134A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE1C", Offset = "0x86CE1C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event EventHandler<GenericEventArgs<bool>> UseLightProbesChanged
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0xC13548", Offset = "0xC13548", VA = "0xC13548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE2C", Offset = "0x86CE2C")]
		add
		{
		}
		[Token(Token = "0x6000024")]
		[Address(RVA = "0xC135EC", Offset = "0xC135EC", VA = "0xC135EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE3C", Offset = "0x86CE3C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xC119B4", Offset = "0xC119B4", VA = "0xC119B4")]
	public bool CheckClearModified()
	{
		return default(bool);
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xC0F260", Offset = "0xC0F260", VA = "0xC0F260")]
	public VTextParameter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public class VTextLayout
{
	[Token(Token = "0x200053D")]
	public enum align
	{
		[Token(Token = "0x4002886")]
		Base,
		[Token(Token = "0x4002887")]
		Start,
		[Token(Token = "0x4002888")]
		Center,
		[Token(Token = "0x4002889")]
		End,
		[Token(Token = "0x400288A")]
		Block
	}

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_horizontal;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private align m_major;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private align m_minor;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float m_size;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float m_spacing;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float m_glyphSpacing;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnimationCurve m_curveXZ;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AnimationCurve m_curveXY;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool m_orientXZ;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	private bool m_orientXY;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[SerializeField]
	private bool m_isCircular;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float m_startRadius;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float m_endRadius;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float m_circleRadius;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool m_animateRadius;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AnimationCurve m_curveRadius;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	private bool m_modified;

	[Token(Token = "0x1700000E")]
	public bool Horizontal
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0xC123C0", Offset = "0xC123C0", VA = "0xC123C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0xC123C8", Offset = "0xC123C8", VA = "0xC123C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public align Major
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0xC12484", Offset = "0xC12484", VA = "0xC12484")]
		get
		{
			return default(align);
		}
		[Token(Token = "0x600004A")]
		[Address(RVA = "0xC1248C", Offset = "0xC1248C", VA = "0xC1248C")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public align Minor
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0xC12548", Offset = "0xC12548", VA = "0xC12548")]
		get
		{
			return default(align);
		}
		[Token(Token = "0x600004C")]
		[Address(RVA = "0xC12550", Offset = "0xC12550", VA = "0xC12550")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float Size
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0xC12600", Offset = "0xC12600", VA = "0xC12600")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0xC12608", Offset = "0xC12608", VA = "0xC12608")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public float Spacing
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0xC126C0", Offset = "0xC126C0", VA = "0xC126C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000050")]
		[Address(RVA = "0xC126C8", Offset = "0xC126C8", VA = "0xC126C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float GlyphSpacing
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0xC12780", Offset = "0xC12780", VA = "0xC12780")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000052")]
		[Address(RVA = "0xC12788", Offset = "0xC12788", VA = "0xC12788")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public AnimationCurve CurveXZ
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0xC12840", Offset = "0xC12840", VA = "0xC12840")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0xC12848", Offset = "0xC12848", VA = "0xC12848")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public AnimationCurve CurveXY
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0xC12858", Offset = "0xC12858", VA = "0xC12858")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000056")]
		[Address(RVA = "0xC12860", Offset = "0xC12860", VA = "0xC12860")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool OrientationXZ
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0xC12870", Offset = "0xC12870", VA = "0xC12870")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xC12878", Offset = "0xC12878", VA = "0xC12878")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool OrientationXY
	{
		[Token(Token = "0x6000059")]
		[Address(RVA = "0xC128A0", Offset = "0xC128A0", VA = "0xC128A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600005A")]
		[Address(RVA = "0xC128A8", Offset = "0xC128A8", VA = "0xC128A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public bool OrientationCircular
	{
		[Token(Token = "0x600005B")]
		[Address(RVA = "0xC128D0", Offset = "0xC128D0", VA = "0xC128D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600005C")]
		[Address(RVA = "0xC128D8", Offset = "0xC128D8", VA = "0xC128D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public float StartRadius
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0xC12900", Offset = "0xC12900", VA = "0xC12900")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600005E")]
		[Address(RVA = "0xC12908", Offset = "0xC12908", VA = "0xC12908")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float EndRadius
	{
		[Token(Token = "0x600005F")]
		[Address(RVA = "0xC12924", Offset = "0xC12924", VA = "0xC12924")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000060")]
		[Address(RVA = "0xC1292C", Offset = "0xC1292C", VA = "0xC1292C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float CircleRadius
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0xC12948", Offset = "0xC12948", VA = "0xC12948")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000062")]
		[Address(RVA = "0xC12950", Offset = "0xC12950", VA = "0xC12950")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public bool AnimateRadius
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0xC1296C", Offset = "0xC1296C", VA = "0xC1296C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000064")]
		[Address(RVA = "0xC12974", Offset = "0xC12974", VA = "0xC12974")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public AnimationCurve CurveRadius
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0xC1299C", Offset = "0xC1299C", VA = "0xC1299C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000066")]
		[Address(RVA = "0xC129A4", Offset = "0xC129A4", VA = "0xC129A4")]
		set
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event EventHandler<GenericEventArgs<bool>> IsHorizontalLayoutChanged
	{
		[Token(Token = "0x600003B")]
		[Address(RVA = "0xC11C10", Offset = "0xC11C10", VA = "0xC11C10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE4C", Offset = "0x86CE4C")]
		add
		{
		}
		[Token(Token = "0x600003C")]
		[Address(RVA = "0xC11CB4", Offset = "0xC11CB4", VA = "0xC11CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE5C", Offset = "0x86CE5C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event EventHandler<GenericEventArgs<float>> SizeChanged
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0xC11D58", Offset = "0xC11D58", VA = "0xC11D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE6C", Offset = "0x86CE6C")]
		add
		{
		}
		[Token(Token = "0x600003E")]
		[Address(RVA = "0xC11DFC", Offset = "0xC11DFC", VA = "0xC11DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE7C", Offset = "0x86CE7C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event EventHandler<GenericEventArgs<align>> MajorChanged
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0xC11EA0", Offset = "0xC11EA0", VA = "0xC11EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE8C", Offset = "0x86CE8C")]
		add
		{
		}
		[Token(Token = "0x6000040")]
		[Address(RVA = "0xC11F44", Offset = "0xC11F44", VA = "0xC11F44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CE9C", Offset = "0x86CE9C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event EventHandler<GenericEventArgs<align>> MinorChanged
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0xC11FE8", Offset = "0xC11FE8", VA = "0xC11FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CEAC", Offset = "0x86CEAC")]
		add
		{
		}
		[Token(Token = "0x6000042")]
		[Address(RVA = "0xC1208C", Offset = "0xC1208C", VA = "0xC1208C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CEBC", Offset = "0x86CEBC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event EventHandler<GenericEventArgs<float>> LineSpacingChanged
	{
		[Token(Token = "0x6000043")]
		[Address(RVA = "0xC12130", Offset = "0xC12130", VA = "0xC12130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CECC", Offset = "0x86CECC")]
		add
		{
		}
		[Token(Token = "0x6000044")]
		[Address(RVA = "0xC121D4", Offset = "0xC121D4", VA = "0xC121D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CEDC", Offset = "0x86CEDC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event EventHandler<GenericEventArgs<float>> GlyphSpacingChanged
	{
		[Token(Token = "0x6000045")]
		[Address(RVA = "0xC12278", Offset = "0xC12278", VA = "0xC12278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CEEC", Offset = "0x86CEEC")]
		add
		{
		}
		[Token(Token = "0x6000046")]
		[Address(RVA = "0xC1231C", Offset = "0xC1231C", VA = "0xC1231C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CEFC", Offset = "0x86CEFC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xC0F2D8", Offset = "0xC0F2D8", VA = "0xC0F2D8")]
	public VTextLayout()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xC0F92C", Offset = "0xC0F92C", VA = "0xC0F92C")]
	public bool CheckClearModified()
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000007")]
public class VTextPhysics
{
	[Token(Token = "0x200053E")]
	public enum ColliderType
	{
		[Token(Token = "0x400288C")]
		None,
		[Token(Token = "0x400288D")]
		Box,
		[Token(Token = "0x400288E")]
		Mesh
	}

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	private bool _modified;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private ColliderType _colliderType;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhysicMaterial _colliderMaterial;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _colliderIsTrigger;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool _colliderIsConvex;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[SerializeField]
	private bool _createRigidBody;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _rigidbodyMass;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _rigidbodyDrag;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _rigidbodyAngularDrag;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool _rigidbodyUseGravity;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _rigidbodyIsKinematic;

	[Token(Token = "0x1700001E")]
	public ColliderType Collider
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0xC13EC0", Offset = "0xC13EC0", VA = "0xC13EC0")]
		get
		{
			return default(ColliderType);
		}
		[Token(Token = "0x600006A")]
		[Address(RVA = "0xC13EC8", Offset = "0xC13EC8", VA = "0xC13EC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public bool ColliderIsTrigger
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0xC13EE4", Offset = "0xC13EE4", VA = "0xC13EE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600006C")]
		[Address(RVA = "0xC13EEC", Offset = "0xC13EEC", VA = "0xC13EEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public bool ColliderIsConvex
	{
		[Token(Token = "0x600006D")]
		[Address(RVA = "0xC13F14", Offset = "0xC13F14", VA = "0xC13F14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xC13F1C", Offset = "0xC13F1C", VA = "0xC13F1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public PhysicMaterial ColliderMaterial
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0xC13F44", Offset = "0xC13F44", VA = "0xC13F44")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000070")]
		[Address(RVA = "0xC13F4C", Offset = "0xC13F4C", VA = "0xC13F4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public bool CreateRigidBody
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0xC13FDC", Offset = "0xC13FDC", VA = "0xC13FDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000072")]
		[Address(RVA = "0xC13FE4", Offset = "0xC13FE4", VA = "0xC13FE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public float RigidbodyMass
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0xC1400C", Offset = "0xC1400C", VA = "0xC1400C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000074")]
		[Address(RVA = "0xC14014", Offset = "0xC14014", VA = "0xC14014")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float RigidbodyDrag
	{
		[Token(Token = "0x6000075")]
		[Address(RVA = "0xC14030", Offset = "0xC14030", VA = "0xC14030")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000076")]
		[Address(RVA = "0xC14038", Offset = "0xC14038", VA = "0xC14038")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public float RigidbodyAngularDrag
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0xC14054", Offset = "0xC14054", VA = "0xC14054")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000078")]
		[Address(RVA = "0xC1405C", Offset = "0xC1405C", VA = "0xC1405C")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public bool RigidbodyUseGravity
	{
		[Token(Token = "0x6000079")]
		[Address(RVA = "0xC14078", Offset = "0xC14078", VA = "0xC14078")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600007A")]
		[Address(RVA = "0xC14080", Offset = "0xC14080", VA = "0xC14080")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public bool RigidbodyIsKinematic
	{
		[Token(Token = "0x600007B")]
		[Address(RVA = "0xC140A8", Offset = "0xC140A8", VA = "0xC140A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600007C")]
		[Address(RVA = "0xC140B0", Offset = "0xC140B0", VA = "0xC140B0")]
		set
		{
		}
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xC0F948", Offset = "0xC0F948", VA = "0xC0F948")]
	public bool CheckClearModified()
	{
		return default(bool);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xC0F5D0", Offset = "0xC0F5D0", VA = "0xC0F5D0")]
	public VTextPhysics()
	{
	}
}
[Serializable]
[Token(Token = "0x2000008")]
public class VTextAdditionalComponents
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	private bool _modified;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _additionalComponentsObject;

	[Token(Token = "0x17000028")]
	public GameObject AdditionalComponentsObject
	{
		[Token(Token = "0x600007F")]
		[Address(RVA = "0xC0EF7C", Offset = "0xC0EF7C", VA = "0xC0EF7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000080")]
		[Address(RVA = "0xC0EF84", Offset = "0xC0EF84", VA = "0xC0EF84")]
		set
		{
		}
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xC0F014", Offset = "0xC0F014", VA = "0xC0F014")]
	public bool CheckClearModified()
	{
		return default(bool);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xC0F030", Offset = "0xC0F030", VA = "0xC0F030")]
	public VTextAdditionalComponents()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class VTextInterface : MonoBehaviour
{
	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF10", Offset = "0x85CF10")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Component c;

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0xC10FB0", Offset = "0xC10FB0", VA = "0xC10FB0")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0xC11B80", Offset = "0xC11B80", VA = "0xC11B80")]
		internal bool <UpdateAdditionalComponents>b__0(Type type)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF20", Offset = "0x85CF20")]
	private sealed class <>c__DisplayClass22_1
	{
		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Component c;

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0xC10FB8", Offset = "0xC10FB8", VA = "0xC10FB8")]
		public <>c__DisplayClass22_1()
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0xC11BC8", Offset = "0xC11BC8", VA = "0xC11BC8")]
		internal bool <UpdateAdditionalComponents>b__1(Type type)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public VTextParameter parameter;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public VTextLayout layout;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public VTextPhysics Physics;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public VTextAdditionalComponents AdditionalComponents;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public string RenderText;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_oldText;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material[] materials;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material[] usedMaterials;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VFontInfo m_fontInfo;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<MonoBehaviour> m_changeListener;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Type> _componentsToKeep;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xC0F038", Offset = "0xC0F038", VA = "0xC0F038")]
	public VTextInterface()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xC0F5EC", Offset = "0xC0F5EC", VA = "0xC0F5EC", Slot = "1")]
	~VTextInterface()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xC0F6C4", Offset = "0xC0F6C4", VA = "0xC0F6C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xC0F964", Offset = "0xC0F964", VA = "0xC0F964")]
	public static List<string> GetAvailableFonts()
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xC0FB74", Offset = "0xC0FB74", VA = "0xC0FB74")]
	public bool Is3D()
	{
		return default(bool);
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xC0FBAC", Offset = "0xC0FBAC", VA = "0xC0FBAC")]
	public void RegisterListener(MonoBehaviour go)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xC0FC44", Offset = "0xC0FC44", VA = "0xC0FC44")]
	public void UnRegisterListener(MonoBehaviour go)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xC0FCDC", Offset = "0xC0FCDC", VA = "0xC0FCDC")]
	private void clearChildren()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xC0FE70", Offset = "0xC0FE70", VA = "0xC0FE70")]
	private void UpdateGlyphs(bool updateGeometry = false)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xC10814", Offset = "0xC10814", VA = "0xC10814")]
	private void UpdateLayout()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xC10914", Offset = "0xC10914", VA = "0xC10914")]
	private void UpdatePhysics()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xC10C9C", Offset = "0xC10C9C", VA = "0xC10C9C")]
	private void UpdateAdditionalComponents()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xC109A8", Offset = "0xC109A8", VA = "0xC109A8")]
	private void CreateRigidbody(Transform t)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC10B24", Offset = "0xC10B24", VA = "0xC10B24")]
	private void CreateCollider(Transform t)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xC1123C", Offset = "0xC1123C", VA = "0xC1123C")]
	private void RemoveCollider(Transform t)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC1132C", Offset = "0xC1132C", VA = "0xC1132C")]
	public void Rebuild(bool rebuildMesh = false)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC11480", Offset = "0xC11480", VA = "0xC11480")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xC11864", Offset = "0xC11864", VA = "0xC11864")]
	public void CheckRebuild(bool updateMesh, bool updateLayout, bool updatePhysics, bool updateAdditionalComponents)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xC119D0", Offset = "0xC119D0", VA = "0xC119D0")]
	private void Update()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x857F6C", Offset = "0x857F6C")]
public class CameraOrbit : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distanceMin;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMax;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float smoothTime;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rotationYAxis;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationXAxis;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float velocityX;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityY;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xBEF5B8", Offset = "0xBEF5B8", VA = "0xBEF5B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xBEF694", Offset = "0xBEF694", VA = "0xBEF694")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xBEFA94", Offset = "0xBEFA94", VA = "0xBEFA94")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xBEFB44", Offset = "0xBEFB44", VA = "0xBEFB44")]
	public CameraOrbit()
	{
	}
}
[Token(Token = "0x200000B")]
public class RotateAngleX : MonoBehaviour
{
	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxTiltAngle;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinTiltAngle;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tiltSpeed;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 curRot;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxX;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float minX;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool invertMovement;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xAFB668", Offset = "0xAFB668", VA = "0xAFB668")]
	private void Start()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xAFB6B4", Offset = "0xAFB6B4", VA = "0xAFB6B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xAFB7A8", Offset = "0xAFB7A8", VA = "0xAFB7A8")]
	public RotateAngleX()
	{
	}
}
[Token(Token = "0x200000C")]
public class RotateAngleY : MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxTiltAngle;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinTiltAngle;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tiltSpeed;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 curRot;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxY;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float minY;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool invertMovement;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xAFB7C0", Offset = "0xAFB7C0", VA = "0xAFB7C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xAFB80C", Offset = "0xAFB80C", VA = "0xAFB80C")]
	private void Update()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xAFB900", Offset = "0xAFB900", VA = "0xAFB900")]
	public RotateAngleY()
	{
	}
}
[Token(Token = "0x200000D")]
public class RotateAngleZ : MonoBehaviour
{
	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxTiltAngle;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinTiltAngle;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tiltSpeed;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 curRot;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxZ;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float minZ;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool invertMovement;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xAFB918", Offset = "0xAFB918", VA = "0xAFB918")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xAFB964", Offset = "0xAFB964", VA = "0xAFB964")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xAFBA58", Offset = "0xAFBA58", VA = "0xAFBA58")]
	public RotateAngleZ()
	{
	}
}
[Token(Token = "0x200000E")]
public class spin : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xE42D58", Offset = "0xE42D58", VA = "0xE42D58")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xE42D5C", Offset = "0xE42D5C", VA = "0xE42D5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xE42DE4", Offset = "0xE42DE4", VA = "0xE42DE4")]
	public spin()
	{
	}
}
[Token(Token = "0x200000F")]
public class UnluckFPS : MonoBehaviour
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh _textMesh;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float updateInterval;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeleft;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB5A9B8", Offset = "0xB5A9B8", VA = "0xB5A9B8")]
	public void Start()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB5AA28", Offset = "0xB5AA28", VA = "0xB5AA28")]
	public void Update()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB5AB34", Offset = "0xB5AB34", VA = "0xB5AB34")]
	public UnluckFPS()
	{
	}
}
[Token(Token = "0x2000010")]
public class UnluckFlagGUI : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] bgrs;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light[] lights;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nextButton;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject prevButton;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bgrButton;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject lightButton;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject texturePreview;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject activeObj;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int counter;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int bCounter;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lCounter;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh txt;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh debug;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB5AB44", Offset = "0xB5AB44", VA = "0xB5AB44")]
	public void Start()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB5B16C", Offset = "0xB5B16C", VA = "0xB5B16C")]
	public void Update()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB5B340", Offset = "0xB5B340", VA = "0xB5B340")]
	public void ButtonUp()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB5B650", Offset = "0xB5B650", VA = "0xB5B650")]
	public void LightChange()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB5B5E4", Offset = "0xB5B5E4", VA = "0xB5B5E4")]
	public void NextBgr()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB5B574", Offset = "0xB5B574", VA = "0xB5B574")]
	public void Next()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB5B5AC", Offset = "0xB5B5AC", VA = "0xB5B5AC")]
	public void Prev()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB5AE8C", Offset = "0xB5AE8C", VA = "0xB5AE8C")]
	public void Swap()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB5B704", Offset = "0xB5B704", VA = "0xB5B704")]
	public UnluckFlagGUI()
	{
	}
}
[Token(Token = "0x2000011")]
public class UnluckAnimatedMesh : MonoBehaviour
{
	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter[] meshCache;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform meshCached;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform meshContainerFBX;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float playSpeed;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playSpeedRandom;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool randomSpeedLoop;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentSpeed;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float currentFrame;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public int meshCacheCount;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public MeshFilter meshFilter;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Renderer rendererComponent;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float updateInterval;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool randomRotateX;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool randomRotateY;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool randomRotateZ;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool randomStartFrame;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool randomRotateLoop;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool loop;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool pingPong;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool playOnAwake;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 randomStartDelay;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float startDelay;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startDelayCounter;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float updateSeed;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool pingPongToggle;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform transformCache;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float delta;

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xB59BFC", Offset = "0xB59BFC", VA = "0xB59BFC")]
	public void Start()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xB59E3C", Offset = "0xB59E3C", VA = "0xB59E3C")]
	public void Play()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xB59F5C", Offset = "0xB59F5C", VA = "0xB59F5C")]
	public void RandomRotate()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB59DE4", Offset = "0xB59DE4", VA = "0xB59DE4")]
	public void GetRequiredComponents()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB59F1C", Offset = "0xB59F1C", VA = "0xB59F1C")]
	public void RandomizePlaySpeed()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xB5A0F4", Offset = "0xB5A0F4", VA = "0xB5A0F4")]
	public void FillCacheArray()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xB59D20", Offset = "0xB59D20", VA = "0xB59D20")]
	public void CheckIfMeshHasChanged()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB5A2E4", Offset = "0xB5A2E4", VA = "0xB5A2E4")]
	public void Update()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB5A42C", Offset = "0xB5A42C", VA = "0xB5A42C")]
	public bool PingPongFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB5A49C", Offset = "0xB5A49C", VA = "0xB5A49C")]
	public bool NextFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB5A518", Offset = "0xB5A518", VA = "0xB5A518")]
	public void RandomizePropertiesAfterLoop()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xB5A36C", Offset = "0xB5A36C", VA = "0xB5A36C")]
	public void Animate()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xB5A578", Offset = "0xB5A578", VA = "0xB5A578")]
	public UnluckAnimatedMesh()
	{
	}
}
[Token(Token = "0x2000012")]
public class BackButton : MonoBehaviour
{
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject toggles;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xBB5B78", Offset = "0xBB5B78", VA = "0xBB5B78")]
	public void Back()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xBB5BDC", Offset = "0xBB5BDC", VA = "0xBB5BDC")]
	public BackButton()
	{
	}
}
[Token(Token = "0x2000013")]
public class RandomMaterial : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xFD13D8", Offset = "0xFD13D8", VA = "0xFD13D8")]
	public void Start()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xFD13DC", Offset = "0xFD13DC", VA = "0xFD13DC")]
	public void ChangeMaterial()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xFD1440", Offset = "0xFD1440", VA = "0xFD1440")]
	public RandomMaterial()
	{
	}
}
[Token(Token = "0x2000014")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xB5A5E4", Offset = "0xB5A5E4", VA = "0xB5A5E4")]
	public void Start()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xB5A6CC", Offset = "0xB5A6CC", VA = "0xB5A6CC")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xB5A704", Offset = "0xB5A704", VA = "0xB5A704")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB5A850", Offset = "0xB5A850", VA = "0xB5A850")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB5A99C", Offset = "0xB5A99C", VA = "0xB5A99C")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x2000015")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera lookAtCamera;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lookOnlyOnAwake;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xA15068", Offset = "0xA15068", VA = "0xA15068")]
	public void Start()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xA15154", Offset = "0xA15154", VA = "0xA15154")]
	public void Update()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xA15104", Offset = "0xA15104", VA = "0xA15104")]
	public void LookCam()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xA15164", Offset = "0xA15164", VA = "0xA15164")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x857FA4", Offset = "0x857FA4")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xE59E28", Offset = "0xE59E28", VA = "0xE59E28")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xE5A1E0", Offset = "0xE5A1E0", VA = "0xE5A1E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xE59E2C", Offset = "0xE59E2C", VA = "0xE59E2C")]
	public void Init()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xE5A1E4", Offset = "0xE5A1E4", VA = "0xE5A1E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xE5A71C", Offset = "0xE5A71C", VA = "0xE5A71C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xE5A7CC", Offset = "0xE5A7CC", VA = "0xE5A7CC")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000017")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockController _spawner;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3 _wayPoint;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _speed;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool _dived;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float _stuckCounter;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float _damping;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool _soar;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[HideInInspector]
	public bool _landing;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float _targetSpeed;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool _move;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _model;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _modelT;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float _avoidValue;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float _avoidDistance;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _soarTimer;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _instantiated;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _updateSeed;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool _avoid;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _thisT;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 _landingPosOffset;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xA00044", Offset = "0xA00044", VA = "0xA00044")]
	public void Start()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xA0079C", Offset = "0xA0079C", VA = "0xA0079C")]
	public void Update()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xA00F70", Offset = "0xA00F70", VA = "0xA00F70")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xA00FB0", Offset = "0xA00FB0", VA = "0xA00FB0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xA00170", Offset = "0xA00170", VA = "0xA00170")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xA004B8", Offset = "0xA004B8", VA = "0xA004B8")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xA0073C", Offset = "0xA0073C", VA = "0xA0073C")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xA00354", Offset = "0xA00354", VA = "0xA00354")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xA00808", Offset = "0xA00808", VA = "0xA00808")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xA0086C", Offset = "0xA0086C", VA = "0xA0086C")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xA009AC", Offset = "0xA009AC", VA = "0xA009AC")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xA012B0", Offset = "0xA012B0", VA = "0xA012B0")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xA00D48", Offset = "0xA00D48", VA = "0xA00D48")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xA002A4", Offset = "0xA002A4", VA = "0xA002A4")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xA018B8", Offset = "0xA018B8", VA = "0xA018B8")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xA01060", Offset = "0xA01060", VA = "0xA01060")]
	public void Flap()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xA003C8", Offset = "0xA003C8", VA = "0xA003C8")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xA01980", Offset = "0xA01980", VA = "0xA01980")]
	public void Soar()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xA01A18", Offset = "0xA01A18", VA = "0xA01A18")]
	public void Dive()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xA01D1C", Offset = "0xA01D1C", VA = "0xA01D1C")]
	public void animationSpeed()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xA01FE0", Offset = "0xA01FE0", VA = "0xA01FE0")]
	public FlockChild()
	{
	}
}
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x857FDC", Offset = "0x857FDC")]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pitchMin;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pitchMax;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _volumeMin;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _volumeMax;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlockChild _flockChild;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _audio;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasLanded;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xA02008", Offset = "0xA02008", VA = "0xA02008")]
	public void Start()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xA020E0", Offset = "0xA020E0", VA = "0xA020E0")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xA022FC", Offset = "0xA022FC", VA = "0xA022FC")]
	public void ScareSound()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xA0240C", Offset = "0xA0240C", VA = "0xA0240C")]
	public FlockChildSound()
	{
	}
}
[Token(Token = "0x2000019")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild _childPrefab;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _childAmount;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _slowSpawn;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _spawnSphere;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _spawnSphereDepth;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _minSpeed;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _maxSpeed;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _minScale;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _maxScale;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _soarFrequency;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _soarAnimation;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _flapAnimation;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _idleAnimation;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _diveValue;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _diveFrequency;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimer;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _positionSphere;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _positionSphereHeight;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _positionSphereDepth;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _childTriggerPos;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _forcedRandomDelay;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool _flatFly;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool _flatSoar;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool _birdAvoid;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool _birdAvoidDown;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _birdAvoidUp;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _soarMaxTime;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _updateDivisor;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _newDelta;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _updateCounter;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _activeChildren;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform _groupTransform;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groupName;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool _groupChildToFlock;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform _thisT;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xA02430", Offset = "0xA02430", VA = "0xA02430")]
	public void Start()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xA02580", Offset = "0xA02580", VA = "0xA02580")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xA027C0", Offset = "0xA027C0", VA = "0xA027C0")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xA02820", Offset = "0xA02820", VA = "0xA02820")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xA0293C", Offset = "0xA0293C", VA = "0xA0293C")]
	public void Update()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xA02680", Offset = "0xA02680", VA = "0xA02680")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xA029AC", Offset = "0xA029AC", VA = "0xA029AC")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xA02A44", Offset = "0xA02A44", VA = "0xA02A44")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xA01138", Offset = "0xA01138", VA = "0xA01138")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xA02D14", Offset = "0xA02D14", VA = "0xA02D14")]
	public void destroyBirds()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xA02DF4", Offset = "0xA02DF4", VA = "0xA02DF4")]
	public FlockController()
	{
	}
}
[Token(Token = "0x200001A")]
public class FlockScare : MonoBehaviour
{
	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController[] landingSpotControllers;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scareInterval;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceToScare;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int checkEveryNthLandingSpot;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InvokeAmounts;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lsc;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ls;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LandingSpotController currentController;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xA02F0C", Offset = "0xA02F0C", VA = "0xA02F0C")]
	private void CheckProximityToLandingSpots()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xA02FE8", Offset = "0xA02FE8", VA = "0xA02FE8")]
	private void IterateLandingSpots()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xA03098", Offset = "0xA03098", VA = "0xA03098")]
	private bool CheckDistanceToLandingSpot(LandingSpotController lc)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xA03234", Offset = "0xA03234", VA = "0xA03234")]
	private void Invoker()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xA032CC", Offset = "0xA032CC", VA = "0xA032CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xA03348", Offset = "0xA03348", VA = "0xA03348")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xA0339C", Offset = "0xA0339C", VA = "0xA0339C")]
	public FlockScare()
	{
	}
}
[Token(Token = "0x200001B")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timer;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild _flockChild;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xA033B4", Offset = "0xA033B4", VA = "0xA033B4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xA0348C", Offset = "0xA0348C", VA = "0xA0348C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xA034A8", Offset = "0xA034A8", VA = "0xA034A8")]
	public FlockWaypointTrigger()
	{
	}
}
[Token(Token = "0x200001C")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockController _flockController;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hSliderValue;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xDB05E8", Offset = "0xDB05E8", VA = "0xDB05E8")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xDB0B50", Offset = "0xDB0B50", VA = "0xDB0B50")]
	public LandingButtons()
	{
	}
}
[Token(Token = "0x200001D")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF30", Offset = "0x85CF30")]
	private sealed class <GetFlockChild>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDelay;

		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDelay;

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpot <>4__this;

		[Token(Token = "0x1700035F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027DB")]
			[Address(RVA = "0xDB27A8", Offset = "0xDB27A8", VA = "0xDB27A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027DD")]
			[Address(RVA = "0xDB2810", Offset = "0xDB2810", VA = "0xDB2810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0xDB1AA4", Offset = "0xDB1AA4", VA = "0xDB1AA4")]
		[DebuggerHidden]
		public <GetFlockChild>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xDB2118", Offset = "0xDB2118", VA = "0xDB2118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xDB211C", Offset = "0xDB211C", VA = "0xDB211C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xDB27B0", Offset = "0xDB27B0", VA = "0xDB27B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockChild landingChild;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool landing;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lerpCounter;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LandingSpotController _controller;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _idle;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _thisT;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _gotcha;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xDB0B60", Offset = "0xDB0B60", VA = "0xDB0B60")]
	public void Start()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xDB0D14", Offset = "0xDB0D14", VA = "0xDB0D14")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xDB1114", Offset = "0xDB1114", VA = "0xDB1114")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xDB1A28", Offset = "0xDB1A28", VA = "0xDB1A28")]
	public void StraightenBird()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xDB187C", Offset = "0xDB187C", VA = "0xDB187C")]
	public void RotateBird()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xDB0C90", Offset = "0xDB0C90", VA = "0xDB0C90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86CF0C", Offset = "0x86CF0C")]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xDB1AD0", Offset = "0xDB1AD0", VA = "0xDB1AD0")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xDB1E24", Offset = "0xDB1E24", VA = "0xDB1E24")]
	public void ReleaseFlockChild()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xDB2110", Offset = "0xDB2110", VA = "0xDB2110")]
	public LandingSpot()
	{
	}
}
[Token(Token = "0x200001E")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x2000542")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF40", Offset = "0x85CF40")]
	private sealed class <InstantLandOnStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x17000361")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027E1")]
			[Address(RVA = "0xDB3028", Offset = "0xDB3028", VA = "0xDB3028", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000362")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0xDB3090", Offset = "0xDB3090", VA = "0xDB3090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xDB2BBC", Offset = "0xDB2BBC", VA = "0xDB2BBC")]
		[DebuggerHidden]
		public <InstantLandOnStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xDB2EB4", Offset = "0xDB2EB4", VA = "0xDB2EB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0xDB2EB8", Offset = "0xDB2EB8", VA = "0xDB2EB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0xDB3030", Offset = "0xDB3030", VA = "0xDB3030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF50", Offset = "0x85CF50")]
	private sealed class <InstantLand>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x17000363")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60027E7")]
			[Address(RVA = "0xDB2E44", Offset = "0xDB2E44", VA = "0xDB2E44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60027E9")]
			[Address(RVA = "0xDB2EAC", Offset = "0xDB2EAC", VA = "0xDB2EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0xDB2BE8", Offset = "0xDB2BE8", VA = "0xDB2BE8")]
		[DebuggerHidden]
		public <InstantLand>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0xDB2CD0", Offset = "0xDB2CD0", VA = "0xDB2CD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0xDB2CD4", Offset = "0xDB2CD4", VA = "0xDB2CD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0xDB2E4C", Offset = "0xDB2E4C", VA = "0xDB2E4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _randomRotate;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _maxBirdDistance;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _minBirdDistance;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _takeClosest;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlockController _flock;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _landOnStart;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _soarLand;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _landingSpeedModifier;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _featherPS;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _thisT;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _activeLandingSpots;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _snapLandDistance;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _landedRotateSpeed;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _gizmoSize;

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xDB2818", Offset = "0xDB2818", VA = "0xDB2818")]
	public void Start()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xDB0998", Offset = "0xDB0998", VA = "0xDB0998")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xDB2A7C", Offset = "0xDB2A7C", VA = "0xDB2A7C")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xDB09A4", Offset = "0xDB09A4", VA = "0xDB09A4")]
	public void LandAll()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xDB29FC", Offset = "0xDB29FC", VA = "0xDB29FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86CF70", Offset = "0x86CF70")]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xDB0AD0", Offset = "0xDB0AD0", VA = "0xDB0AD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86CFD4", Offset = "0x86CFD4")]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xDB2C14", Offset = "0xDB2C14", VA = "0xDB2C14")]
	public LandingSpotController()
	{
	}
}
[Token(Token = "0x200001F")]
public class BlockRaycasts : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x6000114")]
	[Address(RVA = "0xBC9060", Offset = "0xBC9060", VA = "0xBC9060", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xBC9110", Offset = "0xBC9110", VA = "0xBC9110", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xBC91C0", Offset = "0xBC91C0", VA = "0xBC91C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xBC91C4", Offset = "0xBC91C4", VA = "0xBC91C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xBC91C8", Offset = "0xBC91C8", VA = "0xBC91C8")]
	public BlockRaycasts()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x859040", Offset = "0x859040")]
[ExecuteInEditMode]
public class CameraPath : MonoBehaviour
{
	[Token(Token = "0x2000544")]
	public enum PointModes
	{
		[Token(Token = "0x400289F")]
		Transform,
		[Token(Token = "0x40028A0")]
		ControlPoints,
		[Token(Token = "0x40028A1")]
		FOV,
		[Token(Token = "0x40028A2")]
		Events,
		[Token(Token = "0x40028A3")]
		Speed,
		[Token(Token = "0x40028A4")]
		Delay,
		[Token(Token = "0x40028A5")]
		Ease,
		[Token(Token = "0x40028A6")]
		Orientations,
		[Token(Token = "0x40028A7")]
		Tilt,
		[Token(Token = "0x40028A8")]
		AddPathPoints,
		[Token(Token = "0x40028A9")]
		RemovePathPoints,
		[Token(Token = "0x40028AA")]
		AddOrientations,
		[Token(Token = "0x40028AB")]
		RemoveOrientations,
		[Token(Token = "0x40028AC")]
		TargetOrientation,
		[Token(Token = "0x40028AD")]
		AddFovs,
		[Token(Token = "0x40028AE")]
		RemoveFovs,
		[Token(Token = "0x40028AF")]
		AddTilts,
		[Token(Token = "0x40028B0")]
		RemoveTilts,
		[Token(Token = "0x40028B1")]
		AddEvents,
		[Token(Token = "0x40028B2")]
		RemoveEvents,
		[Token(Token = "0x40028B3")]
		AddSpeeds,
		[Token(Token = "0x40028B4")]
		RemoveSpeeds,
		[Token(Token = "0x40028B5")]
		AddDelays,
		[Token(Token = "0x40028B6")]
		RemoveDelays,
		[Token(Token = "0x40028B7")]
		Options
	}

	[Token(Token = "0x2000545")]
	public enum Interpolation
	{
		[Token(Token = "0x40028B9")]
		Linear,
		[Token(Token = "0x40028BA")]
		SmoothStep,
		[Token(Token = "0x40028BB")]
		CatmullRom,
		[Token(Token = "0x40028BC")]
		Hermite,
		[Token(Token = "0x40028BD")]
		Bezier
	}

	[Token(Token = "0x2000546")]
	public delegate void RecalculateCurvesHandler();

	[Token(Token = "0x2000547")]
	public delegate void PathPointAddedHandler(CameraPathControlPoint point);

	[Token(Token = "0x2000548")]
	public delegate void PathPointRemovedHandler(CameraPathControlPoint point);

	[Token(Token = "0x2000549")]
	public delegate void CheckStartPointCullHandler(float percentage);

	[Token(Token = "0x200054A")]
	public delegate void CheckEndPointCullHandler(float percentage);

	[Token(Token = "0x200054B")]
	public delegate void CleanUpListsHandler();

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float CURRENT_VERSION_NUMBER;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float version;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<CameraPathControlPoint> _points;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Interpolation _interpolation;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool initialised;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _storedTotalArcLength;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float[] _storedArcLengths;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float[] _storedArcLengthsFull;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector3[] _storedPoints;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float[] _normalisedPercentages;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _storedPointResolution;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private int _storedValueArraySize;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Vector3[] _storedPathDirections;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float _directionWidth;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private CameraPathControlPoint[] _pointALink;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private CameraPathControlPoint[] _pointBLink;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private CameraPathOrientationList _orientationList;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private CameraPathFOVList _fovList;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private CameraPathTiltList _tiltList;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private CameraPathSpeedList _speedList;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private CameraPathEventList _eventList;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private CameraPathDelayList _delayList;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private bool _addOrientationsWithPoints;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[SerializeField]
	private bool _looped;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	[SerializeField]
	private bool _normalised;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private Bounds _pathBounds;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float hermiteTension;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float hermiteBias;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject editorPreview;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int selectedPoint;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public PointModes pointMode;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float addPointAtPercent;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private float _aspect;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private int _previewResolution;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float drawDistance;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private int _displayHeight;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Texture2D previewOverlay;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool ruleOfThirds;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Color ruleOfThirdsColour;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Texture2D ruleOfThirdsOverlay;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private CameraPath _nextPath;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private bool _interpolateNextPath;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool showGizmos;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public Color selectedPathColour;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Color unselectedPathColour;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Color selectedPointColour;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Color unselectedPointColour;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Color textColour;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public bool showOrientationIndicators;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float orientationIndicatorUnitLength;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public Color orientationIndicatorColours;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public bool autoSetStoedPointRes;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
	public bool enableUndo;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
	public bool showPreview;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19F")]
	public bool enablePreviews;

	[Token(Token = "0x17000029")]
	public CameraPathControlPoint Item
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0xBF0340", Offset = "0xBF0340", VA = "0xBF0340")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public int numberOfPoints
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0xBF0538", Offset = "0xBF0538", VA = "0xBF0538")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002B")]
	public int realNumberOfPoints
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0xBF05AC", Offset = "0xBF05AC", VA = "0xBF05AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002C")]
	public int numberOfCurves
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0xBF05FC", Offset = "0xBF05FC", VA = "0xBF05FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002D")]
	public bool loop
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0xBF0668", Offset = "0xBF0668", VA = "0xBF0668")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012A")]
		[Address(RVA = "0xBF0670", Offset = "0xBF0670", VA = "0xBF0670")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public float pathLength
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0xBF1180", Offset = "0xBF1180", VA = "0xBF1180")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002F")]
	public CameraPathOrientationList orientationList
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0xBF1188", Offset = "0xBF1188", VA = "0xBF1188")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public CameraPathFOVList fovList
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0xBF1190", Offset = "0xBF1190", VA = "0xBF1190")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public CameraPathTiltList tiltList
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0xBF1198", Offset = "0xBF1198", VA = "0xBF1198")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public CameraPathSpeedList speedList
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0xBF11A0", Offset = "0xBF11A0", VA = "0xBF11A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000033")]
	public CameraPathEventList eventList
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0xBF11A8", Offset = "0xBF11A8", VA = "0xBF11A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000034")]
	public CameraPathDelayList delayList
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0xBF11B0", Offset = "0xBF11B0", VA = "0xBF11B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public Bounds bounds
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0xBF11B8", Offset = "0xBF11B8", VA = "0xBF11B8")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x17000036")]
	public int storedValueArraySize
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0xBF12FC", Offset = "0xBF12FC", VA = "0xBF12FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000037")]
	public CameraPathControlPoint[] pointALink
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0xBF1304", Offset = "0xBF1304", VA = "0xBF1304")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000038")]
	public CameraPathControlPoint[] pointBLink
	{
		[Token(Token = "0x6000136")]
		[Address(RVA = "0xBF130C", Offset = "0xBF130C", VA = "0xBF130C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000039")]
	public Vector3[] storedPoints
	{
		[Token(Token = "0x6000137")]
		[Address(RVA = "0xBF1314", Offset = "0xBF1314", VA = "0xBF1314")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public bool normalised
	{
		[Token(Token = "0x6000138")]
		[Address(RVA = "0xBF131C", Offset = "0xBF131C", VA = "0xBF131C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000139")]
		[Address(RVA = "0xBF1324", Offset = "0xBF1324", VA = "0xBF1324")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public Interpolation interpolation
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0xBF1330", Offset = "0xBF1330", VA = "0xBF1330")]
		get
		{
			return default(Interpolation);
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0xBF1338", Offset = "0xBF1338", VA = "0xBF1338")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public CameraPath nextPath
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0xBF1350", Offset = "0xBF1350", VA = "0xBF1350")]
		get
		{
			return null;
		}
		[Token(Token = "0x600013D")]
		[Address(RVA = "0xBF1358", Offset = "0xBF1358", VA = "0xBF1358")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public bool interpolateNextPath
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0xBF1484", Offset = "0xBF1484", VA = "0xBF1484")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013F")]
		[Address(RVA = "0xBF148C", Offset = "0xBF148C", VA = "0xBF148C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public bool shouldInterpolateNextPath
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0xBF04AC", Offset = "0xBF04AC", VA = "0xBF04AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003F")]
	public float storedPointResolution
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0xBF14B0", Offset = "0xBF14B0", VA = "0xBF14B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000142")]
		[Address(RVA = "0xBF14B8", Offset = "0xBF14B8", VA = "0xBF14B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public float directionWidth
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0xBF1548", Offset = "0xBF1548", VA = "0xBF1548")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000144")]
		[Address(RVA = "0xBF1550", Offset = "0xBF1550", VA = "0xBF1550")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public int displayHeight
	{
		[Token(Token = "0x6000145")]
		[Address(RVA = "0xBF1558", Offset = "0xBF1558", VA = "0xBF1558")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000146")]
		[Address(RVA = "0xBF1560", Offset = "0xBF1560", VA = "0xBF1560")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public float aspect
	{
		[Token(Token = "0x6000147")]
		[Address(RVA = "0xBF15E4", Offset = "0xBF15E4", VA = "0xBF15E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000148")]
		[Address(RVA = "0xBF15EC", Offset = "0xBF15EC", VA = "0xBF15EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public int previewResolution
	{
		[Token(Token = "0x6000149")]
		[Address(RVA = "0xBF1674", Offset = "0xBF1674", VA = "0xBF1674")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600014A")]
		[Address(RVA = "0xBF167C", Offset = "0xBF167C", VA = "0xBF167C")]
		set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event RecalculateCurvesHandler RecalculateCurvesEvent
	{
		[Token(Token = "0x6000119")]
		[Address(RVA = "0xBEFB60", Offset = "0xBEFB60", VA = "0xBEFB60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D038", Offset = "0x86D038")]
		add
		{
		}
		[Token(Token = "0x600011A")]
		[Address(RVA = "0xBEFC08", Offset = "0xBEFC08", VA = "0xBEFC08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D048", Offset = "0x86D048")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event PathPointAddedHandler PathPointAddedEvent
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0xBEFCB0", Offset = "0xBEFCB0", VA = "0xBEFCB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D058", Offset = "0x86D058")]
		add
		{
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0xBEFD58", Offset = "0xBEFD58", VA = "0xBEFD58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D068", Offset = "0x86D068")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event PathPointRemovedHandler PathPointRemovedEvent
	{
		[Token(Token = "0x600011D")]
		[Address(RVA = "0xBEFE00", Offset = "0xBEFE00", VA = "0xBEFE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D078", Offset = "0x86D078")]
		add
		{
		}
		[Token(Token = "0x600011E")]
		[Address(RVA = "0xBEFEA8", Offset = "0xBEFEA8", VA = "0xBEFEA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D088", Offset = "0x86D088")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event CheckStartPointCullHandler CheckStartPointCullEvent
	{
		[Token(Token = "0x600011F")]
		[Address(RVA = "0xBEFF50", Offset = "0xBEFF50", VA = "0xBEFF50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D098", Offset = "0x86D098")]
		add
		{
		}
		[Token(Token = "0x6000120")]
		[Address(RVA = "0xBEFFF8", Offset = "0xBEFFF8", VA = "0xBEFFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D0A8", Offset = "0x86D0A8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event CheckEndPointCullHandler CheckEndPointCullEvent
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0xBF00A0", Offset = "0xBF00A0", VA = "0xBF00A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D0B8", Offset = "0x86D0B8")]
		add
		{
		}
		[Token(Token = "0x6000122")]
		[Address(RVA = "0xBF0148", Offset = "0xBF0148", VA = "0xBF0148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D0C8", Offset = "0x86D0C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event CleanUpListsHandler CleanUpListsEvent
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xBF01F0", Offset = "0xBF01F0", VA = "0xBF01F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D0D8", Offset = "0x86D0D8")]
		add
		{
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xBF0298", Offset = "0xBF0298", VA = "0xBF0298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D0E8", Offset = "0x86D0E8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xBF11CC", Offset = "0xBF11CC", VA = "0xBF11CC")]
	public float StoredArcLength(int curve)
	{
		return default(float);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xBF1700", Offset = "0xBF1700", VA = "0xBF1700")]
	public int StoredValueIndex(float percentage)
	{
		return default(int);
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xBF1790", Offset = "0xBF1790", VA = "0xBF1790")]
	public CameraPathControlPoint AddPoint(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xBF1EAC", Offset = "0xBF1EAC", VA = "0xBF1EAC")]
	public void AddPoint(CameraPathControlPoint point)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xBF1F2C", Offset = "0xBF1F2C", VA = "0xBF1F2C")]
	public void InsertPoint(CameraPathControlPoint point, int index)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xBF1FB4", Offset = "0xBF1FB4", VA = "0xBF1FB4")]
	public CameraPathControlPoint InsertPoint(int index)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xBF2074", Offset = "0xBF2074", VA = "0xBF2074")]
	public void RemovePoint(int index)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xBF2200", Offset = "0xBF2200", VA = "0xBF2200")]
	public bool RemovePoint(string pointName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xBF23A0", Offset = "0xBF23A0", VA = "0xBF23A0")]
	public void RemovePoint(Vector3 pointPosition)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xBF209C", Offset = "0xBF209C", VA = "0xBF209C")]
	public void RemovePoint(CameraPathControlPoint point)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xBF2EDC", Offset = "0xBF2EDC", VA = "0xBF2EDC")]
	private float ParsePercentage(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xBF30B8", Offset = "0xBF30B8", VA = "0xBF30B8")]
	public float CalculateNormalisedPercentage(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xBF3220", Offset = "0xBF3220", VA = "0xBF3220")]
	public float DeNormalisePercentage(float normalisedPercent)
	{
		return default(float);
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xBF3340", Offset = "0xBF3340", VA = "0xBF3340")]
	public int GetPointNumber(float percentage)
	{
		return default(int);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xBF33FC", Offset = "0xBF33FC", VA = "0xBF33FC")]
	public Vector3 GetPathPosition(float percentage)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xBF3404", Offset = "0xBF3404", VA = "0xBF3404")]
	public Vector3 GetPathPosition(float percentage, bool ignoreNormalisation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xBF3BDC", Offset = "0xBF3BDC", VA = "0xBF3BDC")]
	public Quaternion GetPathRotation(float percentage, bool ignoreNormalisation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xBF3EA0", Offset = "0xBF3EA0", VA = "0xBF3EA0")]
	public Vector3 GetPathDirection(float percentage)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xBF3EA8", Offset = "0xBF3EA8", VA = "0xBF3EA8")]
	public Vector3 GetPathDirection(float percentage, bool normalisePercent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xBF4068", Offset = "0xBF4068", VA = "0xBF4068")]
	public float GetPathTilt(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xBF41E4", Offset = "0xBF41E4", VA = "0xBF41E4")]
	public float GetPathFOV(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xBF436C", Offset = "0xBF436C", VA = "0xBF436C")]
	public float GetPathOrthographicSize(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xBF439C", Offset = "0xBF439C", VA = "0xBF439C")]
	public float GetPathSpeed(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xBF4874", Offset = "0xBF4874", VA = "0xBF4874")]
	public float GetPathEase(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xBF48A0", Offset = "0xBF48A0", VA = "0xBF48A0")]
	public void CheckEvents(float percentage)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xBF4BD4", Offset = "0xBF4BD4", VA = "0xBF4BD4")]
	public float GetPathPercentage(CameraPathControlPoint point)
	{
		return default(float);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xBF29D8", Offset = "0xBF29D8", VA = "0xBF29D8")]
	public float GetPathPercentage(int pointIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xBF2588", Offset = "0xBF2588", VA = "0xBF2588")]
	public int GetNearestPointIndex(float percentage)
	{
		return default(int);
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xBF4C58", Offset = "0xBF4C58", VA = "0xBF4C58")]
	public int GetLastPointIndex(float percentage, bool isNormalised)
	{
		return default(int);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xBF4D00", Offset = "0xBF4D00", VA = "0xBF4D00")]
	public int GetNextPointIndex(float percentage, bool isNormalised)
	{
		return default(int);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xBF4DA8", Offset = "0xBF4DA8", VA = "0xBF4DA8")]
	public float GetCurvePercentage(CameraPathControlPoint pointA, CameraPathControlPoint pointB, float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xBF4E84", Offset = "0xBF4E84", VA = "0xBF4E84")]
	public float GetCurvePercentage(CameraPathPoint pointA, CameraPathPoint pointB, float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xBF4F7C", Offset = "0xBF4F7C", VA = "0xBF4F7C")]
	public float GetCurvePercentage(CameraPathPoint point)
	{
		return default(float);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xBF504C", Offset = "0xBF504C", VA = "0xBF504C")]
	public float GetOutroEasePercentage(CameraPathDelay point)
	{
		return default(float);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xBF547C", Offset = "0xBF547C", VA = "0xBF547C")]
	public float GetIntroEasePercentage(CameraPathDelay point)
	{
		return default(float);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xBF5544", Offset = "0xBF5544", VA = "0xBF5544")]
	public float GetPathPercentage(CameraPathControlPoint pointA, CameraPathControlPoint pointB, float curvePercentage)
	{
		return default(float);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xBF55F8", Offset = "0xBF55F8", VA = "0xBF55F8")]
	public float GetPathPercentage(float pointA, float pointB, float curvePercentage)
	{
		return default(float);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xBF5680", Offset = "0xBF5680", VA = "0xBF5680")]
	public int GetStoredPoint(float percentage)
	{
		return default(int);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xBF5720", Offset = "0xBF5720", VA = "0xBF5720")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xBF5A28", Offset = "0xBF5A28", VA = "0xBF5A28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xBF5E08", Offset = "0xBF5E08", VA = "0xBF5E08")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xBF611C", Offset = "0xBF611C", VA = "0xBF611C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xBF0694", Offset = "0xBF0694", VA = "0xBF0694")]
	public void RecalculateStoredValues()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xBF65C0", Offset = "0xBF65C0", VA = "0xBF65C0")]
	public float GetNearestPoint(Vector3 fromPostition)
	{
		return default(float);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xBF257C", Offset = "0xBF257C", VA = "0xBF257C")]
	public float GetNearestPoint(Vector3 fromPostition, bool ignoreNormalisation)
	{
		return default(float);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xBF65CC", Offset = "0xBF65CC", VA = "0xBF65CC")]
	public float GetNearestPoint(Vector3 fromPostition, bool ignoreNormalisation, int refinments)
	{
		return default(float);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xBF684C", Offset = "0xBF684C", VA = "0xBF684C")]
	public float GetNearestPointNear(Vector3 fromPostition, float prevPercentage, Vector3 prevPosition, bool ignoreNormalisation, int refinments)
	{
		return default(float);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xBF6150", Offset = "0xBF6150", VA = "0xBF6150")]
	public void Clear()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xBF3A14", Offset = "0xBF3A14", VA = "0xBF3A14")]
	public CameraPathControlPoint GetPoint(int index)
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xBF6A98", Offset = "0xBF6A98", VA = "0xBF6A98")]
	public int GetPointIndex(int index)
	{
		return default(int);
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xBF6B7C", Offset = "0xBF6B7C", VA = "0xBF6B7C")]
	public int GetCurveIndex(int startPointIndex)
	{
		return default(int);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xBF5724", Offset = "0xBF5724", VA = "0xBF5724")]
	private void Init()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xBF5E44", Offset = "0xBF5E44", VA = "0xBF5E44")]
	private void InitialiseLists()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xBF6DC0", Offset = "0xBF6DC0", VA = "0xBF6DC0")]
	public CameraPath()
	{
	}
}
[Token(Token = "0x2000021")]
public class CameraPathAnimator : MonoBehaviour
{
	[Token(Token = "0x200054C")]
	public enum animationModes
	{
		[Token(Token = "0x40028BF")]
		once,
		[Token(Token = "0x40028C0")]
		loop,
		[Token(Token = "0x40028C1")]
		reverse,
		[Token(Token = "0x40028C2")]
		reverseLoop,
		[Token(Token = "0x40028C3")]
		pingPong,
		[Token(Token = "0x40028C4")]
		still
	}

	[Token(Token = "0x200054D")]
	public enum orientationModes
	{
		[Token(Token = "0x40028C6")]
		custom,
		[Token(Token = "0x40028C7")]
		target,
		[Token(Token = "0x40028C8")]
		mouselook,
		[Token(Token = "0x40028C9")]
		followpath,
		[Token(Token = "0x40028CA")]
		reverseFollowpath,
		[Token(Token = "0x40028CB")]
		followTransform,
		[Token(Token = "0x40028CC")]
		twoDimentions,
		[Token(Token = "0x40028CD")]
		fixedOrientation,
		[Token(Token = "0x40028CE")]
		none
	}

	[Token(Token = "0x200054E")]
	public delegate void AnimationStartedEventHandler();

	[Token(Token = "0x200054F")]
	public delegate void AnimationPausedEventHandler();

	[Token(Token = "0x2000550")]
	public delegate void AnimationStoppedEventHandler();

	[Token(Token = "0x2000551")]
	public delegate void AnimationFinishedEventHandler();

	[Token(Token = "0x2000552")]
	public delegate void AnimationLoopedEventHandler();

	[Token(Token = "0x2000553")]
	public delegate void AnimationPingPongEventHandler();

	[Token(Token = "0x2000554")]
	public delegate void AnimationPointReachedEventHandler();

	[Token(Token = "0x2000555")]
	public delegate void AnimationCustomEventHandler(string eventName);

	[Token(Token = "0x2000556")]
	public delegate void AnimationPointReachedWithNumberEventHandler(int pointNumber);

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumCameraSpeed;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform orientationTarget;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CameraPath _cameraPath;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool playOnStart;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform animationObject;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera animationObjectCamera;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isCamera;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _playing;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public animationModes animationMode;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private orientationModes _orientationMode;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool smoothOrientationModeChanges;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float orientationModeLerpTime;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _orientationModeLerpTimer;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private orientationModes _previousOrientationMode;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float pingPongDirection;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 fixedOrientaion;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 fixedPosition;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool normalised;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[SerializeField]
	private bool _dynamicNormalisation;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float editorPercentage;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _pathTime;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float _pathSpeed;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _percentage;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _lastPercentage;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float nearestOffset;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _delayTime;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float startPercent;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool animateFOV;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 targetModeUp;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool lockZRotation;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float sensitivity;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float minX;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float maxX;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool _animateSceneObjectInEditor;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 animatedObjectStartPosition;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Quaternion animatedObjectStartRotation;

	[Token(Token = "0x17000044")]
	public virtual float pathSpeed
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xBF7DD4", Offset = "0xBF7DD4", VA = "0xBF7DD4", Slot = "4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0xBF7DDC", Offset = "0xBF7DDC", VA = "0xBF7DDC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public virtual float animationTime
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0xBF7EE8", Offset = "0xBF7EE8", VA = "0xBF7EE8", Slot = "6")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xBF7EF0", Offset = "0xBF7EF0", VA = "0xBF7EF0", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public virtual float currentTime
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0xBF7FB0", Offset = "0xBF7FB0", VA = "0xBF7FB0", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000047")]
	public virtual bool isPlaying
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0xBF87A8", Offset = "0xBF87A8", VA = "0xBF87A8", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000048")]
	public virtual float percentage
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0xBF87B0", Offset = "0xBF87B0", VA = "0xBF87B0", Slot = "14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000049")]
	public virtual bool pingPongGoingForward
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0xBF87B8", Offset = "0xBF87B8", VA = "0xBF87B8", Slot = "15")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004A")]
	public virtual CameraPath cameraPath
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xBF882C", Offset = "0xBF882C", VA = "0xBF882C", Slot = "17")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	public virtual bool dynamicNormalisation
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xBF88C0", Offset = "0xBF88C0", VA = "0xBF88C0", Slot = "18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xBF88C8", Offset = "0xBF88C8", VA = "0xBF88C8", Slot = "19")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public virtual orientationModes orientationMode
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xBF88F8", Offset = "0xBF88F8", VA = "0xBF88F8", Slot = "20")]
		get
		{
			return default(orientationModes);
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xBF8900", Offset = "0xBF8900", VA = "0xBF8900", Slot = "21")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public virtual bool isCamera
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xBF92C4", Offset = "0xBF92C4", VA = "0xBF92C4", Slot = "24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004E")]
	public virtual bool animateSceneObjectInEditor
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xBF9388", Offset = "0xBF9388", VA = "0xBF9388", Slot = "25")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xBF9390", Offset = "0xBF9390", VA = "0xBF9390", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	protected virtual bool isReversed
	{
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xBFB128", Offset = "0xBFB128", VA = "0xBFB128", Slot = "41")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000017")]
	public event AnimationStartedEventHandler AnimationStartedEvent
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0xBF721C", Offset = "0xBF721C", VA = "0xBF721C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D0F8", Offset = "0x86D0F8")]
		add
		{
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0xBF72C0", Offset = "0xBF72C0", VA = "0xBF72C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D108", Offset = "0x86D108")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event AnimationPausedEventHandler AnimationPausedEvent
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0xBF7364", Offset = "0xBF7364", VA = "0xBF7364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D118", Offset = "0x86D118")]
		add
		{
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0xBF7408", Offset = "0xBF7408", VA = "0xBF7408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D128", Offset = "0x86D128")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event AnimationStoppedEventHandler AnimationStoppedEvent
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0xBF74AC", Offset = "0xBF74AC", VA = "0xBF74AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D138", Offset = "0x86D138")]
		add
		{
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xBF7550", Offset = "0xBF7550", VA = "0xBF7550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D148", Offset = "0x86D148")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event AnimationFinishedEventHandler AnimationFinishedEvent
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0xBF75F4", Offset = "0xBF75F4", VA = "0xBF75F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D158", Offset = "0x86D158")]
		add
		{
		}
		[Token(Token = "0x6000188")]
		[Address(RVA = "0xBF769C", Offset = "0xBF769C", VA = "0xBF769C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D168", Offset = "0x86D168")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event AnimationLoopedEventHandler AnimationLoopedEvent
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0xBF7744", Offset = "0xBF7744", VA = "0xBF7744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D178", Offset = "0x86D178")]
		add
		{
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0xBF77EC", Offset = "0xBF77EC", VA = "0xBF77EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D188", Offset = "0x86D188")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event AnimationPingPongEventHandler AnimationPingPongEvent
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0xBF7894", Offset = "0xBF7894", VA = "0xBF7894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D198", Offset = "0x86D198")]
		add
		{
		}
		[Token(Token = "0x600018C")]
		[Address(RVA = "0xBF793C", Offset = "0xBF793C", VA = "0xBF793C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D1A8", Offset = "0x86D1A8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event AnimationPointReachedEventHandler AnimationPointReachedEvent
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0xBF79E4", Offset = "0xBF79E4", VA = "0xBF79E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D1B8", Offset = "0x86D1B8")]
		add
		{
		}
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xBF7A8C", Offset = "0xBF7A8C", VA = "0xBF7A8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D1C8", Offset = "0x86D1C8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event AnimationPointReachedWithNumberEventHandler AnimationPointReachedWithNumberEvent
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0xBF7B34", Offset = "0xBF7B34", VA = "0xBF7B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D1D8", Offset = "0x86D1D8")]
		add
		{
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0xBF7BDC", Offset = "0xBF7BDC", VA = "0xBF7BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D1E8", Offset = "0x86D1E8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event AnimationCustomEventHandler AnimationCustomEvent
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0xBF7C84", Offset = "0xBF7C84", VA = "0xBF7C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D1F8", Offset = "0x86D1F8")]
		add
		{
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0xBF7D2C", Offset = "0xBF7D2C", VA = "0xBF7D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D208", Offset = "0x86D208")]
		remove
		{
		}
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xBF7FC0", Offset = "0xBF7FC0", VA = "0xBF7FC0", Slot = "9")]
	public virtual void Play()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xBF8290", Offset = "0xBF8290", VA = "0xBF8290", Slot = "10")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xBF84B8", Offset = "0xBF84B8", VA = "0xBF84B8", Slot = "11")]
	public virtual void Pause()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xBF86DC", Offset = "0xBF86DC", VA = "0xBF86DC", Slot = "12")]
	public virtual void Seek(float value)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xBF87CC", Offset = "0xBF87CC", VA = "0xBF87CC", Slot = "16")]
	public virtual void Reverse()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xBF8918", Offset = "0xBF8918", VA = "0xBF8918", Slot = "22")]
	public virtual Quaternion GetOrientation(orientationModes mode, float percent, bool ignoreNormalisation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xBF90CC", Offset = "0xBF90CC", VA = "0xBF90CC", Slot = "23")]
	public virtual Quaternion GetAnimatedOrientation(float percent, bool ignoreNormalisation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xBF94D0", Offset = "0xBF94D0", VA = "0xBF94D0", Slot = "27")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xBF962C", Offset = "0xBF962C", VA = "0xBF962C", Slot = "28")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xBF98CC", Offset = "0xBF98CC", VA = "0xBF98CC", Slot = "29")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xBF99CC", Offset = "0xBF99CC", VA = "0xBF99CC", Slot = "30")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xBF9AD4", Offset = "0xBF9AD4", VA = "0xBF9AD4", Slot = "31")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xBF9BDC", Offset = "0xBF9BDC", VA = "0xBF9BDC", Slot = "32")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xBF9BEC", Offset = "0xBF9BEC", VA = "0xBF9BEC", Slot = "33")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xBF9BFC", Offset = "0xBF9BFC", VA = "0xBF9BFC", Slot = "34")]
	protected virtual void PlayNextAnimation()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xBF9D04", Offset = "0xBF9D04", VA = "0xBF9D04", Slot = "35")]
	protected virtual void UpdateAnimation()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xBFA03C", Offset = "0xBFA03C", VA = "0xBFA03C", Slot = "36")]
	protected virtual void UpdatePointReached()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xBFA65C", Offset = "0xBFA65C", VA = "0xBFA65C", Slot = "37")]
	protected virtual void UpdateAnimationTime()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xBFA670", Offset = "0xBFA670", VA = "0xBFA670", Slot = "38")]
	protected virtual void UpdateAnimationTime(bool advance)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xBFAF1C", Offset = "0xBFAF1C", VA = "0xBFAF1C", Slot = "39")]
	protected virtual Quaternion GetMouseLook()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xBFB0F0", Offset = "0xBFB0F0", VA = "0xBFB0F0", Slot = "40")]
	protected virtual void CheckEvents()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xBFB150", Offset = "0xBFB150", VA = "0xBFB150", Slot = "42")]
	protected virtual void CleanUp()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xBFB230", Offset = "0xBFB230", VA = "0xBFB230", Slot = "43")]
	protected virtual void OnDelayEvent(float time)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xBFB24C", Offset = "0xBFB24C", VA = "0xBFB24C", Slot = "44")]
	protected virtual void OnCustomEvent(string eventName)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xBFB614", Offset = "0xBFB614", VA = "0xBFB614")]
	public CameraPathAnimator()
	{
	}
}
[Token(Token = "0x2000022")]
[ExecuteInEditMode]
public class CameraPathControlPoint : MonoBehaviour
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string givenName;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string customName;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string fullName;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 _position;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool _splitControlPoints;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 _forwardControlPoint;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 _backwardControlPoint;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 _pathDirection;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int index;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float percentage;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float normalisedPercentage;

	[Token(Token = "0x17000050")]
	public Vector3 localPosition
	{
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xBFBC1C", Offset = "0xBFBC1C", VA = "0xBFBC1C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xBF1888", Offset = "0xBF1888", VA = "0xBF1888")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public Vector3 worldPosition
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xBF2570", Offset = "0xBF2570", VA = "0xBF2570")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xBFBE38", Offset = "0xBFBE38", VA = "0xBFBE38")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public Vector3 forwardControlPointWorld
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xBF3A3C", Offset = "0xBF3A3C", VA = "0xBF3A3C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xBFBFB0", Offset = "0xBFBFB0", VA = "0xBFBFB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public Vector3 forwardControlPoint
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xBFC080", Offset = "0xBFC080", VA = "0xBFC080")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xBF6C6C", Offset = "0xBF6C6C", VA = "0xBF6C6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public Vector3 forwardControlPointLocal
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xBFC1A8", Offset = "0xBFC1A8", VA = "0xBFC1A8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xBFC27C", Offset = "0xBFC27C", VA = "0xBFC27C")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public Vector3 backwardControlPointWorld
	{
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xBF3B0C", Offset = "0xBF3B0C", VA = "0xBF3B0C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xBFC368", Offset = "0xBFC368", VA = "0xBFC368")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public Vector3 backwardControlPoint
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xBFC5D8", Offset = "0xBFC5D8", VA = "0xBFC5D8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xBFC438", Offset = "0xBFC438", VA = "0xBFC438")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public bool splitControlPoints
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xBFC75C", Offset = "0xBFC75C", VA = "0xBFC75C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xBFC764", Offset = "0xBFC764", VA = "0xBFC764")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public Vector3 trackDirection
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xBFC820", Offset = "0xBFC820", VA = "0xBFC820")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xBFC82C", Offset = "0xBFC82C", VA = "0xBFC82C")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public string displayName
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xBF2334", Offset = "0xBF2334", VA = "0xBF2334")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xBFBC10", Offset = "0xBFBC10", VA = "0xBFBC10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xBFBE60", Offset = "0xBFBE60", VA = "0xBFBE60")]
	public Vector3 WorldToLocalPosition(Vector3 _worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xBFBCF0", Offset = "0xBFBCF0", VA = "0xBFBCF0")]
	public Vector3 LocalToWorldPosition(Vector3 _localPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xBFC8F8", Offset = "0xBFC8F8", VA = "0xBFC8F8")]
	public void CopyData(CameraPathControlPoint to)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xBFC984", Offset = "0xBFC984", VA = "0xBFC984")]
	public CameraPathControlPoint()
	{
	}
}
[Token(Token = "0x2000023")]
public class CameraPathDelay : CameraPathPoint
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float time;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float introStartEasePercentage;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve introCurve;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float outroEndEasePercentage;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve outroCurve;

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xBFCA10", Offset = "0xBFCA10", VA = "0xBFCA10")]
	public CameraPathDelay()
	{
	}
}
[Token(Token = "0x2000024")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x85909C", Offset = "0x85909C")]
[ExecuteInEditMode]
public class CameraPathDelayList : CameraPathPointList
{
	[Token(Token = "0x2000557")]
	public delegate void CameraPathDelayEventHandler(float time);

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MINIMUM_EASE_VALUE;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _lastPercentage;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CameraPathDelay _introPoint;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CameraPathDelay _outroPoint;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool delayInitialised;

	[Token(Token = "0x1700005A")]
	public new CameraPathDelay Item
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xBFCB90", Offset = "0xBFCB90", VA = "0xBFCB90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public CameraPathDelay introPoint
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xBFCD4C", Offset = "0xBFCD4C", VA = "0xBFCD4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public CameraPathDelay outroPoint
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xBFCD54", Offset = "0xBFCD54", VA = "0xBFCD54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000020")]
	public event CameraPathDelayEventHandler CameraPathDelayEvent
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xBF9828", Offset = "0xBF9828", VA = "0xBF9828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D218", Offset = "0x86D218")]
		add
		{
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xBFCAE0", Offset = "0xBFCAE0", VA = "0xBFCAE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D228", Offset = "0x86D228")]
		remove
		{
		}
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xBFCB84", Offset = "0xBFCB84", VA = "0xBFCB84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xBFCD5C", Offset = "0xBFCD5C", VA = "0xBFCD5C", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xBFD0D0", Offset = "0xBFD0D0", VA = "0xBFD0D0")]
	public void AddDelayPoint(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xBFD1FC", Offset = "0xBFD1FC", VA = "0xBFD1FC")]
	public CameraPathDelay AddDelayPoint(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xBFD360", Offset = "0xBFD360", VA = "0xBFD360")]
	public void OnAnimationStart(float startPercentage)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xBF4A24", Offset = "0xBF4A24", VA = "0xBF4A24")]
	public void CheckEvents(float percentage)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xBF4598", Offset = "0xBF4598", VA = "0xBF4598")]
	public float CheckEase(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xBFD368", Offset = "0xBFD368", VA = "0xBFD368")]
	public void FireDelay(CameraPathDelay eventPoint)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xBFD648", Offset = "0xBFD648", VA = "0xBFD648")]
	public CameraPathDelayList()
	{
	}
}
[Token(Token = "0x2000025")]
public class CameraPathEvent : CameraPathPoint
{
	[Token(Token = "0x2000558")]
	public enum Types
	{
		[Token(Token = "0x40028D0")]
		Broadcast,
		[Token(Token = "0x40028D1")]
		Call
	}

	[Token(Token = "0x2000559")]
	public enum ArgumentTypes
	{
		[Token(Token = "0x40028D3")]
		None,
		[Token(Token = "0x40028D4")]
		Float,
		[Token(Token = "0x40028D5")]
		Int,
		[Token(Token = "0x40028D6")]
		String
	}

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Types type;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string eventName;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject target;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string methodName;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string methodArgument;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ArgumentTypes argumentType;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xBFD770", Offset = "0xBFD770", VA = "0xBFD770")]
	public CameraPathEvent()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8590E8", Offset = "0x8590E8")]
[ExecuteInEditMode]
public class CameraPathEventList : CameraPathPointList
{
	[Token(Token = "0x200055A")]
	public delegate void CameraPathEventPointHandler(string name);

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _lastPercentage;

	[Token(Token = "0x1700005D")]
	public new CameraPathEvent Item
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xBFD874", Offset = "0xBFD874", VA = "0xBFD874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000021")]
	public event CameraPathEventPointHandler CameraPathEventPoint
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xBF9774", Offset = "0xBF9774", VA = "0xBF9774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D238", Offset = "0x86D238")]
		add
		{
		}
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xBFD7C4", Offset = "0xBFD7C4", VA = "0xBFD7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D248", Offset = "0x86D248")]
		remove
		{
		}
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xBFD868", Offset = "0xBFD868", VA = "0xBFD868")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xBFD908", Offset = "0xBFD908", VA = "0xBFD908", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xBFD984", Offset = "0xBFD984", VA = "0xBFD984")]
	public void AddEvent(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xBFDA24", Offset = "0xBFDA24", VA = "0xBFDA24")]
	public CameraPathEvent AddEvent(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage)
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xBFDAE4", Offset = "0xBFDAE4", VA = "0xBFDAE4")]
	public void OnAnimationStart(float startPercentage)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xBF48E8", Offset = "0xBF48E8", VA = "0xBF48E8")]
	public void CheckEvents(float percentage)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xBFDAEC", Offset = "0xBFDAEC", VA = "0xBFDAEC")]
	public void BroadCast(CameraPathEvent eventPoint)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xBFDB10", Offset = "0xBFDB10", VA = "0xBFDB10")]
	public void Call(CameraPathEvent eventPoint)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xBFE17C", Offset = "0xBFE17C", VA = "0xBFE17C")]
	public CameraPathEventList()
	{
	}
}
[Token(Token = "0x2000027")]
public class CameraPathFOV : CameraPathPoint
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float FOV;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float Size;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xBFE1B0", Offset = "0xBFE1B0", VA = "0xBFE1B0")]
	public CameraPathFOV()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x859134", Offset = "0x859134")]
[ExecuteInEditMode]
public class CameraPathFOVList : CameraPathPointList
{
	[Token(Token = "0x200055B")]
	public enum ProjectionType
	{
		[Token(Token = "0x40028D8")]
		FOV,
		[Token(Token = "0x40028D9")]
		Orthographic
	}

	[Token(Token = "0x200055C")]
	public enum Interpolation
	{
		[Token(Token = "0x40028DB")]
		None,
		[Token(Token = "0x40028DC")]
		Linear,
		[Token(Token = "0x40028DD")]
		SmoothStep
	}

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Interpolation interpolation;

	[Token(Token = "0x40001C8")]
	private const float DEFAULT_FOV = 60f;

	[Token(Token = "0x40001C9")]
	private const float DEFAULT_SIZE = 5f;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool listEnabled;

	[Token(Token = "0x1700005E")]
	public new CameraPathFOV Item
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xBFE480", Offset = "0xBFE480", VA = "0xBFE480")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	private float defaultFOV
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xBFE5C8", Offset = "0xBFE5C8", VA = "0xBFE5C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000060")]
	private float defaultSize
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xBFE68C", Offset = "0xBFE68C", VA = "0xBFE68C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xBFE1C0", Offset = "0xBFE1C0", VA = "0xBFE1C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xBFE1CC", Offset = "0xBFE1CC", VA = "0xBFE1CC", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xBFE284", Offset = "0xBFE284", VA = "0xBFE284", Slot = "5")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xBFE514", Offset = "0xBFE514", VA = "0xBFE514")]
	public void AddFOV(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xBFE74C", Offset = "0xBFE74C", VA = "0xBFE74C")]
	public CameraPathFOV AddFOV(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage, float fov, float size)
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xBF4214", Offset = "0xBF4214", VA = "0xBF4214")]
	public float GetValue(float percentage, ProjectionType type)
	{
		return default(float);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xBFE9D0", Offset = "0xBFE9D0", VA = "0xBFE9D0")]
	private float LinearInterpolation(float percentage, ProjectionType projectionType)
	{
		return default(float);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xBFE828", Offset = "0xBFE828", VA = "0xBFE828")]
	private float SmoothStepInterpolation(float percentage, ProjectionType projectionType)
	{
		return default(float);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xBFECC4", Offset = "0xBFECC4", VA = "0xBFECC4")]
	public CameraPathFOVList()
	{
	}
}
[Token(Token = "0x2000029")]
[ExecuteInEditMode]
public class CameraPathOrientation : CameraPathPoint
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Quaternion rotation;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform lookAt;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xBFECD0", Offset = "0xBFECD0", VA = "0xBFECD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xBFECDC", Offset = "0xBFECDC", VA = "0xBFECDC")]
	public CameraPathOrientation()
	{
	}
}
[Token(Token = "0x200002A")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x859190", Offset = "0x859190")]
[ExecuteInEditMode]
public class CameraPathOrientationList : CameraPathPointList
{
	[Token(Token = "0x200055D")]
	public enum Interpolation
	{
		[Token(Token = "0x40028DF")]
		None,
		[Token(Token = "0x40028E0")]
		Linear,
		[Token(Token = "0x40028E1")]
		SmoothStep,
		[Token(Token = "0x40028E2")]
		Hermite,
		[Token(Token = "0x40028E3")]
		Cubic
	}

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Interpolation interpolation;

	[Token(Token = "0x17000061")]
	public new CameraPathOrientation Item
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0xBFEEA0", Offset = "0xBFEEA0", VA = "0xBFEEA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xBFED50", Offset = "0xBFED50", VA = "0xBFED50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xBFED5C", Offset = "0xBFED5C", VA = "0xBFED5C", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xBFEE14", Offset = "0xBFEE14", VA = "0xBFEE14", Slot = "5")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xBF1974", Offset = "0xBF1974", VA = "0xBF1974")]
	public void AddOrientation(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xBFEF34", Offset = "0xBFEF34", VA = "0xBFEF34")]
	public CameraPathOrientation AddOrientation(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xBFF01C", Offset = "0xBFF01C", VA = "0xBFF01C")]
	public void RemovePoint(CameraPathOrientation orientation)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xBF3C10", Offset = "0xBF3C10", VA = "0xBF3C10")]
	public Quaternion GetOrientation(float percentage)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xBFF710", Offset = "0xBFF710", VA = "0xBFF710")]
	private Quaternion LinearInterpolation(float percentage)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xBFF548", Offset = "0xBFF548", VA = "0xBFF548")]
	private Quaternion SmootStepInterpolation(float percentage)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xBFF0C0", Offset = "0xBFF0C0", VA = "0xBFF0C0")]
	private Quaternion CubicInterpolation(float percentage)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xBFF9F0", Offset = "0xBFF9F0", VA = "0xBFF9F0", Slot = "6")]
	protected override void RecalculatePoints()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xC00314", Offset = "0xC00314", VA = "0xC00314")]
	public CameraPathOrientationList()
	{
	}
}
[Token(Token = "0x200002B")]
[ExecuteInEditMode]
public class CameraPathPoint : MonoBehaviour
{
	[Token(Token = "0x200055E")]
	public enum PositionModes
	{
		[Token(Token = "0x40028E5")]
		Free,
		[Token(Token = "0x40028E6")]
		FixedToPoint,
		[Token(Token = "0x40028E7")]
		FixedToPercent
	}

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PositionModes positionModes;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string givenName;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string customName;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string fullName;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected float _percent;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected float _animationPercentage;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CameraPathControlPoint point;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int index;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CameraPathControlPoint cpointA;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CameraPathControlPoint cpointB;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float curvePercentage;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 worldPosition;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool lockPoint;

	[Token(Token = "0x17000062")]
	public float percent
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0xBF4F40", Offset = "0xBF4F40", VA = "0xBF4F40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xC0032C", Offset = "0xC0032C", VA = "0xC0032C")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public float rawPercent
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xC00334", Offset = "0xC00334", VA = "0xC00334")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000064")]
	public float animationPercentage
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0xC0033C", Offset = "0xC0033C", VA = "0xC0033C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000212")]
		[Address(RVA = "0xC00384", Offset = "0xC00384", VA = "0xC00384")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public string displayName
	{
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xBFE110", Offset = "0xBFE110", VA = "0xBFE110")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xC00320", Offset = "0xC00320", VA = "0xC00320")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xBFCA84", Offset = "0xBFCA84", VA = "0xBFCA84")]
	public CameraPathPoint()
	{
	}
}
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8591EC", Offset = "0x8591EC")]
[ExecuteInEditMode]
public class CameraPathPointList : MonoBehaviour
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<CameraPathPoint> _points;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected CameraPath cameraPath;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected string pointTypeName;

	[NonSerialized]
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool initialised;

	[Token(Token = "0x17000066")]
	public CameraPathPoint Item
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xBFCC24", Offset = "0xBFCC24", VA = "0xBFCC24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public int numberOfPoints
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xC00408", Offset = "0xC00408", VA = "0xC00408")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000068")]
	public int realNumberOfPoints
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xBFD38C", Offset = "0xBFD38C", VA = "0xBFD38C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xC0038C", Offset = "0xC0038C", VA = "0xC0038C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xBFCEA0", Offset = "0xBFCEA0", VA = "0xBFCEA0", Slot = "4")]
	public virtual void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xBFE310", Offset = "0xBFE310", VA = "0xBFE310", Slot = "5")]
	public virtual void CleanUp()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xC00474", Offset = "0xC00474", VA = "0xC00474")]
	public int IndexOf(CameraPathPoint point)
	{
		return default(int);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xBFD2BC", Offset = "0xBFD2BC", VA = "0xBFD2BC")]
	public void AddPoint(CameraPathPoint newPoint, CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xBFD03C", Offset = "0xBFD03C", VA = "0xBFD03C")]
	public void AddPoint(CameraPathPoint newPoint, float fixPercent)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xBFD170", Offset = "0xBFD170", VA = "0xBFD170")]
	public void AddPoint(CameraPathPoint newPoint, CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xBFF048", Offset = "0xBFF048", VA = "0xBFF048")]
	public void RemovePoint(CameraPathPoint newPoint)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xC004DC", Offset = "0xC004DC", VA = "0xC004DC")]
	public void PathPointAddedEvent(CameraPathControlPoint addedPoint)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xC005F4", Offset = "0xC005F4", VA = "0xC005F4")]
	public void PathPointRemovedEvent(CameraPathControlPoint removedPathPoint)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xC007F8", Offset = "0xC007F8", VA = "0xC007F8")]
	public void CheckPointCullEventFromStart(float percent)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xC008F4", Offset = "0xC008F4", VA = "0xC008F4")]
	public void CheckPointCullEventFromEnd(float percent)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xBFF8CC", Offset = "0xBFF8CC", VA = "0xBFF8CC")]
	protected int GetNextPointIndex(float percent)
	{
		return default(int);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xBFEB64", Offset = "0xBFEB64", VA = "0xBFEB64")]
	protected int GetLastPointIndex(float percent)
	{
		return default(int);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xBF5118", Offset = "0xBF5118", VA = "0xBF5118")]
	public CameraPathPoint GetPoint(int index)
	{
		return null;
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC009F0", Offset = "0xC009F0", VA = "0xC009F0")]
	public CameraPathPoint GetPoint(CameraPathControlPoint atPoint)
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xC00B54", Offset = "0xC00B54", VA = "0xC00B54")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xC00BAC", Offset = "0xC00BAC", VA = "0xC00BAC")]
	public CameraPathPoint DuplicatePointCheck()
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xBFFB98", Offset = "0xBFFB98", VA = "0xBFFB98", Slot = "6")]
	protected virtual void RecalculatePoints()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xC00E64", Offset = "0xC00E64", VA = "0xC00E64")]
	public void ReassignCP(CameraPathControlPoint from, CameraPathControlPoint to)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC00398", Offset = "0xC00398", VA = "0xC00398")]
	protected void CheckListIsNull()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xBFD658", Offset = "0xBFD658", VA = "0xBFD658")]
	public CameraPathPointList()
	{
	}
}
[Token(Token = "0x200002D")]
public class CameraPathSpeed : CameraPathPoint
{
	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _speed;

	[Token(Token = "0x17000069")]
	public float speed
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xC0108C", Offset = "0xC0108C", VA = "0xC0108C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0xC01094", Offset = "0xC01094", VA = "0xC01094")]
		set
		{
		}
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xC01118", Offset = "0xC01118", VA = "0xC01118")]
	public CameraPathSpeed()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x859238", Offset = "0x859238")]
[ExecuteInEditMode]
public class CameraPathSpeedList : CameraPathPointList
{
	[Token(Token = "0x200055F")]
	public enum Interpolation
	{
		[Token(Token = "0x40028E9")]
		None,
		[Token(Token = "0x40028EA")]
		Linear,
		[Token(Token = "0x40028EB")]
		SmoothStep
	}

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Interpolation interpolation;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _enabled;

	[Token(Token = "0x1700006A")]
	public new CameraPathSpeed Item
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0xC01130", Offset = "0xC01130", VA = "0xC01130")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public bool listEnabled
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0xBF7EBC", Offset = "0xBF7EBC", VA = "0xBF7EBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000235")]
		[Address(RVA = "0xC01240", Offset = "0xC01240", VA = "0xC01240")]
		set
		{
		}
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xC01124", Offset = "0xC01124", VA = "0xC01124")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xC011C4", Offset = "0xC011C4", VA = "0xC011C4", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xC0124C", Offset = "0xC0124C", VA = "0xC0124C")]
	public void AddSpeedPoint(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xC012EC", Offset = "0xC012EC", VA = "0xC012EC")]
	public CameraPathSpeed AddSpeedPoint(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage)
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xC013D4", Offset = "0xC013D4", VA = "0xC013D4")]
	public float GetLowesetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xBF43F0", Offset = "0xBF43F0", VA = "0xBF43F0")]
	public float GetSpeed(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xC01638", Offset = "0xC01638", VA = "0xC01638")]
	private float LinearInterpolation(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xC01468", Offset = "0xC01468", VA = "0xC01468")]
	private float SmoothStepInterpolation(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xC017F4", Offset = "0xC017F4", VA = "0xC017F4")]
	public CameraPathSpeedList()
	{
	}
}
[Token(Token = "0x200002F")]
public class CameraPathTilt : CameraPathPoint
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float tilt;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xC01808", Offset = "0xC01808", VA = "0xC01808")]
	public CameraPathTilt()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x859284", Offset = "0x859284")]
[ExecuteInEditMode]
public class CameraPathTiltList : CameraPathPointList
{
	[Token(Token = "0x2000560")]
	public enum Interpolation
	{
		[Token(Token = "0x40028ED")]
		None,
		[Token(Token = "0x40028EE")]
		Linear,
		[Token(Token = "0x40028EF")]
		SmoothStep
	}

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Interpolation interpolation;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool listEnabled;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float autoSensitivity;

	[Token(Token = "0x1700006C")]
	public new CameraPathTilt Item
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xC01964", Offset = "0xC01964", VA = "0xC01964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xC01814", Offset = "0xC01814", VA = "0xC01814")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xC01820", Offset = "0xC01820", VA = "0xC01820", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xC018D8", Offset = "0xC018D8", VA = "0xC018D8", Slot = "5")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xC019F8", Offset = "0xC019F8", VA = "0xC019F8")]
	public void AddTilt(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xC01A9C", Offset = "0xC01A9C", VA = "0xC01A9C")]
	public CameraPathTilt AddTilt(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage, float tilt)
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xBF4094", Offset = "0xBF4094", VA = "0xBF4094")]
	public float GetTilt(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xC01E58", Offset = "0xC01E58", VA = "0xC01E58")]
	public void AutoSetTilts()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xC01EB0", Offset = "0xC01EB0", VA = "0xC01EB0")]
	public void AutoSetTilt(CameraPathTilt point)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xC01CE8", Offset = "0xC01CE8", VA = "0xC01CE8")]
	private float LinearInterpolation(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xC01B64", Offset = "0xC01B64", VA = "0xC01B64")]
	private float SmoothStepInterpolation(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xC021B0", Offset = "0xC021B0", VA = "0xC021B0")]
	public CameraPathTiltList()
	{
	}
}
[Token(Token = "0x2000031")]
public class CameraPathColours
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color RED;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color GREEN;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Color DARKGREEN;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Color BLUE;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Color GREY;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Color DARKGREY;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Color CYAN;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static Color PURPLE;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static Color MAGENTA;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static Color WHITE;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xBFB9CC", Offset = "0xBFB9CC", VA = "0xBFB9CC")]
	public CameraPathColours()
	{
	}
}
[Token(Token = "0x2000032")]
public class CPMath
{
	[Token(Token = "0x600024C")]
	[Address(RVA = "0xBED39C", Offset = "0xBED39C", VA = "0xBED39C")]
	public static Vector3 CalculateBezier(float t, Vector3 p, Vector3 a, Vector3 b, Vector3 q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xBED564", Offset = "0xBED564", VA = "0xBED564")]
	public static Vector3 CalculateHermite(Vector3 p, Vector3 a, Vector3 b, Vector3 q, float t, float tension, float bias)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xBED908", Offset = "0xBED908", VA = "0xBED908")]
	public static Vector3 CalculateCatmullRom(Vector3 p, Vector3 a, Vector3 b, Vector3 q, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xBEDCD4", Offset = "0xBEDCD4", VA = "0xBEDCD4")]
	public static Vector2 CalculateBezier(float t, Vector2 p, Vector2 a, Vector2 b, Vector2 q)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xBEDE48", Offset = "0xBEDE48", VA = "0xBEDE48")]
	public static Vector2 CalculateHermite(Vector2 p, Vector2 a, Vector2 b, Vector2 q, float t, float tension, float bias)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xBEE140", Offset = "0xBEE140", VA = "0xBEE140")]
	public static Vector2 CalculateCatmullRom(Vector2 p, Vector2 a, Vector2 b, Vector2 q, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xBEE43C", Offset = "0xBEE43C", VA = "0xBEE43C")]
	public static Quaternion CalculateCubic(Quaternion p, Quaternion a, Quaternion b, Quaternion q, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xBEEB24", Offset = "0xBEEB24", VA = "0xBEEB24")]
	public static float CalculateCubic(float p, float a, float b, float q, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xBEEB70", Offset = "0xBEEB70", VA = "0xBEEB70")]
	public static float CalculateHermite(float p, float a, float b, float q, float t, float tension, float bias)
	{
		return default(float);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xBEEC18", Offset = "0xBEEC18", VA = "0xBEEC18")]
	public static float CalculateCatmullRom(float p, float a, float b, float q, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xBEEC84", Offset = "0xBEEC84", VA = "0xBEEC84")]
	public static float SmoothStep(float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xBEE730", Offset = "0xBEE730", VA = "0xBEE730")]
	public static Quaternion SquadTangent(Quaternion before, Quaternion center, Quaternion after)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xBEEC9C", Offset = "0xBEEC9C", VA = "0xBEEC9C")]
	public static Quaternion LnDif(Quaternion a, Quaternion b)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xBEEFCC", Offset = "0xBEEFCC", VA = "0xBEEFCC")]
	public static Quaternion Normalize(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xBEED8C", Offset = "0xBEED8C", VA = "0xBEED8C")]
	public static Quaternion Exp(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xBEF0A4", Offset = "0xBEF0A4", VA = "0xBEF0A4")]
	public static Quaternion Log(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xBEE904", Offset = "0xBEE904", VA = "0xBEE904")]
	public static Quaternion Slerp(Quaternion p, Quaternion q, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xBEF2C8", Offset = "0xBEF2C8", VA = "0xBEF2C8")]
	public static Quaternion Nlerp(Quaternion p, Quaternion q, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xBEF348", Offset = "0xBEF348", VA = "0xBEF348")]
	public static Quaternion GetQuatConjugate(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xBEF384", Offset = "0xBEF384", VA = "0xBEF384")]
	public static float SignedAngle(Vector3 from, Vector3 to, Vector3 up)
	{
		return default(float);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xBEF500", Offset = "0xBEF500", VA = "0xBEF500")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xBEF5B0", Offset = "0xBEF5B0", VA = "0xBEF5B0")]
	public CPMath()
	{
	}
}
[Token(Token = "0x2000033")]
public class CameraPathPreviewSupport
{
	[Token(Token = "0x1700006D")]
	public static bool previewSupported
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xC01034", Offset = "0xC01034", VA = "0xC01034")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006E")]
	public static string previewSupportedText
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xC0103C", Offset = "0xC0103C", VA = "0xC0103C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xC01084", Offset = "0xC01084", VA = "0xC01084")]
	public CameraPathPreviewSupport()
	{
	}
}
[Token(Token = "0x2000034")]
public class XMLVariableConverter
{
	[Token(Token = "0x6000265")]
	[Address(RVA = "0xC77F64", Offset = "0xC77F64", VA = "0xC77F64")]
	public XMLVariableConverter()
	{
	}
}
[Token(Token = "0x2000035")]
public class CameraRotate : MonoBehaviour
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetObject;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float averageDistance;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomSpeed;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rotateOnOff;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float desiredDistance;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion currentRotation;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion desiredRotation;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion rotation;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 position;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float idleTimer;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleSmooth;

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xC021CC", Offset = "0xC021CC", VA = "0xC021CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xC02584", Offset = "0xC02584", VA = "0xC02584")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xC021D0", Offset = "0xC021D0", VA = "0xC021D0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xC02588", Offset = "0xC02588", VA = "0xC02588")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xC02AB4", Offset = "0xC02AB4", VA = "0xC02AB4")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xC02B64", Offset = "0xC02B64", VA = "0xC02B64")]
	public CameraRotate()
	{
	}
}
[Token(Token = "0x2000036")]
[ExecuteInEditMode]
[ImageEffectTransformsToLDR]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8592D0", Offset = "0x8592D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8592D0", Offset = "0x8592D0")]
public class ColorSuite : MonoBehaviour
{
	[Token(Token = "0x2000561")]
	public enum DitherMode
	{
		[Token(Token = "0x40028F1")]
		Off,
		[Token(Token = "0x40028F2")]
		Ordered,
		[Token(Token = "0x40028F3")]
		Triangular
	}

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _colorTemp;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _colorTint;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _toneMapping;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _exposure;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _saturation;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve _rCurve;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve _gCurve;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve _bCurve;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve _cCurve;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private DitherMode _ditherMode;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Shader shader;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _material;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D _lutTexture;

	[Token(Token = "0x1700006F")]
	public float colorTemp
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xC051D8", Offset = "0xC051D8", VA = "0xC051D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600026D")]
		[Address(RVA = "0xC051E0", Offset = "0xC051E0", VA = "0xC051E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public float colorTint
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xC051E8", Offset = "0xC051E8", VA = "0xC051E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xC051F0", Offset = "0xC051F0", VA = "0xC051F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public bool toneMapping
	{
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xC051F8", Offset = "0xC051F8", VA = "0xC051F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xC05200", Offset = "0xC05200", VA = "0xC05200")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public float exposure
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xC0520C", Offset = "0xC0520C", VA = "0xC0520C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xC05214", Offset = "0xC05214", VA = "0xC05214")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public float saturation
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xC0521C", Offset = "0xC0521C", VA = "0xC0521C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xC05224", Offset = "0xC05224", VA = "0xC05224")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public AnimationCurve redCurve
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xC0522C", Offset = "0xC0522C", VA = "0xC0522C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xC05234", Offset = "0xC05234", VA = "0xC05234")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public AnimationCurve greenCurve
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xC05388", Offset = "0xC05388", VA = "0xC05388")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xC05390", Offset = "0xC05390", VA = "0xC05390")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public AnimationCurve blueCurve
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xC05398", Offset = "0xC05398", VA = "0xC05398")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xC053A0", Offset = "0xC053A0", VA = "0xC053A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public AnimationCurve rgbCurve
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xC053A8", Offset = "0xC053A8", VA = "0xC053A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xC053B0", Offset = "0xC053B0", VA = "0xC053B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public DitherMode ditherMode
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xC053B8", Offset = "0xC053B8", VA = "0xC053B8")]
		get
		{
			return default(DitherMode);
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xC053C0", Offset = "0xC053C0", VA = "0xC053C0")]
		set
		{
		}
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xC053C8", Offset = "0xC053C8", VA = "0xC053C8")]
	private static Color EncodeRGBM(float r, float g, float b)
	{
		return default(Color);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xC054B8", Offset = "0xC054B8", VA = "0xC054B8")]
	private static float StandardIlluminantY(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xC054E4", Offset = "0xC054E4", VA = "0xC054E4")]
	private static Vector3 CIExyToLMS(float x, float y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xC055A4", Offset = "0xC055A4", VA = "0xC055A4")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xC0523C", Offset = "0xC0523C", VA = "0xC0523C")]
	private void UpdateLUT()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xC05704", Offset = "0xC05704", VA = "0xC05704")]
	private Vector3 CalculateColorBalance()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xC057EC", Offset = "0xC057EC", VA = "0xC057EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xC057F0", Offset = "0xC057F0", VA = "0xC057F0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xC05814", Offset = "0xC05814", VA = "0xC05814")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xC05838", Offset = "0xC05838", VA = "0xC05838")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xC05AFC", Offset = "0xC05AFC", VA = "0xC05AFC")]
	public ColorSuite()
	{
	}
}
[Token(Token = "0x2000037")]
public sealed class ExplodePart : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000562")]
	public class TransformParams
	{
		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 Scale;

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x9F88C0", Offset = "0x9F88C0", VA = "0x9F88C0")]
		public TransformParams()
		{
		}
	}

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TransformParams m_finalTransform;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TransformParams m_initialTransform;

	[Token(Token = "0x17000079")]
	public TransformParams FinalTransform
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x9F86BC", Offset = "0x9F86BC", VA = "0x9F86BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x9F86C4", Offset = "0x9F86C4", VA = "0x9F86C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public TransformParams InitialTransform
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x9F86CC", Offset = "0x9F86CC", VA = "0x9F86CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x9F86D4", Offset = "0x9F86D4", VA = "0x9F86D4")]
		set
		{
		}
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x9F86DC", Offset = "0x9F86DC", VA = "0x9F86DC")]
	public void ApplyExplodeOffset(float offset)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x9F88B8", Offset = "0x9F88B8", VA = "0x9F88B8")]
	public ExplodePart()
	{
	}
}
[Token(Token = "0x2000038")]
public sealed class ExplodePartManager : MonoBehaviour
{
	[Token(Token = "0x2000563")]
	private enum AnimationDirection
	{
		[Token(Token = "0x40028F8")]
		Forward,
		[Token(Token = "0x40028F9")]
		Reverse
	}

	[Token(Token = "0x2000564")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF60", Offset = "0x85CF60")]
	private sealed class <PlayExplodeAnimation>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40028FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExplodePartManager <>4__this;

		[Token(Token = "0x17000365")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002832")]
			[Address(RVA = "0x9F8C98", Offset = "0x9F8C98", VA = "0x9F8C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002834")]
			[Address(RVA = "0x9F8D00", Offset = "0x9F8D00", VA = "0x9F8D00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x9F8B2C", Offset = "0x9F8B2C", VA = "0x9F8B2C")]
		[DebuggerHidden]
		public <PlayExplodeAnimation>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x9F8B60", Offset = "0x9F8B60", VA = "0x9F8B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x9F8B64", Offset = "0x9F8B64", VA = "0x9F8B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x9F8CA0", Offset = "0x9F8CA0", VA = "0x9F8CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_animationTime;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private KeyCode m_key;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_animationProgress;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private AnimationDirection m_currentDirection;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ExplodePart[] m_explodeParts;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x9F88C8", Offset = "0x9F88C8", VA = "0x9F88C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x9F892C", Offset = "0x9F892C", VA = "0x9F892C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x9F89BC", Offset = "0x9F89BC", VA = "0x9F89BC")]
	private void ApplyExplodeOffset(float offset)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x9F8A34", Offset = "0x9F8A34", VA = "0x9F8A34")]
	private float EaseInOutSine(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x9F8ABC", Offset = "0x9F8ABC", VA = "0x9F8ABC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D258", Offset = "0x86D258")]
	private IEnumerator PlayExplodeAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x9F8B58", Offset = "0x9F8B58", VA = "0x9F8B58")]
	public ExplodePartManager()
	{
	}
}
[Token(Token = "0x2000039")]
public class CheckForDone : MonoBehaviour
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DoesCount;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime _lastPause;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xC0466C", Offset = "0xC0466C", VA = "0xC0466C")]
	public void FinishedAnimating()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xC047C8", Offset = "0xC047C8", VA = "0xC047C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xC047CC", Offset = "0xC047CC", VA = "0xC047CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xC04910", Offset = "0xC04910", VA = "0xC04910")]
	public CheckForDone()
	{
	}
}
[Token(Token = "0x200003A")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x600029B")]
	[Address(RVA = "0x9F44F4", Offset = "0x9F44F4", VA = "0x9F44F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x9F4570", Offset = "0x9F4570", VA = "0x9F4570")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x200003B")]
public class FollowSphere : MonoBehaviour
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ToFollow;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SmoothTime;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 yVelocity;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xA03684", Offset = "0xA03684", VA = "0xA03684")]
	private void Start()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xA03688", Offset = "0xA03688", VA = "0xA03688")]
	private void Update()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xA03798", Offset = "0xA03798", VA = "0xA03798")]
	public FollowSphere()
	{
	}
}
[Token(Token = "0x200003C")]
public class GoBack : MonoBehaviour
{
	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xB839C0", Offset = "0xB839C0", VA = "0xB839C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xB83A44", Offset = "0xB83A44", VA = "0xB83A44")]
	public GoBack()
	{
	}
}
[Token(Token = "0x200003D")]
public class GoBack2 : MonoBehaviour
{
	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime _leftDown;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime _rightDown;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xB83A4C", Offset = "0xB83A4C", VA = "0xB83A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xB83A50", Offset = "0xB83A50", VA = "0xB83A50")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xB83CF0", Offset = "0xB83CF0", VA = "0xB83CF0")]
	public GoBack2()
	{
	}
}
[Token(Token = "0x200003E")]
public class ME_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Character;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Model;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Current;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light[] NightLights;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture HUETexture;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseMobileVersion;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MobileCharacter;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Target;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color guiColor;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentNomber;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject characterInstance;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject modelInstance;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dpiScale;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isDay;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float colorHUE;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float startSunIntensity;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion startSunRotation;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color startAmbientLight;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float startAmbientIntencity;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float startReflectionIntencity;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool isButtonPressed;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject instanceShieldProjectile;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xA196B8", Offset = "0xA196B8", VA = "0xA196B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xA19AFC", Offset = "0xA19AFC", VA = "0xA19AFC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xA19804", Offset = "0xA19804", VA = "0xA19804")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xA1A214", Offset = "0xA1A214", VA = "0xA1A214")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xA1A328", Offset = "0xA1A328", VA = "0xA1A328")]
	private void ReactivateEffect()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xA1A394", Offset = "0xA1A394", VA = "0xA1A394")]
	public ME_DemoGUI()
	{
	}
}
[Token(Token = "0x200003F")]
public class ME_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xA1B49C", Offset = "0xA1B49C", VA = "0xA1B49C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xA1B4D4", Offset = "0xA1B4D4", VA = "0xA1B4D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xA1B9E4", Offset = "0xA1B9E4", VA = "0xA1B9E4")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xA1BA94", Offset = "0xA1BA94", VA = "0xA1BA94")]
	public ME_MouseOrbit()
	{
	}
}
[Token(Token = "0x2000040")]
public class ME_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool CanUpdate;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xA1DCBC", Offset = "0xA1DCBC", VA = "0xA1DCBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xA1DD30", Offset = "0xA1DD30", VA = "0xA1DD30")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xA1DDE8", Offset = "0xA1DDE8", VA = "0xA1DDE8")]
	public ME_RealtimeReflection()
	{
	}
}
[Token(Token = "0x2000041")]
public class ME_MobileBloom : MonoBehaviour
{
	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F148", Offset = "0x85F148")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F148", Offset = "0x85F148")]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F1A0", Offset = "0x85F1A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F1A0", Offset = "0x85F1A0")]
	public float Intensity;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float Threshold;

	[Token(Token = "0x400024D")]
	private const string shaderName = "Hidden/KriptoFX/PostEffects/ME_Bloom";

	[Token(Token = "0x400024E")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture Source;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _bloomMaterial;

	[Token(Token = "0x1700007B")]
	private Material bloomMaterial
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xA1AAB8", Offset = "0xA1AAB8", VA = "0xA1AAB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xA1ABE4", Offset = "0xA1ABE4", VA = "0xA1ABE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xA1ABE8", Offset = "0xA1ABE8", VA = "0xA1ABE8")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xA1ACA4", Offset = "0xA1ACA4", VA = "0xA1ACA4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xA1AC70", Offset = "0xA1AC70", VA = "0xA1AC70")]
	private RenderTextureFormat SupportedHdrFormat()
	{
		return default(RenderTextureFormat);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xA1ACF4", Offset = "0xA1ACF4", VA = "0xA1ACF4")]
	private void UpdateBloom(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xA1B3CC", Offset = "0xA1B3CC", VA = "0xA1B3CC")]
	public ME_MobileBloom()
	{
	}
}
[Token(Token = "0x2000042")]
public class ME_AnimatorEvents : MonoBehaviour
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectPrefab;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SwordPrefab;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SwordPosition;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform StartSwordPosition;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectInstance;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject SwordInstance;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xA163FC", Offset = "0xA163FC", VA = "0xA163FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xA16588", Offset = "0xA16588", VA = "0xA16588")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xA167B0", Offset = "0xA167B0", VA = "0xA167B0")]
	public void ActivateSword()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xA16878", Offset = "0xA16878", VA = "0xA16878")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xA16E30", Offset = "0xA16E30", VA = "0xA16E30")]
	public ME_AnimatorEvents()
	{
	}
}
[Token(Token = "0x2000043")]
public static class ME_ColorHelper
{
	[Token(Token = "0x2000565")]
	public struct HSBColor
	{
		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x765D88", Offset = "0x765D88", VA = "0x765D88")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x4000259")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xA169D0", Offset = "0xA169D0", VA = "0xA169D0")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xA16BBC", Offset = "0xA16BBC", VA = "0xA16BBC")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xA16E44", Offset = "0xA16E44", VA = "0xA16E44")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xA16F64", Offset = "0xA16F64", VA = "0xA16F64")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xA17BB0", Offset = "0xA17BB0", VA = "0xA17BB0")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xA17C8C", Offset = "0xA17C8C", VA = "0xA17C8C")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x2000044")]
public class ME_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xA1A444", Offset = "0xA1A444", VA = "0xA1A444")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xA1A448", Offset = "0xA1A448", VA = "0xA1A448")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xA1A490", Offset = "0xA1A490", VA = "0xA1A490")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xA1A53C", Offset = "0xA1A53C", VA = "0xA1A53C")]
	public ME_EffectSettingColor()
	{
	}
}
[Token(Token = "0x2000045")]
[ExecuteInEditMode]
public class ME_CustomLight : MonoBehaviour
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xA17F6C", Offset = "0xA17F6C", VA = "0xA17F6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA1831C", Offset = "0xA1831C", VA = "0xA1831C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA1952C", Offset = "0xA1952C", VA = "0xA1952C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xA184B4", Offset = "0xA184B4", VA = "0xA184B4")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xA18650", Offset = "0xA18650", VA = "0xA18650")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xA18B80", Offset = "0xA18B80", VA = "0xA18B80")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xA180A4", Offset = "0xA180A4", VA = "0xA180A4")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xA188C4", Offset = "0xA188C4", VA = "0xA188C4")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xA18E04", Offset = "0xA18E04", VA = "0xA18E04")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xA181D0", Offset = "0xA181D0", VA = "0xA181D0")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xA1965C", Offset = "0xA1965C", VA = "0xA1965C")]
	public ME_CustomLight()
	{
	}
}
[Token(Token = "0x2000046")]
public class ME_FixParticlesAligment : MonoBehaviour
{
	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xA1A570", Offset = "0xA1A570", VA = "0xA1A570")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xA1A5E8", Offset = "0xA1A5E8", VA = "0xA1A5E8")]
	public ME_FixParticlesAligment()
	{
	}
}
[Token(Token = "0x2000047")]
public class ME_LightCurves : MonoBehaviour
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xA1A910", Offset = "0xA1A910", VA = "0xA1A910")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xA1A994", Offset = "0xA1A994", VA = "0xA1A994")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xA1A9C4", Offset = "0xA1A9C4", VA = "0xA1A9C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xA1AA68", Offset = "0xA1AA68", VA = "0xA1AA68")]
	public ME_LightCurves()
	{
	}
}
[Token(Token = "0x2000048")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xA1AAB0", Offset = "0xA1AAB0", VA = "0xA1AAB0")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x2000049")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xA1BAB0", Offset = "0xA1BAB0", VA = "0xA1BAB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xA1BBB4", Offset = "0xA1BBB4", VA = "0xA1BBB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xA1BC1C", Offset = "0xA1BC1C", VA = "0xA1BC1C")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xA1BD3C", Offset = "0xA1BD3C", VA = "0xA1BD3C")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xA1C274", Offset = "0xA1C274", VA = "0xA1C274")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xA1C330", Offset = "0xA1C330", VA = "0xA1C330")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x200004A")]
[ExecuteInEditMode]
public class ME_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DistanceRelative;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevPos;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xA1C3E0", Offset = "0xA1C3E0", VA = "0xA1C3E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xA1C44C", Offset = "0xA1C44C", VA = "0xA1C44C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xA1C818", Offset = "0xA1C818", VA = "0xA1C818")]
	public ME_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x200004B")]
public class ME_ParticleTrails : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000566")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF70", Offset = "0x85CF70")]
	private sealed class <>c
	{
		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<uint, GameObject>, bool> <>9__13_0;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<uint, GameObject>, uint> <>9__13_1;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<uint, GameObject>, GameObject> <>9__13_2;

		[Token(Token = "0x6002837")]
		[Address(RVA = "0xA1D4DC", Offset = "0xA1D4DC", VA = "0xA1D4DC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0xA1D4E4", Offset = "0xA1D4E4", VA = "0xA1D4E4")]
		internal bool <ClearEmptyHashes>b__13_0(KeyValuePair<uint, GameObject> h)
		{
			return default(bool);
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0xA1D550", Offset = "0xA1D550", VA = "0xA1D550")]
		internal uint <ClearEmptyHashes>b__13_1(KeyValuePair<uint, GameObject> h)
		{
			return default(uint);
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0xA1D594", Offset = "0xA1D594", VA = "0xA1D594")]
		internal GameObject <ClearEmptyHashes>b__13_2(KeyValuePair<uint, GameObject> h)
		{
			return null;
		}
	}

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TrailPrefab;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<uint, GameObject> hashTrails;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<uint, GameObject> newHashTrails;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> currentGO;

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xA1C828", Offset = "0xA1C828", VA = "0xA1C828")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xA1C8C8", Offset = "0xA1C8C8", VA = "0xA1C8C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xA1C924", Offset = "0xA1C924", VA = "0xA1C924")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xA1C980", Offset = "0xA1C980", VA = "0xA1C980")]
	public void Clear()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xA1CAB0", Offset = "0xA1CAB0", VA = "0xA1CAB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xA1CAB4", Offset = "0xA1CAB4", VA = "0xA1CAB4")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x60002EC")]
	public void AddRange<T, S>(Dictionary<T, S> source, Dictionary<T, S> collection)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xA1D184", Offset = "0xA1D184", VA = "0xA1D184")]
	private void ClearEmptyHashes()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xA1D3C0", Offset = "0xA1D3C0", VA = "0xA1D3C0")]
	public ME_ParticleTrails()
	{
	}
}
[Token(Token = "0x200004C")]
public class ME_Reflection : MonoBehaviour
{
	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture tex;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Light> dirLight;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> lightIntencity;

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xA1DDF8", Offset = "0xA1DDF8", VA = "0xA1DDF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xA1E03C", Offset = "0xA1E03C", VA = "0xA1E03C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xA1E1DC", Offset = "0xA1E1DC", VA = "0xA1E1DC")]
	public ME_Reflection()
	{
	}
}
[Token(Token = "0x200004D")]
public class ME_TrailRendererNoise : MonoBehaviour
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F1F8", Offset = "0x85F1F8")]
	public float MinVertexDistance;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VertexTime;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TotalLifeTime;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool SmoothCurves;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsRibbon;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool IsActive;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F214", Offset = "0x85F214")]
	public float Frequency;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F230", Offset = "0x85F230")]
	public float TimeScale;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F24C", Offset = "0x85F24C")]
	public float Amplitude;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Gravity;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TurbulenceStrength;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool AutodestructWhenNotActive;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform t;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 prevPos;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> points;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<float> lifeTimes;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> velocities;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomOffset;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curveCount;

	[Token(Token = "0x4000299")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x400029A")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x400029B")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xA1E1E4", Offset = "0xA1E1E4", VA = "0xA1E1E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xA1E334", Offset = "0xA1E334", VA = "0xA1E334")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xA1E3B4", Offset = "0xA1E3B4", VA = "0xA1E3B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xA1E4C0", Offset = "0xA1E4C0", VA = "0xA1E4C0")]
	private void AddNewPoints()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xA1E714", Offset = "0xA1E714", VA = "0xA1E714")]
	private void UpdatetPoints()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xA1E8C8", Offset = "0xA1E8C8", VA = "0xA1E8C8")]
	private void UpdateLineRendererBezier()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xA1E990", Offset = "0xA1E990", VA = "0xA1E990")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xA1EA60", Offset = "0xA1EA60", VA = "0xA1EA60")]
	private void CalculateTurbuelence(Vector3 position, float speed, float scale, float height, float gravity, int index)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xA1ECA0", Offset = "0xA1ECA0", VA = "0xA1ECA0")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xA1F1E4", Offset = "0xA1F1E4", VA = "0xA1F1E4")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xA1F2CC", Offset = "0xA1F2CC", VA = "0xA1F2CC")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xA1F580", Offset = "0xA1F580", VA = "0xA1F580")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xA1F3EC", Offset = "0xA1F3EC", VA = "0xA1F3EC")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xA1F854", Offset = "0xA1F854", VA = "0xA1F854")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xA1FA1C", Offset = "0xA1FA1C", VA = "0xA1FA1C")]
	public ME_TrailRendererNoise()
	{
	}
}
[Token(Token = "0x200004E")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x2000567")]
	private class ParticleStartInfo
	{
		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem.MinMaxCurve StartSize;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem.MinMaxCurve StartSpeed;

		[Token(Token = "0x600283B")]
		[Address(RVA = "0xBAB764", Offset = "0xBAB764", VA = "0xBAB764")]
		public ParticleStartInfo()
		{
		}
	}

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartScaleMultiplier;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Color;

	[Token(Token = "0x400029F")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsActive;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FadeTime;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool currentActiveStatus;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool needUpdateAlpha;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color oldColor;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentAlphaTime;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] colorProperties;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float alpha;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float prevAlpha;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, float> startAlphaColors;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool previousActiveStatus;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool needUpdate;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool needLastUpdate;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<ParticleSystem, ParticleStartInfo> startParticleParameters;

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xBAA43C", Offset = "0xBAA43C", VA = "0xBAA43C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xBAA44C", Offset = "0xBAA44C", VA = "0xBAA44C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xBAA604", Offset = "0xBAA604", VA = "0xBAA604")]
	private void InitStartAlphaColors()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xBAB5D4", Offset = "0xBAB5D4", VA = "0xBAB5D4")]
	private void InitStartParticleParameters()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xBAAC18", Offset = "0xBAAC18", VA = "0xBAAC18")]
	private void UpdateVisibleStatus()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xBAB76C", Offset = "0xBAB76C", VA = "0xBAB76C")]
	private void UpdateAlphaByProperties(string rendName, int materialNumber, Material mat, float alpha)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xBAB414", Offset = "0xBAB414", VA = "0xBAB414")]
	private void GetStartAlphaByProperties(string rendName, int materialNumber, Material mat)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xBAB328", Offset = "0xBAB328", VA = "0xBAB328")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xBAB8DC", Offset = "0xBAB8DC", VA = "0xBAB8DC")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xBAB9A0", Offset = "0xBAB9A0", VA = "0xBAB9A0")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xBAC2C4", Offset = "0xBAC2C4", VA = "0xBAC2C4")]
	private void CheckScaleIncludedParticles()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xBAC2C8", Offset = "0xBAC2C8", VA = "0xBAC2C8")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xBABAD8", Offset = "0xBABAD8", VA = "0xBABAD8")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xBAC3CC", Offset = "0xBAC3CC", VA = "0xBAC3CC")]
	private ParticleSystem.MinMaxCurve UpdateParticleParam(ParticleSystem.MinMaxCurve startParam, ParticleSystem.MinMaxCurve currentParam, float scale)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xBAC0CC", Offset = "0xBAC0CC", VA = "0xBAC0CC")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xBAC488", Offset = "0xBAC488", VA = "0xBAC488")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xBAC618", Offset = "0xBAC618", VA = "0xBAC618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xBAC9DC", Offset = "0xBAC9DC", VA = "0xBAC9DC")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x200004F")]
public class ME_LegacyRenderDistortion : MonoBehaviour
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommandBuffer buf;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cam;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool bufferIsAdded;

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xA1A5F0", Offset = "0xA1A5F0", VA = "0xA1A5F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xA1A64C", Offset = "0xA1A64C", VA = "0xA1A64C")]
	private void CreateBuffer()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xA1A838", Offset = "0xA1A838", VA = "0xA1A838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xA1A87C", Offset = "0xA1A87C", VA = "0xA1A87C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xA1A83C", Offset = "0xA1A83C", VA = "0xA1A83C")]
	private void AddBuffer()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xA1A880", Offset = "0xA1A880", VA = "0xA1A880")]
	private void RemoveBuffer()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA1A8BC", Offset = "0xA1A8BC", VA = "0xA1A8BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xA1A8DC", Offset = "0xA1A8DC", VA = "0xA1A8DC")]
	private bool IsSupportedHdr()
	{
		return default(bool);
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xA1A900", Offset = "0xA1A900", VA = "0xA1A900")]
	public ME_LegacyRenderDistortion()
	{
	}
}
[Token(Token = "0x2000050")]
public class ME_PerPlatformSettings : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DisableOnMobiles;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RenderMobileDistortion;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F268", Offset = "0x85F268")]
	public float ParticleBudgetForMobiles;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isMobile;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xA1D5D8", Offset = "0xA1D5D8", VA = "0xA1D5D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xA1DA38", Offset = "0xA1DA38", VA = "0xA1DA38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xA1DB80", Offset = "0xA1DB80", VA = "0xA1DB80")]
	private void Update()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xA1DA64", Offset = "0xA1DA64", VA = "0xA1DA64")]
	private void LWRP_Rendering_Check(Camera cam)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xA1DA68", Offset = "0xA1DA68", VA = "0xA1DA68")]
	private void Legacy_Rendering_Check(Camera cam)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xA1DBAC", Offset = "0xA1DBAC", VA = "0xA1DBAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xA1D65C", Offset = "0xA1D65C", VA = "0xA1D65C")]
	private bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xA1D664", Offset = "0xA1D664", VA = "0xA1D664")]
	private void ChangeParticlesBudget(float particlesMul)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xA1DCAC", Offset = "0xA1DCAC", VA = "0xA1DCAC")]
	public ME_PerPlatformSettings()
	{
	}
}
[Token(Token = "0x2000051")]
public class CausticDecal : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxAngle;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pushDistance;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask affectedLayers;

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xC02CFC", Offset = "0xC02CFC", VA = "0xC02CFC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC02DEC", Offset = "0xC02DEC", VA = "0xC02DEC")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xC032B8", Offset = "0xC032B8", VA = "0xC032B8")]
	public CausticDecal()
	{
	}
}
[Token(Token = "0x2000052")]
public class BoatSimulator : MonoBehaviour
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rigid;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool keyPressedW;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool keyPressedA;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool keyPressedS;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool keyPressedD;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xBC91D0", Offset = "0xBC91D0", VA = "0xBC91D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xBC9228", Offset = "0xBC9228", VA = "0xBC9228")]
	private void Update()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xBC95EC", Offset = "0xBC95EC", VA = "0xBC95EC")]
	public BoatSimulator()
	{
	}
}
[Token(Token = "0x2000053")]
public class CubeGenerator : MonoBehaviour
{
	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cubes;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xC05BA4", Offset = "0xC05BA4", VA = "0xC05BA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xC05C00", Offset = "0xC05C00", VA = "0xC05C00")]
	private void UpdateCube()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xC05E68", Offset = "0xC05E68", VA = "0xC05E68")]
	public CubeGenerator()
	{
	}
}
[Token(Token = "0x2000054")]
public class DemoGUIWater : MonoBehaviour
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float UpdateInterval;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MaxScenes;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsMobileScene;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Sun;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SunTransform;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Boat;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject water1;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject water2;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float angle;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool canUpdateTestMaterial;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject cam;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material currentWaterMaterial;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material causticMaterial;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject currentWater;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float transparent;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float fadeBlend;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float refl;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float refraction;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float waterWaveScaleXZ;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector4 waterDirection;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector4 causticDirection;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector4 foamDirection;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector4 ABDirection;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector4 CDDirection;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float direction;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Color reflectionColor;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 oldCausticScale;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float oldTextureScale;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float oldWaveScale;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject caustic;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float startSunIntencity;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xB0B2B8", Offset = "0xB0B2B8", VA = "0xB0B2B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xB0B344", Offset = "0xB0B344", VA = "0xB0B344")]
	private void UpdateCurrentWater()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB0B704", Offset = "0xB0B704", VA = "0xB0B704")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xB0B714", Offset = "0xB0B714", VA = "0xB0B714")]
	private void GUIMobile()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB0BD80", Offset = "0xB0BD80", VA = "0xB0BD80")]
	private void GUIPC()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB0C758", Offset = "0xB0C758", VA = "0xB0C758")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB0C7D0", Offset = "0xB0C7D0", VA = "0xB0C7D0")]
	private void OnSetColorMain(Color color)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB0C85C", Offset = "0xB0C85C", VA = "0xB0C85C")]
	public DemoGUIWater()
	{
	}
}
[Token(Token = "0x2000055")]
public class FPS : MonoBehaviour
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fps;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x9F8D08", Offset = "0x9F8D08", VA = "0x9F8D08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x9F8D8C", Offset = "0x9F8D8C", VA = "0x9F8D8C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x9F8E74", Offset = "0x9F8E74", VA = "0x9F8E74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x9F8ED4", Offset = "0x9F8ED4", VA = "0x9F8ED4")]
	public FPS()
	{
	}
}
[Token(Token = "0x2000056")]
public class Buoyancy : MonoBehaviour
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Density;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int SlicesPerAxis;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsConcave;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int VoxelsLimit;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WaveVelocity;

	[Token(Token = "0x40002EA")]
	private const float Dampfer = 0.1f;

	[Token(Token = "0x40002EB")]
	private const float WaterDensity = 1000f;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float voxelHalfHeight;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float localArchimedesForce;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> voxels;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isMeshCollider;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3[]> forces;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaterRipples waterRipples;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xBC9CA8", Offset = "0xBC9CA8", VA = "0xBC9CA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xBCA288", Offset = "0xBCA288", VA = "0xBCA288")]
	private List<Vector3> SliceIntoVoxels(bool concave)
	{
		return null;
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xBCAB24", Offset = "0xBCAB24", VA = "0xBCAB24")]
	private static bool PointIsInsideMeshCollider(Collider c, Vector3 p)
	{
		return default(bool);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xBCAD98", Offset = "0xBCAD98", VA = "0xBCAD98")]
	private static void FindClosestPoints(IList<Vector3> list, out int firstIndex, out int secondIndex)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xBCA714", Offset = "0xBCA714", VA = "0xBCA714")]
	private static void WeldPoints(IList<Vector3> list, int targetCount)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xBCB070", Offset = "0xBCB070", VA = "0xBCB070")]
	private Vector3 GetNormal(Vector3 a, Vector3 b, Vector3 c)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xBCB1A0", Offset = "0xBCB1A0", VA = "0xBCB1A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xBCB6E4", Offset = "0xBCB6E4", VA = "0xBCB6E4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xBCBACC", Offset = "0xBCBACC", VA = "0xBCBACC")]
	private void OnTriggerEnter(Collider collidedObj)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xBCBB74", Offset = "0xBCBB74", VA = "0xBCBB74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xBCBB7C", Offset = "0xBCBB7C", VA = "0xBCBB7C")]
	public Buoyancy()
	{
	}
}
[Token(Token = "0x2000057")]
[ExecuteInEditMode]
public class DepthFix : MonoBehaviour
{
	[Token(Token = "0x6000345")]
	[Address(RVA = "0xB15CAC", Offset = "0xB15CAC", VA = "0xB15CAC")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB15CEC", Offset = "0xB15CEC", VA = "0xB15CEC")]
	public DepthFix()
	{
	}
}
[Token(Token = "0x2000058")]
public class MoveCameraToCharacter : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xAB3FBC", Offset = "0xAB3FBC", VA = "0xAB3FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xAB4014", Offset = "0xAB4014", VA = "0xAB4014")]
	public MoveCameraToCharacter()
	{
	}
}
[Token(Token = "0x2000059")]
public class MoveWaterToCamera : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CurrenCamera;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xAB4964", Offset = "0xAB4964", VA = "0xAB4964")]
	private void Update()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xAB4AEC", Offset = "0xAB4AEC", VA = "0xAB4AEC")]
	public MoveWaterToCamera()
	{
	}
}
[Token(Token = "0x200005A")]
[ExecuteInEditMode]
public class ProjectorMatrix : MonoBehaviour
{
	[Token(Token = "0x2000568")]
	public enum matrixName
	{
		[Token(Token = "0x4002908")]
		_projectiveMatrWaves,
		[Token(Token = "0x4002909")]
		_projectiveMatrCausticScale
	}

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public matrixName GlobalMatrixName;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ProjectiveTranform;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UpdateOnStart;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool CanUpdate;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB2BA00", Offset = "0xB2BA00", VA = "0xB2BA00")]
	private void Start()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xB2BB74", Offset = "0xB2BB74", VA = "0xB2BB74")]
	private void Update()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xB2BA40", Offset = "0xB2BA40", VA = "0xB2BA40")]
	public void UpdateMatrix()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xB2BB84", Offset = "0xB2BB84", VA = "0xB2BB84")]
	public ProjectorMatrix()
	{
	}
}
[Token(Token = "0x200005B")]
public class ReflectionCamera : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask CullingMask;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool HDR;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F284", Offset = "0x85F284")]
	public float TextureScale;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture reflectionTexture;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject goCam;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera reflectionCamera;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 oldPos;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ClipPlaneOffset;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xFD1584", Offset = "0xFD1584", VA = "0xFD1584")]
	private void UpdateCamera(Camera cam)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xFD1A70", Offset = "0xFD1A70", VA = "0xFD1A70")]
	private void CheckCamera(Camera cam)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xFD2470", Offset = "0xFD2470", VA = "0xFD2470")]
	private static float Sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xFD2218", Offset = "0xFD2218", VA = "0xFD2218")]
	private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xFD1D54", Offset = "0xFD1D54", VA = "0xFD1D54")]
	private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xFD200C", Offset = "0xFD200C", VA = "0xFD200C")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000355")]
	private void SafeDestroy<T>(T component) where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xFD2490", Offset = "0xFD2490", VA = "0xFD2490")]
	private void ClearCamera()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xFD2570", Offset = "0xFD2570", VA = "0xFD2570")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xFD259C", Offset = "0xFD259C", VA = "0xFD259C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xFD25E8", Offset = "0xFD25E8", VA = "0xFD25E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xFD2640", Offset = "0xFD2640", VA = "0xFD2640")]
	public ReflectionCamera()
	{
	}
}
[Token(Token = "0x200005C")]
public class RippleCreator : MonoBehaviour
{
	[Token(Token = "0x2000569")]
	private class ReversedRipple
	{
		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Velocity;

		[Token(Token = "0x600283C")]
		[Address(RVA = "0xAF9F98", Offset = "0xAF9F98", VA = "0xAF9F98")]
		public ReversedRipple()
		{
		}
	}

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsReversedRipple;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RippleStrenght;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxVelocity;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RandomRipplesInterval;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float reversedRippleDelay;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SplashEffect;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SplashEffectMoved;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource SplashAudioSource;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int fadeInVelocityLimit;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int fadeInVelocity;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaterRipples waterRipples;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 oldPos;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentVelocity;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform t;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Queue<ReversedRipple> reversedVelocityQueue;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float triggeredTime;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool canUpdate;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float randomRipplesCurrentTime;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool canInstantiateRandomRipple;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject splashMovedInstance;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ParticleSystem splashParticleSystem;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float splashSizeMultiplier;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xAF9B70", Offset = "0xAF9B70", VA = "0xAF9B70")]
	private void Start()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xAF9BE8", Offset = "0xAF9BE8", VA = "0xAF9BE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xAFA24C", Offset = "0xAFA24C", VA = "0xAFA24C")]
	private void OnTriggerEnter(Collider collidedObj)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xAF9FA0", Offset = "0xAF9FA0", VA = "0xAF9FA0")]
	private void UpdateMovedSplash()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xAFA468", Offset = "0xAFA468", VA = "0xAFA468")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xAFA524", Offset = "0xAFA524", VA = "0xAFA524")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xAFA5D8", Offset = "0xAFA5D8", VA = "0xAFA5D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xAFA68C", Offset = "0xAFA68C", VA = "0xAFA68C")]
	public RippleCreator()
	{
	}
}
[Token(Token = "0x200005D")]
public class TextureScale
{
	[Token(Token = "0x200056A")]
	public class ThreadData
	{
		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x600283D")]
		[Address(RVA = "0xAE4B54", Offset = "0xAE4B54", VA = "0xAE4B54")]
		public ThreadData(int s, int e)
		{
		}
	}

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color[] texColors;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color[] newColors;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int w;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float ratioX;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float ratioY;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int w2;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int finishCount;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xAE4974", Offset = "0xAE4974", VA = "0xAE4974")]
	public static void Point(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xAE4B4C", Offset = "0xAE4B4C", VA = "0xAE4B4C")]
	public static void Bilinear(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xAE497C", Offset = "0xAE497C", VA = "0xAE497C")]
	private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xAE4B8C", Offset = "0xAE4B8C", VA = "0xAE4B8C")]
	public static void BilinearScale(object obj)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xAE4E94", Offset = "0xAE4E94", VA = "0xAE4E94")]
	public static void PointScale(object obj)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xAE5000", Offset = "0xAE5000", VA = "0xAE5000")]
	private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
	{
		return default(Color);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xAE5064", Offset = "0xAE5064", VA = "0xAE5064")]
	public TextureScale()
	{
	}
}
[Token(Token = "0x200005E")]
public class Underwater : MonoBehaviour
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float UnderwaterLevel;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color FogColor;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FogDensity;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FogMode FogMode;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool defaultFog;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color defaultFogColor;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float defaultFogDensity;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private FogMode defaultFogMod;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material defaultSkybox;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xAA61C8", Offset = "0xAA61C8", VA = "0xAA61C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xAA621C", Offset = "0xAA621C", VA = "0xAA621C")]
	private void Update()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xAA62D8", Offset = "0xAA62D8", VA = "0xAA62D8")]
	public Underwater()
	{
	}
}
[Token(Token = "0x200005F")]
public class UnderwaterPostEffects : MonoBehaviour
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color FogColor;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FogDensity;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool UseSunShafts;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ShuftsIntensity;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public WFX_SunShafts.ShaftsScreenBlendMode SunShuftsScreenBlend;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 SunShaftTargetPosition;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera cam;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WFX_SunShafts SunShafts;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xAA6348", Offset = "0xAA6348", VA = "0xAA6348")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xAA6514", Offset = "0xAA6514", VA = "0xAA6514")]
	private void Update()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xAA6624", Offset = "0xAA6624", VA = "0xAA6624")]
	public UnderwaterPostEffects()
	{
	}
}
[Token(Token = "0x2000060")]
public class WFX_SunShafts : MonoBehaviour
{
	[Token(Token = "0x200056B")]
	public enum SunShaftsResolution
	{
		[Token(Token = "0x400290F")]
		Low,
		[Token(Token = "0x4002910")]
		Normal,
		[Token(Token = "0x4002911")]
		High
	}

	[Token(Token = "0x200056C")]
	public enum ShaftsScreenBlendMode
	{
		[Token(Token = "0x4002913")]
		Screen,
		[Token(Token = "0x4002914")]
		Add
	}

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SunShaftsResolution resolution;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ShaftsScreenBlendMode screenBlendMode;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform sunTransform;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int radialBlurIterations;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color sunColor;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color sunThreshold;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float sunShaftBlurRadius;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float sunShaftIntensity;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxRadius;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useDepthTexture;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Shader sunShaftsShader;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material sunShaftsMaterial;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader simpleClearShader;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material simpleClearMaterial;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool supportHDRTextures;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool supportDX11;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool isSupported;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Material> createdMaterials;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xC74104", Offset = "0xC74104", VA = "0xC74104")]
	protected void NotSupported()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xC74130", Offset = "0xC74130", VA = "0xC74130")]
	private bool CheckSupport(bool needDepth)
	{
		return default(bool);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xC74238", Offset = "0xC74238", VA = "0xC74238")]
	protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xC745B4", Offset = "0xC745B4", VA = "0xC745B4")]
	protected void ReportAutoDisable()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xC7465C", Offset = "0xC7465C", VA = "0xC7465C")]
	public bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xC7471C", Offset = "0xC7471C", VA = "0xC7471C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xC74EF4", Offset = "0xC74EF4", VA = "0xC74EF4")]
	public WFX_SunShafts()
	{
	}
}
[Token(Token = "0x2000061")]
public class WaterRipples : MonoBehaviour
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F2A0", Offset = "0x85F2A0")]
	public int UpdateFPS;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool Multithreading;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int DisplacementResolution;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Damping;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F2BC", Offset = "0x85F2BC")]
	public float Speed;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool UseSmoothWaves;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool UseProjectedWaves;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D CutOutTexture;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform t;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float textureColorMultiplier;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D displacementTexture;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2[,] waveAcceleration;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color[] col;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] wavePoints;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 scaleBounds;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float inversedDamping;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] cutOutTextureGray;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool cutOutTextureInitialized;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Thread thread;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool canUpdate;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private double threadDeltaTime;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private DateTime oldDateTime;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector2 movedObjPos;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector2 projectorPosition;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector4 _GAmplitude;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector4 _GFrequency;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector4 _GSteepness;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector4 _GSpeed;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector4 _GDirectionAB;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector4 _GDirectionCD;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xC74FE0", Offset = "0xC74FE0", VA = "0xC74FE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xC755BC", Offset = "0xC755BC", VA = "0xC755BC")]
	public Vector3 GetOffsetByPosition(Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xC75C6C", Offset = "0xC75C6C", VA = "0xC75C6C")]
	public void CreateRippleByPosition(Vector3 position, float velocity)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xC7524C", Offset = "0xC7524C", VA = "0xC7524C")]
	private void InitializeRipple()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xC760D8", Offset = "0xC760D8", VA = "0xC760D8")]
	private Texture2D ScaleTexture(Texture2D source, int targetWidth, int targetHeight)
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xC761D4", Offset = "0xC761D4", VA = "0xC761D4")]
	private void UpdateRipples()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xC76930", Offset = "0xC76930", VA = "0xC76930")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xC76984", Offset = "0xC76984", VA = "0xC76984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xC769F8", Offset = "0xC769F8", VA = "0xC769F8")]
	private void UpdateProjector()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xC77184", Offset = "0xC77184", VA = "0xC77184")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xC7718C", Offset = "0xC7718C", VA = "0xC7718C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xC762FC", Offset = "0xC762FC", VA = "0xC762FC")]
	private void RippleTextureRecalculate()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xC75D24", Offset = "0xC75D24", VA = "0xC75D24")]
	private void SetRippleTexture(int x, int y, float strength)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xC75BBC", Offset = "0xC75BBC", VA = "0xC75BBC")]
	private float GetTextureHeightByPosition(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xC756D0", Offset = "0xC756D0", VA = "0xC756D0")]
	private Vector3 GerstnerOffset4(Vector2 xzVtx, Vector4 _GSteepness, Vector4 _GAmplitude, Vector4 _GFrequency, Vector4 _GSpeed, Vector4 _GDirectionAB, Vector4 _GDirectionCD)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xC771E4", Offset = "0xC771E4", VA = "0xC771E4")]
	public WaterRipples()
	{
	}
}
[Token(Token = "0x2000062")]
[ExecuteInEditMode]
public class Water_DistortionAndBloom : MonoBehaviour
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85F2D8", Offset = "0x85F2D8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F2D8", Offset = "0x85F2D8")]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask CullingMask;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture source;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture depth;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture destination;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int previuosFrameWidth;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int previuosFrameHeight;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float previousScale;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Camera addCamera;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject tempGO;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool HDRSupported;

	[Token(Token = "0x400036A")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xC773B4", Offset = "0xC773B4", VA = "0xC773B4")]
	public static Material CheckShaderAndCreateMaterial(Shader s)
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xC77480", Offset = "0xC77480", VA = "0xC77480")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xC7754C", Offset = "0xC7754C", VA = "0xC7754C")]
	private void Start()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xC77630", Offset = "0xC77630", VA = "0xC77630")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xC77550", Offset = "0xC77550", VA = "0xC77550")]
	private void InitializeRenderTarget()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xC77780", Offset = "0xC77780", VA = "0xC77780")]
	private void GrabImage()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xC77998", Offset = "0xC77998", VA = "0xC77998")]
	public Water_DistortionAndBloom()
	{
	}
}
[Token(Token = "0x2000063")]
public class LookAt : MonoBehaviour
{
	[Token(Token = "0x600038F")]
	[Address(RVA = "0xA15010", Offset = "0xA15010", VA = "0xA15010")]
	private void Start()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xA15014", Offset = "0xA15014", VA = "0xA15014")]
	private void Update()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xA15060", Offset = "0xA15060", VA = "0xA15060")]
	public LookAt()
	{
	}
}
[Token(Token = "0x2000064")]
public class AnimationSpeedDebuff : MonoBehaviour
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve AnimationSpeenOnTime;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxTime;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator myAnimator;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform root;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float oldSpeed;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float time;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xA5CA14", Offset = "0xA5CA14", VA = "0xA5CA14")]
	private void GetAnimatorOnParent(Transform t)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xA5CB3C", Offset = "0xA5CB3C", VA = "0xA5CB3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xA5CC00", Offset = "0xA5CC00", VA = "0xA5CC00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xA5CD18", Offset = "0xA5CD18", VA = "0xA5CD18")]
	public AnimationSpeedDebuff()
	{
	}
}
[Token(Token = "0x2000065")]
public class LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool flicker;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float flickerIntensity;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float baseIntensity;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light lightComp;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xA0DA80", Offset = "0xA0DA80", VA = "0xA0DA80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xA0DAF8", Offset = "0xA0DAF8", VA = "0xA0DAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xA0DBD4", Offset = "0xA0DBD4", VA = "0xA0DBD4")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x2000066")]
public class Example_Runtime : MonoBehaviour
{
	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF80", Offset = "0x85CF80")]
	private sealed class <PaintExampleCubes>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Example_Runtime <>4__this;

		[Token(Token = "0x17000367")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002841")]
			[Address(RVA = "0x9F864C", Offset = "0x9F864C", VA = "0x9F864C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002843")]
			[Address(RVA = "0x9F86B4", Offset = "0x9F86B4", VA = "0x9F86B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x9F8424", Offset = "0x9F8424", VA = "0x9F8424")]
		[DebuggerHidden]
		public <PaintExampleCubes>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x9F84B0", Offset = "0x9F84B0", VA = "0x9F84B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x9F84B4", Offset = "0x9F84B4", VA = "0x9F84B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x9F8654", Offset = "0x9F8654", VA = "0x9F8654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RuntimeAPI mb;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ray paintRay;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RaycastHit hit;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] exampleCubes;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x9F816C", Offset = "0x9F816C", VA = "0x9F816C")]
	private void Start()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x9F83B4", Offset = "0x9F83B4", VA = "0x9F83B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D2BC", Offset = "0x86D2BC")]
	private IEnumerator PaintExampleCubes()
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x9F8450", Offset = "0x9F8450", VA = "0x9F8450")]
	public Example_Runtime()
	{
	}
}
[Token(Token = "0x2000067")]
public class MoveToCamera : MonoBehaviour
{
	[Token(Token = "0x600039C")]
	[Address(RVA = "0xAB4954", Offset = "0xAB4954", VA = "0xAB4954")]
	private void Start()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xAB4958", Offset = "0xAB4958", VA = "0xAB4958")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xAB495C", Offset = "0xAB495C", VA = "0xAB495C")]
	public MoveToCamera()
	{
	}
}
[Token(Token = "0x2000068")]
public class NewTutorialTarget : MonoBehaviour
{
	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject InnerOrb;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TranspartentOrb;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xABA218", Offset = "0xABA218", VA = "0xABA218")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xABA21C", Offset = "0xABA21C", VA = "0xABA21C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xABA220", Offset = "0xABA220", VA = "0xABA220")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xABA224", Offset = "0xABA224", VA = "0xABA224")]
	public NewTutorialTarget()
	{
	}
}
[Token(Token = "0x2000069")]
public class NonDraggableScrollRect : ScrollRect
{
	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xABA39C", Offset = "0xABA39C", VA = "0xABA39C", Slot = "44")]
	public override void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xABA3A0", Offset = "0xABA3A0", VA = "0xABA3A0", Slot = "46")]
	public override void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xABA3A4", Offset = "0xABA3A4", VA = "0xABA3A4", Slot = "45")]
	public override void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xABA3A8", Offset = "0xABA3A8", VA = "0xABA3A8")]
	public NonDraggableScrollRect()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8593E8", Offset = "0x8593E8")]
public class FastList<T>
{
	[Token(Token = "0x200056E")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CF90", Offset = "0x85CF90")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000369")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600284B")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700036A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600284D")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002848")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002849")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600284A")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600284C")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x1700007C")]
	public int Count
	{
		[Token(Token = "0x60003A9")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003AA")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public T Item
	{
		[Token(Token = "0x60003AB")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60003AC")]
		set
		{
		}
	}

	[Token(Token = "0x60003A7")]
	public FastList()
	{
	}

	[Token(Token = "0x60003A8")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60003AD")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60003AE")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60003AF")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60003B0")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60003B1")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B2")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60003B3")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B4")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60003B5")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60003B7")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60003B8")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60003BA")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60003BB")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D320", Offset = "0x86D320")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60003BC")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60003BD")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60003BE")]
	private void Trim()
	{
	}

	[Token(Token = "0x60003BF")]
	public void Clear()
	{
	}

	[Token(Token = "0x60003C0")]
	public void Release()
	{
	}
}
[Token(Token = "0x200006B")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xB868A0", Offset = "0xB868A0", VA = "0xB868A0")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200006C")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xB86874", Offset = "0xB86874", VA = "0xB86874")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200006D")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xFAC010", Offset = "0xFAC010", VA = "0xFAC010")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xFAC17C", Offset = "0xFAC17C", VA = "0xFAC17C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xFAC520", Offset = "0xFAC520", VA = "0xFAC520")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xFAC6C8", Offset = "0xFAC6C8", VA = "0xFAC6C8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xFAC6F4", Offset = "0xFAC6F4", VA = "0xFAC6F4")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200006E")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB29B98", Offset = "0xB29B98", VA = "0xB29B98")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xB29C24", Offset = "0xB29C24", VA = "0xB29C24")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xB29D90", Offset = "0xB29D90", VA = "0xB29D90")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200006F")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700007E")]
	public bool IsVisible
	{
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xA07938", Offset = "0xA07938", VA = "0xA07938")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xA07940", Offset = "0xA07940", VA = "0xA07940")]
		set
		{
		}
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xA07A68", Offset = "0xA07A68", VA = "0xA07A68")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xA07C84", Offset = "0xA07C84", VA = "0xA07C84")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xA07C8C", Offset = "0xA07C8C", VA = "0xA07C8C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000070")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000570")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xFD35C0", Offset = "0xFD35C0", VA = "0xFD35C0")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000571")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86C850", Offset = "0x86C850")]
		public float FakeLatencyMax;

		[Token(Token = "0x400291F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86C868", Offset = "0x86C868")]
		public float FakeLatencyMin;

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86C880", Offset = "0x86C880")]
		public float LatencyWeight;

		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86C898", Offset = "0x86C898")]
		public int MaxSamples;

		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600284F")]
		[Address(RVA = "0xFD35C8", Offset = "0xFD35C8", VA = "0xFD35C8")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0xFD3760", Offset = "0xFD3760", VA = "0xFD3760")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xFD2C40", Offset = "0xFD2C40", VA = "0xFD2C40")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xFD2D64", Offset = "0xFD2D64", VA = "0xFD2D64")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xFD30D8", Offset = "0xFD30D8", VA = "0xFD30D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xFD303C", Offset = "0xFD303C", VA = "0xFD303C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xFD3334", Offset = "0xFD3334", VA = "0xFD3334")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xFD36D4", Offset = "0xFD36D4", VA = "0xFD36D4")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000071")]
public class P2PManager
{
	[Token(Token = "0x2000572")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4002926")]
		Update = 1
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xFAD668", Offset = "0xFAD668", VA = "0xFAD668")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xFAD728", Offset = "0xFAD728", VA = "0xFAD728")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xFAD80C", Offset = "0xFAD80C", VA = "0xFAD80C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xFAD890", Offset = "0xFAD890", VA = "0xFAD890")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xFAD9EC", Offset = "0xFAD9EC", VA = "0xFAD9EC")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xFADC9C", Offset = "0xFADC9C", VA = "0xFADC9C")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xFAE090", Offset = "0xFAE090", VA = "0xFAE090")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xFAE334", Offset = "0xFAE334", VA = "0xFAE334")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xFADE60", Offset = "0xFADE60", VA = "0xFADE60")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xFAE264", Offset = "0xFAE264", VA = "0xFAE264")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xFADF48", Offset = "0xFADF48", VA = "0xFADF48")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xFAE54C", Offset = "0xFAE54C", VA = "0xFAE54C")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xFADEA8", Offset = "0xFADEA8", VA = "0xFADEA8")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xFAE2A8", Offset = "0xFAE2A8", VA = "0xFAE2A8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xFADFF0", Offset = "0xFADFF0", VA = "0xFADFF0")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xFAE5D8", Offset = "0xFAE5D8", VA = "0xFAE5D8")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000072")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xB50ED8", Offset = "0xB50ED8", VA = "0xB50ED8", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xB50F14", Offset = "0xB50F14", VA = "0xB50F14", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xB50F4C", Offset = "0xB50F4C", VA = "0xB50F4C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xB50F74", Offset = "0xB50F74", VA = "0xB50F74")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xB51114", Offset = "0xB51114", VA = "0xB51114")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xB51194", Offset = "0xB51194", VA = "0xB51194")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xB511E8", Offset = "0xB511E8", VA = "0xB511E8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000073")]
public class RemotePlayer
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xFD37E8", Offset = "0xFD37E8", VA = "0xFD37E8")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000074")]
public class RoomManager
{
	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xAFA6C0", Offset = "0xAFA6C0", VA = "0xAFA6C0")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xAFA78C", Offset = "0xAFA78C", VA = "0xAFA78C")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xAFA8EC", Offset = "0xAFA8EC", VA = "0xAFA8EC")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xAFA9FC", Offset = "0xAFA9FC", VA = "0xAFA9FC")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xAFAAB0", Offset = "0xAFAAB0", VA = "0xAFAAB0")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xAFABE4", Offset = "0xAFABE4", VA = "0xAFABE4")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xAFA91C", Offset = "0xAFA91C", VA = "0xAFA91C")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xAFAC70", Offset = "0xAFAC70", VA = "0xAFAC70")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xAFB31C", Offset = "0xAFB31C", VA = "0xAFB31C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xAFB5EC", Offset = "0xAFB5EC", VA = "0xAFB5EC")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xAFAF10", Offset = "0xAFAF10", VA = "0xAFAF10")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000075")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000573")]
	public enum State
	{
		[Token(Token = "0x4002928")]
		INITIALIZING,
		[Token(Token = "0x4002929")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400292A")]
		CREATING_A_ROOM,
		[Token(Token = "0x400292B")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x400292C")]
		JOINING_A_ROOM,
		[Token(Token = "0x400292D")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x400292E")]
		LEAVING_A_ROOM,
		[Token(Token = "0x400292F")]
		SHUTDOWN
	}

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700007F")]
	public static State CurrentState
	{
		[Token(Token = "0x6000405")]
		[Address(RVA = "0xE5CB8C", Offset = "0xE5CB8C", VA = "0xE5CB8C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000080")]
	public static ulong MyID
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0xE5CC00", Offset = "0xE5CC00", VA = "0xE5CC00")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000081")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0xE5CCD8", Offset = "0xE5CCD8", VA = "0xE5CCD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xE5AE18", Offset = "0xE5AE18", VA = "0xE5AE18", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xE5B1A4", Offset = "0xE5B1A4", VA = "0xE5B1A4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xE5B880", Offset = "0xE5B880", VA = "0xE5B880")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xE5BB48", Offset = "0xE5BB48", VA = "0xE5BB48", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xE5BB4C", Offset = "0xE5BB4C", VA = "0xE5BB4C")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xE5BC40", Offset = "0xE5BC40", VA = "0xE5BC40")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xE5C334", Offset = "0xE5C334", VA = "0xE5C334")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xE5C800", Offset = "0xE5C800", VA = "0xE5C800")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xE5C9CC", Offset = "0xE5C9CC", VA = "0xE5C9CC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xE5CB1C", Offset = "0xE5CB1C", VA = "0xE5CB1C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xE5B4A4", Offset = "0xE5B4A4", VA = "0xE5B4A4")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xE5B9DC", Offset = "0xE5B9DC", VA = "0xE5B9DC")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xE5B558", Offset = "0xE5B558", VA = "0xE5B558")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xE5CDEC", Offset = "0xE5CDEC", VA = "0xE5CDEC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xE5CF6C", Offset = "0xE5CF6C", VA = "0xE5CF6C")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xE5D054", Offset = "0xE5D054", VA = "0xE5D054")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xE5D178", Offset = "0xE5D178", VA = "0xE5D178")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xE5D248", Offset = "0xE5D248", VA = "0xE5D248")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xE5BA8C", Offset = "0xE5BA8C", VA = "0xE5BA8C")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xE5D674", Offset = "0xE5D674", VA = "0xE5D674")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xE5D700", Offset = "0xE5D700", VA = "0xE5D700")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xE5D498", Offset = "0xE5D498", VA = "0xE5D498")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xE5D8D4", Offset = "0xE5D8D4", VA = "0xE5D8D4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xE5AD90", Offset = "0xE5AD90", VA = "0xE5AD90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x86D384", Offset = "0x86D384")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xE5DA10", Offset = "0xE5DA10", VA = "0xE5DA10")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xE5DAD8", Offset = "0xE5DAD8", VA = "0xE5DAD8")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000076")]
public class VoipManager
{
	[Token(Token = "0x6000417")]
	[Address(RVA = "0xC73AD0", Offset = "0xC73AD0", VA = "0xC73AD0")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xC73B90", Offset = "0xC73B90", VA = "0xC73B90")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xC73C74", Offset = "0xC73C74", VA = "0xC73C74")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xC73CF8", Offset = "0xC73CF8", VA = "0xC73CF8")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xC73E54", Offset = "0xC73E54", VA = "0xC73E54")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000077")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xA075C4", Offset = "0xA075C4", VA = "0xA075C4")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xA07634", Offset = "0xA07634", VA = "0xA07634")]
	private void Start()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xA077B0", Offset = "0xA077B0", VA = "0xA077B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xA07814", Offset = "0xA07814", VA = "0xA07814")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xA07670", Offset = "0xA07670", VA = "0xA07670")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xA078D0", Offset = "0xA078D0", VA = "0xA078D0")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xA07930", Offset = "0xA07930", VA = "0xA07930")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000078")]
public class AvatarLayer
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xBB572C", Offset = "0xBB572C", VA = "0xBB572C")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000079")]
public class PacketRecordSettings
{
	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xBACCB0", Offset = "0xBACCB0", VA = "0xBACCB0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000574")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6002851")]
		[Address(RVA = "0xF9EB2C", Offset = "0xF9EB2C", VA = "0xF9EB2C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000575")]
	public enum HandType
	{
		[Token(Token = "0x4002932")]
		Right,
		[Token(Token = "0x4002933")]
		Left,
		[Token(Token = "0x4002934")]
		Max
	}

	[Token(Token = "0x2000576")]
	public enum HandJoint
	{
		[Token(Token = "0x4002936")]
		HandBase,
		[Token(Token = "0x4002937")]
		IndexBase,
		[Token(Token = "0x4002938")]
		IndexTip,
		[Token(Token = "0x4002939")]
		ThumbBase,
		[Token(Token = "0x400293A")]
		ThumbTip,
		[Token(Token = "0x400293B")]
		Max
	}

	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CFA0", Offset = "0x85CFA0")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700036B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002855")]
			[Address(RVA = "0xFA0EF0", Offset = "0xFA0EF0", VA = "0xFA0EF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002857")]
			[Address(RVA = "0xFA0F58", Offset = "0xFA0F58", VA = "0xFA0F58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0xFA0924", Offset = "0xFA0924", VA = "0xFA0924")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0xFA0D60", Offset = "0xFA0D60", VA = "0xFA0D60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0xFA0D64", Offset = "0xFA0D64", VA = "0xFA0D64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0xFA0EF8", Offset = "0xFA0EF8", VA = "0xFA0EF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85F340", Offset = "0x85F340")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85F378", Offset = "0x85F378")]
	public bool EnableBody;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85F3B0", Offset = "0x85F3B0")]
	public bool RecordPackets;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85F3E8", Offset = "0x85F3E8")]
	public bool StartWithControllers;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85F420", Offset = "0x85F420")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F420", Offset = "0x85F420")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F490", Offset = "0x85F490")]
	private bool CombineMeshes;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F4C8", Offset = "0x85F4C8")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85F500", Offset = "0x85F500")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85F538", Offset = "0x85F538")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F570", Offset = "0x85F570")]
	public bool EnableLaughter;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000407")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000409")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400040A")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400040B")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400040C")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400040D")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xF9A608", Offset = "0xF9A608", VA = "0xF9A608")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xF9A970", Offset = "0xF9A970", VA = "0xF9A970")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xF9A9FC", Offset = "0xF9A9FC", VA = "0xF9A9FC")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xF9AA68", Offset = "0xF9AA68", VA = "0xF9AA68")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xF9AB90", Offset = "0xF9AB90", VA = "0xF9AB90")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xF9ADB4", Offset = "0xF9ADB4", VA = "0xF9ADB4")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xF9AFC0", Offset = "0xF9AFC0", VA = "0xF9AFC0")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xF9B548", Offset = "0xF9B548", VA = "0xF9B548")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xF9B610", Offset = "0xF9B610", VA = "0xF9B610")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xF9B694", Offset = "0xF9B694", VA = "0xF9B694")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xF9B77C", Offset = "0xF9B77C", VA = "0xF9B77C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xF9B808", Offset = "0xF9B808", VA = "0xF9B808")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xF9B924", Offset = "0xF9B924", VA = "0xF9B924")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xF9B984", Offset = "0xF9B984", VA = "0xF9B984")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000433")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xF9BE08", Offset = "0xF9BE08", VA = "0xF9BE08")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xF9C168", Offset = "0xF9C168", VA = "0xF9C168")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xF9C2CC", Offset = "0xF9C2CC", VA = "0xF9C2CC")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xF9C594", Offset = "0xF9C594", VA = "0xF9C594")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xF9C680", Offset = "0xF9C680", VA = "0xF9C680")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xF9D07C", Offset = "0xF9D07C", VA = "0xF9D07C")]
	private void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xF9D4E0", Offset = "0xF9D4E0", VA = "0xF9D4E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xF9DF54", Offset = "0xF9DF54", VA = "0xF9DF54")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xF9DFA8", Offset = "0xF9DFA8", VA = "0xF9DFA8")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xF9C8E4", Offset = "0xF9C8E4", VA = "0xF9C8E4")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xF9C980", Offset = "0xF9C980", VA = "0xF9C980")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xF9DFD8", Offset = "0xF9DFD8", VA = "0xF9DFD8")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xF9D848", Offset = "0xF9D848", VA = "0xF9D848")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xF9E21C", Offset = "0xF9E21C", VA = "0xF9E21C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xF9E040", Offset = "0xF9E040", VA = "0xF9E040")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xF9EC6C", Offset = "0xF9EC6C", VA = "0xF9EC6C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xF9F070", Offset = "0xF9F070", VA = "0xF9F070")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xF9F3F8", Offset = "0xF9F3F8", VA = "0xF9F3F8")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xF9F538", Offset = "0xF9F538", VA = "0xF9F538")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xF9F6F0", Offset = "0xF9F6F0", VA = "0xF9F6F0")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xF9DA50", Offset = "0xF9DA50", VA = "0xF9DA50")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xF9F7C8", Offset = "0xF9F7C8", VA = "0xF9F7C8")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xF9D858", Offset = "0xF9D858", VA = "0xF9D858")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xF9F8BC", Offset = "0xF9F8BC", VA = "0xF9F8BC")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xF9FE68", Offset = "0xF9FE68", VA = "0xF9FE68")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xFA0328", Offset = "0xFA0328", VA = "0xFA0328")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xFA03A0", Offset = "0xFA03A0", VA = "0xFA03A0")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xFA041C", Offset = "0xFA041C", VA = "0xFA041C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xF9DDE8", Offset = "0xF9DDE8", VA = "0xF9DDE8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xF9F978", Offset = "0xF9F978", VA = "0xF9F978")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xFA08B4", Offset = "0xFA08B4", VA = "0xFA08B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D3E8", Offset = "0x86D3E8")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xFA0950", Offset = "0xFA0950", VA = "0xFA0950")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xFA0758", Offset = "0xFA0758", VA = "0xFA0758")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xFA0A18", Offset = "0xFA0A18", VA = "0xFA0A18")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xFA0B04", Offset = "0xFA0B04", VA = "0xFA0B04")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xFA04EC", Offset = "0xFA04EC", VA = "0xFA04EC")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xFA0BF0", Offset = "0xFA0BF0", VA = "0xFA0BF0")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xFA0F60", Offset = "0xFA0F60", VA = "0xFA0F60")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200007C")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xFA1010", Offset = "0xFA1010", VA = "0xFA1010")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xFA22F0", Offset = "0xFA22F0", VA = "0xFA22F0")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xFA1E94", Offset = "0xFA1E94", VA = "0xFA1E94")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xFA1C38", Offset = "0xFA1C38", VA = "0xFA1C38")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xFA1D08", Offset = "0xFA1D08", VA = "0xFA1D08")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xFA2554", Offset = "0xFA2554", VA = "0xFA2554")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200007D")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400042A")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xFA2AD4", Offset = "0xFA2AD4", VA = "0xFA2AD4")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200007E")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xFA2D3C", Offset = "0xFA2D3C", VA = "0xFA2D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xFA3134", Offset = "0xFA3134", VA = "0xFA3134")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200007F")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xF9F29C", Offset = "0xF9F29C", VA = "0xF9F29C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xFA3230", Offset = "0xFA3230", VA = "0xFA3230")]
	private void Update()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xFA334C", Offset = "0xFA334C", VA = "0xFA334C")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000080")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xFA33B0", Offset = "0xFA33B0", VA = "0xFA33B0")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xFA2E58", Offset = "0xFA2E58", VA = "0xFA2E58")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xFA3994", Offset = "0xFA3994", VA = "0xFA3994")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xFA39F4", Offset = "0xFA39F4", VA = "0xFA39F4")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xFA41D8", Offset = "0xFA41D8", VA = "0xFA41D8")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xFA3198", Offset = "0xFA3198", VA = "0xFA3198")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000081")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000578")]
	public enum PacketMode
	{
		[Token(Token = "0x4002940")]
		SDK,
		[Token(Token = "0x4002941")]
		Unity
	}

	[Token(Token = "0x2000579")]
	public struct ControllerPose
	{
		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6002858")]
		[Address(RVA = "0xFA5378", Offset = "0xFA5378", VA = "0xFA5378")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200057A")]
	public struct PoseFrame
	{
		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6002859")]
		[Address(RVA = "0xF9E774", Offset = "0xF9E774", VA = "0xF9E774")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xFA52C4", Offset = "0xFA52C4", VA = "0xFA52C4")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600046E")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xFA52D4", Offset = "0xFA52D4", VA = "0xFA52D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xF9CA1C", Offset = "0xF9CA1C", VA = "0xF9CA1C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xFA5360", Offset = "0xFA5360", VA = "0xFA5360")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xFA5368", Offset = "0xFA5368", VA = "0xFA5368")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000082")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xFA54D4", Offset = "0xFA54D4", VA = "0xFA54D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xFA5630", Offset = "0xFA5630", VA = "0xFA5630")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000083")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xFA569C", Offset = "0xFA569C", VA = "0xFA569C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xFA5808", Offset = "0xFA5808", VA = "0xFA5808")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xFA5BAC", Offset = "0xFA5BAC", VA = "0xFA5BAC")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xFA5DC8", Offset = "0xFA5DC8", VA = "0xFA5DC8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xFA5DF4", Offset = "0xFA5DF4", VA = "0xFA5DF4")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000084")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200057B")]
	public enum TextureType
	{
		[Token(Token = "0x4002952")]
		DiffuseTextures,
		[Token(Token = "0x4002953")]
		NormalMaps,
		[Token(Token = "0x4002954")]
		RoughnessMaps,
		[Token(Token = "0x4002955")]
		Count
	}

	[Token(Token = "0x200057C")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200057D")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200057E")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200057F")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x600285A")]
		[Address(RVA = "0xFA8014", Offset = "0xFA8014", VA = "0xFA8014")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CFB0", Offset = "0x85CFB0")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400296B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700036D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600285E")]
			[Address(RVA = "0xFA8924", Offset = "0xFA8924", VA = "0xFA8924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002860")]
			[Address(RVA = "0xFA898C", Offset = "0xFA898C", VA = "0xFA898C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0xFA7E7C", Offset = "0xFA7E7C", VA = "0xFA7E7C")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0xFA82AC", Offset = "0xFA82AC", VA = "0xFA82AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0xFA82B0", Offset = "0xFA82B0", VA = "0xFA82B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0xFA892C", Offset = "0xFA892C", VA = "0xFA892C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400045E")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x400045F")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000460")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000461")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xFA5EA4", Offset = "0xFA5EA4", VA = "0xFA5EA4")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xFA6004", Offset = "0xFA6004", VA = "0xFA6004")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xFA602C", Offset = "0xFA602C", VA = "0xFA602C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xFA6744", Offset = "0xFA6744", VA = "0xFA6744")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xFA69C4", Offset = "0xFA69C4", VA = "0xFA69C4")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xFA60C0", Offset = "0xFA60C0", VA = "0xFA60C0")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xFA6AB4", Offset = "0xFA6AB4", VA = "0xFA6AB4")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xFA64C0", Offset = "0xFA64C0", VA = "0xFA64C0")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xFA6D1C", Offset = "0xFA6D1C", VA = "0xFA6D1C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xFA6F94", Offset = "0xFA6F94", VA = "0xFA6F94")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xFA7090", Offset = "0xFA7090", VA = "0xFA7090")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xFA70C8", Offset = "0xFA70C8", VA = "0xFA70C8")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xFA66C8", Offset = "0xFA66C8", VA = "0xFA66C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D44C", Offset = "0x86D44C")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xFA7EA8", Offset = "0xFA7EA8", VA = "0xFA7EA8")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000085")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000082")]
	public float Duration
	{
		[Token(Token = "0x6000489")]
		[Address(RVA = "0xF9E5B4", Offset = "0xF9E5B4", VA = "0xF9E5B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000083")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xF9E6F0", Offset = "0xF9E6F0", VA = "0xF9E6F0")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xF9EBA8", Offset = "0xF9EBA8", VA = "0xF9EBA8")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xF9E474", Offset = "0xF9E474", VA = "0xF9E474")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xFA8994", Offset = "0xFA8994", VA = "0xFA8994")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xF9E620", Offset = "0xF9E620", VA = "0xF9E620")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xFA8A70", Offset = "0xFA8A70", VA = "0xFA8A70")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xFA8C78", Offset = "0xFA8C78", VA = "0xFA8C78")]
	public static OvrAvatarPacket Read(System.IO.Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xFA8ED0", Offset = "0xFA8ED0", VA = "0xFA8ED0")]
	public void Write(System.IO.Stream stream)
	{
	}
}
[Token(Token = "0x2000086")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000492")]
	[Address(RVA = "0xBC8D4C", Offset = "0xBC8D4C", VA = "0xBC8D4C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xBC8E60", Offset = "0xBC8E60", VA = "0xBC8E60")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xBC900C", Offset = "0xBC900C", VA = "0xBC900C")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xBC8ED0", Offset = "0xBC8ED0", VA = "0xBC8ED0")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xBC8F64", Offset = "0xBC8F64", VA = "0xBC8F64")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000087")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000497")]
	[Address(RVA = "0xBC894C", Offset = "0xBC894C", VA = "0xBC894C")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xBC8CF0", Offset = "0xBC8CF0", VA = "0xBC8CF0")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xBC8AEC", Offset = "0xBC8AEC", VA = "0xBC8AEC")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xBC8B64", Offset = "0xBC8B64", VA = "0xBC8B64")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xBC8C00", Offset = "0xBC8C00", VA = "0xBC8C00")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000088")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000469")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400046A")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xFA90C0", Offset = "0xFA90C0", VA = "0xFA90C0")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xFA914C", Offset = "0xFA914C", VA = "0xFA914C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xFA9168", Offset = "0xFA9168", VA = "0xFA9168")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xFA9314", Offset = "0xFA9314", VA = "0xFA9314")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xFA94BC", Offset = "0xFA94BC", VA = "0xFA94BC")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000089")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xFA953C", Offset = "0xFA953C", VA = "0xFA953C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xFA9620", Offset = "0xFA9620", VA = "0xFA9620")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xFA9814", Offset = "0xFA9814", VA = "0xFA9814")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xFA9BA0", Offset = "0xFA9BA0", VA = "0xFA9BA0")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xFA9C98", Offset = "0xFA9C98", VA = "0xFA9C98")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200008A")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000473")]
	Body = 1,
	[Token(Token = "0x4000474")]
	Hands = 2,
	[Token(Token = "0x4000475")]
	Base = 4,
	[Token(Token = "0x4000476")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000477")]
	Expressive = 0x20,
	[Token(Token = "0x4000478")]
	All = -1
}
[Token(Token = "0x200008B")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400047A")]
	AvatarSpecification,
	[Token(Token = "0x400047B")]
	AssetLoaded,
	[Token(Token = "0x400047C")]
	Count
}
[Token(Token = "0x200008C")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200008D")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200008E")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000482")]
	Mesh,
	[Token(Token = "0x4000483")]
	Texture,
	[Token(Token = "0x4000484")]
	Pose,
	[Token(Token = "0x4000485")]
	Material,
	[Token(Token = "0x4000486")]
	CombinedMesh,
	[Token(Token = "0x4000487")]
	PBSMaterial,
	[Token(Token = "0x4000488")]
	FailedLoad,
	[Token(Token = "0x4000489")]
	Count
}
[Token(Token = "0x200008F")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000090")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000091")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000092")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000093")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000094")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40004BE")]
	RGB24,
	[Token(Token = "0x40004BF")]
	DXT1,
	[Token(Token = "0x40004C0")]
	DXT5,
	[Token(Token = "0x40004C1")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40004C2")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40004C3")]
	Count
}
[Token(Token = "0x2000095")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000096")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40004CB")]
	SkinnedMeshRender,
	[Token(Token = "0x40004CC")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40004CD")]
	ProjectorRender,
	[Token(Token = "0x40004CE")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40004CF")]
	Count
}
[Token(Token = "0x2000097")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40004D1")]
	Unknown,
	[Token(Token = "0x40004D2")]
	Default,
	[Token(Token = "0x40004D3")]
	Verbose,
	[Token(Token = "0x40004D4")]
	Debug,
	[Token(Token = "0x40004D5")]
	Info,
	[Token(Token = "0x40004D6")]
	Warn,
	[Token(Token = "0x40004D7")]
	Error,
	[Token(Token = "0x40004D8")]
	Fatal,
	[Token(Token = "0x40004D9")]
	Silent
}
[Token(Token = "0x2000098")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000099")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40004DE")]
	One = 1,
	[Token(Token = "0x40004DF")]
	Two = 2,
	[Token(Token = "0x40004E0")]
	Three = 4,
	[Token(Token = "0x40004E1")]
	Joystick = 8
}
[Token(Token = "0x200009A")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40004E3")]
	One = 1,
	[Token(Token = "0x40004E4")]
	Two = 2,
	[Token(Token = "0x40004E5")]
	Joystick = 4,
	[Token(Token = "0x40004E6")]
	ThumbRest = 8,
	[Token(Token = "0x40004E7")]
	Index = 0x10,
	[Token(Token = "0x40004E8")]
	Pointing = 0x40,
	[Token(Token = "0x40004E9")]
	ThumbUp = 0x80
}
[Token(Token = "0x200009B")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200009C")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200009D")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200009E")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200009F")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A0")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000A1")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A2")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000A3")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000509")]
	Add,
	[Token(Token = "0x400050A")]
	Multiply,
	[Token(Token = "0x400050B")]
	Count
}
[Token(Token = "0x20000A4")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x400050D")]
	Color,
	[Token(Token = "0x400050E")]
	Texture,
	[Token(Token = "0x400050F")]
	TextureSingleChannel,
	[Token(Token = "0x4000510")]
	Parallax,
	[Token(Token = "0x4000511")]
	Count
}
[Token(Token = "0x20000A5")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000513")]
	None,
	[Token(Token = "0x4000514")]
	Positional,
	[Token(Token = "0x4000515")]
	ViewReflection,
	[Token(Token = "0x4000516")]
	Fresnel,
	[Token(Token = "0x4000517")]
	Pulse,
	[Token(Token = "0x4000518")]
	Count
}
[Token(Token = "0x20000A6")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x400051A")]
	Touch,
	[Token(Token = "0x400051B")]
	Malibu,
	[Token(Token = "0x400051C")]
	Go,
	[Token(Token = "0x400051D")]
	Quest,
	[Token(Token = "0x400051E")]
	Count
}
[Token(Token = "0x20000A7")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000520")]
	Lowest = 1,
	[Token(Token = "0x4000521")]
	Medium = 3,
	[Token(Token = "0x4000522")]
	Highest = 5
}
[Token(Token = "0x20000A8")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000524")]
	Unknown = -1,
	[Token(Token = "0x4000525")]
	One,
	[Token(Token = "0x4000526")]
	Two
}
[Token(Token = "0x20000A9")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xE41CAC", Offset = "0xE41CAC", VA = "0xE41CAC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x7734F4", Offset = "0x7734F4", VA = "0x7734F4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x7734FC", Offset = "0x7734FC", VA = "0x7734FC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000AA")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xE41FE0", Offset = "0xE41FE0", VA = "0xE41FE0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x773734", Offset = "0x773734", VA = "0x773734", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x77373C", Offset = "0x77373C", VA = "0x77373C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000AB")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xC7E81C", Offset = "0xC7E81C", VA = "0xC7E81C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x7698C0", Offset = "0x7698C0", VA = "0x7698C0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x7698C8", Offset = "0x7698C8", VA = "0x7698C8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000AC")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xE4250C", Offset = "0xE4250C", VA = "0xE4250C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x773FBC", Offset = "0x773FBC", VA = "0x773FBC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x773FC4", Offset = "0x773FC4", VA = "0x773FC4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000AD")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xFA0F68", Offset = "0xFA0F68", VA = "0xFA0F68")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000AE")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000AF")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400055B")]
	FirstPerson = 1,
	[Token(Token = "0x400055C")]
	ThirdPerson = 2,
	[Token(Token = "0x400055D")]
	SelfOccluding = 4
}
[Token(Token = "0x20000B0")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000B1")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000B2")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000B3")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000B4")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000573")]
	Default,
	[Token(Token = "0x4000574")]
	GripSphere,
	[Token(Token = "0x4000575")]
	GripCube,
	[Token(Token = "0x4000576")]
	Count
}
[Token(Token = "0x20000B5")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000578")]
	Body,
	[Token(Token = "0x4000579")]
	Clothing,
	[Token(Token = "0x400057A")]
	Eyewear,
	[Token(Token = "0x400057B")]
	Hair,
	[Token(Token = "0x400057C")]
	Beard,
	[Token(Token = "0x400057D")]
	Count
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000B7")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000B8")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000B9")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000BA")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000587")]
	AvatarHead,
	[Token(Token = "0x4000588")]
	AvatarHand,
	[Token(Token = "0x4000589")]
	Object,
	[Token(Token = "0x400058A")]
	ObjectStatic,
	[Token(Token = "0x400058B")]
	Count
}
[Token(Token = "0x20000BB")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000BC")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000BD")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000BE")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000BF")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000597")]
	Point,
	[Token(Token = "0x4000598")]
	Direction,
	[Token(Token = "0x4000599")]
	Spot,
	[Token(Token = "0x400059A")]
	Count
}
[Token(Token = "0x20000C0")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000C1")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000C2")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000C3")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000C4")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40005B0")]
	None = 0u,
	[Token(Token = "0x40005B1")]
	GazeTarget = 1u,
	[Token(Token = "0x40005B2")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000C5")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000C6")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000C7")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000C8")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000C9")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000CA")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000581")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x8FCE84", Offset = "0x8FCE84", VA = "0x8FCE84")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40005C7")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000084")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xF9CC70", Offset = "0xF9CC70", VA = "0xF9CC70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xFA9CA8", Offset = "0xFA9CA8", VA = "0xFA9CA8")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xFA9EF4", Offset = "0xFA9EF4", VA = "0xFA9EF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xFA9F68", Offset = "0xFA9F68", VA = "0xFA9F68")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xFAA7AC", Offset = "0xFAA7AC", VA = "0xFAA7AC")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xFAA804", Offset = "0xFAA804", VA = "0xFAA804")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xF9D478", Offset = "0xF9D478", VA = "0xF9D478")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xF9D9E8", Offset = "0xF9D9E8", VA = "0xF9D9E8")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xF9D3E4", Offset = "0xF9D3E4", VA = "0xF9D3E4")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xFAA5E4", Offset = "0xFAA5E4", VA = "0xFAA5E4")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xF9CE80", Offset = "0xF9CE80", VA = "0xF9CE80")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xF9CF9C", Offset = "0xF9CF9C", VA = "0xF9CF9C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xF9CE00", Offset = "0xF9CE00", VA = "0xF9CE00")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xFAA8A8", Offset = "0xFAA8A8", VA = "0xFAA8A8")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xFA9EA8", Offset = "0xFA9EA8", VA = "0xFA9EA8")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xFA67A4", Offset = "0xFA67A4", VA = "0xFA67A4")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xFAA980", Offset = "0xFAA980", VA = "0xFAA980")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000CB")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000085")]
	public static string AppID
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xFAA940", Offset = "0xFAA940", VA = "0xFAA940")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xFAAAAC", Offset = "0xFAAAAC", VA = "0xFAAAAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public static string MobileAppID
	{
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xFAA960", Offset = "0xFAA960", VA = "0xFAA960")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xFAAAD8", Offset = "0xFAAAD8", VA = "0xFAAAD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xFAA998", Offset = "0xFAA998", VA = "0xFAA998")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xFAAB04", Offset = "0xFAAB04", VA = "0xFAAB04")]
		set
		{
		}
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xFAAB58", Offset = "0xFAAB58", VA = "0xFAAB58")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000CC")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xF9AC70", Offset = "0xF9AC70", VA = "0xF9AC70")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xFA33B8", Offset = "0xFA33B8", VA = "0xFA33B8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xFABE90", Offset = "0xFABE90", VA = "0xFABE90")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xFABFF0", Offset = "0xFABFF0", VA = "0xFABFF0")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000CD")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xF9AE90", Offset = "0xF9AE90", VA = "0xF9AE90")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xFA35E0", Offset = "0xFA35E0", VA = "0xFA35E0")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xFAC000", Offset = "0xFAC000", VA = "0xFAC000")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000CE")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40005D6")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40005D7")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40005D8")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xF9B1A4", Offset = "0xF9B1A4", VA = "0xF9B1A4")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xFA3778", Offset = "0xFA3778", VA = "0xFA3778")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xFAB64C", Offset = "0xFAB64C", VA = "0xFAB64C")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xFAADE0", Offset = "0xFAADE0", VA = "0xFAADE0")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xFAABB0", Offset = "0xFAABB0", VA = "0xFAABB0")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xFAACC4", Offset = "0xFAACC4", VA = "0xFAACC4")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xFABE80", Offset = "0xFABE80", VA = "0xFABE80")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000CF")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000582")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4002979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x400297A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000583")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400297B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x8FCEEC", Offset = "0x8FCEEC", VA = "0x8FCEEC")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000584")]
	public struct TextureSet
	{
		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x8FCF74", Offset = "0x8FCF74", VA = "0x8FCF74")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CFC0", Offset = "0x85CFC0")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700036F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002867")]
			[Address(RVA = "0xFAD430", Offset = "0xFAD430", VA = "0xFAD430", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002869")]
			[Address(RVA = "0xFAD498", Offset = "0xFAD498", VA = "0xFAD498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0xFACDCC", Offset = "0xFACDCC", VA = "0xFACDCC")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0xFACF34", Offset = "0xFACF34", VA = "0xFACF34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0xFACF38", Offset = "0xFACF38", VA = "0xFACF38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0xFAD438", Offset = "0xFAD438", VA = "0xFAD438", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40005DC")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40005DD")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40005E0")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40005E1")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40005E2")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40005E3")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40005E4")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40005E5")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40005E6")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xFAC7B4", Offset = "0xFAC7B4", VA = "0xFAC7B4")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xFACB10", Offset = "0xFACB10", VA = "0xFACB10")]
	public void Update()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xFA88D4", Offset = "0xFA88D4", VA = "0xFA88D4")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xFA6B98", Offset = "0xFA6B98", VA = "0xFA6B98")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xFACC88", Offset = "0xFACC88", VA = "0xFACC88")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xFA6828", Offset = "0xFA6828", VA = "0xFA6828")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xFA6A0C", Offset = "0xFA6A0C", VA = "0xFA6A0C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xFACD38", Offset = "0xFACD38", VA = "0xFACD38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D550", Offset = "0x86D550")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xFAA85C", Offset = "0xFAA85C", VA = "0xFAA85C")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xFACDF8", Offset = "0xFACDF8", VA = "0xFACDF8")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000D0")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xFAD4A0", Offset = "0xFAD4A0", VA = "0xFAD4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xFAD5FC", Offset = "0xFAD5FC", VA = "0xFAD5FC")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000D1")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60004F9")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x9F74DC", Offset = "0x9F74DC", VA = "0x9F74DC")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000D2")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F5C8", Offset = "0x85F5C8")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F600", Offset = "0x85F600")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F638", Offset = "0x85F638")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xA102E0", Offset = "0xA102E0", VA = "0xA102E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xA102E4", Offset = "0xA102E4", VA = "0xA102E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xA10364", Offset = "0xA10364", VA = "0xA10364")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xA10550", Offset = "0xA10550", VA = "0xA10550")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000D3")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xA10580", Offset = "0xA10580", VA = "0xA10580")]
	private void Start()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xA10684", Offset = "0xA10684", VA = "0xA10684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xA10758", Offset = "0xA10758", VA = "0xA10758")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xA109E4", Offset = "0xA109E4", VA = "0xA109E4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xA10A34", Offset = "0xA10A34", VA = "0xA10A34")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000D4")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000088")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x9DFA0C", Offset = "0x9DFA0C", VA = "0x9DFA0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x9DFCC4", Offset = "0x9DFCC4", VA = "0x9DFCC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x9DFE00", Offset = "0x9DFE00", VA = "0x9DFE00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x9DFD34", Offset = "0x9DFD34", VA = "0x9DFD34")]
	public void Init()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x9DDC24", Offset = "0x9DDC24", VA = "0x9DDC24")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x9DFF88", Offset = "0x9DFF88", VA = "0x9DFF88")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x9DDBBC", Offset = "0x9DDBBC", VA = "0x9DDBBC")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x9DDCA4", Offset = "0x9DDCA4", VA = "0x9DDCA4")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x9DFE98", Offset = "0x9DFE98", VA = "0x9DFE98")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x9E0028", Offset = "0x9E0028", VA = "0x9E0028")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x9E0064", Offset = "0x9E0064", VA = "0x9E0064")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x9E0258", Offset = "0x9E0258", VA = "0x9E0258")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x9E0074", Offset = "0x9E0074", VA = "0x9E0074")]
	private void Display()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x9E0308", Offset = "0x9E0308", VA = "0x9E0308")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000D5")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x9E11B0", Offset = "0x9E11B0", VA = "0x9E11B0")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000D6")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000586")]
	public enum TouchEvent
	{
		[Token(Token = "0x4002988")]
		SingleTap,
		[Token(Token = "0x4002989")]
		DoubleTap,
		[Token(Token = "0x400298A")]
		Left,
		[Token(Token = "0x400298B")]
		Right,
		[Token(Token = "0x400298C")]
		Up,
		[Token(Token = "0x400298D")]
		Down
	}

	[Token(Token = "0x2000587")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x9DC838", Offset = "0x9DC838", VA = "0x9DC838")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x9E82D8", Offset = "0x9E82D8", VA = "0x9E82D8")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x9E85F8", Offset = "0x9E85F8", VA = "0x9E85F8")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x9E8448", Offset = "0x9E8448", VA = "0x9E8448")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x9DD718", Offset = "0x9DD718", VA = "0x9DD718")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000D7")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x600051A")]
	[Address(RVA = "0x9E86A8", Offset = "0x9E86A8", VA = "0x9E86A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x9E8724", Offset = "0x9E8724", VA = "0x9E8724")]
	private void Start()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x9E87BC", Offset = "0x9E87BC", VA = "0x9E87BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x9E8818", Offset = "0x9E8818", VA = "0x9E8818")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x9E887C", Offset = "0x9E887C", VA = "0x9E887C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x9E8880", Offset = "0x9E8880", VA = "0x9E8880")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000D8")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000588")]
	public enum Result
	{
		[Token(Token = "0x400298F")]
		Success = 0,
		[Token(Token = "0x4002990")]
		Unknown = -2200,
		[Token(Token = "0x4002991")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4002992")]
		InvalidParam = -2202,
		[Token(Token = "0x4002993")]
		BadSampleRate = -2203,
		[Token(Token = "0x4002994")]
		MissingDLL = -2204,
		[Token(Token = "0x4002995")]
		BadVersion = -2205,
		[Token(Token = "0x4002996")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000589")]
	public enum AudioDataType
	{
		[Token(Token = "0x4002998")]
		S16_Mono,
		[Token(Token = "0x4002999")]
		S16_Stereo,
		[Token(Token = "0x400299A")]
		F32_Mono,
		[Token(Token = "0x400299B")]
		F32_Stereo
	}

	[Token(Token = "0x200058A")]
	public enum Viseme
	{
		[Token(Token = "0x400299D")]
		sil,
		[Token(Token = "0x400299E")]
		PP,
		[Token(Token = "0x400299F")]
		FF,
		[Token(Token = "0x40029A0")]
		TH,
		[Token(Token = "0x40029A1")]
		DD,
		[Token(Token = "0x40029A2")]
		kk,
		[Token(Token = "0x40029A3")]
		CH,
		[Token(Token = "0x40029A4")]
		SS,
		[Token(Token = "0x40029A5")]
		nn,
		[Token(Token = "0x40029A6")]
		RR,
		[Token(Token = "0x40029A7")]
		aa,
		[Token(Token = "0x40029A8")]
		E,
		[Token(Token = "0x40029A9")]
		ih,
		[Token(Token = "0x40029AA")]
		oh,
		[Token(Token = "0x40029AB")]
		ou
	}

	[Token(Token = "0x200058B")]
	public enum Signals
	{
		[Token(Token = "0x40029AD")]
		VisemeOn,
		[Token(Token = "0x40029AE")]
		VisemeOff,
		[Token(Token = "0x40029AF")]
		VisemeAmount,
		[Token(Token = "0x40029B0")]
		VisemeSmoothing,
		[Token(Token = "0x40029B1")]
		LaughterAmount
	}

	[Token(Token = "0x200058C")]
	public enum ContextProviders
	{
		[Token(Token = "0x40029B3")]
		Original,
		[Token(Token = "0x40029B4")]
		Enhanced,
		[Token(Token = "0x40029B5")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x200058D")]
	public class Frame
	{
		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x9DD480", Offset = "0x9DD480", VA = "0x9DD480")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x9DD4D8", Offset = "0x9DD4D8", VA = "0x9DD4D8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x9DD568", Offset = "0x9DD568", VA = "0x9DD568")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000600")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000520")]
	[Address(RVA = "0x9DBE08", Offset = "0x9DBE08", VA = "0x9DBE08")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000521")]
	[Address(RVA = "0x9DBE98", Offset = "0x9DBE98", VA = "0x9DBE98")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000522")]
	[Address(RVA = "0x9DBF08", Offset = "0x9DBF08", VA = "0x9DBF08")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000523")]
	[Address(RVA = "0x9DBF9C", Offset = "0x9DBF9C", VA = "0x9DBF9C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000524")]
	[Address(RVA = "0x9DC044", Offset = "0x9DC044", VA = "0x9DC044")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000525")]
	[Address(RVA = "0x9DC110", Offset = "0x9DC110", VA = "0x9DC110")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000526")]
	[Address(RVA = "0x9DC190", Offset = "0x9DC190", VA = "0x9DC190")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000527")]
	[Address(RVA = "0x9DC210", Offset = "0x9DC210", VA = "0x9DC210")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000528")]
	[Address(RVA = "0x9DC2B8", Offset = "0x9DC2B8", VA = "0x9DC2B8")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x9DC3C0", Offset = "0x9DC3C0", VA = "0x9DC3C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x9DC83C", Offset = "0x9DC83C", VA = "0x9DC83C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x9DC700", Offset = "0x9DC700", VA = "0x9DC700")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x9DC91C", Offset = "0x9DC91C", VA = "0x9DC91C")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x9DCA30", Offset = "0x9DCA30", VA = "0x9DCA30")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x9DCAA0", Offset = "0x9DCAA0", VA = "0x9DCAA0")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x9DCB08", Offset = "0x9DCB08", VA = "0x9DCB08")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x9DCC2C", Offset = "0x9DCC2C", VA = "0x9DCC2C")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x9DCD64", Offset = "0x9DCD64", VA = "0x9DCD64")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x9DCE44", Offset = "0x9DCE44", VA = "0x9DCE44")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x9DCF24", Offset = "0x9DCF24", VA = "0x9DCF24")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x9DD028", Offset = "0x9DD028", VA = "0x9DD028")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x9DD1CC", Offset = "0x9DD1CC", VA = "0x9DD1CC")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x9DD368", Offset = "0x9DD368", VA = "0x9DD368")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000D9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859490", Offset = "0x859490")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F670", Offset = "0x85F670")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F6A8", Offset = "0x85F6A8")]
	public bool enableTouchInput;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F6E0", Offset = "0x85F6E0")]
	public bool audioLoopback;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F718", Offset = "0x85F718")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F750", Offset = "0x85F750")]
	public bool showVisemes;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F788", Offset = "0x85F788")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F7C0", Offset = "0x85F7C0")]
	public bool skipAudioSource;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F7F8", Offset = "0x85F7F8")]
	public float gain;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x9DD5F0", Offset = "0x9DD5F0", VA = "0x9DD5F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x9DD7D8", Offset = "0x9DD7D8", VA = "0x9DD7D8")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x9DDD24", Offset = "0x9DDD24", VA = "0x9DDD24")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x9DDFD0", Offset = "0x9DDFD0", VA = "0x9DDFD0")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x9DE034", Offset = "0x9DE034", VA = "0x9DE034")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x9DE0A0", Offset = "0x9DE0A0", VA = "0x9DE0A0")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x9DE244", Offset = "0x9DE244", VA = "0x9DE244")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x9DE3E8", Offset = "0x9DE3E8", VA = "0x9DE3E8")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x9DE51C", Offset = "0x9DE51C", VA = "0x9DE51C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x9DDD68", Offset = "0x9DDD68", VA = "0x9DDD68")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x9DDAE8", Offset = "0x9DDAE8", VA = "0x9DDAE8")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x9DE52C", Offset = "0x9DE52C", VA = "0x9DE52C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x9DE658", Offset = "0x9DE658", VA = "0x9DE658")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000DA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8594F4", Offset = "0x8594F4")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F830", Offset = "0x85F830")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F868", Offset = "0x85F868")]
	public bool enableAcceleration;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000089")]
	public int Smoothing
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0x9DE7D8", Offset = "0x9DE7D8", VA = "0x9DE7D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x9DE6EC", Offset = "0x9DE6EC", VA = "0x9DE6EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public uint Context
	{
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x9DE7E0", Offset = "0x9DE7E0", VA = "0x9DE7E0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700008B")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000548")]
		[Address(RVA = "0x9DE7E8", Offset = "0x9DE7E8", VA = "0x9DE7E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x9DE7F0", Offset = "0x9DE7F0", VA = "0x9DE7F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x9DE988", Offset = "0x9DE988", VA = "0x9DE988")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x9DEAAC", Offset = "0x9DEAAC", VA = "0x9DEAAC")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x9DEAB4", Offset = "0x9DEAB4", VA = "0x9DEAB4")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x9DEBA8", Offset = "0x9DEBA8", VA = "0x9DEBA8")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x9DEC70", Offset = "0x9DEC70", VA = "0x9DEC70")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x9DE67C", Offset = "0x9DE67C", VA = "0x9DE67C")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000DB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859558", Offset = "0x859558")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F8A0", Offset = "0x85F8A0")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x9DECE8", Offset = "0x9DECE8", VA = "0x9DECE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x9DEE58", Offset = "0x9DEE58", VA = "0x9DEE58")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000DC")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F8D8", Offset = "0x85F8D8")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F910", Offset = "0x85F910")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F948", Offset = "0x85F948")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F980", Offset = "0x85F980")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F9B8", Offset = "0x85F9B8")]
	public KeyCode laughterKey;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85F9F0", Offset = "0x85F9F0")]
	public int laughterBlendTarget;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85FA28", Offset = "0x85FA28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FA28", Offset = "0x85FA28")]
	public float laughterThreshold;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85FA7C", Offset = "0x85FA7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FA7C", Offset = "0x85FA7C")]
	public float laughterMultiplier;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85FAD0", Offset = "0x85FAD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FAD0", Offset = "0x85FAD0")]
	public int smoothAmount;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x9DEE5C", Offset = "0x9DEE5C", VA = "0x9DEE5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x9DEFA0", Offset = "0x9DEFA0", VA = "0x9DEFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x9DF250", Offset = "0x9DF250", VA = "0x9DF250")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x9DF0AC", Offset = "0x9DF0AC", VA = "0x9DF0AC")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x9DF160", Offset = "0x9DF160", VA = "0x9DF160")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x9DF320", Offset = "0x9DF320", VA = "0x9DF320")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x9DF3E4", Offset = "0x9DF3E4", VA = "0x9DF3E4")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x9DF44C", Offset = "0x9DF44C", VA = "0x9DF44C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000DD")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FB28", Offset = "0x85FB28")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x85FB28", Offset = "0x85FB28")]
	public Texture[] Textures;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85FCA4", Offset = "0x85FCA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FCA4", Offset = "0x85FCA4")]
	public int smoothAmount;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x9DF544", Offset = "0x9DF544", VA = "0x9DF544")]
	private void Start()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x9DF698", Offset = "0x9DF698", VA = "0x9DF698")]
	private void Update()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x9DF83C", Offset = "0x9DF83C", VA = "0x9DF83C")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x9DF960", Offset = "0x9DF960", VA = "0x9DF960")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20000DE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8595BC", Offset = "0x8595BC")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x200058E")]
	public enum micActivation
	{
		[Token(Token = "0x40029BB")]
		HoldToSpeak,
		[Token(Token = "0x40029BC")]
		PushToSpeak,
		[Token(Token = "0x40029BD")]
		ConstantSpeak
	}

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FCFC", Offset = "0x85FCFC")]
	public AudioSource audioSource;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FD34", Offset = "0x85FD34")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FD6C", Offset = "0x85FD6C")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85FDA4", Offset = "0x85FDA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FDA4", Offset = "0x85FDA4")]
	private float micInputVolume;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FE0C", Offset = "0x85FE0C")]
	private int micFrequency;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FE58", Offset = "0x85FE58")]
	public micActivation micControl;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FE90", Offset = "0x85FE90")]
	public KeyCode micActivationKey;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FEC8", Offset = "0x85FEC8")]
	public string selectedDevice;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x1700008C")]
	public float MicFrequency
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x9E037C", Offset = "0x9E037C", VA = "0x9E037C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x9E0388", Offset = "0x9E0388", VA = "0x9E0388")]
		set
		{
		}
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x9E0414", Offset = "0x9E0414", VA = "0x9E0414")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x9E04D4", Offset = "0x9E04D4", VA = "0x9E04D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x9E0520", Offset = "0x9E0520", VA = "0x9E0520")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x9E0664", Offset = "0x9E0664", VA = "0x9E0664")]
	private void Update()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x9E0A9C", Offset = "0x9E0A9C", VA = "0x9E0A9C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x9E0AB0", Offset = "0x9E0AB0", VA = "0x9E0AB0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x9E0AC8", Offset = "0x9E0AC8", VA = "0x9E0AC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x9E0ACC", Offset = "0x9E0ACC", VA = "0x9E0ACC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x9E0B44", Offset = "0x9E0B44", VA = "0x9E0B44")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x9E05A8", Offset = "0x9E05A8", VA = "0x9E05A8")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x9E0908", Offset = "0x9E0908", VA = "0x9E0908")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x9E07C0", Offset = "0x9E07C0", VA = "0x9E07C0")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x9E0D24", Offset = "0x9E0D24", VA = "0x9E0D24")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x9E0D2C", Offset = "0x9E0D2C", VA = "0x9E0D2C")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DF")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x9DEDB4", Offset = "0x9DEDB4", VA = "0x9DEDB4")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x9E0D5C", Offset = "0x9E0D5C", VA = "0x9E0D5C")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000E0")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200058F")]
	public delegate void OnClick();

	[Token(Token = "0x2000590")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000591")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000592")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CFD0", Offset = "0x85CFD0")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6002881")]
		[Address(RVA = "0xB087A8", Offset = "0xB087A8", VA = "0xB087A8")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0xB09148", Offset = "0xB09148", VA = "0xB09148")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CFE0", Offset = "0x85CFE0")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6002883")]
		[Address(RVA = "0xB08A1C", Offset = "0xB08A1C", VA = "0xB08A1C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0xB0936C", Offset = "0xB0936C", VA = "0xB0936C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85CFF0", Offset = "0x85CFF0")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6002885")]
		[Address(RVA = "0xB08C34", Offset = "0xB08C34", VA = "0xB08C34")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0xB095F0", Offset = "0xB095F0", VA = "0xB095F0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D000", Offset = "0x85D000")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6002887")]
		[Address(RVA = "0xB08DC8", Offset = "0xB08DC8", VA = "0xB08DC8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0xB099C8", Offset = "0xB099C8", VA = "0xB099C8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D010", Offset = "0x85D010")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6002889")]
		[Address(RVA = "0xB09020", Offset = "0xB09020", VA = "0xB09020")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0xB099E8", Offset = "0xB099E8", VA = "0xB099E8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000634")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000635")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000636")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000643")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000644")]
	private const float marginH = 16f;

	[Token(Token = "0x4000645")]
	private const float marginV = 16f;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xB07754", Offset = "0xB07754", VA = "0xB07754")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xB07B58", Offset = "0xB07B58", VA = "0xB07B58")]
	public void Show()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xB08124", Offset = "0xB08124", VA = "0xB08124")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xB07ED0", Offset = "0xB07ED0", VA = "0xB07ED0")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xB082CC", Offset = "0xB082CC", VA = "0xB082CC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xB08580", Offset = "0xB08580", VA = "0xB08580")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xB087B0", Offset = "0xB087B0", VA = "0xB087B0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xB08894", Offset = "0xB08894", VA = "0xB08894")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xB08A24", Offset = "0xB08A24", VA = "0xB08A24")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xB08AC0", Offset = "0xB08AC0", VA = "0xB08AC0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xB08C3C", Offset = "0xB08C3C", VA = "0xB08C3C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xB08DD0", Offset = "0xB08DD0", VA = "0xB08DD0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xB09028", Offset = "0xB09028", VA = "0xB09028")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xB090D8", Offset = "0xB090D8", VA = "0xB090D8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000E1")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xB84494", Offset = "0xB84494", VA = "0xB84494")]
	private void Start()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xB8451C", Offset = "0xB8451C", VA = "0xB8451C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xB845E4", Offset = "0xB845E4", VA = "0xB845E4")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xB84620", Offset = "0xB84620", VA = "0xB84620")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000E2")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000598")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40029C7")]
		On,
		[Token(Token = "0x40029C8")]
		Off,
		[Token(Token = "0x40029C9")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700008D")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000583")]
		[Address(RVA = "0xDB30DC", Offset = "0xDB30DC", VA = "0xDB30DC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000582")]
		[Address(RVA = "0xDB3098", Offset = "0xDB3098", VA = "0xDB3098")]
		set
		{
		}
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xDB30E4", Offset = "0xDB30E4", VA = "0xDB30E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xDB313C", Offset = "0xDB313C", VA = "0xDB313C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xDB3254", Offset = "0xDB3254", VA = "0xDB3254", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xDB3270", Offset = "0xDB3270", VA = "0xDB3270", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xDB32C4", Offset = "0xDB32C4", VA = "0xDB32C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xDB3520", Offset = "0xDB3520", VA = "0xDB3520")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xDB3634", Offset = "0xDB3634", VA = "0xDB3634")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xDB36C8", Offset = "0xDB36C8", VA = "0xDB36C8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xDB3798", Offset = "0xDB3798", VA = "0xDB3798")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xDB3850", Offset = "0xDB3850", VA = "0xDB3850")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xDB391C", Offset = "0xDB391C", VA = "0xDB391C")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000E3")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xBC95F4", Offset = "0xBC95F4", VA = "0xBC95F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xBC9800", Offset = "0xBC9800", VA = "0xBC9800")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xBC9CA0", Offset = "0xBC9CA0", VA = "0xBC9CA0")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x20000E4")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x1700008E")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000594")]
		[Address(RVA = "0xB841A4", Offset = "0xB841A4", VA = "0xB841A4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000022")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000592")]
		[Address(RVA = "0xB83E04", Offset = "0xB83E04", VA = "0xB83E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D5B4", Offset = "0x86D5B4")]
		add
		{
		}
		[Token(Token = "0x6000593")]
		[Address(RVA = "0xB84100", Offset = "0xB84100", VA = "0xB84100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D5C4", Offset = "0x86D5C4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xB841B0", Offset = "0xB841B0", VA = "0xB841B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xB84308", Offset = "0xB84308", VA = "0xB84308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xB8447C", Offset = "0xB8447C", VA = "0xB8447C")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xB84484", Offset = "0xB84484", VA = "0xB84484")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x20000E5")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FFB0", Offset = "0x85FFB0")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85FFE8", Offset = "0x85FFE8")]
	public bool EnableCollision;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860020", Offset = "0x860020")]
	public float MaxFade;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860058", Offset = "0x860058")]
	public float FadeMinDistance;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860090", Offset = "0x860090")]
	public float FadeMaxDistance;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xC032F8", Offset = "0xC032F8", VA = "0xC032F8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xC03380", Offset = "0xC03380", VA = "0xC03380")]
	private void Awake()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xC033F0", Offset = "0xC033F0", VA = "0xC033F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xC033F4", Offset = "0xC033F4", VA = "0xC033F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xC03418", Offset = "0xC03418", VA = "0xC03418")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xC0343C", Offset = "0xC0343C", VA = "0xC0343C")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x20000E6")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xA10F48", Offset = "0xA10F48", VA = "0xA10F48")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xA10FF4", Offset = "0xA10FF4", VA = "0xA10FF4")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000E7")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000599")]
	public enum States
	{
		[Token(Token = "0x40029CB")]
		Ready,
		[Token(Token = "0x40029CC")]
		Aim,
		[Token(Token = "0x40029CD")]
		CancelAim,
		[Token(Token = "0x40029CE")]
		PreTeleport,
		[Token(Token = "0x40029CF")]
		CancelTeleport,
		[Token(Token = "0x40029D0")]
		Teleporting,
		[Token(Token = "0x40029D1")]
		PostTeleport
	}

	[Token(Token = "0x200059A")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40029D3")]
		None,
		[Token(Token = "0x40029D4")]
		Aim,
		[Token(Token = "0x40029D5")]
		PreTeleport,
		[Token(Token = "0x40029D6")]
		Teleport
	}

	[Token(Token = "0x200059B")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40029D8")]
		Point,
		[Token(Token = "0x40029D9")]
		Sphere,
		[Token(Token = "0x40029DA")]
		Capsule
	}

	[Token(Token = "0x200059C")]
	public class AimData
	{
		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86C8B0", Offset = "0x86C8B0")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000371")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600288C")]
			[Address(RVA = "0xA141B8", Offset = "0xA141B8", VA = "0xA141B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87727C", Offset = "0x87727C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600288D")]
			[Address(RVA = "0xA141C0", Offset = "0xA141C0", VA = "0xA141C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87728C", Offset = "0x87728C")]
			private set
			{
			}
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0xA14144", Offset = "0xA14144", VA = "0xA14144")]
		public AimData()
		{
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0xA141C8", Offset = "0xA141C8", VA = "0xA141C8")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D020", Offset = "0x85D020")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000372")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002892")]
			[Address(RVA = "0xA13F90", Offset = "0xA13F90", VA = "0xA13F90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002894")]
			[Address(RVA = "0xA13FF8", Offset = "0xA13FF8", VA = "0xA13FF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0xA12494", Offset = "0xA12494", VA = "0xA12494")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0xA13EA8", Offset = "0xA13EA8", VA = "0xA13EA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0xA13EAC", Offset = "0xA13EAC", VA = "0xA13EAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0xA13F98", Offset = "0xA13F98", VA = "0xA13F98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D030", Offset = "0x85D030")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000374")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002898")]
			[Address(RVA = "0xA13970", Offset = "0xA13970", VA = "0xA13970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600289A")]
			[Address(RVA = "0xA139D8", Offset = "0xA139D8", VA = "0xA139D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0xA1297C", Offset = "0xA1297C", VA = "0xA1297C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0xA13838", Offset = "0xA13838", VA = "0xA13838", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0xA1383C", Offset = "0xA1383C", VA = "0xA1383C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0xA13978", Offset = "0xA13978", VA = "0xA13978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200059F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D040", Offset = "0x85D040")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000376")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600289E")]
			[Address(RVA = "0xA13A84", Offset = "0xA13A84", VA = "0xA13A84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xA13AEC", Offset = "0xA13AEC", VA = "0xA13AEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0xA12B60", Offset = "0xA12B60", VA = "0xA12B60")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0xA139E0", Offset = "0xA139E0", VA = "0xA139E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0xA139E4", Offset = "0xA139E4", VA = "0xA139E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0xA13A8C", Offset = "0xA13A8C", VA = "0xA13A8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D050", Offset = "0x85D050")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000378")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028A4")]
			[Address(RVA = "0xA13E38", Offset = "0xA13E38", VA = "0xA13E38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028A6")]
			[Address(RVA = "0xA13EA0", Offset = "0xA13EA0", VA = "0xA13EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0xA12D44", Offset = "0xA12D44", VA = "0xA12D44")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0xA13D60", Offset = "0xA13D60", VA = "0xA13D60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0xA13D64", Offset = "0xA13D64", VA = "0xA13D64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0xA13E40", Offset = "0xA13E40", VA = "0xA13E40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D060", Offset = "0x85D060")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700037A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028AA")]
			[Address(RVA = "0xA13B98", Offset = "0xA13B98", VA = "0xA13B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028AC")]
			[Address(RVA = "0xA13C00", Offset = "0xA13C00", VA = "0xA13C00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0xA12F28", Offset = "0xA12F28", VA = "0xA12F28")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0xA13AF4", Offset = "0xA13AF4", VA = "0xA13AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0xA13AF8", Offset = "0xA13AF8", VA = "0xA13AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0xA13BA0", Offset = "0xA13BA0", VA = "0xA13BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D070", Offset = "0x85D070")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700037C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028B0")]
			[Address(RVA = "0xA140D4", Offset = "0xA140D4", VA = "0xA140D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028B2")]
			[Address(RVA = "0xA1413C", Offset = "0xA1413C", VA = "0xA1413C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0xA1310C", Offset = "0xA1310C", VA = "0xA1310C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0xA14000", Offset = "0xA14000", VA = "0xA14000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0xA14004", Offset = "0xA14004", VA = "0xA14004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0xA140DC", Offset = "0xA140DC", VA = "0xA140DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D080", Offset = "0x85D080")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700037E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028B6")]
			[Address(RVA = "0xA13CF0", Offset = "0xA13CF0", VA = "0xA13CF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0xA13D58", Offset = "0xA13D58", VA = "0xA13D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0xA132F0", Offset = "0xA132F0", VA = "0xA132F0")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0xA13C08", Offset = "0xA13C08", VA = "0xA13C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0xA13C0C", Offset = "0xA13C0C", VA = "0xA13C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0xA13CF8", Offset = "0xA13CF8", VA = "0xA13CF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8600C8", Offset = "0x8600C8")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860100", Offset = "0x860100")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860138", Offset = "0x860138")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860170", Offset = "0x860170")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8601A8", Offset = "0x8601A8")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8601E0", Offset = "0x8601E0")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860218", Offset = "0x860218")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860250", Offset = "0x860250")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x860288", Offset = "0x860288")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860298", Offset = "0x860298")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8602D0", Offset = "0x8602D0")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x860318", Offset = "0x860318")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860328", Offset = "0x860328")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860360", Offset = "0x860360")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860398", Offset = "0x860398")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8603D0", Offset = "0x8603D0")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700008F")]
	public States CurrentState
	{
		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xA119D8", Offset = "0xA119D8", VA = "0xA119D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D5D4", Offset = "0x86D5D4")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xA119E0", Offset = "0xA119E0", VA = "0xA119E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D5E4", Offset = "0x86D5E4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xA11C10", Offset = "0xA11C10", VA = "0xA11C10")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000091")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xA11C38", Offset = "0xA11C38", VA = "0xA11C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D614", Offset = "0x86D614")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xA11C40", Offset = "0xA11C40", VA = "0xA11C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D624", Offset = "0x86D624")]
		private set
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xA119E8", Offset = "0xA119E8", VA = "0xA119E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D5F4", Offset = "0x86D5F4")]
		add
		{
		}
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xA11A8C", Offset = "0xA11A8C", VA = "0xA11A8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D604", Offset = "0x86D604")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xA1234C", Offset = "0xA1234C", VA = "0xA1234C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D66C", Offset = "0x86D66C")]
		add
		{
		}
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xA123F0", Offset = "0xA123F0", VA = "0xA123F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D67C", Offset = "0x86D67C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xA124C0", Offset = "0xA124C0", VA = "0xA124C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D6F0", Offset = "0x86D6F0")]
		add
		{
		}
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xA12564", Offset = "0xA12564", VA = "0xA12564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D700", Offset = "0x86D700")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xA12608", Offset = "0xA12608", VA = "0xA12608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D710", Offset = "0x86D710")]
		add
		{
		}
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xA126AC", Offset = "0xA126AC", VA = "0xA126AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D720", Offset = "0x86D720")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xA127C4", Offset = "0xA127C4", VA = "0xA127C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D730", Offset = "0x86D730")]
		add
		{
		}
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xA12868", Offset = "0xA12868", VA = "0xA12868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D740", Offset = "0x86D740")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xA129A8", Offset = "0xA129A8", VA = "0xA129A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D7B4", Offset = "0x86D7B4")]
		add
		{
		}
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xA12A4C", Offset = "0xA12A4C", VA = "0xA12A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D7C4", Offset = "0x86D7C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xA12B8C", Offset = "0xA12B8C", VA = "0xA12B8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D838", Offset = "0x86D838")]
		add
		{
		}
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xA12C30", Offset = "0xA12C30", VA = "0xA12C30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D848", Offset = "0x86D848")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xA12D70", Offset = "0xA12D70", VA = "0xA12D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D8BC", Offset = "0x86D8BC")]
		add
		{
		}
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xA12E14", Offset = "0xA12E14", VA = "0xA12E14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D8CC", Offset = "0x86D8CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xA12F54", Offset = "0xA12F54", VA = "0xA12F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D940", Offset = "0x86D940")]
		add
		{
		}
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xA12FF8", Offset = "0xA12FF8", VA = "0xA12FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D950", Offset = "0x86D950")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xA13138", Offset = "0xA13138", VA = "0xA13138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D9C4", Offset = "0x86D9C4")]
		add
		{
		}
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xA131DC", Offset = "0xA131DC", VA = "0xA131DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86D9D4", Offset = "0x86D9D4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xA1331C", Offset = "0xA1331C", VA = "0xA1331C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DA48", Offset = "0x86DA48")]
		add
		{
		}
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xA133C0", Offset = "0xA133C0", VA = "0xA133C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DA58", Offset = "0x86DA58")]
		remove
		{
		}
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xA116A8", Offset = "0xA116A8", VA = "0xA116A8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xA116CC", Offset = "0xA116CC", VA = "0xA116CC")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xA11B30", Offset = "0xA11B30", VA = "0xA11B30")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xA11C48", Offset = "0xA11C48", VA = "0xA11C48")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xA11FA0", Offset = "0xA11FA0", VA = "0xA11FA0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x86D634", Offset = "0x86D634")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xA12058", Offset = "0xA12058", VA = "0xA12058")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xA12120", Offset = "0xA12120", VA = "0xA12120")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xA1213C", Offset = "0xA1213C", VA = "0xA1213C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xA12204", Offset = "0xA12204", VA = "0xA12204")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xA12248", Offset = "0xA12248", VA = "0xA12248")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xA122A4", Offset = "0xA122A4", VA = "0xA122A4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xA12344", Offset = "0xA12344", VA = "0xA12344", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xA122D4", Offset = "0xA122D4", VA = "0xA122D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D68C", Offset = "0x86D68C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xA12750", Offset = "0xA12750", VA = "0xA12750")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xA1290C", Offset = "0xA1290C", VA = "0xA1290C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D750", Offset = "0x86D750")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xA12AF0", Offset = "0xA12AF0", VA = "0xA12AF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D7D4", Offset = "0x86D7D4")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xA12CD4", Offset = "0xA12CD4", VA = "0xA12CD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D858", Offset = "0x86D858")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xA12EB8", Offset = "0xA12EB8", VA = "0xA12EB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D8DC", Offset = "0x86D8DC")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xA1309C", Offset = "0xA1309C", VA = "0xA1309C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D960", Offset = "0x86D960")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xA13280", Offset = "0xA13280", VA = "0xA13280")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86D9E4", Offset = "0x86D9E4")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xA13464", Offset = "0xA13464", VA = "0xA13464")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xA135A8", Offset = "0xA135A8", VA = "0xA135A8")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xA135DC", Offset = "0xA135DC", VA = "0xA135DC")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xA136FC", Offset = "0xA136FC", VA = "0xA136FC")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xA13828", Offset = "0xA13828", VA = "0xA13828")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000E8")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400002E")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xB023B8", Offset = "0xB023B8", VA = "0xB023B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DA68", Offset = "0x86DA68")]
		add
		{
		}
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xB0245C", Offset = "0xB0245C", VA = "0xB0245C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DA78", Offset = "0x86DA78")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xB02500", Offset = "0xB02500", VA = "0xB02500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DA88", Offset = "0x86DA88")]
		add
		{
		}
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xB025A4", Offset = "0xB025A4", VA = "0xB025A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DA98", Offset = "0x86DA98")]
		remove
		{
		}
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xB02648", Offset = "0xB02648", VA = "0xB02648")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xB026F0", Offset = "0xB026F0", VA = "0xB026F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xB026F4", Offset = "0xB026F4", VA = "0xB026F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xB02768", Offset = "0xB02768", VA = "0xB02768")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xB028D8", Offset = "0xB028D8", VA = "0xB028D8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xB02BBC", Offset = "0xB02BBC", VA = "0xB02BBC")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xB02DAC", Offset = "0xB02DAC", VA = "0xB02DAC")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000E9")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xAD9848", Offset = "0xAD9848", VA = "0xAD9848", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xAD98DC", Offset = "0xAD98DC", VA = "0xAD98DC", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60005E2")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xAD99AC", Offset = "0xAD99AC", VA = "0xAD99AC")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000EA")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8604C8", Offset = "0x8604C8")]
	public float Range;

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xAD99BC", Offset = "0xAD99BC", VA = "0xAD99BC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xAD9B18", Offset = "0xAD9B18", VA = "0xAD9B18")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000EB")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860500", Offset = "0x860500")]
	public float Range;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860538", Offset = "0x860538")]
	public float MinimumElevation;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860570", Offset = "0x860570")]
	public float Gravity;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8605A8", Offset = "0x8605A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8605A8", Offset = "0x8605A8")]
	public float AimVelocity;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860604", Offset = "0x860604")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x860604", Offset = "0x860604")]
	public float AimStep;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xAD9B28", Offset = "0xAD9B28", VA = "0xAD9B28", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xAD9D74", Offset = "0xAD9D74", VA = "0xAD9D74")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000EC")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86065C", Offset = "0x86065C")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xAD9D88", Offset = "0xAD9D88", VA = "0xAD9D88")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xAD9E6C", Offset = "0xAD9E6C", VA = "0xAD9E6C")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xAD9E9C", Offset = "0xAD9E9C", VA = "0xAD9E9C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xAD9ECC", Offset = "0xAD9ECC", VA = "0xAD9ECC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xAD9F6C", Offset = "0xAD9F6C", VA = "0xAD9F6C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xAD9FD8", Offset = "0xAD9FD8", VA = "0xAD9FD8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xADA040", Offset = "0xADA040", VA = "0xADA040")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000ED")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x860694", Offset = "0x860694")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8606A4", Offset = "0x8606A4")]
	public Transform PositionIndicator;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8606DC", Offset = "0x8606DC")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860714", Offset = "0x860714")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000092")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xADA15C", Offset = "0xADA15C", VA = "0xADA15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DAA8", Offset = "0x86DAA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xADA164", Offset = "0xADA164", VA = "0xADA164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DAB8", Offset = "0x86DAB8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xADA314", Offset = "0xADA314", VA = "0xADA314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DAC8", Offset = "0x86DAC8")]
		add
		{
		}
		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xADA3B8", Offset = "0xADA3B8", VA = "0xADA3B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DAD8", Offset = "0x86DAD8")]
		remove
		{
		}
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xADA170", Offset = "0xADA170", VA = "0xADA170")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xADA1F8", Offset = "0xADA1F8", VA = "0xADA1F8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xADA2D0", Offset = "0xADA2D0", VA = "0xADA2D0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xADA310", Offset = "0xADA310", VA = "0xADA310")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xADA45C", Offset = "0xADA45C", VA = "0xADA45C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xADA4C4", Offset = "0xADA4C4", VA = "0xADA4C4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xADA4E4", Offset = "0xADA4E4", VA = "0xADA4E4", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000EE")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20005A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D090", Offset = "0x85D090")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000380")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0xADABA8", Offset = "0xADABA8", VA = "0xADABA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000381")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0xADAC10", Offset = "0xADAC10", VA = "0xADAC10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0xADA8F4", Offset = "0xADA8F4", VA = "0xADA8F4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0xADAB18", Offset = "0xADAB18", VA = "0xADAB18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0xADAB1C", Offset = "0xADAB1C", VA = "0xADAB1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0xADABB0", Offset = "0xADABB0", VA = "0xADABB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D0A0", Offset = "0x85D0A0")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000382")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028C2")]
			[Address(RVA = "0xADAAA8", Offset = "0xADAAA8", VA = "0xADAAA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028C4")]
			[Address(RVA = "0xADAB10", Offset = "0xADAB10", VA = "0xADAB10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0xADA990", Offset = "0xADA990", VA = "0xADA990")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0xADAA14", Offset = "0xADAA14", VA = "0xADAA14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0xADAA18", Offset = "0xADAA18", VA = "0xADAA18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0xADAAB0", Offset = "0xADAAB0", VA = "0xADAAB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xADA6C4", Offset = "0xADA6C4", VA = "0xADA6C4")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xADA770", Offset = "0xADA770", VA = "0xADA770", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xADA7C8", Offset = "0xADA7C8", VA = "0xADA7C8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xADA884", Offset = "0xADA884", VA = "0xADA884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86DAE8", Offset = "0x86DAE8")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xADA920", Offset = "0xADA920", VA = "0xADA920")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86DB4C", Offset = "0x86DB4C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60005FF")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000600")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xADA9BC", Offset = "0xADA9BC", VA = "0xADA9BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DBB0", Offset = "0x86DBB0")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xADA9E8", Offset = "0xADA9E8", VA = "0xADA9E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DBC0", Offset = "0x86DBC0")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000EF")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86075C", Offset = "0x86075C")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86076C", Offset = "0x86076C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8607A4", Offset = "0x8607A4")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8607DC", Offset = "0x8607DC")]
	public bool FastTeleport;

	[Token(Token = "0x17000093")]
	public Transform Pointer
	{
		[Token(Token = "0x6000603")]
		[Address(RVA = "0xADAC18", Offset = "0xADAC18", VA = "0xADAC18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DBD0", Offset = "0x86DBD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000604")]
		[Address(RVA = "0xADAC20", Offset = "0xADAC20", VA = "0xADAC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DBE0", Offset = "0x86DBE0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xADAC28", Offset = "0xADAC28", VA = "0xADAC28", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xADAD84", Offset = "0xADAD84", VA = "0xADAD84", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xADAE3C", Offset = "0xADAE3C", VA = "0xADAE3C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000F0")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20005A6")]
	public enum InputModes
	{
		[Token(Token = "0x40029FC")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40029FD")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40029FE")]
		ThumbstickTeleport,
		[Token(Token = "0x40029FF")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20005A7")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4002A01")]
		A,
		[Token(Token = "0x4002A02")]
		B,
		[Token(Token = "0x4002A03")]
		LeftTrigger,
		[Token(Token = "0x4002A04")]
		LeftThumbstick,
		[Token(Token = "0x4002A05")]
		RightTrigger,
		[Token(Token = "0x4002A06")]
		RightThumbstick,
		[Token(Token = "0x4002A07")]
		X,
		[Token(Token = "0x4002A08")]
		Y
	}

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860814", Offset = "0x860814")]
	public InputModes InputMode;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86084C", Offset = "0x86084C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860884", Offset = "0x860884")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8608BC", Offset = "0x8608BC")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xADAE40", Offset = "0xADAE40", VA = "0xADAE40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xADAE44", Offset = "0xADAE44", VA = "0xADAE44", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xADB28C", Offset = "0xADB28C", VA = "0xADB28C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xADB34C", Offset = "0xADB34C", VA = "0xADB34C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000F1")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20005A8")]
	public enum OrientationModes
	{
		[Token(Token = "0x4002A0A")]
		HeadRelative,
		[Token(Token = "0x4002A0B")]
		ForwardFacing
	}

	[Token(Token = "0x20005A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D0B0", Offset = "0x85D0B0")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000384")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028C8")]
			[Address(RVA = "0xADB7DC", Offset = "0xADB7DC", VA = "0xADB7DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028CA")]
			[Address(RVA = "0xADB844", Offset = "0xADB844", VA = "0xADB844", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0xADB5B8", Offset = "0xADB5B8", VA = "0xADB5B8")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0xADB734", Offset = "0xADB734", VA = "0xADB734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0xADB738", Offset = "0xADB738", VA = "0xADB738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0xADB7E4", Offset = "0xADB7E4", VA = "0xADB7E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xADB3F8", Offset = "0xADB3F8", VA = "0xADB3F8")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xADB4AC", Offset = "0xADB4AC", VA = "0xADB4AC")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xADB4B4", Offset = "0xADB4B4", VA = "0xADB4B4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xADB500", Offset = "0xADB500", VA = "0xADB500", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xADB548", Offset = "0xADB548", VA = "0xADB548")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86DBF0", Offset = "0x86DBF0")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000611")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000612")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xADB5E4", Offset = "0xADB5E4", VA = "0xADB5E4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xADB708", Offset = "0xADB708", VA = "0xADB708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DC54", Offset = "0x86DC54")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000F2")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000615")]
	[Address(RVA = "0xADB84C", Offset = "0xADB84C", VA = "0xADB84C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xADB850", Offset = "0xADB850", VA = "0xADB850", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xADB8CC", Offset = "0xADB8CC", VA = "0xADB8CC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000F3")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8608F4", Offset = "0x8608F4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86092C", Offset = "0x86092C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860964", Offset = "0x860964")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86099C", Offset = "0x86099C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xADB8D0", Offset = "0xADB8D0", VA = "0xADB8D0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xADB940", Offset = "0xADB940", VA = "0xADB940", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xADBDB8", Offset = "0xADBDB8", VA = "0xADBDB8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000F4")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8609D4", Offset = "0x8609D4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860A0C", Offset = "0x860A0C")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860A44", Offset = "0x860A44")]
	public float RotateStickThreshold;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xADBDBC", Offset = "0xADBDBC", VA = "0xADBDBC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xADBE00", Offset = "0xADBE00", VA = "0xADBE00", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xADC270", Offset = "0xADC270", VA = "0xADC270")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000F5")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xADC280", Offset = "0xADC280", VA = "0xADC280")]
	private void Start()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xADC284", Offset = "0xADC284", VA = "0xADC284")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xADC28C", Offset = "0xADC28C", VA = "0xADC28C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xADC374", Offset = "0xADC374", VA = "0xADC374")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xADC39C", Offset = "0xADC39C", VA = "0xADC39C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000F6")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x860A7C", Offset = "0x860A7C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000094")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000623")]
		[Address(RVA = "0xADC3B4", Offset = "0xADC3B4", VA = "0xADC3B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DC64", Offset = "0x86DC64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000624")]
		[Address(RVA = "0xADC3BC", Offset = "0xADC3BC", VA = "0xADC3BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DC74", Offset = "0x86DC74")]
		private set
		{
		}
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xAD9878", Offset = "0xAD9878", VA = "0xAD9878", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xAD9980", Offset = "0xAD9980", VA = "0xAD9980", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xADC3C4", Offset = "0xADC3C4", VA = "0xADC3C4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x86DC84", Offset = "0x86DC84")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xAD9FCC", Offset = "0xAD9FCC", VA = "0xAD9FCC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xADA038", Offset = "0xADA038", VA = "0xADA038", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xAD99B4", Offset = "0xAD99B4", VA = "0xAD99B4")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000F7")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20005AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D0C0", Offset = "0x85D0C0")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000386")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028CE")]
			[Address(RVA = "0xADCA18", Offset = "0xADCA18", VA = "0xADCA18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0xADCA80", Offset = "0xADCA80", VA = "0xADCA80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0xADC614", Offset = "0xADC614", VA = "0xADC614")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0xADC7AC", Offset = "0xADC7AC", VA = "0xADC7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0xADC7B0", Offset = "0xADC7B0", VA = "0xADC7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0xADCA20", Offset = "0xADCA20", VA = "0xADCA20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860A8C", Offset = "0x860A8C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40006DB")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xADC48C", Offset = "0xADC48C", VA = "0xADC48C")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xADC550", Offset = "0xADC550", VA = "0xADC550", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xADC57C", Offset = "0xADC57C", VA = "0xADC57C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xADC5A4", Offset = "0xADC5A4", VA = "0xADC5A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86DCBC", Offset = "0x86DCBC")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xADC640", Offset = "0xADC640", VA = "0xADC640", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000630")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xADC65C", Offset = "0xADC65C", VA = "0xADC65C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xADC780", Offset = "0xADC780", VA = "0xADC780")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DD20", Offset = "0x86DD20")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000F8")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xADCA88", Offset = "0xADCA88", VA = "0xADCA88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xADCAE8", Offset = "0xADCAE8", VA = "0xADCAE8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xADCC6C", Offset = "0xADCC6C", VA = "0xADCC6C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xADCD5C", Offset = "0xADCD5C", VA = "0xADCD5C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x86DD30", Offset = "0x86DD30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xADCD60", Offset = "0xADCD60", VA = "0xADCD60")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000F9")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860AC4", Offset = "0x860AC4")]
	public float LOSOffset;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860AFC", Offset = "0x860AFC")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xADCD6C", Offset = "0xADCD6C", VA = "0xADCD6C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xADCF9C", Offset = "0xADCF9C", VA = "0xADCF9C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000FA")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600063A")]
	[Address(RVA = "0xADCFA8", Offset = "0xADCFA8", VA = "0xADCFA8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xADD12C", Offset = "0xADD12C", VA = "0xADD12C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000FB")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600063C")]
	[Address(RVA = "0xADD130", Offset = "0xADD130", VA = "0xADD130", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xADD1C8", Offset = "0xADD1C8", VA = "0xADD1C8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600063E")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xADD25C", Offset = "0xADD25C", VA = "0xADD25C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000FC")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20005AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D0D0", Offset = "0x85D0D0")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000388")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0xADD5C4", Offset = "0xADD5C4", VA = "0xADD5C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000389")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028D6")]
			[Address(RVA = "0xADD62C", Offset = "0xADD62C", VA = "0xADD62C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0xADD300", Offset = "0xADD300", VA = "0xADD300")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0xADD4C4", Offset = "0xADD4C4", VA = "0xADD4C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0xADD4C8", Offset = "0xADD4C8", VA = "0xADD4C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0xADD5CC", Offset = "0xADD5CC", VA = "0xADD5CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860B34", Offset = "0x860B34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x860B34", Offset = "0x860B34")]
	public float TransitionDuration;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860B8C", Offset = "0x860B8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x860B8C", Offset = "0x860B8C")]
	public float TeleportDelay;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860BE0", Offset = "0x860BE0")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xADD264", Offset = "0xADD264", VA = "0xADD264", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xADD290", Offset = "0xADD290", VA = "0xADD290")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86DD68", Offset = "0x86DD68")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xADD32C", Offset = "0xADD32C", VA = "0xADD32C")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000FD")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000643")]
	[Address(RVA = "0xADD634", Offset = "0xADD634", VA = "0xADD634", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xADD650", Offset = "0xADD650", VA = "0xADD650")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000FE")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20005AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D0E0", Offset = "0x85D0E0")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700038A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028DA")]
			[Address(RVA = "0xADD89C", Offset = "0xADD89C", VA = "0xADD89C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028DC")]
			[Address(RVA = "0xADD904", Offset = "0xADD904", VA = "0xADD904", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0xADD6F4", Offset = "0xADD6F4", VA = "0xADD6F4")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0xADD768", Offset = "0xADD768", VA = "0xADD768", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0xADD76C", Offset = "0xADD76C", VA = "0xADD76C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0xADD8A4", Offset = "0xADD8A4", VA = "0xADD8A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860C18", Offset = "0x860C18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x860C18", Offset = "0x860C18")]
	public float TransitionDuration;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xADD658", Offset = "0xADD658", VA = "0xADD658", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xADD684", Offset = "0xADD684", VA = "0xADD684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86DDCC", Offset = "0x86DDCC")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xADD720", Offset = "0xADD720", VA = "0xADD720")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000FF")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20005AD")]
	public enum PlabackState
	{
		[Token(Token = "0x4002A1E")]
		Idle = 1,
		[Token(Token = "0x4002A1F")]
		Preparing,
		[Token(Token = "0x4002A20")]
		Buffering,
		[Token(Token = "0x4002A21")]
		Ready,
		[Token(Token = "0x4002A22")]
		Ended
	}

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000095")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000648")]
		[Address(RVA = "0xAB9BC0", Offset = "0xAB9BC0", VA = "0xAB9BC0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000096")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000649")]
		[Address(RVA = "0xAB9E7C", Offset = "0xAB9E7C", VA = "0xAB9E7C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000097")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600064A")]
		[Address(RVA = "0xAB4D40", Offset = "0xAB4D40", VA = "0xAB4D40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000098")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600064B")]
		[Address(RVA = "0xAB5F60", Offset = "0xAB5F60", VA = "0xAB5F60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000099")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600064C")]
		[Address(RVA = "0xABA0C0", Offset = "0xABA0C0", VA = "0xABA0C0")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700009A")]
	public static long Duration
	{
		[Token(Token = "0x600064D")]
		[Address(RVA = "0xAB6144", Offset = "0xAB6144", VA = "0xAB6144")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700009B")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600064E")]
		[Address(RVA = "0xAB6050", Offset = "0xAB6050", VA = "0xAB6050")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600064F")]
		[Address(RVA = "0xAB5724", Offset = "0xAB5724", VA = "0xAB5724")]
		set
		{
		}
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xAB67A4", Offset = "0xAB67A4", VA = "0xAB67A4")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xAB64E8", Offset = "0xAB64E8", VA = "0xAB64E8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xAB53B4", Offset = "0xAB53B4", VA = "0xAB53B4")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xAB5538", Offset = "0xAB5538", VA = "0xAB5538")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xAB6310", Offset = "0xAB6310", VA = "0xAB6310")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xAB6998", Offset = "0xAB6998", VA = "0xAB6998")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xAB5DA4", Offset = "0xAB5DA4", VA = "0xAB5DA4")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000100")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000031")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000658")]
		[Address(RVA = "0xBED230", Offset = "0xBED230", VA = "0xBED230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DE30", Offset = "0x86DE30")]
		add
		{
		}
		[Token(Token = "0x6000659")]
		[Address(RVA = "0xBED2D4", Offset = "0xBED2D4", VA = "0xBED2D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DE40", Offset = "0x86DE40")]
		remove
		{
		}
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xBED378", Offset = "0xBED378", VA = "0xBED378", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xBED38C", Offset = "0xBED38C", VA = "0xBED38C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000101")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20005AE")]
	public enum ButtonType
	{
		[Token(Token = "0x4002A24")]
		Play,
		[Token(Token = "0x4002A25")]
		Pause,
		[Token(Token = "0x4002A26")]
		FastForward,
		[Token(Token = "0x4002A27")]
		Rewind,
		[Token(Token = "0x4002A28")]
		SkipForward,
		[Token(Token = "0x4002A29")]
		SkipBack,
		[Token(Token = "0x4002A2A")]
		Stop
	}

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700009C")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600065C")]
		[Address(RVA = "0xA20CC4", Offset = "0xA20CC4", VA = "0xA20CC4")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600065D")]
		[Address(RVA = "0xA20CCC", Offset = "0xA20CCC", VA = "0xA20CCC")]
		set
		{
		}
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xA20CF0", Offset = "0xA20CF0", VA = "0xA20CF0", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xA221BC", Offset = "0xA221BC", VA = "0xA221BC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000102")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20005AF")]
	public enum VideoShape
	{
		[Token(Token = "0x4002A2C")]
		_360,
		[Token(Token = "0x4002A2D")]
		_180,
		[Token(Token = "0x4002A2E")]
		Quad
	}

	[Token(Token = "0x20005B0")]
	public enum VideoStereo
	{
		[Token(Token = "0x4002A30")]
		Mono,
		[Token(Token = "0x4002A31")]
		TopBottom,
		[Token(Token = "0x4002A32")]
		LeftRight
	}

	[Token(Token = "0x20005B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D0F0", Offset = "0x85D0F0")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700038C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028E0")]
			[Address(RVA = "0xAB6C60", Offset = "0xAB6C60", VA = "0xAB6C60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028E2")]
			[Address(RVA = "0xAB6CC8", Offset = "0xAB6CC8", VA = "0xAB6CC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028DD")]
		[Address(RVA = "0xAB50B0", Offset = "0xAB50B0", VA = "0xAB50B0")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60028DE")]
		[Address(RVA = "0xAB6ADC", Offset = "0xAB6ADC", VA = "0xAB6ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0xAB6AE0", Offset = "0xAB6AE0", VA = "0xAB6AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E1")]
		[Address(RVA = "0xAB6C68", Offset = "0xAB6C68", VA = "0xAB6C68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D100", Offset = "0x85D100")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0xAB5318", Offset = "0xAB5318", VA = "0xAB5318")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60028E4")]
		[Address(RVA = "0xAB66D0", Offset = "0xAB66D0", VA = "0xAB66D0")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x860CA0", Offset = "0x860CA0")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x860CB0", Offset = "0x860CB0")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x860CC0", Offset = "0x860CC0")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700009D")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000660")]
		[Address(RVA = "0xAB4AF4", Offset = "0xAB4AF4", VA = "0xAB4AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DE50", Offset = "0x86DE50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000661")]
		[Address(RVA = "0xAB4AFC", Offset = "0xAB4AFC", VA = "0xAB4AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DE60", Offset = "0x86DE60")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public long Duration
	{
		[Token(Token = "0x6000662")]
		[Address(RVA = "0xAB4B08", Offset = "0xAB4B08", VA = "0xAB4B08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DE70", Offset = "0x86DE70")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000663")]
		[Address(RVA = "0xAB4B10", Offset = "0xAB4B10", VA = "0xAB4B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DE80", Offset = "0x86DE80")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000664")]
		[Address(RVA = "0xAB4B18", Offset = "0xAB4B18", VA = "0xAB4B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DE90", Offset = "0x86DE90")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000665")]
		[Address(RVA = "0xAB4B20", Offset = "0xAB4B20", VA = "0xAB4B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DEA0", Offset = "0x86DEA0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xAB4B28", Offset = "0xAB4B28", VA = "0xAB4B28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xAB4DA8", Offset = "0xAB4DA8", VA = "0xAB4DA8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xAB4E10", Offset = "0xAB4E10", VA = "0xAB4E10")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xAB5040", Offset = "0xAB5040", VA = "0xAB5040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86DEB0", Offset = "0x86DEB0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xAB50DC", Offset = "0xAB50DC", VA = "0xAB50DC")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xAB5320", Offset = "0xAB5320", VA = "0xAB5320")]
	public void Play()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xAB54A8", Offset = "0xAB54A8", VA = "0xAB54A8")]
	public void Pause()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xAB562C", Offset = "0xAB562C", VA = "0xAB562C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xAB5864", Offset = "0xAB5864", VA = "0xAB5864")]
	private void Update()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xAB6238", Offset = "0xAB6238", VA = "0xAB6238")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xAB6458", Offset = "0xAB6458", VA = "0xAB6458")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xAB65DC", Offset = "0xAB65DC", VA = "0xAB65DC")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xAB66C0", Offset = "0xAB66C0", VA = "0xAB66C0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000103")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20005B3")]
	private enum PlaybackState
	{
		[Token(Token = "0x4002A3A")]
		Playing,
		[Token(Token = "0x4002A3B")]
		Paused,
		[Token(Token = "0x4002A3C")]
		Rewinding,
		[Token(Token = "0x4002A3D")]
		FastForwarding
	}

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xAB6CD0", Offset = "0xAB6CD0", VA = "0xAB6CD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xAB6F84", Offset = "0xAB6F84", VA = "0xAB6F84")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xAB70B0", Offset = "0xAB70B0", VA = "0xAB70B0")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xAB71BC", Offset = "0xAB71BC", VA = "0xAB71BC")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xAB729C", Offset = "0xAB729C", VA = "0xAB729C")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xAB7190", Offset = "0xAB7190", VA = "0xAB7190")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xAB7364", Offset = "0xAB7364", VA = "0xAB7364")]
	private void Update()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xAB6E78", Offset = "0xAB6E78", VA = "0xAB6E78")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xAB76F8", Offset = "0xAB76F8", VA = "0xAB76F8")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000104")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859620", Offset = "0x859620")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20005B4")]
	private enum CubeFace
	{
		[Token(Token = "0x4002A3F")]
		Right,
		[Token(Token = "0x4002A40")]
		Left,
		[Token(Token = "0x4002A41")]
		Top,
		[Token(Token = "0x4002A42")]
		Bottom,
		[Token(Token = "0x4002A43")]
		Front,
		[Token(Token = "0x4002A44")]
		Back,
		[Token(Token = "0x4002A45")]
		COUNT
	}

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x9E2A68", Offset = "0x9E2A68", VA = "0x9E2A68")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x9E2BC8", Offset = "0x9E2BC8", VA = "0x9E2BC8")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x9E2D84", Offset = "0x9E2D84", VA = "0x9E2D84")]
	private void Update()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x9E325C", Offset = "0x9E325C", VA = "0x9E325C")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x9E3530", Offset = "0x9E3530", VA = "0x9E3530")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x9E478C", Offset = "0x9E478C", VA = "0x9E478C")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x9E47EC", Offset = "0x9E47EC", VA = "0x9E47EC")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x9E38B0", Offset = "0x9E38B0", VA = "0x9E38B0")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x9E48D4", Offset = "0x9E48D4", VA = "0x9E48D4")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x9E4AC0", Offset = "0x9E4AC0", VA = "0x9E4AC0")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x9E3D68", Offset = "0x9E3D68", VA = "0x9E3D68")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x9E4090", Offset = "0x9E4090", VA = "0x9E4090")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x9E43E8", Offset = "0x9E43E8", VA = "0x9E43E8")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x9E4C74", Offset = "0x9E4C74", VA = "0x9E4C74")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000105")]
public static class VectorUtil
{
	[Token(Token = "0x600068B")]
	[Address(RVA = "0xC147CC", Offset = "0xC147CC", VA = "0xC147CC")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000106")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xB09DB8", Offset = "0xB09DB8", VA = "0xB09DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xB0A188", Offset = "0xB0A188", VA = "0xB0A188")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xB0A240", Offset = "0xB0A240", VA = "0xB0A240")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xB0A440", Offset = "0xB0A440", VA = "0xB0A440")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xB0A528", Offset = "0xB0A528", VA = "0xB0A528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xB0A604", Offset = "0xB0A604", VA = "0xB0A604")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xB0A670", Offset = "0xB0A670", VA = "0xB0A670")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xB0A678", Offset = "0xB0A678", VA = "0xB0A678")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DF24", Offset = "0x86DF24")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xB0A6D4", Offset = "0xB0A6D4", VA = "0xB0A6D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DF34", Offset = "0x86DF34")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xB0A730", Offset = "0xB0A730", VA = "0xB0A730")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DF44", Offset = "0x86DF44")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xB0A78C", Offset = "0xB0A78C", VA = "0xB0A78C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86DF54", Offset = "0x86DF54")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000107")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20005B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D110", Offset = "0x85D110")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700038E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60028E8")]
			[Address(RVA = "0xB84EA0", Offset = "0xB84EA0", VA = "0xB84EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60028EA")]
			[Address(RVA = "0xB84F08", Offset = "0xB84F08", VA = "0xB84F08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0xB84D50", Offset = "0xB84D50", VA = "0xB84D50")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0xB84D84", Offset = "0xB84D84", VA = "0xB84D84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60028E7")]
		[Address(RVA = "0xB84D88", Offset = "0xB84D88", VA = "0xB84D88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0xB84EA8", Offset = "0xB84EA8", VA = "0xB84EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xB84A54", Offset = "0xB84A54", VA = "0xB84A54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xB84B54", Offset = "0xB84B54", VA = "0xB84B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xB84AE4", Offset = "0xB84AE4", VA = "0xB84AE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86DF64", Offset = "0x86DF64")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xB84D7C", Offset = "0xB84D7C", VA = "0xB84D7C")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000108")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x860CE0", Offset = "0x860CE0")]
	public int SubdivisionsU;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x860CFC", Offset = "0x860CFC")]
	public int SubdivisionsV;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xC036E8", Offset = "0xC036E8", VA = "0xC036E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xC041A0", Offset = "0xC041A0", VA = "0xC041A0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000109")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x170000A0")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600069D")]
		[Address(RVA = "0xA10FFC", Offset = "0xA10FFC", VA = "0xA10FFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xA11054", Offset = "0xA11054", VA = "0xA11054")]
	public void Start()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xA11398", Offset = "0xA11398", VA = "0xA11398")]
	public void Update()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xA1147C", Offset = "0xA1147C", VA = "0xA1147C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x86DFC8", Offset = "0x86DFC8")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60006A1")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60006A3")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60006A4")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60006A5")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60006A6")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60006A7")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60006A8")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xA114E4", Offset = "0xA114E4", VA = "0xA114E4")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xA11520", Offset = "0xA11520", VA = "0xA11520")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xA11594", Offset = "0xA11594", VA = "0xA11594")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xA116F0", Offset = "0xA116F0", VA = "0xA116F0")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xA117C4", Offset = "0xA117C4", VA = "0xA117C4")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xA112A4", Offset = "0xA112A4", VA = "0xA112A4")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xA11884", Offset = "0xA11884", VA = "0xA11884")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xA118EC", Offset = "0xA118EC", VA = "0xA118EC")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xA119D0", Offset = "0xA119D0", VA = "0xA119D0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200010A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8596B4", Offset = "0x8596B4")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20005B6")]
	public enum DrawMode
	{
		[Token(Token = "0x4002A4A")]
		Opaque,
		[Token(Token = "0x4002A4B")]
		OpaqueWithClip,
		[Token(Token = "0x4002A4C")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4002A4D")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x170000A1")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x9E284C", Offset = "0x9E284C", VA = "0x9E284C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x9E28E0", Offset = "0x9E28E0", VA = "0x9E28E0")]
		set
		{
		}
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x9E11DC", Offset = "0x9E11DC", VA = "0x9E11DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x9E1E4C", Offset = "0x9E1E4C", VA = "0x9E1E4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x9E1ED0", Offset = "0x9E1ED0", VA = "0x9E1ED0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x9E1FC4", Offset = "0x9E1FC4", VA = "0x9E1FC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x9E20B8", Offset = "0x9E20B8", VA = "0x9E20B8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x9E22BC", Offset = "0x9E22BC", VA = "0x9E22BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x9E29B0", Offset = "0x9E29B0", VA = "0x9E29B0")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200010B")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D120", Offset = "0x85D120")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0xE6654C", Offset = "0xE6654C", VA = "0xE6654C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60028EC")]
		[Address(RVA = "0xE6663C", Offset = "0xE6663C", VA = "0xE6663C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xE663AC", Offset = "0xE663AC", VA = "0xE663AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xE66554", Offset = "0xE66554", VA = "0xE66554")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xE66634", Offset = "0xE66634", VA = "0xE66634")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x200010C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x859718", Offset = "0x859718")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20005B8")]
	public enum RotationAxes
	{
		[Token(Token = "0x4002A51")]
		MouseXAndY,
		[Token(Token = "0x4002A52")]
		MouseX,
		[Token(Token = "0x4002A53")]
		MouseY
	}

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xAB3C7C", Offset = "0xAB3C7C", VA = "0xAB3C7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xAB3EDC", Offset = "0xAB3EDC", VA = "0xAB3EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xAB3F9C", Offset = "0xAB3F9C", VA = "0xAB3F9C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200010D")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20005B9")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4002A55")]
		Uninitialized = -1,
		[Token(Token = "0x4002A56")]
		NotEnabled,
		[Token(Token = "0x4002A57")]
		Success,
		[Token(Token = "0x4002A58")]
		StreamError,
		[Token(Token = "0x4002A59")]
		ProcessError,
		[Token(Token = "0x4002A5A")]
		MaxStatValue
	}

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x170000A2")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xABA3B0", Offset = "0xABA3B0", VA = "0xABA3B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xABA3B8", Offset = "0xABA3B8", VA = "0xABA3B8")]
		set
		{
		}
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xABA3C4", Offset = "0xABA3C4", VA = "0xABA3C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xABA5E0", Offset = "0xABA5E0", VA = "0xABA5E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xABA83C", Offset = "0xABA83C", VA = "0xABA83C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200010E")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20005BA")]
	private enum Parameters
	{
		[Token(Token = "0x4002A5C")]
		P_GAIN,
		[Token(Token = "0x4002A5D")]
		P_USEINVSQR,
		[Token(Token = "0x4002A5E")]
		P_NEAR,
		[Token(Token = "0x4002A5F")]
		P_FAR,
		[Token(Token = "0x4002A60")]
		P_RADIUS,
		[Token(Token = "0x4002A61")]
		P_DISABLE_RFL,
		[Token(Token = "0x4002A62")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4002A63")]
		P_AMBISTAT,
		[Token(Token = "0x4002A64")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4002A65")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4002A66")]
		P_SENDLEVEL,
		[Token(Token = "0x4002A67")]
		P_NUM
	}

	[Token(Token = "0x400076B")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x170000A3")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xABABA8", Offset = "0xABABA8", VA = "0xABABA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xABABB0", Offset = "0xABABB0", VA = "0xABABB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public float Gain
	{
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xABABBC", Offset = "0xABABBC", VA = "0xABABBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xABABC4", Offset = "0xABABC4", VA = "0xABABC4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xABAC48", Offset = "0xABAC48", VA = "0xABAC48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xABAC50", Offset = "0xABAC50", VA = "0xABAC50")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public float Near
	{
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xABAC5C", Offset = "0xABAC5C", VA = "0xABAC5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xABAC64", Offset = "0xABAC64", VA = "0xABAC64")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public float Far
	{
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xABACEC", Offset = "0xABACEC", VA = "0xABACEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xABACF4", Offset = "0xABACF4", VA = "0xABACF4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xABAD7C", Offset = "0xABAD7C", VA = "0xABAD7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xABAD84", Offset = "0xABAD84", VA = "0xABAD84")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public float ReverbSend
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xABAE0C", Offset = "0xABAE0C", VA = "0xABAE0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xABAE14", Offset = "0xABAE14", VA = "0xABAE14")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public bool EnableRfl
	{
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xABAE9C", Offset = "0xABAE9C", VA = "0xABAE9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xABAEA4", Offset = "0xABAEA4", VA = "0xABAEA4")]
		set
		{
		}
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xABA8C0", Offset = "0xABA8C0", VA = "0xABA8C0")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x86E000", Offset = "0x86E000")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xABAAC8", Offset = "0xABAAC8", VA = "0xABAAC8")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xABAEB0", Offset = "0xABAEB0", VA = "0xABAEB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xABB024", Offset = "0xABB024", VA = "0xABB024")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xABB028", Offset = "0xABB028", VA = "0xABB028")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xABAF1C", Offset = "0xABAF1C", VA = "0xABAF1C")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xABB0F0", Offset = "0xABB0F0", VA = "0xABB0F0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xABB550", Offset = "0xABB550", VA = "0xABB550")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xABAA48", Offset = "0xABAA48", VA = "0xABAA48")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xABB620", Offset = "0xABB620", VA = "0xABB620")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x200010F")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000776")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000778")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xABB640", Offset = "0xABB640", VA = "0xABB640")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xABB64C", Offset = "0xABB64C", VA = "0xABB64C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xABB704", Offset = "0xABB704", VA = "0xABB704")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xABB684", Offset = "0xABB684", VA = "0xABB684")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xABB784", Offset = "0xABB784", VA = "0xABB784")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000110")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20005BB")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20005BC")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400077F")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x170000AB")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xABE200", Offset = "0xABE200", VA = "0xABE200")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AC")]
	public string filePath
	{
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xABE28C", Offset = "0xABE28C", VA = "0xABE28C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xABE304", Offset = "0xABE304", VA = "0xABE304")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xABE44C", Offset = "0xABE44C", VA = "0xABE44C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xABE450", Offset = "0xABE450", VA = "0xABE450")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xABE9B0", Offset = "0xABE9B0", VA = "0xABE9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xABED48", Offset = "0xABED48", VA = "0xABED48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xABEEA4", Offset = "0xABEEA4", VA = "0xABEEA4")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xABF58C", Offset = "0xABF58C", VA = "0xABF58C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xABF5C8", Offset = "0xABF5C8", VA = "0xABF5C8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xAC0DE8", Offset = "0xAC0DE8", VA = "0xAC0DE8")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xAC0CC0", Offset = "0xAC0CC0", VA = "0xAC0CC0")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xABE7E8", Offset = "0xABE7E8", VA = "0xABE7E8")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xABE61C", Offset = "0xABE61C", VA = "0xABE61C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xAC13FC", Offset = "0xAC13FC", VA = "0xAC13FC")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xAC1838", Offset = "0xAC1838", VA = "0xAC1838")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000111")]
internal class ONSPPropagation
{
	[Token(Token = "0x20005BD")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4002A6E")]
		Int8,
		[Token(Token = "0x4002A6F")]
		UInt8,
		[Token(Token = "0x4002A70")]
		Int16,
		[Token(Token = "0x4002A71")]
		UInt16,
		[Token(Token = "0x4002A72")]
		Int32,
		[Token(Token = "0x4002A73")]
		UInt32,
		[Token(Token = "0x4002A74")]
		Int64,
		[Token(Token = "0x4002A75")]
		UInt64,
		[Token(Token = "0x4002A76")]
		Float16,
		[Token(Token = "0x4002A77")]
		Float32,
		[Token(Token = "0x4002A78")]
		Float64
	}

	[Token(Token = "0x20005BE")]
	public class ClientType
	{
		[Token(Token = "0x4002A79")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4002A7A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4002A7B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4002A7C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4002A7D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4002A7E")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4002A7F")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4002A80")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4002A81")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4002A82")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4002A83")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4002A84")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4002A85")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4002A86")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4002A87")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60028ED")]
		[Address(RVA = "0xABBC38", Offset = "0xABBC38", VA = "0xABBC38")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20005BF")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60028EE")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60028EF")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60028F0")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60028F1")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60028F2")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60028F3")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60028F4")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60028F5")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60028F6")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60028F7")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60028F8")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60028F9")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60028FA")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60028FB")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60028FC")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20005C0")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4002A88")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000390")]
		private IntPtr context
		{
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0xABC8A8", Offset = "0xABC8A8", VA = "0xABC8A8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60028FE")]
		[Address(RVA = "0xABC90C", Offset = "0xABC90C", VA = "0xABC90C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60028FF")]
		[Address(RVA = "0xABC99C", Offset = "0xABC99C", VA = "0xABC99C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002900")]
		[Address(RVA = "0xABCA2C", Offset = "0xABCA2C", VA = "0xABCA2C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002901")]
		[Address(RVA = "0xABCA50", Offset = "0xABCA50", VA = "0xABCA50")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002902")]
		[Address(RVA = "0xABCAE0", Offset = "0xABCAE0", VA = "0xABCAE0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002903")]
		[Address(RVA = "0xABCB04", Offset = "0xABCB04", VA = "0xABCB04")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002904")]
		[Address(RVA = "0xABCB90", Offset = "0xABCB90", VA = "0xABCB90", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002905")]
		[Address(RVA = "0xABCBB4", Offset = "0xABCBB4", VA = "0xABCBB4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002906")]
		[Address(RVA = "0xABCC34", Offset = "0xABCC34", VA = "0xABCC34", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002907")]
		[Address(RVA = "0xABCC3C", Offset = "0xABCC3C", VA = "0xABCC3C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002908")]
		[Address(RVA = "0xABCD5C", Offset = "0xABCD5C", VA = "0xABCD5C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002909")]
		[Address(RVA = "0xABCE54", Offset = "0xABCE54", VA = "0xABCE54")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600290A")]
		[Address(RVA = "0xABCEEC", Offset = "0xABCEEC", VA = "0xABCEEC", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600290B")]
		[Address(RVA = "0xABCEF8", Offset = "0xABCEF8", VA = "0xABCEF8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600290C")]
		[Address(RVA = "0xABD024", Offset = "0xABD024", VA = "0xABD024", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600290D")]
		[Address(RVA = "0xABD030", Offset = "0xABD030", VA = "0xABD030")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600290E")]
		[Address(RVA = "0xABD0DC", Offset = "0xABD0DC", VA = "0xABD0DC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600290F")]
		[Address(RVA = "0xABD0E8", Offset = "0xABD0E8", VA = "0xABD0E8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002910")]
		[Address(RVA = "0xABD194", Offset = "0xABD194", VA = "0xABD194", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002911")]
		[Address(RVA = "0xABD1A0", Offset = "0xABD1A0", VA = "0xABD1A0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002912")]
		[Address(RVA = "0xABD24C", Offset = "0xABD24C", VA = "0xABD24C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002913")]
		[Address(RVA = "0xABD258", Offset = "0xABD258", VA = "0xABD258")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002914")]
		[Address(RVA = "0xABD2E4", Offset = "0xABD2E4", VA = "0xABD2E4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002915")]
		[Address(RVA = "0xABD308", Offset = "0xABD308", VA = "0xABD308")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002916")]
		[Address(RVA = "0xABD388", Offset = "0xABD388", VA = "0xABD388", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002917")]
		[Address(RVA = "0xABD390", Offset = "0xABD390", VA = "0xABD390")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002918")]
		[Address(RVA = "0xABD438", Offset = "0xABD438", VA = "0xABD438", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002919")]
		[Address(RVA = "0xABD444", Offset = "0xABD444", VA = "0xABD444")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600291A")]
		[Address(RVA = "0xABD4EC", Offset = "0xABD4EC", VA = "0xABD4EC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600291B")]
		[Address(RVA = "0xABD4FC", Offset = "0xABD4FC", VA = "0xABD4FC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600291C")]
		[Address(RVA = "0xABD58C", Offset = "0xABD58C", VA = "0xABD58C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0xABBBE4", Offset = "0xABBBE4", VA = "0xABBBE4")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20005C1")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4002A8A")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000391")]
		private IntPtr context
		{
			[Token(Token = "0x600291E")]
			[Address(RVA = "0xABD598", Offset = "0xABD598", VA = "0xABD598")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600291F")]
		[Address(RVA = "0xABBA2C", Offset = "0xABBA2C", VA = "0xABBA2C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002920")]
		[Address(RVA = "0xABD5FC", Offset = "0xABD5FC", VA = "0xABD5FC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002921")]
		[Address(RVA = "0xABD68C", Offset = "0xABD68C", VA = "0xABD68C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002922")]
		[Address(RVA = "0xABD6B0", Offset = "0xABD6B0", VA = "0xABD6B0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002923")]
		[Address(RVA = "0xABD740", Offset = "0xABD740", VA = "0xABD740", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002924")]
		[Address(RVA = "0xABD764", Offset = "0xABD764", VA = "0xABD764")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002925")]
		[Address(RVA = "0xABD7F4", Offset = "0xABD7F4", VA = "0xABD7F4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002926")]
		[Address(RVA = "0xABD818", Offset = "0xABD818", VA = "0xABD818")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002927")]
		[Address(RVA = "0xABD898", Offset = "0xABD898", VA = "0xABD898", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002928")]
		[Address(RVA = "0xABD8A0", Offset = "0xABD8A0", VA = "0xABD8A0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002929")]
		[Address(RVA = "0xABD9C0", Offset = "0xABD9C0", VA = "0xABD9C0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600292A")]
		[Address(RVA = "0xABDAB8", Offset = "0xABDAB8", VA = "0xABDAB8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600292B")]
		[Address(RVA = "0xABDB50", Offset = "0xABDB50", VA = "0xABDB50", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600292C")]
		[Address(RVA = "0xABDB5C", Offset = "0xABDB5C", VA = "0xABDB5C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600292D")]
		[Address(RVA = "0xABDC88", Offset = "0xABDC88", VA = "0xABDC88", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600292E")]
		[Address(RVA = "0xABDC94", Offset = "0xABDC94", VA = "0xABDC94")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600292F")]
		[Address(RVA = "0xABDD40", Offset = "0xABDD40", VA = "0xABDD40", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002930")]
		[Address(RVA = "0xABDD4C", Offset = "0xABDD4C", VA = "0xABDD4C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002931")]
		[Address(RVA = "0xABDDF8", Offset = "0xABDDF8", VA = "0xABDDF8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002932")]
		[Address(RVA = "0xABDE04", Offset = "0xABDE04", VA = "0xABDE04")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002933")]
		[Address(RVA = "0xABDEB0", Offset = "0xABDEB0", VA = "0xABDEB0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002934")]
		[Address(RVA = "0xABDEBC", Offset = "0xABDEBC", VA = "0xABDEBC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002935")]
		[Address(RVA = "0xABDF4C", Offset = "0xABDF4C", VA = "0xABDF4C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002936")]
		[Address(RVA = "0xABDF70", Offset = "0xABDF70", VA = "0xABDF70")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002937")]
		[Address(RVA = "0xABDFF0", Offset = "0xABDFF0", VA = "0xABDFF0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002938")]
		[Address(RVA = "0xABDFF8", Offset = "0xABDFF8", VA = "0xABDFF8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002939")]
		[Address(RVA = "0xABE0A0", Offset = "0xABE0A0", VA = "0xABE0A0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600293A")]
		[Address(RVA = "0xABE0AC", Offset = "0xABE0AC", VA = "0xABE0AC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600293B")]
		[Address(RVA = "0xABE154", Offset = "0xABE154", VA = "0xABE154", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600293C")]
		[Address(RVA = "0xABE164", Offset = "0xABE164", VA = "0xABE164")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600293D")]
		[Address(RVA = "0xABE1F4", Offset = "0xABE1F4", VA = "0xABE1F4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0xABBABC", Offset = "0xABBABC", VA = "0xABBABC")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20005C2")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4002A8C")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000392")]
		private IntPtr context
		{
			[Token(Token = "0x600293F")]
			[Address(RVA = "0xABBC40", Offset = "0xABBC40", VA = "0xABBC40")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002940")]
		[Address(RVA = "0xABBB08", Offset = "0xABBB08", VA = "0xABBB08")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002941")]
		[Address(RVA = "0xABBCA4", Offset = "0xABBCA4", VA = "0xABBCA4")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002942")]
		[Address(RVA = "0xABBD34", Offset = "0xABBD34", VA = "0xABBD34", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002943")]
		[Address(RVA = "0xABBD58", Offset = "0xABBD58", VA = "0xABBD58")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002944")]
		[Address(RVA = "0xABBDE8", Offset = "0xABBDE8", VA = "0xABBDE8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002945")]
		[Address(RVA = "0xABBE0C", Offset = "0xABBE0C", VA = "0xABBE0C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002946")]
		[Address(RVA = "0xABBE9C", Offset = "0xABBE9C", VA = "0xABBE9C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002947")]
		[Address(RVA = "0xABBEC0", Offset = "0xABBEC0", VA = "0xABBEC0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002948")]
		[Address(RVA = "0xABBF40", Offset = "0xABBF40", VA = "0xABBF40", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002949")]
		[Address(RVA = "0xABBF48", Offset = "0xABBF48", VA = "0xABBF48")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600294A")]
		[Address(RVA = "0xABC068", Offset = "0xABC068", VA = "0xABC068", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600294B")]
		[Address(RVA = "0xABC160", Offset = "0xABC160", VA = "0xABC160")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600294C")]
		[Address(RVA = "0xABC1F8", Offset = "0xABC1F8", VA = "0xABC1F8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600294D")]
		[Address(RVA = "0xABC204", Offset = "0xABC204", VA = "0xABC204")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600294E")]
		[Address(RVA = "0xABC330", Offset = "0xABC330", VA = "0xABC330", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600294F")]
		[Address(RVA = "0xABC33C", Offset = "0xABC33C", VA = "0xABC33C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002950")]
		[Address(RVA = "0xABC3E8", Offset = "0xABC3E8", VA = "0xABC3E8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002951")]
		[Address(RVA = "0xABC3F4", Offset = "0xABC3F4", VA = "0xABC3F4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002952")]
		[Address(RVA = "0xABC4A0", Offset = "0xABC4A0", VA = "0xABC4A0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002953")]
		[Address(RVA = "0xABC4AC", Offset = "0xABC4AC", VA = "0xABC4AC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002954")]
		[Address(RVA = "0xABC558", Offset = "0xABC558", VA = "0xABC558", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002955")]
		[Address(RVA = "0xABC564", Offset = "0xABC564", VA = "0xABC564")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002956")]
		[Address(RVA = "0xABC5F4", Offset = "0xABC5F4", VA = "0xABC5F4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002957")]
		[Address(RVA = "0xABC618", Offset = "0xABC618", VA = "0xABC618")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xABC698", Offset = "0xABC698", VA = "0xABC698", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002959")]
		[Address(RVA = "0xABC6A0", Offset = "0xABC6A0", VA = "0xABC6A0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600295A")]
		[Address(RVA = "0xABC748", Offset = "0xABC748", VA = "0xABC748", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600295B")]
		[Address(RVA = "0xABC754", Offset = "0xABC754", VA = "0xABC754")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600295C")]
		[Address(RVA = "0xABC7FC", Offset = "0xABC7FC", VA = "0xABC7FC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600295D")]
		[Address(RVA = "0xABC80C", Offset = "0xABC80C", VA = "0xABC80C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xABC89C", Offset = "0xABC89C", VA = "0xABC89C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0xABBB98", Offset = "0xABBB98", VA = "0xABBB98")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x170000AD")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xABB794", Offset = "0xABB794", VA = "0xABB794")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xABB804", Offset = "0xABB804", VA = "0xABB804")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xABBC30", Offset = "0xABBC30", VA = "0xABBC30")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000112")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20005C3")]
	public enum Preset
	{
		[Token(Token = "0x4002A8F")]
		Custom,
		[Token(Token = "0x4002A90")]
		AcousticTile,
		[Token(Token = "0x4002A91")]
		Brick,
		[Token(Token = "0x4002A92")]
		BrickPainted,
		[Token(Token = "0x4002A93")]
		Carpet,
		[Token(Token = "0x4002A94")]
		CarpetHeavy,
		[Token(Token = "0x4002A95")]
		CarpetHeavyPadded,
		[Token(Token = "0x4002A96")]
		CeramicTile,
		[Token(Token = "0x4002A97")]
		Concrete,
		[Token(Token = "0x4002A98")]
		ConcreteRough,
		[Token(Token = "0x4002A99")]
		ConcreteBlock,
		[Token(Token = "0x4002A9A")]
		ConcreteBlockPainted,
		[Token(Token = "0x4002A9B")]
		Curtain,
		[Token(Token = "0x4002A9C")]
		Foliage,
		[Token(Token = "0x4002A9D")]
		Glass,
		[Token(Token = "0x4002A9E")]
		GlassHeavy,
		[Token(Token = "0x4002A9F")]
		Grass,
		[Token(Token = "0x4002AA0")]
		Gravel,
		[Token(Token = "0x4002AA1")]
		GypsumBoard,
		[Token(Token = "0x4002AA2")]
		PlasterOnBrick,
		[Token(Token = "0x4002AA3")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4002AA4")]
		Soil,
		[Token(Token = "0x4002AA5")]
		SoundProof,
		[Token(Token = "0x4002AA6")]
		Snow,
		[Token(Token = "0x4002AA7")]
		Steel,
		[Token(Token = "0x4002AA8")]
		Water,
		[Token(Token = "0x4002AA9")]
		WoodThin,
		[Token(Token = "0x4002AAA")]
		WoodThick,
		[Token(Token = "0x4002AAB")]
		WoodFloor,
		[Token(Token = "0x4002AAC")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20005C4")]
	public sealed class Point
	{
		[Token(Token = "0x4002AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4002AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6002960")]
		[Address(RVA = "0xAC9740", Offset = "0xAC9740", VA = "0xAC9740")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0xAC9888", Offset = "0xAC9888", VA = "0xAC9888")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0xAC98F8", Offset = "0xAC98F8", VA = "0xAC98F8")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20005C5")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x85D130", Offset = "0x85D130")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000833")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E708", Offset = "0x85E708")]
		private sealed class <>c
		{
			[Token(Token = "0x40034EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40034ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40034EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6003212")]
			[Address(RVA = "0xAC9D50", Offset = "0xAC9D50", VA = "0xAC9D50")]
			public <>c()
			{
			}

			[Token(Token = "0x6003213")]
			[Address(RVA = "0xAC9D58", Offset = "0xAC9D58", VA = "0xAC9D58")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6003214")]
			[Address(RVA = "0xAC9D70", Offset = "0xAC9D70", VA = "0xAC9D70")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4002AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4002AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000393")]
		public float Item
		{
			[Token(Token = "0x6002963")]
			[Address(RVA = "0xAC9930", Offset = "0xAC9930", VA = "0xAC9930")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xAC9810", Offset = "0xAC9810", VA = "0xAC9810")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860E18", Offset = "0x860E18")]
	public Spectrum absorption;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860E50", Offset = "0x860E50")]
	public Spectrum transmission;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x860E88", Offset = "0x860E88")]
	public Spectrum scattering;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170000AE")]
	public Preset preset
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xAC1910", Offset = "0xAC1910", VA = "0xAC1910")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xAC1918", Offset = "0xAC1918", VA = "0xAC1918")]
		set
		{
		}
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xAC1940", Offset = "0xAC1940", VA = "0xAC1940")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xAC1290", Offset = "0xAC1290", VA = "0xAC1290")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xAC1F24", Offset = "0xAC1F24", VA = "0xAC1F24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xAC1F28", Offset = "0xAC1F28", VA = "0xAC1F28")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xAC1944", Offset = "0xAC1944", VA = "0xAC1944")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xAC0B2C", Offset = "0xAC0B2C", VA = "0xAC0B2C")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xAC200C", Offset = "0xAC200C", VA = "0xAC200C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xAC246C", Offset = "0xAC246C", VA = "0xAC246C")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xAC28CC", Offset = "0xAC28CC", VA = "0xAC28CC")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xAC2D2C", Offset = "0xAC2D2C", VA = "0xAC2D2C")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xAC318C", Offset = "0xAC318C", VA = "0xAC318C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xAC35EC", Offset = "0xAC35EC", VA = "0xAC35EC")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xAC3A4C", Offset = "0xAC3A4C", VA = "0xAC3A4C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xAC3EAC", Offset = "0xAC3EAC", VA = "0xAC3EAC")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xAC430C", Offset = "0xAC430C", VA = "0xAC430C")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xAC476C", Offset = "0xAC476C", VA = "0xAC476C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xAC4BCC", Offset = "0xAC4BCC", VA = "0xAC4BCC")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xAC502C", Offset = "0xAC502C", VA = "0xAC502C")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xAC548C", Offset = "0xAC548C", VA = "0xAC548C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xAC58EC", Offset = "0xAC58EC", VA = "0xAC58EC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xAC5D44", Offset = "0xAC5D44", VA = "0xAC5D44")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xAC61A4", Offset = "0xAC61A4", VA = "0xAC61A4")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xAC64E0", Offset = "0xAC64E0", VA = "0xAC64E0")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xAC681C", Offset = "0xAC681C", VA = "0xAC681C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xAC6C7C", Offset = "0xAC6C7C", VA = "0xAC6C7C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xAC70DC", Offset = "0xAC70DC", VA = "0xAC70DC")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xAC753C", Offset = "0xAC753C", VA = "0xAC753C")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xAC7878", Offset = "0xAC7878", VA = "0xAC7878")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xAC79D4", Offset = "0xAC79D4", VA = "0xAC79D4")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xAC7D10", Offset = "0xAC7D10", VA = "0xAC7D10")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xAC8168", Offset = "0xAC8168", VA = "0xAC8168")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xAC85C8", Offset = "0xAC85C8", VA = "0xAC85C8")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xAC8A20", Offset = "0xAC8A20", VA = "0xAC8A20")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xAC8E80", Offset = "0xAC8E80", VA = "0xAC8E80")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xAC92E0", Offset = "0xAC92E0", VA = "0xAC92E0")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xAC9778", Offset = "0xAC9778", VA = "0xAC9778")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000113")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xAC9D88", Offset = "0xAC9D88", VA = "0xAC9D88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xAC9E58", Offset = "0xAC9E58", VA = "0xAC9E58")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000114")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x170000AF")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0xABA934", Offset = "0xABA934", VA = "0xABA934")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xACA414", Offset = "0xACA414", VA = "0xACA414")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000115")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x400078A")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000726")]
	[Address(RVA = "0xACA424", Offset = "0xACA424", VA = "0xACA424")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xACA4BC", Offset = "0xACA4BC", VA = "0xACA4BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xACA5C8", Offset = "0xACA5C8", VA = "0xACA5C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xACA5CC", Offset = "0xACA5CC", VA = "0xACA5CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xACA5D0", Offset = "0xACA5D0", VA = "0xACA5D0")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000116")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20005C6")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000799")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400079F")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xEE32F4", Offset = "0xEE32F4", VA = "0xEE32F4")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xEE3124", Offset = "0xEE3124", VA = "0xEE3124")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x86E014", Offset = "0x86E014")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xEE332C", Offset = "0xEE332C", VA = "0xEE332C")]
	private void Start()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xEE3460", Offset = "0xEE3460", VA = "0xEE3460")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xEE3554", Offset = "0xEE3554", VA = "0xEE3554")]
	private void Update()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xEE3F0C", Offset = "0xEE3F0C", VA = "0xEE3F0C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000731")]
	[Address(RVA = "0xEE33CC", Offset = "0xEE33CC", VA = "0xEE33CC")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000732")]
	[Address(RVA = "0xEE34C4", Offset = "0xEE34C4", VA = "0xEE34C4")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000733")]
	[Address(RVA = "0xEE3C74", Offset = "0xEE3C74", VA = "0xEE3C74")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000734")]
	[Address(RVA = "0xEE3CF4", Offset = "0xEE3CF4", VA = "0xEE3CF4")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000735")]
	[Address(RVA = "0xEE3D7C", Offset = "0xEE3D7C", VA = "0xEE3D7C")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000736")]
	[Address(RVA = "0xEE3E04", Offset = "0xEE3E04", VA = "0xEE3E04")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000737")]
	[Address(RVA = "0xEE3E84", Offset = "0xEE3E84", VA = "0xEE3E84")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000738")]
	[Address(RVA = "0xEE4D44", Offset = "0xEE4D44", VA = "0xEE4D44")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000739")]
	[Address(RVA = "0xEE4DEC", Offset = "0xEE4DEC", VA = "0xEE4DEC")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xEE4E94", Offset = "0xEE4E94", VA = "0xEE4E94")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000117")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000118")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xAC9E68", Offset = "0xAC9E68", VA = "0xAC9E68")]
	private void Start()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xAC9E6C", Offset = "0xAC9E6C", VA = "0xAC9E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xAC9E70", Offset = "0xAC9E70", VA = "0xAC9E70")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xAC9FD8", Offset = "0xAC9FD8", VA = "0xAC9FD8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xAC9EBC", Offset = "0xAC9EBC", VA = "0xAC9EBC")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xAC9F4C", Offset = "0xAC9F4C", VA = "0xAC9F4C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xACA024", Offset = "0xACA024", VA = "0xACA024")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xACA0BC", Offset = "0xACA0BC", VA = "0xACA0BC")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xACA224", Offset = "0xACA224", VA = "0xACA224")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xACA38C", Offset = "0xACA38C", VA = "0xACA38C")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000119")]
public class PIDI_ForceUpdate : MonoBehaviour
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool affectAllReflections;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool forceSinglePassCompatibility;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PIDI_PlanarReflection[] reflections;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useSRP;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera m_Camera;

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xBA3300", Offset = "0xBA3300", VA = "0xBA3300")]
	public void Start()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xBA3660", Offset = "0xBA3660", VA = "0xBA3660")]
	private void SRPRender(Camera cam)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xBA5A28", Offset = "0xBA5A28", VA = "0xBA5A28")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xBA5C30", Offset = "0xBA5C30", VA = "0xBA5C30")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xBA5C34", Offset = "0xBA5C34", VA = "0xBA5C34")]
	public PIDI_ForceUpdate()
	{
	}
}
[Token(Token = "0x200011A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859750", Offset = "0x859750")]
[ExecuteInEditMode]
public class PIDI_PlanarReflection : MonoBehaviour
{
	[Token(Token = "0x20005C7")]
	public struct ReflectionCamera
	{
		[Token(Token = "0x4002AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Camera reflector;

		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Camera source;

		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PIDI_PlanarReflection owner;

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x766CC0", Offset = "0x766CC0", VA = "0x766CC0")]
		public ReflectionCamera(Camera v_ref, Camera v_source, PIDI_PlanarReflection v_owner)
		{
		}
	}

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ReflectionCamera[] v_reflectionPool;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ReflectionCamera> v_reflectionCameras;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderingPath v_renderingPath;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture v_staticTexture;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture v_staticDepth;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool b_displayGizmos;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool b_updateInEditMode;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool b_useFixedUptade;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool b_ignoreSkybox;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color v_backdropColor;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int v_timesPerSecond;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool b_useGlobalSettings;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int v_maxResolution;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int v_forcedQualityDowngrade;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool b_useExplicitCameras;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool b_useExplicitNormal;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool b_localNormal;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool b_srpMode;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 v_explicitNormal;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Shader depthShader;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool b_forcePower2;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool b_useScreenResolution;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool b_useDynamicResolution;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int v_dynRes;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float v_resMultiplier;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector2 v_minMaxDistance;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool b_useReflectionsPool;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int v_poolSize;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float v_disableOnDistance;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector2 v_resolution;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2 v_oldRes;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int v_pixelLights;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public LayerMask v_reflectLayers;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool b_simplifyLandscapes;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int v_agressiveness;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float v_shadowDistance;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float v_clippingOffset;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float v_nearClipModifier;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float v_farClipModifier;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool b_safeClipping;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool b_realOblique;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector2 v_mirrorSize;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RenderTexture v_oldRend;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture v_oldDepth;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RenderTexture v_oldDepthRight;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float v_nextUpdate;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 v_surfaceNormal;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool b_isRendering;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private RenderTexture v_refTexture;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RenderTexture v_refTextureRight;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float v_oldDistance;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float v_distance;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Camera v_reflectionCam;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Camera v_srcCamera;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool b_oldUsePool;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool b_willRender;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Mesh v_defaultMesh;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Material v_defaultMat;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Material v_matInstance;

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xBA5C94", Offset = "0xBA5C94", VA = "0xBA5C94")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xBA63D8", Offset = "0xBA63D8", VA = "0xBA63D8")]
	public void Update()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xBA6468", Offset = "0xBA6468", VA = "0xBA6468")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xBA3870", Offset = "0xBA3870", VA = "0xBA3870")]
	public void OnWillRenderObject(Camera withCamera, int useStereoEye = -1)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xBA9A70", Offset = "0xBA9A70", VA = "0xBA9A70")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xBA5D7C", Offset = "0xBA5D7C", VA = "0xBA5D7C")]
	public static void GenerateReflectionsPool(int v_size)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xBA88AC", Offset = "0xBA88AC", VA = "0xBA88AC")]
	private void GetReflectionCamera(Camera v_source, out Camera v_reflected, int useStereoEye = -1)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xBA9920", Offset = "0xBA9920", VA = "0xBA9920")]
	public void ReleaseCamera()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xBA92E4", Offset = "0xBA92E4", VA = "0xBA92E4")]
	private void SynchCameras(Camera v_source, Camera v_reflected)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xBA9498", Offset = "0xBA9498", VA = "0xBA9498")]
	private void CalculateReflectionMatrix(ref Matrix4x4 v_refMatrix, Vector4 v_refPlane)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xBA973C", Offset = "0xBA973C", VA = "0xBA973C")]
	private Vector4 CameraSpacePlane(Camera v_cam, Vector3 v_pos, Vector3 v_normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xBA847C", Offset = "0xBA847C", VA = "0xBA847C")]
	public void ClearReflectors()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xBA9E04", Offset = "0xBA9E04", VA = "0xBA9E04")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xBA9E70", Offset = "0xBA9E70", VA = "0xBA9E70")]
	public bool IsObjectReflectionVisible(Transform targetObject, Camera fromCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xBAA228", Offset = "0xBAA228", VA = "0xBAA228")]
	public PIDI_PlanarReflection()
	{
	}
}
[Token(Token = "0x200011B")]
public class HoloLens_ForcedUpdate : MonoBehaviour
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PIDI_PlanarReflection[] reflections;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xB855C0", Offset = "0xB855C0", VA = "0xB855C0")]
	public void OnPreRender()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xB85678", Offset = "0xB85678", VA = "0xB85678")]
	public HoloLens_ForcedUpdate()
	{
	}
}
[Token(Token = "0x200011C")]
public class FxCycle : MonoBehaviour
{
	[Token(Token = "0x20005C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D168", Offset = "0x85D168")]
	private sealed class <FadeIn>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxCycle <>4__this;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <animTime>5__2;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startTime>5__3;

		[Token(Token = "0x17000394")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600296D")]
			[Address(RVA = "0xA05A78", Offset = "0xA05A78", VA = "0xA05A78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600296F")]
			[Address(RVA = "0xA05AE0", Offset = "0xA05AE0", VA = "0xA05AE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0xA04D48", Offset = "0xA04D48", VA = "0xA04D48")]
		[DebuggerHidden]
		public <FadeIn>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0xA056C4", Offset = "0xA056C4", VA = "0xA056C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0xA056C8", Offset = "0xA056C8", VA = "0xA056C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0xA05A80", Offset = "0xA05A80", VA = "0xA05A80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D178", Offset = "0x85D178")]
	private sealed class <FadeInStartSkybox>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxCycle <>4__this;

		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <currentColor>5__2;

		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__3;

		[Token(Token = "0x17000396")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002973")]
			[Address(RVA = "0xA05C7C", Offset = "0xA05C7C", VA = "0xA05C7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002975")]
			[Address(RVA = "0xA05CE4", Offset = "0xA05CE4", VA = "0xA05CE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0xA04DE4", Offset = "0xA04DE4", VA = "0xA04DE4")]
		[DebuggerHidden]
		public <FadeInStartSkybox>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0xA05AE8", Offset = "0xA05AE8", VA = "0xA05AE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002972")]
		[Address(RVA = "0xA05AEC", Offset = "0xA05AEC", VA = "0xA05AEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0xA05C84", Offset = "0xA05C84", VA = "0xA05C84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D188", Offset = "0x85D188")]
	private sealed class <FadeOut>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxCycle <>4__this;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <currentColor>5__2;

		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <endColor>5__3;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <animTime>5__4;

		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <startTime>5__5;

		[Token(Token = "0x17000398")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002979")]
			[Address(RVA = "0xA06068", Offset = "0xA06068", VA = "0xA06068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600297B")]
			[Address(RVA = "0xA060D0", Offset = "0xA060D0", VA = "0xA060D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0xA04E80", Offset = "0xA04E80", VA = "0xA04E80")]
		[DebuggerHidden]
		public <FadeOut>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0xA05CEC", Offset = "0xA05CEC", VA = "0xA05CEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0xA05CF0", Offset = "0xA05CF0", VA = "0xA05CF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0xA06070", Offset = "0xA06070", VA = "0xA06070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D198", Offset = "0x85D198")]
	private sealed class <NextEffect>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxCycle <>4__this;

		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int increment;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <canContinue>5__2;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startTime>5__3;

		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <previousIndex>5__4;

		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <previousOnlySourcePositioning>5__5;

		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool <previousOnlyLifetimePositioning>5__6;

		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool <previousTransitionBackToSource>5__7;

		[Token(Token = "0x1700039A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600297F")]
			[Address(RVA = "0xA0703C", Offset = "0xA0703C", VA = "0xA0703C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002981")]
			[Address(RVA = "0xA070A4", Offset = "0xA070A4", VA = "0xA070A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0xA05488", Offset = "0xA05488", VA = "0xA05488")]
		[DebuggerHidden]
		public <NextEffect>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0xA060D8", Offset = "0xA060D8", VA = "0xA060D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0xA060DC", Offset = "0xA060DC", VA = "0xA060DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0xA07044", Offset = "0xA07044", VA = "0xA07044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D1A8", Offset = "0x85D1A8")]
	private sealed class <NextSkyboxColor>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxCycle <>4__this;

		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <currentColor>5__2;

		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__3;

		[Token(Token = "0x1700039C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002985")]
			[Address(RVA = "0xA07370", Offset = "0xA07370", VA = "0xA07370", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002987")]
			[Address(RVA = "0xA073D8", Offset = "0xA073D8", VA = "0xA073D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0xA05524", Offset = "0xA05524", VA = "0xA05524")]
		[DebuggerHidden]
		public <NextSkyboxColor>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0xA070AC", Offset = "0xA070AC", VA = "0xA070AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0xA070B0", Offset = "0xA070B0", VA = "0xA070B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0xA07378", Offset = "0xA07378", VA = "0xA07378", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D1B8", Offset = "0x85D1B8")]
	private sealed class <Selfrunning>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FxCycle <>4__this;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600298B")]
			[Address(RVA = "0xA074A0", Offset = "0xA074A0", VA = "0xA074A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600298D")]
			[Address(RVA = "0xA07508", Offset = "0xA07508", VA = "0xA07508", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0xA0564C", Offset = "0xA0564C", VA = "0xA0564C")]
		[DebuggerHidden]
		public <Selfrunning>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0xA073E0", Offset = "0xA073E0", VA = "0xA073E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0xA073E4", Offset = "0xA073E4", VA = "0xA073E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0xA074A8", Offset = "0xA074A8", VA = "0xA074A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isSelfRunning;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool looping;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlaygroundFxCycleItem> particleFx;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlaygroundParticlesC nextParticleFx;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlaygroundParticlesC nextParticleSmokeFx;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlaygroundParticlesC circleLights;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlaygroundSpline camSpline;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float splineOffsetSpeed;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform camPivot;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform camRotation;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float camMovementSpeed;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float camRotationSpeed;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color skyboxStartColor;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color skyboxNextFxColor;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float skyboxNextFxColorTime;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float skyboxColorChangeTime;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject pressSpaceText;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioSource particleBlastSound;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AudioClip[] particleBlastClips;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color skyboxColorOnLoad;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int currentIndex;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float camSplineTimeOffset;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float initialSplineSpeed;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float transitionTime;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float cameraPushBack;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float cameraPushBackForce;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float cameraPushBackRestoreSpeed;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Camera cam;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform camTransform;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ManipulatorObjectC repellentManipulator;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float camFov;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool isSimulating;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool inTransition;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	private bool canLoadNext;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xA04910", Offset = "0xA04910", VA = "0xA04910")]
	private void Start()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xA04C68", Offset = "0xA04C68", VA = "0xA04C68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E078", Offset = "0x86E078")]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xA04D74", Offset = "0xA04D74", VA = "0xA04D74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E0DC", Offset = "0x86E0DC")]
	private IEnumerator FadeInStartSkybox()
	{
		return null;
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xA04E10", Offset = "0xA04E10", VA = "0xA04E10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E140", Offset = "0x86E140")]
	private IEnumerator FadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xA04EAC", Offset = "0xA04EAC", VA = "0xA04EAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xA04F14", Offset = "0xA04F14", VA = "0xA04F14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xA05020", Offset = "0xA05020", VA = "0xA05020")]
	private void CameraMovement()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xA05458", Offset = "0xA05458", VA = "0xA05458")]
	private void NextEffect()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xA05310", Offset = "0xA05310", VA = "0xA05310")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E1A4", Offset = "0x86E1A4")]
	private IEnumerator NextEffect(int increment)
	{
		return null;
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xA054B4", Offset = "0xA054B4", VA = "0xA054B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E208", Offset = "0x86E208")]
	private IEnumerator NextSkyboxColor()
	{
		return null;
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xA05390", Offset = "0xA05390", VA = "0xA05390")]
	private void TimeScale(int level)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xA05550", Offset = "0xA05550", VA = "0xA05550")]
	private float Easing(int transitionType, float time)
	{
		return default(float);
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xA04CD8", Offset = "0xA04CD8", VA = "0xA04CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E26C", Offset = "0x86E26C")]
	private IEnumerator Selfrunning()
	{
		return null;
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xA05678", Offset = "0xA05678", VA = "0xA05678")]
	public FxCycle()
	{
	}
}
[Serializable]
[Token(Token = "0x200011D")]
public class PlaygroundFxCycleItem
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color colorProfile;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool moveInOut;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool unfolded;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xB52720", Offset = "0xB52720", VA = "0xB52720")]
	public PlaygroundFxCycleItem()
	{
	}
}
[Token(Token = "0x200011E")]
public class SoundFxArray : MonoBehaviour
{
	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] sounds;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xE65FD8", Offset = "0xE65FD8", VA = "0xE65FD8")]
	public SoundFxArray()
	{
	}
}
[Token(Token = "0x200011F")]
public class TextFader : MonoBehaviour
{
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text gText;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color startColor;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color fadedColor;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xAE47B4", Offset = "0xAE47B4", VA = "0xAE47B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xAE485C", Offset = "0xAE485C", VA = "0xAE485C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xAE496C", Offset = "0xAE496C", VA = "0xAE496C")]
	public TextFader()
	{
	}
}
[Token(Token = "0x2000120")]
public class PlaygroundAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform thisTransform;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xB51258", Offset = "0xB51258", VA = "0xB51258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xB51280", Offset = "0xB51280", VA = "0xB51280")]
	private void Update()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xB51364", Offset = "0xB51364", VA = "0xB51364")]
	public PlaygroundAutoRotate()
	{
	}
}
[Token(Token = "0x2000121")]
public class PlaygroundDragSplineObject : MonoBehaviour
{
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera mainCam;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Transform mainCamTransform;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isDragging;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ManipulatorObjectC manipulator;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static PlaygroundTurbulenceOnGameObjects turbulenceScript;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundSpline mySpline;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material enterMaterial;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material exitMaterial;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer r;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float camZ;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xB513E0", Offset = "0xB513E0", VA = "0xB513E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xB515F0", Offset = "0xB515F0", VA = "0xB515F0")]
	private void OnMouseOver()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xB51668", Offset = "0xB51668", VA = "0xB51668")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xB516E0", Offset = "0xB516E0", VA = "0xB516E0")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xB51994", Offset = "0xB51994", VA = "0xB51994")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xB51A48", Offset = "0xB51A48", VA = "0xB51A48")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xB5199C", Offset = "0xB5199C", VA = "0xB5199C")]
	private void SetManipulatorTransform(Transform mTransform)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xB51B48", Offset = "0xB51B48", VA = "0xB51B48")]
	public PlaygroundDragSplineObject()
	{
	}
}
[Token(Token = "0x2000122")]
public class PlaygroundEventListener : MonoBehaviour
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlaygroundEventC playgroundEvent;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform thisTransform;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider thisCollider;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer thisRenderer;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float localAxisRotation;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float collisionAmplifier;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotationDamping;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isActive;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material activeMaterial;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Material inactiveMaterial;

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xB51B50", Offset = "0xB51B50", VA = "0xB51B50")]
	private void Start()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xB51E1C", Offset = "0xB51E1C", VA = "0xB51E1C")]
	private void ParticleEvent(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xB51D90", Offset = "0xB51D90", VA = "0xB51D90")]
	private void AddEventListener()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xB51EDC", Offset = "0xB51EDC", VA = "0xB51EDC")]
	private void RemoveEventListener()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xB51F68", Offset = "0xB51F68", VA = "0xB51F68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xB520B4", Offset = "0xB520B4", VA = "0xB520B4")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xB52150", Offset = "0xB52150", VA = "0xB52150")]
	public PlaygroundEventListener()
	{
	}
}
[Token(Token = "0x2000123")]
public class PlaygroundInk : MonoBehaviour
{
	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform controlTransform;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xB52728", Offset = "0xB52728", VA = "0xB52728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xB52780", Offset = "0xB52780", VA = "0xB52780")]
	private void Update()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xB52A90", Offset = "0xB52A90", VA = "0xB52A90")]
	public PlaygroundInk()
	{
	}
}
[Token(Token = "0x2000124")]
public class PlaygroundLogoExample : MonoBehaviour
{
	[Token(Token = "0x20005CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D1C8", Offset = "0x85D1C8")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaygroundLogoExample <>4__this;

		[Token(Token = "0x170003A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002991")]
			[Address(RVA = "0xB52D80", Offset = "0xB52D80", VA = "0xB52D80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002993")]
			[Address(RVA = "0xB52DE8", Offset = "0xB52DE8", VA = "0xB52DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600298E")]
		[Address(RVA = "0xB52B08", Offset = "0xB52B08", VA = "0xB52B08")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0xB52B58", Offset = "0xB52B58", VA = "0xB52B58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0xB52B5C", Offset = "0xB52B5C", VA = "0xB52B5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0xB52D88", Offset = "0xB52D88", VA = "0xB52D88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float waitBeforeTurbulence;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waitBeforeStopEmission;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waitWhenDone;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turbulenceIncreaseSpeed;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float turbulenceMaxStrength;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool repeat;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xB52A98", Offset = "0xB52A98", VA = "0xB52A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E2D0", Offset = "0x86E2D0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xB52B34", Offset = "0xB52B34", VA = "0xB52B34")]
	public PlaygroundLogoExample()
	{
	}
}
[Token(Token = "0x2000125")]
public class PlaygroundManipulatorEvents : MonoBehaviour
{
	[Token(Token = "0x20005CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D1D8", Offset = "0x85D1D8")]
	private sealed class <Pop>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaygroundManipulatorEvents <>4__this;

		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <highestNow>5__2;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002997")]
			[Address(RVA = "0xB537E8", Offset = "0xB537E8", VA = "0xB537E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0xB53850", Offset = "0xB53850", VA = "0xB53850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0xB53194", Offset = "0xB53194", VA = "0xB53194")]
		[DebuggerHidden]
		public <Pop>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0xB53424", Offset = "0xB53424", VA = "0xB53424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0xB53428", Offset = "0xB53428", VA = "0xB53428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0xB537F0", Offset = "0xB537F0", VA = "0xB537F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC bubbleParticles;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaygroundParticlesC popParticles;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlaygroundParticlesC popTurbulenceParticles;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxRandomTurbulence;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float guiUpdateTime;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text text;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text popText;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ManipulatorObjectC manipulator;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform manipulatorTransform;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera mainCamera;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color popTextColor;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int highestPop;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xB52DF0", Offset = "0xB52DF0", VA = "0xB52DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xB53004", Offset = "0xB53004", VA = "0xB53004")]
	private void Update()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xB53124", Offset = "0xB53124", VA = "0xB53124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E334", Offset = "0x86E334")]
	private IEnumerator Pop()
	{
		return null;
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xB531C0", Offset = "0xB531C0", VA = "0xB531C0")]
	private void OnManipulatorEnter(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xB531C4", Offset = "0xB531C4", VA = "0xB531C4")]
	private void OnManipulatorExit(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xB531C8", Offset = "0xB531C8", VA = "0xB531C8")]
	private void OnManipulatorBirth(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xB531CC", Offset = "0xB531CC", VA = "0xB531CC")]
	private void OnManipulatorDeath(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xB531D0", Offset = "0xB531D0", VA = "0xB531D0")]
	private void OnManipulatorCollision(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xB531D4", Offset = "0xB531D4", VA = "0xB531D4")]
	private Vector3 RandomV3()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xB53260", Offset = "0xB53260", VA = "0xB53260")]
	private void UpdateGUI()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xB53410", Offset = "0xB53410", VA = "0xB53410")]
	public PlaygroundManipulatorEvents()
	{
	}
}
[Token(Token = "0x2000126")]
public class PlaygroundManipulatorStrength : MonoBehaviour
{
	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxStrength;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float adjustmentSpeed;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ManipulatorObjectC manipulator;

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xB20B90", Offset = "0xB20B90", VA = "0xB20B90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xB20C20", Offset = "0xB20C20", VA = "0xB20C20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xB20D1C", Offset = "0xB20D1C", VA = "0xB20D1C")]
	public PlaygroundManipulatorStrength()
	{
	}
}
[Token(Token = "0x2000127")]
public class PlaygroundNextSceneWithEnter : MonoBehaviour
{
	[Token(Token = "0x6000796")]
	[Address(RVA = "0xB20D30", Offset = "0xB20D30", VA = "0xB20D30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xB20D80", Offset = "0xB20D80", VA = "0xB20D80")]
	public PlaygroundNextSceneWithEnter()
	{
	}
}
[Token(Token = "0x2000128")]
public class PlaygroundOffsetSourceSplineTime : MonoBehaviour
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float offsetSpeed;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool showGui;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xB20D88", Offset = "0xB20D88", VA = "0xB20D88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xB20E18", Offset = "0xB20E18", VA = "0xB20E18")]
	private void Update()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xB20E68", Offset = "0xB20E68", VA = "0xB20E68")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xB20FFC", Offset = "0xB20FFC", VA = "0xB20FFC")]
	public PlaygroundOffsetSourceSplineTime()
	{
	}
}
[Token(Token = "0x2000129")]
public class PlaygroundPingPongMove : MonoBehaviour
{
	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 moveLength;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPos;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform thisTransform;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xB21014", Offset = "0xB21014", VA = "0xB21014")]
	private void Start()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xB21060", Offset = "0xB21060", VA = "0xB21060")]
	private void Update()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xB21248", Offset = "0xB21248", VA = "0xB21248")]
	public PlaygroundPingPongMove()
	{
	}
}
[Token(Token = "0x200012A")]
public class PlaygroundRotateWithKeys : MonoBehaviour
{
	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform thisTransform;

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xB22120", Offset = "0xB22120", VA = "0xB22120")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xB22148", Offset = "0xB22148", VA = "0xB22148")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xB222D8", Offset = "0xB222D8", VA = "0xB222D8")]
	public PlaygroundRotateWithKeys()
	{
	}
}
[Token(Token = "0x200012B")]
public class PlaygroundRotationNormal : MonoBehaviour
{
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cameraTransform;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isUpsideDown;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isBackward;

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xB222E8", Offset = "0xB222E8", VA = "0xB222E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xB2235C", Offset = "0xB2235C", VA = "0xB2235C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xB22558", Offset = "0xB22558", VA = "0xB22558")]
	public PlaygroundRotationNormal()
	{
	}
}
[Token(Token = "0x200012C")]
public class PlaygroundScenes : MonoBehaviour
{
	[Token(Token = "0x20005D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D1E8", Offset = "0x85D1E8")]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaygroundScenes <>4__this;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0xB239C0", Offset = "0xB239C0", VA = "0xB239C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0xB23A28", Offset = "0xB23A28", VA = "0xB23A28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0xB225D0", Offset = "0xB225D0", VA = "0xB225D0")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0xB23354", Offset = "0xB23354", VA = "0xB23354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0xB23358", Offset = "0xB23358", VA = "0xB23358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0xB239C8", Offset = "0xB239C8", VA = "0xB239C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showInfo;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool listParticleSystems;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool canSwitchSceneByClick;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaygroundParticlesC[] particles;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string productLabel;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string sceneLabel;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string contentLabel;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string systemInfoLabel;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string fpsLabel;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string timeLabel;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string totalParticlesLabel;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int totalParticles;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int totalParticleSystems;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float updateRate;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float fps;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float highestFps;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lowestFps;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float deltaCount;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int frameCount;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool ready;

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xB22560", Offset = "0xB22560", VA = "0xB22560")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E398", Offset = "0x86E398")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xB225FC", Offset = "0xB225FC", VA = "0xB225FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xB228E8", Offset = "0xB228E8", VA = "0xB228E8")]
	private void LoadNext()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xB22938", Offset = "0xB22938", VA = "0xB22938")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xB22DB4", Offset = "0xB22DB4", VA = "0xB22DB4")]
	public void UpdateParticlesLabel()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xB231E8", Offset = "0xB231E8", VA = "0xB231E8")]
	private string SourceMethod(PlaygroundParticlesC source)
	{
		return null;
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xB232C8", Offset = "0xB232C8", VA = "0xB232C8")]
	public PlaygroundScenes()
	{
	}
}
[Token(Token = "0x200012D")]
[ExecuteInEditMode]
public class PlaygroundSineMoveObject : MonoBehaviour
{
	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 minPos;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 maxPos;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeOffsetX;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeOffsetY;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform thisTransform;

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xB23A30", Offset = "0xB23A30", VA = "0xB23A30")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xB23A58", Offset = "0xB23A58", VA = "0xB23A58")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xB23B74", Offset = "0xB23B74", VA = "0xB23B74")]
	public PlaygroundSineMoveObject()
	{
	}
}
[Token(Token = "0x200012E")]
public class PlaygroundTurbulenceOnGameObjects : MonoBehaviour
{
	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] transforms;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool turbulence3d;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turbulenceFieldScale;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float turbulenceTimeScale;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float turbulenceStrength;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float damping;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool returnToOrigin;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float returnSpeed;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SimplexNoise simplex;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] originPositions;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] velocity;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] hasTurbulence;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 zero;

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xB291DC", Offset = "0xB291DC", VA = "0xB291DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xB29364", Offset = "0xB29364", VA = "0xB29364")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xB29368", Offset = "0xB29368", VA = "0xB29368")]
	private void Turbulence()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xB2983C", Offset = "0xB2983C", VA = "0xB2983C")]
	private float SimplexValue(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xB29914", Offset = "0xB29914", VA = "0xB29914")]
	public void StopTurbulenceOnTransform(Transform stopOnTransform)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xB299FC", Offset = "0xB299FC", VA = "0xB299FC")]
	public void StartTurbulenceOnTransform(Transform startOnTransform)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xB29AE8", Offset = "0xB29AE8", VA = "0xB29AE8")]
	public PlaygroundTurbulenceOnGameObjects()
	{
	}
}
[Token(Token = "0x200012F")]
public class AddRemoveManipulatorsInRadius : MonoBehaviour
{
	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform originTransform;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask layer;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float checkRate;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xA49054", Offset = "0xA49054", VA = "0xA49054")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xA490B4", Offset = "0xA490B4", VA = "0xA490B4")]
	private void AddRemoveInRange()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xA49248", Offset = "0xA49248", VA = "0xA49248")]
	private void RemoveOutOfRange()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xA493D0", Offset = "0xA493D0", VA = "0xA493D0")]
	private bool ManipulatorHasTransform(Transform comparer)
	{
		return default(bool);
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xA494C0", Offset = "0xA494C0", VA = "0xA494C0")]
	public AddRemoveManipulatorsInRadius()
	{
	}
}
[Token(Token = "0x2000130")]
public class CircleEmit : MonoBehaviour
{
	[Token(Token = "0x20005D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D1F8", Offset = "0x85D1F8")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CircleEmit <>4__this;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlaygroundParticlesC <particles>5__2;

		[Token(Token = "0x170003A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0xC04CC8", Offset = "0xC04CC8", VA = "0xC04CC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0xC04D30", Offset = "0xC04D30", VA = "0xC04D30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0xC049F8", Offset = "0xC049F8", VA = "0xC049F8")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0xC04A68", Offset = "0xC04A68", VA = "0xC04A68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0xC04A6C", Offset = "0xC04A6C", VA = "0xC04A6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0xC04CD0", Offset = "0xC04CD0", VA = "0xC04CD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float velocity;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float width;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float height;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xC04988", Offset = "0xC04988", VA = "0xC04988")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E3FC", Offset = "0x86E3FC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xC04A24", Offset = "0xC04A24", VA = "0xC04A24")]
	public CircleEmit()
	{
	}
}
[Token(Token = "0x2000131")]
public class CycleParticleSystems : MonoBehaviour
{
	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D208", Offset = "0x85D208")]
	private sealed class <GoToRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CycleParticleSystems <>4__this;

		[Token(Token = "0x170003A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0xB06DEC", Offset = "0xB06DEC", VA = "0xB06DEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0xB06E54", Offset = "0xB06E54", VA = "0xB06E54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029A6")]
		[Address(RVA = "0xB06B70", Offset = "0xB06B70", VA = "0xB06B70")]
		[DebuggerHidden]
		public <GoToRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60029A7")]
		[Address(RVA = "0xB06BAC", Offset = "0xB06BAC", VA = "0xB06BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0xB06BB0", Offset = "0xB06BB0", VA = "0xB06BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0xB06DF4", Offset = "0xB06DF4", VA = "0xB06DF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC[] particleSystems;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float transitionTime;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _currentIndex;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _previousIndex;

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xB06980", Offset = "0xB06980", VA = "0xB06980")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xB06A84", Offset = "0xB06A84", VA = "0xB06A84")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xB069A8", Offset = "0xB069A8", VA = "0xB069A8")]
	public void DisableAll()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xB06AF4", Offset = "0xB06AF4", VA = "0xB06AF4")]
	public void Next()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xB06AE8", Offset = "0xB06AE8", VA = "0xB06AE8")]
	public void Previous()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xB06A20", Offset = "0xB06A20", VA = "0xB06A20")]
	public void GoTo(int index)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xB06B00", Offset = "0xB06B00", VA = "0xB06B00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E460", Offset = "0x86E460")]
	private IEnumerator GoToRoutine()
	{
		return null;
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xB06B9C", Offset = "0xB06B9C", VA = "0xB06B9C")]
	public CycleParticleSystems()
	{
	}
}
[Token(Token = "0x2000132")]
public class EmitAtMousePosition : MonoBehaviour
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 velocity;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color32 color;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x9F5FD8", Offset = "0x9F5FD8", VA = "0x9F5FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x9F6068", Offset = "0x9F6068", VA = "0x9F6068")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x9F6130", Offset = "0x9F6130", VA = "0x9F6130")]
	public EmitAtMousePosition()
	{
	}
}
[Token(Token = "0x2000133")]
public class EmitByAmountC : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amount;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 minimumVelocity;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 maximumVelocity;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color color;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x9F6168", Offset = "0x9F6168", VA = "0x9F6168")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x9F61F8", Offset = "0x9F61F8", VA = "0x9F61F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x9F62C0", Offset = "0x9F62C0", VA = "0x9F62C0")]
	public EmitByAmountC()
	{
	}
}
[Token(Token = "0x2000134")]
public class EmitDuringSpecifiedTime : MonoBehaviour
{
	[Token(Token = "0x20005D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D218", Offset = "0x85D218")]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmitDuringSpecifiedTime <>4__this;

		[Token(Token = "0x170003AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x9F67F0", Offset = "0x9F67F0", VA = "0x9F67F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029B1")]
			[Address(RVA = "0x9F6858", Offset = "0x9F6858", VA = "0x9F6858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x9F63D8", Offset = "0x9F63D8", VA = "0x9F63D8")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0x9F6738", Offset = "0x9F6738", VA = "0x9F6738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x9F673C", Offset = "0x9F673C", VA = "0x9F673C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x9F67F8", Offset = "0x9F67F8", VA = "0x9F67F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D228", Offset = "0x85D228")]
	private sealed class <Emit>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmitDuringSpecifiedTime <>4__this;

		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <emissionRate>5__2;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <emitted>5__3;

		[Token(Token = "0x170003AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0x9F66C8", Offset = "0x9F66C8", VA = "0x9F66C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029B7")]
			[Address(RVA = "0x9F6730", Offset = "0x9F6730", VA = "0x9F6730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x9F6474", Offset = "0x9F6474", VA = "0x9F6474")]
		[DebuggerHidden]
		public <Emit>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0x9F654C", Offset = "0x9F654C", VA = "0x9F654C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x9F6550", Offset = "0x9F6550", VA = "0x9F6550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x9F66D0", Offset = "0x9F66D0", VA = "0x9F66D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float seconds;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 minVelocity;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 maxVelocity;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color32 color;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x9F6368", Offset = "0x9F6368", VA = "0x9F6368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E4C4", Offset = "0x86E4C4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x9F6404", Offset = "0x9F6404", VA = "0x9F6404")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E528", Offset = "0x86E528")]
	private IEnumerator Emit()
	{
		return null;
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x9F64A0", Offset = "0x9F64A0", VA = "0x9F64A0")]
	public EmitDuringSpecifiedTime()
	{
	}
}
[Token(Token = "0x2000135")]
public class EmitFromTransformsC : MonoBehaviour
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int emissionAmount;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float emissionRate;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color32 color;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 randomPositionMin;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 randomPositionMax;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 randomVelocityMin;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 randomVelocityMax;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Transform> transforms;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lastTimeUpdated;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x9F6860", Offset = "0x9F6860", VA = "0x9F6860")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x9F6AAC", Offset = "0x9F6AAC", VA = "0x9F6AAC")]
	public EmitFromTransformsC()
	{
	}
}
[Token(Token = "0x2000136")]
public class EmitOnOffByDistanceC : MonoBehaviour
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x9F6AF4", Offset = "0x9F6AF4", VA = "0x9F6AF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x9F6BE8", Offset = "0x9F6BE8", VA = "0x9F6BE8")]
	public EmitOnOffByDistanceC()
	{
	}
}
[Token(Token = "0x2000137")]
public class EmitOnOffMultiByDistance : MonoBehaviour
{
	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlaygroundParticlesC[] particles;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x9F6BF8", Offset = "0x9F6BF8", VA = "0x9F6BF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x9F6D4C", Offset = "0x9F6D4C", VA = "0x9F6D4C")]
	public EmitOnOffMultiByDistance()
	{
	}
}
[Token(Token = "0x2000138")]
public class EmitOnOffOnClickC : MonoBehaviour
{
	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x9F6D5C", Offset = "0x9F6D5C", VA = "0x9F6D5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x9F6DB0", Offset = "0x9F6DB0", VA = "0x9F6DB0")]
	public EmitOnOffOnClickC()
	{
	}
}
[Token(Token = "0x2000139")]
public class EmitOnOffOnMousePressedC : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x9F6DB8", Offset = "0x9F6DB8", VA = "0x9F6DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x9F6DF0", Offset = "0x9F6DF0", VA = "0x9F6DF0")]
	public EmitOnOffOnMousePressedC()
	{
	}
}
[Token(Token = "0x200013A")]
[ExecuteInEditMode]
public class EmitOnTranslation : MonoBehaviour
{
	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform movingTransform;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minSpace;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isReady;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 previousPosition;

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x9F6DF8", Offset = "0x9F6DF8", VA = "0x9F6DF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x9F6F54", Offset = "0x9F6F54", VA = "0x9F6F54")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x9F6F64", Offset = "0x9F6F64", VA = "0x9F6F64")]
	private void EmissionMoveCheck()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x9F71C0", Offset = "0x9F71C0", VA = "0x9F71C0")]
	public EmitOnTranslation()
	{
	}
}
[Token(Token = "0x200013B")]
public class EmitWhenMoving : MonoBehaviour
{
	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform movingTransform;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 previousPosition;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x9F71D4", Offset = "0x9F71D4", VA = "0x9F71D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x9F7268", Offset = "0x9F7268", VA = "0x9F7268")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x9F735C", Offset = "0x9F735C", VA = "0x9F735C")]
	public EmitWhenMoving()
	{
	}
}
[Token(Token = "0x200013C")]
public class EnableDisableByDistanceC : MonoBehaviour
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x9F7364", Offset = "0x9F7364", VA = "0x9F7364")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x9F7464", Offset = "0x9F7464", VA = "0x9F7464")]
	public EnableDisableByDistanceC()
	{
	}
}
[Token(Token = "0x200013D")]
public class EnableDisableOnClickC : MonoBehaviour
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject go;

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x9F7474", Offset = "0x9F7474", VA = "0x9F7474")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x9F74D4", Offset = "0x9F74D4", VA = "0x9F74D4")]
	public EnableDisableOnClickC()
	{
	}
}
[Token(Token = "0x200013E")]
public class EventListenerEnableSystems : MonoBehaviour
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC mainParticles;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particleSystemPoolPrefab;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int quantity;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentEnabled;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PlaygroundParticlesC> cachedParticles;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> queuedSystems;

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x9F7860", Offset = "0x9F7860", VA = "0x9F7860")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x9F7A44", Offset = "0x9F7A44", VA = "0x9F7A44")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x9F7C38", Offset = "0x9F7C38", VA = "0x9F7C38")]
	private void OnParticleEvent(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x9F7B24", Offset = "0x9F7B24", VA = "0x9F7B24")]
	public void EnableParticleSystem(Vector3 position)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x9F7CA8", Offset = "0x9F7CA8", VA = "0x9F7CA8")]
	public EventListenerEnableSystems()
	{
	}
}
[Token(Token = "0x200013F")]
public class FlickerParticles : MonoBehaviour
{
	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x860EF0", Offset = "0x860EF0")]
	public float flickerInterval;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _lastUpdate;

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x9FFF0C", Offset = "0x9FFF0C", VA = "0x9FFF0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x9FFFB8", Offset = "0x9FFFB8", VA = "0x9FFFB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x9FFFD4", Offset = "0x9FFFD4", VA = "0x9FFFD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xA00030", Offset = "0xA00030", VA = "0xA00030")]
	public FlickerParticles()
	{
	}
}
[Token(Token = "0x2000140")]
public class FollowerEventExample : MonoBehaviour
{
	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundFollow followScript;

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xA0381C", Offset = "0xA0381C", VA = "0xA0381C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xA0393C", Offset = "0xA0393C", VA = "0xA0393C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xA03A4C", Offset = "0xA03A4C", VA = "0xA03A4C")]
	private void OnFollowerBirth(PlaygroundFollower follower)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xA03BF8", Offset = "0xA03BF8", VA = "0xA03BF8")]
	private void OnFollowerDeath(PlaygroundFollower follower)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xA03DBC", Offset = "0xA03DBC", VA = "0xA03DBC")]
	public FollowerEventExample()
	{
	}
}
[Token(Token = "0x2000141")]
public class GlobalEventListeners : MonoBehaviour
{
	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xB82EE0", Offset = "0xB82EE0", VA = "0xB82EE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xB8300C", Offset = "0xB8300C", VA = "0xB8300C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xB83138", Offset = "0xB83138", VA = "0xB83138")]
	private void OnEventParticleBirth(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xB83300", Offset = "0xB83300", VA = "0xB83300")]
	private void OnEventParticleDeath(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xB83544", Offset = "0xB83544", VA = "0xB83544")]
	private void OnEventParticleCollision(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xB837F0", Offset = "0xB837F0", VA = "0xB837F0")]
	private void OnEventParticleTime(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xB839B8", Offset = "0xB839B8", VA = "0xB839B8")]
	public GlobalEventListeners()
	{
	}
}
[Token(Token = "0x2000142")]
public class KillParticleWithinEventRangeC : MonoBehaviour
{
	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float killRange;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlaygroundEventC playgroundEvent;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform thisTransform;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 thisPosition;

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xB86DAC", Offset = "0xB86DAC", VA = "0xB86DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xB86EC4", Offset = "0xB86EC4", VA = "0xB86EC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xB86EFC", Offset = "0xB86EFC", VA = "0xB86EFC")]
	private void ParticleEvent(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xB86E38", Offset = "0xB86E38", VA = "0xB86E38")]
	private void AddEventListener()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xB86FF0", Offset = "0xB86FF0", VA = "0xB86FF0")]
	private void RemoveEventListener()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xB8707C", Offset = "0xB8707C", VA = "0xB8707C")]
	public KillParticleWithinEventRangeC()
	{
	}
}
[Token(Token = "0x2000143")]
public class ManipulatorContainsParticlesC : MonoBehaviour
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int manipulatorNumber;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool localManipulator;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ManipulatorObjectC manipulator;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xA1FB30", Offset = "0xA1FB30", VA = "0xA1FB30")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xA1FBEC", Offset = "0xA1FBEC", VA = "0xA1FBEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xA1FCA0", Offset = "0xA1FCA0", VA = "0xA1FCA0")]
	private void IsWithin(int i)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xA1FD48", Offset = "0xA1FD48", VA = "0xA1FD48")]
	public ManipulatorContainsParticlesC()
	{
	}
}
[Token(Token = "0x2000144")]
public class MultiEmitOnEvent : MonoBehaviour
{
	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particlesEvent;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaygroundParticlesC particlesEmit;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int emitCount;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 randomVelocityMin;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 randomVelocityMax;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color32 color;

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xAB7D44", Offset = "0xAB7D44", VA = "0xAB7D44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xAB7E08", Offset = "0xAB7E08", VA = "0xAB7E08")]
	private void EmitOnEvent(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xAB7E68", Offset = "0xAB7E68", VA = "0xAB7E68")]
	public MultiEmitOnEvent()
	{
	}
}
[Token(Token = "0x2000145")]
public class PaintAtMousePositionC : MonoBehaviour
{
	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public COLLISIONTYPEC collisionType;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color color;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xBACCC4", Offset = "0xBACCC4", VA = "0xBACCC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xBACE24", Offset = "0xBACE24", VA = "0xBACE24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xBACFAC", Offset = "0xBACFAC", VA = "0xBACFAC")]
	public PaintAtMousePositionC()
	{
	}
}
[Token(Token = "0x2000146")]
public class ParticleEventListenerC : MonoBehaviour
{
	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlaygroundEventC playgroundEvent;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 gizmoPosition;

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xBAD220", Offset = "0xBAD220", VA = "0xBAD220")]
	private void Start()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xBAD2E0", Offset = "0xBAD2E0", VA = "0xBAD2E0")]
	private void AddListener()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xBAD36C", Offset = "0xBAD36C", VA = "0xBAD36C")]
	private void DoSomething(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xBAD390", Offset = "0xBAD390", VA = "0xBAD390")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xBAD3A4", Offset = "0xBAD3A4", VA = "0xBAD3A4")]
	public ParticleEventListenerC()
	{
	}
}
[Token(Token = "0x2000147")]
[ExecuteInEditMode]
public class ParticleMaskingPercentage : MonoBehaviour
{
	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maskingPercentage;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xBADAB8", Offset = "0xBADAB8", VA = "0xBADAB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xBADAD8", Offset = "0xBADAD8", VA = "0xBADAD8")]
	private void Update()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xBADB8C", Offset = "0xBADB8C", VA = "0xBADB8C")]
	public ParticleMaskingPercentage()
	{
	}
}
[Token(Token = "0x2000148")]
public class ParticleParabola : MonoBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 startPosition;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 endPosition;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 bending;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xBADB94", Offset = "0xBADB94", VA = "0xBADB94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xBADC24", Offset = "0xBADC24", VA = "0xBADC24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xBADC60", Offset = "0xBADC60", VA = "0xBADC60")]
	private void ShootParabola()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xBADE58", Offset = "0xBADE58", VA = "0xBADE58")]
	public ParticleParabola()
	{
	}
}
[Token(Token = "0x2000149")]
public class ParticlePickupWithGlobalManipulator : MonoBehaviour
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int manipulatorIndex;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ManipulatorObjectC manipulator;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int pickups;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xBADF0C", Offset = "0xBADF0C", VA = "0xBADF0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xBAE090", Offset = "0xBAE090", VA = "0xBAE090")]
	private void OnManipulatorEnter(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xBAE15C", Offset = "0xBAE15C", VA = "0xBAE15C")]
	public ParticlePickupWithGlobalManipulator()
	{
	}
}
[Token(Token = "0x200014A")]
public class ParticlePickupWithLocalManipulator : MonoBehaviour
{
	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int manipulatorIndex;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ManipulatorObjectC manipulator;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int pickups;

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xBAE164", Offset = "0xBAE164", VA = "0xBAE164")]
	private void Start()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xBAE24C", Offset = "0xBAE24C", VA = "0xBAE24C")]
	private void OnManipulatorEnter(PlaygroundEventParticle particle)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xBAE290", Offset = "0xBAE290", VA = "0xBAE290")]
	public ParticlePickupWithLocalManipulator()
	{
	}
}
[Token(Token = "0x200014B")]
public class ParticleSystemScaler : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scale;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool scaleVelocity;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool scaleParticleSize;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool scaleLifetimePositioning;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool scaleOverflowOffset;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool scaleSourceScatter;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float origVelocityScale;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float origScale;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float origLifetimePositioningScale;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 origOverflowOffset;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 origSourceScatterMin;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 origSourceScatterMax;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xB4DEA8", Offset = "0xB4DEA8", VA = "0xB4DEA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xB4DF94", Offset = "0xB4DF94", VA = "0xB4DF94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xB4E020", Offset = "0xB4E020", VA = "0xB4E020")]
	private void Update()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xB4E2DC", Offset = "0xB4E2DC", VA = "0xB4E2DC")]
	public ParticleSystemScaler()
	{
	}
}
[Token(Token = "0x200014C")]
public class ParticleSystemsSequence : MonoBehaviour
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float input;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximumSequenceRange;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SequenceRange> sequences;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xB4E2FC", Offset = "0xB4E2FC", VA = "0xB4E2FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xB4E300", Offset = "0xB4E300", VA = "0xB4E300")]
	private void Sequencer()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xB4E41C", Offset = "0xB4E41C", VA = "0xB4E41C")]
	public ParticleSystemsSequence()
	{
	}
}
[Serializable]
[Token(Token = "0x200014D")]
public class SequenceRange
{
	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minRange;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxRange;

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xB00A9C", Offset = "0xB00A9C", VA = "0xB00A9C")]
	public bool IsWithin(float f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xB00AC0", Offset = "0xB00AC0", VA = "0xB00AC0")]
	public SequenceRange()
	{
	}
}
[Token(Token = "0x200014E")]
public class PauseCalculationByDistanceAngleC : MonoBehaviour
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float angle;

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xB50C78", Offset = "0xB50C78", VA = "0xB50C78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xB50D08", Offset = "0xB50D08", VA = "0xB50D08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xB50EC4", Offset = "0xB50EC4", VA = "0xB50EC4")]
	public PauseCalculationByDistanceAngleC()
	{
	}
}
[Token(Token = "0x200014F")]
public class PlaygroundFollowSimple : MonoBehaviour
{
	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform followerReference;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rotateTowardsDirection;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] _followers;

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xB5235C", Offset = "0xB5235C", VA = "0xB5235C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xB524E4", Offset = "0xB524E4", VA = "0xB524E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xB52718", Offset = "0xB52718", VA = "0xB52718")]
	public PlaygroundFollowSimple()
	{
	}
}
[Token(Token = "0x2000150")]
public class ProtectParticlesFromManipulator : MonoBehaviour
{
	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleProtectionRange[] protectedParticles;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int manipulatorNumber;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ManipulatorObjectC manipulator;

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xB2BB94", Offset = "0xB2BB94", VA = "0xB2BB94")]
	private void Start()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xB2BC1C", Offset = "0xB2BC1C", VA = "0xB2BC1C")]
	private void SetProtectedParticles()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xB2BCCC", Offset = "0xB2BCCC", VA = "0xB2BCCC")]
	private void RemoveProtectedParticles()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xB2BD7C", Offset = "0xB2BD7C", VA = "0xB2BD7C")]
	public ProtectParticlesFromManipulator()
	{
	}
}
[Serializable]
[Token(Token = "0x2000151")]
public class ParticleProtectionRange
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int start;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int end;

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xB4DCA8", Offset = "0xB4DCA8", VA = "0xB4DCA8")]
	public ParticleProtectionRange()
	{
	}
}
[Token(Token = "0x2000152")]
public class ProtectParticlesFromManipulatorById : MonoBehaviour
{
	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleProtectionRange[] protectedParticles;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int manipulatorNumber;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ManipulatorObjectC manipulator;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xB2BD84", Offset = "0xB2BD84", VA = "0xB2BD84")]
	private void Start()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xB2BE0C", Offset = "0xB2BE0C", VA = "0xB2BE0C")]
	private void SetProtectedParticles()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xB2BEB4", Offset = "0xB2BEB4", VA = "0xB2BEB4")]
	private void RemoveProtectedParticles()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xB2BF58", Offset = "0xB2BF58", VA = "0xB2BF58")]
	public ProtectParticlesFromManipulatorById()
	{
	}
}
[Token(Token = "0x2000153")]
public class RelationPositionTransform : MonoBehaviour
{
	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform anchor;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float anchorToTargetDistance;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float slack;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool rotateTowardsTarget;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform thisTransform;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xFD26D4", Offset = "0xFD26D4", VA = "0xFD26D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xFD26FC", Offset = "0xFD26FC", VA = "0xFD26FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xFD2C2C", Offset = "0xFD2C2C", VA = "0xFD2C2C")]
	public RelationPositionTransform()
	{
	}
}
[Token(Token = "0x2000154")]
public class SetSkinnedMeshUpdateRate : MonoBehaviour
{
	[Token(Token = "0x6000835")]
	[Address(RVA = "0xB00FE8", Offset = "0xB00FE8", VA = "0xB00FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xB01054", Offset = "0xB01054", VA = "0xB01054")]
	public SetSkinnedMeshUpdateRate()
	{
	}
}
[Token(Token = "0x2000155")]
public class SetStickyParticleExample : MonoBehaviour
{
	[Token(Token = "0x20005D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D238", Offset = "0x85D238")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetStickyParticleExample <>4__this;

		[Token(Token = "0x170003AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029BB")]
			[Address(RVA = "0xB0131C", Offset = "0xB0131C", VA = "0xB0131C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029BD")]
			[Address(RVA = "0xB01384", Offset = "0xB01384", VA = "0xB01384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0xB010CC", Offset = "0xB010CC", VA = "0xB010CC")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0xB01178", Offset = "0xB01178", VA = "0xB01178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0xB0117C", Offset = "0xB0117C", VA = "0xB0117C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0xB01324", Offset = "0xB01324", VA = "0xB01324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int stickyParticle;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform stickyTransform;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 stickyOffset;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xB0105C", Offset = "0xB0105C", VA = "0xB0105C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E58C", Offset = "0x86E58C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xB010F8", Offset = "0xB010F8", VA = "0xB010F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xB0111C", Offset = "0xB0111C", VA = "0xB0111C")]
	public void SetSticky(int index, Vector3 position, Vector3 normal, float offset, Transform parent)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xB01138", Offset = "0xB01138", VA = "0xB01138")]
	public void ClearAllSticky()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xB01154", Offset = "0xB01154", VA = "0xB01154")]
	public void ClearSticky(int index)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xB01170", Offset = "0xB01170", VA = "0xB01170")]
	public SetStickyParticleExample()
	{
	}
}
[Token(Token = "0x2000156")]
public class SnapshotToLocalPosition : MonoBehaviour
{
	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D248", Offset = "0x85D248")]
	private sealed class <LoadSnapshot>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SnapshotToLocalPosition <>4__this;

		[Token(Token = "0x170003B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0xE5AD20", Offset = "0xE5AD20", VA = "0xE5AD20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0xE5AD88", Offset = "0xE5AD88", VA = "0xE5AD88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0xE5A954", Offset = "0xE5A954", VA = "0xE5A954")]
		[DebuggerHidden]
		public <LoadSnapshot>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0xE5A998", Offset = "0xE5A998", VA = "0xE5A998", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0xE5A99C", Offset = "0xE5A99C", VA = "0xE5A99C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0xE5AD28", Offset = "0xE5AD28", VA = "0xE5AD28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformPoint;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int mask;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] positionCache;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int snapshotToLoad;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xE5A808", Offset = "0xE5A808", VA = "0xE5A808")]
	private void Start()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xE5A898", Offset = "0xE5A898", VA = "0xE5A898")]
	private void Update()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xE5A8E4", Offset = "0xE5A8E4", VA = "0xE5A8E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E5F0", Offset = "0x86E5F0")]
	private IEnumerator LoadSnapshot()
	{
		return null;
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xE5A980", Offset = "0xE5A980", VA = "0xE5A980")]
	public SnapshotToLocalPosition()
	{
	}
}
[Token(Token = "0x2000157")]
public class SpawnPrefabOnClickC : MonoBehaviour
{
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xE660B4", Offset = "0xE660B4", VA = "0xE660B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xE66238", Offset = "0xE66238", VA = "0xE66238")]
	public SpawnPrefabOnClickC()
	{
	}
}
[Token(Token = "0x2000158")]
public class SwitchCachedParticleSystemC : MonoBehaviour
{
	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particleSystemPrefab;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int quantity;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentEnabled;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PlaygroundParticlesC> cachedParticles;

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xE69E64", Offset = "0xE69E64", VA = "0xE69E64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xE69FC8", Offset = "0xE69FC8", VA = "0xE69FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xE6A070", Offset = "0xE6A070", VA = "0xE6A070")]
	public void EnableParticleSystem(Vector3 position)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xE6A184", Offset = "0xE6A184", VA = "0xE6A184")]
	public SwitchCachedParticleSystemC()
	{
	}
}
[Token(Token = "0x2000159")]
public class SwitchCachedWorldObjectsC : MonoBehaviour
{
	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] worldObjects;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<WorldObject> cachedWorldObjects;

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xE6A194", Offset = "0xE6A194", VA = "0xE6A194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xE6A2B4", Offset = "0xE6A2B4", VA = "0xE6A2B4")]
	private void SwitchWorldObject(int switchTo)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xE6A338", Offset = "0xE6A338", VA = "0xE6A338")]
	public SwitchCachedWorldObjectsC()
	{
	}
}
[Token(Token = "0x200015A")]
public class ViewportSplineParticles : MonoBehaviour
{
	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaygroundParticlesC particles;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float screenOffset;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlaygroundSpline spline;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera mainCamera;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentScreenX;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int currentScreenY;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float prevScreenOffset;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xC14860", Offset = "0xC14860", VA = "0xC14860")]
	private void Start()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xC14FB8", Offset = "0xC14FB8", VA = "0xC14FB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xC14ABC", Offset = "0xC14ABC", VA = "0xC14ABC")]
	private void SetViewportNodes()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xC15038", Offset = "0xC15038", VA = "0xC15038")]
	public ViewportSplineParticles()
	{
	}
}
[Serializable]
[Token(Token = "0x200015B")]
public class PlaygroundRecorderData : ScriptableObject
{
	[Token(Token = "0x20005D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D258", Offset = "0x85D258")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaygroundRecorderData <>4__this;

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RecordedFrame> recordedFrames;

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0xB21EAC", Offset = "0xB21EAC", VA = "0xB21EAC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0xB21FF4", Offset = "0xB21FF4", VA = "0xB21FF4")]
		internal void <SerializeAsync>b__0()
		{
		}
	}

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float version;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializedFrame[] serializedFrames;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xB21C98", Offset = "0xB21C98", VA = "0xB21C98")]
	public void Serialize(List<RecordedFrame> recordedFrames)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xB21DD4", Offset = "0xB21DD4", VA = "0xB21DD4")]
	public void SerializeAsync(List<RecordedFrame> recordedFrames)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xB21EB4", Offset = "0xB21EB4", VA = "0xB21EB4")]
	public List<RecordedFrame> CloneAsRecordedFrames()
	{
		return null;
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xB21F9C", Offset = "0xB21F9C", VA = "0xB21F9C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xB21FA4", Offset = "0xB21FA4", VA = "0xB21FA4")]
	public static PlaygroundRecorderData New()
	{
		return null;
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xB21FEC", Offset = "0xB21FEC", VA = "0xB21FEC")]
	public PlaygroundRecorderData()
	{
	}
}
[Token(Token = "0x200015C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8597F4", Offset = "0x8597F4")]
public class PlaygroundFlickeringPointLight : MonoBehaviour
{
	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float flickerSpeed;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minimumLight;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maximumLight;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light _thisLight;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _targetLightValue;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xB5216C", Offset = "0xB5216C", VA = "0xB5216C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xB52200", Offset = "0xB52200", VA = "0xB52200")]
	private void Update()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xB521D4", Offset = "0xB521D4", VA = "0xB521D4")]
	private void SetTargetLightValue()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xB52340", Offset = "0xB52340", VA = "0xB52340")]
	public PlaygroundFlickeringPointLight()
	{
	}
}
[Token(Token = "0x200015D")]
public class PlaygroundSineOverflow : MonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float amount;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initialOverflow;

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xB23BEC", Offset = "0xB23BEC", VA = "0xB23BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xB23C5C", Offset = "0xB23C5C", VA = "0xB23C5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xB23DA0", Offset = "0xB23DA0", VA = "0xB23DA0")]
	public PlaygroundSineOverflow()
	{
	}
}
[Token(Token = "0x200015E")]
public class PlaygroundSineRotation : MonoBehaviour
{
	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform thisTransform;

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xB23DB4", Offset = "0xB23DB4", VA = "0xB23DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xB23DDC", Offset = "0xB23DDC", VA = "0xB23DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xB23EC0", Offset = "0xB23EC0", VA = "0xB23EC0")]
	public PlaygroundSineRotation()
	{
	}
}
[Token(Token = "0x200015F")]
public class PlaygroundSwarmPositioning : MonoBehaviour
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float swarmStrength;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float swarmSpeed;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform swarmTransform;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _velocity;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _thisTransform;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xB28F68", Offset = "0xB28F68", VA = "0xB28F68")]
	private void Start()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xB28F90", Offset = "0xB28F90", VA = "0xB28F90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xB291C8", Offset = "0xB291C8", VA = "0xB291C8")]
	public PlaygroundSwarmPositioning()
	{
	}
}
[Token(Token = "0x2000160")]
public class PlaygroundBrushPresetC : MonoBehaviour
{
	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string presetName;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D texture;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float scale;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BRUSHDETAILC detail;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spacing;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool exceedMaxStopsPaint;

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xB51374", Offset = "0xB51374", VA = "0xB51374")]
	public PlaygroundBrushPresetC()
	{
	}
}
[Token(Token = "0x2000161")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859858", Offset = "0x859858")]
public class PlaygroundPresetCircleShotC : MonoBehaviour
{
	[Token(Token = "0x20005D8")]
	public enum WhenDoneCircleShot
	{
		[Token(Token = "0x4002AF9")]
		Nothing,
		[Token(Token = "0x4002AFA")]
		Inactivate,
		[Token(Token = "0x4002AFB")]
		Destroy
	}

	[Token(Token = "0x20005D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D268", Offset = "0x85D268")]
	private sealed class <Shoot>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaygroundPresetCircleShotC <>4__this;

		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <rotationSpeed>5__2;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeDone>5__3;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <c>5__4;

		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <p>5__5;

		[Token(Token = "0x170003B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029C9")]
			[Address(RVA = "0xB2195C", Offset = "0xB2195C", VA = "0xB2195C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0xB219C4", Offset = "0xB219C4", VA = "0xB219C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0xB21354", Offset = "0xB21354", VA = "0xB21354")]
		[DebuggerHidden]
		public <Shoot>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0xB2140C", Offset = "0xB2140C", VA = "0xB2140C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0xB21410", Offset = "0xB21410", VA = "0xB21410", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0xB21964", Offset = "0xB21964", VA = "0xB21964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numberOfParticles;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float force;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cycles;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationNormal;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minimumLifetime;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maximumLifetime;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color color;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float yieldBeforeEmission;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float yieldBetweenShots;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float yieldBetweenCycles;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public WhenDoneCircleShot whenDone;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform thisTransform;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isSameLifetime;

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xB21258", Offset = "0xB21258", VA = "0xB21258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xB212E4", Offset = "0xB212E4", VA = "0xB212E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E654", Offset = "0x86E654")]
	private IEnumerator Shoot()
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xB21380", Offset = "0xB21380", VA = "0xB21380")]
	public PlaygroundPresetCircleShotC()
	{
	}
}
[Token(Token = "0x2000162")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8598CC", Offset = "0x8598CC")]
public class PlaygroundPresetLaserC : MonoBehaviour
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float laserMaxDistance;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient laserColor;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int particleCount;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask collisionLayer;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaygroundParticlesC particles;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int previousParticleCount;

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xB219CC", Offset = "0xB219CC", VA = "0xB219CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xB21A3C", Offset = "0xB21A3C", VA = "0xB21A3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xB21C54", Offset = "0xB21C54", VA = "0xB21C54")]
	public PlaygroundPresetLaserC()
	{
	}
}
[Token(Token = "0x2000163")]
[ExecuteInEditMode]
public class PAParticleFieldShadows : MonoBehaviour
{
	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool receiveShadows;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ShadowCastingMode castShadows;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xBA2B64", Offset = "0xBA2B64", VA = "0xBA2B64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xBA2C18", Offset = "0xBA2C18", VA = "0xBA2C18")]
	public PAParticleFieldShadows()
	{
	}
}
[Token(Token = "0x2000164")]
public class PACustomBillboardGenerator : PABillboardParticle, PAICustomParticleGenerator
{
	[Serializable]
	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D278", Offset = "0x85D278")]
	private sealed class <>c
	{
		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PACustomParticle> <>9__6_0;

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0xB9A194", Offset = "0xB9A194", VA = "0xB9A194")]
		public <>c()
		{
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0xB9A19C", Offset = "0xB9A19C", VA = "0xB9A19C")]
		internal void <OnValidate>b__6_0(PACustomParticle obj)
		{
		}
	}

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<PACustomParticle> particles;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	[SerializeField]
	private Mesh particleMesh;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2[] particleUVs;

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xFB1648", Offset = "0xFB1648", VA = "0xFB1648", Slot = "9")]
	protected override void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xFB164C", Offset = "0xFB164C", VA = "0xFB164C", Slot = "10")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xFB169C", Offset = "0xFB169C", VA = "0xFB169C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xFB1754", Offset = "0xFB1754", VA = "0xFB1754")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xFB18B8", Offset = "0xFB18B8", VA = "0xFB18B8", Slot = "17")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x86E6B8", Offset = "0x86E6B8")]
	public void ApplyParticles()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xFB1AA4", Offset = "0xFB1AA4", VA = "0xFB1AA4")]
	private void SetOriginDirection(int particleIndex, Vector3 direction)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xFB1CAC", Offset = "0xFB1CAC", VA = "0xFB1CAC")]
	private void SetSpeed(int particleIndex, float speed)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xFB1D10", Offset = "0xFB1D10", VA = "0xFB1D10")]
	private void SetSpinSpeed(int particleIndex, float spinSpeed)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xFB1C48", Offset = "0xFB1C48", VA = "0xFB1C48")]
	private void SetColor(int particleIndex, Color color)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xFB1D74", Offset = "0xFB1D74", VA = "0xFB1D74")]
	private void SetUV(int particleIndex, Rect uv)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xFB1B0C", Offset = "0xFB1B0C", VA = "0xFB1B0C")]
	private void SetSize(int particleIndex, float size)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xFB1FA8", Offset = "0xFB1FA8", VA = "0xFB1FA8")]
	private void SetIndex(int particleIndex, float normalizedIndex)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xFB200C", Offset = "0xFB200C", VA = "0xFB200C")]
	public PACustomBillboardGenerator()
	{
	}
}
[Token(Token = "0x2000165")]
public interface PAICustomParticleGenerator
{
	[Token(Token = "0x6000877")]
	void ApplyParticles();
}
[Serializable]
[Token(Token = "0x2000166")]
public class PACustomParticle
{
	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 originDirection;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float size;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spinSpeed;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect uv;

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xB9A1B4", Offset = "0xB9A1B4", VA = "0xB9A1B4")]
	public void SetDefaultValuesIfUninitialized()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xB9A334", Offset = "0xB9A334", VA = "0xB9A334")]
	public PACustomParticle()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xB9B1E4", Offset = "0xB9B1E4", VA = "0xB9B1E4")]
	public PACustomParticle(Vector3 originDirection, Color color, float size, float speed, float spinSpeed, Rect uv)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xB9B2E8", Offset = "0xB9B2E8", VA = "0xB9B2E8")]
	public PACustomParticle(Vector3 originDirection, Color color, float size = 1f, float speed = 0f, float spinSpeed = 0f)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xB9B3EC", Offset = "0xB9B3EC", VA = "0xB9B3EC")]
	public PACustomParticle(Vector3 originDirection)
	{
	}
}
[Token(Token = "0x2000167")]
public class PACustomMeshParticleGenerator : PAMeshParticle, PAICustomParticleGenerator
{
	[Serializable]
	[Token(Token = "0x20005DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D288", Offset = "0x85D288")]
	private sealed class <>c
	{
		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PACustomMeshParticle> <>9__2_0;

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0xB9B1C4", Offset = "0xB9B1C4", VA = "0xB9B1C4")]
		public <>c()
		{
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0xB9B1CC", Offset = "0xB9B1CC", VA = "0xB9B1CC")]
		internal void <OnValidate>b__2_0(PACustomMeshParticle obj)
		{
		}
	}

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<PACustomMeshParticle> particles;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xB9A41C", Offset = "0xB9A41C", VA = "0xB9A41C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xB9A4F0", Offset = "0xB9A4F0", VA = "0xB9A4F0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xB9A658", Offset = "0xB9A658", VA = "0xB9A658", Slot = "9")]
	protected override void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xB9A65C", Offset = "0xB9A65C", VA = "0xB9A65C", Slot = "10")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xB9A6AC", Offset = "0xB9A6AC", VA = "0xB9A6AC", Slot = "17")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x86E6F0", Offset = "0x86E6F0")]
	public void ApplyParticles()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xB9B150", Offset = "0xB9B150", VA = "0xB9B150")]
	public PACustomMeshParticleGenerator()
	{
	}
}
[Serializable]
[Token(Token = "0x2000168")]
public class PACustomMeshParticle : PACustomParticle
{
	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 spinAxis;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh mesh;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xB9A330", Offset = "0xB9A330", VA = "0xB9A330")]
	public PACustomMeshParticle()
	{
	}
}
[Token(Token = "0x2000169")]
public class PABillboardParticle : PAParticleMeshGenerator
{
	[Token(Token = "0x4000957")]
	private const int MAX_PARTICLE_COUNT = 16250;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Vector2[] quadUVs;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static readonly Vector2[] quadOffsets;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xFB0AB0", Offset = "0xFB0AB0", VA = "0xFB0AB0", Slot = "6")]
	public override int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xFB0AB8", Offset = "0xFB0AB8", VA = "0xFB0AB8", Slot = "10")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xFB0B20", Offset = "0xFB0B20", VA = "0xFB0B20", Slot = "11")]
	protected override void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xFB0C7C", Offset = "0xFB0C7C", VA = "0xFB0C7C", Slot = "14")]
	protected override void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xFB0D88", Offset = "0xFB0D88", VA = "0xFB0D88", Slot = "13")]
	protected override void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xFB0F2C", Offset = "0xFB0F2C", VA = "0xFB0F2C", Slot = "12")]
	protected override void UpdateSurface(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xFB120C", Offset = "0xFB120C", VA = "0xFB120C", Slot = "16")]
	protected override void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xFB1340", Offset = "0xFB1340", VA = "0xFB1340", Slot = "15")]
	protected override void UpdateIndicies()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xFB143C", Offset = "0xFB143C", VA = "0xFB143C")]
	public PABillboardParticle()
	{
	}
}
[Token(Token = "0x200016A")]
public class PAMeshParticle : PAParticleMeshGenerator
{
	[Token(Token = "0x400095A")]
	private const int MAX_VERT_COUNT = 65536;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Mesh inputMesh;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xB9C034", Offset = "0xB9C034", VA = "0xB9C034", Slot = "6")]
	public override int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xB9C0D8", Offset = "0xB9C0D8", VA = "0xB9C0D8", Slot = "7")]
	public override float GetParticleBaseSize()
	{
		return default(float);
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xB9C25C", Offset = "0xB9C25C", VA = "0xB9C25C", Slot = "8")]
	public override void UpdateMesh(Mesh mesh, PAParticleField settings)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xB9C354", Offset = "0xB9C354", VA = "0xB9C354", Slot = "10")]
	protected override int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xB9C7CC", Offset = "0xB9C7CC", VA = "0xB9C7CC", Slot = "11")]
	protected override void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xB9CA74", Offset = "0xB9CA74", VA = "0xB9CA74", Slot = "14")]
	protected override void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xB9CCC8", Offset = "0xB9CCC8", VA = "0xB9CCC8", Slot = "12")]
	protected override void UpdateSurface(PAParticleField settings, int startAt = 0)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xB9D0F8", Offset = "0xB9D0F8", VA = "0xB9D0F8", Slot = "16")]
	protected override void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xB9D230", Offset = "0xB9D230", VA = "0xB9D230", Slot = "13")]
	protected override void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xB9AE04", Offset = "0xB9AE04", VA = "0xB9AE04")]
	public static float Vector3ToFloat(Vector3 c)
	{
		return default(float);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xB9B158", Offset = "0xB9B158", VA = "0xB9B158")]
	public PAMeshParticle()
	{
	}
}
[Token(Token = "0x200016B")]
public class PAPFHelper
{
	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasInitialized;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int _IsUnserialized;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int _Editor;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int _UserFacing;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int _EdgeAlpha;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int _EdgeScale;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int _ParticleSize;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int _FieldSize;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int _Speed;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int _SpinSpeed;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int _Force;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int _SpeedScale;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int _UOffset;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int _EdgeThreshold;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int _InverseEdgeThreshold;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int _FaceDirection;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int _UpDirection;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int _ParticleCount;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int _CountMask;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int _TotalTime;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int _DeltaSpeed;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int _DeltaForce;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int _DeltaPosition;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int _NearFadeDistance;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int _NearFadeOffset;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int[] _ExclusionMatrix;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int[] _ExclusionThreshold;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int[] _InverseExclusionThreshold;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static int _TurbulenceOffset;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int _TurbulenceFrequency;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static int _TurbulenceScale;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static int _TurbulenceDeltaOffset;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static int _MainTex;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static int _Color;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static int _CutOff;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static int _Softness;

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xB9D4C8", Offset = "0xB9D4C8", VA = "0xB9D4C8")]
	public static void GetPropertyIDs()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xB9DB84", Offset = "0xB9DB84", VA = "0xB9DB84")]
	public PAPFHelper()
	{
	}
}
[Token(Token = "0x200016C")]
public class PAParticleMeshGenerator : MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x20005DC")]
	public static class RandomWrapper
	{
		[Token(Token = "0x4002B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_Seed;

		[Token(Token = "0x4002B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static UnityEngine.Random.State cachedState;

		[Token(Token = "0x170003B4")]
		public static int seed
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0xBA32B0", Offset = "0xBA32B0", VA = "0xBA32B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0xBA2DB8", Offset = "0xBA2DB8", VA = "0xBA2DB8")]
		public static void CacheState()
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0xBA2E8C", Offset = "0xBA2E8C", VA = "0xBA2E8C")]
		public static void RestoreState()
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0xBA2E1C", Offset = "0xBA2E1C", VA = "0xBA2E1C")]
		public static void SetState(int seed)
		{
		}
	}

	[Token(Token = "0x4000980")]
	private const int DATA_STRUCTURE_VERSION = 2;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	protected Vector3[] verts;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	protected Vector3[] normals;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	protected Vector4[] tangents;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	protected Vector2[] uv0;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	protected Vector2[] uv1;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	protected Color[] colors;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	protected int[] triangles;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private int dataStructureVersion;

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xBA2C2C", Offset = "0xBA2C2C", VA = "0xBA2C2C", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xBA2DB0", Offset = "0xBA2DB0", VA = "0xBA2DB0", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xBA2DB4", Offset = "0xBA2DB4", VA = "0xBA2DB4")]
	protected void CacheSeed()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xBA2E14", Offset = "0xBA2E14", VA = "0xBA2E14")]
	private void SetSeed(int seed)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xB9CA04", Offset = "0xB9CA04", VA = "0xB9CA04")]
	protected float GetRandomAndIncrement(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xBA2E88", Offset = "0xBA2E88", VA = "0xBA2E88")]
	protected void ResetSeed()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xBA2EE4", Offset = "0xBA2EE4", VA = "0xBA2EE4", Slot = "6")]
	public virtual int GetMaximumParticleCount()
	{
		return default(int);
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xB9C254", Offset = "0xB9C254", VA = "0xB9C254", Slot = "7")]
	public virtual float GetParticleBaseSize()
	{
		return default(float);
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xB9C9CC", Offset = "0xB9C9CC", VA = "0xB9C9CC")]
	protected void SkipRandomCalls(int callsPerParticle, int count)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xB9C318", Offset = "0xB9C318", VA = "0xB9C318", Slot = "8")]
	public virtual void UpdateMesh(Mesh mesh, PAParticleField settings)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xBA2EEC", Offset = "0xBA2EEC", VA = "0xBA2EEC", Slot = "9")]
	protected virtual void UpdateCache(PAParticleField settings)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xB9B0B0", Offset = "0xB9B0B0", VA = "0xB9B0B0")]
	protected void FillMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xB9C424", Offset = "0xB9C424", VA = "0xB9C424")]
	public int GetClampedParticleCount(int count)
	{
		return default(int);
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xBA3214", Offset = "0xBA3214", VA = "0xBA3214", Slot = "10")]
	protected virtual int SetParticleCapacity(int count)
	{
		return default(int);
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xB9C458", Offset = "0xB9C458", VA = "0xB9C458")]
	protected void SetArraySizes(int vertCount, int triCount)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xBA321C", Offset = "0xBA321C", VA = "0xBA321C", Slot = "11")]
	protected virtual void UpdateDirection(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xBA3220", Offset = "0xBA3220", VA = "0xBA3220", Slot = "12")]
	protected virtual void UpdateSurface(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xBA3224", Offset = "0xBA3224", VA = "0xBA3224", Slot = "13")]
	protected virtual void UpdateSpeed(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xBA3228", Offset = "0xBA3228", VA = "0xBA3228", Slot = "14")]
	protected virtual void UpdateColor(PAParticleField settings, int startAt)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xBA322C", Offset = "0xBA322C", VA = "0xBA322C", Slot = "15")]
	protected virtual void UpdateIndicies()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xBA3230", Offset = "0xBA3230", VA = "0xBA3230", Slot = "16")]
	protected virtual void UpdateTriangles(int startAt)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xBA2CD8", Offset = "0xBA2CD8", VA = "0xBA2CD8")]
	public void ClearCache()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xBA3234", Offset = "0xBA3234", VA = "0xBA3234")]
	public void CheckDataStructureVersion()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xB9D4C0", Offset = "0xB9D4C0", VA = "0xB9D4C0")]
	public PAParticleMeshGenerator()
	{
	}
}
[Token(Token = "0x200016D")]
[ExecuteInEditMode]
public class PAExclusionZone : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D298", Offset = "0x85D298")]
	private sealed class <>c
	{
		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<PAExclusionZone> <>9__5_0;

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0xB9BFC0", Offset = "0xB9BFC0", VA = "0xB9BFC0")]
		public <>c()
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0xB9BFC8", Offset = "0xB9BFC8", VA = "0xB9BFC8")]
		internal bool <UnregisterZone>b__5_0(PAExclusionZone obj)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PAExclusionZone> exclusionZones;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask affectsLayers;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 edgeThreshold;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool important;

	[Token(Token = "0x170000B0")]
	private Bounds bounds
	{
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xB9B710", Offset = "0xB9B710", VA = "0xB9B710")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xB9B4C4", Offset = "0xB9B4C4", VA = "0xB9B4C4")]
	public static void RegisterZone(PAExclusionZone zone)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xB9B5B0", Offset = "0xB9B5B0", VA = "0xB9B5B0")]
	public static void UnregisterZone(PAExclusionZone zone)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xB9B704", Offset = "0xB9B704", VA = "0xB9B704")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xB9B708", Offset = "0xB9B708", VA = "0xB9B708")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xB9B70C", Offset = "0xB9B70C", VA = "0xB9B70C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xB9BA1C", Offset = "0xB9BA1C", VA = "0xB9BA1C")]
	private static Vector3 ClosestPointOnBounds(Bounds bounds, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xB9BA24", Offset = "0xB9BA24", VA = "0xB9BA24")]
	public static bool GetExclusionZones(ref PAExclusionZone[] zones, Vector3 position, Bounds checkBounds, int layer)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xB9BE70", Offset = "0xB9BE70", VA = "0xB9BE70")]
	public static PAExclusionZone Create(string name)
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xB9BEE8", Offset = "0xB9BEE8", VA = "0xB9BEE8")]
	public PAExclusionZone()
	{
	}
}
[Token(Token = "0x200016E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859960", Offset = "0x859960")]
public class PAParticleField : MonoBehaviour
{
	[Token(Token = "0x20005DE")]
	public enum ParticleType
	{
		[Token(Token = "0x4002B0C")]
		Billboard,
		[Token(Token = "0x4002B0D")]
		Mesh,
		[Token(Token = "0x4002B0E")]
		Custom
	}

	[Token(Token = "0x20005DF")]
	public enum SimulationSpace
	{
		[Token(Token = "0x4002B10")]
		World,
		[Token(Token = "0x4002B11")]
		Local,
		[Token(Token = "0x4002B12")]
		LocalWithDelta
	}

	[Token(Token = "0x20005E0")]
	public enum Shape
	{
		[Token(Token = "0x4002B14")]
		Cube,
		[Token(Token = "0x4002B15")]
		Sphere,
		[Token(Token = "0x4002B16")]
		Cylinder
	}

	[Token(Token = "0x20005E1")]
	public enum EdgeMode
	{
		[Token(Token = "0x4002B18")]
		Alpha,
		[Token(Token = "0x4002B19")]
		Scale,
		[Token(Token = "0x4002B1A")]
		Both
	}

	[Token(Token = "0x20005E2")]
	public enum MaterialType
	{
		[Token(Token = "0x4002B1C")]
		Transparent,
		[Token(Token = "0x4002B1D")]
		TransparentLit,
		[Token(Token = "0x4002B1E")]
		Additive,
		[Token(Token = "0x4002B1F")]
		AdditiveLit,
		[Token(Token = "0x4002B20")]
		CutOff,
		[Token(Token = "0x4002B21")]
		CutOffLit,
		[Token(Token = "0x4002B22")]
		Custom,
		[Token(Token = "0x4002B23")]
		MeshDefault,
		[Token(Token = "0x4002B24")]
		MeshUnlit
	}

	[Token(Token = "0x20005E3")]
	public enum TextureType
	{
		[Token(Token = "0x4002B26")]
		Simple,
		[Token(Token = "0x4002B27")]
		SpriteGrid,
		[Token(Token = "0x4002B28")]
		AnimatedRows
	}

	[Token(Token = "0x20005E4")]
	public enum SoftParticleType
	{
		[Token(Token = "0x4002B2A")]
		None,
		[Token(Token = "0x4002B2B")]
		NearClipOnly,
		[Token(Token = "0x4002B2C")]
		NearClipAndCameraDepth
	}

	[Token(Token = "0x20005E5")]
	public enum TurbulenceType
	{
		[Token(Token = "0x4002B2E")]
		None,
		[Token(Token = "0x4002B2F")]
		Simplex2D,
		[Token(Token = "0x4002B30")]
		Simplex
	}

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] builtinShaderNames;

	[Token(Token = "0x400098E")]
	private const int MAX_PARTICLE_COUNT = 16250;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clearCacheInBuilds;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isOpenGL;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int mSeed;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleType mGeneratorType;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Mesh mInputMesh;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int mParticleCount;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float mParticleCountMask;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 mFieldSize;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 mEdgeThreshold;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private EdgeMode mEdgeMode;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private SimulationSpace mSimulationSpace;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Shape mShape;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool mUseExclusionZones;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform mExclusionAnchorOverride;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Vector2 mParticleSize;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float mSpeed;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private Vector3 mSpeedMask;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Color mColor;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Vector3 mForce;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private bool mCustomFacingDirection;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Vector3 mFacingDirection;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private bool mCustomUpDirection;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Vector3 mUpDirection;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private bool mStretchedBillboard;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float mSpeedScaleMultiplier;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private bool mSpin;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float mSpinSpeed;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float mMinSpinSpeed;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private bool mCustomRotationAxis;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private Vector3 mRotationAxis;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private SoftParticleType mSoftParticles;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private float mNearFadeDistance;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private float mNearFadeOffset;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private float mSoftness;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TurbulenceType mTurbulenceType;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private float mTurbulenceFrequency;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private float mTurbulenceAmplitude;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[SerializeField]
	private Vector3 mTurbulenceScale;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Vector3 mTurbulenceOffsetSpeed;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Gradient mColorVariation;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private float mMinimumSize;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	private float mMinimumSpeed;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private MaterialType mMaterialType;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Shader mShader;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Texture2D mTexture;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Vector2 mPivotOffset;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private TextureType mTextureType;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[SerializeField]
	private int mSpriteColumns;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private int mSpriteRows;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[SerializeField]
	private float mFramerate;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private float mCutOff;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[SerializeField]
	private bool mReceiveShadows;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private ShadowCastingMode mCastShadows;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Mesh particleMesh;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private MeshFilter meshFilter;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private PAParticleMeshGenerator m_MeshGenerator;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	public Material material;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Material renderingMaterial;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float time;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Vector3 speedTime;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 forceTime;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float spinTime;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 turbulenceOffsetTime;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float frameTime;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 position;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 deltaPosition;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 scale;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861474", Offset = "0x861474")]
	private MeshFlags <meshIsDirtyMask>k__BackingField;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861484", Offset = "0x861484")]
	private bool <shaderIsDirty>k__BackingField;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
	private bool foundExclusionZones;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private PAExclusionZone[] zones;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private Material temporarySerializableMaterial;

	[Token(Token = "0x170000B1")]
	public int seed
	{
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xB9DB90", Offset = "0xB9DB90", VA = "0xB9DB90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xB9DB98", Offset = "0xB9DB98", VA = "0xB9DB98")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public ParticleType generatorType
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xB9DBB8", Offset = "0xB9DBB8", VA = "0xB9DBB8")]
		get
		{
			return default(ParticleType);
		}
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xB9A4D0", Offset = "0xB9A4D0", VA = "0xB9A4D0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public int particleCount
	{
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xB9DBC0", Offset = "0xB9DBC0", VA = "0xB9DBC0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xB9DBC8", Offset = "0xB9DBC8", VA = "0xB9DBC8")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public float particleCountMask
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xB9DDAC", Offset = "0xB9DDAC", VA = "0xB9DDAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xB9DDB4", Offset = "0xB9DDB4", VA = "0xB9DDB4")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public Vector3 fieldSize
	{
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xB9DE44", Offset = "0xB9DE44", VA = "0xB9DE44")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xB9DE50", Offset = "0xB9DE50", VA = "0xB9DE50")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public Vector3 edgeThreshold
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xB9DF10", Offset = "0xB9DF10", VA = "0xB9DF10")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xB9DF1C", Offset = "0xB9DF1C", VA = "0xB9DF1C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public SimulationSpace simulationSpace
	{
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xB9E02C", Offset = "0xB9E02C", VA = "0xB9E02C")]
		get
		{
			return default(SimulationSpace);
		}
		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xB9E034", Offset = "0xB9E034", VA = "0xB9E034")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public Shape shape
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xB9E050", Offset = "0xB9E050", VA = "0xB9E050")]
		get
		{
			return default(Shape);
		}
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xB9E058", Offset = "0xB9E058", VA = "0xB9E058")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public EdgeMode edgeMode
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xB9E074", Offset = "0xB9E074", VA = "0xB9E074")]
		get
		{
			return default(EdgeMode);
		}
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xB9E07C", Offset = "0xB9E07C", VA = "0xB9E07C")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public bool useExclusionZones
	{
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xB9E098", Offset = "0xB9E098", VA = "0xB9E098")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xB9E0A0", Offset = "0xB9E0A0", VA = "0xB9E0A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public Transform exclusionAnchorOverride
	{
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xB9E0C8", Offset = "0xB9E0C8", VA = "0xB9E0C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xB9E0D0", Offset = "0xB9E0D0", VA = "0xB9E0D0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public Color color
	{
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xB9E158", Offset = "0xB9E158", VA = "0xB9E158")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xB9E164", Offset = "0xB9E164", VA = "0xB9E164")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public float alpha
	{
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xB9E1D8", Offset = "0xB9E1D8", VA = "0xB9E1D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xB9E1E0", Offset = "0xB9E1E0", VA = "0xB9E1E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public float speed
	{
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xB9E200", Offset = "0xB9E200", VA = "0xB9E200")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xB9E208", Offset = "0xB9E208", VA = "0xB9E208")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public Vector3 speedMask
	{
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xB9E224", Offset = "0xB9E224", VA = "0xB9E224")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xB9E230", Offset = "0xB9E230", VA = "0xB9E230")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public Vector2 particleSize
	{
		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xB9E2F0", Offset = "0xB9E2F0", VA = "0xB9E2F0")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xB9E2F8", Offset = "0xB9E2F8", VA = "0xB9E2F8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public bool stretchedBillboard
	{
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xB9E39C", Offset = "0xB9E39C", VA = "0xB9E39C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xB9E3A4", Offset = "0xB9E3A4", VA = "0xB9E3A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public float speedScaleMultiplier
	{
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xB9E3D8", Offset = "0xB9E3D8", VA = "0xB9E3D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xB9E3E0", Offset = "0xB9E3E0", VA = "0xB9E3E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public bool spin
	{
		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xB9E3FC", Offset = "0xB9E3FC", VA = "0xB9E3FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xB9E404", Offset = "0xB9E404", VA = "0xB9E404")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public float spinSpeed
	{
		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xB9E438", Offset = "0xB9E438", VA = "0xB9E438")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xB9E440", Offset = "0xB9E440", VA = "0xB9E440")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public float minSpinSpeed
	{
		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xB9E45C", Offset = "0xB9E45C", VA = "0xB9E45C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xB9E464", Offset = "0xB9E464", VA = "0xB9E464")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public bool customRotationAxis
	{
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xB9E500", Offset = "0xB9E500", VA = "0xB9E500")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xB9E508", Offset = "0xB9E508", VA = "0xB9E508")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public Vector3 rotationAxis
	{
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xB9E534", Offset = "0xB9E534", VA = "0xB9E534")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xB9E540", Offset = "0xB9E540", VA = "0xB9E540")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public bool customFacingDirection
	{
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xB9E604", Offset = "0xB9E604", VA = "0xB9E604")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xB9E60C", Offset = "0xB9E60C", VA = "0xB9E60C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public Vector3 facingDirection
	{
		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xB9E634", Offset = "0xB9E634", VA = "0xB9E634")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xB9E640", Offset = "0xB9E640", VA = "0xB9E640")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public bool customUpDirection
	{
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xB9E704", Offset = "0xB9E704", VA = "0xB9E704")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xB9E70C", Offset = "0xB9E70C", VA = "0xB9E70C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public Vector3 upDirection
	{
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xB9E740", Offset = "0xB9E740", VA = "0xB9E740")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xB9E74C", Offset = "0xB9E74C", VA = "0xB9E74C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public SoftParticleType softParticles
	{
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xB9E80C", Offset = "0xB9E80C", VA = "0xB9E80C")]
		get
		{
			return default(SoftParticleType);
		}
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xB9E814", Offset = "0xB9E814", VA = "0xB9E814")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public float nearFadeDistance
	{
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xB9E954", Offset = "0xB9E954", VA = "0xB9E954")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xB9E95C", Offset = "0xB9E95C", VA = "0xB9E95C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public float nearFadeOffset
	{
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xB9E978", Offset = "0xB9E978", VA = "0xB9E978")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xB9E980", Offset = "0xB9E980", VA = "0xB9E980")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public float softness
	{
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xB9E99C", Offset = "0xB9E99C", VA = "0xB9E99C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xB9E9A4", Offset = "0xB9E9A4", VA = "0xB9E9A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public TurbulenceType turbulenceType
	{
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xB9E9C0", Offset = "0xB9E9C0", VA = "0xB9E9C0")]
		get
		{
			return default(TurbulenceType);
		}
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xB9E9C8", Offset = "0xB9E9C8", VA = "0xB9E9C8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public float turbulenceFrequency
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xB9E9E4", Offset = "0xB9E9E4", VA = "0xB9E9E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xB9E9EC", Offset = "0xB9E9EC", VA = "0xB9E9EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public float turbulenceAmplitude
	{
		[Token(Token = "0x6000900")]
		[Address(RVA = "0xB9EA08", Offset = "0xB9EA08", VA = "0xB9EA08")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000901")]
		[Address(RVA = "0xB9EA10", Offset = "0xB9EA10", VA = "0xB9EA10")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public Vector3 turbulenceScale
	{
		[Token(Token = "0x6000902")]
		[Address(RVA = "0xB9EA2C", Offset = "0xB9EA2C", VA = "0xB9EA2C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000903")]
		[Address(RVA = "0xB9EA38", Offset = "0xB9EA38", VA = "0xB9EA38")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public Vector3 turbulenceOffsetSpeed
	{
		[Token(Token = "0x6000904")]
		[Address(RVA = "0xB9EAF8", Offset = "0xB9EAF8", VA = "0xB9EAF8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000905")]
		[Address(RVA = "0xB9EB08", Offset = "0xB9EB08", VA = "0xB9EB08")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public Gradient colorVariation
	{
		[Token(Token = "0x6000906")]
		[Address(RVA = "0xB9CC5C", Offset = "0xB9CC5C", VA = "0xB9CC5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000907")]
		[Address(RVA = "0xB9EBD0", Offset = "0xB9EBD0", VA = "0xB9EBD0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public float minimumSize
	{
		[Token(Token = "0x6000908")]
		[Address(RVA = "0xB9EBF0", Offset = "0xB9EBF0", VA = "0xB9EBF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000909")]
		[Address(RVA = "0xB9EBF8", Offset = "0xB9EBF8", VA = "0xB9EBF8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public float minimumSpeed
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0xB9EC8C", Offset = "0xB9EC8C", VA = "0xB9EC8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600090B")]
		[Address(RVA = "0xB9EC94", Offset = "0xB9EC94", VA = "0xB9EC94")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public Vector3 force
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xB9ED28", Offset = "0xB9ED28", VA = "0xB9ED28")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600090D")]
		[Address(RVA = "0xB9ED34", Offset = "0xB9ED34", VA = "0xB9ED34")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public MaterialType materialType
	{
		[Token(Token = "0x600090E")]
		[Address(RVA = "0xB9EDF4", Offset = "0xB9EDF4", VA = "0xB9EDF4")]
		get
		{
			return default(MaterialType);
		}
		[Token(Token = "0x600090F")]
		[Address(RVA = "0xB9EDFC", Offset = "0xB9EDFC", VA = "0xB9EDFC")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public Shader shader
	{
		[Token(Token = "0x6000910")]
		[Address(RVA = "0xB9EF68", Offset = "0xB9EF68", VA = "0xB9EF68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000911")]
		[Address(RVA = "0xB9EED8", Offset = "0xB9EED8", VA = "0xB9EED8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public Texture2D texture
	{
		[Token(Token = "0x6000912")]
		[Address(RVA = "0xB9EF70", Offset = "0xB9EF70", VA = "0xB9EF70")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000913")]
		[Address(RVA = "0xB9EF78", Offset = "0xB9EF78", VA = "0xB9EF78")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public TextureType textureType
	{
		[Token(Token = "0x6000914")]
		[Address(RVA = "0xB9F008", Offset = "0xB9F008", VA = "0xB9F008")]
		get
		{
			return default(TextureType);
		}
		[Token(Token = "0x6000915")]
		[Address(RVA = "0xB9F010", Offset = "0xB9F010", VA = "0xB9F010")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public int spriteColumns
	{
		[Token(Token = "0x6000916")]
		[Address(RVA = "0xB9F038", Offset = "0xB9F038", VA = "0xB9F038")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xB9F040", Offset = "0xB9F040", VA = "0xB9F040")]
		set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public int spriteRows
	{
		[Token(Token = "0x6000918")]
		[Address(RVA = "0xB9F0D8", Offset = "0xB9F0D8", VA = "0xB9F0D8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xB9F0E0", Offset = "0xB9F0E0", VA = "0xB9F0E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public float framerate
	{
		[Token(Token = "0x600091A")]
		[Address(RVA = "0xB9F178", Offset = "0xB9F178", VA = "0xB9F178")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600091B")]
		[Address(RVA = "0xB9F180", Offset = "0xB9F180", VA = "0xB9F180")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public float cutOff
	{
		[Token(Token = "0x600091C")]
		[Address(RVA = "0xB9F194", Offset = "0xB9F194", VA = "0xB9F194")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xB9F19C", Offset = "0xB9F19C", VA = "0xB9F19C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public Vector2 pivotOffset
	{
		[Token(Token = "0x600091E")]
		[Address(RVA = "0xB9F22C", Offset = "0xB9F22C", VA = "0xB9F22C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xB9F238", Offset = "0xB9F238", VA = "0xB9F238")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public Mesh inputMesh
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0xB9F2E8", Offset = "0xB9F2E8", VA = "0xB9F2E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xB9F2F0", Offset = "0xB9F2F0", VA = "0xB9F2F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public bool receiveShadows
	{
		[Token(Token = "0x6000922")]
		[Address(RVA = "0xB9F304", Offset = "0xB9F304", VA = "0xB9F304")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000923")]
		[Address(RVA = "0xB9F30C", Offset = "0xB9F30C", VA = "0xB9F30C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public ShadowCastingMode castShadows
	{
		[Token(Token = "0x6000924")]
		[Address(RVA = "0xB9F3B8", Offset = "0xB9F3B8", VA = "0xB9F3B8")]
		get
		{
			return default(ShadowCastingMode);
		}
		[Token(Token = "0x6000925")]
		[Address(RVA = "0xB9F3C0", Offset = "0xB9F3C0", VA = "0xB9F3C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	private PAParticleMeshGenerator meshGenerator
	{
		[Token(Token = "0x6000926")]
		[Address(RVA = "0xB9DCCC", Offset = "0xB9DCCC", VA = "0xB9DCCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000927")]
		[Address(RVA = "0xB9F5F8", Offset = "0xB9F5F8", VA = "0xB9F5F8")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public MeshFlags meshIsDirtyMask
	{
		[Token(Token = "0x6000928")]
		[Address(RVA = "0xB9F600", Offset = "0xB9F600", VA = "0xB9F600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E728", Offset = "0x86E728")]
		get
		{
			return default(MeshFlags);
		}
		[Token(Token = "0x6000929")]
		[Address(RVA = "0xB9F608", Offset = "0xB9F608", VA = "0xB9F608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E738", Offset = "0x86E738")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public bool shaderIsDirty
	{
		[Token(Token = "0x600092A")]
		[Address(RVA = "0xB9F610", Offset = "0xB9F610", VA = "0xB9F610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E748", Offset = "0x86E748")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600092B")]
		[Address(RVA = "0xB9F618", Offset = "0xB9F618", VA = "0xB9F618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E758", Offset = "0x86E758")]
		set
		{
		}
	}

	[Token(Token = "0x600092C")]
	private T GetOrAddComponent<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xB9F624", Offset = "0xB9F624", VA = "0xB9F624")]
	private void GetRenderingComponents()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xB9F6DC", Offset = "0xB9F6DC", VA = "0xB9F6DC")]
	private void CreateAssetTypes()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xB9F850", Offset = "0xB9F850", VA = "0xB9F850")]
	private Material CreateInstanceMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xB9F468", Offset = "0xB9F468", VA = "0xB9F468")]
	private void UpdateGeneratorType(ParticleType newType)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xB9F9DC", Offset = "0xB9F9DC", VA = "0xB9F9DC")]
	private void SetShaderValues()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xBA0970", Offset = "0xBA0970", VA = "0xBA0970")]
	private void SetKeyword(string keyword, bool enable)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xBA09F0", Offset = "0xBA09F0", VA = "0xBA09F0")]
	private static void SetMaterialKeyword(string keyword, bool enable, Material material)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xBA0AA8", Offset = "0xBA0AA8", VA = "0xBA0AA8")]
	private void SetFloatKeyword(string keyword, bool enable)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xBA0944", Offset = "0xBA0944", VA = "0xBA0944")]
	private void SetFloatKeyword(int keywordID, bool enable)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xBA0AD4", Offset = "0xBA0AD4", VA = "0xBA0AD4")]
	public void UpdateParticleField()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xBA0B00", Offset = "0xBA0B00", VA = "0xBA0B00")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xBA0BC0", Offset = "0xBA0BC0", VA = "0xBA0BC0")]
	public void UpdateShader()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xBA0BE4", Offset = "0xBA0BE4", VA = "0xBA0BE4")]
	private void UpdateAnimationValues()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xBA0C28", Offset = "0xBA0C28", VA = "0xBA0C28")]
	public void Simulate(float t, bool restart = false)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xBA0EA8", Offset = "0xBA0EA8", VA = "0xBA0EA8")]
	private void UpdateExclusionZoneValues()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xBA0FF4", Offset = "0xBA0FF4", VA = "0xBA0FF4")]
	private void SetShaderAnimationValues()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xBA14E8", Offset = "0xBA14E8", VA = "0xBA14E8")]
	private void SetShaderExclusionZoneValues()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xBA1C10", Offset = "0xBA1C10", VA = "0xBA1C10")]
	private void Start()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xBA1CB0", Offset = "0xBA1CB0", VA = "0xBA1CB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xBA0E00", Offset = "0xBA0E00", VA = "0xBA0E00")]
	public void ResetTimers()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xBA1CB4", Offset = "0xBA1CB4", VA = "0xBA1CB4")]
	public void SetForce(Vector3 f)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xBA1CB8", Offset = "0xBA1CB8", VA = "0xBA1CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xBA1F78", Offset = "0xBA1F78", VA = "0xBA1F78")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xBA20E8", Offset = "0xBA20E8", VA = "0xBA20E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xBA21EC", Offset = "0xBA21EC", VA = "0xBA21EC")]
	public int GetMaxCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xBA2298", Offset = "0xBA2298", VA = "0xBA2298")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xBA2424", Offset = "0xBA2424", VA = "0xBA2424")]
	public static PAParticleField Create(string name)
	{
		return null;
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xBA249C", Offset = "0xBA249C", VA = "0xBA249C")]
	private void CreateTemporarySerializableMaterial()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xBA2648", Offset = "0xBA2648", VA = "0xBA2648")]
	public PAParticleField()
	{
	}
}
[Token(Token = "0x200016F")]
[Flags]
public enum MeshFlags
{
	[Token(Token = "0x40009D9")]
	None = 0,
	[Token(Token = "0x40009DA")]
	Generator = 1,
	[Token(Token = "0x40009DB")]
	Count = 2,
	[Token(Token = "0x40009DC")]
	Color = 4,
	[Token(Token = "0x40009DD")]
	Speed = 8,
	[Token(Token = "0x40009DE")]
	Surface = 0x10,
	[Token(Token = "0x40009DF")]
	Seed = 0x1C,
	[Token(Token = "0x40009E0")]
	All = 0x1F
}
[Token(Token = "0x2000170")]
public class HighlightNearestFace : MonoBehaviour
{
	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float travel;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private pb_Object target;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private pb_Face nearest;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xB84F10", Offset = "0xB84F10", VA = "0xB84F10")]
	private void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xB85140", Offset = "0xB85140", VA = "0xB85140")]
	private void Update()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xB85474", Offset = "0xB85474", VA = "0xB85474")]
	private Vector3 FaceCenter(pb_Object pb, pb_Face face)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xB855AC", Offset = "0xB855AC", VA = "0xB855AC")]
	public HighlightNearestFace()
	{
	}
}
[Token(Token = "0x2000171")]
[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x20005E6")]
	public enum Mode
	{
		[Token(Token = "0x4002B32")]
		OutlineAll,
		[Token(Token = "0x4002B33")]
		OutlineVisible,
		[Token(Token = "0x4002B34")]
		OutlineHidden,
		[Token(Token = "0x4002B35")]
		OutlineAndSilhouette,
		[Token(Token = "0x4002B36")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x20005E7")]
	private class ListVector3
	{
		[Token(Token = "0x4002B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0xEE7E2C", Offset = "0xEE7E2C", VA = "0xEE7E2C")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D2A8", Offset = "0x85D2A8")]
	private sealed class <>c
	{
		[Token(Token = "0x4002B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0xEE7FBC", Offset = "0xEE7FBC", VA = "0xEE7FBC")]
		public <>c()
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0xEE7FC4", Offset = "0xEE7FC4", VA = "0xEE7FC4")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0xEE8054", Offset = "0xEE8054", VA = "0xEE8054")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8614C4", Offset = "0x8614C4")]
	private float outlineWidth;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x861504", Offset = "0x861504")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861504", Offset = "0x861504")]
	private bool precomputeOutline;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x170000E8")]
	public Mode OutlineMode
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0xEE68D4", Offset = "0xEE68D4", VA = "0xEE68D4")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000950")]
		[Address(RVA = "0xEE68DC", Offset = "0xEE68DC", VA = "0xEE68DC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0xEE68EC", Offset = "0xEE68EC", VA = "0xEE68EC")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000952")]
		[Address(RVA = "0xEE68F8", Offset = "0xEE68F8", VA = "0xEE68F8")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public float OutlineWidth
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0xEE690C", Offset = "0xEE690C", VA = "0xEE690C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xEE6914", Offset = "0xEE6914", VA = "0xEE6914")]
		set
		{
		}
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xEE6924", Offset = "0xEE6924", VA = "0xEE6924")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xEE6D04", Offset = "0xEE6D04", VA = "0xEE6D04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xEE6E14", Offset = "0xEE6E14", VA = "0xEE6E14")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xEE7084", Offset = "0xEE7084", VA = "0xEE7084")]
	private void Update()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xEE7250", Offset = "0xEE7250", VA = "0xEE7250")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xEE7360", Offset = "0xEE7360", VA = "0xEE7360")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xEE6EEC", Offset = "0xEE6EEC", VA = "0xEE6EEC")]
	private void Bake()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xEE6A50", Offset = "0xEE6A50", VA = "0xEE6A50")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xEE73D8", Offset = "0xEE73D8", VA = "0xEE73D8")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xEE7098", Offset = "0xEE7098", VA = "0xEE7098")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xEE7E34", Offset = "0xEE7E34", VA = "0xEE7E34")]
	public Outline()
	{
	}
}
[Token(Token = "0x2000172")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8599F4", Offset = "0x8599F4")]
public class ReverseNormals : MonoBehaviour
{
	[Token(Token = "0x6000961")]
	[Address(RVA = "0xAF98EC", Offset = "0xAF98EC", VA = "0xAF98EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xAF9B68", Offset = "0xAF9B68", VA = "0xAF9B68")]
	public ReverseNormals()
	{
	}
}
[Token(Token = "0x2000173")]
public class RotateLoadingIcon : MonoBehaviour
{
	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xAFC050", Offset = "0xAFC050", VA = "0xAFC050")]
	private void Start()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xAFC054", Offset = "0xAFC054", VA = "0xAFC054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xAFC0D4", Offset = "0xAFC0D4", VA = "0xAFC0D4")]
	public RotateLoadingIcon()
	{
	}
}
[Token(Token = "0x2000174")]
public class MultiCameraSample : MonoBehaviour
{
	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig[] cameraControllers;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentController;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRHarness harness;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xAB7858", Offset = "0xAB7858", VA = "0xAB7858")]
	private void Start()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xAB790C", Offset = "0xAB790C", VA = "0xAB790C")]
	private void UpdateCameraControllers()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xAB7AF0", Offset = "0xAB7AF0", VA = "0xAB7AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xAB7CE4", Offset = "0xAB7CE4", VA = "0xAB7CE4")]
	public MultiCameraSample()
	{
	}
}
[Token(Token = "0x2000175")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859A58", Offset = "0x859A58")]
public class SamplePlayerController : OVRPlayerController
{
	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public OVRInput.Button runButton;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public OVRInput.Button alternateRunButton;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool rotationSnap;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float PendingRotation;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float SimulationRate_;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool prevHatLeft_;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool prevHatRight_;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private OVRPose? InitialPose_;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 MoveThrottle_;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float FallSpeed_;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float InitialYRotation_;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float axisDeadZone;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float rotationAnimation;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float targetYaw;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool animating;

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xAFD520", Offset = "0xAFD520", VA = "0xAFD520")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xAFD984", Offset = "0xAFD984", VA = "0xAFD984")]
	protected void Update()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xAFE0A4", Offset = "0xAFE0A4", VA = "0xAFE0A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xAFE0A8", Offset = "0xAFE0A8", VA = "0xAFE0A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xAFE0AC", Offset = "0xAFE0AC", VA = "0xAFE0AC")]
	private float AngleDifference(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xAFE0F0", Offset = "0xAFE0F0", VA = "0xAFE0F0", Slot = "5")]
	public override void UpdateMovement()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xAFED68", Offset = "0xAFED68", VA = "0xAFED68")]
	public void SetRotationSnap(bool value)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xAFED78", Offset = "0xAFED78", VA = "0xAFED78")]
	public void SetRotationAnimation(float value)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xAFED84", Offset = "0xAFED84", VA = "0xAFED84")]
	public new void ResetOrientation()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xAFEE7C", Offset = "0xAFEE7C", VA = "0xAFEE7C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xAFEE84", Offset = "0xAFEE84", VA = "0xAFEE84")]
	public SamplePlayerController()
	{
	}
}
[Token(Token = "0x2000176")]
public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string axisName;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float axisValue;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float responseSpeed;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float returnToCentreSpeed;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AxisTouchButton pairedWith;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CrossPlatformInputManager.VirtualAxis axis;

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xBB5734", Offset = "0xBB5734", VA = "0xBB5734")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xBB57E0", Offset = "0xBB57E0", VA = "0xBB57E0")]
	private void FindPairedButton()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xBB5960", Offset = "0xBB5960", VA = "0xBB5960")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xBB597C", Offset = "0xBB597C", VA = "0xBB597C", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xBB5A64", Offset = "0xBB5A64", VA = "0xBB5A64", Slot = "5")]
	public void OnPointerUp(PointerEventData data)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xBB5B0C", Offset = "0xBB5B0C", VA = "0xBB5B0C")]
	public AxisTouchButton()
	{
	}
}
[Token(Token = "0x2000177")]
public class CameraSwitch : MonoBehaviour
{
	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentActiveObject;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text text;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xC02BA8", Offset = "0xC02BA8", VA = "0xC02BA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xC02C1C", Offset = "0xC02C1C", VA = "0xC02C1C")]
	public void NextCamera()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xC02CF4", Offset = "0xC02CF4", VA = "0xC02CF4")]
	public CameraSwitch()
	{
	}
}
[Token(Token = "0x2000178")]
public class Joystick : MonoBehaviour, IPointerUpHandler, IEventSystemHandler, IPointerDownHandler, IDragHandler
{
	[Token(Token = "0x20005E9")]
	public enum AxisOption
	{
		[Token(Token = "0x4002B3C")]
		Both,
		[Token(Token = "0x4002B3D")]
		OnlyHorizontal,
		[Token(Token = "0x4002B3E")]
		OnlyVertical
	}

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MovementRange;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AxisOption axesToUse;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string horizontalAxisName;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string verticalAxisName;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startPos;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool useX;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool useY;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CrossPlatformInputManager.VirtualAxis horizontalVirtualAxis;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CrossPlatformInputManager.VirtualAxis verticalVirtualAxis;

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xB868D8", Offset = "0xB868D8", VA = "0xB868D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xB869E8", Offset = "0xB869E8", VA = "0xB869E8")]
	private void UpdateVirtualAxes(Vector3 value)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xB86918", Offset = "0xB86918", VA = "0xB86918")]
	private void CreateVirtualAxes()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xB86AD8", Offset = "0xB86AD8", VA = "0xB86AD8", Slot = "6")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xB86C98", Offset = "0xB86C98", VA = "0xB86C98", Slot = "4")]
	public void OnPointerUp(PointerEventData data)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xB86CE0", Offset = "0xB86CE0", VA = "0xB86CE0", Slot = "5")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xB86CE4", Offset = "0xB86CE4", VA = "0xB86CE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xB86D3C", Offset = "0xB86D3C", VA = "0xB86D3C")]
	public Joystick()
	{
	}
}
[Token(Token = "0x2000179")]
public class LevelReset : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6000986")]
	[Address(RVA = "0xA0D780", Offset = "0xA0D780", VA = "0xA0D780", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xA0D7B8", Offset = "0xA0D7B8", VA = "0xA0D7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xA0D7BC", Offset = "0xA0D7BC", VA = "0xA0D7BC")]
	public LevelReset()
	{
	}
}
[Token(Token = "0x200017A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859ABC", Offset = "0x859ABC")]
public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x20005EA")]
	public enum AxisOption
	{
		[Token(Token = "0x4002B40")]
		Both,
		[Token(Token = "0x4002B41")]
		OnlyHorizontal,
		[Token(Token = "0x4002B42")]
		OnlyVertical
	}

	[Token(Token = "0x20005EB")]
	public enum ControlStyle
	{
		[Token(Token = "0x4002B44")]
		Absolute,
		[Token(Token = "0x4002B45")]
		Relative,
		[Token(Token = "0x4002B46")]
		Swipe
	}

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AxisOption axesToUse;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ControlStyle controlStyle;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string horizontalAxisName;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string verticalAxisName;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sensitivity;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 startPos;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 previousDelta;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_JoytickOutput;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool useX;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool useY;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CrossPlatformInputManager.VirtualAxis horizontalVirtualAxis;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CrossPlatformInputManager.VirtualAxis verticalVirtualAxis;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool dragging;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int id;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 center;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Image image;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector2 previousTouchPos;

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xAE91C8", Offset = "0xAE91C8", VA = "0xAE91C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xAE924C", Offset = "0xAE924C", VA = "0xAE924C")]
	private void CreateVirtualAxes()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xAE931C", Offset = "0xAE931C", VA = "0xAE931C")]
	private void UpdateVirtualAxes(Vector3 value)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xAE9388", Offset = "0xAE9388", VA = "0xAE9388", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xAE9438", Offset = "0xAE9438", VA = "0xAE9438")]
	private void Update()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xAE9644", Offset = "0xAE9644", VA = "0xAE9644", Slot = "5")]
	public void OnPointerUp(PointerEventData data)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xAE96BC", Offset = "0xAE96BC", VA = "0xAE96BC")]
	public TouchPad()
	{
	}
}
[Token(Token = "0x200017B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859B20", Offset = "0x859B20")]
public class ForcedReset : MonoBehaviour
{
	[Token(Token = "0x6000990")]
	[Address(RVA = "0xA04828", Offset = "0xA04828", VA = "0xA04828")]
	private void Update()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xA048C0", Offset = "0xA048C0", VA = "0xA048C0")]
	public ForcedReset()
	{
	}
}
[Token(Token = "0x200017C")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xB83D74", Offset = "0xB83D74", VA = "0xB83D74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xB83EA8", Offset = "0xB83EA8", VA = "0xB83EA8")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xB840F8", Offset = "0xB840F8", VA = "0xB840F8")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200017D")]
public class InputTool : MonoBehaviour
{
	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text outputText;

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xB85CD4", Offset = "0xB85CD4", VA = "0xB85CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xB85CD8", Offset = "0xB85CD8", VA = "0xB85CD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xB8686C", Offset = "0xB8686C", VA = "0xB8686C")]
	public InputTool()
	{
	}
}
[Token(Token = "0x200017E")]
public class VRKeyboard : MonoBehaviour
{
	[Token(Token = "0x20005EC")]
	private class Key
	{
		[Token(Token = "0x4002B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string character;

		[Token(Token = "0x4002B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string shiftedCharacter;

		[Token(Token = "0x4002B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode code;

		[Token(Token = "0x4002B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject button;

		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool pressed;

		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool special;

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0xB5BCA8", Offset = "0xB5BCA8", VA = "0xB5BCA8")]
		public Key()
		{
		}
	}

	[Token(Token = "0x20005ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D2B8", Offset = "0x85D2B8")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRKeyboard <>4__this;

		[Token(Token = "0x4002B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Key key;

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0xB5BCA0", Offset = "0xB5BCA0", VA = "0xB5BCA0")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0xB5CB20", Offset = "0xB5CB20", VA = "0xB5CB20")]
		internal void <CreateKey>b__0()
		{
		}
	}

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject canvas;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonPrototype;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text displayText;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 origin;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 spacing;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 keyTranslation;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool capsShift;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool capsLock;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool prevCapsLock;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Key> keys;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<KeyCode, Key> keyCodeToKey;

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xB5B9C0", Offset = "0xB5B9C0", VA = "0xB5B9C0")]
	private void CreateKey(string name, string _char, string shiftedChar, KeyCode code, Vector2 pos, Vector2 scale, bool special = false)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xB5BCB0", Offset = "0xB5BCB0", VA = "0xB5BCB0")]
	private void CreateKeyRow(string chars, string shiftedChars, KeyCode[] codes, Vector2 pos, float offset)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xB5BE60", Offset = "0xB5BE60", VA = "0xB5BE60")]
	private void CreateKeyboard()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xB5C244", Offset = "0xB5C244", VA = "0xB5C244")]
	private void Start()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xB5C2B8", Offset = "0xB5C2B8", VA = "0xB5C2B8")]
	private void ButtonPressed(Key key)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xB5C440", Offset = "0xB5C440", VA = "0xB5C440")]
	private void SetCapsShift(bool down)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xB5C5A0", Offset = "0xB5C5A0", VA = "0xB5C5A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xB5C5A4", Offset = "0xB5C5A4", VA = "0xB5C5A4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xB5CAB0", Offset = "0xB5CAB0", VA = "0xB5CAB0")]
	public VRKeyboard()
	{
	}
}
[Token(Token = "0x200017F")]
public class InputFocusSample : MonoBehaviour
{
	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nearObjectOwner;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xB858B8", Offset = "0xB858B8", VA = "0xB858B8")]
	private void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xB859E8", Offset = "0xB859E8", VA = "0xB859E8")]
	private void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xB85BFC", Offset = "0xB85BFC", VA = "0xB85BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xB85CC8", Offset = "0xB85CC8", VA = "0xB85CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xB85CCC", Offset = "0xB85CCC", VA = "0xB85CCC")]
	public InputFocusSample()
	{
	}
}
[Token(Token = "0x2000180")]
public class MovingCube : MonoBehaviour
{
	[Token(Token = "0x4000A36")]
	private const float movingAmp = 10f;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform transformCom;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float phase;

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xAB7708", Offset = "0xAB7708", VA = "0xAB7708")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xAB7790", Offset = "0xAB7790", VA = "0xAB7790")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xAB7850", Offset = "0xAB7850", VA = "0xAB7850")]
	public MovingCube()
	{
	}
}
[Token(Token = "0x2000181")]
public class OVRHarness : MonoBehaviour, IOVRInspectorContext
{
	[Token(Token = "0x20005EE")]
	private enum InspectorContext
	{
		[Token(Token = "0x4002B51")]
		None,
		[Token(Token = "0x4002B52")]
		SceneList,
		[Token(Token = "0x4002B53")]
		Help
	}

	[Token(Token = "0x20005EF")]
	private class HierarchyNode
	{
		[Token(Token = "0x4002B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<HierarchyNode> children;

		[Token(Token = "0x4002B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HierarchyNode parent;

		[Token(Token = "0x4002B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x9D42D0", Offset = "0x9D42D0", VA = "0x9D42D0")]
		public void addNode(string[] path, int pathDepth = 0)
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x9D4248", Offset = "0x9D4248", VA = "0x9D4248")]
		public HierarchyNode(string name, HierarchyNode parent)
		{
		}
	}

	[Token(Token = "0x20005F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D2C8", Offset = "0x85D2C8")]
	private sealed class <DisableDocsScrollingForStartup>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRHarness <>4__this;

		[Token(Token = "0x170003B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x9D5278", Offset = "0x9D5278", VA = "0x9D5278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x9D52E0", Offset = "0x9D52E0", VA = "0x9D52E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x9D421C", Offset = "0x9D421C", VA = "0x9D421C")]
		[DebuggerHidden]
		public <DisableDocsScrollingForStartup>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x9D517C", Offset = "0x9D517C", VA = "0x9D517C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x9D5180", Offset = "0x9D5180", VA = "0x9D5180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x9D5280", Offset = "0x9D5280", VA = "0x9D5280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D2D8", Offset = "0x85D2D8")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4002B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HierarchyNode nodeCopy;

		[Token(Token = "0x4002B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRHarness <>4__this;

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x9D4984", Offset = "0x9D4984", VA = "0x9D4984")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x9D50C4", Offset = "0x9D50C4", VA = "0x9D50C4")]
		internal void <BuildSceneUI>b__1(Button <p0>)
		{
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x9D513C", Offset = "0x9D513C", VA = "0x9D513C")]
		internal void <BuildSceneUI>b__2(Button <p0>)
		{
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x9D515C", Offset = "0x9D515C", VA = "0x9D515C")]
		internal void <BuildSceneUI>b__3(Button <p0>)
		{
		}
	}

	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D2E8", Offset = "0x85D2E8")]
	private sealed class <LoadLevelCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRHarness <>4__this;

		[Token(Token = "0x4002B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string levelName;

		[Token(Token = "0x170003B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0x9D56A0", Offset = "0x9D56A0", VA = "0x9D56A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0x9D5708", Offset = "0x9D5708", VA = "0x9D5708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x9D4FFC", Offset = "0x9D4FFC", VA = "0x9D4FFC")]
		[DebuggerHidden]
		public <LoadLevelCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x9D52E8", Offset = "0x9D52E8", VA = "0x9D52E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x9D52EC", Offset = "0x9D52EC", VA = "0x9D52EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x9D56A8", Offset = "0x9D56A8", VA = "0x9D56A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string introFile;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string helpFile;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string SCENE_FILE_NAME;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] sceneNames;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool loadingLevel;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRInspector Inspector;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HierarchyNode rootNode;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HierarchyNode currentNode;

	[Token(Token = "0x170000EB")]
	public bool LoadingLevel
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x9D3AA0", Offset = "0x9D3AA0", VA = "0x9D3AA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x9D3AA8", Offset = "0x9D3AA8", VA = "0x9D3AA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x9D3B24", Offset = "0x9D3B24", VA = "0x9D3B24")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x9D41AC", Offset = "0x9D41AC", VA = "0x9D41AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E768", Offset = "0x86E768")]
	private IEnumerator DisableDocsScrollingForStartup()
	{
		return null;
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x9D3C58", Offset = "0x9D3C58", VA = "0x9D3C58")]
	private void ReadSceneList()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x9D44B4", Offset = "0x9D44B4", VA = "0x9D44B4", Slot = "4")]
	public void SetContextActive(OVRInspector Inspector, int subContextID, bool active)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x9D44B8", Offset = "0x9D44B8", VA = "0x9D44B8", Slot = "5")]
	public void BuildUI(OVRInspector Inspector, int subContextID)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x9D48E8", Offset = "0x9D48E8", VA = "0x9D48E8", Slot = "6")]
	public string GetName(int subContextID)
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x9D45C0", Offset = "0x9D45C0", VA = "0x9D45C0")]
	public void BuildSceneUI(OVRInspector Inspector)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x9D44D4", Offset = "0x9D44D4", VA = "0x9D44D4")]
	public void BuildHelpUI(OVRInspector Inspector)
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x9D4A04", Offset = "0x9D4A04", VA = "0x9D4A04")]
	private void ShowIntroDocs()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x9D4A20", Offset = "0x9D4A20", VA = "0x9D4A20")]
	private void GotoSceneControls()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x9D4AB0", Offset = "0x9D4AB0", VA = "0x9D4AB0")]
	private void NodeSelected(HierarchyNode node)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x9D4F40", Offset = "0x9D4F40", VA = "0x9D4F40")]
	private void LoadLevel(string levelName)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x9D4F80", Offset = "0x9D4F80", VA = "0x9D4F80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E7CC", Offset = "0x86E7CC")]
	private IEnumerator LoadLevelCoroutine(string levelName)
	{
		return null;
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x9D5028", Offset = "0x9D5028", VA = "0x9D5028")]
	public OVRHarness()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x9D508C", Offset = "0x9D508C", VA = "0x9D508C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E830", Offset = "0x86E830")]
	private void <BuildSceneUI>b__19_0(Button <p0>)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x9D50A8", Offset = "0x9D50A8", VA = "0x9D50A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E840", Offset = "0x86E840")]
	private void <BuildHelpUI>b__20_0(Button <p0>)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x9D50AC", Offset = "0x9D50AC", VA = "0x9D50AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E850", Offset = "0x86E850")]
	private void <BuildHelpUI>b__20_1(Button <p0>)
	{
	}
}
[Token(Token = "0x2000182")]
public class OVRSceneLoader : MonoBehaviour
{
	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D2F8", Offset = "0x85D2F8")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRSceneLoader <>4__this;

		[Token(Token = "0x4002B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fadeTime>5__2;

		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__3;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__4;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SpriteRenderer <sr>5__5;

		[Token(Token = "0x170003B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0x9E668C", Offset = "0x9E668C", VA = "0x9E668C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0x9E66F4", Offset = "0x9E66F4", VA = "0x9E66F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x9E62B4", Offset = "0x9E62B4", VA = "0x9E62B4")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x9E633C", Offset = "0x9E633C", VA = "0x9E633C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x9E6340", Offset = "0x9E6340", VA = "0x9E6340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x9E6694", Offset = "0x9E6694", VA = "0x9E6694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject logoCanvas;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8615E4", Offset = "0x8615E4")]
	public string firstSceneName;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86161C", Offset = "0x86161C")]
	public float firstSceneFadeTime;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861654", Offset = "0x861654")]
	public float defaultFadeTime;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool firstScene;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string nextScene;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x9D561C", Offset = "0x9D561C", VA = "0x9D561C")]
	public static void LoadSceneViaLoadingScene(string scene)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x9E6244", Offset = "0x9E6244", VA = "0x9E6244")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E860", Offset = "0x86E860")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x9E62E0", Offset = "0x9E62E0", VA = "0x9E62E0")]
	public OVRSceneLoader()
	{
	}
}
[Token(Token = "0x2000183")]
public interface IOVRInspectorContext
{
	[Token(Token = "0x60009C1")]
	void SetContextActive(OVRInspector inspector, int subContextID, bool active);

	[Token(Token = "0x60009C2")]
	void BuildUI(OVRInspector inspector, int subContextID);

	[Token(Token = "0x60009C3")]
	string GetName(int subContextID);
}
[Token(Token = "0x2000184")]
public class OVRDiscomfortWarning : MonoBehaviour
{
	[Token(Token = "0x20005F4")]
	public enum DiscomfortWarningType
	{
		[Token(Token = "0x4002B68")]
		FirstPersonControls,
		[Token(Token = "0x4002B69")]
		Acceleration,
		[Token(Token = "0x4002B6A")]
		VerticalAcceleration,
		[Token(Token = "0x4002B6B")]
		RapidRotation,
		[Token(Token = "0x4002B6C")]
		HeadRelativeUI,
		[Token(Token = "0x4002B6D")]
		Aliasing,
		[Token(Token = "0x4002B6E")]
		Other
	}

	[Token(Token = "0x20005F5")]
	public struct DiscomfortWarning
	{
		[Token(Token = "0x4002B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DiscomfortWarningType type;

		[Token(Token = "0x4002B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string message;

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x765C4C", Offset = "0x765C4C", VA = "0x765C4C")]
		public DiscomfortWarning(DiscomfortWarningType type, [Optional] string message)
		{
		}
	}

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject warningPanel;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text messageText;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<DiscomfortWarning> warnings;

	[Token(Token = "0x170000EC")]
	public bool panelActive
	{
		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x9D2A9C", Offset = "0x9D2A9C", VA = "0x9D2A9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x9D2B30", Offset = "0x9D2B30", VA = "0x9D2B30")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x9D2CFC", Offset = "0x9D2CFC", VA = "0x9D2CFC")]
	public void ResetWarnings()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x9D2D54", Offset = "0x9D2D54", VA = "0x9D2D54")]
	public bool HasWarnings()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x9D2DAC", Offset = "0x9D2DAC", VA = "0x9D2DAC")]
	public void ShowAndConfigureWarningPanel()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x9D3310", Offset = "0x9D3310", VA = "0x9D3310")]
	public void HideWarningPanel()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x9D33A4", Offset = "0x9D33A4", VA = "0x9D33A4")]
	public string GetMessage(DiscomfortWarningType warning)
	{
		return null;
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x9D2E84", Offset = "0x9D2E84", VA = "0x9D2E84")]
	private void PopulateWarningList(OVRDiscomfortWarningSource[] sources)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x9D319C", Offset = "0x9D319C", VA = "0x9D319C")]
	public string BuildWarningMessage()
	{
		return null;
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x9D3454", Offset = "0x9D3454", VA = "0x9D3454")]
	public OVRDiscomfortWarning()
	{
	}
}
[Token(Token = "0x2000185")]
public abstract class OVRDiscomfortWarningSource : MonoBehaviour
{
	[Token(Token = "0x60009CE")]
	public abstract IEnumerable<OVRDiscomfortWarning.DiscomfortWarning> GetWarnings();

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x9D34D0", Offset = "0x9D34D0", VA = "0x9D34D0")]
	protected OVRDiscomfortWarningSource()
	{
	}
}
[Token(Token = "0x2000186")]
public class OVRInspector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005F6")]
	public class InspectorShowEvent : UnityEvent
	{
		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x9DAF08", Offset = "0x9DAF08", VA = "0x9DAF08")]
		public InspectorShowEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005F7")]
	public class InspectorHideEvent : UnityEvent
	{
		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x9DAF10", Offset = "0x9DAF10", VA = "0x9DAF10")]
		public InspectorHideEvent()
		{
		}
	}

	[Token(Token = "0x20005F8")]
	public enum UIFadeMode
	{
		[Token(Token = "0x4002B72")]
		never,
		[Token(Token = "0x4002B73")]
		whenNoRoom,
		[Token(Token = "0x4002B74")]
		always
	}

	[Token(Token = "0x20005F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D308", Offset = "0x85D308")]
	private sealed class <>c__DisplayClass124_0
	{
		[Token(Token = "0x4002B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OVRInspector <>4__this;

		[Token(Token = "0x4002B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRInspectorContextDetails detailsCopy;

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x9D9470", Offset = "0x9D9470", VA = "0x9D9470")]
		public <>c__DisplayClass124_0()
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x9DAF4C", Offset = "0x9DAF4C", VA = "0x9DAF4C")]
		internal void <AddContextButton>b__0(Button b)
		{
		}
	}

	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D318", Offset = "0x85D318")]
	private sealed class <QuitApp>d__143 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRInspector <>4__this;

		[Token(Token = "0x170003BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A01")]
			[Address(RVA = "0x9DB0F8", Offset = "0x9DB0F8", VA = "0x9DB0F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A03")]
			[Address(RVA = "0x9DB160", Offset = "0x9DB160", VA = "0x9DB160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x9DA7B0", Offset = "0x9DA7B0", VA = "0x9DA7B0")]
		[DebuggerHidden]
		public <QuitApp>d__143(int <>1__state)
		{
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x9DB070", Offset = "0x9DB070", VA = "0x9DB070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x9DB074", Offset = "0x9DB074", VA = "0x9DB074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x9DB100", Offset = "0x9DB100", VA = "0x9DB100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D328", Offset = "0x85D328")]
	private sealed class <RecenterCountdown>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRInspector <>4__this;

		[Token(Token = "0x4002B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <seconds>5__2;

		[Token(Token = "0x170003BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x9DB340", Offset = "0x9DB340", VA = "0x9DB340", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x9DB3A8", Offset = "0x9DB3A8", VA = "0x9DB3A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0x9DA878", Offset = "0x9DA878", VA = "0x9DA878")]
		[DebuggerHidden]
		public <RecenterCountdown>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0x9DB168", Offset = "0x9DB168", VA = "0x9DB168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A06")]
		[Address(RVA = "0x9DB16C", Offset = "0x9DB16C", VA = "0x9DB16C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0x9DB348", Offset = "0x9DB348", VA = "0x9DB348", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D338", Offset = "0x85D338")]
	private sealed class <FadeOutCameras>d__151 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRInspector <>4__this;

		[Token(Token = "0x170003BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x9DB000", Offset = "0x9DB000", VA = "0x9DB000", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x9DB068", Offset = "0x9DB068", VA = "0x9DB068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0x9DA8A4", Offset = "0x9DA8A4", VA = "0x9DA8A4")]
		[DebuggerHidden]
		public <FadeOutCameras>d__151(int <>1__state)
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0x9DAF70", Offset = "0x9DAF70", VA = "0x9DAF70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0x9DAF74", Offset = "0x9DAF74", VA = "0x9DAF74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0x9DB008", Offset = "0x9DB008", VA = "0x9DB008", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86168C", Offset = "0x86168C")]
	private static OVRInspector <instance>k__BackingField;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86169C", Offset = "0x86169C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86169C", Offset = "0x86169C")]
	public float eyeToGUIDistance;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8616FC", Offset = "0x8616FC")]
	public float buttonSpacing;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861734", Offset = "0x861734")]
	public float guiGeometryClearanceScale;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86176C", Offset = "0x86176C")]
	public float minimumScale;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8617A4", Offset = "0x8617A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8617A4", Offset = "0x8617A4")]
	public KeyCode showKey;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861804", Offset = "0x861804")]
	public KeyCode hideKey;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86183C", Offset = "0x86183C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86183C", Offset = "0x86183C")]
	public Material uiMaterial;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86189C", Offset = "0x86189C")]
	public Material uiFontMaterial;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8618D4", Offset = "0x8618D4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8618D4", Offset = "0x8618D4")]
	public bool allowClose;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861934", Offset = "0x861934")]
	public float frameRateUpdateInterval;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86196C", Offset = "0x86196C")]
	[SerializeField]
	public InspectorShowEvent onInspectorShow;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public InspectorHideEvent onInspectorHide;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UIFadeMode _uiFadeMode;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _uiFadeLevel;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _drawOverEverything;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _autoDistance;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8619C8", Offset = "0x8619C8")]
	private OVRScreenFade <fader>k__BackingField;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8619D8", Offset = "0x8619D8")]
	private OVRPlayerController <playerController>k__BackingField;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8619E8", Offset = "0x8619E8")]
	private GameObject <leftCamera>k__BackingField;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8619F8", Offset = "0x8619F8")]
	private GameObject <rightCamera>k__BackingField;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861A08", Offset = "0x861A08")]
	private OVRManager <manager>k__BackingField;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861A18", Offset = "0x861A18")]
	private Transform <centerEyeTransform>k__BackingField;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject canvas;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private OVRInspectorPanelBuilder centerPanel;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRInspectorPanelBuilder leftPanel;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRInspectorPanelBuilder rightPanel;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OVRInspectorPanelBuilder currentPointerPanel;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private OVRInspectorPanelBuilder controlsPanel;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private OVRDiscomfortWarning discomfortWarning;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject docsPanel;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private OVRGazeScroller docsScroller;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Text docsPanelText;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string docText;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int summoningIgnoreLayers;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Button recenterButton;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Button lastSelectedContextButton;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool previouslySkippingMouseRotation;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool previouslyHaltedMovementUpdate;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int playerLayer;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float maxInspectorScale;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool roomForInspector;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 cachedPosition;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float cachedScaleRatio;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRMousePointer pointer;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector2 mousePos;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private OVRInputModule inputModule;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private EventSystem eventSystemPrefab;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Button buttonPrefab;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Button folderPrefab;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float lastFrameRateUpdateTime;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int lastFrameIndex;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float lastFPSValue;

	[Token(Token = "0x4000A7F")]
	private const string filterPrefix = "ONLY_";

	[Token(Token = "0x4000A80")]
	private const string nodeToCull = "ONLY_RIFT";

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private OVRInspectorContextDetails currentContext;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<OVRInspectorContextDetails> contextList;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<OVRInspectorContextDetails> sceneSpecificContexts;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool menuActive;

	[Token(Token = "0x170000ED")]
	public static OVRInspector instance
	{
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x9D5710", Offset = "0x9D5710", VA = "0x9D5710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E8C4", Offset = "0x86E8C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x9D5760", Offset = "0x9D5760", VA = "0x9D5760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E8D4", Offset = "0x86E8D4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public float frameRate
	{
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x9D57B4", Offset = "0x9D57B4", VA = "0x9D57B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EF")]
	public UIFadeMode uiFadeMode
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x9D57BC", Offset = "0x9D57BC", VA = "0x9D57BC")]
		get
		{
			return default(UIFadeMode);
		}
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x9D57C4", Offset = "0x9D57C4", VA = "0x9D57C4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public float uiFadeLevel
	{
		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x9D57D0", Offset = "0x9D57D0", VA = "0x9D57D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x9D57D8", Offset = "0x9D57D8", VA = "0x9D57D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public bool drawOverEverything
	{
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x9D57E0", Offset = "0x9D57E0", VA = "0x9D57E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x9D57E8", Offset = "0x9D57E8", VA = "0x9D57E8")]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public bool autoDistance
	{
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x9D59F8", Offset = "0x9D59F8", VA = "0x9D59F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x9D5A00", Offset = "0x9D5A00", VA = "0x9D5A00")]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public OVRScreenFade fader
	{
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x9D5BFC", Offset = "0x9D5BFC", VA = "0x9D5BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E8E4", Offset = "0x86E8E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x9D5C04", Offset = "0x9D5C04", VA = "0x9D5C04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E8F4", Offset = "0x86E8F4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public OVRPlayerController playerController
	{
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x9D5C0C", Offset = "0x9D5C0C", VA = "0x9D5C0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E904", Offset = "0x86E904")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x9D5C14", Offset = "0x9D5C14", VA = "0x9D5C14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E914", Offset = "0x86E914")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public static OVRCameraRig cameraRig
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x9D5C1C", Offset = "0x9D5C1C", VA = "0x9D5C1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F6")]
	public GameObject leftCamera
	{
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x9D5C80", Offset = "0x9D5C80", VA = "0x9D5C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E924", Offset = "0x86E924")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x9D5C88", Offset = "0x9D5C88", VA = "0x9D5C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E934", Offset = "0x86E934")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public GameObject rightCamera
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x9D5C90", Offset = "0x9D5C90", VA = "0x9D5C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E944", Offset = "0x86E944")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x9D5C98", Offset = "0x9D5C98", VA = "0x9D5C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E954", Offset = "0x86E954")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public OVRManager manager
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x9D5CA0", Offset = "0x9D5CA0", VA = "0x9D5CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E964", Offset = "0x86E964")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x9D5CA8", Offset = "0x9D5CA8", VA = "0x9D5CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E974", Offset = "0x86E974")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public Transform centerEyeTransform
	{
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x9D5CB0", Offset = "0x9D5CB0", VA = "0x9D5CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E984", Offset = "0x86E984")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x9D5CB8", Offset = "0x9D5CB8", VA = "0x9D5CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86E994", Offset = "0x86E994")]
		private set
		{
		}
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x9D5CC0", Offset = "0x9D5CC0", VA = "0x9D5CC0")]
	public bool IsMenuActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x9D5CC8", Offset = "0x9D5CC8", VA = "0x9D5CC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x9D6F50", Offset = "0x9D6F50", VA = "0x9D6F50")]
	private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x9D6520", Offset = "0x9D6520", VA = "0x9D6520")]
	private void OnAwakeOrLevelLoad()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x9D7498", Offset = "0x9D7498", VA = "0x9D7498")]
	public void AssignFader()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x9D7278", Offset = "0x9D7278", VA = "0x9D7278")]
	public void AssignCameraRig()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x9D7648", Offset = "0x9D7648", VA = "0x9D7648")]
	private void FindPlayerAndCamera()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x9D651C", Offset = "0x9D651C", VA = "0x9D651C")]
	private void LockCursor()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x9D7818", Offset = "0x9D7818", VA = "0x9D7818")]
	public void AddSummoningIgnoreLayers(int layers)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x9D3F38", Offset = "0x9D3F38", VA = "0x9D3F38")]
	public void Show(float rotationAroundPlayer = 0f)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x9D7848", Offset = "0x9D7848", VA = "0x9D7848")]
	public void Reposition(bool toOrigin = false, float rotationAroundPlayer = 0f)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x9D7EC0", Offset = "0x9D7EC0", VA = "0x9D7EC0")]
	private void SetScaleAllowingForGeometry()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x9D8270", Offset = "0x9D8270", VA = "0x9D8270")]
	private bool PrescaleInspectorUI(float rotationAroundPlayer = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x9D85F8", Offset = "0x9D85F8", VA = "0x9D85F8")]
	public void RescaleInspectorUI()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x9D5A48", Offset = "0x9D5A48", VA = "0x9D5A48")]
	private float GetCurrentRotationAroundPlayer()
	{
		return default(float);
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x9D4D7C", Offset = "0x9D4D7C", VA = "0x9D4D7C")]
	public void Hide(bool allowWarning = false)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x9D4C20", Offset = "0x9D4C20", VA = "0x9D4C20")]
	public void UpdateContextMenu()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x9D8914", Offset = "0x9D8914", VA = "0x9D8914")]
	public bool LoadSceneSpecificContextsFromPanel(Transform panel)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x9D547C", Offset = "0x9D547C", VA = "0x9D547C")]
	public void ClearSceneSpecificContexts()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x9D49AC", Offset = "0x9D49AC", VA = "0x9D49AC")]
	public bool ScenePanelPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x9D4A38", Offset = "0x9D4A38", VA = "0x9D4A38")]
	public void ActivateSceneContext()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x9D6668", Offset = "0x9D6668", VA = "0x9D6668")]
	private void LoadPanels(Transform panel, bool markAsSceneSpecific)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x9D6B8C", Offset = "0x9D6B8C", VA = "0x9D6B8C")]
	private void SetupAttachedContexts()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x9D89FC", Offset = "0x9D89FC", VA = "0x9D89FC")]
	private void UpdateTopMenu()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x9D7014", Offset = "0x9D7014", VA = "0x9D7014")]
	private void CleanUpTopMenu()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x9D8F7C", Offset = "0x9D8F7C", VA = "0x9D8F7C")]
	private void AddContextButton(OVRInspectorContextDetails details)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x9D9558", Offset = "0x9D9558", VA = "0x9D9558")]
	private void SelectContextButton(OVRInspectorContextDetails contextDetails, [Optional] Button button)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x9D8994", Offset = "0x9D8994", VA = "0x9D8994")]
	private void ContextActivated(OVRInspectorContextDetails contextDetails)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x9D977C", Offset = "0x9D977C", VA = "0x9D977C")]
	private void SetButtonText(Button button, string newText)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x9D3E78", Offset = "0x9D3E78", VA = "0x9D3E78")]
	public void RegisterContext(IOVRInspectorContext context, int subContextID, bool setCurrent = false)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x9D498C", Offset = "0x9D498C", VA = "0x9D498C")]
	public Button AddButton(string name, OVRInspectorPanelBuilder.ButtonPress callback)
	{
		return null;
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x9D4964", Offset = "0x9D4964", VA = "0x9D4964")]
	public Button AddFolder(string name, OVRInspectorPanelBuilder.ButtonPress callback)
	{
		return null;
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x9D9AB8", Offset = "0x9D9AB8", VA = "0x9D9AB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x9D9C28", Offset = "0x9D9C28", VA = "0x9D9C28")]
	private void UpdateFramerate()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x9D9D78", Offset = "0x9D9D78", VA = "0x9D9D78")]
	private void UpdateMousePointer()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x9D6F08", Offset = "0x9D6F08", VA = "0x9D6F08")]
	public void CentreMouse()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x9DA0F0", Offset = "0x9DA0F0", VA = "0x9DA0F0")]
	private void SetPointerPanel(OVRInspectorPanelBuilder panel)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x9DA384", Offset = "0x9DA384", VA = "0x9DA384")]
	public void SetDocText(string text)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x9D4088", Offset = "0x9D4088", VA = "0x9D4088")]
	public void SetDocTextFromFile(string filename)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x9D4D2C", Offset = "0x9D4D2C", VA = "0x9D4D2C")]
	public void ResetDocText()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x9D5258", Offset = "0x9D5258", VA = "0x9D5258")]
	public void SetDocsScrollEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x9DA490", Offset = "0x9DA490", VA = "0x9DA490")]
	private void FilterDocs(ref string docs)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x9DA640", Offset = "0x9DA640", VA = "0x9DA640")]
	private void UpdateDocsVisibility()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x9DA714", Offset = "0x9DA714", VA = "0x9DA714")]
	public void DoQuit()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x9DA740", Offset = "0x9DA740", VA = "0x9DA740")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86E9A4", Offset = "0x86E9A4")]
	private IEnumerator QuitApp()
	{
		return null;
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x9DA7DC", Offset = "0x9DA7DC", VA = "0x9DA7DC")]
	private void Recenter()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x9DA808", Offset = "0x9DA808", VA = "0x9DA808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86EA08", Offset = "0x86EA08")]
	private IEnumerator RecenterCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x9D77D4", Offset = "0x9D77D4", VA = "0x9D77D4")]
	private void CachePlayerControlDefaults()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x9D8664", Offset = "0x9D8664", VA = "0x9D8664")]
	private void SetPlayerControlDefaults()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x9D5958", Offset = "0x9D5958", VA = "0x9D5958")]
	private void UpdateUIMaterials()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x9D57CC", Offset = "0x9D57CC", VA = "0x9D57CC")]
	private void UpdateUIFade()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x9D5830", Offset = "0x9D5830", VA = "0x9D5830")]
	private void SetUIMaterials(Transform canvasTransform)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x9D540C", Offset = "0x9D540C", VA = "0x9D540C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86EA6C", Offset = "0x86EA6C")]
	public IEnumerator FadeOutCameras()
	{
		return null;
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x9D631C", Offset = "0x9D631C", VA = "0x9D631C")]
	private int GetLayerOrReportError(string layer)
	{
		return default(int);
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x9DA8D0", Offset = "0x9DA8D0", VA = "0x9DA8D0")]
	private void ReparentChildren(Transform src, Transform dst, int startIndex)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x9DAB5C", Offset = "0x9DAB5C", VA = "0x9DAB5C")]
	private void DestroyAllChildren(Transform t)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x9D8CFC", Offset = "0x9D8CFC", VA = "0x9D8CFC")]
	private void CullPlatformSpecificObjects(GameObject obj)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x9D8C88", Offset = "0x9D8C88", VA = "0x9D8C88")]
	private bool IsLabeledDontMove(GameObject panel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x9D9C98", Offset = "0x9D9C98", VA = "0x9D9C98")]
	private bool ShouldToggleMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x9DADE4", Offset = "0x9DADE4", VA = "0x9DADE4")]
	public OVRInspector()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x9DAF18", Offset = "0x9DAF18", VA = "0x9DAF18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EAD0", Offset = "0x86EAD0")]
	private void <UpdateTopMenu>b__122_0(Button <p0>)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x9DAF44", Offset = "0x9DAF44", VA = "0x9DAF44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EAE0", Offset = "0x86EAE0")]
	private void <UpdateTopMenu>b__122_1(Button <p0>)
	{
	}
}
[Token(Token = "0x2000187")]
internal class OVRInspectorContextDetails
{
	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IOVRInspectorContext context;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int subContext;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject panel;

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x9D9A78", Offset = "0x9D9A78", VA = "0x9D9A78")]
	public OVRInspectorContextDetails(IOVRInspectorContext context, int subContext)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x9D8EAC", Offset = "0x9D8EAC", VA = "0x9D8EAC")]
	public OVRInspectorContextDetails(GameObject panel)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x9D9478", Offset = "0x9D9478", VA = "0x9D9478")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x9D9644", Offset = "0x9D9644", VA = "0x9D9644")]
	public void SetContextActive(OVRInspector inspector, bool active)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x9D883C", Offset = "0x9D883C", VA = "0x9D883C")]
	public void BuildUI(OVRInspector inspector)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x9D8EDC", Offset = "0x9D8EDC", VA = "0x9D8EDC")]
	public bool GoesLastOnMenu()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000188")]
public class OVRInspectorLoader : MonoBehaviour
{
	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D348", Offset = "0x85D348")]
	private sealed class <DelayedMenuSummon>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRInspectorLoader <>4__this;

		[Token(Token = "0x170003C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0x9DB968", Offset = "0x9DB968", VA = "0x9DB968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0x9DB9D0", Offset = "0x9DB9D0", VA = "0x9DB9D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0x9DB78C", Offset = "0x9DB78C", VA = "0x9DB78C")]
		[DebuggerHidden]
		public <DelayedMenuSummon>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0x9DB854", Offset = "0x9DB854", VA = "0x9DB854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0x9DB858", Offset = "0x9DB858", VA = "0x9DB858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0x9DB970", Offset = "0x9DB970", VA = "0x9DB970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861A28", Offset = "0x861A28")]
	public bool allowClose;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861A60", Offset = "0x861A60")]
	public Transform donorPanel;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861A98", Offset = "0x861A98")]
	public float summonMenuDelay;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x861AD0", Offset = "0x861AD0")]
	[SerializeField]
	public OVRInspector.InspectorShowEvent onInspectorShow;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public OVRInspector.InspectorHideEvent onInspectorHide;

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x9DB3B0", Offset = "0x9DB3B0", VA = "0x9DB3B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x9DB684", Offset = "0x9DB684", VA = "0x9DB684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x9DB71C", Offset = "0x9DB71C", VA = "0x9DB71C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86EAF0", Offset = "0x86EAF0")]
	private IEnumerator DelayedMenuSummon()
	{
		return null;
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x9DB7B8", Offset = "0x9DB7B8", VA = "0x9DB7B8")]
	public OVRInspectorLoader()
	{
	}
}
[Token(Token = "0x2000189")]
public class OVRInspectorPanelBuilder
{
	[Token(Token = "0x20005FE")]
	public delegate void ButtonPress(Button button);

	[Token(Token = "0x20005FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D358", Offset = "0x85D358")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4002B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ButtonPress callback;

		[Token(Token = "0x4002B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x9DB9F8", Offset = "0x9DB9F8", VA = "0x9DB9F8")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x9DBA00", Offset = "0x9DBA00", VA = "0x9DBA00")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861B2C", Offset = "0x861B2C")]
	private GameObject <panel>k__BackingField;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861B3C", Offset = "0x861B3C")]
	private GameObject <scrollingContent>k__BackingField;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInspectorPanelBuilder leftPanel;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInspectorPanelBuilder rightPanel;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject buttonPanel;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Button> buttonList;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 insertPosition;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float initialScrollingContentSize;

	[Token(Token = "0x170000FA")]
	public GameObject panel
	{
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x9DB9D8", Offset = "0x9DB9D8", VA = "0x9DB9D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EB54", Offset = "0x86EB54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x9DB9E0", Offset = "0x9DB9E0", VA = "0x9DB9E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EB64", Offset = "0x86EB64")]
		private set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public GameObject scrollingContent
	{
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x9DB9E8", Offset = "0x9DB9E8", VA = "0x9DB9E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EB74", Offset = "0x86EB74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x9DB9F0", Offset = "0x9DB9F0", VA = "0x9DB9F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EB84", Offset = "0x86EB84")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x9D63C4", Offset = "0x9D63C4", VA = "0x9D63C4")]
	public OVRInspectorPanelBuilder(GameObject panel)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x9D907C", Offset = "0x9D907C", VA = "0x9D907C")]
	public Button AddButton(string name, ButtonPress callback, Button buttonPrefab)
	{
		return null;
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x9D8698", Offset = "0x9D8698", VA = "0x9D8698")]
	public void EraseButtons()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x9D7828", Offset = "0x9D7828", VA = "0x9D7828")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x9D8354", Offset = "0x9D8354", VA = "0x9D8354")]
	public void AddPanelPointsToList(int pointsPerEdge, List<Vector3> points)
	{
	}
}
[Token(Token = "0x200018A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859B84", Offset = "0x859B84")]
public class OVRMousePointer : MonoBehaviour
{
	[Token(Token = "0x2000600")]
	public enum MouseShowPolicy
	{
		[Token(Token = "0x4002B87")]
		always,
		[Token(Token = "0x4002B88")]
		withGaze,
		[Token(Token = "0x4002B89")]
		withActivity
	}

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861B4C", Offset = "0x861B4C")]
	public float inactivityTimeout;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861B84", Offset = "0x861B84")]
	public MouseShowPolicy mouseShowPolicy;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861BBC", Offset = "0x861BBC")]
	public bool hideGazePointerWhenActive;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861BF4", Offset = "0x861BF4")]
	public bool defaultMouseMovement;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseMoveSpeed;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastMouseActivityTime;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRRaycaster raycaster;

	[Token(Token = "0x170000FC")]
	public GameObject pointerObject
	{
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x9DA324", Offset = "0x9DA324", VA = "0x9DA324")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x9E0DCC", Offset = "0x9E0DCC", VA = "0x9E0DCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x9E0E4C", Offset = "0x9E0E4C", VA = "0x9E0E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x9E115C", Offset = "0x9E115C", VA = "0x9E115C")]
	public bool HasMovedRecently()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x9DA1DC", Offset = "0x9DA1DC", VA = "0x9DA1DC")]
	public void SetLocalPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x9E1190", Offset = "0x9E1190", VA = "0x9E1190")]
	public OVRMousePointer()
	{
	}
}
[Token(Token = "0x200018B")]
public class OVRRenderTrackerFrustum : MonoBehaviour
{
	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool wireframe;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material lineMaterial;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material solidMaterial;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color errorColor;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool drawCamera;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float cameraDisplaySize;

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x9E50D0", Offset = "0x9E50D0", VA = "0x9E50D0")]
	private void DrawFrustumWire(float sx, float sy, float nearZ, float farZ, Material mat, Color color)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x9E53D4", Offset = "0x9E53D4", VA = "0x9E53D4")]
	private void DrawFrustumSolid(float sx, float sy, float nearZ, float farZ, Material mat, Color color)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x9E5DB8", Offset = "0x9E5DB8", VA = "0x9E5DB8")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x9E61E8", Offset = "0x9E61E8", VA = "0x9E61E8")]
	public OVRRenderTrackerFrustum()
	{
	}
}
[Token(Token = "0x200018C")]
public class OVRSettingsMenu : MonoBehaviour
{
	[Token(Token = "0x2000601")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D368", Offset = "0x85D368")]
	private sealed class <RecenterFix>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x9E7000", Offset = "0x9E7000", VA = "0x9E7000", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x9E7068", Offset = "0x9E7068", VA = "0x9E7068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x9E6E00", Offset = "0x9E6E00", VA = "0x9E6E00")]
		[DebuggerHidden]
		public <RecenterFix>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x9E6F40", Offset = "0x9E6F40", VA = "0x9E6F40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x9E6F44", Offset = "0x9E6F44", VA = "0x9E6F44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0x9E7008", Offset = "0x9E7008", VA = "0x9E7008", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Slider virtualTextureSlider;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Slider msaaSlider;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Slider gpuLevelSlider;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Slider cpuLevelSlider;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text msaaSliderLabel;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text fpsLabel;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int chosenEyeBufferAA;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float chosenVirtualTextureSize;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRInspector inspector;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] MSAALookupTable;

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x9E66FC", Offset = "0x9E66FC", VA = "0x9E66FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x9E6B54", Offset = "0x9E6B54", VA = "0x9E6B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x9E6B58", Offset = "0x9E6B58", VA = "0x9E6B58")]
	private void UpdateFPSSliderText()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x9E6C38", Offset = "0x9E6C38", VA = "0x9E6C38")]
	public void SetEyeBufferAA(float float_value)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x9E6D0C", Offset = "0x9E6D0C", VA = "0x9E6D0C")]
	public void ApplyEyeBufferAA()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x9E6DA0", Offset = "0x9E6DA0", VA = "0x9E6DA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86EB94", Offset = "0x86EB94")]
	private IEnumerator RecenterFix()
	{
		return null;
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x9E6E2C", Offset = "0x9E6E2C", VA = "0x9E6E2C")]
	public void SetVirtualTextureSize(float value)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x9E6EB4", Offset = "0x9E6EB4", VA = "0x9E6EB4")]
	public void ApplyVirtualTextureSize()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x9E698C", Offset = "0x9E698C", VA = "0x9E698C")]
	public void SetCPULevel(float value)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x9E6A70", Offset = "0x9E6A70", VA = "0x9E6A70")]
	public void SetGPULevel(float value)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x9E6EC0", Offset = "0x9E6EC0", VA = "0x9E6EC0")]
	public OVRSettingsMenu()
	{
	}
}
[Token(Token = "0x200018D")]
public class OVRSliderLabelUpdater : MonoBehaviour
{
	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text sliderValueField;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider slider;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool setLabelAtStart;

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x9E7070", Offset = "0x9E7070", VA = "0x9E7070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x9E70C0", Offset = "0x9E70C0", VA = "0x9E70C0")]
	public void SetValue(float v)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x9E719C", Offset = "0x9E719C", VA = "0x9E719C")]
	public OVRSliderLabelUpdater()
	{
	}
}
[Token(Token = "0x200018E")]
public class OVRUISettingsMenu : MonoBehaviour
{
	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fadeModeSliderLabel;

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x9E8888", Offset = "0x9E8888", VA = "0x9E8888")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x9E8908", Offset = "0x9E8908", VA = "0x9E8908")]
	public void SetUIFadeLevel(float f)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x9E8970", Offset = "0x9E8970", VA = "0x9E8970")]
	public void SetUIFadeMode(float m)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x9E8B00", Offset = "0x9E8B00", VA = "0x9E8B00")]
	public void SetDrawOverEverything(bool b)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x9E8B60", Offset = "0x9E8B60", VA = "0x9E8B60")]
	public void SetAutoDistance(bool b)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x9E8BC0", Offset = "0x9E8BC0", VA = "0x9E8BC0")]
	public void SetSwipeThreshold(float t)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x9E8C7C", Offset = "0x9E8C7C", VA = "0x9E8C7C")]
	public OVRUISettingsMenu()
	{
	}
}
[Token(Token = "0x200018F")]
public class OVRUserPanel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000602")]
	public class ActivePanelEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6002A22")]
		[Address(RVA = "0x9E8E30", Offset = "0x9E8E30", VA = "0x9E8E30")]
		public ActivePanelEvent()
		{
		}
	}

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ActivePanelEvent _onActivePanelChanged;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861C3C", Offset = "0x861C3C")]
	public string docFile;

	[Token(Token = "0x170000FD")]
	public ActivePanelEvent onActivePanelChanged
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x9E8C84", Offset = "0x9E8C84", VA = "0x9E8C84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x9E8C8C", Offset = "0x9E8C8C", VA = "0x9E8C8C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x9E8C94", Offset = "0x9E8C94", VA = "0x9E8C94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x9E8DCC", Offset = "0x9E8DCC", VA = "0x9E8DCC")]
	public OVRUserPanel()
	{
	}
}
[Token(Token = "0x2000190")]
public class OVRWarningList : OVRDiscomfortWarningSource
{
	[Token(Token = "0x2000603")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D378", Offset = "0x85D378")]
	private sealed class <GetWarnings>d__1 : IEnumerable<OVRDiscomfortWarning.DiscomfortWarning>, IEnumerable, IEnumerator<OVRDiscomfortWarning.DiscomfortWarning>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRDiscomfortWarning.DiscomfortWarning <>2__current;

		[Token(Token = "0x4002B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4002B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OVRWarningList <>4__this;

		[Token(Token = "0x4002B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRDiscomfortWarning.DiscomfortWarningType[] <>7__wrap1;

		[Token(Token = "0x4002B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <>7__wrap2;

		[Token(Token = "0x170003C5")]
		private OVRDiscomfortWarning.DiscomfortWarning System.Collections.Generic.IEnumerator<OVRDiscomfortWarning.DiscomfortWarning>.Current
		{
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x9E8FFC", Offset = "0x9E8FFC", VA = "0x9E8FFC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(OVRDiscomfortWarning.DiscomfortWarning);
			}
		}

		[Token(Token = "0x170003C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x9E9068", Offset = "0x9E9068", VA = "0x9E9068", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0x9E8F00", Offset = "0x9E8F00", VA = "0x9E8F00")]
		[DebuggerHidden]
		public <GetWarnings>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0x9E8F40", Offset = "0x9E8F40", VA = "0x9E8F40", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0x9E8F44", Offset = "0x9E8F44", VA = "0x9E8F44", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0x9E9008", Offset = "0x9E9008", VA = "0x9E9008", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0x9E90CC", Offset = "0x9E90CC", VA = "0x9E90CC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<OVRDiscomfortWarning.DiscomfortWarning> System.Collections.Generic.IEnumerable<OVRDiscomfortWarning.DiscomfortWarning>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0x9E9178", Offset = "0x9E9178", VA = "0x9E9178", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRDiscomfortWarning.DiscomfortWarningType[] warnings;

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x9E8E80", Offset = "0x9E8E80", VA = "0x9E8E80", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86EBF8", Offset = "0x86EBF8")]
	public override IEnumerable<OVRDiscomfortWarning.DiscomfortWarning> GetWarnings()
	{
		return null;
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x9E8F38", Offset = "0x9E8F38", VA = "0x9E8F38")]
	public OVRWarningList()
	{
	}
}
[Token(Token = "0x2000191")]
public class OVRGazeEventTrigger : Graphic, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Serializable]
	[Token(Token = "0x2000604")]
	public class PointerEnterEvent : UnityEvent
	{
		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0x9D35C4", Offset = "0x9D35C4", VA = "0x9D35C4")]
		public PointerEnterEvent()
		{
		}
	}

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PointerEnterEvent onEnter;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PointerEnterEvent onExit;

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x9D34D8", Offset = "0x9D34D8", VA = "0x9D34D8", Slot = "52")]
	public virtual void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x9D34F4", Offset = "0x9D34F4", VA = "0x9D34F4", Slot = "53")]
	public virtual void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x9D3510", Offset = "0x9D3510", VA = "0x9D3510", Slot = "46")]
	public override bool Raycast(Vector2 sp, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x9D3518", Offset = "0x9D3518", VA = "0x9D3518", Slot = "42")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x86EC5C", Offset = "0x86EC5C")]
	protected override void OnFillVBO(List<UIVertex> vbo)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x9D351C", Offset = "0x9D351C", VA = "0x9D351C")]
	public OVRGazeEventTrigger()
	{
	}
}
[Token(Token = "0x2000192")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859BE8", Offset = "0x859BE8")]
public class OVRGazeScroller : MonoBehaviour
{
	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRGazeEventTrigger upTrigger;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRGazeEventTrigger downTrigger;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float scrollDirection;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float scrollRange;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float scrollPower;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool scrollEnabled;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x9D35CC", Offset = "0x9D35CC", VA = "0x9D35CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x9D3824", Offset = "0x9D3824", VA = "0x9D3824")]
	public void MarkContentChanged()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x9D3828", Offset = "0x9D3828", VA = "0x9D3828")]
	public void StartScrollUp()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x9D3834", Offset = "0x9D3834", VA = "0x9D3834")]
	public void StopScroll()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x9D383C", Offset = "0x9D383C", VA = "0x9D383C")]
	public void StartScrollDown()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x9D3848", Offset = "0x9D3848", VA = "0x9D3848")]
	public void SetEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x9D3854", Offset = "0x9D3854", VA = "0x9D3854")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x9D374C", Offset = "0x9D374C", VA = "0x9D374C")]
	private void RefreshContentSize()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x9D385C", Offset = "0x9D385C", VA = "0x9D385C")]
	public void GotoTop()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x9D38F4", Offset = "0x9D38F4", VA = "0x9D38F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x9D3A88", Offset = "0x9D3A88", VA = "0x9D3A88")]
	public OVRGazeScroller()
	{
	}
}
[Token(Token = "0x2000193")]
public class DisplayMono : MonoBehaviour
{
	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoCamera monoCam;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material displayMaterial;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float translate;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CommandBuffer commandBuf;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x9F3730", Offset = "0x9F3730", VA = "0x9F3730")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x9F3734", Offset = "0x9F3734", VA = "0x9F3734")]
	private void BuildCommandBuffer()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x9F385C", Offset = "0x9F385C", VA = "0x9F385C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x9F3860", Offset = "0x9F3860", VA = "0x9F3860")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x9F38C8", Offset = "0x9F38C8", VA = "0x9F38C8")]
	public void SetTranslate(float t)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x9F3938", Offset = "0x9F3938", VA = "0x9F3938")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x9F39D0", Offset = "0x9F39D0", VA = "0x9F39D0")]
	public DisplayMono()
	{
	}
}
[Token(Token = "0x2000194")]
public class MonoCamera : MonoBehaviour
{
	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera srcCam;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat textureFormat;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int depthBits;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int antiAliasingSamples;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool createDepthTexture;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture renderTex;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xAB37CC", Offset = "0xAB37CC", VA = "0xAB37CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xAB3A28", Offset = "0xAB3A28", VA = "0xAB3A28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xAB3BE4", Offset = "0xAB3BE4", VA = "0xAB3BE4")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xAB3C60", Offset = "0xAB3C60", VA = "0xAB3C60")]
	public MonoCamera()
	{
	}
}
[Token(Token = "0x2000195")]
public class StereoToMono : MonoBehaviour
{
	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera monoCamera;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera leftCamera;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera rightCamera;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material monoDisplayLMaterial;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material monoDisplayRMaterial;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float monoDistance;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float overlap;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool enableMono;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool showMono;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool monoAtInfinity;

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xE66658", Offset = "0xE66658", VA = "0xE66658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xE66848", Offset = "0xE66848", VA = "0xE66848")]
	public void SetEnableMono(bool b)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xE666CC", Offset = "0xE666CC", VA = "0xE666CC")]
	public void SetShowMono(bool b)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xE66854", Offset = "0xE66854", VA = "0xE66854")]
	public void SetDistance(float x)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xE6685C", Offset = "0xE6685C", VA = "0xE6685C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xE66FB4", Offset = "0xE66FB4", VA = "0xE66FB4")]
	public StereoToMono()
	{
	}
}
[Token(Token = "0x2000196")]
public class TimeWarp30HzSample : MonoBehaviour
{
	[Token(Token = "0x2000605")]
	public enum VsyncMode
	{
		[Token(Token = "0x4002B93")]
		VSYNC_60FPS = 1,
		[Token(Token = "0x4002B94")]
		VSYNC_30FPS,
		[Token(Token = "0x4002B95")]
		VSYNC_20FPS
	}

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VsyncMode targetFrameRate;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer targetFpsRenderer;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material fps20Material;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material fps30Material;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material fps60Material;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text sliderFrameRateLabel;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle chromaticToggle;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle monoscopicToggle;

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xAE506C", Offset = "0xAE506C", VA = "0xAE506C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xAE5340", Offset = "0xAE5340", VA = "0xAE5340")]
	private void UpdateVSyncMode()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xAE5598", Offset = "0xAE5598", VA = "0xAE5598")]
	public void SetVSyncMode(float modeValueOffset)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xAE56C0", Offset = "0xAE56C0", VA = "0xAE56C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xAE57D8", Offset = "0xAE57D8", VA = "0xAE57D8")]
	public TimeWarp30HzSample()
	{
	}
}
[Token(Token = "0x2000197")]
public class ShaderDemo : OVRDiscomfortWarningSource
{
	[Token(Token = "0x2000606")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D388", Offset = "0x85D388")]
	private sealed class <GetWarnings>d__17 : IEnumerable<OVRDiscomfortWarning.DiscomfortWarning>, IEnumerable, IEnumerator<OVRDiscomfortWarning.DiscomfortWarning>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRDiscomfortWarning.DiscomfortWarning <>2__current;

		[Token(Token = "0x4002B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4002B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShaderDemo <>4__this;

		[Token(Token = "0x170003C7")]
		private OVRDiscomfortWarning.DiscomfortWarning System.Collections.Generic.IEnumerator<OVRDiscomfortWarning.DiscomfortWarning>.Current
		{
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0xB01AB4", Offset = "0xB01AB4", VA = "0xB01AB4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(OVRDiscomfortWarning.DiscomfortWarning);
			}
		}

		[Token(Token = "0x170003C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0xB01B20", Offset = "0xB01B20", VA = "0xB01B20", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0xB019D0", Offset = "0xB019D0", VA = "0xB019D0")]
		[DebuggerHidden]
		public <GetWarnings>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0xB01A20", Offset = "0xB01A20", VA = "0xB01A20", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0xB01A24", Offset = "0xB01A24", VA = "0xB01A24", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0xB01AC0", Offset = "0xB01AC0", VA = "0xB01AC0", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0xB01B84", Offset = "0xB01B84", VA = "0xB01B84", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<OVRDiscomfortWarning.DiscomfortWarning> System.Collections.Generic.IEnumerable<OVRDiscomfortWarning.DiscomfortWarning>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0xB01C30", Offset = "0xB01C30", VA = "0xB01C30", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> Objects;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Texture> BumpTextures;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Texture> ParallaxTextures;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] ParallaxMaterials;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] DisplacementMaterials;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool NormalMappingOn;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool SpecularOn;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool ParallaxOn;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool DisplacementOn;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle normalToggle;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle parallaxToggle;

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xB0138C", Offset = "0xB0138C", VA = "0xB0138C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xB01598", Offset = "0xB01598", VA = "0xB01598")]
	public void SetNormalMapping(bool on)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xB018DC", Offset = "0xB018DC", VA = "0xB018DC")]
	public void SetSpecular(bool on)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xB018E8", Offset = "0xB018E8", VA = "0xB018E8")]
	public void SetParallax(bool on)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xB018F4", Offset = "0xB018F4", VA = "0xB018F4")]
	public void SetDisplacement(bool on)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xB015A4", Offset = "0xB015A4", VA = "0xB015A4")]
	private void UpdateMaterials()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xB01950", Offset = "0xB01950", VA = "0xB01950", Slot = "4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86EC6C", Offset = "0x86EC6C")]
	public override IEnumerable<OVRDiscomfortWarning.DiscomfortWarning> GetWarnings()
	{
		return null;
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xB01A08", Offset = "0xB01A08", VA = "0xB01A08")]
	public ShaderDemo()
	{
	}
}
[Token(Token = "0x2000198")]
public class LightControl : MonoBehaviour
{
	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float counterFlash;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float counterMove;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light lightObject;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float r;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float g;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float b;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool flashEnabled;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool moveEnabled;

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xA0D7C4", Offset = "0xA0D7C4", VA = "0xA0D7C4")]
	public void SetRed(float x)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xA0D7CC", Offset = "0xA0D7CC", VA = "0xA0D7CC")]
	public void SetGreen(float x)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xA0D7D4", Offset = "0xA0D7D4", VA = "0xA0D7D4")]
	public void SetBlue(float x)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xA0D7DC", Offset = "0xA0D7DC", VA = "0xA0D7DC")]
	public void SetFlashEnabled(bool x)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xA0D7E8", Offset = "0xA0D7E8", VA = "0xA0D7E8")]
	public void SetMoveEnabled(bool x)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xA0D7F4", Offset = "0xA0D7F4", VA = "0xA0D7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xA0D85C", Offset = "0xA0D85C", VA = "0xA0D85C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xA0DA78", Offset = "0xA0DA78", VA = "0xA0DA78")]
	public LightControl()
	{
	}
}
[Token(Token = "0x2000199")]
public class RotationControl : MonoBehaviour
{
	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float targetSpeed;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float currentSpeed;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fastSpeed;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowSpeed;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float accel;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float mult;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] transforms;

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xAFC0E4", Offset = "0xAFC0E4", VA = "0xAFC0E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xAFC0F0", Offset = "0xAFC0F0", VA = "0xAFC0F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xAFC20C", Offset = "0xAFC20C", VA = "0xAFC20C")]
	public void SetFast()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xAFC218", Offset = "0xAFC218", VA = "0xAFC218")]
	public void SetSlow()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xAFC224", Offset = "0xAFC224", VA = "0xAFC224")]
	public void SetForward()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xAFC230", Offset = "0xAFC230", VA = "0xAFC230")]
	public void SetBackward()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xAFC23C", Offset = "0xAFC23C", VA = "0xAFC23C")]
	public void LeverEvent(bool on)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xAFC254", Offset = "0xAFC254", VA = "0xAFC254")]
	public void SetRotation0(float f)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xAFC304", Offset = "0xAFC304", VA = "0xAFC304")]
	public void SetRotation1(float f)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xAFC3B8", Offset = "0xAFC3B8", VA = "0xAFC3B8")]
	public void SetRotation2(float f)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xAFC46C", Offset = "0xAFC46C", VA = "0xAFC46C")]
	public void SetRotation3(float f)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xAFC520", Offset = "0xAFC520", VA = "0xAFC520")]
	public RotationControl()
	{
	}
}
[Token(Token = "0x200019A")]
public class leverSystem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000607")]
	public class LeverClickedEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6002A34")]
		[Address(RVA = "0xC7E394", Offset = "0xC7E394", VA = "0xC7E394")]
		public LeverClickedEvent()
		{
		}
	}

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool previousState;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool currentState;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool moving;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float movement;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LeverClickedEvent onClick;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xC7E03C", Offset = "0xC7E03C", VA = "0xC7E03C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xC7E0E0", Offset = "0xC7E0E0", VA = "0xC7E0E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xC7E308", Offset = "0xC7E308", VA = "0xC7E308")]
	public void OnPointerClick()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xC7E328", Offset = "0xC7E328", VA = "0xC7E328")]
	public leverSystem()
	{
	}
}
[Token(Token = "0x200019B")]
public class CylinderGeo : MonoBehaviour
{
	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int widthTess;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int heightTess;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cylinderWidthArc;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float cylinderHeight;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] Vertices;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] UV;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] Triangles;

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xB06E5C", Offset = "0xB06E5C", VA = "0xB06E5C")]
	private void CreateCylinderArc()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xB07284", Offset = "0xB07284", VA = "0xB07284")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xB07370", Offset = "0xB07370", VA = "0xB07370")]
	public CylinderGeo()
	{
	}
}
[Token(Token = "0x200019C")]
public enum EUiDisplayType
{
	[Token(Token = "0x4000B02")]
	EUDT_WorldGeoQuad,
	[Token(Token = "0x4000B03")]
	EUDT_OverlayQuad,
	[Token(Token = "0x4000B04")]
	EUDT_WorldGeoCylinder,
	[Token(Token = "0x4000B05")]
	EUDT_OverlayCylinder
}
[Token(Token = "0x200019D")]
public class OverlayUIDemo : MonoBehaviour
{
	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject uiCamera;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject mainCamera;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject UIGeoParent;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cursor;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject informationText;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject backgroundHighlight;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject worldGeoProxy_Quad;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject worldGeoProxy_Cylinder;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EUiDisplayType desiredUiType;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay overOverlay;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 startPos;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform cylinderSpaceTransform;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool wasMenuActive;

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xEE80BC", Offset = "0xEE80BC", VA = "0xEE80BC")]
	private void CameraAndRenderTargetSetup()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xEE84A0", Offset = "0xEE84A0", VA = "0xEE84A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xEE85B4", Offset = "0xEE85B4", VA = "0xEE85B4")]
	private static bool CylinderRayTransfer(Vector3 startPosWorld, Vector3 rayDirWorld, Transform cylinderTransform, float radius, ref Vector3 transferedDirWorld, ref Vector3 hitPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xEE8810", Offset = "0xEE8810", VA = "0xEE8810")]
	private void OverlaySwitch()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xEE8CA4", Offset = "0xEE8CA4", VA = "0xEE8CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xEE93B8", Offset = "0xEE93B8", VA = "0xEE93B8")]
	public OverlayUIDemo()
	{
	}
}
[Token(Token = "0x200019E")]
public class GazeInteractionDemo : MonoBehaviour
{
	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GazeInteractionInputModule gazeInputModule;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float newGazeInteractionDelay;

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xA07510", Offset = "0xA07510", VA = "0xA07510")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xA0758C", Offset = "0xA0758C", VA = "0xA0758C")]
	public void SetNewGazeInteractionDelay(float d)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xA07594", Offset = "0xA07594", VA = "0xA07594")]
	public void ApplyNewGazeInteractionDelay()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xA075B4", Offset = "0xA075B4", VA = "0xA075B4")]
	public GazeInteractionDemo()
	{
	}
}
[Token(Token = "0x200019F")]
public class GazeInteractionReceiver : MonoBehaviour
{
	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xA075BC", Offset = "0xA075BC", VA = "0xA075BC")]
	public GazeInteractionReceiver()
	{
	}
}
[Token(Token = "0x20001A0")]
public class SensorManager : MonoBehaviour
{
	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SensorPrefab;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_showLines;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool m_showGeo;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> Sensors;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool firstFrame;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool sensorsSetUp;

	[Token(Token = "0x170000FE")]
	public bool ShowLines
	{
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xB005B8", Offset = "0xB005B8", VA = "0xB005B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xB005C0", Offset = "0xB005C0", VA = "0xB005C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public bool ShowGeo
	{
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xB00684", Offset = "0xB00684", VA = "0xB00684")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xB0068C", Offset = "0xB0068C", VA = "0xB0068C")]
		set
		{
		}
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xB00750", Offset = "0xB00750", VA = "0xB00750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xB00754", Offset = "0xB00754", VA = "0xB00754")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xB00774", Offset = "0xB00774", VA = "0xB00774")]
	private void SetupSensors()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xB00A24", Offset = "0xB00A24", VA = "0xB00A24")]
	public SensorManager()
	{
	}
}
[Token(Token = "0x20001A1")]
public class TrackerFrustum : MonoBehaviour
{
	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861C84", Offset = "0x861C84")]
	private int <SensorID>k__BackingField;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool m_showLines;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool m_showGeo;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material lineMaterial;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color lineColor;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color lineColor2;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lineThickness;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> lines;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_generated;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool m_showFrustum;

	[Token(Token = "0x17000100")]
	public int SensorID
	{
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xA9ACC0", Offset = "0xA9ACC0", VA = "0xA9ACC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86ECD0", Offset = "0x86ECD0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xA9ACC8", Offset = "0xA9ACC8", VA = "0xA9ACC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86ECE0", Offset = "0x86ECE0")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public bool ShowLines
	{
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xA9ACD0", Offset = "0xA9ACD0", VA = "0xA9ACD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xA9ACD8", Offset = "0xA9ACD8", VA = "0xA9ACD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public bool ShowGeo
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xA9AE48", Offset = "0xA9AE48", VA = "0xA9AE48")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xA9AE50", Offset = "0xA9AE50", VA = "0xA9AE50")]
		set
		{
		}
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xA9ACEC", Offset = "0xA9ACEC", VA = "0xA9ACEC")]
	public void ShowFrustum(bool show)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xA9AE64", Offset = "0xA9AE64", VA = "0xA9AE64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xA9B0C4", Offset = "0xA9B0C4", VA = "0xA9B0C4")]
	private void GenerateFrustum()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xA9BC80", Offset = "0xA9BC80", VA = "0xA9BC80")]
	private void CreateMeshCollider()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xA9C7A0", Offset = "0xA9C7A0", VA = "0xA9C7A0")]
	public TrackerFrustum()
	{
	}
}
[Token(Token = "0x20001A2")]
public class ScrollingUVs : MonoBehaviour
{
	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int materialIndex;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textureName;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ScrollBump;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string bumpName;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xAFF3A0", Offset = "0xAFF3A0", VA = "0xAFF3A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xAFF53C", Offset = "0xAFF53C", VA = "0xAFF53C")]
	public ScrollingUVs()
	{
	}
}
[Token(Token = "0x20001A3")]
public class CircularMovement : MonoBehaviour
{
	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeCounter;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xC04D38", Offset = "0xC04D38", VA = "0xC04D38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xC04D3C", Offset = "0xC04D3C", VA = "0xC04D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xC04E2C", Offset = "0xC04E2C", VA = "0xC04E2C")]
	public CircularMovement()
	{
	}
}
[Token(Token = "0x20001A4")]
public class HandleReset : MonoBehaviour
{
	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D398", Offset = "0x85D398")]
	private sealed class <LoadScene>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandleReset <>4__this;

		[Token(Token = "0x4002B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x170003C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0xB849E4", Offset = "0xB849E4", VA = "0xB849E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0xB84A4C", Offset = "0xB84A4C", VA = "0xB84A4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0xB84814", Offset = "0xB84814", VA = "0xB84814")]
		[DebuggerHidden]
		public <LoadScene>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0xB84848", Offset = "0xB84848", VA = "0xB84848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0xB8484C", Offset = "0xB8484C", VA = "0xB8484C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A39")]
		[Address(RVA = "0xB849EC", Offset = "0xB849EC", VA = "0xB849EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xB84628", Offset = "0xB84628", VA = "0xB84628")]
	public void DoTheThing(GameObject toDestroy)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xB847A4", Offset = "0xB847A4", VA = "0xB847A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86ECF0", Offset = "0x86ECF0")]
	private IEnumerator LoadScene()
	{
		return null;
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xB84840", Offset = "0xB84840", VA = "0xB84840")]
	public HandleReset()
	{
	}
}
[Token(Token = "0x20001A5")]
public class LayerCullDistance : MonoBehaviour
{
	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xDB392C", Offset = "0xDB392C", VA = "0xDB392C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xDB3A04", Offset = "0xDB3A04", VA = "0xDB3A04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xDB3A08", Offset = "0xDB3A08", VA = "0xDB3A08")]
	public LayerCullDistance()
	{
	}
}
[Token(Token = "0x20001A6")]
public class OculusHaptics : MonoBehaviour
{
	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D3A8", Offset = "0x85D3A8")]
	private sealed class <StopLeftHapticForce>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusHaptics <>4__this;

		[Token(Token = "0x170003CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0xED1480", Offset = "0xED1480", VA = "0xED1480", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A40")]
			[Address(RVA = "0xED14E8", Offset = "0xED14E8", VA = "0xED14E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0xED1330", Offset = "0xED1330", VA = "0xED1330")]
		[DebuggerHidden]
		public <StopLeftHapticForce>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0xED139C", Offset = "0xED139C", VA = "0xED139C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0xED13A0", Offset = "0xED13A0", VA = "0xED13A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0xED1488", Offset = "0xED1488", VA = "0xED1488", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200060A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D3B8", Offset = "0x85D3B8")]
	private sealed class <StopRightHapticForce>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusHaptics <>4__this;

		[Token(Token = "0x170003CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0xED15D4", Offset = "0xED15D4", VA = "0xED15D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A46")]
			[Address(RVA = "0xED163C", Offset = "0xED163C", VA = "0xED163C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0xED135C", Offset = "0xED135C", VA = "0xED135C")]
		[DebuggerHidden]
		public <StopRightHapticForce>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0xED14F0", Offset = "0xED14F0", VA = "0xED14F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0xED14F4", Offset = "0xED14F4", VA = "0xED14F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0xED15DC", Offset = "0xED15DC", VA = "0xED15DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controller;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float hapticDuration;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currentTimeLeft;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentTimeRight;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool playedHapticLeft;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool playedHapticRight;

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xED0E10", Offset = "0xED0E10", VA = "0xED0E10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xED0E1C", Offset = "0xED0E1C", VA = "0xED0E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xED103C", Offset = "0xED103C", VA = "0xED103C")]
	public void PlayHaptics(float intensity, bool forceOn)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xED0F64", Offset = "0xED0F64", VA = "0xED0F64")]
	private void StopLeftHaptic()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xED0FD0", Offset = "0xED0FD0", VA = "0xED0FD0")]
	private void StopRightHaptic()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xED1250", Offset = "0xED1250", VA = "0xED1250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86ED54", Offset = "0x86ED54")]
	private IEnumerator StopLeftHapticForce()
	{
		return null;
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xED12C0", Offset = "0xED12C0", VA = "0xED12C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86EDB8", Offset = "0x86EDB8")]
	private IEnumerator StopRightHapticForce()
	{
		return null;
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xED1388", Offset = "0xED1388", VA = "0xED1388")]
	public OculusHaptics()
	{
	}
}
[Token(Token = "0x20001A7")]
public class SphereCollision : MonoBehaviour
{
	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLeft;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OculusHaptics haptics;

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xE66240", Offset = "0xE66240", VA = "0xE66240")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xE66244", Offset = "0xE66244", VA = "0xE66244")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xE6632C", Offset = "0xE6632C", VA = "0xE6632C")]
	public SphereCollision()
	{
	}
}
[Token(Token = "0x20001A8")]
public class cnStreamReader : IDisposable
{
	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861C94", Offset = "0x861C94")]
	private float <X>k__BackingField;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861CA4", Offset = "0x861CA4")]
	private float <Y>k__BackingField;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861CB4", Offset = "0x861CB4")]
	private float <Z>k__BackingField;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861CC4", Offset = "0x861CC4")]
	private float <xRot>k__BackingField;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861CD4", Offset = "0x861CD4")]
	private float <yRot>k__BackingField;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861CE4", Offset = "0x861CE4")]
	private float <zRot>k__BackingField;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861CF4", Offset = "0x861CF4")]
	private float <wRot>k__BackingField;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861D04", Offset = "0x861D04")]
	private bool <IsDisposed>k__BackingField;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly System.IO.Stream stream;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly StreamReader reader;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly CultureInfo culture;

	[Token(Token = "0x17000103")]
	public Vector3 XYZ
	{
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xC7C790", Offset = "0xC7C790", VA = "0xC7C790")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xC7C7CC", Offset = "0xC7C7CC", VA = "0xC7C7CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public Quaternion Rotation
	{
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xC7C7D8", Offset = "0xC7C7D8", VA = "0xC7C7D8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xC7C810", Offset = "0xC7C810", VA = "0xC7C810")]
		private set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public float X
	{
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xC7C81C", Offset = "0xC7C81C", VA = "0xC7C81C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE1C", Offset = "0x86EE1C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xC7C824", Offset = "0xC7C824", VA = "0xC7C824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE2C", Offset = "0x86EE2C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public float Y
	{
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xC7C82C", Offset = "0xC7C82C", VA = "0xC7C82C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE3C", Offset = "0x86EE3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xC7C834", Offset = "0xC7C834", VA = "0xC7C834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE4C", Offset = "0x86EE4C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public float Z
	{
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xC7C83C", Offset = "0xC7C83C", VA = "0xC7C83C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE5C", Offset = "0x86EE5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xC7C844", Offset = "0xC7C844", VA = "0xC7C844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE6C", Offset = "0x86EE6C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public float xRot
	{
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xC7C84C", Offset = "0xC7C84C", VA = "0xC7C84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE7C", Offset = "0x86EE7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xC7C854", Offset = "0xC7C854", VA = "0xC7C854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE8C", Offset = "0x86EE8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public float yRot
	{
		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xC7C85C", Offset = "0xC7C85C", VA = "0xC7C85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EE9C", Offset = "0x86EE9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xC7C864", Offset = "0xC7C864", VA = "0xC7C864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EEAC", Offset = "0x86EEAC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public float zRot
	{
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xC7C86C", Offset = "0xC7C86C", VA = "0xC7C86C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EEBC", Offset = "0x86EEBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xC7C874", Offset = "0xC7C874", VA = "0xC7C874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EECC", Offset = "0x86EECC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public float wRot
	{
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xC7C87C", Offset = "0xC7C87C", VA = "0xC7C87C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EEDC", Offset = "0x86EEDC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xC7C884", Offset = "0xC7C884", VA = "0xC7C884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EEEC", Offset = "0x86EEEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public bool IsDisposed
	{
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xC7C88C", Offset = "0xC7C88C", VA = "0xC7C88C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EEFC", Offset = "0x86EEFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xC7C894", Offset = "0xC7C894", VA = "0xC7C894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF0C", Offset = "0x86EF0C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xC7C8A0", Offset = "0xC7C8A0", VA = "0xC7C8A0")]
	public cnStreamReader(System.IO.Stream stream)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xC7C94C", Offset = "0xC7C94C", VA = "0xC7C94C")]
	public void Read()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xC7CBF4", Offset = "0xC7CBF4", VA = "0xC7CBF4", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xC7CC44", Offset = "0xC7CC44", VA = "0xC7CC44")]
	public static cnStreamReader readFromFile(string path)
	{
		return null;
	}
}
[Token(Token = "0x20001A9")]
public class cnStreamWriter : IDisposable
{
	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861D14", Offset = "0x861D14")]
	private float <X>k__BackingField;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861D24", Offset = "0x861D24")]
	private float <Y>k__BackingField;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861D34", Offset = "0x861D34")]
	private float <Z>k__BackingField;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861D44", Offset = "0x861D44")]
	private float <xRot>k__BackingField;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861D54", Offset = "0x861D54")]
	private float <yRot>k__BackingField;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861D64", Offset = "0x861D64")]
	private float <zRot>k__BackingField;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861D74", Offset = "0x861D74")]
	private float <wRot>k__BackingField;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x861D84", Offset = "0x861D84")]
	private bool <IsDisposed>k__BackingField;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly System.IO.Stream stream;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly StreamWriter writer;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly CultureInfo culture;

	[Token(Token = "0x1700010D")]
	public Vector3 XYZ
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xC7CCD0", Offset = "0xC7CCD0", VA = "0xC7CCD0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xC7CD0C", Offset = "0xC7CD0C", VA = "0xC7CD0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public Quaternion Rotation
	{
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xC7CD18", Offset = "0xC7CD18", VA = "0xC7CD18")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xC7CD50", Offset = "0xC7CD50", VA = "0xC7CD50")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public float X
	{
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xC7CD5C", Offset = "0xC7CD5C", VA = "0xC7CD5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF1C", Offset = "0x86EF1C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xC7CD64", Offset = "0xC7CD64", VA = "0xC7CD64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF2C", Offset = "0x86EF2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public float Y
	{
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xC7CD6C", Offset = "0xC7CD6C", VA = "0xC7CD6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF3C", Offset = "0x86EF3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xC7CD74", Offset = "0xC7CD74", VA = "0xC7CD74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF4C", Offset = "0x86EF4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000111")]
	public float Z
	{
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xC7CD7C", Offset = "0xC7CD7C", VA = "0xC7CD7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF5C", Offset = "0x86EF5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xC7CD84", Offset = "0xC7CD84", VA = "0xC7CD84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF6C", Offset = "0x86EF6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public float xRot
	{
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xC7CD8C", Offset = "0xC7CD8C", VA = "0xC7CD8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF7C", Offset = "0x86EF7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xC7CD94", Offset = "0xC7CD94", VA = "0xC7CD94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF8C", Offset = "0x86EF8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public float yRot
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xC7CD9C", Offset = "0xC7CD9C", VA = "0xC7CD9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EF9C", Offset = "0x86EF9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xC7CDA4", Offset = "0xC7CDA4", VA = "0xC7CDA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EFAC", Offset = "0x86EFAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public float zRot
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xC7CDAC", Offset = "0xC7CDAC", VA = "0xC7CDAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EFBC", Offset = "0x86EFBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xC7CDB4", Offset = "0xC7CDB4", VA = "0xC7CDB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EFCC", Offset = "0x86EFCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public float wRot
	{
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xC7CDBC", Offset = "0xC7CDBC", VA = "0xC7CDBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EFDC", Offset = "0x86EFDC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xC7CDC4", Offset = "0xC7CDC4", VA = "0xC7CDC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EFEC", Offset = "0x86EFEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public bool IsDisposed
	{
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xC7CDCC", Offset = "0xC7CDCC", VA = "0xC7CDCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86EFFC", Offset = "0x86EFFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xC7CDD4", Offset = "0xC7CDD4", VA = "0xC7CDD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F00C", Offset = "0x86F00C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xC7CDE0", Offset = "0xC7CDE0", VA = "0xC7CDE0")]
	public cnStreamWriter(System.IO.Stream stream)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xC7CE8C", Offset = "0xC7CE8C", VA = "0xC7CE8C")]
	public void Write()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xC7D174", Offset = "0xC7D174", VA = "0xC7D174", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xC7D1C4", Offset = "0xC7D1C4", VA = "0xC7D1C4")]
	public static cnStreamWriter writeToFile(string path)
	{
		return null;
	}
}
[Token(Token = "0x20001AA")]
public class ScrollOffset : MonoBehaviour
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ScrollSpeed;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xAFF11C", Offset = "0xAFF11C", VA = "0xAFF11C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xAFF174", Offset = "0xAFF174", VA = "0xAFF174")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xAFF21C", Offset = "0xAFF21C", VA = "0xAFF21C")]
	public ScrollOffset()
	{
	}
}
[Token(Token = "0x20001AB")]
public class WhaleTurnDemoScript : MonoBehaviour
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem Sprayparticals;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider SpeedSlider;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider HSlider;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider VSlider;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle SprayTogle;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool Spurt;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator animator;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xC77A40", Offset = "0xC77A40", VA = "0xC77A40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xC77C00", Offset = "0xC77C00", VA = "0xC77C00")]
	private void StartSpray(Toggle change)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xC77C84", Offset = "0xC77C84", VA = "0xC77C84")]
	private void TurnH()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xC77CFC", Offset = "0xC77CFC", VA = "0xC77CFC")]
	private void TurnV()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xC77D74", Offset = "0xC77D74", VA = "0xC77D74")]
	public void SpeedChange()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xC77DEC", Offset = "0xC77DEC", VA = "0xC77DEC")]
	public WhaleTurnDemoScript()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xC77DF4", Offset = "0xC77DF4", VA = "0xC77DF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F01C", Offset = "0x86F01C")]
	private void <Start>b__8_0(float <p0>)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xC77DF8", Offset = "0xC77DF8", VA = "0xC77DF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F02C", Offset = "0x86F02C")]
	private void <Start>b__8_1(float <p0>)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xC77DFC", Offset = "0xC77DFC", VA = "0xC77DFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F03C", Offset = "0x86F03C")]
	private void <Start>b__8_2(float <p0>)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xC77E00", Offset = "0xC77E00", VA = "0xC77E00")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F04C", Offset = "0x86F04C")]
	private void <Start>b__8_3(bool <p0>)
	{
	}
}
[Token(Token = "0x20001AC")]
public class SeaTurtleCameraScript : MonoBehaviour
{
	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float turnSpeed;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject seaTurtleCamera;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cameraAngleX;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cameraAngleY;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cameraDistance;

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xAFF604", Offset = "0xAFF604", VA = "0xAFF604")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xAFF6FC", Offset = "0xAFF6FC", VA = "0xAFF6FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xAFFA58", Offset = "0xAFFA58", VA = "0xAFFA58")]
	public void TargetSet(GameObject aTarget)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xAFF868", Offset = "0xAFF868", VA = "0xAFF868")]
	public void CameraRotationX()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xAFF960", Offset = "0xAFF960", VA = "0xAFF960")]
	public void CameraRotationY()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xAFFA60", Offset = "0xAFFA60", VA = "0xAFFA60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xAFFB80", Offset = "0xAFFB80", VA = "0xAFFB80")]
	public SeaTurtleCameraScript()
	{
	}
}
[Token(Token = "0x20001AD")]
public class SeaTurtleCharacter : MonoBehaviour
{
	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator seaTurtleAnimator;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody seaTurtleRigid;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isSwimming;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxForwardSpeed;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxTurnSpeed;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxUpDownSpeed;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float forwardSpeed;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float turnSpeed;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float upDownSpeed;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float forwardAcceleration;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float turnAcceleration;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float upDownAcceleration;

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xAFFBA4", Offset = "0xAFFBA4", VA = "0xAFFBA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xAFFD48", Offset = "0xAFFD48", VA = "0xAFFD48")]
	public void Attack()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xAFFDA4", Offset = "0xAFFDA4", VA = "0xAFFDA4")]
	public void Hit()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xAFFE00", Offset = "0xAFFE00", VA = "0xAFFE00")]
	public void Eat()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xAFFE5C", Offset = "0xAFFE5C", VA = "0xAFFE5C")]
	public void Death()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xAFFEB8", Offset = "0xAFFEB8", VA = "0xAFFEB8")]
	public void Rebirth()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xAFFC2C", Offset = "0xAFFC2C", VA = "0xAFFC2C")]
	public void Swim()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xAFFCBC", Offset = "0xAFFCBC", VA = "0xAFFCBC")]
	public void UpFromWater()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xAFFF14", Offset = "0xAFFF14", VA = "0xAFFF14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xAFFF18", Offset = "0xAFFF18", VA = "0xAFFF18")]
	public void Move()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xB0030C", Offset = "0xB0030C", VA = "0xB0030C")]
	public SeaTurtleCharacter()
	{
	}
}
[Token(Token = "0x20001AE")]
public class SeaTurtleUserController : MonoBehaviour
{
	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SeaTurtleCharacter seaTurtleCharacter;

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xB00330", Offset = "0xB00330", VA = "0xB00330")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xB00388", Offset = "0xB00388", VA = "0xB00388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xB004A8", Offset = "0xB004A8", VA = "0xB004A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xB005B0", Offset = "0xB005B0", VA = "0xB005B0")]
	public SeaTurtleUserController()
	{
	}
}
[Token(Token = "0x20001AF")]
public class LivingParticleArrayController : MonoBehaviour
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] affectors;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4[] positions;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystemRenderer psr;

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xA10A44", Offset = "0xA10A44", VA = "0xA10A44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xA10AE4", Offset = "0xA10AE4", VA = "0xA10AE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xA10C84", Offset = "0xA10C84", VA = "0xA10C84")]
	public LivingParticleArrayController()
	{
	}
}
[Token(Token = "0x20001B0")]
public class LivingParticleController : MonoBehaviour
{
	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform affector;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystemRenderer psr;

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xA10C8C", Offset = "0xA10C8C", VA = "0xA10C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xA10CE4", Offset = "0xA10CE4", VA = "0xA10CE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xA10E08", Offset = "0xA10E08", VA = "0xA10E08")]
	public LivingParticleController()
	{
	}
}
[Token(Token = "0x20001B1")]
public class ParticleGridGenerator : MonoBehaviour
{
	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool rewriteVertexStreams;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float particleSize;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color particleColor;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 particleRotation3D;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool randomColorAlpha;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float xDistance;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float yDistance;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float zDistance;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int xSize;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int ySize;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int zSize;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float OffsetEven;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool updateEveryFrame;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float even;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] positions;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem ps;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector4> customData;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Vector4> customData2;

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xBAD3AC", Offset = "0xBAD3AC", VA = "0xBAD3AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xBAD508", Offset = "0xBAD508", VA = "0xBAD508")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xBAD408", Offset = "0xBAD408", VA = "0xBAD408")]
	public void UpdateGrid()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xBAD564", Offset = "0xBAD564", VA = "0xBAD564")]
	private void GenerateGrid()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xBAD6E8", Offset = "0xBAD6E8", VA = "0xBAD6E8")]
	private void GenerateParticles()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xBAD894", Offset = "0xBAD894", VA = "0xBAD894")]
	private void CreateOffsetVector()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xBAD9D0", Offset = "0xBAD9D0", VA = "0xBAD9D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xBAD9E0", Offset = "0xBAD9E0", VA = "0xBAD9E0")]
	public ParticleGridGenerator()
	{
	}
}
[Token(Token = "0x20001B2")]
public class ParticleSystemRampGenerator : MonoBehaviour
{
	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient procedrualGradientRamp;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool procedrualGradientEnabled;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool updateEveryFrame;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystemRenderer psr;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D rampTexture;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xB4DCB0", Offset = "0xB4DCB0", VA = "0xB4DCB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xB4DD9C", Offset = "0xB4DD9C", VA = "0xB4DD9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xB4DDB4", Offset = "0xB4DDB4", VA = "0xB4DDB4")]
	private Texture2D GenerateTextureFromGradient(Gradient grad)
	{
		return null;
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xB4DD20", Offset = "0xB4DD20", VA = "0xB4DD20")]
	public void UpdateRampTexture()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xB4DEA0", Offset = "0xB4DEA0", VA = "0xB4DEA0")]
	public ParticleSystemRampGenerator()
	{
	}
}
[Token(Token = "0x20001B3")]
public class SuperSimpleMovement : MonoBehaviour
{
	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movementSpeed;

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xE69D7C", Offset = "0xE69D7C", VA = "0xE69D7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xE69D80", Offset = "0xE69D80", VA = "0xE69D80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xE69E54", Offset = "0xE69E54", VA = "0xE69E54")]
	public SuperSimpleMovement()
	{
	}
}
[Token(Token = "0x20001B4")]
public class UIController : MonoBehaviour
{
	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light directionalLight;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material daySkyboxMaterial;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material nightSkyboxMaterial;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform prefabHolder;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text text;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform[] prefabs;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Transform> lt;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int activeNumber;

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xA9CCB8", Offset = "0xA9CCB8", VA = "0xA9CCB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xA9CE2C", Offset = "0xA9CE2C", VA = "0xA9CE2C")]
	public void EnableActive()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xA9CF10", Offset = "0xA9CF10", VA = "0xA9CF10")]
	public void ChangeEffect(bool bo)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xA9CF70", Offset = "0xA9CF70", VA = "0xA9CF70")]
	public void SetDay()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xA9CFBC", Offset = "0xA9CFBC", VA = "0xA9CFBC")]
	public void SetNight()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xA9D008", Offset = "0xA9D008", VA = "0xA9D008")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xA9D094", Offset = "0xA9D094", VA = "0xA9D094")]
	public UIController()
	{
	}
}
[Token(Token = "0x20001B5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x859C4C", Offset = "0x859C4C")]
public class DragMouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distanceMin;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMax;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float smoothTime;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rotationYAxis;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationXAxis;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float velocityX;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityY;

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x9F4578", Offset = "0x9F4578", VA = "0x9F4578")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x9F4654", Offset = "0x9F4654", VA = "0x9F4654")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x9F4A54", Offset = "0x9F4A54", VA = "0x9F4A54")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x9F4B04", Offset = "0x9F4B04", VA = "0x9F4B04")]
	public DragMouseOrbit()
	{
	}
}
[Token(Token = "0x20001B6")]
public class GemSimpleRotate : MonoBehaviour
{
	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float gemRotationSpeed;

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xA07CA0", Offset = "0xA07CA0", VA = "0xA07CA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xA07CA4", Offset = "0xA07CA4", VA = "0xA07CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xA07D6C", Offset = "0xA07D6C", VA = "0xA07D6C")]
	public GemSimpleRotate()
	{
	}
}
[Token(Token = "0x20001B7")]
public class LoadSceneOnClick : MonoBehaviour
{
	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xA10E10", Offset = "0xA10E10", VA = "0xA10E10")]
	public void LoadSceneDemo1()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xA10E5C", Offset = "0xA10E5C", VA = "0xA10E5C")]
	public void LoadSceneDemo2()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xA10EA8", Offset = "0xA10EA8", VA = "0xA10EA8")]
	public void LoadSceneDemo3()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xA10EF4", Offset = "0xA10EF4", VA = "0xA10EF4")]
	public void LoadSceneDemo4()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xA10F40", Offset = "0xA10F40", VA = "0xA10F40")]
	public LoadSceneOnClick()
	{
	}
}
[Token(Token = "0x20001B8")]
public class SpawnOverlord : MonoBehaviour
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject OverlordToSpawn;

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xE65FE0", Offset = "0xE65FE0", VA = "0xE65FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xE660A8", Offset = "0xE660A8", VA = "0xE660A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xE660AC", Offset = "0xE660AC", VA = "0xE660AC")]
	public SpawnOverlord()
	{
	}
}
[Token(Token = "0x20001B9")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xC041A8", Offset = "0xC041A8", VA = "0xC041A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xC0424C", Offset = "0xC0424C", VA = "0xC0424C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xC042F0", Offset = "0xC042F0", VA = "0xC042F0")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xC04664", Offset = "0xC04664", VA = "0xC04664")]
	public ChatController()
	{
	}
}
[Token(Token = "0x20001BA")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x200060B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D3C8", Offset = "0x85D3C8")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x4002BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x170003CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0x9F77F0", Offset = "0x9F77F0", VA = "0x9F77F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0x9F7858", Offset = "0x9F7858", VA = "0x9F7858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0x9F75C8", Offset = "0x9F75C8", VA = "0x9F75C8")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002A48")]
		[Address(RVA = "0x9F75FC", Offset = "0x9F75FC", VA = "0x9F75FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x9F7600", Offset = "0x9F7600", VA = "0x9F7600", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x9F77F8", Offset = "0x9F77F8", VA = "0x9F77F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x9F74E4", Offset = "0x9F74E4", VA = "0x9F74E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x9F7558", Offset = "0x9F7558", VA = "0x9F7558")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86F05C", Offset = "0x86F05C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x9F75F4", Offset = "0x9F75F4", VA = "0x9F75F4")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x20001BB")]
public static class AnimationHelper
{
}
[Token(Token = "0x20001BC")]
public class FadeOverlay : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoveSet MoveSet;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image BG;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Text;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text TimeText;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text DoneText;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _tweenID;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _originalTextSize;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _bgMaterial;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material _textMaterial;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _progress;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _isIn;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _isAnimating;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _originalDoneIconSize;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _isEmpty;

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x9FBA00", Offset = "0x9FBA00", VA = "0x9FBA00")]
	public void SetupButton(MoveSet moveSet)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x9FBD18", Offset = "0x9FBD18", VA = "0x9FBD18", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x9FBE9C", Offset = "0x9FBE9C", VA = "0x9FBE9C")]
	private void AnimateIn()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x9FC018", Offset = "0x9FC018", VA = "0x9FC018")]
	private void CheckForExit()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x9FC1AC", Offset = "0x9FC1AC", VA = "0x9FC1AC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x9FC030", Offset = "0x9FC030", VA = "0x9FC030")]
	private void AnimateOut()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x9FC2CC", Offset = "0x9FC2CC", VA = "0x9FC2CC")]
	private void CheckForEnter()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x9FC2E4", Offset = "0x9FC2E4", VA = "0x9FC2E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x9FC550", Offset = "0x9FC550", VA = "0x9FC550")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x9FC554", Offset = "0x9FC554", VA = "0x9FC554", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x9FC658", Offset = "0x9FC658", VA = "0x9FC658")]
	public FadeOverlay()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x9FC668", Offset = "0x9FC668", VA = "0x9FC668")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F0C0", Offset = "0x86F0C0")]
	private void <AnimateIn>b__16_0(float value)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x9FC9A4", Offset = "0x9FC9A4", VA = "0x9FC9A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F0D0", Offset = "0x86F0D0")]
	private void <AnimateIn>b__16_1()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x9FCA78", Offset = "0x9FCA78", VA = "0x9FCA78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F0E0", Offset = "0x86F0E0")]
	private void <AnimateOut>b__19_0(float value)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x9FCDB4", Offset = "0x9FCDB4", VA = "0x9FCDB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F0F0", Offset = "0x86F0F0")]
	private void <AnimateOut>b__19_1()
	{
	}
}
[Token(Token = "0x20001BD")]
public class FadeOverlayCompleted : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
{
	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Enums.ButtonType ButtonType;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image BG;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Text;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image DoneIcon;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _tweenID;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _originalTextSize;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _bgMaterial;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _textMaterial;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _progress;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _isIn;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool _isAnimating;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _originalDoneIconSize;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _isEmpty;

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x9FCE80", Offset = "0x9FCE80", VA = "0x9FCE80", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x9FCFCC", Offset = "0x9FCFCC", VA = "0x9FCFCC")]
	private void AnimateIn()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x9FD148", Offset = "0x9FD148", VA = "0x9FD148")]
	private void CheckForExit()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x9FD2DC", Offset = "0x9FD2DC", VA = "0x9FD2DC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x9FD160", Offset = "0x9FD160", VA = "0x9FD160")]
	private void AnimateOut()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x9FD2F8", Offset = "0x9FD2F8", VA = "0x9FD2F8")]
	private void CheckForEnter()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x9FD310", Offset = "0x9FD310", VA = "0x9FD310")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x9FD4D8", Offset = "0x9FD4D8", VA = "0x9FD4D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x9FD4DC", Offset = "0x9FD4DC", VA = "0x9FD4DC", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x9FD620", Offset = "0x9FD620", VA = "0x9FD620")]
	public FadeOverlayCompleted()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x9FD630", Offset = "0x9FD630", VA = "0x9FD630")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F100", Offset = "0x86F100")]
	private void <AnimateIn>b__14_0(float value)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x9FD894", Offset = "0x9FD894", VA = "0x9FD894")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F110", Offset = "0x86F110")]
	private void <AnimateIn>b__14_1()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x9FD968", Offset = "0x9FD968", VA = "0x9FD968")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F120", Offset = "0x86F120")]
	private void <AnimateOut>b__17_0(float value)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x9FDBCC", Offset = "0x9FDBCC", VA = "0x9FDBCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F130", Offset = "0x86F130")]
	private void <AnimateOut>b__17_1()
	{
	}
}
[Token(Token = "0x20001BE")]
public class FadeOverlayMainMenu : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
{
	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsOptions;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image BG;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Text;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _tweenID;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _originalTextSize;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _bgMaterial;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _textMaterial;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _progress;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _isIn;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _isAnimating;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _originalDoneIconSize;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _isEmpty;

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x9FDC98", Offset = "0x9FDC98", VA = "0x9FDC98", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x9FDE14", Offset = "0x9FDE14", VA = "0x9FDE14")]
	private void AnimateIn()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x9FDF90", Offset = "0x9FDF90", VA = "0x9FDF90")]
	private void CheckForExit()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x9FE124", Offset = "0x9FE124", VA = "0x9FE124", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x9FDFA8", Offset = "0x9FDFA8", VA = "0x9FDFA8")]
	private void AnimateOut()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x9FE23C", Offset = "0x9FE23C", VA = "0x9FE23C")]
	private void CheckForEnter()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x9FE254", Offset = "0x9FE254", VA = "0x9FE254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x9FE3C0", Offset = "0x9FE3C0", VA = "0x9FE3C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x9FE3C4", Offset = "0x9FE3C4", VA = "0x9FE3C4", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x9FE504", Offset = "0x9FE504", VA = "0x9FE504")]
	public FadeOverlayMainMenu()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x9FE514", Offset = "0x9FE514", VA = "0x9FE514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F140", Offset = "0x86F140")]
	private void <AnimateIn>b__13_0(float value)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x9FE778", Offset = "0x9FE778", VA = "0x9FE778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F150", Offset = "0x86F150")]
	private void <AnimateIn>b__13_1()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x9FE84C", Offset = "0x9FE84C", VA = "0x9FE84C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F160", Offset = "0x86F160")]
	private void <AnimateOut>b__16_0(float value)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x9FEAB0", Offset = "0x9FEAB0", VA = "0x9FEAB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F170", Offset = "0x86F170")]
	private void <AnimateOut>b__16_1()
	{
	}
}
[Token(Token = "0x20001BF")]
public class FadeOverlayMusic : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
{
	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MusicTrack Track;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image BG;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Text;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image DoneIcon;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _tweenID;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _originalTextSize;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _bgMaterial;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _textMaterial;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _progress;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _isIn;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool _isAnimating;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _originalDoneIconSize;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _isEmpty;

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x9FEB7C", Offset = "0x9FEB7C", VA = "0x9FEB7C")]
	public void SetupButton(MusicTrack track)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x9FEC60", Offset = "0x9FEC60", VA = "0x9FEC60", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x9FEDE4", Offset = "0x9FEDE4", VA = "0x9FEDE4")]
	private void AnimateIn()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x9FEF60", Offset = "0x9FEF60", VA = "0x9FEF60")]
	private void CheckForExit()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x9FF0F4", Offset = "0x9FF0F4", VA = "0x9FF0F4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x9FEF78", Offset = "0x9FEF78", VA = "0x9FEF78")]
	private void AnimateOut()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x9FF214", Offset = "0x9FF214", VA = "0x9FF214")]
	private void CheckForEnter()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x9FF22C", Offset = "0x9FF22C", VA = "0x9FF22C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x9FF3F4", Offset = "0x9FF3F4", VA = "0x9FF3F4", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x9FF670", Offset = "0x9FF670", VA = "0x9FF670")]
	public FadeOverlayMusic()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x9FF680", Offset = "0x9FF680", VA = "0x9FF680")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F180", Offset = "0x86F180")]
	private void <AnimateIn>b__15_0(float value)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x9FF8E4", Offset = "0x9FF8E4", VA = "0x9FF8E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F190", Offset = "0x86F190")]
	private void <AnimateIn>b__15_1()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x9FF9B8", Offset = "0x9FF9B8", VA = "0x9FF9B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F1A0", Offset = "0x86F1A0")]
	private void <AnimateOut>b__18_0(float value)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x9FFC1C", Offset = "0x9FFC1C", VA = "0x9FFC1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F1B0", Offset = "0x86F1B0")]
	private void <AnimateOut>b__18_1()
	{
	}
}
[Token(Token = "0x20001C0")]
public class MaskedImage : Image
{
	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float Fade;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float Flip;

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xA201E0", Offset = "0xA201E0", VA = "0xA201E0", Slot = "57")]
	public override Material GetModifiedMaterial(Material bMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xA203F0", Offset = "0xA203F0", VA = "0xA203F0")]
	public MaskedImage()
	{
	}
}
[Token(Token = "0x20001C1")]
public class ResetPosition : MonoBehaviour
{
	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xAF96CC", Offset = "0xAF96CC", VA = "0xAF96CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xAF97BC", Offset = "0xAF97BC", VA = "0xAF97BC")]
	public ResetPosition()
	{
	}
}
[Token(Token = "0x20001C2")]
public class LineManager : MonoBehaviour
{
	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsBlack;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FastLineRenderer _lineRenderer;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Point1;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Point2;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Point3;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Point4;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FastLineRendererProperties props;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FastLineRendererProperties props2;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FastLineRendererProperties props3;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FastLineRendererProperties props4;

	[Token(Token = "0x4000BE4")]
	private const float animationTime = 0.5f;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FastLineRenderer r;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FastLineRenderer r2;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private FastLineRenderer r3;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private FastLineRenderer r4;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int frameCount;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LinkedList<Vector3> _points;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private LinkedList<Vector3> _points2;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LinkedList<Vector3> _points3;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LinkedList<Vector3> _points4;

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xA0DBEC", Offset = "0xA0DBEC", VA = "0xA0DBEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xA0DEE8", Offset = "0xA0DEE8", VA = "0xA0DEE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xA0E460", Offset = "0xA0E460", VA = "0xA0E460")]
	public LineManager()
	{
	}
}
[Token(Token = "0x20001C3")]
public class DestroyAfterTime : MonoBehaviour
{
	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xB15CF4", Offset = "0xB15CF4", VA = "0xB15CF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xB15D4C", Offset = "0xB15D4C", VA = "0xB15D4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xB15D50", Offset = "0xB15D50", VA = "0xB15D50")]
	private void Destroy()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xB15DCC", Offset = "0xB15DCC", VA = "0xB15DCC")]
	public DestroyAfterTime()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ParticleCameraRollFix : MonoBehaviour
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lastRotation;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xBACFE0", Offset = "0xBACFE0", VA = "0xBACFE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xBAD038", Offset = "0xBAD038", VA = "0xBAD038")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xBAD1C0", Offset = "0xBAD1C0", VA = "0xBAD1C0")]
	public ParticleCameraRollFix()
	{
	}
}
[Token(Token = "0x20001C5")]
public class RotateIcon : MonoBehaviour
{
	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsLeft;

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xAFBCEC", Offset = "0xAFBCEC", VA = "0xAFBCEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xAFBCF0", Offset = "0xAFBCF0", VA = "0xAFBCF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xAFBD84", Offset = "0xAFBD84", VA = "0xAFBD84")]
	public RotateIcon()
	{
	}
}
[Token(Token = "0x20001C6")]
public class SpinAround : MonoBehaviour
{
	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xE66334", Offset = "0xE66334", VA = "0xE66334")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xE66338", Offset = "0xE66338", VA = "0xE66338")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xE663A4", Offset = "0xE663A4", VA = "0xE663A4")]
	public SpinAround()
	{
	}
}
[Token(Token = "0x20001C7")]
public class AlienMove : MonoBehaviour
{
	[Token(Token = "0x200060C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D3D8", Offset = "0x85D3D8")]
	private sealed class <StartMoving>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlienMove <>4__this;

		[Token(Token = "0x170003D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A50")]
			[Address(RVA = "0xA49B3C", Offset = "0xA49B3C", VA = "0xA49B3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A52")]
			[Address(RVA = "0xA49BA4", Offset = "0xA49BA4", VA = "0xA49BA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0xA49680", Offset = "0xA49680", VA = "0xA49680")]
		[DebuggerHidden]
		public <StartMoving>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0xA499F0", Offset = "0xA499F0", VA = "0xA499F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0xA499F4", Offset = "0xA499F4", VA = "0xA499F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0xA49B44", Offset = "0xA49B44", VA = "0xA49B44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200060D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D3E8", Offset = "0x85D3E8")]
	private sealed class <GoToPosition>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AlienMove <>4__this;

		[Token(Token = "0x4002BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 from;

		[Token(Token = "0x4002BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 to;

		[Token(Token = "0x4002BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float time;

		[Token(Token = "0x4002BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float waitTime;

		[Token(Token = "0x4002BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170003D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0xA49980", Offset = "0xA49980", VA = "0xA49980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0xA499E8", Offset = "0xA499E8", VA = "0xA499E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0xA4976C", Offset = "0xA4976C", VA = "0xA4976C")]
		[DebuggerHidden]
		public <GoToPosition>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0xA497B4", Offset = "0xA497B4", VA = "0xA497B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0xA497B8", Offset = "0xA497B8", VA = "0xA497B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0xA49988", Offset = "0xA49988", VA = "0xA49988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 m_TopLeftBound;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 m_BottomRightBound;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_MinMoveTime;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_MaxMoveTime;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_MinWaitTime;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_MaxWaitTime;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator m_Animator;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform m_Transform;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_Position;

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xA494D8", Offset = "0xA494D8", VA = "0xA494D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xA49530", Offset = "0xA49530", VA = "0xA49530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xA495EC", Offset = "0xA495EC", VA = "0xA495EC")]
	private Vector3 GetRandomPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xA4957C", Offset = "0xA4957C", VA = "0xA4957C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86F1C0", Offset = "0x86F1C0")]
	private IEnumerator StartMoving()
	{
		return null;
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xA496AC", Offset = "0xA496AC", VA = "0xA496AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86F224", Offset = "0x86F224")]
	private IEnumerator GoToPosition(float time, float waitTime, Vector3 from, Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xA49798", Offset = "0xA49798", VA = "0xA49798")]
	public AlienMove()
	{
	}
}
[Token(Token = "0x20001C8")]
public class FlyDemo : MonoBehaviour
{
	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Height;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xA034B8", Offset = "0xA034B8", VA = "0xA034B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xA034E0", Offset = "0xA034E0", VA = "0xA034E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xA035B4", Offset = "0xA035B4", VA = "0xA035B4")]
	public FlyDemo()
	{
	}
}
[Token(Token = "0x20001C9")]
public enum Position
{
	[Token(Token = "0x4000C01")]
	Middle,
	[Token(Token = "0x4000C02")]
	Bottom,
	[Token(Token = "0x4000C03")]
	Bottom02
}
[Token(Token = "0x20001CA")]
public class DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture HUETexture;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material mat;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Position[] Positions;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentNomber;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject currentInstance;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float colorHUE;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float dpiScale;

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xB0A7E8", Offset = "0xB0A7E8", VA = "0xB0A7E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xB0A990", Offset = "0xB0A990", VA = "0xB0A990")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xB0AEE0", Offset = "0xB0AEE0", VA = "0xB0AEE0")]
	private void ChangeColor()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xB0B0E8", Offset = "0xB0B0E8", VA = "0xB0B0E8")]
	private Color Hue(float H)
	{
		return default(Color);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xB0AD10", Offset = "0xB0AD10", VA = "0xB0AD10")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xB0B250", Offset = "0xB0B250", VA = "0xB0B250")]
	public DemoGUI()
	{
	}
}
[Token(Token = "0x20001CB")]
public class MyGUI3_1 : MonoBehaviour
{
	[Token(Token = "0x200060E")]
	public enum GuiStat
	{
		[Token(Token = "0x4002BB4")]
		Ball,
		[Token(Token = "0x4002BB5")]
		BallRotate,
		[Token(Token = "0x4002BB6")]
		BallRotatex4,
		[Token(Token = "0x4002BB7")]
		Bottom,
		[Token(Token = "0x4002BB8")]
		Middle,
		[Token(Token = "0x4002BB9")]
		MiddleWithoutRobot,
		[Token(Token = "0x4002BBA")]
		Top,
		[Token(Token = "0x4002BBB")]
		TopTarget
	}

	[Token(Token = "0x200060F")]
	public struct HSBColor
	{
		[Token(Token = "0x4002BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float h;

		[Token(Token = "0x4002BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float s;

		[Token(Token = "0x4002BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4002BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x766548", Offset = "0x766548", VA = "0x766548")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D3F8", Offset = "0x85D3F8")]
	private sealed class <>c
	{
		[Token(Token = "0x4002BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static EventHandler<CollisionInfo> <>9__29_0;

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0xAB9AD0", Offset = "0xAB9AD0", VA = "0xAB9AD0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0xAB9AD8", Offset = "0xAB9AD8", VA = "0xAB9AD8")]
		internal void <InstanceEffect>b__29_0(object n, CollisionInfo e)
		{
		}
	}

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture HUETexture;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int CurrentPrefabNomber;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float UpdateInterval;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light DirLight;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Target;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject TargetForRay;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject TopPosition;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject MiddlePosition;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 defaultRobotPos;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject BottomPosition;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Plane1;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Plane2;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material[] PlaneMaterials;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GuiStat[] GuiStats;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float oldLightIntensity;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color oldAmbientColor;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject currentGo;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isDay;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool isDefaultPlaneTexture;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int current;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isReadyEffect;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion defaultRobotRotation;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float colorHUE;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float dpiScale;

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xAB7F14", Offset = "0xAB7F14", VA = "0xAB7F14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xAB816C", Offset = "0xAB816C", VA = "0xAB816C")]
	private void InstanceEffect(Vector3 pos)
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xAB8488", Offset = "0xAB8488", VA = "0xAB8488")]
	private GameObject GetTargetObject(GuiStat stat)
	{
		return null;
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xAB865C", Offset = "0xAB865C", VA = "0xAB865C")]
	private void effectSettings_EffectDeactivated(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xAB8704", Offset = "0xAB8704", VA = "0xAB8704")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xAB9288", Offset = "0xAB9288", VA = "0xAB9288")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xAB804C", Offset = "0xAB804C", VA = "0xAB804C")]
	private void InstanceCurrent(GuiStat stat)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xAB85D4", Offset = "0xAB85D4", VA = "0xAB85D4")]
	private Vector3 GetInstancePosition(GuiStat stat)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xAB8C9C", Offset = "0xAB8C9C", VA = "0xAB8C9C")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xAB94B0", Offset = "0xAB94B0", VA = "0xAB94B0")]
	private Color Hue(float H)
	{
		return default(Color);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xAB9618", Offset = "0xAB9618", VA = "0xAB9618")]
	public HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xAB97B4", Offset = "0xAB97B4", VA = "0xAB97B4")]
	public Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xAB8ECC", Offset = "0xAB8ECC", VA = "0xAB8ECC")]
	private void ChangeColor()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xAB99FC", Offset = "0xAB99FC", VA = "0xAB99FC")]
	public MyGUI3_1()
	{
	}
}
[Token(Token = "0x20001CC")]
public class RainGUI : MonoBehaviour
{
	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float currentTime;

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xFD06E4", Offset = "0xFD06E4", VA = "0xFD06E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xFD06E8", Offset = "0xFD06E8", VA = "0xFD06E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xFD07F4", Offset = "0xFD07F4", VA = "0xFD07F4")]
	public RainGUI()
	{
	}
}
[Token(Token = "0x20001CD")]
public class RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xFD1458", Offset = "0xFD1458", VA = "0xFD1458")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xFD14CC", Offset = "0xFD14CC", VA = "0xFD14CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xFD157C", Offset = "0xFD157C", VA = "0xFD157C")]
	public RealtimeReflection()
	{
	}
}
[Token(Token = "0x20001CE")]
public class AddMaterialOnHit : MonoBehaviour
{
	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RemoveAfterTime;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool RemoveWhenDisable;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EffectSettings EffectSettings;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material Material;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UsePointMatrixTransform;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 TransformScale;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FadeInOutShaderColor[] fadeInOutShaderColor;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FadeInOutShaderFloat[] fadeInOutShaderFloat;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UVTextureAnimator uvTextureAnimator;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer renderParent;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMat;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int materialQueue;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool waitRemove;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeToDelete;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xA485DC", Offset = "0xA485DC", VA = "0xA485DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xA486E8", Offset = "0xA486E8", VA = "0xA486E8")]
	public void UpdateMaterial(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xA48B64", Offset = "0xA48B64", VA = "0xA48B64")]
	public void UpdateMaterial(Transform transformTarget)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xA48EBC", Offset = "0xA48EBC", VA = "0xA48EBC")]
	public void SetMaterialQueue(int matlQueue)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xA48EC4", Offset = "0xA48EC4", VA = "0xA48EC4")]
	public int GetDefaultMaterialQueue()
	{
		return default(int);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xA48EE0", Offset = "0xA48EE0", VA = "0xA48EE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xA48FCC", Offset = "0xA48FCC", VA = "0xA48FCC")]
	public AddMaterialOnHit()
	{
	}
}
[Token(Token = "0x20001CF")]
public class AnimatorBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator anim;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isInitialized;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float oldSpeed;

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xA5CD28", Offset = "0xA5CD28", VA = "0xA5CD28")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xA5CE38", Offset = "0xA5CE38", VA = "0xA5CE38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xA5CF3C", Offset = "0xA5CF3C", VA = "0xA5CF3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xA5CF6C", Offset = "0xA5CF6C", VA = "0xA5CF6C")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xA5CF8C", Offset = "0xA5CF8C", VA = "0xA5CF8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xA5CF90", Offset = "0xA5CF90", VA = "0xA5CF90")]
	public AnimatorBehaviour()
	{
	}
}
[Token(Token = "0x20001D0")]
public class IceOffsetBehaviour : MonoBehaviour
{
	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xB856D8", Offset = "0xB856D8", VA = "0xB856D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xB858AC", Offset = "0xB858AC", VA = "0xB858AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xB858B0", Offset = "0xB858B0", VA = "0xB858B0")]
	public IceOffsetBehaviour()
	{
	}
}
[Token(Token = "0x20001D1")]
public class LazyLoad : MonoBehaviour
{
	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GO;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xDB3A10", Offset = "0xDB3A10", VA = "0xDB3A10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xDB3A30", Offset = "0xDB3A30", VA = "0xDB3A30")]
	private void LazyEnable()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xDB3A50", Offset = "0xDB3A50", VA = "0xDB3A50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xDB3AA8", Offset = "0xDB3AA8", VA = "0xDB3AA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xDB3B14", Offset = "0xDB3B14", VA = "0xDB3B14")]
	public LazyLoad()
	{
	}
}
[Token(Token = "0x20001D2")]
public class LineProjectileCollisionBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectOnHit;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EffectOnHitObject;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ParticlesScale;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject GoLight;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsCenterLightPosition;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LineRenderer[] LineRenderers;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform t;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform tLight;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform tEffectOnHit;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform tParticleScale;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RaycastHit hit;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit oldRaycastHit;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isInitializedOnStart;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool frameDroped;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ParticleSystem[] effectOnHitParticles;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private EffectSettings effectSettingsInstance;

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xA0E588", Offset = "0xA0E588", VA = "0xA0E588")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xA0E698", Offset = "0xA0E698", VA = "0xA0E698")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xA0E888", Offset = "0xA0E888", VA = "0xA0E888")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xA0E8A8", Offset = "0xA0E8A8", VA = "0xA0E8A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xA0E870", Offset = "0xA0E870", VA = "0xA0E870")]
	private void InitializeDefault()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xA0E934", Offset = "0xA0E934", VA = "0xA0E934")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xA0F04C", Offset = "0xA0F04C", VA = "0xA0F04C")]
	private void CollisionEnter()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xA0E8AC", Offset = "0xA0E8AC", VA = "0xA0E8AC")]
	private void CollisionLeave()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xA0F380", Offset = "0xA0F380", VA = "0xA0F380")]
	public LineProjectileCollisionBehaviour()
	{
	}
}
[Token(Token = "0x20001D3")]
public enum RandomMoveCoordinates
{
	[Token(Token = "0x4000C51")]
	None,
	[Token(Token = "0x4000C52")]
	XY,
	[Token(Token = "0x4000C53")]
	XZ,
	[Token(Token = "0x4000C54")]
	YZ,
	[Token(Token = "0x4000C55")]
	XYZ
}
[Token(Token = "0x20001D4")]
public class ProjectileCollisionBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RandomMoveRadius;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RandomMoveSpeed;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RandomRange;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RandomMoveCoordinates RandomMoveCoordinates;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject EffectOnHitObject;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject GoLight;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve Acceleration;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float AcceleraionTime;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool IsCenterLightPosition;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool IsLookAt;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool AttachAfterCollision;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public bool IsRootMove;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsLocalSpaceRandomMove;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool IsDeviation;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool SendCollisionMessage;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool ResetParentPositionOnDisable;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform tRoot;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform tTarget;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform t;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform tLight;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 forwardDirection;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 startPosition;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 startParentPosition;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit hit;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 smootRandomPos;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 oldSmootRandomPos;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float deltaSpeed;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float startTime;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float randomSpeed;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float randomRadiusX;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float randomRadiusY;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int randomDirection1;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int randomDirection2;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int randomDirection3;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool onCollision;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool isInitializedOnStart;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 randomTargetOffsetXZVector;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool frameDroped;

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xB2A2A4", Offset = "0xB2A2A4", VA = "0xB2A2A4")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xB2A3B4", Offset = "0xB2A3B4", VA = "0xB2A3B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xB2A94C", Offset = "0xB2A94C", VA = "0xB2A94C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xB2A95C", Offset = "0xB2A95C", VA = "0xB2A95C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xB2A510", Offset = "0xB2A510", VA = "0xB2A510")]
	private void InitializeDefault()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xB2AD0C", Offset = "0xB2AD0C", VA = "0xB2AD0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xB2B380", Offset = "0xB2B380", VA = "0xB2B380")]
	private void CollisionEnter()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xB2ABE8", Offset = "0xB2ABE8", VA = "0xB2ABE8")]
	private void InitRandomVariables()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xB2A9C8", Offset = "0xB2A9C8", VA = "0xB2A9C8")]
	private void GetTargetHit()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xB2B6B8", Offset = "0xB2B6B8", VA = "0xB2B6B8")]
	private void UpdateSmootRandomhPos()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xB2B9E4", Offset = "0xB2B9E4", VA = "0xB2B9E4")]
	public ProjectileCollisionBehaviour()
	{
	}
}
[Token(Token = "0x20001D5")]
public class ScaleParticlesFromBound : MonoBehaviour
{
	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Collider targetCollider;

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xAFEF20", Offset = "0xAFEF20", VA = "0xAFEF20")]
	private void GetMeshFilterParent(Transform t)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xAFEFFC", Offset = "0xAFEFFC", VA = "0xAFEFFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xAFF110", Offset = "0xAFF110", VA = "0xAFF110")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xAFF114", Offset = "0xAFF114", VA = "0xAFF114")]
	public ScaleParticlesFromBound()
	{
	}
}
[Token(Token = "0x20001D6")]
public class DebuffOnEnemyFromCollision : MonoBehaviour
{
	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EffectSettings EffectSettings;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Effect;

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xB07450", Offset = "0xB07450", VA = "0xB07450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xB074E4", Offset = "0xB074E4", VA = "0xB074E4")]
	private void EffectSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xB07748", Offset = "0xB07748", VA = "0xB07748")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xB0774C", Offset = "0xB0774C", VA = "0xB0774C")]
	public DebuffOnEnemyFromCollision()
	{
	}
}
[Token(Token = "0x20001D7")]
public class ShieldCollisionBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectOnHit;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ExplosionOnHit;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsWaterInstance;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ScaleWave;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool CreateMechInstanceOnHit;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 AngleFix;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentQueue;

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xB01C34", Offset = "0xB01C34", VA = "0xB01C34")]
	public void ShieldCollisionEnter(CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xB02168", Offset = "0xB02168", VA = "0xB02168")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xB0216C", Offset = "0xB0216C", VA = "0xB0216C")]
	public ShieldCollisionBehaviour()
	{
	}
}
[Token(Token = "0x20001D8")]
public class WaterUvAnimation : MonoBehaviour
{
	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsReverse;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialNomber;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float deltaFps;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isVisible;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isCorutineStarted;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float offset;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float delta;

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xC7721C", Offset = "0xC7721C", VA = "0xC7721C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xC772AC", Offset = "0xC772AC", VA = "0xC772AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xC773A4", Offset = "0xC773A4", VA = "0xC773A4")]
	public WaterUvAnimation()
	{
	}
}
[Token(Token = "0x20001D9")]
public class MoveOnGround : MonoBehaviour
{
	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsRootMove;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform tRoot;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform tTarget;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetPos;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isInitialized;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool isFinished;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem[] particles;

	[Token(Token = "0x14000032")]
	public event EventHandler<CollisionInfo> OnCollision
	{
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xAB401C", Offset = "0xAB401C", VA = "0xAB401C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F288", Offset = "0x86F288")]
		add
		{
		}
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xAB40C0", Offset = "0xAB40C0", VA = "0xAB40C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F298", Offset = "0x86F298")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xAB4164", Offset = "0xAB4164", VA = "0xAB4164")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xAB4274", Offset = "0xAB4274", VA = "0xAB4274")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xAB4664", Offset = "0xAB4664", VA = "0xAB4664")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xAB4368", Offset = "0xAB4368", VA = "0xAB4368")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xAB4674", Offset = "0xAB4674", VA = "0xAB4674")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xAB4944", Offset = "0xAB4944", VA = "0xAB4944")]
	public MoveOnGround()
	{
	}
}
[Token(Token = "0x20001DA")]
public class OffsetOnNormal : MonoBehaviour
{
	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float offset;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject offsetGameObject;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPosition;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xEE5480", Offset = "0xEE5480", VA = "0xEE5480")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xEE54BC", Offset = "0xEE54BC", VA = "0xEE54BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xEE5694", Offset = "0xEE5694", VA = "0xEE5694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xEE5698", Offset = "0xEE5698", VA = "0xEE5698")]
	public OffsetOnNormal()
	{
	}
}
[Token(Token = "0x20001DB")]
public class OnRigidbodySendCollision : MonoBehaviour
{
	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EffectSettings effectSettings;

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xEE64DC", Offset = "0xEE64DC", VA = "0xEE64DC")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xEE65EC", Offset = "0xEE65EC", VA = "0xEE65EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xEE6618", Offset = "0xEE6618", VA = "0xEE6618")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xEE668C", Offset = "0xEE668C", VA = "0xEE668C")]
	public OnRigidbodySendCollision()
	{
	}
}
[Token(Token = "0x20001DC")]
public class ResetPositionOnDiactivated : MonoBehaviour
{
	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EffectSettings EffectSettings;

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xAF97C4", Offset = "0xAF97C4", VA = "0xAF97C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xAF9858", Offset = "0xAF9858", VA = "0xAF9858")]
	private void EffectSettings_EffectDeactivated(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xAF98E4", Offset = "0xAF98E4", VA = "0xAF98E4")]
	public ResetPositionOnDiactivated()
	{
	}
}
[Token(Token = "0x20001DD")]
public class LineRendererBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsVertical;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LightHeightOffset;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ParticlesHeightOffset;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TimeDestroyLightAfterCollision;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeDestroyThisAfterCollision;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TimeDestroyRootAfterCollision;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject EffectOnHitObject;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Explosion;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject StartGlow;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject HitGlow;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject Particles;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject GoLight;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform tRoot;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform tTarget;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isInitializedOnStart;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LineRenderer line;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currentShaderIndex;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private RaycastHit hit;

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xA0F388", Offset = "0xA0F388", VA = "0xA0F388")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xA0F498", Offset = "0xA0F498", VA = "0xA0F498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xA0F59C", Offset = "0xA0F59C", VA = "0xA0F59C")]
	private void InitializeDefault()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xA102B4", Offset = "0xA102B4", VA = "0xA102B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xA102C4", Offset = "0xA102C4", VA = "0xA102C4")]
	public LineRendererBehaviour()
	{
	}
}
[Token(Token = "0x20001DE")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera Camera;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Active;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AutoInitCamera;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject myContainer;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform camT;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform contT;

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xBC85D8", Offset = "0xBC85D8", VA = "0xBC85D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xBC8760", Offset = "0xBC8760", VA = "0xBC8760")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xBC893C", Offset = "0xBC893C", VA = "0xBC893C")]
	public Billboard()
	{
	}
}
[Token(Token = "0x20001DF")]
public class CollisionActiveBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsReverse;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TimeDelay;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsLookAt;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EffectSettings effectSettings;

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xC04E34", Offset = "0xC04E34", VA = "0xC04E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xC0505C", Offset = "0xC0505C", VA = "0xC0505C")]
	private void effectSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xC04F4C", Offset = "0xC04F4C", VA = "0xC04F4C")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xC05168", Offset = "0xC05168", VA = "0xC05168")]
	public CollisionActiveBehaviour()
	{
	}
}
[Token(Token = "0x20001E0")]
public class DeadTime : MonoBehaviour
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float deadTime;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroyRoot;

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xB07390", Offset = "0xB07390", VA = "0xB07390")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xB07440", Offset = "0xB07440", VA = "0xB07440")]
	public DeadTime()
	{
	}
}
[Token(Token = "0x20001E1")]
public class DistortionMobileCamera : MonoBehaviour
{
	[Token(Token = "0x2000611")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D408", Offset = "0x85D408")]
	private sealed class <RepeatCameraMove>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DistortionMobileCamera <>4__this;

		[Token(Token = "0x170003D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x9F43B8", Offset = "0x9F43B8", VA = "0x9F43B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x9F4420", Offset = "0x9F4420", VA = "0x9F4420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0x9F408C", Offset = "0x9F408C", VA = "0x9F408C")]
		[DebuggerHidden]
		public <RepeatCameraMove>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x9F435C", Offset = "0x9F435C", VA = "0x9F435C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x9F4360", Offset = "0x9F4360", VA = "0x9F4360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x9F43C0", Offset = "0x9F43C0", VA = "0x9F43C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000612")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D418", Offset = "0x85D418")]
	private sealed class <RepeatCameraStatic>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DistortionMobileCamera <>4__this;

		[Token(Token = "0x170003D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x9F4484", Offset = "0x9F4484", VA = "0x9F4484", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x9F44EC", Offset = "0x9F44EC", VA = "0x9F44EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x9F40B8", Offset = "0x9F40B8", VA = "0x9F40B8")]
		[DebuggerHidden]
		public <RepeatCameraStatic>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x9F4428", Offset = "0x9F4428", VA = "0x9F4428", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x9F442C", Offset = "0x9F442C", VA = "0x9F442C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x9F448C", Offset = "0x9F448C", VA = "0x9F448C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TextureScale;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureFormat RenderTextureFormat;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FilterMode FilterMode;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CullingMask;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderingPath RenderingPath;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int FPSWhenMoveCamera;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int FPSWhenStaticCamera;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool UseRealTime;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture renderTexture;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cameraInstance;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject goCamera;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 oldPosition;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion oldRotation;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform instanceCameraTransform;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool canUpdateCamera;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool isStaticUpdate;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaitForSeconds fpsMove;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaitForSeconds fpsStatic;

	[Token(Token = "0x4000CD0")]
	private const int DropedFrames = 50;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int frameCountWhenCameraIsStatic;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x9F39D8", Offset = "0x9F39D8", VA = "0x9F39D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x9F3E2C", Offset = "0x9F3E2C", VA = "0x9F3E2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x9F3D4C", Offset = "0x9F3D4C", VA = "0x9F3D4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86F2A8", Offset = "0x86F2A8")]
	private IEnumerator RepeatCameraMove()
	{
		return null;
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x9F3DBC", Offset = "0x9F3DBC", VA = "0x9F3DBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86F30C", Offset = "0x86F30C")]
	private IEnumerator RepeatCameraStatic()
	{
		return null;
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x9F40E4", Offset = "0x9F40E4", VA = "0x9F40E4")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x9F417C", Offset = "0x9F417C", VA = "0x9F417C")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x9F3AD8", Offset = "0x9F3AD8", VA = "0x9F3AD8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x9F4214", Offset = "0x9F4214", VA = "0x9F4214")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x9F4314", Offset = "0x9F4314", VA = "0x9F4314")]
	public DistortionMobileCamera()
	{
	}
}
[Token(Token = "0x20001E2")]
public class EffectSettings : MonoBehaviour
{
	[Token(Token = "0x2000613")]
	public enum EffectTypeEnum
	{
		[Token(Token = "0x4002BC9")]
		Projectile,
		[Token(Token = "0x4002BCA")]
		AOE,
		[Token(Token = "0x4002BCB")]
		Other
	}

	[Token(Token = "0x2000614")]
	public enum DeactivationEnum
	{
		[Token(Token = "0x4002BCD")]
		Deactivate,
		[Token(Token = "0x4002BCE")]
		DestroyAfterCollision,
		[Token(Token = "0x4002BCF")]
		DestroyAfterTime,
		[Token(Token = "0x4002BD0")]
		Nothing
	}

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861E14", Offset = "0x861E14")]
	public EffectTypeEnum EffectType;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861E4C", Offset = "0x861E4C")]
	public float ColliderRadius;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861E84", Offset = "0x861E84")]
	public float EffectRadius;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861EBC", Offset = "0x861EBC")]
	public bool UseMoveVector;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861EF4", Offset = "0x861EF4")]
	public GameObject Target;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861F2C", Offset = "0x861F2C")]
	public Vector3 MoveVector;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861F64", Offset = "0x861F64")]
	public float MoveSpeed;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861F9C", Offset = "0x861F9C")]
	public bool IsHomingMove;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x861FD4", Offset = "0x861FD4")]
	public float MoveDistance;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86200C", Offset = "0x86200C")]
	public bool IsVisible;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x862044", Offset = "0x862044")]
	public DeactivationEnum InstanceBehaviour;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86207C", Offset = "0x86207C")]
	public float DeactivateTimeDelay;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8620B4", Offset = "0x8620B4")]
	public float DestroyTimeDelay;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8620EC", Offset = "0x8620EC")]
	public LayerMask LayerMask;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject[] active_key;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] active_value;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject[] inactive_Key;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float[] inactive_value;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int lastActiveIndex;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int lastInactiveIndex;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int currentActiveGo;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int currentInactiveGo;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool deactivatedIsWait;

	[Token(Token = "0x14000033")]
	public event EventHandler<CollisionInfo> CollisionEnter
	{
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x9F4D14", Offset = "0x9F4D14", VA = "0x9F4D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F370", Offset = "0x86F370")]
		add
		{
		}
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x9F4DB8", Offset = "0x9F4DB8", VA = "0x9F4DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F380", Offset = "0x86F380")]
		remove
		{
		}
	}

	[Token(Token = "0x14000034")]
	public event EventHandler<EventArgs> EffectDeactivated
	{
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x9F4E5C", Offset = "0x9F4E5C", VA = "0x9F4E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F390", Offset = "0x86F390")]
		add
		{
		}
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x9F4F00", Offset = "0x9F4F00", VA = "0x9F4F00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F3A0", Offset = "0x86F3A0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x9F4FA4", Offset = "0x9F4FA4", VA = "0x9F4FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x9F504C", Offset = "0x9F504C", VA = "0x9F504C")]
	public void OnCollisionHandler(CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x9F5214", Offset = "0x9F5214", VA = "0x9F5214")]
	public void OnEffectDeactivatedHandler()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x9F52B4", Offset = "0x9F52B4", VA = "0x9F52B4")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x9F52F0", Offset = "0x9F52F0", VA = "0x9F52F0")]
	private void SetGoActive()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x9F5364", Offset = "0x9F5364", VA = "0x9F5364")]
	private void SetGoInactive()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x9F53D8", Offset = "0x9F53D8", VA = "0x9F53D8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x9F54A0", Offset = "0x9F54A0", VA = "0x9F54A0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x9F552C", Offset = "0x9F552C", VA = "0x9F552C")]
	public void RegistreActiveElement(GameObject go, float time)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x9F55E0", Offset = "0x9F55E0", VA = "0x9F55E0")]
	public void RegistreInactiveElement(GameObject go, float time)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x9F5694", Offset = "0x9F5694", VA = "0x9F5694")]
	public EffectSettings()
	{
	}
}
[Token(Token = "0x20001E3")]
public class CollisionInfo : EventArgs
{
	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RaycastHit Hit;

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xC05170", Offset = "0xC05170", VA = "0xC05170")]
	public CollisionInfo()
	{
	}
}
[Token(Token = "0x20001E4")]
public class EffectsColorizer : MonoBehaviour
{
	[Token(Token = "0x2000615")]
	public struct HSBColor
	{
		[Token(Token = "0x4002BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float h;

		[Token(Token = "0x4002BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float s;

		[Token(Token = "0x4002BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4002BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x765CDC", Offset = "0x765CDC", VA = "0x765CDC")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color TintColor;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseInstanceWhenNotEditorMode;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color oldColor;

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x9F57AC", Offset = "0x9F57AC", VA = "0x9F57AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x9F57B0", Offset = "0x9F57B0", VA = "0x9F57B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x9F5810", Offset = "0x9F5810", VA = "0x9F5810")]
	private void ChangeColor(GameObject effect, Color color)
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x9F5BC4", Offset = "0x9F5BC4", VA = "0x9F5BC4")]
	public HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x9F5D54", Offset = "0x9F5D54", VA = "0x9F5D54")]
	public Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x9F5FA8", Offset = "0x9F5FA8", VA = "0x9F5FA8")]
	public EffectsColorizer()
	{
	}
}
[Token(Token = "0x20001E5")]
[ExecuteInEditMode]
public class EffectsParticleSystemScaler : MonoBehaviour
{
	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float particlesScale;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float oldScale;

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x9F5FB8", Offset = "0x9F5FB8", VA = "0x9F5FB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x9F5FC4", Offset = "0x9F5FC4", VA = "0x9F5FC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x9F5FC8", Offset = "0x9F5FC8", VA = "0x9F5FC8")]
	public EffectsParticleSystemScaler()
	{
	}
}
[Token(Token = "0x20001E6")]
public class FadeInOutLight : MonoBehaviour
{
	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartDelay;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float FadeInSpeed;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FadeOutDelay;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FadeOutSpeed;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool FadeOutAfterCollision;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool UseHideStatus;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light goLight;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float oldIntensity;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentIntensity;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startIntensity;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool canStart;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool canStartFadeOut;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool fadeInComplited;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	private bool fadeOutComplited;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isCollisionEnter;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool allComplited;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool isStartDelay;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool isIn;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isOut;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialized;

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x9F8F3C", Offset = "0x9F8F3C", VA = "0x9F8F3C")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x9F904C", Offset = "0x9F904C", VA = "0x9F904C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x9F91A0", Offset = "0x9F91A0", VA = "0x9F91A0")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x9F9278", Offset = "0x9F9278", VA = "0x9F9278")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x9F92F4", Offset = "0x9F92F4", VA = "0x9F92F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x9F9304", Offset = "0x9F9304", VA = "0x9F9304")]
	private void SetupStartDelay()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x9F9310", Offset = "0x9F9310", VA = "0x9F9310")]
	private void SetupFadeOutDelay()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x9F931C", Offset = "0x9F931C", VA = "0x9F931C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x9F94C8", Offset = "0x9F94C8", VA = "0x9F94C8")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x9F9590", Offset = "0x9F9590", VA = "0x9F9590")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x9F9610", Offset = "0x9F9610", VA = "0x9F9610")]
	public FadeInOutLight()
	{
	}
}
[Token(Token = "0x20001E7")]
public class FadeInOutParticles : MonoBehaviour
{
	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] particles;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool oldVisibleStat;

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x9F9618", Offset = "0x9F9618", VA = "0x9F9618")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x9F9728", Offset = "0x9F9728", VA = "0x9F9728")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x9F97B0", Offset = "0x9F97B0", VA = "0x9F97B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x9F9900", Offset = "0x9F9900", VA = "0x9F9900")]
	public FadeInOutParticles()
	{
	}
}
[Token(Token = "0x20001E8")]
public class FadeInOutScale : MonoBehaviour
{
	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FadeInOutStatus FadeInOutStatus;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Speed;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxScale;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 oldScale;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float oldSin;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool updateTime;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool canUpdate;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform t;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInitialized;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isCollisionEnter;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x9F9908", Offset = "0x9F9908", VA = "0x9F9908")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x9F9A24", Offset = "0x9F9A24", VA = "0x9F9A24")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x9F9B34", Offset = "0x9F9B34", VA = "0x9F9B34")]
	public void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x9F9BF8", Offset = "0x9F9BF8", VA = "0x9F9BF8")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x9F9C08", Offset = "0x9F9C08", VA = "0x9F9C08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x9F9C18", Offset = "0x9F9C18", VA = "0x9F9C18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x9F9EB4", Offset = "0x9F9EB4", VA = "0x9F9EB4")]
	public FadeInOutScale()
	{
	}
}
[Token(Token = "0x20001E9")]
public class FadeInOutShaderColor : MonoBehaviour
{
	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderColorName;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartDelay;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FadeInSpeed;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeOutDelay;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FadeOutSpeed;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSharedMaterial;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool FadeOutAfterCollision;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool UseHideStatus;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color oldColor;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color currentColor;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float oldAlpha;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float alpha;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool canStart;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool canStartFadeOut;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool fadeInComplited;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool fadeOutComplited;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isCollisionEnter;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool isStartDelay;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool isIn;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	private bool isOut;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isInitialized;

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x9F9ED0", Offset = "0x9F9ED0", VA = "0x9F9ED0")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x9F9FE0", Offset = "0x9F9FE0", VA = "0x9F9FE0")]
	public void UpdateMaterial(Material instanceMaterial)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x9FA2BC", Offset = "0x9FA2BC", VA = "0x9FA2BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x9F9FE8", Offset = "0x9F9FE8", VA = "0x9F9FE8")]
	private void InitMaterial()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x9FA3A4", Offset = "0x9FA3A4", VA = "0x9FA3A4")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x9FA498", Offset = "0x9FA498", VA = "0x9FA498")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x9FA514", Offset = "0x9FA514", VA = "0x9FA514")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x9FA524", Offset = "0x9FA524", VA = "0x9FA524")]
	private void SetupStartDelay()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x9FA530", Offset = "0x9FA530", VA = "0x9FA530")]
	private void SetupFadeOutDelay()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x9FA53C", Offset = "0x9FA53C", VA = "0x9FA53C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x9FA724", Offset = "0x9FA724", VA = "0x9FA724")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x9FA7EC", Offset = "0x9FA7EC", VA = "0x9FA7EC")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x9FA870", Offset = "0x9FA870", VA = "0x9FA870")]
	public FadeInOutShaderColor()
	{
	}
}
[Token(Token = "0x20001EA")]
public class FadeInOutShaderFloat : MonoBehaviour
{
	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PropertyName;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxFloat;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StartDelay;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeInSpeed;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FadeOutDelay;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float FadeOutSpeed;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool FadeOutAfterCollision;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseHideStatus;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material OwnMaterial;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material mat;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float oldFloat;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float currentFloat;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canStart;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool canStartFadeOut;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool fadeInComplited;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool fadeOutComplited;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool previousFrameVisibleStatus;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isCollisionEnter;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool isStartDelay;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	private bool isIn;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isOut;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isInitialized;

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x9FA8C8", Offset = "0x9FA8C8", VA = "0x9FA8C8")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x9FA9D8", Offset = "0x9FA9D8", VA = "0x9FA9D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x9FAD6C", Offset = "0x9FAD6C", VA = "0x9FAD6C")]
	public void UpdateMaterial(Material instanceMaterial)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x9FAAC0", Offset = "0x9FAAC0", VA = "0x9FAAC0")]
	private void InitMaterial()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x9FAD74", Offset = "0x9FAD74", VA = "0x9FAD74")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x9FAE54", Offset = "0x9FAE54", VA = "0x9FAE54")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x9FAED0", Offset = "0x9FAED0", VA = "0x9FAED0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x9FAEE0", Offset = "0x9FAEE0", VA = "0x9FAEE0")]
	private void SetupStartDelay()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x9FAEEC", Offset = "0x9FAEEC", VA = "0x9FAEEC")]
	private void SetupFadeOutDelay()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x9FAEF8", Offset = "0x9FAEF8", VA = "0x9FAEF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x9FB0E0", Offset = "0x9FB0E0", VA = "0x9FB0E0")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x9FB1A0", Offset = "0x9FB1A0", VA = "0x9FB1A0")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x9FB220", Offset = "0x9FB220", VA = "0x9FB220")]
	public FadeInOutShaderFloat()
	{
	}
}
[Token(Token = "0x20001EB")]
public class FadeInOutSound : MonoBehaviour
{
	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxVolume;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartDelay;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FadeInSpeed;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FadeOutDelay;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FadeOutSpeed;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool FadeOutAfterCollision;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool UseHideStatus;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float oldVolume;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentVolume;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool canStart;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool canStartFadeOut;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool fadeInComplited;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool fadeOutComplited;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isCollisionEnter;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool allComplited;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool isStartDelay;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	private bool isIn;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isOut;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInitialized;

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x9FB280", Offset = "0x9FB280", VA = "0x9FB280")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x9FB390", Offset = "0x9FB390", VA = "0x9FB390")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x9FB478", Offset = "0x9FB478", VA = "0x9FB478")]
	private void InitSource()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x9FB554", Offset = "0x9FB554", VA = "0x9FB554")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x9FB630", Offset = "0x9FB630", VA = "0x9FB630")]
	private void prefabSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x9FB6AC", Offset = "0x9FB6AC", VA = "0x9FB6AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x9FB6BC", Offset = "0x9FB6BC", VA = "0x9FB6BC")]
	private void SetupStartDelay()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x9FB6C8", Offset = "0x9FB6C8", VA = "0x9FB6C8")]
	private void SetupFadeOutDelay()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x9FB6D4", Offset = "0x9FB6D4", VA = "0x9FB6D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x9FB8A8", Offset = "0x9FB8A8", VA = "0x9FB8A8")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x9FB970", Offset = "0x9FB970", VA = "0x9FB970")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x9FB9F0", Offset = "0x9FB9F0", VA = "0x9FB9F0")]
	public FadeInOutSound()
	{
	}
}
[Token(Token = "0x20001EC")]
public enum FadeInOutStatus
{
	[Token(Token = "0x4000D59")]
	In,
	[Token(Token = "0x4000D5A")]
	Out,
	[Token(Token = "0x4000D5B")]
	InOut,
	[Token(Token = "0x4000D5C")]
	In_OutAfterCollision,
	[Token(Token = "0x4000D5D")]
	InAfterCollision,
	[Token(Token = "0x4000D5E")]
	OutAfterCollision,
	[Token(Token = "0x4000D5F")]
	InOutAfterCollision
}
[Token(Token = "0x20001ED")]
public class FixShaderQueue : MonoBehaviour
{
	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int AddQueue;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x9FFCE8", Offset = "0x9FFCE8", VA = "0x9FFCE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x9FFDD4", Offset = "0x9FFDD4", VA = "0x9FFDD4")]
	private void SetProjectorQueue()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x9FFE58", Offset = "0x9FFE58", VA = "0x9FFE58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x9FFEFC", Offset = "0x9FFEFC", VA = "0x9FFEFC")]
	public FixShaderQueue()
	{
	}
}
[Token(Token = "0x20001EE")]
public class OnStartSendCollision : MonoBehaviour
{
	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isInitialized;

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xEE6694", Offset = "0xEE6694", VA = "0xEE6694")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xEE67A4", Offset = "0xEE67A4", VA = "0xEE67A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xEE6844", Offset = "0xEE6844", VA = "0xEE6844")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xEE68CC", Offset = "0xEE68CC", VA = "0xEE68CC")]
	public OnStartSendCollision()
	{
	}
}
[Token(Token = "0x20001EF")]
[ExecuteInEditMode]
public class Rain_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 RandomizeRotation;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LookAtForward;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool canUpdateCollisionDetect;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float collisionDetectTime;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentCollisionTime;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 prevPos;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 currentDirection;

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xFD0804", Offset = "0xFD0804", VA = "0xFD0804")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xFD0994", Offset = "0xFD0994", VA = "0xFD0994")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xFD09A4", Offset = "0xFD09A4", VA = "0xFD09A4")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xFD108C", Offset = "0xFD108C", VA = "0xFD108C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xFD0AC4", Offset = "0xFD0AC4", VA = "0xFD0AC4")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xFD1224", Offset = "0xFD1224", VA = "0xFD1224")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xFD12E0", Offset = "0xFD12E0", VA = "0xFD12E0")]
	public Rain_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x20001F0")]
public class RotateAround : MonoBehaviour
{
	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LifeTime;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SpeedFadeInTime;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseCollision;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EffectSettings EffectSettings;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canUpdate;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentSpeedFadeIn;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float allTime;

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xAFBA70", Offset = "0xAFBA70", VA = "0xAFBA70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xAFBB48", Offset = "0xAFBB48", VA = "0xAFBB48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xAFBB58", Offset = "0xAFBB58", VA = "0xAFBB58")]
	private void EffectSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xAFBB60", Offset = "0xAFBB60", VA = "0xAFBB60")]
	private void ChangeUpdate()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xAFBB6C", Offset = "0xAFBB6C", VA = "0xAFBB6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xAFBCDC", Offset = "0xAFBCDC", VA = "0xAFBCDC")]
	public RotateAround()
	{
	}
}
[Token(Token = "0x20001F1")]
public class SetPositionOnHit : MonoBehaviour
{
	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float OffsetPosition;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EffectSettings effectSettings;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform tRoot;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isInitialized;

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xB00AC8", Offset = "0xB00AC8", VA = "0xB00AC8")]
	private void GetEffectSettingsComponent(Transform tr)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xB00BD8", Offset = "0xB00BD8", VA = "0xB00BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xB00CB4", Offset = "0xB00CB4", VA = "0xB00CB4")]
	private void effectSettings_CollisionEnter(object sender, CollisionInfo e)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xB00EA0", Offset = "0xB00EA0", VA = "0xB00EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xB00F54", Offset = "0xB00F54", VA = "0xB00F54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xB00FE0", Offset = "0xB00FE0", VA = "0xB00FE0")]
	public SetPositionOnHit()
	{
	}
}
[Token(Token = "0x20001F2")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x2000616")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D428", Offset = "0x85D428")]
	private sealed class <UpdateCorutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UVTextureAnimator <>4__this;

		[Token(Token = "0x170003D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0xA9E790", Offset = "0xA9E790", VA = "0xA9E790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0xA9E7F8", Offset = "0xA9E7F8", VA = "0xA9E7F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0xA9E170", Offset = "0xA9E170", VA = "0xA9E170")]
		[DebuggerHidden]
		public <UpdateCorutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0xA9E68C", Offset = "0xA9E68C", VA = "0xA9E68C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0xA9E690", Offset = "0xA9E690", VA = "0xA9E690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0xA9E798", Offset = "0xA9E798", VA = "0xA9E798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] AnimatedMaterialsNotInstance;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Rows;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Columns;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Fps;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int OffsetMat;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 SelfTiling;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsLoop;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool IsReverse;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool IsRandomOffsetForInctance;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool IsBump;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IsHeight;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool IsCutOut;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool isInizialised;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int index;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int count;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int allCount;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float deltaFps;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isVisible;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isCorutineStarted;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer currentRenderer;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material instanceMaterial;

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xA9D848", Offset = "0xA9D848", VA = "0xA9D848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xA9E0B4", Offset = "0xA9E0B4", VA = "0xA9E0B4")]
	public void SetInstanceMaterial(Material mat, Vector2 offsetMat)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xA9DA54", Offset = "0xA9DA54", VA = "0xA9DA54")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xA9D890", Offset = "0xA9D890", VA = "0xA9D890")]
	private void InitMaterial()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xA9E0BC", Offset = "0xA9E0BC", VA = "0xA9E0BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xA9E114", Offset = "0xA9E114", VA = "0xA9E114")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xA9E120", Offset = "0xA9E120", VA = "0xA9E120")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xA9E168", Offset = "0xA9E168", VA = "0xA9E168")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xA9E044", Offset = "0xA9E044", VA = "0xA9E044")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86F3B0", Offset = "0x86F3B0")]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xA9E19C", Offset = "0xA9E19C", VA = "0xA9E19C")]
	private void UpdateCorutineFrame()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xA9E66C", Offset = "0xA9E66C", VA = "0xA9E66C")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x20001F3")]
public class RFX4_AudioCurves : MonoBehaviour
{
	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve AudioCurve;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsLoop;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool canUpdate;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startVolume;

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xB2BF60", Offset = "0xB2BF60", VA = "0xB2BF60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xB2BFF0", Offset = "0xB2BFF0", VA = "0xB2BFF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xB2C020", Offset = "0xB2C020", VA = "0xB2C020")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xB2C0C4", Offset = "0xB2C0C4", VA = "0xB2C0C4")]
	public RFX4_AudioCurves()
	{
	}
}
[Token(Token = "0x20001F4")]
public class RFX4_LightCurves : MonoBehaviour
{
	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool UseShadowsIfPossible;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xB3275C", Offset = "0xB3275C", VA = "0xB3275C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xB327E0", Offset = "0xB327E0", VA = "0xB327E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xB32810", Offset = "0xB32810", VA = "0xB32810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xB328D4", Offset = "0xB328D4", VA = "0xB328D4")]
	public RFX4_LightCurves()
	{
	}
}
[Token(Token = "0x20001F5")]
public class RFX4_PhysicsForceCurves : MonoBehaviour
{
	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ForceRadius;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ForceMultiplier;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve ForceCurve;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ForceMode ForceMode;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsLoop;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DestoryDistance;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool UseDistanceScale;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve DistanceScaleCurve;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseUPVector;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve DragCurve;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float DragGraphTimeMultiplier;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float DragGraphIntensityMultiplier;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string AffectedName;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float forceAdditionalMultiplier;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool canUpdate;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startTime;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform t;

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xB36894", Offset = "0xB36894", VA = "0xB36894")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xB368BC", Offset = "0xB368BC", VA = "0xB368BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xB368F4", Offset = "0xB368F4", VA = "0xB368F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xB36E7C", Offset = "0xB36E7C", VA = "0xB36E7C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xB36ECC", Offset = "0xB36ECC", VA = "0xB36ECC")]
	public RFX4_PhysicsForceCurves()
	{
	}
}
[Token(Token = "0x20001F6")]
public class RFX4_ScaleCurves : MonoBehaviour
{
	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform t;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nameId;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Projector proj;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startScale;

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xB394F8", Offset = "0xB394F8", VA = "0xB394F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xB395BC", Offset = "0xB395BC", VA = "0xB395BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xB3964C", Offset = "0xB3964C", VA = "0xB3964C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xB397BC", Offset = "0xB397BC", VA = "0xB397BC")]
	public RFX4_ScaleCurves()
	{
	}
}
[Token(Token = "0x20001F7")]
public class RFX4_ShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient Color;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeMultiplier;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int propertyID;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startTime;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color startColor;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInitialized;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string shaderProperty;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer rend;

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xB39804", Offset = "0xB39804", VA = "0xB39804")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xB39944", Offset = "0xB39944", VA = "0xB39944")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xB39A44", Offset = "0xB39A44", VA = "0xB39A44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xB39C08", Offset = "0xB39C08", VA = "0xB39C08")]
	public RFX4_ShaderColorGradient()
	{
	}
}
[Token(Token = "0x20001F8")]
public class RFX4_ShaderFloatCurve : MonoBehaviour
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderFloatProperty;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsLoop;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool canUpdate;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int propertyID;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string shaderProperty;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer rend;

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xB39C80", Offset = "0xB39C80", VA = "0xB39C80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xB39D94", Offset = "0xB39D94", VA = "0xB39D94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xB39E1C", Offset = "0xB39E1C", VA = "0xB39E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xB39EE8", Offset = "0xB39EE8", VA = "0xB39EE8")]
	public RFX4_ShaderFloatCurve()
	{
	}
}
[Token(Token = "0x20001F9")]
public enum RFX4_ShaderProperties
{
	[Token(Token = "0x4000DDB")]
	_TintColor,
	[Token(Token = "0x4000DDC")]
	_Cutoff,
	[Token(Token = "0x4000DDD")]
	_Color,
	[Token(Token = "0x4000DDE")]
	_EmissionColor,
	[Token(Token = "0x4000DDF")]
	_MaskPow,
	[Token(Token = "0x4000DE0")]
	_Cutout,
	[Token(Token = "0x4000DE1")]
	_Speed,
	[Token(Token = "0x4000DE2")]
	_BumpAmt,
	[Token(Token = "0x4000DE3")]
	_MainColor,
	[Token(Token = "0x4000DE4")]
	_Distortion,
	[Token(Token = "0x4000DE5")]
	_FresnelColor
}
[Token(Token = "0x20001FA")]
public class RFX4_WindCurves : MonoBehaviour
{
	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve WindCurve;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WindZone windZone;

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xFD0518", Offset = "0xFD0518", VA = "0xFD0518")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xFD05C8", Offset = "0xFD05C8", VA = "0xFD05C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xFD05F8", Offset = "0xFD05F8", VA = "0xFD05F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xFD069C", Offset = "0xFD069C", VA = "0xFD069C")]
	public RFX4_WindCurves()
	{
	}
}
[Token(Token = "0x20001FB")]
public class RFX4_EffectSettings : MonoBehaviour
{
	[Token(Token = "0x2000617")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D438", Offset = "0x85D438")]
	private sealed class <Fadeout>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RFX4_EffectSettings <>4__this;

		[Token(Token = "0x170003DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0xB324B8", Offset = "0xB324B8", VA = "0xB324B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0xB32520", Offset = "0xB32520", VA = "0xB32520", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0xB31E4C", Offset = "0xB31E4C", VA = "0xB31E4C")]
		[DebuggerHidden]
		public <Fadeout>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0xB323D0", Offset = "0xB323D0", VA = "0xB323D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0xB323D4", Offset = "0xB323D4", VA = "0xB323D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0xB324C0", Offset = "0xB324C0", VA = "0xB324C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x862184", Offset = "0x862184")]
	public float ParticlesBudget;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseLightShadows;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool UseFastFlatDecalsForMobiles;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool UseCustomColor;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color EffectColor;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsVisible;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float FadeoutTime;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseCollisionDetection;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool LimitMaxDistance;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MaxDistnace;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Mass;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Speed;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float AirDrag;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool UseGravity;

	[Token(Token = "0x4000DFB")]
	private const string distortionNamePC = "KriptoFX/RFX4/Distortion";

	[Token(Token = "0x4000DFC")]
	private const string distortionNameMobile = "KriptoFX/RFX4/DistortionMobile";

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool isCheckedDistortion;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool prevIsVisible;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float currentFadeoutTime;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer[] renderers;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer[] skinRenderers;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Light[] lights;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource[] audioSources;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string[] colorProperties;

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xB31398", Offset = "0xB31398", VA = "0xB31398")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xB3146C", Offset = "0xB3146C", VA = "0xB3146C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xB31B34", Offset = "0xB31B34", VA = "0xB31B34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xB314E8", Offset = "0xB314E8", VA = "0xB314E8")]
	private void ChangeParticlesBudget(float particlesMul)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xB31788", Offset = "0xB31788", VA = "0xB31788")]
	public void ChangeParticleColor()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xB31914", Offset = "0xB31914", VA = "0xB31914")]
	public void SetFlatDecals()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xB319BC", Offset = "0xB319BC", VA = "0xB319BC")]
	public void DisableShadows()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xB319B4", Offset = "0xB319B4", VA = "0xB319B4")]
	private bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xB31BA8", Offset = "0xB31BA8", VA = "0xB31BA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86F414", Offset = "0x86F414")]
	private IEnumerator Fadeout()
	{
		return null;
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xB31E78", Offset = "0xB31E78", VA = "0xB31E78")]
	private void UpdateAlphaByProperties(Material mat, float overrideAlpha = -1f)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xB31F68", Offset = "0xB31F68", VA = "0xB31F68")]
	private void ChangeAlphaFade()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xB313A4", Offset = "0xB313A4", VA = "0xB313A4")]
	private void CacheRenderers()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xB31C18", Offset = "0xB31C18", VA = "0xB31C18")]
	private void Fadein()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xB3226C", Offset = "0xB3226C", VA = "0xB3226C")]
	public RFX4_EffectSettings()
	{
	}
}
[Token(Token = "0x20001FC")]
public class RFX4_CollisionPropertyDeactiavtion : MonoBehaviour
{
	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DeactivateTimeDelay;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WindZone windZone;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.CollisionModule collisionModule;

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xB2CA44", Offset = "0xB2CA44", VA = "0xB2CA44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xB2CAB0", Offset = "0xB2CAB0", VA = "0xB2CAB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xB2CAE4", Offset = "0xB2CAE4", VA = "0xB2CAE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xB2CB30", Offset = "0xB2CB30", VA = "0xB2CB30")]
	public RFX4_CollisionPropertyDeactiavtion()
	{
	}
}
[Token(Token = "0x20001FD")]
public class RFX4_ParticleGravityDelay : MonoBehaviour
{
	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve GravityByTime;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeMultiplier;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8621A0", Offset = "0x8621A0")]
	public float GravityMultiplierMin;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GravityMultiplierMax;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.MainModule main;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startTime;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startMinGrav;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startMaxGrav;

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xB34320", Offset = "0xB34320", VA = "0xB34320")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xB343E8", Offset = "0xB343E8", VA = "0xB343E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xB34474", Offset = "0xB34474", VA = "0xB34474")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xB34540", Offset = "0xB34540", VA = "0xB34540")]
	public RFX4_ParticleGravityDelay()
	{
	}
}
[Token(Token = "0x20001FE")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859CA4", Offset = "0x859CA4")]
public class RFX4_ParticleLight : MonoBehaviour
{
	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LightIntencityMultiplayer;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseShadows;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int LightsLimit;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Light[] lights;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isLocalSpace;

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xB349F8", Offset = "0xB349F8", VA = "0xB349F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xB34CCC", Offset = "0xB34CCC", VA = "0xB34CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xB35040", Offset = "0xB35040", VA = "0xB35040")]
	public RFX4_ParticleLight()
	{
	}
}
[Token(Token = "0x20001FF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859D18", Offset = "0x859D18")]
public class RFX4_ParticleTrail : MonoBehaviour
{
	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 DefaultSizeMultiplayer;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float VertexLifeTime;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TrailLifeTime;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseShaderMaterial;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material TrailMaterial;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool UseColorOverLifeTime;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient ColorOverLifeTime;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RFX4_ShaderProperties colorShaderProperty;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float ColorLifeTime;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseUvAnimation;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int TilesX;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int TilesY;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int FPS;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool IsLoop;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8621B0", Offset = "0x8621B0")]
	public float MinVertexDistance;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool GetVelocityFromParticleSystem;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float Gravity;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 Force;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float InheritVelocity;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float Drag;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8621CC", Offset = "0x8621CC")]
	public float Frequency;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8621E8", Offset = "0x8621E8")]
	public float OffsetSpeed;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool RandomTurbulenceOffset;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x862204", Offset = "0x862204")]
	public float Amplitude;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool SmoothCurves;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, LineRenderer> dict;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ParticleSystem ps;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TrailRenderer[] trails;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color psColor;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform targetT;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int layer;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool isLocalSpace;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform t;

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xB35058", Offset = "0xB35058", VA = "0xB35058")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xB3599C", Offset = "0xB3599C", VA = "0xB3599C")]
	private void ClearTrails()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xB35228", Offset = "0xB35228", VA = "0xB35228")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xB35BA8", Offset = "0xB35BA8", VA = "0xB35BA8")]
	private void InitTrailRenderer(GameObject go)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xB35AAC", Offset = "0xB35AAC", VA = "0xB35AAC")]
	private void RemoveEmptyTrails()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xB35C94", Offset = "0xB35C94", VA = "0xB35C94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xB35E1C", Offset = "0xB35E1C", VA = "0xB35E1C")]
	public RFX4_ParticleTrail()
	{
	}
}
[Token(Token = "0x2000200")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859D7C", Offset = "0x859D7C")]
public class RFX4_Turbulence : MonoBehaviour
{
	[Token(Token = "0x2000618")]
	public enum MoveMethodEnum
	{
		[Token(Token = "0x4002BDC")]
		Position,
		[Token(Token = "0x4002BDD")]
		Velocity,
		[Token(Token = "0x4002BDE")]
		RelativePosition
	}

	[Token(Token = "0x2000619")]
	public enum PerfomanceEnum
	{
		[Token(Token = "0x4002BE0")]
		High,
		[Token(Token = "0x4002BE1")]
		Low
	}

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TurbulenceStrenght;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool TurbulenceByTime;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeDelay;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve TurbulenceStrengthByTime;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 Frequency;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 OffsetSpeed;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 Amplitude;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 GlobalForce;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool UseGlobalOffset;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public MoveMethodEnum MoveMethod;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PerfomanceEnum Perfomance;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ThreshholdSpeed;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lastStopTime;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 currentOffset;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float deltaTime;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float deltaTimeLastUpdateOffset;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem particleSys;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float time;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int currentSplit;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float fpsTime;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int FPS;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int splitUpdate;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private PerfomanceEnum perfomanceOldSettings;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool skipFrame;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform t;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float currentDelay;

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xFCEAF4", Offset = "0xFCEAF4", VA = "0xFCEAF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xFCEC80", Offset = "0xFCEC80", VA = "0xFCEC80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xFCEC88", Offset = "0xFCEC88", VA = "0xFCEC88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xFCEC2C", Offset = "0xFCEC2C", VA = "0xFCEC2C")]
	private void UpdatePerfomanceSettings()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xFCEF54", Offset = "0xFCEF54", VA = "0xFCEF54")]
	private void UpdateTurbulence()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xFCF6B0", Offset = "0xFCF6B0", VA = "0xFCF6B0")]
	public RFX4_Turbulence()
	{
	}
}
[Token(Token = "0x2000201")]
public class RFX4_CameraShake : MonoBehaviour
{
	[Token(Token = "0x200061A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D448", Offset = "0x85D448")]
	private sealed class <Shake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RFX4_CameraShake <>4__this;

		[Token(Token = "0x4002BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsed>5__2;

		[Token(Token = "0x4002BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <camT>5__3;

		[Token(Token = "0x4002BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <originalCamRotation>5__4;

		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <direction>5__5;

		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <time>5__6;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <randomStart>5__7;

		[Token(Token = "0x4002BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <distanceDamper>5__8;

		[Token(Token = "0x4002BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 <oldRotation>5__9;

		[Token(Token = "0x170003DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0xB2C9D4", Offset = "0xB2C9D4", VA = "0xB2C9D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0xB2CA3C", Offset = "0xB2CA3C", VA = "0xB2CA3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0xB2C2E8", Offset = "0xB2C2E8", VA = "0xB2C2E8")]
		[DebuggerHidden]
		public <Shake>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0xB2C370", Offset = "0xB2C370", VA = "0xB2C370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0xB2C374", Offset = "0xB2C374", VA = "0xB2C374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0xB2C9DC", Offset = "0xB2C9DC", VA = "0xB2C9DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve ShakeCurve;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Duration;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Magnitude;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DistanceForce;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RotationDamper;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsEnabled;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isPlaying;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xB2C10C", Offset = "0xB2C10C", VA = "0xB2C10C")]
	private void PlayShake()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xB2C1B4", Offset = "0xB2C1B4", VA = "0xB2C1B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xB2C1D0", Offset = "0xB2C1D0", VA = "0xB2C1D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xB2C144", Offset = "0xB2C144", VA = "0xB2C144")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86F478", Offset = "0x86F478")]
	private IEnumerator Shake()
	{
		return null;
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xB2C314", Offset = "0xB2C314", VA = "0xB2C314")]
	public RFX4_CameraShake()
	{
	}
}
[Token(Token = "0x2000202")]
public static class RFX4_ColorHelper
{
	[Token(Token = "0x200061B")]
	public struct HSBColor
	{
		[Token(Token = "0x4002BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x4002BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x4002BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x4002BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x766698", Offset = "0x766698", VA = "0x766698")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x4000E66")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xB2CB40", Offset = "0xB2CB40", VA = "0xB2CB40")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xB2CD38", Offset = "0xB2CD38", VA = "0xB2CD38")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xB2CFAC", Offset = "0xB2CFAC", VA = "0xB2CFAC")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xB2D0CC", Offset = "0xB2D0CC", VA = "0xB2D0CC")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xB2DA48", Offset = "0xB2DA48", VA = "0xB2DA48")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xB2DB24", Offset = "0xB2DB24", VA = "0xB2DB24")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x2000203")]
public class RFX4_CopyPosition : MonoBehaviour
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CopiedTransform;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xB2DD9C", Offset = "0xB2DD9C", VA = "0xB2DD9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xB2DDC4", Offset = "0xB2DDC4", VA = "0xB2DDC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xB2DE04", Offset = "0xB2DE04", VA = "0xB2DE04")]
	public RFX4_CopyPosition()
	{
	}
}
[Token(Token = "0x2000204")]
[ExecuteInEditMode]
public class RFX4_CustomLight : MonoBehaviour
{
	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xB2DE0C", Offset = "0xB2DE0C", VA = "0xB2DE0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xB2DFF8", Offset = "0xB2DFF8", VA = "0xB2DFF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xB2F334", Offset = "0xB2F334", VA = "0xB2F334")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xB2E190", Offset = "0xB2E190", VA = "0xB2E190")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xB2E32C", Offset = "0xB2E32C", VA = "0xB2E32C")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xB2E85C", Offset = "0xB2E85C", VA = "0xB2E85C")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xB2EAE0", Offset = "0xB2EAE0", VA = "0xB2EAE0")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xB2E5A0", Offset = "0xB2E5A0", VA = "0xB2E5A0")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xB2EC0C", Offset = "0xB2EC0C", VA = "0xB2EC0C")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xB2DEAC", Offset = "0xB2DEAC", VA = "0xB2DEAC")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xB2F464", Offset = "0xB2F464", VA = "0xB2F464")]
	public RFX4_CustomLight()
	{
	}
}
[Token(Token = "0x2000205")]
public class RFX4_DeactivateByTime : MonoBehaviour
{
	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DeactivatedGameObject;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DeactivateTime;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isActiveState;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currentTime;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xB2F4C0", Offset = "0xB2F4C0", VA = "0xB2F4C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xB2F4D0", Offset = "0xB2F4D0", VA = "0xB2F4D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xB2F544", Offset = "0xB2F544", VA = "0xB2F544")]
	public RFX4_DeactivateByTime()
	{
	}
}
[Token(Token = "0x2000206")]
public class RFX4_DeactivateRigidbodyByTime : MonoBehaviour
{
	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeDelayToDeactivate;

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xB2F554", Offset = "0xB2F554", VA = "0xB2F554")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xB2F5E8", Offset = "0xB2F5E8", VA = "0xB2F5E8")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xB2F660", Offset = "0xB2F660", VA = "0xB2F660")]
	public RFX4_DeactivateRigidbodyByTime()
	{
	}
}
[Token(Token = "0x2000207")]
[ExecuteInEditMode]
public class RFX4_Decal : MonoBehaviour
{
	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsScreenSpace;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.MainModule psMain;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer rend;

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xB2FA18", Offset = "0xB2FA18", VA = "0xB2FA18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xB2FC58", Offset = "0xB2FC58", VA = "0xB2FC58")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xB2FE0C", Offset = "0xB2FE0C", VA = "0xB2FE0C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xB2FFFC", Offset = "0xB2FFFC", VA = "0xB2FFFC")]
	public RFX4_Decal()
	{
	}
}
[Token(Token = "0x2000208")]
public class RFX4_DemoReactivation : MonoBehaviour
{
	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ReactivationTime;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Effect;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xB30B18", Offset = "0xB30B18", VA = "0xB30B18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xB30B74", Offset = "0xB30B74", VA = "0xB30B74")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xB30BB8", Offset = "0xB30BB8", VA = "0xB30BB8")]
	public RFX4_DemoReactivation()
	{
	}
}
[Token(Token = "0x2000209")]
public class RFX4_EffectEvent : MonoBehaviour
{
	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CharacterEffect;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform CharacterAttachPoint;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float CharacterEffect_DestroyTime;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x862230", Offset = "0x862230")]
	public GameObject CharacterEffect2;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform CharacterAttachPoint2;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float CharacterEffect2_DestroyTime;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x862240", Offset = "0x862240")]
	public GameObject MainEffect;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform AttachPoint;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float Effect_DestroyTime;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x862250", Offset = "0x862250")]
	public GameObject AdditionalEffect;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform AdditionalEffectAttachPoint;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float AdditionalEffect_DestroyTime;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public bool IsMobile;

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xB30BC8", Offset = "0xB30BC8", VA = "0xB30BC8")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xB30E00", Offset = "0xB30E00", VA = "0xB30E00")]
	public void ActivateAdditionalEffect()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xB31008", Offset = "0xB31008", VA = "0xB31008")]
	public void ActivateCharacterEffect()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xB311CC", Offset = "0xB311CC", VA = "0xB311CC")]
	public void ActivateCharacterEffect2()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xB30D70", Offset = "0xB30D70", VA = "0xB30D70")]
	private void UpdateEffectForMobileIsNeed(GameObject instance)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xB3137C", Offset = "0xB3137C", VA = "0xB3137C")]
	public RFX4_EffectEvent()
	{
	}
}
[Token(Token = "0x200020A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859E10", Offset = "0x859E10")]
[ExecuteInEditMode]
public class RFX4_MaterialQueue : MonoBehaviour
{
	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x862270", Offset = "0x862270")]
	public int queue;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] queues;

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xB3291C", Offset = "0xB3291C", VA = "0xB3291C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xB32AB0", Offset = "0xB32AB0", VA = "0xB32AB0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xB32AB4", Offset = "0xB32AB4", VA = "0xB32AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xB32AEC", Offset = "0xB32AEC", VA = "0xB32AEC")]
	public RFX4_MaterialQueue()
	{
	}
}
[Token(Token = "0x200020B")]
public class RFX4_OnEnableResetTransform : MonoBehaviour
{
	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform t;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startPosition;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion startRotation;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startScale;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xB33E14", Offset = "0xB33E14", VA = "0xB33E14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xB33EE8", Offset = "0xB33EE8", VA = "0xB33EE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xB33FBC", Offset = "0xB33FBC", VA = "0xB33FBC")]
	public RFX4_OnEnableResetTransform()
	{
	}
}
[Token(Token = "0x200020C")]
public class RFX4_ParticleCollisionGameObject : MonoBehaviour
{
	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject InstancedGO;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DestroyDelay;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RotationParent;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xB33FC4", Offset = "0xB33FC4", VA = "0xB33FC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xB34038", Offset = "0xB34038", VA = "0xB34038")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xB342A8", Offset = "0xB342A8", VA = "0xB342A8")]
	public RFX4_ParticleCollisionGameObject()
	{
	}
}
[Token(Token = "0x200020D")]
[ExecuteInEditMode]
public class RFX4_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StopDistance;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xB34594", Offset = "0xB34594", VA = "0xB34594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xB34600", Offset = "0xB34600", VA = "0xB34600")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xB349E4", Offset = "0xB349E4", VA = "0xB349E4")]
	public RFX4_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x200020E")]
public class RFX4_PhysXSetImpulse : MonoBehaviour
{
	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Force;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ForceMode ForceMode;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rig;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform t;

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xB36650", Offset = "0xB36650", VA = "0xB36650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xB366B8", Offset = "0xB366B8", VA = "0xB366B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xB367C4", Offset = "0xB367C4", VA = "0xB367C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xB36884", Offset = "0xB36884", VA = "0xB36884")]
	public RFX4_PhysXSetImpulse()
	{
	}
}
[Token(Token = "0x200020F")]
public class RFX4_PhysicsMotion : MonoBehaviour
{
	[Token(Token = "0x200061C")]
	public class RFX4_CollisionInfo : EventArgs
	{
		[Token(Token = "0x4002BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 HitPoint;

		[Token(Token = "0x4002BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider HitCollider;

		[Token(Token = "0x4002BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject HitGameObject;

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0xB37A88", Offset = "0xB37A88", VA = "0xB37A88")]
		public RFX4_CollisionInfo()
		{
		}
	}

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UseCollisionDetect;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MaxDistnace;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Mass;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RandomSpeedOffset;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float AirDrag;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseGravity;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ForceMode ForceMode;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 AddRealtimeForce;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float MinSpeed;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ColliderRadius;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool FreezeRotation;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool UseTargetPositionAfterCollision;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject EffectOnCollision;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool CollisionEffectInWorldSpace;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool LookAtNormal;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float CollisionEffectDestroyAfter;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] DeactivateObjectsAfterCollision;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rigidbody rigid;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SphereCollider collid;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ContactPoint lastContactPoint;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Collider lastCollider;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 offsetColliderPoint;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool isCollided;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject targetAnchor;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isInitializedForce;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float currentSpeedOffset;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RFX4_EffectSettings effectSettings;

	[Token(Token = "0x14000035")]
	public event EventHandler<RFX4_CollisionInfo> CollisionEnter
	{
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xB2F7F0", Offset = "0xB2F7F0", VA = "0xB2F7F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F4DC", Offset = "0x86F4DC")]
		add
		{
		}
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xB36F7C", Offset = "0xB36F7C", VA = "0xB36F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F4EC", Offset = "0x86F4EC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xB37020", Offset = "0xB37020", VA = "0xB37020")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xB371B4", Offset = "0xB371B4", VA = "0xB371B4")]
	private void InitializeRigid()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xB37240", Offset = "0xB37240", VA = "0xB37240")]
	private void InitializeForce()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xB373E0", Offset = "0xB373E0", VA = "0xB373E0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xB37AF0", Offset = "0xB37AF0", VA = "0xB37AF0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xB37EEC", Offset = "0xB37EEC", VA = "0xB37EEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xB37DDC", Offset = "0xB37DDC", VA = "0xB37DDC")]
	private void RemoveRigidbody()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xB37FA8", Offset = "0xB37FA8", VA = "0xB37FA8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xB3814C", Offset = "0xB3814C", VA = "0xB3814C")]
	public RFX4_PhysicsMotion()
	{
	}
}
[Token(Token = "0x2000210")]
public class RFX4_RaycastCollision : MonoBehaviour
{
	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RaycastDistance;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] Effects;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Offset;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float EnableTimeDelay;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DestroyTime;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool UsePivotPosition;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseNormalRotation;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool IsWorldSpace;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool RealTimeUpdateRaycast;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool DestroyAfterDisabling;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float HUE;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<GameObject> CollidedInstances;

	[Token(Token = "0x4000EC6")]
	private const string particlesAdditionalName = "Distance";

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem[] distanceParticles;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canUpdate;

	[Token(Token = "0x14000036")]
	public event EventHandler<RFX4_PhysicsMotion.RFX4_CollisionInfo> CollisionEnter
	{
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xB2F894", Offset = "0xB2F894", VA = "0xB2F894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F4FC", Offset = "0x86F4FC")]
		add
		{
		}
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xB38218", Offset = "0xB38218", VA = "0xB38218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F50C", Offset = "0x86F50C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xB382BC", Offset = "0xB382BC", VA = "0xB382BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xB38330", Offset = "0xB38330", VA = "0xB38330")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xB38C40", Offset = "0xB38C40", VA = "0xB38C40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xB38D60", Offset = "0xB38D60", VA = "0xB38D60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xB383C8", Offset = "0xB383C8", VA = "0xB383C8")]
	private void UpdateRaycast()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xB38D70", Offset = "0xB38D70", VA = "0xB38D70")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xB38ED0", Offset = "0xB38ED0", VA = "0xB38ED0")]
	public RFX4_RaycastCollision()
	{
	}
}
[Token(Token = "0x2000211")]
public class RFX4_ReplaceModelOnCollision : MonoBehaviour
{
	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PhysicsObjects;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isCollided;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform t;

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xB3908C", Offset = "0xB3908C", VA = "0xB3908C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xB39198", Offset = "0xB39198", VA = "0xB39198")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xB3928C", Offset = "0xB3928C", VA = "0xB3928C")]
	public RFX4_ReplaceModelOnCollision()
	{
	}
}
[Token(Token = "0x2000212")]
public class RFX4_RotateAround : MonoBehaviour
{
	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Offset;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 RotateVector;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float LifeTime;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform t;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentTime;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion rotation;

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xB39294", Offset = "0xB39294", VA = "0xB39294")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xB392D4", Offset = "0xB392D4", VA = "0xB392D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xB39374", Offset = "0xB39374", VA = "0xB39374")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xB39468", Offset = "0xB39468", VA = "0xB39468")]
	public RFX4_RotateAround()
	{
	}
}
[Token(Token = "0x2000213")]
public class RFX4_StartDelay : MonoBehaviour
{
	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ActivatedGameObject;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Delay;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currentTime;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isEnabled;

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xB39F38", Offset = "0xB39F38", VA = "0xB39F38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xB39F74", Offset = "0xB39F74", VA = "0xB39F74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xB39FEC", Offset = "0xB39FEC", VA = "0xB39FEC")]
	public RFX4_StartDelay()
	{
	}
}
[Token(Token = "0x2000214")]
public enum RFX4_TextureShaderProperties
{
	[Token(Token = "0x4000ED8")]
	_MainTex,
	[Token(Token = "0x4000ED9")]
	_DistortTex,
	[Token(Token = "0x4000EDA")]
	_Mask,
	[Token(Token = "0x4000EDB")]
	_Cutout,
	[Token(Token = "0x4000EDC")]
	_CutoutTex,
	[Token(Token = "0x4000EDD")]
	_Bump,
	[Token(Token = "0x4000EDE")]
	_BumpTex,
	[Token(Token = "0x4000EDF")]
	_EmissionTex
}
[Token(Token = "0x2000215")]
public class RFX4_TornadoParticles : MonoBehaviour
{
	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material TornadoMaterial;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] particleArray;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem particleSys;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light myLight;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector4 _twistScale;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int materialID;

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xB39FFC", Offset = "0xB39FFC", VA = "0xB39FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xB3A1A4", Offset = "0xB3A1A4", VA = "0xB3A1A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xB3A4E0", Offset = "0xB3A4E0", VA = "0xB3A4E0")]
	public RFX4_TornadoParticles()
	{
	}
}
[Token(Token = "0x2000216")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859E94", Offset = "0x859E94")]
public class RFX4_TrailRenderer : MonoBehaviour
{
	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float VertexLifeTime;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TrailLifeTime;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8622F8", Offset = "0x8622F8")]
	public float MinVertexDistance;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Gravity;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 Force;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float InheritVelocity;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Drag;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x862314", Offset = "0x862314")]
	public float Frequency;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x862330", Offset = "0x862330")]
	public float OffsetSpeed;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool RandomTurbulenceOffset;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86234C", Offset = "0x86234C")]
	public float Amplitude;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve VelocityByDistance;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float AproximatedFlyDistance;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool SmoothCurves;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> positions;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<float> currentTimes;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector3> velocities;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float currentLifeTime;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform t;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 prevPosition;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 startPosition;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int curveCount;

	[Token(Token = "0x4000EFF")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x4000F00")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x4000F01")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float currentVelocity;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float turbulenceRandomOffset;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isInitialized;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xB3A4F0", Offset = "0xB3A4F0", VA = "0xB3A4F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xB3A6F0", Offset = "0xB3A6F0", VA = "0xB3A6F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xB3A518", Offset = "0xB3A518", VA = "0xB3A518")]
	private void Init()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xB3A700", Offset = "0xB3A700", VA = "0xB3A700")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xB3B540", Offset = "0xB3B540", VA = "0xB3B540")]
	private int GetLastDeletedIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xB3A844", Offset = "0xB3A844", VA = "0xB3A844")]
	private void UpdatePositionsCount()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xB3BD88", Offset = "0xB3BD88", VA = "0xB3BD88")]
	private void AddInterpolatedPositions(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xB3B64C", Offset = "0xB3B64C", VA = "0xB3B64C")]
	private void RemovePositionsBeforeIndex(int lastDeletedIndex)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xB3AA28", Offset = "0xB3AA28", VA = "0xB3AA28")]
	private void UpdateForce()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xB3B004", Offset = "0xB3B004", VA = "0xB3B004")]
	private void UpdateImpulse()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xB3B224", Offset = "0xB3B224", VA = "0xB3B224")]
	private void UpdateVelocity()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xB3B75C", Offset = "0xB3B75C", VA = "0xB3B75C")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xB3BCA0", Offset = "0xB3BCA0", VA = "0xB3BCA0")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xB3BF9C", Offset = "0xB3BF9C", VA = "0xB3BF9C")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xB3C250", Offset = "0xB3C250", VA = "0xB3C250")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xB3C0BC", Offset = "0xB3C0BC", VA = "0xB3C0BC")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xB3C524", Offset = "0xB3C524", VA = "0xB3C524")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xB3C6EC", Offset = "0xB3C6EC", VA = "0xB3C6EC")]
	public RFX4_TrailRenderer()
	{
	}
}
[Token(Token = "0x2000217")]
[ExecuteInEditMode]
public class RFX4_UVAnimation : MonoBehaviour
{
	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TilesX;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int TilesY;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x862378", Offset = "0x862378")]
	public int FPS;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int StartFrameOffset;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool IsReverse;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool IsInterpolateFrames;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RFX4_TextureShaderProperties[] TextureNames;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int count;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer currentRenderer;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Projector projector;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float animationStartTime;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool canUpdate;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previousIndex;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int totalFrames;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float currentInterpolatedTime;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentIndex;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 size;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isInitialized;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float prevRealTime;

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xFCF7D4", Offset = "0xFCF7D4", VA = "0xFCF7D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xFCFA94", Offset = "0xFCFA94", VA = "0xFCFA94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xFCFABC", Offset = "0xFCFABC", VA = "0xFCFABC")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xFCFB3C", Offset = "0xFCFB3C", VA = "0xFCFB3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xFCF7E4", Offset = "0xFCF7E4", VA = "0xFCF7E4")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xFCFAF4", Offset = "0xFCFAF4", VA = "0xFCFAF4")]
	private void ManualUpdate()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xFCFB74", Offset = "0xFCFB74", VA = "0xFCFB74")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xFCFC58", Offset = "0xFCFC58", VA = "0xFCFC58")]
	private void SetSpriteAnimation()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xFD0050", Offset = "0xFD0050", VA = "0xFD0050")]
	public float DeltaTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xFCFEB8", Offset = "0xFCFEB8", VA = "0xFCFEB8")]
	private void SetSpriteAnimationIterpolated()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xFD00B8", Offset = "0xFD00B8", VA = "0xFD00B8")]
	public RFX4_UVAnimation()
	{
	}
}
[Token(Token = "0x2000218")]
public class RFX4_UVScroll : MonoBehaviour
{
	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 UvScrollMultiplier;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RFX4_TextureShaderProperties TextureName;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 uvOffset;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xFD0134", Offset = "0xFD0134", VA = "0xFD0134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xFD02F8", Offset = "0xFD02F8", VA = "0xFD02F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xFD0478", Offset = "0xFD0478", VA = "0xFD0478")]
	public RFX4_UVScroll()
	{
	}
}
[Token(Token = "0x2000219")]
public class RFX4_MobileDistortion : MonoBehaviour
{
	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommandBuffer buf;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cam;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool bufferIsAdded;

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xB334E0", Offset = "0xB334E0", VA = "0xB334E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xB3353C", Offset = "0xB3353C", VA = "0xB3353C")]
	private void CreateBuffer()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xB33728", Offset = "0xB33728", VA = "0xB33728")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xB3376C", Offset = "0xB3376C", VA = "0xB3376C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xB3372C", Offset = "0xB3372C", VA = "0xB3372C")]
	private void AddBuffer()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xB33770", Offset = "0xB33770", VA = "0xB33770")]
	private void RemoveBuffer()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xB337AC", Offset = "0xB337AC", VA = "0xB337AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xB337CC", Offset = "0xB337CC", VA = "0xB337CC")]
	private bool IsSupportedHdr()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xB337F0", Offset = "0xB337F0", VA = "0xB337F0")]
	public RFX4_MobileDistortion()
	{
	}
}
[Token(Token = "0x200021A")]
public class RFX4_PerPlatformSettings : MonoBehaviour
{
	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DisableOnMobiles;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RenderMobileDistortion;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x862394", Offset = "0x862394")]
	public float ParticleBudgetForMobiles;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isMobile;

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xB35FA0", Offset = "0xB35FA0", VA = "0xB35FA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xB35FA4", Offset = "0xB35FA4", VA = "0xB35FA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xB363F4", Offset = "0xB363F4", VA = "0xB363F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xB36518", Offset = "0xB36518", VA = "0xB36518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xB36514", Offset = "0xB36514", VA = "0xB36514")]
	private void LWRP_Rendering()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xB3651C", Offset = "0xB3651C", VA = "0xB3651C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xB36018", Offset = "0xB36018", VA = "0xB36018")]
	private bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xB36020", Offset = "0xB36020", VA = "0xB36020")]
	private void ChangeParticlesBudget(float particlesMul)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xB36640", Offset = "0xB36640", VA = "0xB36640")]
	public RFX4_PerPlatformSettings()
	{
	}
}
[Token(Token = "0x200021B")]
public class RFX4_MobileBloom : MonoBehaviour
{
	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8623B0", Offset = "0x8623B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8623B0", Offset = "0x8623B0")]
	public float RenderTextureResolutoinFactor;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x862408", Offset = "0x862408")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x862408", Offset = "0x862408")]
	public float Intensity;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float Threshold;

	[Token(Token = "0x4000F29")]
	private const string shaderName = "Hidden/KriptoFX/PostEffects/RFX4_Bloom";

	[Token(Token = "0x4000F2A")]
	private const int kMaxIterations = 16;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly RenderTexture[] m_blurBuffer1;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly RenderTexture[] m_blurBuffer2;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture Source;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _bloomMaterial;

	[Token(Token = "0x17000117")]
	private Material bloomMaterial
	{
		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xB32AFC", Offset = "0xB32AFC", VA = "0xB32AFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xB32C28", Offset = "0xB32C28", VA = "0xB32C28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xB32C2C", Offset = "0xB32C2C", VA = "0xB32C2C")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xB32CE8", Offset = "0xB32CE8", VA = "0xB32CE8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xB32CB4", Offset = "0xB32CB4", VA = "0xB32CB4")]
	private RenderTextureFormat SupportedHdrFormat()
	{
		return default(RenderTextureFormat);
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xB32D38", Offset = "0xB32D38", VA = "0xB32D38")]
	private void UpdateBloom(RenderTexture source, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xB33410", Offset = "0xB33410", VA = "0xB33410")]
	public RFX4_MobileBloom()
	{
	}
}
[Token(Token = "0x200021C")]
public class RFX4_Debug : MonoBehaviour
{
	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xB2F670", Offset = "0xB2F670", VA = "0xB2F670")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xB2F938", Offset = "0xB2F938", VA = "0xB2F938")]
	private void CollisionEnter(object sender, RFX4_PhysicsMotion.RFX4_CollisionInfo e)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xB2FA10", Offset = "0xB2FA10", VA = "0xB2FA10")]
	public RFX4_Debug()
	{
	}
}
[Token(Token = "0x200021D")]
public class RFX4_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] ReactivationTimes;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light Sun;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light[] NightLights;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture HUETexture;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isDay;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentNomber;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentInstance;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GUIStyle guiStyleHeader;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float dpiScale;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float colorHUE;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startSunIntensity;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion startSunRotation;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color startAmbientLight;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float startAmbientIntencity;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float startReflectionIntencity;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private LightShadows startLightShadows;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isButtonPressed;

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xB3000C", Offset = "0xB3000C", VA = "0xB3000C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xB3059C", Offset = "0xB3059C", VA = "0xB3059C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xB30300", Offset = "0xB30300", VA = "0xB30300")]
	private void ChangeDayNight()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xB30138", Offset = "0xB30138", VA = "0xB30138")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xB30920", Offset = "0xB30920", VA = "0xB30920")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xB30A34", Offset = "0xB30A34", VA = "0xB30A34")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xB30A78", Offset = "0xB30A78", VA = "0xB30A78")]
	public RFX4_DemoGUI()
	{
	}
}
[Token(Token = "0x200021E")]
public class RFX4_FPS : MonoBehaviour
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly GUIStyle guiStyleHeader;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeleft;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float fps;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xB32528", Offset = "0xB32528", VA = "0xB32528")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xB325AC", Offset = "0xB325AC", VA = "0xB325AC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xB32694", Offset = "0xB32694", VA = "0xB32694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xB326F4", Offset = "0xB326F4", VA = "0xB326F4")]
	public RFX4_FPS()
	{
	}
}
[Token(Token = "0x200021F")]
public class RFX4_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xB33800", Offset = "0xB33800", VA = "0xB33800")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xB33838", Offset = "0xB33838", VA = "0xB33838")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xB33D48", Offset = "0xB33D48", VA = "0xB33D48")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xB33DF8", Offset = "0xB33DF8", VA = "0xB33DF8")]
	public RFX4_MouseOrbit()
	{
	}
}
[Token(Token = "0x2000220")]
public class RFX4_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xB38F60", Offset = "0xB38F60", VA = "0xB38F60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xB38FD4", Offset = "0xB38FD4", VA = "0xB38FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xB39084", Offset = "0xB39084", VA = "0xB39084")]
	public RFX4_RealtimeReflection()
	{
	}
}
[Token(Token = "0x2000221")]
public class LookCamera : MonoBehaviour
{
	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedNormal;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedFast;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mouseSensitivityX;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseSensitivityY;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotY;

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xA1516C", Offset = "0xA1516C", VA = "0xA1516C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xA1522C", Offset = "0xA1522C", VA = "0xA1522C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xA153E8", Offset = "0xA153E8", VA = "0xA153E8")]
	public LookCamera()
	{
	}
}
[Token(Token = "0x2000222")]
public class DungeonCharacterAnimator : MonoBehaviour
{
	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _initialRandomTime;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _randomSpeed;

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x9F4B20", Offset = "0x9F4B20", VA = "0x9F4B20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x9F4B68", Offset = "0x9F4B68", VA = "0x9F4B68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x9F4D0C", Offset = "0x9F4D0C", VA = "0x9F4D0C")]
	public DungeonCharacterAnimator()
	{
	}
}
[Token(Token = "0x2000223")]
public class FogOfWarAlphaPositioner : MonoBehaviour
{
	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform dungeonCharacter;

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xA035C4", Offset = "0xA035C4", VA = "0xA035C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xA035C8", Offset = "0xA035C8", VA = "0xA035C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xA0367C", Offset = "0xA0367C", VA = "0xA0367C")]
	public FogOfWarAlphaPositioner()
	{
	}
}
[Token(Token = "0x2000224")]
public class LogoSpecularityAnimator : MonoBehaviour
{
	[Token(Token = "0x200061D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D458", Offset = "0x85D458")]
	private sealed class <AnimateSpecularity>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LogoSpecularityAnimator <>4__this;

		[Token(Token = "0x170003DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0xA14FA0", Offset = "0xA14FA0", VA = "0xA14FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0xA15008", Offset = "0xA15008", VA = "0xA15008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0xA14D44", Offset = "0xA14D44", VA = "0xA14D44")]
		[DebuggerHidden]
		public <AnimateSpecularity>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0xA14D78", Offset = "0xA14D78", VA = "0xA14D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0xA14D7C", Offset = "0xA14D7C", VA = "0xA14D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0xA14FA8", Offset = "0xA14FA8", VA = "0xA14FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startX;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float endX;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xA14CA4", Offset = "0xA14CA4", VA = "0xA14CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xA14D40", Offset = "0xA14D40", VA = "0xA14D40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xA14CD0", Offset = "0xA14CD0", VA = "0xA14CD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86F51C", Offset = "0x86F51C")]
	private IEnumerator AnimateSpecularity()
	{
		return null;
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xA14D70", Offset = "0xA14D70", VA = "0xA14D70")]
	public LogoSpecularityAnimator()
	{
	}
}
[Token(Token = "0x2000225")]
public class NightAndDayMaskAnimator : MonoBehaviour
{
	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxScale;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xABA22C", Offset = "0xABA22C", VA = "0xABA22C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xABA294", Offset = "0xABA294", VA = "0xABA294")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xABA38C", Offset = "0xABA38C", VA = "0xABA38C")]
	public NightAndDayMaskAnimator()
	{
	}
}
[Token(Token = "0x2000226")]
public class ShipMover : MonoBehaviour
{
	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _primaryPosition;

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xB02188", Offset = "0xB02188", VA = "0xB02188")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xB021C4", Offset = "0xB021C4", VA = "0xB021C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xB02340", Offset = "0xB02340", VA = "0xB02340")]
	public ShipMover()
	{
	}
}
[Token(Token = "0x2000227")]
public class UVAnimator : MonoBehaviour
{
	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float USpeed;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VSpeed;

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xA9D6F0", Offset = "0xA9D6F0", VA = "0xA9D6F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xA9D6F4", Offset = "0xA9D6F4", VA = "0xA9D6F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xA9D840", Offset = "0xA9D840", VA = "0xA9D840")]
	public UVAnimator()
	{
	}
}
[Token(Token = "0x2000228")]
[ExecuteInEditMode]
public class UIMaterialModifier : MonoBehaviour, IMaterialModifier
{
	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4 maskMatrix;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 tilingAndOffset;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool screenSpaceEnabled;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Texture alphaTexture;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool maskingEnabled;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool isTextMaterial;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool clampHorizontal;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool clampVertical;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float clampingBorder;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool useAlphaChannel;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[HideInInspector]
	private Material modifiedMaterial;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material lastBaseMaterial;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[HideInInspector]
	private int instanceID;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Image image;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Text text;

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xA9D09C", Offset = "0xA9D09C", VA = "0xA9D09C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xA9D144", Offset = "0xA9D144", VA = "0xA9D144")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xA9D1B0", Offset = "0xA9D1B0", VA = "0xA9D1B0")]
	public void ApplyMaterialProperties([Optional] Material target)
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xA9D4AC", Offset = "0xA9D4AC", VA = "0xA9D4AC", Slot = "4")]
	public Material GetModifiedMaterial(Material baseMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xA9D5EC", Offset = "0xA9D5EC", VA = "0xA9D5EC")]
	public void UpdateAlphaTex(Texture alphaTexture)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xA9D674", Offset = "0xA9D674", VA = "0xA9D674")]
	public void SetMaskToMaskee(Matrix4x4 maskMatrix, Vector4 tilingAndOffset, float clampingBorder, bool maskingEnabled, bool screenSpaceEnabled, bool clampHor, bool clampVert, bool useAlphaChannel, bool isTextMaterial)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xA9D6CC", Offset = "0xA9D6CC", VA = "0xA9D6CC")]
	public UIMaterialModifier()
	{
	}
}
[Token(Token = "0x2000229")]
public class WobblePath : MonoBehaviour
{
	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amplitude;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xC77E04", Offset = "0xC77E04", VA = "0xC77E04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xC77F50", Offset = "0xC77F50", VA = "0xC77F50")]
	public WobblePath()
	{
	}
}
[Token(Token = "0x200022A")]
public class OldGUIExamplesCS : MonoBehaviour
{
	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D grumpy;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D beauty;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float w;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float h;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTRect buttonRect1;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTRect buttonRect2;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LTRect buttonRect3;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LTRect buttonRect4;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LTRect grumpyRect;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LTRect beautyTileRect;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xEE56A8", Offset = "0xEE56A8", VA = "0xEE56A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xEE59C8", Offset = "0xEE59C8", VA = "0xEE59C8")]
	public void catMoved()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xEE5A34", Offset = "0xEE5A34", VA = "0xEE5A34")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xEE64D4", Offset = "0xEE64D4", VA = "0xEE64D4")]
	public OldGUIExamplesCS()
	{
	}
}
[Token(Token = "0x200022B")]
public class TestingPunch : MonoBehaviour
{
	[Token(Token = "0x200061E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D468", Offset = "0x85D468")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Light lt;

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0xADED3C", Offset = "0xADED3C", VA = "0xADED3C")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0xADF864", Offset = "0xADF864", VA = "0xADF864")]
		internal void <Update>b__2(float val)
		{
		}
	}

	[Token(Token = "0x200061F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D478", Offset = "0x85D478")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x4002BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float start;

		[Token(Token = "0x4002BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestingPunch <>4__this;

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0xADEE88", Offset = "0xADEE88", VA = "0xADEE88")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0xADF880", Offset = "0xADF880", VA = "0xADF880")]
		internal void <Update>b__6()
		{
		}
	}

	[Token(Token = "0x2000620")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D488", Offset = "0x85D488")]
	private sealed class <>c__DisplayClass4_2
	{
		[Token(Token = "0x4002BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject l;

		[Token(Token = "0x4002BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestingPunch <>4__this;

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0xADEE90", Offset = "0xADEE90", VA = "0xADEE90")]
		public <>c__DisplayClass4_2()
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0xADFB54", Offset = "0xADFB54", VA = "0xADFB54")]
		internal void <Update>b__8(Vector2 val)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000621")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D498", Offset = "0x85D498")]
	private sealed class <>c
	{
		[Token(Token = "0x4002BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__4_1;

		[Token(Token = "0x4002BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<float> <>9__4_4;

		[Token(Token = "0x4002BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__4_5;

		[Token(Token = "0x4002C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<float> <>9__5_0;

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0xADF6C8", Offset = "0xADF6C8", VA = "0xADF6C8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0xADF6D0", Offset = "0xADF6D0", VA = "0xADF6D0")]
		internal void <Update>b__4_1()
		{
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0xADF73C", Offset = "0xADF73C", VA = "0xADF73C")]
		internal void <Update>b__4_4(float v)
		{
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0xADF740", Offset = "0xADF740", VA = "0xADF740")]
		internal void <Update>b__4_5()
		{
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0xADF7AC", Offset = "0xADF7AC", VA = "0xADF7AC")]
		internal void <tweenStatically>b__5_0(float val)
		{
		}
	}

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve exportCurve;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float overShootValue;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LTDescr descr;

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xADD9C4", Offset = "0xADD9C4", VA = "0xADD9C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xADDD4C", Offset = "0xADDD4C", VA = "0xADDD4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xADED44", Offset = "0xADED44", VA = "0xADED44")]
	private static void tweenStatically(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xADEE98", Offset = "0xADEE98", VA = "0xADEE98")]
	private void enterMiniGameStart(object val)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xADEFD0", Offset = "0xADEFD0", VA = "0xADEFD0")]
	private void updateColor(Color c)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xADF07C", Offset = "0xADF07C", VA = "0xADF07C")]
	private void delayedMethod(object myVal)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xADF230", Offset = "0xADF230", VA = "0xADF230")]
	private void destroyOnComp(object p)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xADDA58", Offset = "0xADDA58", VA = "0xADDA58")]
	private string curveToString(AnimationCurve curve)
	{
		return null;
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xADF2C4", Offset = "0xADF2C4", VA = "0xADF2C4")]
	public TestingPunch()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xADF2D4", Offset = "0xADF2D4", VA = "0xADF2D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F580", Offset = "0x86F580")]
	private void <Update>b__4_0()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xADF404", Offset = "0xADF404", VA = "0xADF404")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F590", Offset = "0x86F590")]
	private void <Update>b__4_3()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xADF5BC", Offset = "0xADF5BC", VA = "0xADF5BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F5A0", Offset = "0x86F5A0")]
	private void <Update>b__4_7(Vector2 val)
	{
	}
}
[Token(Token = "0x200022C")]
public class TestingRigidbodyCS : MonoBehaviour
{
	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject ball1;

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xADFC80", Offset = "0xADFC80", VA = "0xADFC80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xADFDD0", Offset = "0xADFDD0", VA = "0xADFDD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xADFDD4", Offset = "0xADFDD4", VA = "0xADFDD4")]
	public TestingRigidbodyCS()
	{
	}
}
[Token(Token = "0x200022D")]
public class Following : MonoBehaviour
{
	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform planet;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform followArrow;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform dude1;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform dude2;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform dude3;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform dude4;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform dude5;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform dude1Title;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform dude2Title;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform dude3Title;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform dude4Title;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform dude5Title;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color dude1ColorVelocity;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 velocityPos;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float fromY;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float velocityY;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 fromVec3;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 velocityVec3;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Color fromColor;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Color velocityColor;

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xA03DC4", Offset = "0xA03DC4", VA = "0xA03DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xA04320", Offset = "0xA04320", VA = "0xA04320")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xA046AC", Offset = "0xA046AC", VA = "0xA046AC")]
	private void moveArrow()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xA04820", Offset = "0xA04820", VA = "0xA04820")]
	public Following()
	{
	}
}
[Token(Token = "0x200022E")]
public class GeneralAdvancedTechniques : MonoBehaviour
{
	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatarRecursive;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject avatar2dRecursive;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform wingPersonPanel;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform textField;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject avatarMove;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] movePts;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] avatarSpeed;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] avatarSpeed2;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] circleSm;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] circleLrg;

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xA07D7C", Offset = "0xA07D7C", VA = "0xA07D7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xA08150", Offset = "0xA08150", VA = "0xA08150")]
	public GeneralAdvancedTechniques()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xA09284", Offset = "0xA09284", VA = "0xA09284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F5B0", Offset = "0x86F5B0")]
	private void <Start>b__10_0(float val)
	{
	}
}
[Token(Token = "0x200022F")]
public class GeneralBasic : MonoBehaviour
{
	[Token(Token = "0x2000622")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D4A8", Offset = "0x85D4A8")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4002C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject rotator;

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0xA09EF4", Offset = "0xA09EF4", VA = "0xA09EF4")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0xA09EFC", Offset = "0xA09EFC", VA = "0xA09EFC")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0xA09FC4", Offset = "0xA09FC4", VA = "0xA09FC4")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabAvatar;

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xA0947C", Offset = "0xA0947C", VA = "0xA0947C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xA09804", Offset = "0xA09804", VA = "0xA09804")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xA098E0", Offset = "0xA098E0", VA = "0xA098E0")]
	public GeneralBasic()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xA098E8", Offset = "0xA098E8", VA = "0xA098E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F5C0", Offset = "0x86F5C0")]
	private void <advancedExamples>b__2_0()
	{
	}
}
[Token(Token = "0x2000230")]
public class GeneralBasics2d : MonoBehaviour
{
	[Token(Token = "0x2000623")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D4B8", Offset = "0x85D4B8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject rotator;

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0xA0AE10", Offset = "0xA0AE10", VA = "0xA0AE10")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0xA0AE18", Offset = "0xA0AE18", VA = "0xA0AE18")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0xA0AEE0", Offset = "0xA0AEE0", VA = "0xA0AEE0")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D dudeTexture;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabParticles;

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xA0A030", Offset = "0xA0A030", VA = "0xA0A030")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xA0A460", Offset = "0xA0A460", VA = "0xA0A460")]
	private GameObject createSpriteDude(string name, Vector3 pos, bool hasParticles = true)
	{
		return null;
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xA0A744", Offset = "0xA0A744", VA = "0xA0A744")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xA0A820", Offset = "0xA0A820", VA = "0xA0A820")]
	public GeneralBasics2d()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xA0A828", Offset = "0xA0A828", VA = "0xA0A828")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F5D0", Offset = "0x86F5D0")]
	private void <advancedExamples>b__4_0()
	{
	}
}
[Token(Token = "0x2000231")]
public class GeneralCameraShake : MonoBehaviour
{
	[Token(Token = "0x2000624")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D4C8", Offset = "0x85D4C8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GeneralCameraShake <>4__this;

		[Token(Token = "0x4002C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float height;

		[Token(Token = "0x4002C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0xA0B488", Offset = "0xA0B488", VA = "0xA0B488")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0xA0B4A0", Offset = "0xA0B4A0", VA = "0xA0B4A0")]
		internal void <bigGuyJump>b__0()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0xA0B58C", Offset = "0xA0B58C", VA = "0xA0B58C")]
		internal void <bigGuyJump>b__1()
		{
		}
	}

	[Token(Token = "0x2000625")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D4D8", Offset = "0x85D4D8")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x4002C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr shakeTween;

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0xA0BA28", Offset = "0xA0BA28", VA = "0xA0BA28")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0xA0BA30", Offset = "0xA0BA30", VA = "0xA0BA30")]
		internal void <bigGuyJump>b__2(float val)
		{
		}
	}

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject avatarBig;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float jumpIter;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip boomAudioClip;

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xA0AF4C", Offset = "0xA0AF4C", VA = "0xA0AF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xA0B31C", Offset = "0xA0B31C", VA = "0xA0B31C")]
	private void bigGuyJump()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xA0B490", Offset = "0xA0B490", VA = "0xA0B490")]
	public GeneralCameraShake()
	{
	}
}
[Token(Token = "0x2000232")]
public class GeneralEasingTypes : MonoBehaviour
{
	[Token(Token = "0x2000626")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D4E8", Offset = "0x85D4E8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform obj1;

		[Token(Token = "0x4002C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float obj1val;

		[Token(Token = "0x4002C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GeneralEasingTypes <>4__this;

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0xA0BE3C", Offset = "0xA0BE3C", VA = "0xA0BE3C")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0xA0C6F0", Offset = "0xA0C6F0", VA = "0xA0C6F0")]
		internal void <demoEaseTypes>b__0(float val)
		{
		}
	}

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lineDrawScale;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] easeTypes;

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xA0BAC4", Offset = "0xA0BAC4", VA = "0xA0BAC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xA0BAC8", Offset = "0xA0BAC8", VA = "0xA0BAC8")]
	private void demoEaseTypes()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xA0BE44", Offset = "0xA0BE44", VA = "0xA0BE44")]
	private void resetLines()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xA0BF40", Offset = "0xA0BF40", VA = "0xA0BF40")]
	public GeneralEasingTypes()
	{
	}
}
[Token(Token = "0x2000233")]
public class GeneralEventsListeners : MonoBehaviour
{
	[Token(Token = "0x2000627")]
	public enum MyEvents
	{
		[Token(Token = "0x4002C0B")]
		CHANGE_COLOR,
		[Token(Token = "0x4002C0C")]
		JUMP,
		[Token(Token = "0x4002C0D")]
		LENGTH
	}

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 towardsRotation;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float turnForLength;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float turnForIter;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color fromColor;

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xB808AC", Offset = "0xB808AC", VA = "0xB808AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xB80960", Offset = "0xB80960", VA = "0xB80960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xB80A74", Offset = "0xB80A74", VA = "0xB80A74")]
	private void jumpUp(LTEvent e)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xB80B18", Offset = "0xB80B18", VA = "0xB80B18")]
	private void changeColor(LTEvent e)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xB80DDC", Offset = "0xB80DDC", VA = "0xB80DDC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xB80E68", Offset = "0xB80E68", VA = "0xB80E68")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xB80EC4", Offset = "0xB80EC4", VA = "0xB80EC4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xB810A8", Offset = "0xB810A8", VA = "0xB810A8")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xB8116C", Offset = "0xB8116C", VA = "0xB8116C")]
	public GeneralEventsListeners()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xB8117C", Offset = "0xB8117C", VA = "0xB8117C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F5E0", Offset = "0x86F5E0")]
	private void <changeColor>b__8_0(Color col)
	{
	}
}
[Token(Token = "0x2000234")]
public class GeneralSequencer : MonoBehaviour
{
	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject avatar1;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject star;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dustCloudPrefab;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speedScale;

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xB81218", Offset = "0xB81218", VA = "0xB81218")]
	public void Start()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xB815AC", Offset = "0xB815AC", VA = "0xB815AC")]
	public GeneralSequencer()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xB815BC", Offset = "0xB815BC", VA = "0xB815BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F5F0", Offset = "0x86F5F0")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x2000235")]
public class GeneralSimpleUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D4F8", Offset = "0x85D4F8")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__1_1;

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0xB82328", Offset = "0xB82328", VA = "0xB82328")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0xB82330", Offset = "0xB82330", VA = "0xB82330")]
		internal void <Start>b__1_1(float volume)
		{
		}
	}

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform button;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xB81934", Offset = "0xB81934", VA = "0xB81934")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xB82104", Offset = "0xB82104", VA = "0xB82104")]
	public GeneralSimpleUI()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xB8210C", Offset = "0xB8210C", VA = "0xB8210C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F600", Offset = "0x86F600")]
	private void <Start>b__1_0(Vector2 val)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xB82128", Offset = "0xB82128", VA = "0xB82128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F610", Offset = "0x86F610")]
	private void <Start>b__1_2(Vector3 val)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xB82180", Offset = "0xB82180", VA = "0xB82180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F620", Offset = "0x86F620")]
	private void <Start>b__1_3(Color val)
	{
	}
}
[Token(Token = "0x2000236")]
public class GeneralUISpace : MonoBehaviour
{
	[Token(Token = "0x2000629")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D508", Offset = "0x85D508")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4002C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GeneralUISpace <>4__this;

		[Token(Token = "0x4002C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string origText;

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0xB82CC4", Offset = "0xB82CC4", VA = "0xB82CC4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0xB82E24", Offset = "0xB82E24", VA = "0xB82E24")]
		internal void <Start>b__0(float val)
		{
		}
	}

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform mainWindow;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform mainParagraphText;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform mainTitleText;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform mainButton1;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform mainButton2;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform pauseRing1;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform pauseRing2;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform pauseWindow;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform chatWindow;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform chatRect;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite[] chatSprites;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform chatBar1;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform chatBar2;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text chatText;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RectTransform rawImageRect;

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xB823E8", Offset = "0xB823E8", VA = "0xB823E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xB82E1C", Offset = "0xB82E1C", VA = "0xB82E1C")]
	public GeneralUISpace()
	{
	}
}
[Token(Token = "0x2000237")]
public class LogoCinematic : MonoBehaviour
{
	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lean;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tween;

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xA1422C", Offset = "0xA1422C", VA = "0xA1422C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xA14230", Offset = "0xA14230", VA = "0xA14230")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xA145E8", Offset = "0xA145E8", VA = "0xA145E8")]
	private void playBoom()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xA14C9C", Offset = "0xA14C9C", VA = "0xA14C9C")]
	public LogoCinematic()
	{
	}
}
[Token(Token = "0x2000238")]
public class PathBezier2d : MonoBehaviour
{
	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTBezierPath visualizePath;

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xB4E494", Offset = "0xB4E494", VA = "0xB4E494")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xB4E66C", Offset = "0xB4E66C", VA = "0xB4E66C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xB4E6B4", Offset = "0xB4E6B4", VA = "0xB4E6B4")]
	public PathBezier2d()
	{
	}
}
[Token(Token = "0x2000239")]
public class ExampleSpline : MonoBehaviour
{
	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline spline;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject ltLogo;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject ltLogo2;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float iter;

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x9F7D20", Offset = "0x9F7D20", VA = "0x9F7D20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x9F80B8", Offset = "0x9F80B8", VA = "0x9F80B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x9F814C", Offset = "0x9F814C", VA = "0x9F814C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x9F8164", Offset = "0x9F8164", VA = "0x9F8164")]
	public ExampleSpline()
	{
	}
}
[Token(Token = "0x200023A")]
public class PathSpline2d : MonoBehaviour
{
	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cubes;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dude1;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dude2;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTSpline visualizePath;

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xB4E6BC", Offset = "0xB4E6BC", VA = "0xB4E6BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xB4E8EC", Offset = "0xB4E8EC", VA = "0xB4E8EC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xB4E934", Offset = "0xB4E934", VA = "0xB4E934")]
	public PathSpline2d()
	{
	}
}
[Token(Token = "0x200023B")]
public class PathSplineEndless : MonoBehaviour
{
	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] cubes;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int cubesIter;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] trees;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int treesIter;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float randomIterWidth;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LTSpline track;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> trackPts;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int zIter;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float carIter;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float carAdd;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int trackMaxItems;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int trackIter;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float pushTrackAhead;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomIter;

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xB4E93C", Offset = "0xB4E93C", VA = "0xB4E93C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xB4EDA4", Offset = "0xB4EDA4", VA = "0xB4EDA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xB4F3C0", Offset = "0xB4F3C0", VA = "0xB4F3C0")]
	private GameObject objectQueue(GameObject[] arr, ref int lastIter)
	{
		return null;
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xB4EA40", Offset = "0xB4EA40", VA = "0xB4EA40")]
	private void addRandomTrackPoint()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xB4ECC8", Offset = "0xB4ECC8", VA = "0xB4ECC8")]
	private void refreshSpline()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xB4EF9C", Offset = "0xB4EF9C", VA = "0xB4EF9C")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xB4F514", Offset = "0xB4F514", VA = "0xB4F514")]
	public PathSplineEndless()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xB4F59C", Offset = "0xB4F59C", VA = "0xB4F59C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F630", Offset = "0x86F630")]
	private void <Start>b__17_0(float val)
	{
	}
}
[Token(Token = "0x200023C")]
public class PathSplinePerformance : MonoBehaviour
{
	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject car;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject carInternal;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float circleLength;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float randomRange;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int trackNodes;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float carSpeed;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float tracerSpeed;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LTSpline track;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int trackIter;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float carAdd;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float trackPosition;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xB4F5A4", Offset = "0xB4F5A4", VA = "0xB4F5A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xB4F8AC", Offset = "0xB4F8AC", VA = "0xB4F8AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xB4FE30", Offset = "0xB4FE30", VA = "0xB4FE30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xB4FA0C", Offset = "0xB4FA0C", VA = "0xB4FA0C")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xB4FE6C", Offset = "0xB4FE6C", VA = "0xB4FE6C")]
	public PathSplinePerformance()
	{
	}
}
[Token(Token = "0x200023D")]
public class PathSplineTrack : MonoBehaviour
{
	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject car;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject carInternal;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] trackOnePoints;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LTSpline track;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int trackIter;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float trackPosition;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xB4FE9C", Offset = "0xB4FE9C", VA = "0xB4FE9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xB50108", Offset = "0xB50108", VA = "0xB50108")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xB506A4", Offset = "0xB506A4", VA = "0xB506A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xB50280", Offset = "0xB50280", VA = "0xB50280")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xB50748", Offset = "0xB50748", VA = "0xB50748")]
	public PathSplineTrack()
	{
	}
}
[Token(Token = "0x200023E")]
public class PathSplines : MonoBehaviour
{
	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trans;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTSpline cr;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject avatar1;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float iter;

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xB50758", Offset = "0xB50758", VA = "0xB50758")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xB50900", Offset = "0xB50900", VA = "0xB50900")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xB50A14", Offset = "0xB50A14", VA = "0xB50A14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xB50A68", Offset = "0xB50A68", VA = "0xB50A68")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xB50AC0", Offset = "0xB50AC0", VA = "0xB50AC0")]
	public PathSplines()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xB50AC8", Offset = "0xB50AC8", VA = "0xB50AC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F640", Offset = "0x86F640")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x200023F")]
public class TestingZLegacy : MonoBehaviour
{
	[Token(Token = "0x200062A")]
	public delegate void NextFunc();

	[Token(Token = "0x200062B")]
	public enum TimingType
	{
		[Token(Token = "0x4002C13")]
		SteadyNormalTime,
		[Token(Token = "0x4002C14")]
		IgnoreTimeScale,
		[Token(Token = "0x4002C15")]
		HalfTimeScale,
		[Token(Token = "0x4002C16")]
		VariableTimeScale,
		[Token(Token = "0x4002C17")]
		Length
	}

	[Serializable]
	[Token(Token = "0x200062C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D518", Offset = "0x85D518")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__20_0;

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0xAE2200", Offset = "0xAE2200", VA = "0xAE2200")]
		public <>c()
		{
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0xAE2208", Offset = "0xAE2208", VA = "0xAE2208")]
		internal void <cycleThroughExamples>b__20_0(float val)
		{
		}
	}

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt1;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pt2;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pt3;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pt4;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pt5;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIter;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] exampleFunctions;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useEstimatedTime;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject ltLogo;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimingType timingType;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 origin;

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xADFDDC", Offset = "0xADFDDC", VA = "0xADFDDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xADFDE0", Offset = "0xADFDE0", VA = "0xADFDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xADFEBC", Offset = "0xADFEBC", VA = "0xADFEBC")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xADFF34", Offset = "0xADFF34", VA = "0xADFF34")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xAE0080", Offset = "0xAE0080", VA = "0xAE0080")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xAE00EC", Offset = "0xAE00EC", VA = "0xAE00EC")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xAE0434", Offset = "0xAE0434", VA = "0xAE0434")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xAE065C", Offset = "0xAE065C", VA = "0xAE065C")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xAE0660", Offset = "0xAE0660", VA = "0xAE0660")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xAE06B4", Offset = "0xAE06B4", VA = "0xAE06B4")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xAE0848", Offset = "0xAE0848", VA = "0xAE0848")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xAE09D0", Offset = "0xAE09D0", VA = "0xAE09D0")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xAE0AC8", Offset = "0xAE0AC8", VA = "0xAE0AC8")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xAE0D1C", Offset = "0xAE0D1C", VA = "0xAE0D1C")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xAE0F90", Offset = "0xAE0F90", VA = "0xAE0F90")]
	public void moveExample()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xAE10B4", Offset = "0xAE10B4", VA = "0xAE10B4")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xAE12CC", Offset = "0xAE12CC", VA = "0xAE12CC")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xAE12D0", Offset = "0xAE12D0", VA = "0xAE12D0")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xAE13B8", Offset = "0xAE13B8", VA = "0xAE13B8")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xAE14D8", Offset = "0xAE14D8", VA = "0xAE14D8")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xAE1680", Offset = "0xAE1680", VA = "0xAE1680")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xAE16FC", Offset = "0xAE16FC", VA = "0xAE16FC")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xAE17DC", Offset = "0xAE17DC", VA = "0xAE17DC")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xAE18FC", Offset = "0xAE18FC", VA = "0xAE18FC")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xAE1A04", Offset = "0xAE1A04", VA = "0xAE1A04")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xAE1B74", Offset = "0xAE1B74", VA = "0xAE1B74")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xAE1C9C", Offset = "0xAE1C9C", VA = "0xAE1C9C")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xAE1D1C", Offset = "0xAE1D1C", VA = "0xAE1D1C")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xAE1D9C", Offset = "0xAE1D9C", VA = "0xAE1D9C")]
	public void punchTest()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xAE1E34", Offset = "0xAE1E34", VA = "0xAE1E34")]
	public TestingZLegacy()
	{
	}
}
[Token(Token = "0x2000240")]
public class TestingZLegacyExt : MonoBehaviour
{
	[Token(Token = "0x200062D")]
	public delegate void NextFunc();

	[Token(Token = "0x200062E")]
	public enum TimingType
	{
		[Token(Token = "0x4002C1B")]
		SteadyNormalTime,
		[Token(Token = "0x4002C1C")]
		IgnoreTimeScale,
		[Token(Token = "0x4002C1D")]
		HalfTimeScale,
		[Token(Token = "0x4002C1E")]
		VariableTimeScale,
		[Token(Token = "0x4002C1F")]
		Length
	}

	[Serializable]
	[Token(Token = "0x200062F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D528", Offset = "0x85D528")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__20_0;

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0xAE4550", Offset = "0xAE4550", VA = "0xAE4550")]
		public <>c()
		{
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0xAE4558", Offset = "0xAE4558", VA = "0xAE4558")]
		internal void <cycleThroughExamples>b__20_0(float val)
		{
		}
	}

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt1;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pt2;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform pt3;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pt4;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pt5;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIter;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string[] exampleFunctions;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useEstimatedTime;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform ltLogo;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TimingType timingType;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 origin;

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xAE2464", Offset = "0xAE2464", VA = "0xAE2464")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xAE2468", Offset = "0xAE2468", VA = "0xAE2468")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xAE2544", Offset = "0xAE2544", VA = "0xAE2544")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xAE25BC", Offset = "0xAE25BC", VA = "0xAE25BC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xAE2708", Offset = "0xAE2708", VA = "0xAE2708")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xAE2774", Offset = "0xAE2774", VA = "0xAE2774")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xAE2A70", Offset = "0xAE2A70", VA = "0xAE2A70")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xAE2C78", Offset = "0xAE2C78", VA = "0xAE2C78")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xAE2C7C", Offset = "0xAE2C7C", VA = "0xAE2C7C")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xAE2CD0", Offset = "0xAE2CD0", VA = "0xAE2CD0")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xAE2E38", Offset = "0xAE2E38", VA = "0xAE2E38")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xAE2F94", Offset = "0xAE2F94", VA = "0xAE2F94")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xAE3078", Offset = "0xAE3078", VA = "0xAE3078")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xAE32A8", Offset = "0xAE32A8", VA = "0xAE32A8")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xAE34EC", Offset = "0xAE34EC", VA = "0xAE34EC")]
	public void moveExample()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xAE35F0", Offset = "0xAE35F0", VA = "0xAE35F0")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xAE37E8", Offset = "0xAE37E8", VA = "0xAE37E8")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xAE37EC", Offset = "0xAE37EC", VA = "0xAE37EC")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xAE38D4", Offset = "0xAE38D4", VA = "0xAE38D4")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xAE39C8", Offset = "0xAE39C8", VA = "0xAE39C8")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xAE3B38", Offset = "0xAE3B38", VA = "0xAE3B38")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xAE3BA8", Offset = "0xAE3BA8", VA = "0xAE3BA8")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xAE3C88", Offset = "0xAE3C88", VA = "0xAE3C88")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xAE3D7C", Offset = "0xAE3D7C", VA = "0xAE3D7C")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xAE3E5C", Offset = "0xAE3E5C", VA = "0xAE3E5C")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xAE3FAC", Offset = "0xAE3FAC", VA = "0xAE3FAC")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xAE408C", Offset = "0xAE408C", VA = "0xAE408C")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xAE40E0", Offset = "0xAE40E0", VA = "0xAE40E0")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xAE4134", Offset = "0xAE4134", VA = "0xAE4134")]
	public void punchTest()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xAE4184", Offset = "0xAE4184", VA = "0xAE4184")]
	public TestingZLegacyExt()
	{
	}
}
[Token(Token = "0x2000241")]
public class LTDescr
{
	[Token(Token = "0x2000630")]
	public delegate Vector3 EaseTypeDelegate();

	[Token(Token = "0x2000631")]
	public delegate void ActionMethodDelegate();

	[Serializable]
	[Token(Token = "0x2000632")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D538", Offset = "0x85D538")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ActionMethodDelegate <>9__113_0;

		[Token(Token = "0x4002C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ActionMethodDelegate <>9__114_0;

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0xB96734", Offset = "0xB96734", VA = "0xB96734")]
		public <>c()
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0xB9673C", Offset = "0xB9673C", VA = "0xB9673C")]
		internal void <setCallback>b__113_0()
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0xB96740", Offset = "0xB96740", VA = "0xB96740")]
		internal void <setValue3>b__114_0()
		{
		}
	}

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool toggle;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool useEstimatedTime;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool useFrames;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool useManualTime;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool usesNormalDt;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool hasInitiliazed;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool hasExtraOnCompletes;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool hasPhysics;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onCompleteOnRepeat;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onCompleteOnStart;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useRecursion;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratioPassed;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float passed;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lastVal;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private uint _id;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int loopCount;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint counter;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float direction;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float directionLast;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float overshoot;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float period;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float scale;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool destroyOnComplete;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform trans;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal Vector3 fromInternal;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	internal Vector3 toInternal;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal Vector3 diff;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	internal Vector3 diffDiv2;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TweenAction type;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private LeanTweenType easeType;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LeanTweenType loopType;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool hasUpdateCallback;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EaseTypeDelegate easeMethod;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8624D0", Offset = "0x8624D0")]
	private ActionMethodDelegate <easeInternal>k__BackingField;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8624E0", Offset = "0x8624E0")]
	private ActionMethodDelegate <initInternal>k__BackingField;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer spriteRen;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RectTransform rectTransform;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text uiText;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image uiImage;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RawImage rawImage;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite[] sprites;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LTDescrOptional _optional;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float val;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float dt;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 newVect;

	[Token(Token = "0x17000118")]
	public Vector3 from
	{
		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xB88364", Offset = "0xB88364", VA = "0xB88364")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xB88370", Offset = "0xB88370", VA = "0xB88370")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public Vector3 to
	{
		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xB8837C", Offset = "0xB8837C", VA = "0xB8837C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xB88388", Offset = "0xB88388", VA = "0xB88388")]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public ActionMethodDelegate easeInternal
	{
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xB88394", Offset = "0xB88394", VA = "0xB88394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F650", Offset = "0x86F650")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xB8839C", Offset = "0xB8839C", VA = "0xB8839C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F660", Offset = "0x86F660")]
		set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public ActionMethodDelegate initInternal
	{
		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xB883A4", Offset = "0xB883A4", VA = "0xB883A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F670", Offset = "0x86F670")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xB883AC", Offset = "0xB883AC", VA = "0xB883AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F680", Offset = "0x86F680")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public Transform toTrans
	{
		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xB883B4", Offset = "0xB883B4", VA = "0xB883B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011D")]
	public int uniqueId
	{
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xB88C98", Offset = "0xB88C98", VA = "0xB88C98")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011E")]
	public int id
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xB88B34", Offset = "0xB88B34", VA = "0xB88B34")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011F")]
	public LTDescrOptional optional
	{
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xB88CA8", Offset = "0xB88CA8", VA = "0xB88CA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xB88CB0", Offset = "0xB88CB0", VA = "0xB88CB0")]
		set
		{
		}
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xB883D0", Offset = "0xB883D0", VA = "0xB883D0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xB88B44", Offset = "0xB88B44", VA = "0xB88B44")]
	public LTDescr()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xB88BBC", Offset = "0xB88BBC", VA = "0xB88BBC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x86F690", Offset = "0x86F690")]
	public LTDescr cancel(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xB88CB8", Offset = "0xB88CB8", VA = "0xB88CB8")]
	public void reset()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xB88E60", Offset = "0xB88E60", VA = "0xB88E60")]
	public LTDescr setFollow()
	{
		return null;
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xB88E6C", Offset = "0xB88E6C", VA = "0xB88E6C")]
	public LTDescr setMoveX()
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xB88F14", Offset = "0xB88F14", VA = "0xB88F14")]
	public LTDescr setMoveY()
	{
		return null;
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xB88FB0", Offset = "0xB88FB0", VA = "0xB88FB0")]
	public LTDescr setMoveZ()
	{
		return null;
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xB8904C", Offset = "0xB8904C", VA = "0xB8904C")]
	public LTDescr setMoveLocalX()
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xB890E8", Offset = "0xB890E8", VA = "0xB890E8")]
	public LTDescr setMoveLocalY()
	{
		return null;
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xB89184", Offset = "0xB89184", VA = "0xB89184")]
	public LTDescr setMoveLocalZ()
	{
		return null;
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xB89220", Offset = "0xB89220", VA = "0xB89220")]
	private void initFromInternal()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xB89228", Offset = "0xB89228", VA = "0xB89228")]
	public LTDescr setOffset(Vector3 offset)
	{
		return null;
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xB89234", Offset = "0xB89234", VA = "0xB89234")]
	public LTDescr setMoveCurved()
	{
		return null;
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xB892D0", Offset = "0xB892D0", VA = "0xB892D0")]
	public LTDescr setMoveCurvedLocal()
	{
		return null;
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xB8936C", Offset = "0xB8936C", VA = "0xB8936C")]
	public LTDescr setMoveSpline()
	{
		return null;
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xB89408", Offset = "0xB89408", VA = "0xB89408")]
	public LTDescr setMoveSplineLocal()
	{
		return null;
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xB894A4", Offset = "0xB894A4", VA = "0xB894A4")]
	public LTDescr setScaleX()
	{
		return null;
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xB89540", Offset = "0xB89540", VA = "0xB89540")]
	public LTDescr setScaleY()
	{
		return null;
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xB895DC", Offset = "0xB895DC", VA = "0xB895DC")]
	public LTDescr setScaleZ()
	{
		return null;
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xB89678", Offset = "0xB89678", VA = "0xB89678")]
	public LTDescr setRotateX()
	{
		return null;
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xB89714", Offset = "0xB89714", VA = "0xB89714")]
	public LTDescr setRotateY()
	{
		return null;
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xB897B0", Offset = "0xB897B0", VA = "0xB897B0")]
	public LTDescr setRotateZ()
	{
		return null;
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xB8984C", Offset = "0xB8984C", VA = "0xB8984C")]
	public LTDescr setRotateAround()
	{
		return null;
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xB898E8", Offset = "0xB898E8", VA = "0xB898E8")]
	public LTDescr setRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xB89984", Offset = "0xB89984", VA = "0xB89984")]
	public LTDescr setAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xB89A20", Offset = "0xB89A20", VA = "0xB89A20")]
	public LTDescr setTextAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xB89ABC", Offset = "0xB89ABC", VA = "0xB89ABC")]
	public LTDescr setAlphaVertex()
	{
		return null;
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xB89B58", Offset = "0xB89B58", VA = "0xB89B58")]
	public LTDescr setColor()
	{
		return null;
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xB89BF4", Offset = "0xB89BF4", VA = "0xB89BF4")]
	public LTDescr setCallbackColor()
	{
		return null;
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xB89C90", Offset = "0xB89C90", VA = "0xB89C90")]
	public LTDescr setTextColor()
	{
		return null;
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xB89D2C", Offset = "0xB89D2C", VA = "0xB89D2C")]
	public LTDescr setCanvasAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xB89DC8", Offset = "0xB89DC8", VA = "0xB89DC8")]
	public LTDescr setCanvasGroupAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xB89E64", Offset = "0xB89E64", VA = "0xB89E64")]
	public LTDescr setCanvasColor()
	{
		return null;
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xB89F00", Offset = "0xB89F00", VA = "0xB89F00")]
	public LTDescr setCanvasMoveX()
	{
		return null;
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xB89F9C", Offset = "0xB89F9C", VA = "0xB89F9C")]
	public LTDescr setCanvasMoveY()
	{
		return null;
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xB8A038", Offset = "0xB8A038", VA = "0xB8A038")]
	public LTDescr setCanvasMoveZ()
	{
		return null;
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xB8A0D4", Offset = "0xB8A0D4", VA = "0xB8A0D4")]
	private void initCanvasRotateAround()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xB8A11C", Offset = "0xB8A11C", VA = "0xB8A11C")]
	public LTDescr setCanvasRotateAround()
	{
		return null;
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xB8A1B8", Offset = "0xB8A1B8", VA = "0xB8A1B8")]
	public LTDescr setCanvasRotateAroundLocal()
	{
		return null;
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xB8A254", Offset = "0xB8A254", VA = "0xB8A254")]
	public LTDescr setCanvasPlaySprite()
	{
		return null;
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xB8A2F0", Offset = "0xB8A2F0", VA = "0xB8A2F0")]
	public LTDescr setCanvasMove()
	{
		return null;
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xB8A38C", Offset = "0xB8A38C", VA = "0xB8A38C")]
	public LTDescr setCanvasScale()
	{
		return null;
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xB8A428", Offset = "0xB8A428", VA = "0xB8A428")]
	public LTDescr setCanvasSizeDelta()
	{
		return null;
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xB8A4C4", Offset = "0xB8A4C4", VA = "0xB8A4C4")]
	private void callback()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xB8A754", Offset = "0xB8A754", VA = "0xB8A754")]
	public LTDescr setCallback()
	{
		return null;
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xB8A860", Offset = "0xB8A860", VA = "0xB8A860")]
	public LTDescr setValue3()
	{
		return null;
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xB8A96C", Offset = "0xB8A96C", VA = "0xB8A96C")]
	public LTDescr setMove()
	{
		return null;
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xB8AA08", Offset = "0xB8AA08", VA = "0xB8AA08")]
	public LTDescr setMoveLocal()
	{
		return null;
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xB8AAA4", Offset = "0xB8AAA4", VA = "0xB8AAA4")]
	public LTDescr setMoveToTransform()
	{
		return null;
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xB8AB40", Offset = "0xB8AB40", VA = "0xB8AB40")]
	public LTDescr setRotate()
	{
		return null;
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xB8ABDC", Offset = "0xB8ABDC", VA = "0xB8ABDC")]
	public LTDescr setRotateLocal()
	{
		return null;
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xB8AC78", Offset = "0xB8AC78", VA = "0xB8AC78")]
	public LTDescr setScale()
	{
		return null;
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xB8AD14", Offset = "0xB8AD14", VA = "0xB8AD14")]
	public LTDescr setGUIMove()
	{
		return null;
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xB8ADB0", Offset = "0xB8ADB0", VA = "0xB8ADB0")]
	public LTDescr setGUIMoveMargin()
	{
		return null;
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xB8AE4C", Offset = "0xB8AE4C", VA = "0xB8AE4C")]
	public LTDescr setGUIScale()
	{
		return null;
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xB8AEE8", Offset = "0xB8AEE8", VA = "0xB8AEE8")]
	public LTDescr setGUIAlpha()
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xB8AF84", Offset = "0xB8AF84", VA = "0xB8AF84")]
	public LTDescr setGUIRotate()
	{
		return null;
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xB8B020", Offset = "0xB8B020", VA = "0xB8B020")]
	public LTDescr setDelayedSound()
	{
		return null;
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xB8B0BC", Offset = "0xB8B0BC", VA = "0xB8B0BC")]
	public LTDescr setTarget(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xB8B0D8", Offset = "0xB8B0D8", VA = "0xB8B0D8")]
	private void init()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xB8B580", Offset = "0xB8B580", VA = "0xB8B580")]
	private void initSpeed()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xB8B6A4", Offset = "0xB8B6A4", VA = "0xB8B6A4")]
	public LTDescr updateNow()
	{
		return null;
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xB8B6C8", Offset = "0xB8B6C8", VA = "0xB8B6C8")]
	public bool updateInternal()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xB8B488", Offset = "0xB8B488", VA = "0xB8B488")]
	public void callOnCompletes()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xB8BBB8", Offset = "0xB8BBB8", VA = "0xB8BBB8")]
	public LTDescr setFromColor(Color col)
	{
		return null;
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xB8BC98", Offset = "0xB8BC98", VA = "0xB8BC98")]
	private static void alphaRecursive(Transform transform, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xB8C0B8", Offset = "0xB8C0B8", VA = "0xB8C0B8")]
	private static void colorRecursive(Transform transform, Color toColor, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xB8C41C", Offset = "0xB8C41C", VA = "0xB8C41C")]
	private static void alphaRecursive(RectTransform rectTransform, float val, int recursiveLevel = 0)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xB8C7D0", Offset = "0xB8C7D0", VA = "0xB8C7D0")]
	private static void alphaRecursiveSprite(Transform transform, float val)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xB8CB3C", Offset = "0xB8CB3C", VA = "0xB8CB3C")]
	private static void colorRecursiveSprite(Transform transform, Color toColor)
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xB8CEB8", Offset = "0xB8CEB8", VA = "0xB8CEB8")]
	private static void colorRecursive(RectTransform rectTransform, Color toColor)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xB8D260", Offset = "0xB8D260", VA = "0xB8D260")]
	private static void textAlphaChildrenRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xB8D590", Offset = "0xB8D590", VA = "0xB8D590")]
	private static void textAlphaRecursive(Transform trans, float val, bool useRecursion = true)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xB8D888", Offset = "0xB8D888", VA = "0xB8D888")]
	private static void textColorRecursive(Transform trans, Color toColor)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xB8DBC0", Offset = "0xB8DBC0", VA = "0xB8DBC0")]
	private static Color tweenColor(LTDescr tween, float val)
	{
		return default(Color);
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xB8DCDC", Offset = "0xB8DCDC", VA = "0xB8DCDC")]
	public LTDescr pause()
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xB8DCF4", Offset = "0xB8DCF4", VA = "0xB8DCF4")]
	public LTDescr resume()
	{
		return null;
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xB8DD00", Offset = "0xB8DD00", VA = "0xB8DD00")]
	public LTDescr setAxis(Vector3 axis)
	{
		return null;
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xB80DB0", Offset = "0xB80DB0", VA = "0xB80DB0")]
	public LTDescr setDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xB81FC8", Offset = "0xB81FC8", VA = "0xB81FC8")]
	public LTDescr setEase(LeanTweenType easeType)
	{
		return null;
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xB8DD20", Offset = "0xB8DD20", VA = "0xB8DD20")]
	public LTDescr setEaseLinear()
	{
		return null;
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xB8EAD8", Offset = "0xB8EAD8", VA = "0xB8EAD8")]
	public LTDescr setEaseSpring()
	{
		return null;
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xB81534", Offset = "0xB81534", VA = "0xB81534")]
	public LTDescr setEaseInQuad()
	{
		return null;
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xB81444", Offset = "0xB81444", VA = "0xB81444")]
	public LTDescr setEaseOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xB8DD98", Offset = "0xB8DD98", VA = "0xB8DD98")]
	public LTDescr setEaseInOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xB8DE10", Offset = "0xB8DE10", VA = "0xB8DE10")]
	public LTDescr setEaseInCubic()
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xB8DE88", Offset = "0xB8DE88", VA = "0xB8DE88")]
	public LTDescr setEaseOutCubic()
	{
		return null;
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xB8DF00", Offset = "0xB8DF00", VA = "0xB8DF00")]
	public LTDescr setEaseInOutCubic()
	{
		return null;
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xB8DF78", Offset = "0xB8DF78", VA = "0xB8DF78")]
	public LTDescr setEaseInQuart()
	{
		return null;
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xB8DFF0", Offset = "0xB8DFF0", VA = "0xB8DFF0")]
	public LTDescr setEaseOutQuart()
	{
		return null;
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xB8E068", Offset = "0xB8E068", VA = "0xB8E068")]
	public LTDescr setEaseInOutQuart()
	{
		return null;
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xB8E0E0", Offset = "0xB8E0E0", VA = "0xB8E0E0")]
	public LTDescr setEaseInQuint()
	{
		return null;
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xB8E158", Offset = "0xB8E158", VA = "0xB8E158")]
	public LTDescr setEaseOutQuint()
	{
		return null;
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xB8E1D0", Offset = "0xB8E1D0", VA = "0xB8E1D0")]
	public LTDescr setEaseInOutQuint()
	{
		return null;
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xB8E248", Offset = "0xB8E248", VA = "0xB8E248")]
	public LTDescr setEaseInSine()
	{
		return null;
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xB8E2C0", Offset = "0xB8E2C0", VA = "0xB8E2C0")]
	public LTDescr setEaseOutSine()
	{
		return null;
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xB8E338", Offset = "0xB8E338", VA = "0xB8E338")]
	public LTDescr setEaseInOutSine()
	{
		return null;
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xB8E3B0", Offset = "0xB8E3B0", VA = "0xB8E3B0")]
	public LTDescr setEaseInExpo()
	{
		return null;
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xB8E428", Offset = "0xB8E428", VA = "0xB8E428")]
	public LTDescr setEaseOutExpo()
	{
		return null;
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xB8E4A0", Offset = "0xB8E4A0", VA = "0xB8E4A0")]
	public LTDescr setEaseInOutExpo()
	{
		return null;
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xB8E518", Offset = "0xB8E518", VA = "0xB8E518")]
	public LTDescr setEaseInCirc()
	{
		return null;
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xB818B0", Offset = "0xB818B0", VA = "0xB818B0")]
	public LTDescr setEaseOutCirc()
	{
		return null;
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xB82D84", Offset = "0xB82D84", VA = "0xB82D84")]
	public LTDescr setEaseInOutCirc()
	{
		return null;
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xB8E590", Offset = "0xB8E590", VA = "0xB8E590")]
	public LTDescr setEaseInBounce()
	{
		return null;
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xB8E608", Offset = "0xB8E608", VA = "0xB8E608")]
	public LTDescr setEaseOutBounce()
	{
		return null;
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xB8E680", Offset = "0xB8E680", VA = "0xB8E680")]
	public LTDescr setEaseInOutBounce()
	{
		return null;
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xB814BC", Offset = "0xB814BC", VA = "0xB814BC")]
	public LTDescr setEaseInBack()
	{
		return null;
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xB8E6F8", Offset = "0xB8E6F8", VA = "0xB8E6F8")]
	public LTDescr setEaseOutBack()
	{
		return null;
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xB8E770", Offset = "0xB8E770", VA = "0xB8E770")]
	public LTDescr setEaseInOutBack()
	{
		return null;
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xB8E7E8", Offset = "0xB8E7E8", VA = "0xB8E7E8")]
	public LTDescr setEaseInElastic()
	{
		return null;
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xB8E860", Offset = "0xB8E860", VA = "0xB8E860")]
	public LTDescr setEaseOutElastic()
	{
		return null;
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xB8E8D8", Offset = "0xB8E8D8", VA = "0xB8E8D8")]
	public LTDescr setEaseInOutElastic()
	{
		return null;
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xB8E950", Offset = "0xB8E950", VA = "0xB8E950")]
	public LTDescr setEasePunch()
	{
		return null;
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xB8EA14", Offset = "0xB8EA14", VA = "0xB8EA14")]
	public LTDescr setEaseShake()
	{
		return null;
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xB8EB50", Offset = "0xB8EB50", VA = "0xB8EB50")]
	private Vector3 tweenOnCurve()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xB8EC40", Offset = "0xB8EC40", VA = "0xB8EC40")]
	private Vector3 easeInOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xB8ED2C", Offset = "0xB8ED2C", VA = "0xB8ED2C")]
	private Vector3 easeInQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xB8EDE0", Offset = "0xB8EDE0", VA = "0xB8EDE0")]
	private Vector3 easeOutQuad()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xB8EEBC", Offset = "0xB8EEBC", VA = "0xB8EEBC")]
	private Vector3 easeLinear()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xB8EF6C", Offset = "0xB8EF6C", VA = "0xB8EF6C")]
	private Vector3 easeSpring()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xB8F110", Offset = "0xB8F110", VA = "0xB8F110")]
	private Vector3 easeInCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xB8F1C8", Offset = "0xB8F1C8", VA = "0xB8F1C8")]
	private Vector3 easeOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xB8F2A0", Offset = "0xB8F2A0", VA = "0xB8F2A0")]
	private Vector3 easeInOutCubic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xB8F3A4", Offset = "0xB8F3A4", VA = "0xB8F3A4")]
	private Vector3 easeInQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xB8F470", Offset = "0xB8F470", VA = "0xB8F470")]
	private Vector3 easeOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xB8F54C", Offset = "0xB8F54C", VA = "0xB8F54C")]
	private Vector3 easeInOutQuart()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xB8F6C0", Offset = "0xB8F6C0", VA = "0xB8F6C0")]
	private Vector3 easeInQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xB8F790", Offset = "0xB8F790", VA = "0xB8F790")]
	private Vector3 easeOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xB8F870", Offset = "0xB8F870", VA = "0xB8F870")]
	private Vector3 easeInOutQuint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xB8F984", Offset = "0xB8F984", VA = "0xB8F984")]
	private Vector3 easeInSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xB8FAA4", Offset = "0xB8FAA4", VA = "0xB8FAA4")]
	private Vector3 easeOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xB8FBB4", Offset = "0xB8FBB4", VA = "0xB8FBB4")]
	private Vector3 easeInOutSine()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xB8FCA8", Offset = "0xB8FCA8", VA = "0xB8FCA8")]
	private Vector3 easeInExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xB8FD94", Offset = "0xB8FD94", VA = "0xB8FD94")]
	private Vector3 easeOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xB8FE80", Offset = "0xB8FE80", VA = "0xB8FE80")]
	private Vector3 easeInOutExpo()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xB90004", Offset = "0xB90004", VA = "0xB90004")]
	private Vector3 easeInCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xB90108", Offset = "0xB90108", VA = "0xB90108")]
	private Vector3 easeOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xB90220", Offset = "0xB90220", VA = "0xB90220")]
	private Vector3 easeInOutCirc()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xB903A8", Offset = "0xB903A8", VA = "0xB903A8")]
	private Vector3 easeInBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xB90510", Offset = "0xB90510", VA = "0xB90510")]
	private Vector3 easeOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xB9070C", Offset = "0xB9070C", VA = "0xB9070C")]
	private Vector3 easeInOutBounce()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xB9093C", Offset = "0xB9093C", VA = "0xB9093C")]
	private Vector3 easeInBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xB90A4C", Offset = "0xB90A4C", VA = "0xB90A4C")]
	private Vector3 easeOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xB90B50", Offset = "0xB90B50", VA = "0xB90B50")]
	private Vector3 easeInOutBack()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xB90CE4", Offset = "0xB90CE4", VA = "0xB90CE4")]
	private Vector3 easeInElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xB90DF8", Offset = "0xB90DF8", VA = "0xB90DF8")]
	private Vector3 easeOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xB90F0C", Offset = "0xB90F0C", VA = "0xB90F0C")]
	private Vector3 easeInOutElastic()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xB91020", Offset = "0xB91020", VA = "0xB91020")]
	public LTDescr setOvershoot(float overshoot)
	{
		return null;
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xB91028", Offset = "0xB91028", VA = "0xB91028")]
	public LTDescr setPeriod(float period)
	{
		return null;
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xB91030", Offset = "0xB91030", VA = "0xB91030")]
	public LTDescr setScale(float scale)
	{
		return null;
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xB91038", Offset = "0xB91038", VA = "0xB91038")]
	public LTDescr setEase(AnimationCurve easeCurve)
	{
		return null;
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xB910CC", Offset = "0xB910CC", VA = "0xB910CC")]
	public LTDescr setTo(Vector3 to)
	{
		return null;
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xB91194", Offset = "0xB91194", VA = "0xB91194")]
	public LTDescr setTo(Transform to)
	{
		return null;
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xB911B0", Offset = "0xB911B0", VA = "0xB911B0")]
	public LTDescr setFrom(Vector3 from)
	{
		return null;
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xB82D34", Offset = "0xB82D34", VA = "0xB82D34")]
	public LTDescr setFrom(float from)
	{
		return null;
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xB912C0", Offset = "0xB912C0", VA = "0xB912C0")]
	public LTDescr setDiff(Vector3 diff)
	{
		return null;
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xB912CC", Offset = "0xB912CC", VA = "0xB912CC")]
	public LTDescr setHasInitialized(bool has)
	{
		return null;
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xB912D8", Offset = "0xB912D8", VA = "0xB912D8")]
	public LTDescr setId(uint id, uint global_counter)
	{
		return null;
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xB912E4", Offset = "0xB912E4", VA = "0xB912E4")]
	public LTDescr setPassed(float passed)
	{
		return null;
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xB912EC", Offset = "0xB912EC", VA = "0xB912EC")]
	public LTDescr setTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xB91308", Offset = "0xB91308", VA = "0xB91308")]
	public LTDescr setSpeed(float speed)
	{
		return null;
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xB82CEC", Offset = "0xB82CEC", VA = "0xB82CEC")]
	public LTDescr setRepeat(int repeat)
	{
		return null;
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xB91348", Offset = "0xB91348", VA = "0xB91348")]
	public LTDescr setLoopType(LeanTweenType loopType)
	{
		return null;
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xB91350", Offset = "0xB91350", VA = "0xB91350")]
	public LTDescr setUseEstimatedTime(bool useEstimatedTime)
	{
		return null;
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xB91360", Offset = "0xB91360", VA = "0xB91360")]
	public LTDescr setIgnoreTimeScale(bool useUnScaledTime)
	{
		return null;
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xB91370", Offset = "0xB91370", VA = "0xB91370")]
	public LTDescr setUseFrames(bool useFrames)
	{
		return null;
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xB91380", Offset = "0xB91380", VA = "0xB91380")]
	public LTDescr setUseManualTime(bool useManualTime)
	{
		return null;
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xB91390", Offset = "0xB91390", VA = "0xB91390")]
	public LTDescr setLoopCount(int loopCount)
	{
		return null;
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xB913A0", Offset = "0xB913A0", VA = "0xB913A0")]
	public LTDescr setLoopOnce()
	{
		return null;
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xB82DFC", Offset = "0xB82DFC", VA = "0xB82DFC")]
	public LTDescr setLoopClamp()
	{
		return null;
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xB913AC", Offset = "0xB913AC", VA = "0xB913AC")]
	public LTDescr setLoopClamp(int loops)
	{
		return null;
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xB82CCC", Offset = "0xB82CCC", VA = "0xB82CCC")]
	public LTDescr setLoopPingPong()
	{
		return null;
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xB80D84", Offset = "0xB80D84", VA = "0xB80D84")]
	public LTDescr setLoopPingPong(int loops)
	{
		return null;
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xB913B4", Offset = "0xB913B4", VA = "0xB913B4")]
	public LTDescr setOnComplete(Action onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xB913D8", Offset = "0xB913D8", VA = "0xB913D8")]
	public LTDescr setOnComplete(Action<object> onComplete)
	{
		return null;
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xB913FC", Offset = "0xB913FC", VA = "0xB913FC")]
	public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xB91434", Offset = "0xB91434", VA = "0xB91434")]
	public LTDescr setOnCompleteParam(object onCompleteParam)
	{
		return null;
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xB81F6C", Offset = "0xB81F6C", VA = "0xB81F6C")]
	public LTDescr setOnUpdate(Action<float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xB91458", Offset = "0xB91458", VA = "0xB91458")]
	public LTDescr setOnUpdateRatio(Action<float, float> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xB9147C", Offset = "0xB9147C", VA = "0xB9147C")]
	public LTDescr setOnUpdateObject(Action<float, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xB914A0", Offset = "0xB914A0", VA = "0xB914A0")]
	public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xB914C4", Offset = "0xB914C4", VA = "0xB914C4")]
	public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xB914E8", Offset = "0xB914E8", VA = "0xB914E8")]
	public LTDescr setOnUpdateColor(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xB9150C", Offset = "0xB9150C", VA = "0xB9150C")]
	public LTDescr setOnUpdateColor(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xB80DB8", Offset = "0xB80DB8", VA = "0xB80DB8")]
	public LTDescr setOnUpdate(Action<Color> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xB91530", Offset = "0xB91530", VA = "0xB91530")]
	public LTDescr setOnUpdate(Action<Color, object> onUpdate)
	{
		return null;
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xB91554", Offset = "0xB91554", VA = "0xB91554")]
	public LTDescr setOnUpdate(Action<float, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xB9158C", Offset = "0xB9158C", VA = "0xB9158C")]
	public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xB81F34", Offset = "0xB81F34", VA = "0xB81F34")]
	public LTDescr setOnUpdate(Action<Vector2> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xB81F90", Offset = "0xB81F90", VA = "0xB81F90")]
	public LTDescr setOnUpdate(Action<Vector3> onUpdate, [Optional] object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xB915C4", Offset = "0xB915C4", VA = "0xB915C4")]
	public LTDescr setOnUpdateParam(object onUpdateParam)
	{
		return null;
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xB915E0", Offset = "0xB915E0", VA = "0xB915E0")]
	public LTDescr setOrientToPath(bool doesOrient)
	{
		return null;
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xB916A4", Offset = "0xB916A4", VA = "0xB916A4")]
	public LTDescr setOrientToPath2d(bool doesOrient2d)
	{
		return null;
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xB9170C", Offset = "0xB9170C", VA = "0xB9170C")]
	public LTDescr setRect(LTRect rect)
	{
		return null;
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xB91728", Offset = "0xB91728", VA = "0xB91728")]
	public LTDescr setRect(Rect rect)
	{
		return null;
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xB91878", Offset = "0xB91878", VA = "0xB91878")]
	public LTDescr setPath(LTBezierPath path)
	{
		return null;
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xB91894", Offset = "0xB91894", VA = "0xB91894")]
	public LTDescr setPoint(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xB81928", Offset = "0xB81928", VA = "0xB81928")]
	public LTDescr setDestroyOnComplete(bool doesDestroy)
	{
		return null;
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xB918B4", Offset = "0xB918B4", VA = "0xB918B4")]
	public LTDescr setAudio(object audio)
	{
		return null;
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xB9133C", Offset = "0xB9133C", VA = "0xB9133C")]
	public LTDescr setOnCompleteOnRepeat(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xB918D0", Offset = "0xB918D0", VA = "0xB918D0")]
	public LTDescr setOnCompleteOnStart(bool isOn)
	{
		return null;
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xB918DC", Offset = "0xB918DC", VA = "0xB918DC")]
	public LTDescr setRect(RectTransform rect)
	{
		return null;
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xB918E4", Offset = "0xB918E4", VA = "0xB918E4")]
	public LTDescr setSprites(Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xB918EC", Offset = "0xB918EC", VA = "0xB918EC")]
	public LTDescr setFrameRate(float frameRate)
	{
		return null;
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xB91914", Offset = "0xB91914", VA = "0xB91914")]
	public LTDescr setOnStart(Action onStart)
	{
		return null;
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xB91930", Offset = "0xB91930", VA = "0xB91930")]
	public LTDescr setDirection(float direction)
	{
		return null;
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xB91ACC", Offset = "0xB91ACC", VA = "0xB91ACC")]
	public LTDescr setRecursive(bool useRecursion)
	{
		return null;
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xB91AD8", Offset = "0xB91AD8", VA = "0xB91AD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F6C8", Offset = "0x86F6C8")]
	private void <setMoveX>b__73_0()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xB91B0C", Offset = "0xB91B0C", VA = "0xB91B0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F6D8", Offset = "0x86F6D8")]
	private void <setMoveX>b__73_1()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xB91BA8", Offset = "0xB91BA8", VA = "0xB91BA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F6E8", Offset = "0x86F6E8")]
	private void <setMoveY>b__74_0()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xB91BDC", Offset = "0xB91BDC", VA = "0xB91BDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F6F8", Offset = "0x86F6F8")]
	private void <setMoveY>b__74_1()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xB91C74", Offset = "0xB91C74", VA = "0xB91C74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F708", Offset = "0x86F708")]
	private void <setMoveZ>b__75_0()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xB91CA8", Offset = "0xB91CA8", VA = "0xB91CA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F718", Offset = "0x86F718")]
	private void <setMoveZ>b__75_1()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xB91D44", Offset = "0xB91D44", VA = "0xB91D44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F728", Offset = "0x86F728")]
	private void <setMoveLocalX>b__76_0()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xB91D78", Offset = "0xB91D78", VA = "0xB91D78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F738", Offset = "0x86F738")]
	private void <setMoveLocalX>b__76_1()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xB91E14", Offset = "0xB91E14", VA = "0xB91E14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F748", Offset = "0x86F748")]
	private void <setMoveLocalY>b__77_0()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xB91E48", Offset = "0xB91E48", VA = "0xB91E48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F758", Offset = "0x86F758")]
	private void <setMoveLocalY>b__77_1()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xB91EE0", Offset = "0xB91EE0", VA = "0xB91EE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F768", Offset = "0x86F768")]
	private void <setMoveLocalZ>b__78_0()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xB91F14", Offset = "0xB91F14", VA = "0xB91F14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F778", Offset = "0x86F778")]
	private void <setMoveLocalZ>b__78_1()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xB91FB0", Offset = "0xB91FB0", VA = "0xB91FB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F788", Offset = "0x86F788")]
	private void <setMoveCurved>b__81_0()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xB9208C", Offset = "0xB9208C", VA = "0xB9208C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F798", Offset = "0x86F798")]
	private void <setMoveCurvedLocal>b__82_0()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xB92168", Offset = "0xB92168", VA = "0xB92168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F7A8", Offset = "0x86F7A8")]
	private void <setMoveSpline>b__83_0()
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xB9224C", Offset = "0xB9224C", VA = "0xB9224C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F7B8", Offset = "0x86F7B8")]
	private void <setMoveSplineLocal>b__84_0()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xB92330", Offset = "0xB92330", VA = "0xB92330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F7C8", Offset = "0x86F7C8")]
	private void <setScaleX>b__85_0()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xB92364", Offset = "0xB92364", VA = "0xB92364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F7D8", Offset = "0x86F7D8")]
	private void <setScaleX>b__85_1()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xB92400", Offset = "0xB92400", VA = "0xB92400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F7E8", Offset = "0x86F7E8")]
	private void <setScaleY>b__86_0()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xB92434", Offset = "0xB92434", VA = "0xB92434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F7F8", Offset = "0x86F7F8")]
	private void <setScaleY>b__86_1()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xB924CC", Offset = "0xB924CC", VA = "0xB924CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F808", Offset = "0x86F808")]
	private void <setScaleZ>b__87_0()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xB92500", Offset = "0xB92500", VA = "0xB92500")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F818", Offset = "0x86F818")]
	private void <setScaleZ>b__87_1()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xB9259C", Offset = "0xB9259C", VA = "0xB9259C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F828", Offset = "0x86F828")]
	private void <setRotateX>b__88_0()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xB92638", Offset = "0xB92638", VA = "0xB92638")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F838", Offset = "0x86F838")]
	private void <setRotateX>b__88_1()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xB926D4", Offset = "0xB926D4", VA = "0xB926D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F848", Offset = "0x86F848")]
	private void <setRotateY>b__89_0()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xB92770", Offset = "0xB92770", VA = "0xB92770")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F858", Offset = "0x86F858")]
	private void <setRotateY>b__89_1()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xB92808", Offset = "0xB92808", VA = "0xB92808")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F868", Offset = "0x86F868")]
	private void <setRotateZ>b__90_0()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xB928A4", Offset = "0xB928A4", VA = "0xB928A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F878", Offset = "0x86F878")]
	private void <setRotateZ>b__90_1()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xB92940", Offset = "0xB92940", VA = "0xB92940")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F888", Offset = "0x86F888")]
	private void <setRotateAround>b__91_0()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xB92984", Offset = "0xB92984", VA = "0xB92984")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F898", Offset = "0x86F898")]
	private void <setRotateAround>b__91_1()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xB92B8C", Offset = "0xB92B8C", VA = "0xB92B8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F8A8", Offset = "0x86F8A8")]
	private void <setRotateAroundLocal>b__92_0()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xB92BD0", Offset = "0xB92BD0", VA = "0xB92BD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F8B8", Offset = "0x86F8B8")]
	private void <setRotateAroundLocal>b__92_1()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xB92E4C", Offset = "0xB92E4C", VA = "0xB92E4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F8C8", Offset = "0x86F8C8")]
	private void <setAlpha>b__93_0()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xB933A0", Offset = "0xB933A0", VA = "0xB933A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F8D8", Offset = "0x86F8D8")]
	private void <setAlpha>b__93_2()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xB93508", Offset = "0xB93508", VA = "0xB93508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F8E8", Offset = "0x86F8E8")]
	private void <setAlpha>b__93_1()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xB93680", Offset = "0xB93680", VA = "0xB93680")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F8F8", Offset = "0x86F8F8")]
	private void <setTextAlpha>b__94_0()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xB9373C", Offset = "0xB9373C", VA = "0xB9373C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F908", Offset = "0x86F908")]
	private void <setTextAlpha>b__94_1()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xB93774", Offset = "0xB93774", VA = "0xB93774")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F918", Offset = "0x86F918")]
	private void <setAlphaVertex>b__95_0()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xB9380C", Offset = "0xB9380C", VA = "0xB9380C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F928", Offset = "0x86F928")]
	private void <setAlphaVertex>b__95_1()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xB93A3C", Offset = "0xB93A3C", VA = "0xB93A3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F938", Offset = "0x86F938")]
	private void <setColor>b__96_0()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xB93F7C", Offset = "0xB93F7C", VA = "0xB93F7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F948", Offset = "0x86F948")]
	private void <setColor>b__96_1()
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xB94160", Offset = "0xB94160", VA = "0xB94160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F958", Offset = "0x86F958")]
	private void <setCallbackColor>b__97_0()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xB941B4", Offset = "0xB941B4", VA = "0xB941B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F968", Offset = "0x86F968")]
	private void <setCallbackColor>b__97_1()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xB94398", Offset = "0xB94398", VA = "0xB94398")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F978", Offset = "0x86F978")]
	private void <setTextColor>b__98_0()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xB94458", Offset = "0xB94458", VA = "0xB94458")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F988", Offset = "0x86F988")]
	private void <setTextColor>b__98_1()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xB945A4", Offset = "0xB945A4", VA = "0xB945A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F998", Offset = "0x86F998")]
	private void <setCanvasAlpha>b__99_0()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xB946C4", Offset = "0xB946C4", VA = "0xB946C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F9A8", Offset = "0x86F9A8")]
	private void <setCanvasAlpha>b__99_1()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xB9484C", Offset = "0xB9484C", VA = "0xB9484C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F9B8", Offset = "0x86F9B8")]
	private void <setCanvasGroupAlpha>b__100_0()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xB948B8", Offset = "0xB948B8", VA = "0xB948B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F9C8", Offset = "0x86F9C8")]
	private void <setCanvasGroupAlpha>b__100_1()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xB94934", Offset = "0xB94934", VA = "0xB94934")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F9D8", Offset = "0x86F9D8")]
	private void <setCanvasColor>b__101_0()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xB94A50", Offset = "0xB94A50", VA = "0xB94A50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F9E8", Offset = "0x86F9E8")]
	private void <setCanvasColor>b__101_1()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xB94C14", Offset = "0xB94C14", VA = "0xB94C14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86F9F8", Offset = "0x86F9F8")]
	private void <setCanvasMoveX>b__102_0()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xB94C48", Offset = "0xB94C48", VA = "0xB94C48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA08", Offset = "0x86FA08")]
	private void <setCanvasMoveX>b__102_1()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xB94CD4", Offset = "0xB94CD4", VA = "0xB94CD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA18", Offset = "0x86FA18")]
	private void <setCanvasMoveY>b__103_0()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xB94D08", Offset = "0xB94D08", VA = "0xB94D08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA28", Offset = "0x86FA28")]
	private void <setCanvasMoveY>b__103_1()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xB94D98", Offset = "0xB94D98", VA = "0xB94D98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA38", Offset = "0x86FA38")]
	private void <setCanvasMoveZ>b__104_0()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xB94DCC", Offset = "0xB94DCC", VA = "0xB94DCC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA48", Offset = "0x86FA48")]
	private void <setCanvasMoveZ>b__104_1()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xB94E5C", Offset = "0xB94E5C", VA = "0xB94E5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA58", Offset = "0x86FA58")]
	private void <setCanvasRotateAround>b__106_0()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xB95038", Offset = "0xB95038", VA = "0xB95038")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA68", Offset = "0x86FA68")]
	private void <setCanvasRotateAroundLocal>b__107_0()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xB95274", Offset = "0xB95274", VA = "0xB95274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA78", Offset = "0x86FA78")]
	private void <setCanvasPlaySprite>b__108_0()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xB952D8", Offset = "0xB952D8", VA = "0xB952D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA88", Offset = "0x86FA88")]
	private void <setCanvasPlaySprite>b__108_1()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xB9542C", Offset = "0xB9542C", VA = "0xB9542C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FA98", Offset = "0x86FA98")]
	private void <setCanvasMove>b__109_0()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xB95464", Offset = "0xB95464", VA = "0xB95464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FAA8", Offset = "0x86FAA8")]
	private void <setCanvasMove>b__109_1()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xB954A0", Offset = "0xB954A0", VA = "0xB954A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FAB8", Offset = "0x86FAB8")]
	private void <setCanvasScale>b__110_0()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xB954D8", Offset = "0xB954D8", VA = "0xB954D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FAC8", Offset = "0x86FAC8")]
	private void <setCanvasScale>b__110_1()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xB95514", Offset = "0xB95514", VA = "0xB95514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FAD8", Offset = "0x86FAD8")]
	private void <setCanvasSizeDelta>b__111_0()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xB955B0", Offset = "0xB955B0", VA = "0xB955B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FAE8", Offset = "0x86FAE8")]
	private void <setCanvasSizeDelta>b__111_1()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xB95660", Offset = "0xB95660", VA = "0xB95660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FAF8", Offset = "0x86FAF8")]
	private void <setMove>b__115_0()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xB95698", Offset = "0xB95698", VA = "0xB95698")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB08", Offset = "0x86FB08")]
	private void <setMove>b__115_1()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xB95718", Offset = "0xB95718", VA = "0xB95718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB18", Offset = "0x86FB18")]
	private void <setMoveLocal>b__116_0()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xB95750", Offset = "0xB95750", VA = "0xB95750")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB28", Offset = "0x86FB28")]
	private void <setMoveLocal>b__116_1()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xB957D0", Offset = "0xB957D0", VA = "0xB957D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB38", Offset = "0x86FB38")]
	private void <setMoveToTransform>b__117_0()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xB95808", Offset = "0xB95808", VA = "0xB95808")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB48", Offset = "0x86FB48")]
	private void <setMoveToTransform>b__117_1()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xB95930", Offset = "0xB95930", VA = "0xB95930")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB58", Offset = "0x86FB58")]
	private void <setRotate>b__118_0()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xB95A34", Offset = "0xB95A34", VA = "0xB95A34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB68", Offset = "0x86FB68")]
	private void <setRotate>b__118_1()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xB95AB4", Offset = "0xB95AB4", VA = "0xB95AB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB78", Offset = "0x86FB78")]
	private void <setRotateLocal>b__119_0()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xB95BB8", Offset = "0xB95BB8", VA = "0xB95BB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB88", Offset = "0x86FB88")]
	private void <setRotateLocal>b__119_1()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xB95C38", Offset = "0xB95C38", VA = "0xB95C38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FB98", Offset = "0x86FB98")]
	private void <setScale>b__120_0()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xB95C70", Offset = "0xB95C70", VA = "0xB95C70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FBA8", Offset = "0x86FBA8")]
	private void <setScale>b__120_1()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xB95CF0", Offset = "0xB95CF0", VA = "0xB95CF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FBB8", Offset = "0x86FBB8")]
	private void <setGUIMove>b__121_0()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xB95FC0", Offset = "0xB95FC0", VA = "0xB95FC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FBC8", Offset = "0x86FBC8")]
	private void <setGUIMove>b__121_1()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xB96090", Offset = "0xB96090", VA = "0xB96090")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FBD8", Offset = "0x86FBD8")]
	private void <setGUIMoveMargin>b__122_0()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xB96134", Offset = "0xB96134", VA = "0xB96134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FBE8", Offset = "0x86FBE8")]
	private void <setGUIMoveMargin>b__122_1()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xB96188", Offset = "0xB96188", VA = "0xB96188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FBF8", Offset = "0x86FBF8")]
	private void <setGUIScale>b__123_0()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xB96240", Offset = "0xB96240", VA = "0xB96240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC08", Offset = "0x86FC08")]
	private void <setGUIScale>b__123_1()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xB96310", Offset = "0xB96310", VA = "0xB96310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC18", Offset = "0x86FC18")]
	private void <setGUIAlpha>b__124_0()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xB9633C", Offset = "0xB9633C", VA = "0xB9633C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC28", Offset = "0x86FC28")]
	private void <setGUIAlpha>b__124_1()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xB96378", Offset = "0xB96378", VA = "0xB96378")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC38", Offset = "0x86FC38")]
	private void <setGUIRotate>b__125_0()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xB96688", Offset = "0xB96688", VA = "0xB96688")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC48", Offset = "0x86FC48")]
	private void <setGUIRotate>b__125_1()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xB966C4", Offset = "0xB966C4", VA = "0xB966C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC58", Offset = "0x86FC58")]
	private void <setDelayedSound>b__126_0()
	{
	}
}
[Token(Token = "0x2000242")]
public class LTDescrOptional
{
	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8624F0", Offset = "0x8624F0")]
	private Transform <toTrans>k__BackingField;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862500", Offset = "0x862500")]
	private Vector3 <point>k__BackingField;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862510", Offset = "0x862510")]
	private Vector3 <axis>k__BackingField;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862520", Offset = "0x862520")]
	private float <lastVal>k__BackingField;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862530", Offset = "0x862530")]
	private Quaternion <origRotation>k__BackingField;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862540", Offset = "0x862540")]
	private LTBezierPath <path>k__BackingField;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862550", Offset = "0x862550")]
	private LTSpline <spline>k__BackingField;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int initFrameCount;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color color;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862560", Offset = "0x862560")]
	private LTRect <ltRect>k__BackingField;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862570", Offset = "0x862570")]
	private Action<float> <onUpdateFloat>k__BackingField;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862580", Offset = "0x862580")]
	private Action<float, float> <onUpdateFloatRatio>k__BackingField;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862590", Offset = "0x862590")]
	private Action<float, object> <onUpdateFloatObject>k__BackingField;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8625A0", Offset = "0x8625A0")]
	private Action<Vector2> <onUpdateVector2>k__BackingField;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8625B0", Offset = "0x8625B0")]
	private Action<Vector3> <onUpdateVector3>k__BackingField;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8625C0", Offset = "0x8625C0")]
	private Action<Vector3, object> <onUpdateVector3Object>k__BackingField;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8625D0", Offset = "0x8625D0")]
	private Action<Color> <onUpdateColor>k__BackingField;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8625E0", Offset = "0x8625E0")]
	private Action<Color, object> <onUpdateColorObject>k__BackingField;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8625F0", Offset = "0x8625F0")]
	private Action <onComplete>k__BackingField;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862600", Offset = "0x862600")]
	private Action<object> <onCompleteObject>k__BackingField;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862610", Offset = "0x862610")]
	private object <onCompleteParam>k__BackingField;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862620", Offset = "0x862620")]
	private object <onUpdateParam>k__BackingField;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862630", Offset = "0x862630")]
	private Action <onStart>k__BackingField;

	[Token(Token = "0x17000120")]
	public Transform toTrans
	{
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xB967D8", Offset = "0xB967D8", VA = "0xB967D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC68", Offset = "0x86FC68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xB967E0", Offset = "0xB967E0", VA = "0xB967E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC78", Offset = "0x86FC78")]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public Vector3 point
	{
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xB967E8", Offset = "0xB967E8", VA = "0xB967E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC88", Offset = "0x86FC88")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xB967F4", Offset = "0xB967F4", VA = "0xB967F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FC98", Offset = "0x86FC98")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public Vector3 axis
	{
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xB96800", Offset = "0xB96800", VA = "0xB96800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FCA8", Offset = "0x86FCA8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xB9680C", Offset = "0xB9680C", VA = "0xB9680C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FCB8", Offset = "0x86FCB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public float lastVal
	{
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xB96818", Offset = "0xB96818", VA = "0xB96818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FCC8", Offset = "0x86FCC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xB96820", Offset = "0xB96820", VA = "0xB96820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FCD8", Offset = "0x86FCD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public Quaternion origRotation
	{
		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xB96828", Offset = "0xB96828", VA = "0xB96828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FCE8", Offset = "0x86FCE8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xB96834", Offset = "0xB96834", VA = "0xB96834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FCF8", Offset = "0x86FCF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public LTBezierPath path
	{
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xB96840", Offset = "0xB96840", VA = "0xB96840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD08", Offset = "0x86FD08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xB96848", Offset = "0xB96848", VA = "0xB96848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD18", Offset = "0x86FD18")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public LTSpline spline
	{
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xB96850", Offset = "0xB96850", VA = "0xB96850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD28", Offset = "0x86FD28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xB96858", Offset = "0xB96858", VA = "0xB96858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD38", Offset = "0x86FD38")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public LTRect ltRect
	{
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xB96860", Offset = "0xB96860", VA = "0xB96860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD48", Offset = "0x86FD48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xB96868", Offset = "0xB96868", VA = "0xB96868")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD58", Offset = "0x86FD58")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public Action<float> onUpdateFloat
	{
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xB96870", Offset = "0xB96870", VA = "0xB96870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD68", Offset = "0x86FD68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xB96878", Offset = "0xB96878", VA = "0xB96878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD78", Offset = "0x86FD78")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public Action<float, float> onUpdateFloatRatio
	{
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xB96880", Offset = "0xB96880", VA = "0xB96880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD88", Offset = "0x86FD88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xB96888", Offset = "0xB96888", VA = "0xB96888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FD98", Offset = "0x86FD98")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public Action<float, object> onUpdateFloatObject
	{
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xB96890", Offset = "0xB96890", VA = "0xB96890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FDA8", Offset = "0x86FDA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xB96898", Offset = "0xB96898", VA = "0xB96898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FDB8", Offset = "0x86FDB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public Action<Vector2> onUpdateVector2
	{
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xB968A0", Offset = "0xB968A0", VA = "0xB968A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FDC8", Offset = "0x86FDC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xB968A8", Offset = "0xB968A8", VA = "0xB968A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FDD8", Offset = "0x86FDD8")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public Action<Vector3> onUpdateVector3
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xB968B0", Offset = "0xB968B0", VA = "0xB968B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FDE8", Offset = "0x86FDE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xB968B8", Offset = "0xB968B8", VA = "0xB968B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FDF8", Offset = "0x86FDF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public Action<Vector3, object> onUpdateVector3Object
	{
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xB968C0", Offset = "0xB968C0", VA = "0xB968C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE08", Offset = "0x86FE08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xB968C8", Offset = "0xB968C8", VA = "0xB968C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE18", Offset = "0x86FE18")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public Action<Color> onUpdateColor
	{
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xB968D0", Offset = "0xB968D0", VA = "0xB968D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE28", Offset = "0x86FE28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xB968D8", Offset = "0xB968D8", VA = "0xB968D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE38", Offset = "0x86FE38")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public Action<Color, object> onUpdateColorObject
	{
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xB968E0", Offset = "0xB968E0", VA = "0xB968E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE48", Offset = "0x86FE48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xB968E8", Offset = "0xB968E8", VA = "0xB968E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE58", Offset = "0x86FE58")]
		set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public Action onComplete
	{
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xB968F0", Offset = "0xB968F0", VA = "0xB968F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE68", Offset = "0x86FE68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xB968F8", Offset = "0xB968F8", VA = "0xB968F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE78", Offset = "0x86FE78")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public Action<object> onCompleteObject
	{
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xB96900", Offset = "0xB96900", VA = "0xB96900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE88", Offset = "0x86FE88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xB96908", Offset = "0xB96908", VA = "0xB96908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FE98", Offset = "0x86FE98")]
		set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public object onCompleteParam
	{
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xB96910", Offset = "0xB96910", VA = "0xB96910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FEA8", Offset = "0x86FEA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xB96918", Offset = "0xB96918", VA = "0xB96918")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FEB8", Offset = "0x86FEB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public object onUpdateParam
	{
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xB96920", Offset = "0xB96920", VA = "0xB96920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FEC8", Offset = "0x86FEC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xB96928", Offset = "0xB96928", VA = "0xB96928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FED8", Offset = "0x86FED8")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public Action onStart
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xB96930", Offset = "0xB96930", VA = "0xB96930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FEE8", Offset = "0x86FEE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xB96938", Offset = "0xB96938", VA = "0xB96938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86FEF8", Offset = "0x86FEF8")]
		set
		{
		}
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xB88DCC", Offset = "0xB88DCC", VA = "0xB88DCC")]
	public void reset()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xB8BA1C", Offset = "0xB8BA1C", VA = "0xB8BA1C")]
	public void callOnUpdate(float val, float ratioPassed)
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xB88BB4", Offset = "0xB88BB4", VA = "0xB88BB4")]
	public LTDescrOptional()
	{
	}
}
[Token(Token = "0x2000243")]
public class LTSeq
{
	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LTSeq previous;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LTSeq current;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LTDescr tween;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float totalDelay;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeScale;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int debugIter;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public uint counter;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool toggle;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint _id;

	[Token(Token = "0x17000135")]
	public int id
	{
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xDADF48", Offset = "0xDADF48", VA = "0xDADF48")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xDADF58", Offset = "0xDADF58", VA = "0xDADF58")]
	public void reset()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xDADF68", Offset = "0xDADF68", VA = "0xDADF68")]
	public void init(uint id, uint global_counter)
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xDADF80", Offset = "0xDADF80", VA = "0xDADF80")]
	private LTSeq addOn()
	{
		return null;
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xDAE2D0", Offset = "0xDAE2D0", VA = "0xDAE2D0")]
	private float addPreviousDelays()
	{
		return default(float);
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xDAE30C", Offset = "0xDAE30C", VA = "0xDAE30C")]
	public LTSeq append(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xDAE334", Offset = "0xDAE334", VA = "0xDAE334")]
	public LTSeq append(Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xDAE50C", Offset = "0xDAE50C", VA = "0xDAE50C")]
	public LTSeq append(Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xDAE69C", Offset = "0xDAE69C", VA = "0xDAE69C")]
	public LTSeq append(GameObject gameObject, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xDAE81C", Offset = "0xDAE81C", VA = "0xDAE81C")]
	public LTSeq append(GameObject gameObject, Action<object> callback, object obj)
	{
		return null;
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xDAE4A4", Offset = "0xDAE4A4", VA = "0xDAE4A4")]
	public LTSeq append(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xDAE9BC", Offset = "0xDAE9BC", VA = "0xDAE9BC")]
	public LTSeq insert(LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xDAEA04", Offset = "0xDAEA04", VA = "0xDAEA04")]
	public LTSeq setScale(float timeScale)
	{
		return null;
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xDAEA30", Offset = "0xDAEA30", VA = "0xDAEA30")]
	private void setScaleRecursive(LTSeq seq, float timeScale, int count)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xDAEAD4", Offset = "0xDAEAD4", VA = "0xDAEAD4")]
	public LTSeq reverse()
	{
		return null;
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xDAEAD8", Offset = "0xDAEAD8", VA = "0xDAEAD8")]
	public LTSeq()
	{
	}
}
[Token(Token = "0x2000244")]
public class LeanAudioStream
{
	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int position;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip audioClip;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] audioArr;

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xDB47A4", Offset = "0xDB47A4", VA = "0xDB47A4")]
	public LeanAudioStream(float[] audioArr)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xDB4F98", Offset = "0xDB4F98", VA = "0xDB4F98")]
	public void OnAudioRead(float[] data)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xDB501C", Offset = "0xDB501C", VA = "0xDB501C")]
	public void OnAudioSetPosition(int newPosition)
	{
	}
}
[Token(Token = "0x2000245")]
public class LeanAudio
{
	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MIN_FREQEUNCY_PERIOD;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int PROCESSING_ITERATIONS_MAX;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] generatedWaveDistances;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int generatedWaveDistancesCount;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float[] longList;

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xDB3B28", Offset = "0xDB3B28", VA = "0xDB3B28")]
	public static LeanAudioOptions options()
	{
		return null;
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xDB3C4C", Offset = "0xDB3C4C", VA = "0xDB3C4C")]
	public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xDB46E4", Offset = "0xDB46E4", VA = "0xDB46E4")]
	public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, [Optional] LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xDB3D20", Offset = "0xDB3D20", VA = "0xDB3D20")]
	private static int createAudioWave(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options)
	{
		return default(int);
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xDB4198", Offset = "0xDB4198", VA = "0xDB4198")]
	private static AudioClip createAudioFromWave(int waveLength, LeanAudioOptions options)
	{
		return null;
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xDB47D0", Offset = "0xDB47D0", VA = "0xDB47D0")]
	private static void OnAudioSetPosition(int newPosition)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xDB47D4", Offset = "0xDB47D4", VA = "0xDB47D4")]
	public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100)
	{
		return null;
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xDB4938", Offset = "0xDB4938", VA = "0xDB4938")]
	public static AudioSource play(AudioClip audio, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xDB4B38", Offset = "0xDB4B38", VA = "0xDB4B38")]
	public static AudioSource play(AudioClip audio)
	{
		return null;
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xDB4BEC", Offset = "0xDB4BEC", VA = "0xDB4BEC")]
	public static AudioSource play(AudioClip audio, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xDB4C78", Offset = "0xDB4C78", VA = "0xDB4C78")]
	public static AudioSource play(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xDB4A10", Offset = "0xDB4A10", VA = "0xDB4A10")]
	public static AudioSource playClipAt(AudioClip clip, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xDB4D38", Offset = "0xDB4D38", VA = "0xDB4D38")]
	public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1f)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xDB4EC8", Offset = "0xDB4EC8", VA = "0xDB4EC8")]
	public LeanAudio()
	{
	}
}
[Token(Token = "0x2000246")]
public class LeanAudioOptions
{
	[Token(Token = "0x2000633")]
	public enum LeanAudioWaveStyle
	{
		[Token(Token = "0x4002C26")]
		Sine,
		[Token(Token = "0x4002C27")]
		Square,
		[Token(Token = "0x4002C28")]
		Sawtooth,
		[Token(Token = "0x4002C29")]
		Noise
	}

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LeanAudioWaveStyle waveStyle;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vibrato;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] modulation;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int frequencyRate;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float waveNoiseScale;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waveNoiseInfluence;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useSetData;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LeanAudioStream stream;

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xDB3C28", Offset = "0xDB3C28", VA = "0xDB3C28")]
	public LeanAudioOptions()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xDB4F44", Offset = "0xDB4F44", VA = "0xDB4F44")]
	public LeanAudioOptions setFrequency(int frequencyRate)
	{
		return null;
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xDB4F4C", Offset = "0xDB4F4C", VA = "0xDB4F4C")]
	public LeanAudioOptions setVibrato(Vector3[] vibrato)
	{
		return null;
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xDB4F54", Offset = "0xDB4F54", VA = "0xDB4F54")]
	public LeanAudioOptions setWaveSine()
	{
		return null;
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xDB4F5C", Offset = "0xDB4F5C", VA = "0xDB4F5C")]
	public LeanAudioOptions setWaveSquare()
	{
		return null;
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xDB4F68", Offset = "0xDB4F68", VA = "0xDB4F68")]
	public LeanAudioOptions setWaveSawtooth()
	{
		return null;
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xDB4F74", Offset = "0xDB4F74", VA = "0xDB4F74")]
	public LeanAudioOptions setWaveNoise()
	{
		return null;
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xDB4F80", Offset = "0xDB4F80", VA = "0xDB4F80")]
	public LeanAudioOptions setWaveStyle(LeanAudioWaveStyle style)
	{
		return null;
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xDB4F88", Offset = "0xDB4F88", VA = "0xDB4F88")]
	public LeanAudioOptions setWaveNoiseScale(float waveScale)
	{
		return null;
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xDB4F90", Offset = "0xDB4F90", VA = "0xDB4F90")]
	public LeanAudioOptions setWaveNoiseInfluence(float influence)
	{
		return null;
	}
}
[Token(Token = "0x2000247")]
public class LeanSmooth
{
	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xDB5024", Offset = "0xDB5024", VA = "0xDB5024")]
	public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xDB51C0", Offset = "0xDB51C0", VA = "0xDB51C0")]
	public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xDB529C", Offset = "0xDB529C", VA = "0xDB529C")]
	public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xDB5398", Offset = "0xDB5398", VA = "0xDB5398")]
	public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(float);
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xDB54BC", Offset = "0xDB54BC", VA = "0xDB54BC")]
	public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xDB55B8", Offset = "0xDB55B8", VA = "0xDB55B8")]
	public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xDB56E0", Offset = "0xDB56E0", VA = "0xDB56E0")]
	public static float linear(float current, float target, float moveSpeed, float deltaTime = -1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xDB5758", Offset = "0xDB5758", VA = "0xDB5758")]
	public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xDB58B0", Offset = "0xDB58B0", VA = "0xDB58B0")]
	public static Color linear(Color current, Color target, float moveSpeed)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xDB5A28", Offset = "0xDB5A28", VA = "0xDB5A28")]
	public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(float);
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xDB5B84", Offset = "0xDB5B84", VA = "0xDB5B84")]
	public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xDB5C88", Offset = "0xDB5C88", VA = "0xDB5C88")]
	public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1f, float deltaTime = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return default(Color);
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xDB5DC0", Offset = "0xDB5DC0", VA = "0xDB5DC0")]
	public LeanSmooth()
	{
	}
}
[Token(Token = "0x2000248")]
public class LeanTester : MonoBehaviour
{
	[Token(Token = "0x2000634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D548", Offset = "0x85D548")]
	private sealed class <timeoutCheck>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeanTester <>4__this;

		[Token(Token = "0x4002C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <pauseEndTime>5__2;

		[Token(Token = "0x170003E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0xDB6D8C", Offset = "0xDB6D8C", VA = "0xDB6D8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0xDB6DF4", Offset = "0xDB6DF4", VA = "0xDB6DF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0xDB6BEC", Offset = "0xDB6BEC", VA = "0xDB6BEC")]
		[DebuggerHidden]
		public <timeoutCheck>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0xDB6C28", Offset = "0xDB6C28", VA = "0xDB6C28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0xDB6C2C", Offset = "0xDB6C2C", VA = "0xDB6C2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0xDB6D94", Offset = "0xDB6D94", VA = "0xDB6D94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeout;

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xDB6B50", Offset = "0xDB6B50", VA = "0xDB6B50")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xDB6B7C", Offset = "0xDB6B7C", VA = "0xDB6B7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x86FF08", Offset = "0x86FF08")]
	private IEnumerator timeoutCheck()
	{
		return null;
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xDB6C18", Offset = "0xDB6C18", VA = "0xDB6C18")]
	public LeanTester()
	{
	}
}
[Token(Token = "0x2000249")]
public class LeanTest
{
	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int expected;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int tests;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int passes;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float timeout;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool timeoutStarted;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool testsFinished;

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xDB5DC8", Offset = "0xDB5DC8", VA = "0xDB5DC8")]
	public static void debug(string name, bool didPass, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xDB5E44", Offset = "0xDB5E44", VA = "0xDB5E44")]
	public static void expect(bool didPass, string definition, [Optional] string failExplaination)
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xDB69DC", Offset = "0xDB69DC", VA = "0xDB69DC")]
	public static string padRight(int len)
	{
		return null;
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xDB63D8", Offset = "0xDB63D8", VA = "0xDB63D8")]
	public static float printOutLength(string str)
	{
		return default(float);
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xDB6A4C", Offset = "0xDB6A4C", VA = "0xDB6A4C")]
	public static string formatBC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xDB6508", Offset = "0xDB6508", VA = "0xDB6508")]
	public static string formatB(string str)
	{
		return null;
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xDB6568", Offset = "0xDB6568", VA = "0xDB6568")]
	public static string formatC(string str, string color)
	{
		return null;
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xDB66DC", Offset = "0xDB66DC", VA = "0xDB66DC")]
	public static void overview()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xDB6AC4", Offset = "0xDB6AC4", VA = "0xDB6AC4")]
	public LeanTest()
	{
	}
}
[Token(Token = "0x200024A")]
public enum TweenAction
{
	[Token(Token = "0x400107C")]
	MOVE_X,
	[Token(Token = "0x400107D")]
	MOVE_Y,
	[Token(Token = "0x400107E")]
	MOVE_Z,
	[Token(Token = "0x400107F")]
	MOVE_LOCAL_X,
	[Token(Token = "0x4001080")]
	MOVE_LOCAL_Y,
	[Token(Token = "0x4001081")]
	MOVE_LOCAL_Z,
	[Token(Token = "0x4001082")]
	MOVE_CURVED,
	[Token(Token = "0x4001083")]
	MOVE_CURVED_LOCAL,
	[Token(Token = "0x4001084")]
	MOVE_SPLINE,
	[Token(Token = "0x4001085")]
	MOVE_SPLINE_LOCAL,
	[Token(Token = "0x4001086")]
	SCALE_X,
	[Token(Token = "0x4001087")]
	SCALE_Y,
	[Token(Token = "0x4001088")]
	SCALE_Z,
	[Token(Token = "0x4001089")]
	ROTATE_X,
	[Token(Token = "0x400108A")]
	ROTATE_Y,
	[Token(Token = "0x400108B")]
	ROTATE_Z,
	[Token(Token = "0x400108C")]
	ROTATE_AROUND,
	[Token(Token = "0x400108D")]
	ROTATE_AROUND_LOCAL,
	[Token(Token = "0x400108E")]
	CANVAS_ROTATEAROUND,
	[Token(Token = "0x400108F")]
	CANVAS_ROTATEAROUND_LOCAL,
	[Token(Token = "0x4001090")]
	CANVAS_PLAYSPRITE,
	[Token(Token = "0x4001091")]
	ALPHA,
	[Token(Token = "0x4001092")]
	TEXT_ALPHA,
	[Token(Token = "0x4001093")]
	CANVAS_ALPHA,
	[Token(Token = "0x4001094")]
	CANVASGROUP_ALPHA,
	[Token(Token = "0x4001095")]
	ALPHA_VERTEX,
	[Token(Token = "0x4001096")]
	COLOR,
	[Token(Token = "0x4001097")]
	CALLBACK_COLOR,
	[Token(Token = "0x4001098")]
	TEXT_COLOR,
	[Token(Token = "0x4001099")]
	CANVAS_COLOR,
	[Token(Token = "0x400109A")]
	CANVAS_MOVE_X,
	[Token(Token = "0x400109B")]
	CANVAS_MOVE_Y,
	[Token(Token = "0x400109C")]
	CANVAS_MOVE_Z,
	[Token(Token = "0x400109D")]
	CALLBACK,
	[Token(Token = "0x400109E")]
	MOVE,
	[Token(Token = "0x400109F")]
	MOVE_LOCAL,
	[Token(Token = "0x40010A0")]
	MOVE_TO_TRANSFORM,
	[Token(Token = "0x40010A1")]
	ROTATE,
	[Token(Token = "0x40010A2")]
	ROTATE_LOCAL,
	[Token(Token = "0x40010A3")]
	SCALE,
	[Token(Token = "0x40010A4")]
	VALUE3,
	[Token(Token = "0x40010A5")]
	GUI_MOVE,
	[Token(Token = "0x40010A6")]
	GUI_MOVE_MARGIN,
	[Token(Token = "0x40010A7")]
	GUI_SCALE,
	[Token(Token = "0x40010A8")]
	GUI_ALPHA,
	[Token(Token = "0x40010A9")]
	GUI_ROTATE,
	[Token(Token = "0x40010AA")]
	DELAYED_SOUND,
	[Token(Token = "0x40010AB")]
	CANVAS_MOVE,
	[Token(Token = "0x40010AC")]
	CANVAS_SCALE,
	[Token(Token = "0x40010AD")]
	CANVAS_SIZEDELTA,
	[Token(Token = "0x40010AE")]
	FOLLOW
}
[Token(Token = "0x200024B")]
public enum LeanTweenType
{
	[Token(Token = "0x40010B0")]
	notUsed,
	[Token(Token = "0x40010B1")]
	linear,
	[Token(Token = "0x40010B2")]
	easeOutQuad,
	[Token(Token = "0x40010B3")]
	easeInQuad,
	[Token(Token = "0x40010B4")]
	easeInOutQuad,
	[Token(Token = "0x40010B5")]
	easeInCubic,
	[Token(Token = "0x40010B6")]
	easeOutCubic,
	[Token(Token = "0x40010B7")]
	easeInOutCubic,
	[Token(Token = "0x40010B8")]
	easeInQuart,
	[Token(Token = "0x40010B9")]
	easeOutQuart,
	[Token(Token = "0x40010BA")]
	easeInOutQuart,
	[Token(Token = "0x40010BB")]
	easeInQuint,
	[Token(Token = "0x40010BC")]
	easeOutQuint,
	[Token(Token = "0x40010BD")]
	easeInOutQuint,
	[Token(Token = "0x40010BE")]
	easeInSine,
	[Token(Token = "0x40010BF")]
	easeOutSine,
	[Token(Token = "0x40010C0")]
	easeInOutSine,
	[Token(Token = "0x40010C1")]
	easeInExpo,
	[Token(Token = "0x40010C2")]
	easeOutExpo,
	[Token(Token = "0x40010C3")]
	easeInOutExpo,
	[Token(Token = "0x40010C4")]
	easeInCirc,
	[Token(Token = "0x40010C5")]
	easeOutCirc,
	[Token(Token = "0x40010C6")]
	easeInOutCirc,
	[Token(Token = "0x40010C7")]
	easeInBounce,
	[Token(Token = "0x40010C8")]
	easeOutBounce,
	[Token(Token = "0x40010C9")]
	easeInOutBounce,
	[Token(Token = "0x40010CA")]
	easeInBack,
	[Token(Token = "0x40010CB")]
	easeOutBack,
	[Token(Token = "0x40010CC")]
	easeInOutBack,
	[Token(Token = "0x40010CD")]
	easeInElastic,
	[Token(Token = "0x40010CE")]
	easeOutElastic,
	[Token(Token = "0x40010CF")]
	easeInOutElastic,
	[Token(Token = "0x40010D0")]
	easeSpring,
	[Token(Token = "0x40010D1")]
	easeShake,
	[Token(Token = "0x40010D2")]
	punch,
	[Token(Token = "0x40010D3")]
	once,
	[Token(Token = "0x40010D4")]
	clamp,
	[Token(Token = "0x40010D5")]
	pingPong,
	[Token(Token = "0x40010D6")]
	animationCurve
}
[Token(Token = "0x200024C")]
public enum LeanProp
{
	[Token(Token = "0x40010D8")]
	position,
	[Token(Token = "0x40010D9")]
	localPosition,
	[Token(Token = "0x40010DA")]
	x,
	[Token(Token = "0x40010DB")]
	y,
	[Token(Token = "0x40010DC")]
	z,
	[Token(Token = "0x40010DD")]
	localX,
	[Token(Token = "0x40010DE")]
	localY,
	[Token(Token = "0x40010DF")]
	localZ,
	[Token(Token = "0x40010E0")]
	scale,
	[Token(Token = "0x40010E1")]
	color
}
[Token(Token = "0x200024D")]
public class LeanTween : MonoBehaviour
{
	[Token(Token = "0x2000635")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D558", Offset = "0x85D558")]
	private sealed class <>c__DisplayClass193_0
	{
		[Token(Token = "0x4002C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4002C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x4002C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0xDC131C", Offset = "0xDC131C", VA = "0xDC131C")]
		public <>c__DisplayClass193_0()
		{
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0xDC2CA0", Offset = "0xDC2CA0", VA = "0xDC2CA0")]
		internal void <followDamp>b__0()
		{
		}

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0xDC2E08", Offset = "0xDC2E08", VA = "0xDC2E08")]
		internal void <followDamp>b__1()
		{
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0xDC2F70", Offset = "0xDC2F70", VA = "0xDC2F70")]
		internal void <followDamp>b__2()
		{
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0xDC3098", Offset = "0xDC3098", VA = "0xDC3098")]
		internal void <followDamp>b__3()
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0xDC31C0", Offset = "0xDC31C0", VA = "0xDC31C0")]
		internal void <followDamp>b__4()
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0xDC32E8", Offset = "0xDC32E8", VA = "0xDC32E8")]
		internal void <followDamp>b__5()
		{
		}

		[Token(Token = "0x6002AC9")]
		[Address(RVA = "0xDC3410", Offset = "0xDC3410", VA = "0xDC3410")]
		internal void <followDamp>b__6()
		{
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0xDC3538", Offset = "0xDC3538", VA = "0xDC3538")]
		internal void <followDamp>b__7()
		{
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0xDC3660", Offset = "0xDC3660", VA = "0xDC3660")]
		internal void <followDamp>b__8()
		{
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0xDC3744", Offset = "0xDC3744", VA = "0xDC3744")]
		internal void <followDamp>b__9()
		{
		}
	}

	[Token(Token = "0x2000636")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D568", Offset = "0x85D568")]
	private sealed class <>c__DisplayClass194_0
	{
		[Token(Token = "0x4002C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4002C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x4002C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x4002C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float friction;

		[Token(Token = "0x4002C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accelRate;

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0xDC1610", Offset = "0xDC1610", VA = "0xDC1610")]
		public <>c__DisplayClass194_0()
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0xDC3904", Offset = "0xDC3904", VA = "0xDC3904")]
		internal void <followSpring>b__0()
		{
		}

		[Token(Token = "0x6002ACF")]
		[Address(RVA = "0xDC3A78", Offset = "0xDC3A78", VA = "0xDC3A78")]
		internal void <followSpring>b__1()
		{
		}

		[Token(Token = "0x6002AD0")]
		[Address(RVA = "0xDC3B70", Offset = "0xDC3B70", VA = "0xDC3B70")]
		internal void <followSpring>b__2()
		{
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0xDC3C24", Offset = "0xDC3C24", VA = "0xDC3C24")]
		internal void <followSpring>b__3()
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0xDC3CD8", Offset = "0xDC3CD8", VA = "0xDC3CD8")]
		internal void <followSpring>b__4()
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0xDC3D8C", Offset = "0xDC3D8C", VA = "0xDC3D8C")]
		internal void <followSpring>b__5()
		{
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0xDC3E40", Offset = "0xDC3E40", VA = "0xDC3E40")]
		internal void <followSpring>b__6()
		{
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0xDC3EF4", Offset = "0xDC3EF4", VA = "0xDC3EF4")]
		internal void <followSpring>b__7()
		{
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0xDC3FA8", Offset = "0xDC3FA8", VA = "0xDC3FA8")]
		internal void <followSpring>b__8()
		{
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0xDC40A0", Offset = "0xDC40A0", VA = "0xDC40A0")]
		internal void <followSpring>b__9()
		{
		}
	}

	[Token(Token = "0x2000637")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D578", Offset = "0x85D578")]
	private sealed class <>c__DisplayClass195_0
	{
		[Token(Token = "0x4002C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4002C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothTime;

		[Token(Token = "0x4002C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSpeed;

		[Token(Token = "0x4002C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float friction;

		[Token(Token = "0x4002C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float accelRate;

		[Token(Token = "0x4002C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hitDamping;

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0xDC18F4", Offset = "0xDC18F4", VA = "0xDC18F4")]
		public <>c__DisplayClass195_0()
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0xDC41FC", Offset = "0xDC41FC", VA = "0xDC41FC")]
		internal void <followBounceOut>b__0()
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0xDC4378", Offset = "0xDC4378", VA = "0xDC4378")]
		internal void <followBounceOut>b__1()
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0xDC44F4", Offset = "0xDC44F4", VA = "0xDC44F4")]
		internal void <followBounceOut>b__2()
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0xDC45AC", Offset = "0xDC45AC", VA = "0xDC45AC")]
		internal void <followBounceOut>b__3()
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0xDC4664", Offset = "0xDC4664", VA = "0xDC4664")]
		internal void <followBounceOut>b__4()
		{
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0xDC471C", Offset = "0xDC471C", VA = "0xDC471C")]
		internal void <followBounceOut>b__5()
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0xDC47D4", Offset = "0xDC47D4", VA = "0xDC47D4")]
		internal void <followBounceOut>b__6()
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0xDC488C", Offset = "0xDC488C", VA = "0xDC488C")]
		internal void <followBounceOut>b__7()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0xDC4944", Offset = "0xDC4944", VA = "0xDC4944")]
		internal void <followBounceOut>b__8()
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0xDC4A44", Offset = "0xDC4A44", VA = "0xDC4A44")]
		internal void <followBounceOut>b__9()
		{
		}
	}

	[Token(Token = "0x2000638")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D588", Offset = "0x85D588")]
	private sealed class <>c__DisplayClass196_0
	{
		[Token(Token = "0x4002C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LTDescr d;

		[Token(Token = "0x4002C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float moveSpeed;

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0xDC1BB8", Offset = "0xDC1BB8", VA = "0xDC1BB8")]
		public <>c__DisplayClass196_0()
		{
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0xDC4BA8", Offset = "0xDC4BA8", VA = "0xDC4BA8")]
		internal void <followLinear>b__0()
		{
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0xDC4CCC", Offset = "0xDC4CCC", VA = "0xDC4CCC")]
		internal void <followLinear>b__1()
		{
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0xDC4D6C", Offset = "0xDC4D6C", VA = "0xDC4D6C")]
		internal void <followLinear>b__2()
		{
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0xDC4E24", Offset = "0xDC4E24", VA = "0xDC4E24")]
		internal void <followLinear>b__3()
		{
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0xDC4EDC", Offset = "0xDC4EDC", VA = "0xDC4EDC")]
		internal void <followLinear>b__4()
		{
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0xDC4F94", Offset = "0xDC4F94", VA = "0xDC4F94")]
		internal void <followLinear>b__5()
		{
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0xDC504C", Offset = "0xDC504C", VA = "0xDC504C")]
		internal void <followLinear>b__6()
		{
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0xDC5104", Offset = "0xDC5104", VA = "0xDC5104")]
		internal void <followLinear>b__7()
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0xDC51BC", Offset = "0xDC51BC", VA = "0xDC51BC")]
		internal void <followLinear>b__8()
		{
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0xDC525C", Offset = "0xDC525C", VA = "0xDC525C")]
		internal void <followLinear>b__9()
		{
		}
	}

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool throwErrors;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float tau;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PI_DIV2;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTSeq[] sequences;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static LTDescr[] tweens;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] tweensFinished;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] tweensFinishedIds;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static LTDescr tween;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int tweenMaxSearch;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int maxTweens;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int maxSequences;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static int frameRendered;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static GameObject _tweenEmpty;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float dtEstimated;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float dtManual;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float dtActual;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static uint global_counter;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int i;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static int j;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static int finishedCnt;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static AnimationCurve punch;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static AnimationCurve shake;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static int maxTweenReached;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int startSearch;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static LTDescr d;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Action<LTEvent>[] eventListeners;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static GameObject[] goListeners;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static int eventsMaxSearch;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int EVENTS_MAX;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int LISTENERS_MAX;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private static int INIT_LISTENERS_MAX;

	[Token(Token = "0x17000136")]
	public static int maxSearch
	{
		[Token(Token = "0x6001009")]
		[Address(RVA = "0xDB6ED4", Offset = "0xDB6ED4", VA = "0xDB6ED4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000137")]
	public static int maxSimulataneousTweens
	{
		[Token(Token = "0x600100A")]
		[Address(RVA = "0xDB6F3C", Offset = "0xDB6F3C", VA = "0xDB6F3C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000138")]
	public static int tweensRunning
	{
		[Token(Token = "0x600100B")]
		[Address(RVA = "0xDB6FA4", Offset = "0xDB6FA4", VA = "0xDB6FA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000139")]
	public static GameObject tweenEmpty
	{
		[Token(Token = "0x6001036")]
		[Address(RVA = "0xDBB0A8", Offset = "0xDBB0A8", VA = "0xDBB0A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xDB6DFC", Offset = "0xDB6DFC", VA = "0xDB6DFC")]
	public static void init()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xDB6E64", Offset = "0xDB6E64", VA = "0xDB6E64")]
	public static void init(int maxSimultaneousTweens)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xDB7084", Offset = "0xDB7084", VA = "0xDB7084")]
	public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences)
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xDB7474", Offset = "0xDB7474", VA = "0xDB7474")]
	public static void reset()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xDB7600", Offset = "0xDB7600", VA = "0xDB7600")]
	public void Update()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xDB7B30", Offset = "0xDB7B30", VA = "0xDB7B30")]
	private static void onLevelWasLoaded54(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xDB7BA0", Offset = "0xDB7BA0", VA = "0xDB7BA0")]
	private static void internalOnLevelWasLoaded(int lvl)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xDB765C", Offset = "0xDB765C", VA = "0xDB765C")]
	public static void update()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xDB8000", Offset = "0xDB8000", VA = "0xDB8000")]
	public static void removeTween(int i, int uniqueId)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xDB7C00", Offset = "0xDB7C00", VA = "0xDB7C00")]
	public static void removeTween(int i)
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xDB80E0", Offset = "0xDB80E0", VA = "0xDB80E0")]
	public static Vector3[] add(Vector3[] a, Vector3 b)
	{
		return null;
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xDB829C", Offset = "0xDB829C", VA = "0xDB829C")]
	public static float closestRot(float from, float to)
	{
		return default(float);
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xDB835C", Offset = "0xDB835C", VA = "0xDB835C")]
	public static void cancelAll()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xDB83BC", Offset = "0xDB83BC", VA = "0xDB83BC")]
	public static void cancelAll(bool callComplete)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xDB85B8", Offset = "0xDB85B8", VA = "0xDB85B8")]
	public static void cancel(GameObject gameObject)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xDB8620", Offset = "0xDB8620", VA = "0xDB8620")]
	public static void cancel(GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xDB87B4", Offset = "0xDB87B4", VA = "0xDB87B4")]
	public static void cancel(RectTransform rect)
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xDB8838", Offset = "0xDB8838", VA = "0xDB8838")]
	public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xDB8AE4", Offset = "0xDB8AE4", VA = "0xDB8AE4")]
	public static void cancel(LTRect ltRect, int uniqueId)
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xDB8C1C", Offset = "0xDB8C1C", VA = "0xDB8C1C")]
	public static void cancel(int uniqueId)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xDB8C84", Offset = "0xDB8C84", VA = "0xDB8C84")]
	public static void cancel(int uniqueId, bool callOnComplete)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xDB8F20", Offset = "0xDB8F20", VA = "0xDB8F20")]
	public static LTDescr descr(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xDB91BC", Offset = "0xDB91BC", VA = "0xDB91BC")]
	public static LTDescr description(int uniqueId)
	{
		return null;
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xDB9220", Offset = "0xDB9220", VA = "0xDB9220")]
	public static LTDescr[] descriptions([Optional] GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xDB945C", Offset = "0xDB945C", VA = "0xDB945C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x86FF6C", Offset = "0x86FF6C")]
	public static void pause(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xDB94C0", Offset = "0xDB94C0", VA = "0xDB94C0")]
	public static void pause(int uniqueId)
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xDB95C4", Offset = "0xDB95C4", VA = "0xDB95C4")]
	public static void pause(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xDB9738", Offset = "0xDB9738", VA = "0xDB9738")]
	public static void pauseAll()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xDB9824", Offset = "0xDB9824", VA = "0xDB9824")]
	public static void resumeAll()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xDB9910", Offset = "0xDB9910", VA = "0xDB9910")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x86FFA4", Offset = "0x86FFA4")]
	public static void resume(GameObject gameObject, int uniqueId)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xDB9974", Offset = "0xDB9974", VA = "0xDB9974")]
	public static void resume(int uniqueId)
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xDB9A78", Offset = "0xDB9A78", VA = "0xDB9A78")]
	public static void resume(GameObject gameObject)
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xDB9BEC", Offset = "0xDB9BEC", VA = "0xDB9BEC")]
	public static bool isPaused([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xDB9E9C", Offset = "0xDB9E9C", VA = "0xDB9E9C")]
	public static bool isPaused(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xDBA148", Offset = "0xDBA148", VA = "0xDBA148")]
	public static bool isPaused(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xDB9F1C", Offset = "0xDB9F1C", VA = "0xDB9F1C")]
	public static bool isTweening([Optional] GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xDBA2B4", Offset = "0xDBA2B4", VA = "0xDBA2B4")]
	public static bool isTweening(RectTransform rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xDBA334", Offset = "0xDBA334", VA = "0xDBA334")]
	public static bool isTweening(int uniqueId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xDBA460", Offset = "0xDBA460", VA = "0xDBA460")]
	public static bool isTweening(LTRect ltRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xDBA59C", Offset = "0xDBA59C", VA = "0xDBA59C")]
	public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0f, [Optional] Transform arrowTransform)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xDAEF10", Offset = "0xDAEF10", VA = "0xDAEF10")]
	public static object logError(string error)
	{
		return null;
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xDBAC30", Offset = "0xDBAC30", VA = "0xDBAC30")]
	public static LTDescr options(LTDescr seed)
	{
		return null;
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xDBACA4", Offset = "0xDBACA4", VA = "0xDBACA4")]
	public static LTDescr options()
	{
		return null;
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xDBB120", Offset = "0xDBB120", VA = "0xDBB120")]
	private static LTDescr pushNewTween(GameObject gameObject, Vector3 to, float time, LTDescr tween)
	{
		return null;
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xDBB238", Offset = "0xDBB238", VA = "0xDBB238")]
	public static LTDescr play(RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xDAE03C", Offset = "0xDAE03C", VA = "0xDAE03C")]
	public static LTSeq sequence(bool initSequence = true)
	{
		return null;
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xDBB354", Offset = "0xDBB354", VA = "0xDBB354")]
	public static LTDescr alpha(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xDBB440", Offset = "0xDBB440", VA = "0xDBB440")]
	public static LTDescr alpha(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xDBB528", Offset = "0xDBB528", VA = "0xDBB528")]
	public static LTDescr textAlpha(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xDBB600", Offset = "0xDBB600", VA = "0xDBB600")]
	public static LTDescr alphaText(RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xDBB6D8", Offset = "0xDBB6D8", VA = "0xDBB6D8")]
	public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xDBB7B0", Offset = "0xDBB7B0", VA = "0xDBB7B0")]
	public static LTDescr alphaVertex(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xDBB874", Offset = "0xDBB874", VA = "0xDBB874")]
	public static LTDescr color(GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xDBB9B8", Offset = "0xDBB9B8", VA = "0xDBB9B8")]
	public static LTDescr textColor(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xDBBAE8", Offset = "0xDBBAE8", VA = "0xDBBAE8")]
	public static LTDescr colorText(RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xDAE3B4", Offset = "0xDAE3B4", VA = "0xDAE3B4")]
	public static LTDescr delayedCall(float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xDAE5AC", Offset = "0xDAE5AC", VA = "0xDAE5AC")]
	public static LTDescr delayedCall(float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xDAE72C", Offset = "0xDAE72C", VA = "0xDAE72C")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xDAE8CC", Offset = "0xDAE8CC", VA = "0xDAE8CC")]
	public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xDBBC18", Offset = "0xDBBC18", VA = "0xDBBC18")]
	public static LTDescr destroyAfter(LTRect rect, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xDBBD18", Offset = "0xDBBD18", VA = "0xDBBD18")]
	public static LTDescr move(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xDBBDC4", Offset = "0xDBBDC4", VA = "0xDBBDC4")]
	public static LTDescr move(GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xDBBEAC", Offset = "0xDBBEAC", VA = "0xDBBEAC")]
	public static LTDescr move(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xDBC060", Offset = "0xDBC060", VA = "0xDBC060")]
	public static LTDescr move(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xDBC158", Offset = "0xDBC158", VA = "0xDBC158")]
	public static LTDescr move(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xDBC250", Offset = "0xDBC250", VA = "0xDBC250")]
	public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xDBC384", Offset = "0xDBC384", VA = "0xDBC384")]
	public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xDBC47C", Offset = "0xDBC47C", VA = "0xDBC47C")]
	public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xDBC5B0", Offset = "0xDBC5B0", VA = "0xDBC5B0")]
	public static LTDescr move(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xDBC6B0", Offset = "0xDBC6B0", VA = "0xDBC6B0")]
	public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xDBC7B0", Offset = "0xDBC7B0", VA = "0xDBC7B0")]
	public static LTDescr moveX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xDBC874", Offset = "0xDBC874", VA = "0xDBC874")]
	public static LTDescr moveY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xDBC938", Offset = "0xDBC938", VA = "0xDBC938")]
	public static LTDescr moveZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xDBC9FC", Offset = "0xDBC9FC", VA = "0xDBC9FC")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xDBCAA8", Offset = "0xDBCAA8", VA = "0xDBCAA8")]
	public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xDBCC5C", Offset = "0xDBCC5C", VA = "0xDBCC5C")]
	public static LTDescr moveLocalX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xDBCD20", Offset = "0xDBCD20", VA = "0xDBCD20")]
	public static LTDescr moveLocalY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xDBCDE4", Offset = "0xDBCDE4", VA = "0xDBCDE4")]
	public static LTDescr moveLocalZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xDBCEA8", Offset = "0xDBCEA8", VA = "0xDBCEA8")]
	public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xDBCFA0", Offset = "0xDBCFA0", VA = "0xDBCFA0")]
	public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xDBD098", Offset = "0xDBD098", VA = "0xDBD098")]
	public static LTDescr move(GameObject gameObject, Transform to, float time)
	{
		return null;
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xDBD188", Offset = "0xDBD188", VA = "0xDBD188")]
	public static LTDescr rotate(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xDBD234", Offset = "0xDBD234", VA = "0xDBD234")]
	public static LTDescr rotate(LTRect ltRect, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xDBD310", Offset = "0xDBD310", VA = "0xDBD310")]
	public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xDBD3BC", Offset = "0xDBD3BC", VA = "0xDBD3BC")]
	public static LTDescr rotateX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xDBD480", Offset = "0xDBD480", VA = "0xDBD480")]
	public static LTDescr rotateY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xDBD544", Offset = "0xDBD544", VA = "0xDBD544")]
	public static LTDescr rotateZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xDBD608", Offset = "0xDBD608", VA = "0xDBD608")]
	public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xDBD700", Offset = "0xDBD700", VA = "0xDBD700")]
	public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xDBD7F8", Offset = "0xDBD7F8", VA = "0xDBD7F8")]
	public static LTDescr scale(GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xDBD8A4", Offset = "0xDBD8A4", VA = "0xDBD8A4")]
	public static LTDescr scale(LTRect ltRect, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xDBD9A4", Offset = "0xDBD9A4", VA = "0xDBD9A4")]
	public static LTDescr scaleX(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xDBDA68", Offset = "0xDBDA68", VA = "0xDBDA68")]
	public static LTDescr scaleY(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xDBDB2C", Offset = "0xDBDB2C", VA = "0xDBDB2C")]
	public static LTDescr scaleZ(GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xDBDBF0", Offset = "0xDBDBF0", VA = "0xDBDBF0")]
	public static LTDescr value(GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xDBDCFC", Offset = "0xDBDCFC", VA = "0xDBDCFC")]
	public static LTDescr value(float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xDBDE0C", Offset = "0xDBDE0C", VA = "0xDBDE0C")]
	public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xDBDF64", Offset = "0xDBDF64", VA = "0xDBDF64")]
	public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xDBE044", Offset = "0xDBE044", VA = "0xDBE044")]
	public static LTDescr value(GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xDBE1CC", Offset = "0xDBE1CC", VA = "0xDBE1CC")]
	public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xDBE330", Offset = "0xDBE330", VA = "0xDBE330")]
	public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xDBE494", Offset = "0xDBE494", VA = "0xDBE494")]
	public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xDBE66C", Offset = "0xDBE66C", VA = "0xDBE66C")]
	public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xDBE844", Offset = "0xDBE844", VA = "0xDBE844")]
	public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xDBE9B8", Offset = "0xDBE9B8", VA = "0xDBE9B8")]
	public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xDBEACC", Offset = "0xDBEACC", VA = "0xDBEACC")]
	public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xDBEC34", Offset = "0xDBEC34", VA = "0xDBEC34")]
	public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xDBED60", Offset = "0xDBED60", VA = "0xDBED60")]
	public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume)
	{
		return null;
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xDBEE88", Offset = "0xDBEE88", VA = "0xDBEE88")]
	public static LTDescr move(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xDBEF5C", Offset = "0xDBEF5C", VA = "0xDBEF5C")]
	public static LTDescr moveX(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xDBF044", Offset = "0xDBF044", VA = "0xDBF044")]
	public static LTDescr moveY(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xDBF12C", Offset = "0xDBF12C", VA = "0xDBF12C")]
	public static LTDescr moveZ(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xDBF214", Offset = "0xDBF214", VA = "0xDBF214")]
	public static LTDescr rotate(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xDBF33C", Offset = "0xDBF33C", VA = "0xDBF33C")]
	public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xDBF450", Offset = "0xDBF450", VA = "0xDBF450")]
	public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xDBF56C", Offset = "0xDBF56C", VA = "0xDBF56C")]
	public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xDBF688", Offset = "0xDBF688", VA = "0xDBF688")]
	public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xDBF75C", Offset = "0xDBF75C", VA = "0xDBF75C")]
	public static LTDescr size(RectTransform rectTrans, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xDBF868", Offset = "0xDBF868", VA = "0xDBF868")]
	public static LTDescr alpha(RectTransform rectTrans, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xDBF950", Offset = "0xDBF950", VA = "0xDBF950")]
	public static LTDescr color(RectTransform rectTrans, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xDBFA90", Offset = "0xDBFA90", VA = "0xDBFA90")]
	public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xDBFADC", Offset = "0xDBFADC", VA = "0xDBFADC")]
	public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xDBFBDC", Offset = "0xDBFBDC", VA = "0xDBFBDC")]
	public static float easeOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xDBFBF4", Offset = "0xDBFBF4", VA = "0xDBFBF4")]
	public static float easeInQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xDBFC04", Offset = "0xDBFC04", VA = "0xDBFC04")]
	public static float easeInOutQuadOpt(float start, float diff, float ratioPassed)
	{
		return default(float);
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xDBFC54", Offset = "0xDBFC54", VA = "0xDBFC54")]
	public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xDBFD90", Offset = "0xDBFD90", VA = "0xDBFD90")]
	public static float linear(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xDBFE18", Offset = "0xDBFE18", VA = "0xDBFE18")]
	public static float clerp(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xDBFEEC", Offset = "0xDBFEEC", VA = "0xDBFEEC")]
	public static float spring(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xDBFFF0", Offset = "0xDBFFF0", VA = "0xDBFFF0")]
	public static float easeInQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xDC0004", Offset = "0xDC0004", VA = "0xDC0004")]
	public static float easeOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xDC0020", Offset = "0xDC0020", VA = "0xDC0020")]
	public static float easeInOutQuad(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xDC0074", Offset = "0xDC0074", VA = "0xDC0074")]
	public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2)
	{
		return default(float);
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xDC00AC", Offset = "0xDC00AC", VA = "0xDC00AC")]
	public static float easeInCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xDC00C4", Offset = "0xDC00C4", VA = "0xDC00C4")]
	public static float easeOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xDC00EC", Offset = "0xDC00EC", VA = "0xDC00EC")]
	public static float easeInOutCubic(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xDC0144", Offset = "0xDC0144", VA = "0xDC0144")]
	public static float easeInQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xDC0160", Offset = "0xDC0160", VA = "0xDC0160")]
	public static float easeOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xDC0188", Offset = "0xDC0188", VA = "0xDC0188")]
	public static float easeInOutQuart(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xDC01E4", Offset = "0xDC01E4", VA = "0xDC01E4")]
	public static float easeInQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xDC0204", Offset = "0xDC0204", VA = "0xDC0204")]
	public static float easeOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xDC0234", Offset = "0xDC0234", VA = "0xDC0234")]
	public static float easeInOutQuint(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xDC029C", Offset = "0xDC029C", VA = "0xDC029C")]
	public static float easeInSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xDC0334", Offset = "0xDC0334", VA = "0xDC0334")]
	public static float easeOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xDC03C8", Offset = "0xDC03C8", VA = "0xDC03C8")]
	public static float easeInOutSine(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xDC046C", Offset = "0xDC046C", VA = "0xDC046C")]
	public static float easeInExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xDC0504", Offset = "0xDC0504", VA = "0xDC0504")]
	public static float easeOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xDC059C", Offset = "0xDC059C", VA = "0xDC059C")]
	public static float easeInOutExpo(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xDC068C", Offset = "0xDC068C", VA = "0xDC068C")]
	public static float easeInCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xDC0738", Offset = "0xDC0738", VA = "0xDC0738")]
	public static float easeOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xDC07E4", Offset = "0xDC07E4", VA = "0xDC07E4")]
	public static float easeInOutCirc(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xDC08DC", Offset = "0xDC08DC", VA = "0xDC08DC")]
	public static float easeInBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xDC0974", Offset = "0xDC0974", VA = "0xDC0974")]
	public static float easeOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xDC0A40", Offset = "0xDC0A40", VA = "0xDC0A40")]
	public static float easeInOutBounce(float start, float end, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xDC0B18", Offset = "0xDC0B18", VA = "0xDC0B18")]
	public static float easeInBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xDC0B4C", Offset = "0xDC0B4C", VA = "0xDC0B4C")]
	public static float easeOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xDC0B8C", Offset = "0xDC0B8C", VA = "0xDC0B8C")]
	public static float easeInOutBack(float start, float end, float val, float overshoot = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xDC0C24", Offset = "0xDC0C24", VA = "0xDC0C24")]
	public static float easeInElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xDC0D58", Offset = "0xDC0D58", VA = "0xDC0D58")]
	public static float easeOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xDC0E7C", Offset = "0xDC0E7C", VA = "0xDC0E7C")]
	public static float easeInOutElastic(float start, float end, float val, float overshoot = 1f, float period = 0.3f)
	{
		return default(float);
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xDC103C", Offset = "0xDC103C", VA = "0xDC103C")]
	public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f)
	{
		return null;
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xDC1324", Offset = "0xDC1324", VA = "0xDC1324")]
	public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xDC1618", Offset = "0xDC1618", VA = "0xDC1618")]
	public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1f, float friction = 2f, float accelRate = 0.5f, float hitDamping = 0.9f)
	{
		return null;
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xDC18FC", Offset = "0xDC18FC", VA = "0xDC18FC")]
	public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed)
	{
		return null;
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xDC1BC0", Offset = "0xDC1BC0", VA = "0xDC1BC0")]
	public static void addListener(int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xDC1C38", Offset = "0xDC1C38", VA = "0xDC1C38")]
	public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xDC20E4", Offset = "0xDC20E4", VA = "0xDC20E4")]
	public static bool removeListener(int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xDC2388", Offset = "0xDC2388", VA = "0xDC2388")]
	public static bool removeListener(int eventId)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xDC215C", Offset = "0xDC215C", VA = "0xDC215C")]
	public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xDC2454", Offset = "0xDC2454", VA = "0xDC2454")]
	public static void dispatchEvent(int eventId)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xDC24BC", Offset = "0xDC24BC", VA = "0xDC24BC")]
	public static void dispatchEvent(int eventId, object data)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xDC26DC", Offset = "0xDC26DC", VA = "0xDC26DC")]
	public LeanTween()
	{
	}
}
[Token(Token = "0x200024E")]
public class LTUtility
{
	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xDB0538", Offset = "0xDB0538", VA = "0xDB0538")]
	public static Vector3[] reverse(Vector3[] arr)
	{
		return null;
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xDB05E0", Offset = "0xDB05E0", VA = "0xDB05E0")]
	public LTUtility()
	{
	}
}
[Token(Token = "0x200024F")]
public class LTBezier
{
	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float length;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 a;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 aa;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 bb;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 cc;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float len;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] arcLengths;

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xB87158", Offset = "0xB87158", VA = "0xB87158")]
	public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xB875A0", Offset = "0xB875A0", VA = "0xB875A0")]
	private float map(float u)
	{
		return default(float);
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xB874C8", Offset = "0xB874C8", VA = "0xB874C8")]
	private Vector3 bezierPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xB876A4", Offset = "0xB876A4", VA = "0xB876A4")]
	public Vector3 point(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000250")]
public class LTBezierPath
{
	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] pts;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float length;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool orientToPath;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool orientToPath2d;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTBezier[] beziers;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] lengthRatio;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentBezier;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int previousBezier;

	[Token(Token = "0x1700013A")]
	public float distance
	{
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xB87A30", Offset = "0xB87A30", VA = "0xB87A30")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xB876C8", Offset = "0xB876C8", VA = "0xB876C8")]
	public LTBezierPath()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xB876D0", Offset = "0xB876D0", VA = "0xB876D0")]
	public LTBezierPath(Vector3[] pts_)
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xB87700", Offset = "0xB87700", VA = "0xB87700")]
	public void setPoints(Vector3[] pts_)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xB87A38", Offset = "0xB87A38", VA = "0xB87A38")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xB87B10", Offset = "0xB87B10", VA = "0xB87B10")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xB87C94", Offset = "0xB87C94", VA = "0xB87C94")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xB87E18", Offset = "0xB87E18", VA = "0xB87E18")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xB87EBC", Offset = "0xB87EBC", VA = "0xB87EBC")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xB87F5C", Offset = "0xB87F5C", VA = "0xB87F5C")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xB88000", Offset = "0xB88000", VA = "0xB88000")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xB88134", Offset = "0xB88134", VA = "0xB88134")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xB88210", Offset = "0xB88210", VA = "0xB88210")]
	public float ratioAtPoint(Vector3 pt, float precision = 0.01f)
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x2000251")]
public class LTSpline
{
	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DISTANCE_COUNT;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int SUBLINE_COUNT;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distance;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool constantSpeed;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pts;

	[NonSerialized]
	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] ptsAdj;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ptsAdjLength;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool orientToPath;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool orientToPath2d;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numSections;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currPt;

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xDAEAE0", Offset = "0xDAEAE0", VA = "0xDAEAE0")]
	public LTSpline(Vector3[] pts)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xDAEEC4", Offset = "0xDAEEC4", VA = "0xDAEEC4")]
	public LTSpline(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xDAEB1C", Offset = "0xDAEB1C", VA = "0xDAEB1C")]
	private void init(Vector3[] pts, bool constantSpeed)
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xDAF410", Offset = "0xDAF410", VA = "0xDAF410")]
	public Vector3 map(float u)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xDAEFD0", Offset = "0xDAEFD0", VA = "0xDAEFD0")]
	public Vector3 interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xDAF5B8", Offset = "0xDAF5B8", VA = "0xDAF5B8")]
	public float ratioAtPoint(Vector3 pt)
	{
		return default(float);
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xDAF6FC", Offset = "0xDAF6FC", VA = "0xDAF6FC")]
	public Vector3 point(float ratio)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xDAF714", Offset = "0xDAF714", VA = "0xDAF714")]
	public void place2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xDAF898", Offset = "0xDAF898", VA = "0xDAF898")]
	public void placeLocal2d(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xDAFA90", Offset = "0xDAFA90", VA = "0xDAFA90")]
	public void place(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xDAFB34", Offset = "0xDAFB34", VA = "0xDAFB34")]
	public void place(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xDAFBD4", Offset = "0xDAFBD4", VA = "0xDAFBD4")]
	public void placeLocal(Transform transform, float ratio)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xDAFC78", Offset = "0xDAFC78", VA = "0xDAFC78")]
	public void placeLocal(Transform transform, float ratio, Vector3 worldUp)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xDAFD48", Offset = "0xDAFD48", VA = "0xDAFD48")]
	public void gizmoDraw(float t = -1f)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xDAFE10", Offset = "0xDAFE10", VA = "0xDAFE10")]
	public void drawGizmo(Color color)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xDAFF74", Offset = "0xDAFF74", VA = "0xDAFF74")]
	public static void drawGizmo(Transform[] arr, Color color)
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xDB01B4", Offset = "0xDB01B4", VA = "0xDB01B4")]
	public static void drawLine(Transform[] arr, float width, Color color)
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xDB01C8", Offset = "0xDB01C8", VA = "0xDB01C8")]
	public void drawLinesGLLines(Material outlineMaterial, Color color, float width)
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xDB03A4", Offset = "0xDB03A4", VA = "0xDB03A4")]
	public Vector3[] generateVectors()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000252")]
public class LTRect
{
	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect _rect;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float alpha;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotation;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 pivot;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 margin;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rect relativeRect;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool rotateEnabled;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool rotateFinished;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool alphaEnabled;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string labelStr;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LTGUI.Element_Type type;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GUIStyle style;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useColor;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color color;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool fontScaleToFit;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useSimpleScale;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool sizeByHeight;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture texture;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _id;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int counter;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool colorTouched;

	[Token(Token = "0x1700013B")]
	public bool hasInitiliazed
	{
		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xB97B20", Offset = "0xB97B20", VA = "0xB97B20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013C")]
	public int id
	{
		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xB98288", Offset = "0xB98288", VA = "0xB98288")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700013D")]
	public float x
	{
		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xB98D74", Offset = "0xB98D74", VA = "0xB98D74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xB98D80", Offset = "0xB98D80", VA = "0xB98D80")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public float y
	{
		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xB98D8C", Offset = "0xB98D8C", VA = "0xB98D8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xB98D98", Offset = "0xB98D98", VA = "0xB98D98")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public float width
	{
		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xB98DA4", Offset = "0xB98DA4", VA = "0xB98DA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xB98DB0", Offset = "0xB98DB0", VA = "0xB98DB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public float height
	{
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xB98DBC", Offset = "0xB98DBC", VA = "0xB98DBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xB98DC8", Offset = "0xB98DC8", VA = "0xB98DC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public Rect rect
	{
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xB95DA8", Offset = "0xB95DA8", VA = "0xB95DA8")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xB98DD4", Offset = "0xB98DD4", VA = "0xB98DD4")]
		set
		{
		}
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xB98984", Offset = "0xB98984", VA = "0xB98984")]
	public LTRect()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xB917CC", Offset = "0xB917CC", VA = "0xB917CC")]
	public LTRect(Rect rect)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xB98AC4", Offset = "0xB98AC4", VA = "0xB98AC4")]
	public LTRect(float x, float y, float width, float height)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xB98B9C", Offset = "0xB98B9C", VA = "0xB98B9C")]
	public LTRect(float x, float y, float width, float height, float alpha)
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xB98C7C", Offset = "0xB98C7C", VA = "0xB98C7C")]
	public LTRect(float x, float y, float width, float height, float alpha, float rotation)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xB98294", Offset = "0xB98294", VA = "0xB98294")]
	public void setId(int id, int counter)
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xB98A3C", Offset = "0xB98A3C", VA = "0xB98A3C")]
	public void reset()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xB963E4", Offset = "0xB963E4", VA = "0xB963E4")]
	public void resetForRotation()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xB98DE0", Offset = "0xB98DE0", VA = "0xB98DE0")]
	public LTRect setStyle(GUIStyle style)
	{
		return null;
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xB98DE8", Offset = "0xB98DE8", VA = "0xB98DE8")]
	public LTRect setFontScaleToFit(bool fontScaleToFit)
	{
		return null;
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xB98DF4", Offset = "0xB98DF4", VA = "0xB98DF4")]
	public LTRect setColor(Color color)
	{
		return null;
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xB98E08", Offset = "0xB98E08", VA = "0xB98E08")]
	public LTRect setAlpha(float alpha)
	{
		return null;
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xB98E10", Offset = "0xB98E10", VA = "0xB98E10")]
	public LTRect setLabel(string str)
	{
		return null;
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xB98E18", Offset = "0xB98E18", VA = "0xB98E18")]
	public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect)
	{
		return null;
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xB98E2C", Offset = "0xB98E2C", VA = "0xB98E2C")]
	public LTRect setUseSimpleScale(bool useSimpleScale)
	{
		return null;
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xB98E98", Offset = "0xB98E98", VA = "0xB98E98")]
	public LTRect setSizeByHeight(bool sizeByHeight)
	{
		return null;
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xB98EA4", Offset = "0xB98EA4", VA = "0xB98EA4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000253")]
public class LTEvent
{
	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public object data;

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xB96940", Offset = "0xB96940", VA = "0xB96940")]
	public LTEvent(int id, object data)
	{
	}
}
[Token(Token = "0x2000254")]
public class LTGUI
{
	[Token(Token = "0x2000639")]
	public enum Element_Type
	{
		[Token(Token = "0x4002C3F")]
		Texture,
		[Token(Token = "0x4002C40")]
		Label
	}

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RECT_LEVELS;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int RECTS_PER_LEVEL;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int BUTTONS_MAX;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static LTRect[] levels;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] levelDepths;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Rect[] buttons;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] buttonLevels;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int[] buttonLastFrame;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static LTRect r;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Color color;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool isGUIEnabled;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static int global_counter;

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xB9697C", Offset = "0xB9697C", VA = "0xB9697C")]
	public static void init()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xB96A50", Offset = "0xB96A50", VA = "0xB96A50")]
	public static void initRectCheck()
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xB96BD0", Offset = "0xB96BD0", VA = "0xB96BD0")]
	public static void reset()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xB96D60", Offset = "0xB96D60", VA = "0xB96D60")]
	public static void update(int updateLevel)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xB978CC", Offset = "0xB978CC", VA = "0xB978CC")]
	public static bool checkOnScreen(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xB979AC", Offset = "0xB979AC", VA = "0xB979AC")]
	public static void destroy(int id)
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xB97B30", Offset = "0xB97B30", VA = "0xB97B30")]
	public static void destroyAll(int depth)
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xB97C34", Offset = "0xB97C34", VA = "0xB97C34")]
	public static LTRect label(Rect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xB97CF4", Offset = "0xB97CF4", VA = "0xB97CF4")]
	public static LTRect label(LTRect rect, string label, int depth)
	{
		return null;
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xB98140", Offset = "0xB98140", VA = "0xB98140")]
	public static LTRect texture(Rect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xB98200", Offset = "0xB98200", VA = "0xB98200")]
	public static LTRect texture(LTRect rect, Texture texture, int depth)
	{
		return null;
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xB97D80", Offset = "0xB97D80", VA = "0xB97D80")]
	public static LTRect element(LTRect rect, int depth)
	{
		return null;
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xB9829C", Offset = "0xB9829C", VA = "0xB9829C")]
	public static bool hasNoOverlap(Rect rect, int depth)
	{
		return default(bool);
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xB985D0", Offset = "0xB985D0", VA = "0xB985D0")]
	public static bool pressedWithinRect(Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xB9880C", Offset = "0xB9880C", VA = "0xB9880C")]
	public static bool checkWithinRect(Vector2 vec2, Rect rect)
	{
		return default(bool);
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xB986F4", Offset = "0xB986F4", VA = "0xB986F4")]
	public static Vector2 firstTouch()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xB988E0", Offset = "0xB988E0", VA = "0xB988E0")]
	public LTGUI()
	{
	}
}
[Token(Token = "0x2000255")]
public static class LeanTweenExt
{
	[Token(Token = "0x6001110")]
	[Address(RVA = "0xDC536C", Offset = "0xDC536C", VA = "0xDC536C")]
	public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xDC53E8", Offset = "0xDC53E8", VA = "0xDC53E8")]
	public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xDC5464", Offset = "0xDC5464", VA = "0xDC5464")]
	public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xDC54E0", Offset = "0xDC54E0", VA = "0xDC54E0")]
	public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xDC555C", Offset = "0xDC555C", VA = "0xDC555C")]
	public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xDC55D8", Offset = "0xDC55D8", VA = "0xDC55D8")]
	public static void LeanCancel(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xDC563C", Offset = "0xDC563C", VA = "0xDC563C")]
	public static void LeanCancel(this GameObject gameObject, bool callOnComplete)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xDC56B0", Offset = "0xDC56B0", VA = "0xDC56B0")]
	public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false)
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xDC572C", Offset = "0xDC572C", VA = "0xDC572C")]
	public static void LeanCancel(this RectTransform rectTransform)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xDC5790", Offset = "0xDC5790", VA = "0xDC5790")]
	public static LTDescr LeanColor(this GameObject gameObject, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xDC5834", Offset = "0xDC5834", VA = "0xDC5834")]
	public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xDC58D8", Offset = "0xDC58D8", VA = "0xDC58D8")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xDC595C", Offset = "0xDC595C", VA = "0xDC595C")]
	public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback)
	{
		return null;
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xDC59E0", Offset = "0xDC59E0", VA = "0xDC59E0")]
	public static bool LeanIsPaused(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xDC5A44", Offset = "0xDC5A44", VA = "0xDC5A44")]
	public static bool LeanIsPaused(this RectTransform rectTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xDC5AA8", Offset = "0xDC5AA8", VA = "0xDC5AA8")]
	public static bool LeanIsTweening(this GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xDC5B0C", Offset = "0xDC5B0C", VA = "0xDC5B0C")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xDC5BA0", Offset = "0xDC5BA0", VA = "0xDC5BA0")]
	public static LTDescr LeanMove(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xDC5C50", Offset = "0xDC5C50", VA = "0xDC5C50")]
	public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xDC5CE4", Offset = "0xDC5CE4", VA = "0xDC5CE4")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xDC5D70", Offset = "0xDC5D70", VA = "0xDC5D70")]
	public static LTDescr LeanMove(this Transform transform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xDC5E18", Offset = "0xDC5E18", VA = "0xDC5E18")]
	public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xDC5E9C", Offset = "0xDC5E9C", VA = "0xDC5E9C")]
	public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xDC5F20", Offset = "0xDC5F20", VA = "0xDC5F20")]
	public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xDC5FA4", Offset = "0xDC5FA4", VA = "0xDC5FA4")]
	public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xDC6044", Offset = "0xDC6044", VA = "0xDC6044")]
	public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xDC60E4", Offset = "0xDC60E4", VA = "0xDC60E4")]
	public static LTDescr LeanMove(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xDC6184", Offset = "0xDC6184", VA = "0xDC6184")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xDC6218", Offset = "0xDC6218", VA = "0xDC6218")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xDC629C", Offset = "0xDC629C", VA = "0xDC629C")]
	public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xDC6320", Offset = "0xDC6320", VA = "0xDC6320")]
	public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xDC63D0", Offset = "0xDC63D0", VA = "0xDC63D0")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xDC6470", Offset = "0xDC6470", VA = "0xDC6470")]
	public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xDC6510", Offset = "0xDC6510", VA = "0xDC6510")]
	public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xDC658C", Offset = "0xDC658C", VA = "0xDC658C")]
	public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xDC6608", Offset = "0xDC6608", VA = "0xDC6608")]
	public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xDC6684", Offset = "0xDC6684", VA = "0xDC6684")]
	public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xDC671C", Offset = "0xDC671C", VA = "0xDC671C")]
	public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xDC67B4", Offset = "0xDC67B4", VA = "0xDC67B4")]
	public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xDC684C", Offset = "0xDC684C", VA = "0xDC684C")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xDC68D0", Offset = "0xDC68D0", VA = "0xDC68D0")]
	public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xDC6954", Offset = "0xDC6954", VA = "0xDC6954")]
	public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xDC69F4", Offset = "0xDC69F4", VA = "0xDC69F4")]
	public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time)
	{
		return null;
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xDC6A94", Offset = "0xDC6A94", VA = "0xDC6A94")]
	public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xDC6B18", Offset = "0xDC6B18", VA = "0xDC6B18")]
	public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time)
	{
		return null;
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xDC6BB8", Offset = "0xDC6BB8", VA = "0xDC6BB8")]
	public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xDC6C34", Offset = "0xDC6C34", VA = "0xDC6C34")]
	public static LTDescr LeanMoveX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xDC6CCC", Offset = "0xDC6CCC", VA = "0xDC6CCC")]
	public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xDC6D48", Offset = "0xDC6D48", VA = "0xDC6D48")]
	public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xDC6DC4", Offset = "0xDC6DC4", VA = "0xDC6DC4")]
	public static LTDescr LeanMoveY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xDC6E5C", Offset = "0xDC6E5C", VA = "0xDC6E5C")]
	public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xDC6ED8", Offset = "0xDC6ED8", VA = "0xDC6ED8")]
	public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xDC6F54", Offset = "0xDC6F54", VA = "0xDC6F54")]
	public static LTDescr LeanMoveZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xDC6FEC", Offset = "0xDC6FEC", VA = "0xDC6FEC")]
	public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xDC7068", Offset = "0xDC7068", VA = "0xDC7068")]
	public static void LeanPause(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xDC70CC", Offset = "0xDC70CC", VA = "0xDC70CC")]
	public static LTDescr LeanPlay(this RectTransform rectTransform, Sprite[] sprites)
	{
		return null;
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xDC7140", Offset = "0xDC7140", VA = "0xDC7140")]
	public static void LeanResume(this GameObject gameObject)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xDC71A4", Offset = "0xDC71A4", VA = "0xDC71A4")]
	public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xDC7238", Offset = "0xDC7238", VA = "0xDC7238")]
	public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xDC72E8", Offset = "0xDC72E8", VA = "0xDC72E8")]
	public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xDC737C", Offset = "0xDC737C", VA = "0xDC737C")]
	public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xDC7420", Offset = "0xDC7420", VA = "0xDC7420")]
	public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xDC74E0", Offset = "0xDC74E0", VA = "0xDC74E0")]
	public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xDC7584", Offset = "0xDC7584", VA = "0xDC7584")]
	public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xDC7628", Offset = "0xDC7628", VA = "0xDC7628")]
	public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xDC76E8", Offset = "0xDC76E8", VA = "0xDC76E8")]
	public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time)
	{
		return null;
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xDC778C", Offset = "0xDC778C", VA = "0xDC778C")]
	public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xDC7808", Offset = "0xDC7808", VA = "0xDC7808")]
	public static LTDescr LeanRotateX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xDC78A0", Offset = "0xDC78A0", VA = "0xDC78A0")]
	public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xDC791C", Offset = "0xDC791C", VA = "0xDC791C")]
	public static LTDescr LeanRotateY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xDC79B4", Offset = "0xDC79B4", VA = "0xDC79B4")]
	public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xDC7A30", Offset = "0xDC7A30", VA = "0xDC7A30")]
	public static LTDescr LeanRotateZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xDC7AC8", Offset = "0xDC7AC8", VA = "0xDC7AC8")]
	public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xDC7B5C", Offset = "0xDC7B5C", VA = "0xDC7B5C")]
	public static LTDescr LeanScale(this Transform transform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xDC7C0C", Offset = "0xDC7C0C", VA = "0xDC7C0C")]
	public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xDC7CA0", Offset = "0xDC7CA0", VA = "0xDC7CA0")]
	public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xDC7D1C", Offset = "0xDC7D1C", VA = "0xDC7D1C")]
	public static LTDescr LeanScaleX(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xDC7DB4", Offset = "0xDC7DB4", VA = "0xDC7DB4")]
	public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xDC7E30", Offset = "0xDC7E30", VA = "0xDC7E30")]
	public static LTDescr LeanScaleY(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xDC7EC8", Offset = "0xDC7EC8", VA = "0xDC7EC8")]
	public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xDC7F44", Offset = "0xDC7F44", VA = "0xDC7F44")]
	public static LTDescr LeanScaleZ(this Transform transform, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xDC7FDC", Offset = "0xDC7FDC", VA = "0xDC7FDC")]
	public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xDC8068", Offset = "0xDC8068", VA = "0xDC8068")]
	public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xDC818C", Offset = "0xDC818C", VA = "0xDC818C")]
	public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xDC8218", Offset = "0xDC8218", VA = "0xDC8218")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xDC82BC", Offset = "0xDC82BC", VA = "0xDC82BC")]
	public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xDC8378", Offset = "0xDC8378", VA = "0xDC8378")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xDC8414", Offset = "0xDC8414", VA = "0xDC8414")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xDC84B0", Offset = "0xDC84B0", VA = "0xDC84B0")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time)
	{
		return null;
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xDC854C", Offset = "0xDC854C", VA = "0xDC854C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time)
	{
		return null;
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xDC8678", Offset = "0xDC8678", VA = "0xDC8678")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xDC872C", Offset = "0xDC872C", VA = "0xDC872C")]
	public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time)
	{
		return null;
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xDC3390", Offset = "0xDC3390", VA = "0xDC3390")]
	public static void LeanSetPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xDC34B8", Offset = "0xDC34B8", VA = "0xDC34B8")]
	public static void LeanSetPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xDC35E0", Offset = "0xDC35E0", VA = "0xDC35E0")]
	public static void LeanSetPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xDC3018", Offset = "0xDC3018", VA = "0xDC3018")]
	public static void LeanSetLocalPosX(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xDC3140", Offset = "0xDC3140", VA = "0xDC3140")]
	public static void LeanSetLocalPosY(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xDC3268", Offset = "0xDC3268", VA = "0xDC3268")]
	public static void LeanSetLocalPosZ(this Transform transform, float val)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xDC3894", Offset = "0xDC3894", VA = "0xDC3894")]
	public static Color LeanColor(this Transform transform)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000256")]
public class TreyTester : MonoBehaviour
{
	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsOn;

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xA9C850", Offset = "0xA9C850", VA = "0xA9C850")]
	private void Start()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xA9C854", Offset = "0xA9C854", VA = "0xA9C854")]
	private void Update()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xA9C900", Offset = "0xA9C900", VA = "0xA9C900")]
	public TreyTester()
	{
	}
}
[Token(Token = "0x2000257")]
public class Readme : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200063A")]
	public class Section
	{
		[Token(Token = "0x4002C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string heading;

		[Token(Token = "0x4002C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4002C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string linkText;

		[Token(Token = "0x4002C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0xFD1450", Offset = "0xFD1450", VA = "0xFD1450")]
		public Section()
		{
		}
	}

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D icon;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string title;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Section[] sections;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadedLayout;

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xFD1448", Offset = "0xFD1448", VA = "0xFD1448")]
	public Readme()
	{
	}
}
[Token(Token = "0x2000258")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200063B")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4002C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x4002C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x4002C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x4002C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4002C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0xE59DB0", Offset = "0xE59DB0", VA = "0xE59DB0")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x200063C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D598", Offset = "0x85D598")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x4002C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4002C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4002C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x4002C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4002C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4002C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x170003E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0xE59D40", Offset = "0xE59D40", VA = "0xE59D40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0xE59DA8", Offset = "0xE59DA8", VA = "0xE59DA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0xE5964C", Offset = "0xE5964C", VA = "0xE5964C")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0xE59678", Offset = "0xE59678", VA = "0xE59678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0xE596EC", Offset = "0xE596EC", VA = "0xE596EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0xE59694", Offset = "0xE59694", VA = "0xE59694")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0xE59D48", Offset = "0xE59D48", VA = "0xE59D48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xB02DCC", Offset = "0xB02DCC", VA = "0xB02DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xB030FC", Offset = "0xB030FC", VA = "0xB030FC")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xB031CC", Offset = "0xB031CC", VA = "0xB031CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xB0367C", Offset = "0xB0367C", VA = "0xB0367C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xB02F1C", Offset = "0xB02F1C", VA = "0xB02F1C")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xB04504", Offset = "0xB04504", VA = "0xB04504")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xB03448", Offset = "0xB03448", VA = "0xB03448")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xB04484", Offset = "0xB04484", VA = "0xB04484")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87060C", Offset = "0x87060C")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xB046A8", Offset = "0xB046A8", VA = "0xB046A8")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x2000259")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	[HideInInspector]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseCurvature;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[SerializeField]
	[HideInInspector]
	private bool m_bDataDirty;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x17000142")]
	public bool RecurseIntoChildren
	{
		[Token(Token = "0x6001180")]
		[Address(RVA = "0xA2500C", Offset = "0xA2500C", VA = "0xA2500C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000143")]
	public Simplifier MeshSimplifier
	{
		[Token(Token = "0x6001181")]
		[Address(RVA = "0xA25014", Offset = "0xA25014", VA = "0xA25014")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001182")]
		[Address(RVA = "0xA2501C", Offset = "0xA2501C", VA = "0xA2501C")]
		set
		{
		}
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xA25024", Offset = "0xA25024", VA = "0xA25024")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xA25118", Offset = "0xA25118", VA = "0xA25118")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xA25280", Offset = "0xA25280", VA = "0xA25280")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xA25288", Offset = "0xA25288", VA = "0xA25288")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xA252E4", Offset = "0xA252E4", VA = "0xA252E4")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xA252EC", Offset = "0xA252EC", VA = "0xA252EC")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xA252FC", Offset = "0xA252FC", VA = "0xA252FC")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xA2532C", Offset = "0xA2532C", VA = "0xA2532C")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xA25460", Offset = "0xA25460", VA = "0xA25460")]
	public void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xA2560C", Offset = "0xA2560C", VA = "0xA2560C")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xA25614", Offset = "0xA25614", VA = "0xA25614")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xA25658", Offset = "0xA25658", VA = "0xA25658")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xA25F3C", Offset = "0xA25F3C", VA = "0xA25F3C")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xA26010", Offset = "0xA26010", VA = "0xA26010")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xA260AC", Offset = "0xA260AC", VA = "0xA260AC")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xA260F0", Offset = "0xA260F0", VA = "0xA260F0")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xA26660", Offset = "0xA26660", VA = "0xA26660")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xA26694", Offset = "0xA26694", VA = "0xA26694")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xA268BC", Offset = "0xA268BC", VA = "0xA268BC")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xA26900", Offset = "0xA26900", VA = "0xA26900")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xA26B70", Offset = "0xA26B70", VA = "0xA26B70")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xA26BA4", Offset = "0xA26BA4", VA = "0xA26BA4")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xA26E20", Offset = "0xA26E20", VA = "0xA26E20")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xA26E54", Offset = "0xA26E54", VA = "0xA26E54")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xA26FEC", Offset = "0xA26FEC", VA = "0xA26FEC")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xA27038", Offset = "0xA27038", VA = "0xA27038")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xA271C4", Offset = "0xA271C4", VA = "0xA271C4")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xA27210", Offset = "0xA27210", VA = "0xA27210")]
	private static void GetOriginalTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0xA273BC", Offset = "0xA273BC", VA = "0xA273BC")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xA27408", Offset = "0xA27408", VA = "0xA27408")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xA27594", Offset = "0xA27594", VA = "0xA27594")]
	public int GetSimplifiedTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xA275E0", Offset = "0xA275E0", VA = "0xA275E0")]
	private static void GetSimplifiedTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0xA2778C", Offset = "0xA2778C", VA = "0xA2778C")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xA25F08", Offset = "0xA25F08", VA = "0xA25F08")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xA27854", Offset = "0xA27854", VA = "0xA27854")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xA26574", Offset = "0xA26574", VA = "0xA26574")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xA27AB0", Offset = "0xA27AB0", VA = "0xA27AB0")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x200025A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x859F28", Offset = "0x859F28")]
public class RuntimeMeshSimplifier : MonoBehaviour
{
	[Token(Token = "0x200063D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D5A8", Offset = "0x85D5A8")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeMeshSimplifier <>4__this;

		[Token(Token = "0x4002C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4002C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4002C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private KeyValuePair<GameObject, Material[]> <pair>5__3;

		[Token(Token = "0x4002C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshSimplify <meshSimplify>5__4;

		[Token(Token = "0x4002C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshFilter <meshFilter>5__5;

		[Token(Token = "0x4002C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SkinnedMeshRenderer <skin>5__6;

		[Token(Token = "0x4002C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Mesh <newMesh>5__7;

		[Token(Token = "0x170003E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0xAFD4B0", Offset = "0xAFD4B0", VA = "0xAFD4B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0xAFD518", Offset = "0xAFD518", VA = "0xAFD518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0xAFC9CC", Offset = "0xAFC9CC", VA = "0xAFC9CC")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0xAFCA58", Offset = "0xAFCA58", VA = "0xAFCA58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0xAFCADC", Offset = "0xAFCADC", VA = "0xAFCADC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0xAFCA84", Offset = "0xAFCA84", VA = "0xAFCA84")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0xAFD4B8", Offset = "0xAFD4B8", VA = "0xAFD4B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_bFinished;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh m_newMesh;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nLastProgress;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_strLastTitle;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_strLastMessage;

	[Token(Token = "0x17000144")]
	public string ProgressTitle
	{
		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xAFC540", Offset = "0xAFC540", VA = "0xAFC540")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000145")]
	public string ProgressMessage
	{
		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xAFC548", Offset = "0xAFC548", VA = "0xAFC548")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000146")]
	public int ProgressPercent
	{
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xAFC550", Offset = "0xAFC550", VA = "0xAFC550")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000147")]
	public bool Finished
	{
		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xAFC558", Offset = "0xAFC558", VA = "0xAFC558")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xAFC560", Offset = "0xAFC560", VA = "0xAFC560")]
	public void Simplify(float percent)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xAFC68C", Offset = "0xAFC68C", VA = "0xAFC68C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xAFC734", Offset = "0xAFC734", VA = "0xAFC734")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xAFC8FC", Offset = "0xAFC8FC", VA = "0xAFC8FC")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xAFC60C", Offset = "0xAFC60C", VA = "0xAFC60C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870670", Offset = "0x870670")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xAFC9F8", Offset = "0xAFC9F8", VA = "0xAFC9F8")]
	public RuntimeMeshSimplifier()
	{
	}
}
[Token(Token = "0x200025B")]
public class ScrollUV_Caustics : MonoBehaviour
{
	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float horizontalScrollSpeed;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float verticalScrollSpeed;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _myRenderer;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool scroll;

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xAFF22C", Offset = "0xAFF22C", VA = "0xAFF22C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xAFF2D4", Offset = "0xAFF2D4", VA = "0xAFF2D4")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xAFF378", Offset = "0xAFF378", VA = "0xAFF378")]
	public void DoActivateTrigger()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xAFF388", Offset = "0xAFF388", VA = "0xAFF388")]
	public ScrollUV_Caustics()
	{
	}
}
[Token(Token = "0x200025C")]
public class UpdateMask : MonoBehaviour
{
	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SoftMask _softMask;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MediaPlayer _mediaPlayer;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isSet;

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xB5B70C", Offset = "0xB5B70C", VA = "0xB5B70C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xB5B77C", Offset = "0xB5B77C", VA = "0xB5B77C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xB5B940", Offset = "0xB5B940", VA = "0xB5B940")]
	public static Texture2D ToTexture2D(Texture texture)
	{
		return null;
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xB5B9B8", Offset = "0xB5B9B8", VA = "0xB5B9B8")]
	public UpdateMask()
	{
	}
}
[Token(Token = "0x200025D")]
public class VarietySceneSelect : MonoBehaviour
{
	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xC14480", Offset = "0xC14480", VA = "0xC14480")]
	public void LoadSceneDemo1()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xC144CC", Offset = "0xC144CC", VA = "0xC144CC")]
	public void LoadSceneDemo2()
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xC14518", Offset = "0xC14518", VA = "0xC14518")]
	public void LoadSceneDemo3()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xC14564", Offset = "0xC14564", VA = "0xC14564")]
	public void LoadSceneDemo4()
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xC145B0", Offset = "0xC145B0", VA = "0xC145B0")]
	public void LoadSceneDemo5()
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xC145FC", Offset = "0xC145FC", VA = "0xC145FC")]
	public void LoadSceneDemo6()
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xC14648", Offset = "0xC14648", VA = "0xC14648")]
	public void LoadSceneDemo7()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xC14694", Offset = "0xC14694", VA = "0xC14694")]
	public void LoadSceneDemo8()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xC146E0", Offset = "0xC146E0", VA = "0xC146E0")]
	public void LoadSceneDemo9()
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xC1472C", Offset = "0xC1472C", VA = "0xC1472C")]
	public void LoadSceneDemo10()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xC14778", Offset = "0xC14778", VA = "0xC14778")]
	public void LoadSceneDemo11()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xC147C4", Offset = "0xC147C4", VA = "0xC147C4")]
	public VarietySceneSelect()
	{
	}
}
[Token(Token = "0x200025E")]
public class ManualScripts : MonoBehaviour
{
	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] PageObj;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentPage;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int minPage;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxPage;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text txtPage;

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xA1FD50", Offset = "0xA1FD50", VA = "0xA1FD50")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xA1FF70", Offset = "0xA1FF70", VA = "0xA1FF70")]
	public void ChangedPage(int i)
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xA201CC", Offset = "0xA201CC", VA = "0xA201CC")]
	public ManualScripts()
	{
	}
}
[Token(Token = "0x200025F")]
public class fxController : MonoBehaviour
{
	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int idType;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int idColor;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int idAnim;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int idPoint;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int idCircle;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int idBox;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int idArea;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text prefabNameTxt;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] pointObjs;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] circleObjs;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] boxObjs;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] areaObjs;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] DesFxObjs;

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xC7D558", Offset = "0xC7D558", VA = "0xC7D558")]
	private void Start()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xC7D6CC", Offset = "0xC7D6CC", VA = "0xC7D6CC")]
	public void TypesChanged(int i)
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xC7D6D4", Offset = "0xC7D6D4", VA = "0xC7D6D4")]
	public void AnimsChanged(int i)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xC7D6DC", Offset = "0xC7D6DC", VA = "0xC7D6DC")]
	public void ColorsChanged(int i)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xC7D55C", Offset = "0xC7D55C", VA = "0xC7D55C")]
	public void SetupFx()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xC7D6E4", Offset = "0xC7D6E4", VA = "0xC7D6E4")]
	public void PointPrefabs()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xC7D938", Offset = "0xC7D938", VA = "0xC7D938")]
	public void CirclePrefabs()
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xC7DB8C", Offset = "0xC7DB8C", VA = "0xC7DB8C")]
	public void BoxPrefabs()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xC7DDE0", Offset = "0xC7DDE0", VA = "0xC7DDE0")]
	public void AreaPrefabs()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xC7E034", Offset = "0xC7E034", VA = "0xC7E034")]
	public fxController()
	{
	}
}
[Token(Token = "0x2000260")]
public class rotateCamera : MonoBehaviour
{
	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float turnSpeed;

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xE4297C", Offset = "0xE4297C", VA = "0xE4297C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xE42A40", Offset = "0xE42A40", VA = "0xE42A40")]
	public rotateCamera()
	{
	}
}
[Token(Token = "0x2000261")]
public class FrameRateLimiter : MonoBehaviour
{
	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xA048C8", Offset = "0xA048C8", VA = "0xA048C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xA04908", Offset = "0xA04908", VA = "0xA04908")]
	public FrameRateLimiter()
	{
	}
}
[Token(Token = "0x2000262")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x859F8C", Offset = "0x859F8C")]
public class KillTimer : MonoBehaviour
{
	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float killDelay;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float killTimer;

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xB8708C", Offset = "0xB8708C", VA = "0xB8708C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xB87098", Offset = "0xB87098", VA = "0xB87098")]
	private void Update()
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xB87148", Offset = "0xB87148", VA = "0xB87148")]
	public KillTimer()
	{
	}
}
[Token(Token = "0x2000263")]
internal class TestBallSpawnScalar : MonoBehaviour, IVisPrefabSpawnedTarget
{
	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xADD90C", Offset = "0xADD90C", VA = "0xADD90C", Slot = "4")]
	public void OnSpawned(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xADD9BC", Offset = "0xADD9BC", VA = "0xADD9BC")]
	public TestBallSpawnScalar()
	{
	}
}
[Token(Token = "0x2000264")]
public abstract class VisBaseController : MonoBehaviour, IVisManagerTarget
{
	[Token(Token = "0x200063E")]
	public static class Defaults
	{
		[Token(Token = "0x4002C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int controllerNameCounter;

		[Token(Token = "0x4002C5E")]
		public const string controllerName = "Default";

		[Token(Token = "0x4002C5F")]
		public const bool limitIncreaseRate = false;

		[Token(Token = "0x4002C60")]
		public const float increaseRate = 1f;

		[Token(Token = "0x4002C61")]
		public const bool limitDecreaseRate = true;

		[Token(Token = "0x4002C62")]
		public const float decreaseRate = 1f;
	}

	[Token(Token = "0x4001188")]
	public const float mc_fTargetAdjustedDifferenceTime = 1f / 60f;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string controllerName;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool limitIncreaseRate;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float increaseRate;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool limitDecreaseRate;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float decreaseRate;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float m_fPreviousValue;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float m_fValue;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float m_fValueDifference;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float m_fAdjustedValueDifference;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_fMinValue;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_fMaxValue;

	[Token(Token = "0x17000148")]
	public VisManager Manager
	{
		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xC66E8C", Offset = "0xC66E8C", VA = "0xC66E8C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xC66E94", Offset = "0xC66E94", VA = "0xC66E94", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public string LastManagerName
	{
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xC6728C", Offset = "0xC6728C", VA = "0xC6728C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014A")]
	public float MinValue
	{
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xC67294", Offset = "0xC67294", VA = "0xC67294")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700014B")]
	public float MaxValue
	{
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xC6729C", Offset = "0xC6729C", VA = "0xC6729C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xC672A4", Offset = "0xC672A4", VA = "0xC672A4", Slot = "7")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xC6736C", Offset = "0xC6736C", VA = "0xC6736C", Slot = "8")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xC67BBC", Offset = "0xC67BBC", VA = "0xC67BBC", Slot = "9")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xC67FDC", Offset = "0xC67FDC", VA = "0xC67FDC", Slot = "10")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xC678BC", Offset = "0xC678BC", VA = "0xC678BC")]
	public bool ValidateManager(bool displayWarning)
	{
		return default(bool);
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xC67B28", Offset = "0xC67B28", VA = "0xC67B28")]
	public void EnsureRegistered()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xC68070", Offset = "0xC68070", VA = "0xC68070")]
	public void Update()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xC68214", Offset = "0xC68214", VA = "0xC68214", Slot = "11")]
	public virtual float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xC6821C", Offset = "0xC6821C", VA = "0xC6821C")]
	public float GetCurrentValue()
	{
		return default(float);
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xC68224", Offset = "0xC68224", VA = "0xC68224")]
	public float GetPreviousValue()
	{
		return default(float);
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xC6822C", Offset = "0xC6822C", VA = "0xC6822C")]
	public float GetValueDifference()
	{
		return default(float);
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xC68234", Offset = "0xC68234", VA = "0xC68234")]
	public float GetAdjustedValueDifference()
	{
		return default(float);
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xC6823C", Offset = "0xC6823C", VA = "0xC6823C", Slot = "12")]
	public virtual Rect DisplayDebugGUI(int x, int y, int barWidth, int barHeight, int separation, Texture debugTexture)
	{
		return default(Rect);
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xC686B0", Offset = "0xC686B0", VA = "0xC686B0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xC68710", Offset = "0xC68710", VA = "0xC68710")]
	public static bool RestoreVisBaseControllerTarget(IVisBaseControllerTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xC68BBC", Offset = "0xC68BBC", VA = "0xC68BBC")]
	protected VisBaseController()
	{
	}
}
[Token(Token = "0x2000265")]
public interface IVisBaseControllerTarget
{
	[Token(Token = "0x1700014C")]
	VisBaseController Controller
	{
		[Token(Token = "0x60011F1")]
		get;
		[Token(Token = "0x60011F2")]
		set;
	}

	[Token(Token = "0x1700014D")]
	string LastControllerName
	{
		[Token(Token = "0x60011F3")]
		get;
	}
}
[Token(Token = "0x2000266")]
public abstract class VisBaseModifier : MonoBehaviour, IVisManagerTarget, IVisBaseControllerTarget
{
	[Token(Token = "0x200063F")]
	public static class Defaults
	{
	}

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VisBaseController controller;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastControllerName;

	[Token(Token = "0x1700014E")]
	public VisManager Manager
	{
		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xC68C30", Offset = "0xC68C30", VA = "0xC68C30", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xC68C38", Offset = "0xC68C38", VA = "0xC68C38", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700014F")]
	public string LastManagerName
	{
		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xC68CDC", Offset = "0xC68CDC", VA = "0xC68CDC", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public VisBaseController Controller
	{
		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xC68CE4", Offset = "0xC68CE4", VA = "0xC68CE4", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xC68CEC", Offset = "0xC68CEC", VA = "0xC68CEC", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public string LastControllerName
	{
		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xC68D8C", Offset = "0xC68D8C", VA = "0xC68D8C", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xC68D94", Offset = "0xC68D94", VA = "0xC68D94", Slot = "10")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xC68D98", Offset = "0xC68D98", VA = "0xC68D98", Slot = "11")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xC68DBC", Offset = "0xC68DBC", VA = "0xC68DBC", Slot = "12")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xC68DC0", Offset = "0xC68DC0", VA = "0xC68DC0")]
	public void Update()
	{
	}

	[Token(Token = "0x60011FE")]
	public abstract void OnValueUpdated(float current, float previous, float difference, float adjustedDifference);

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xC68E7C", Offset = "0xC68E7C", VA = "0xC68E7C")]
	protected VisBaseModifier()
	{
	}
}
[Token(Token = "0x2000267")]
public abstract class VisBasePropertyModifier : VisBaseModifier
{
	[Token(Token = "0x2000640")]
	public new static class Defaults
	{
		[Token(Token = "0x4002C63")]
		public const ControllerSourceValue controllerSourceValue = ControllerSourceValue.Current;

		[Token(Token = "0x4002C64")]
		public const float minControllerValue = 0f;

		[Token(Token = "0x4002C65")]
		public const float maxControllerValue = 1f;

		[Token(Token = "0x4002C66")]
		public const float minPropertyValue = -1f;

		[Token(Token = "0x4002C67")]
		public const float maxPropertyValue = 1f;

		[Token(Token = "0x4002C68")]
		public const bool invertValue = false;

		[Token(Token = "0x4002C69")]
		public const bool randomValue = true;
	}

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ControllerSourceValue controllerSourceValue;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minControllerValue;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxControllerValue;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minPropertyValue;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxPropertyValue;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool invertValue;

	[Token(Token = "0x6001200")]
	[Address(RVA = "0xC66608", Offset = "0xC66608", VA = "0xC66608", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0xC66620", Offset = "0xC66620", VA = "0xC66620", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0xC68E84", Offset = "0xC68E84", VA = "0xC68E84", Slot = "13")]
	public override void OnValueUpdated(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001203")]
	public abstract void SetProperty(float propertyValue);

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xC66998", Offset = "0xC66998", VA = "0xC66998")]
	protected VisBasePropertyModifier()
	{
	}
}
[Token(Token = "0x2000268")]
public abstract class VisBasePropertyTrigger : VisBaseTrigger
{
	[Token(Token = "0x2000641")]
	public new static class Defaults
	{
		[Token(Token = "0x4002C6A")]
		public const ControllerSourceValue controllerSourceValue = ControllerSourceValue.Current;

		[Token(Token = "0x4002C6B")]
		public const float minControllerValue = 0f;

		[Token(Token = "0x4002C6C")]
		public const float maxControllerValue = 1f;

		[Token(Token = "0x4002C6D")]
		public const float minPropertyValue = -1f;

		[Token(Token = "0x4002C6E")]
		public const float maxPropertyValue = 1f;

		[Token(Token = "0x4002C6F")]
		public const bool invertValue = false;

		[Token(Token = "0x4002C70")]
		public const bool randomValue = true;

		[Token(Token = "0x4002C71")]
		public const bool limitIncreaseRate = false;

		[Token(Token = "0x4002C72")]
		public const float increaseRate = 1f;

		[Token(Token = "0x4002C73")]
		public const bool limitDecreaseRate = false;

		[Token(Token = "0x4002C74")]
		public const float decreaseRate = 1f;

		[Token(Token = "0x4002C75")]
		public const bool returnToRest = false;

		[Token(Token = "0x4002C76")]
		public const float restValue = 0f;
	}

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ControllerSourceValue controllerSourceValue;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minControllerValue;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxControllerValue;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minPropertyValue;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxPropertyValue;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool invertValue;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool randomValue;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool limitIncreaseRate;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float increaseRate;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool limitDecreaseRate;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float decreaseRate;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool returnToRest;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float restValue;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float m_fTargetPropertyValue;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected float m_fCurrentPropertyValue;

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xC66A44", Offset = "0xC66A44", VA = "0xC66A44", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xC66A84", Offset = "0xC66A84", VA = "0xC66A84", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xC68EDC", Offset = "0xC68EDC", VA = "0xC68EDC", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xC69168", Offset = "0xC69168", VA = "0xC69168", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001209")]
	public abstract void SetProperty(float propertyValue);

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xC66E40", Offset = "0xC66E40", VA = "0xC66E40")]
	protected VisBasePropertyTrigger()
	{
	}
}
[Token(Token = "0x2000269")]
public abstract class VisBaseTrigger : MonoBehaviour, IVisManagerTarget, IVisBaseControllerTarget
{
	[Token(Token = "0x2000642")]
	public static class Defaults
	{
		[Token(Token = "0x4002C77")]
		public const TriggerType triggerType = TriggerType.GreaterThanChangeThreshold;

		[Token(Token = "0x4002C78")]
		public const float triggerThreshold = 0.1f;

		[Token(Token = "0x4002C79")]
		public const float triggerReactivateDelay = 0.25f;

		[Token(Token = "0x4002C7A")]
		public const float triggerRandomReactivateDelay = 0f;
	}

	[Token(Token = "0x2000643")]
	public enum TriggerType
	{
		[Token(Token = "0x4002C7C")]
		None,
		[Token(Token = "0x4002C7D")]
		LessThanValueThreshold,
		[Token(Token = "0x4002C7E")]
		GreaterThanValueThreshold,
		[Token(Token = "0x4002C7F")]
		LessThanChangeThreshold,
		[Token(Token = "0x4002C80")]
		GreaterThanChangeThreshold
	}

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VisBaseController controller;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastControllerName;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TriggerType triggerType;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float triggerThreshold;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float triggerReactivateDelay;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float triggerRandomReactivateDelay;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float m_fTriggerDelayTimer;

	[Token(Token = "0x17000152")]
	public VisManager Manager
	{
		[Token(Token = "0x600120B")]
		[Address(RVA = "0xC69240", Offset = "0xC69240", VA = "0xC69240", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600120C")]
		[Address(RVA = "0xC69248", Offset = "0xC69248", VA = "0xC69248", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public string LastManagerName
	{
		[Token(Token = "0x600120D")]
		[Address(RVA = "0xC692EC", Offset = "0xC692EC", VA = "0xC692EC", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000154")]
	public VisBaseController Controller
	{
		[Token(Token = "0x600120E")]
		[Address(RVA = "0xC692F4", Offset = "0xC692F4", VA = "0xC692F4", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x600120F")]
		[Address(RVA = "0xC692FC", Offset = "0xC692FC", VA = "0xC692FC", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public string LastControllerName
	{
		[Token(Token = "0x6001210")]
		[Address(RVA = "0xC6939C", Offset = "0xC6939C", VA = "0xC6939C", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xC66154", Offset = "0xC66154", VA = "0xC66154", Slot = "10")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xC66170", Offset = "0xC66170", VA = "0xC66170", Slot = "11")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xC693A4", Offset = "0xC693A4", VA = "0xC693A4", Slot = "12")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xC68FEC", Offset = "0xC68FEC", VA = "0xC68FEC", Slot = "13")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6001215")]
	public abstract void OnTriggered(float current, float previous, float difference, float adjustedDifference);

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xC66508", Offset = "0xC66508", VA = "0xC66508")]
	protected VisBaseTrigger()
	{
	}
}
[Token(Token = "0x200026A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x859FC4", Offset = "0x859FC4")]
public class VisFrequencyController : VisBaseController, IVisDataGroupTarget
{
	[Token(Token = "0x2000644")]
	public new static class Defaults
	{
		[Token(Token = "0x4002C81")]
		public const VisDataValueType subValueType = VisDataValueType.Sum;

		[Token(Token = "0x4002C82")]
		public const VisDataValueType finalValueType = VisDataValueType.Average;
	}

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private VisDataGroup dataGroup;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastDataGroupName;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VisDataValueType subValueType;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public VisDataValueType finalValueType;

	[Token(Token = "0x17000156")]
	public VisDataGroup DataGroup
	{
		[Token(Token = "0x6001217")]
		[Address(RVA = "0xC6C7B8", Offset = "0xC6C7B8", VA = "0xC6C7B8", Slot = "13")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001218")]
		[Address(RVA = "0xC6C7C0", Offset = "0xC6C7C0", VA = "0xC6C7C0", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public string LastDataGroupName
	{
		[Token(Token = "0x6001219")]
		[Address(RVA = "0xC6C860", Offset = "0xC6C860", VA = "0xC6C860", Slot = "15")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xC6C868", Offset = "0xC6C868", VA = "0xC6C868", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xC6C894", Offset = "0xC6C894", VA = "0xC6C894", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xC6C9C0", Offset = "0xC6C9C0", VA = "0xC6C9C0", Slot = "11")]
	public override float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xC6CA58", Offset = "0xC6CA58", VA = "0xC6CA58", Slot = "12")]
	public override Rect DisplayDebugGUI(int x, int y, int barWidth, int barHeight, int separation, Texture debugTexture)
	{
		return default(Rect);
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xC6D114", Offset = "0xC6D114", VA = "0xC6D114")]
	public VisFrequencyController()
	{
	}
}
[Token(Token = "0x200026B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x859FFC", Offset = "0x859FFC")]
public class VisRandomController : VisBaseController
{
	[Token(Token = "0x2000645")]
	public new static class Defaults
	{
		[Token(Token = "0x4002C83")]
		public const float delayTime = 1f;
	}

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float delayTime;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_fCurrentRandomValue;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_fNewValueTimer;

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xC71E20", Offset = "0xC71E20", VA = "0xC71E20", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xC71E24", Offset = "0xC71E24", VA = "0xC71E24", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0xC71E28", Offset = "0xC71E28", VA = "0xC71E28", Slot = "11")]
	public override float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0xC71E8C", Offset = "0xC71E8C", VA = "0xC71E8C")]
	public VisRandomController()
	{
	}
}
[Token(Token = "0x200026C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A034", Offset = "0x85A034")]
public class VisSineWaveController : VisBaseController
{
	[Token(Token = "0x2000646")]
	public new static class Defaults
	{
		[Token(Token = "0x4002C84")]
		public const float speedScalar = 1f;
	}

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float speedScalar;

	[Token(Token = "0x6001223")]
	[Address(RVA = "0xC71E98", Offset = "0xC71E98", VA = "0xC71E98", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0xC71EC0", Offset = "0xC71EC0", VA = "0xC71EC0", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0xC71EC4", Offset = "0xC71EC4", VA = "0xC71EC4", Slot = "11")]
	public override float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0xC71F54", Offset = "0xC71F54", VA = "0xC71F54")]
	public VisSineWaveController()
	{
	}
}
[Token(Token = "0x200026D")]
public class VisDataContainer
{
	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float average;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float previousAverage;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float averageDifference;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float median;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float previousMedian;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float medianDifference;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sum;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float previousSum;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sumDifference;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minimum;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float previousMinimum;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minimumDifference;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maximum;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float previousMaximum;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maximumDifference;

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xC693A8", Offset = "0xC693A8", VA = "0xC693A8")]
	public float GetValue(VisDataValueType valueType)
	{
		return default(float);
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0xC693F4", Offset = "0xC693F4", VA = "0xC693F4")]
	public float GetPreviousValue(VisDataValueType valueType)
	{
		return default(float);
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xC69440", Offset = "0xC69440", VA = "0xC69440")]
	public float GetValueDifference(VisDataValueType valueType)
	{
		return default(float);
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xC6948C", Offset = "0xC6948C", VA = "0xC6948C")]
	public void UpdatePreviousValues()
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xC694B8", Offset = "0xC694B8", VA = "0xC694B8")]
	public void ResetCurrentValues()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xC694E0", Offset = "0xC694E0", VA = "0xC694E0")]
	public void ApplyBoostAndCutoff(float boost, float cutoff)
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xC696B4", Offset = "0xC696B4", VA = "0xC696B4")]
	public void UpdateValueDifferences()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xC696F4", Offset = "0xC696F4", VA = "0xC696F4")]
	public VisDataContainer()
	{
	}
}
[Token(Token = "0x200026E")]
public enum VisDataValueType
{
	[Token(Token = "0x40011D0")]
	Average,
	[Token(Token = "0x40011D1")]
	Median,
	[Token(Token = "0x40011D2")]
	Sum,
	[Token(Token = "0x40011D3")]
	Minimum,
	[Token(Token = "0x40011D4")]
	Maximum
}
[Token(Token = "0x200026F")]
public enum VisDataSource
{
	[Token(Token = "0x40011D6")]
	Raw,
	[Token(Token = "0x40011D7")]
	Spectrum
}
[Token(Token = "0x2000270")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A06C", Offset = "0x85A06C")]
public sealed class VisDataGroup : MonoBehaviour, IVisManagerTarget
{
	[Token(Token = "0x2000647")]
	public static class Defaults
	{
		[Token(Token = "0x4002C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int dataGroupNameCounter;

		[Token(Token = "0x4002C86")]
		public const string dataGroupName = "Default";

		[Token(Token = "0x4002C87")]
		public const VisDataSource dataSource = VisDataSource.Spectrum;

		[Token(Token = "0x4002C88")]
		public const int numberSubDataGroups = 5;

		[Token(Token = "0x4002C89")]
		public const int frequencyRangeStartIndex = 0;

		[Token(Token = "0x4002C8A")]
		public const int frequencyRangeEndIndex = 256;

		[Token(Token = "0x4002C8B")]
		public const float boost = 1f;

		[Token(Token = "0x4002C8C")]
		public const float cutoff = 1f;
	}

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string dataGroupName;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VisDataSource dataSource;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int numberSubDataGroups;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int frequencyRangeStartIndex;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int frequencyRangeEndIndex;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float boost;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cutoff;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color debugColor;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VisDataContainer[] m_aoDataContainers;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<VisSubDataGroup> m_oSubDataGroups;

	[Token(Token = "0x17000158")]
	public VisManager Manager
	{
		[Token(Token = "0x600122F")]
		[Address(RVA = "0xC696FC", Offset = "0xC696FC", VA = "0xC696FC", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001230")]
		[Address(RVA = "0xC69704", Offset = "0xC69704", VA = "0xC69704", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public string LastManagerName
	{
		[Token(Token = "0x6001231")]
		[Address(RVA = "0xC69F30", Offset = "0xC69F30", VA = "0xC69F30", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xC69F38", Offset = "0xC69F38", VA = "0xC69F38")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xC69FFC", Offset = "0xC69FFC", VA = "0xC69FFC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xC6A544", Offset = "0xC6A544", VA = "0xC6A544")]
	public void Start()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xC6AC78", Offset = "0xC6AC78", VA = "0xC6AC78")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xC6A244", Offset = "0xC6A244", VA = "0xC6A244")]
	public bool ValidateManager(bool displayWarning)
	{
		return default(bool);
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xC6A4B0", Offset = "0xC6A4B0", VA = "0xC6A4B0")]
	public void EnsureRegistered()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xC6AD0C", Offset = "0xC6AD0C", VA = "0xC6AD0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xC6B350", Offset = "0xC6B350", VA = "0xC6B350")]
	public float GetValue(VisDataValueType finalValueType, VisDataValueType subValueType)
	{
		return default(float);
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xC6B3D8", Offset = "0xC6B3D8", VA = "0xC6B3D8")]
	public float GetPreviousValue(VisDataValueType finalValueType, VisDataValueType subValueType)
	{
		return default(float);
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0xC6B460", Offset = "0xC6B460", VA = "0xC6B460")]
	public float GetValueDifference(VisDataValueType finalValueType, VisDataValueType subValueType)
	{
		return default(float);
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0xC6B4E8", Offset = "0xC6B4E8", VA = "0xC6B4E8")]
	public Rect DisplayDebugGUI(int x, int y, int barWidth, int barHeight, int separation, Texture debugTexture)
	{
		return default(Rect);
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xC6BF64", Offset = "0xC6BF64", VA = "0xC6BF64", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xC6BFC4", Offset = "0xC6BFC4", VA = "0xC6BFC4")]
	public static bool RestoreVisDataGroupTarget(IVisDataGroupTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xC6C470", Offset = "0xC6C470", VA = "0xC6C470")]
	public VisDataGroup()
	{
	}
}
[Token(Token = "0x2000271")]
public interface IVisDataGroupTarget
{
	[Token(Token = "0x1700015A")]
	VisDataGroup DataGroup
	{
		[Token(Token = "0x6001240")]
		get;
		[Token(Token = "0x6001241")]
		set;
	}

	[Token(Token = "0x1700015B")]
	string LastDataGroupName
	{
		[Token(Token = "0x6001242")]
		get;
	}
}
[Token(Token = "0x2000272")]
public sealed class VisSubDataGroup : VisDataContainer
{
	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int frequencyRangeStartIndex;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int frequencyRangeEndIndex;

	[Token(Token = "0x6001243")]
	[Address(RVA = "0xC6AC38", Offset = "0xC6AC38", VA = "0xC6AC38")]
	public VisSubDataGroup(int startIndex, int endIndex)
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0xC6B120", Offset = "0xC6B120", VA = "0xC6B120")]
	public void Update(float[] spectrum)
	{
	}
}
[Token(Token = "0x2000273")]
public interface IVisModifierTarget
{
	[Token(Token = "0x6001245")]
	void OnValueUpdated(float current, float previous, float difference, float adjustedDifference);
}
[Token(Token = "0x2000274")]
public interface IVisPrefabSpawnedTarget
{
	[Token(Token = "0x6001246")]
	void OnSpawned(float current, float previous, float difference, float adjustedDifference);
}
[Token(Token = "0x2000275")]
public interface IVisTriggerTarget
{
	[Token(Token = "0x6001247")]
	void OnTriggered(float current, float previous, float difference, float adjustedDifference);
}
[Token(Token = "0x2000276")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A0A4", Offset = "0x85A0A4")]
public sealed class VisManager : MonoBehaviour
{
	[Token(Token = "0x2000648")]
	public static class Defaults
	{
		[Token(Token = "0x4002C8D")]
		public const Channel channel = Channel.Left;

		[Token(Token = "0x4002C8E")]
		public const WindowSize windowSize = WindowSize._1024;

		[Token(Token = "0x4002C8F")]
		public const FFTWindow windowType = FFTWindow.Hamming;

		[Token(Token = "0x4002C90")]
		public const bool useAudioListener = false;

		[Token(Token = "0x4002C91")]
		public const bool displaySpectrumDebug = false;

		[Token(Token = "0x4002C92")]
		public const bool displayDataGroupDebug = false;

		[Token(Token = "0x4002C93")]
		public const bool displayControllerDebug = false;

		[Token(Token = "0x4002C94")]
		public const int debugSpectrumBarWidth = 1;

		[Token(Token = "0x4002C95")]
		public const int debugSpectrumBarHeight = 80;

		[Token(Token = "0x4002C96")]
		public const int debugRawAudioBarHeight = 40;

		[Token(Token = "0x4002C97")]
		public const int debugDataGroupBarWidth = 4;

		[Token(Token = "0x4002C98")]
		public const int debugDataGroupBarHeight = 40;

		[Token(Token = "0x4002C99")]
		public const int debugControllerBarWidth = 150;

		[Token(Token = "0x4002C9A")]
		public const int debugControllerBarHeight = 6;

		[Token(Token = "0x4002C9B")]
		public const int debugSeparation = 5;
	}

	[Token(Token = "0x2000649")]
	public enum WindowSize
	{
		[Token(Token = "0x4002C9D")]
		_64 = 0x40,
		[Token(Token = "0x4002C9E")]
		_128 = 0x80,
		[Token(Token = "0x4002C9F")]
		_256 = 0x100,
		[Token(Token = "0x4002CA0")]
		_512 = 0x200,
		[Token(Token = "0x4002CA1")]
		_1024 = 0x400,
		[Token(Token = "0x4002CA2")]
		_2048 = 0x800,
		[Token(Token = "0x4002CA3")]
		_4096 = 0x1000,
		[Token(Token = "0x4002CA4")]
		_8192 = 0x2000
	}

	[Token(Token = "0x200064A")]
	public enum Channel
	{
		[Token(Token = "0x4002CA6")]
		Left,
		[Token(Token = "0x4002CA7")]
		Right,
		[Token(Token = "0x4002CA8")]
		Average,
		[Token(Token = "0x4002CA9")]
		Min,
		[Token(Token = "0x4002CAA")]
		Max
	}

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Channel channel;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WindowSize windowSize;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FFTWindow windowType;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool displaySpectrumDebug;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool displayDataGroupDebug;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool displayControllerDebug;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int debugSpectrumBarWidth;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int debugSpectrumBarHeight;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int debugRawAudioBarHeight;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int debugDataGroupBarWidth;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int debugDataGroupBarHeight;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int debugControllerBarWidth;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int debugControllerBarHeight;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int debugSeparation;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture debugTexture;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] m_afSpectrumData;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] m_afRawAudioData;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] m_afAuxiliaryData;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<VisDataGroup> m_oDataGroups;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<VisBaseController> m_oControllers;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_fMaxDebugValue;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int m_nFrequencyRange;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_fFrequencyResolution;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool m_bUseAudioListener;

	[Token(Token = "0x1700015C")]
	public ReadOnlyCollection<VisDataGroup> DataGroups
	{
		[Token(Token = "0x6001248")]
		[Address(RVA = "0xC6C3E8", Offset = "0xC6C3E8", VA = "0xC6C3E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015D")]
	public ReadOnlyCollection<VisBaseController> Controllers
	{
		[Token(Token = "0x6001249")]
		[Address(RVA = "0xC68B34", Offset = "0xC68B34", VA = "0xC68B34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015E")]
	public float FrequencyResolution
	{
		[Token(Token = "0x600124A")]
		[Address(RVA = "0xC6E4B0", Offset = "0xC6E4B0", VA = "0xC6E4B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0xC6E4B8", Offset = "0xC6E4B8", VA = "0xC6E4B8")]
	public void Reset()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0xC6E4F8", Offset = "0xC6E4F8", VA = "0xC6E4F8")]
	public void Start()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0xC6E964", Offset = "0xC6E964", VA = "0xC6E964")]
	public void SetAudioSource(AudioSource _audioSource)
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0xC6E854", Offset = "0xC6E854", VA = "0xC6E854")]
	public void CalculateFrequencyResolution()
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0xC6E96C", Offset = "0xC6E96C", VA = "0xC6E96C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0xC698F0", Offset = "0xC698F0", VA = "0xC698F0")]
	public void AddDataGroup(VisDataGroup dataGroup)
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0xC67080", Offset = "0xC67080", VA = "0xC67080")]
	public void AddController(VisBaseController controller)
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0xC69824", Offset = "0xC69824", VA = "0xC69824")]
	public void RemoveDataGroup(VisDataGroup dataGroup)
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0xC66FB4", Offset = "0xC66FB4", VA = "0xC66FB4")]
	public void RemoveController(VisBaseController controller)
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0xC6F520", Offset = "0xC6F520", VA = "0xC6F520")]
	public void ClearDataGroups()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0xC6F578", Offset = "0xC6F578", VA = "0xC6F578")]
	public void ClearControllers()
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0xC6F5D0", Offset = "0xC6F5D0", VA = "0xC6F5D0")]
	public float[] GetSpectrumData()
	{
		return null;
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0xC6F5D8", Offset = "0xC6F5D8", VA = "0xC6F5D8")]
	public float[] GetRawAudioData()
	{
		return null;
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0xC6F110", Offset = "0xC6F110", VA = "0xC6F110")]
	public VisDataGroup GetDataGroupByName(string dataGroupName)
	{
		return null;
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xC6F318", Offset = "0xC6F318", VA = "0xC6F318")]
	public VisBaseController GetControllerByName(string controllerName)
	{
		return null;
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xC6F3F8", Offset = "0xC6F3F8", VA = "0xC6F3F8")]
	public string EnsureUniqueControllerName(string name)
	{
		return null;
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0xC6F1F0", Offset = "0xC6F1F0", VA = "0xC6F1F0")]
	public string EnsureUniqueDataGroupName(string name)
	{
		return null;
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0xC6F5E0", Offset = "0xC6F5E0", VA = "0xC6F5E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0xC70050", Offset = "0xC70050", VA = "0xC70050")]
	private Color GetDebugColor(int freqIndex, VisDataSource dataSource)
	{
		return default(Color);
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0xC7020C", Offset = "0xC7020C", VA = "0xC7020C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0xC675BC", Offset = "0xC675BC", VA = "0xC675BC")]
	public static bool RestoreVisManagerTarget(IVisManagerTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0xC7027C", Offset = "0xC7027C", VA = "0xC7027C")]
	public VisManager()
	{
	}
}
[Token(Token = "0x2000277")]
public interface IVisManagerTarget
{
	[Token(Token = "0x1700015F")]
	VisManager Manager
	{
		[Token(Token = "0x6001261")]
		get;
		[Token(Token = "0x6001262")]
		set;
	}

	[Token(Token = "0x17000160")]
	string LastManagerName
	{
		[Token(Token = "0x6001263")]
		get;
	}
}
[Token(Token = "0x2000278")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A0DC", Offset = "0x85A0DC")]
public class VisAnimationStatePropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x200064B")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CAB")]
		public const AnimationStateProperty targetProperty = AnimationStateProperty.NormalizedTime;

		[Token(Token = "0x4002CAC")]
		public const string targetAnimation = "Idle";
	}

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationStateProperty targetProperty;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string targetAnimation;

	[Token(Token = "0x6001264")]
	[Address(RVA = "0xC665A0", Offset = "0xC665A0", VA = "0xC665A0", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0xC6661C", Offset = "0xC6661C", VA = "0xC6661C", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0xC66790", Offset = "0xC66790", VA = "0xC66790", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0xC66924", Offset = "0xC66924", VA = "0xC66924")]
	public VisAnimationStatePropertyModifier()
	{
	}
}
[Token(Token = "0x2000279")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A114", Offset = "0x85A114")]
public class VisEmitterPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x200064C")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CAD")]
		public const EmitterProperty targetProperty = EmitterProperty.EmitterVelocityScale;
	}

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EmitterProperty targetProperty;

	[Token(Token = "0x6001268")]
	[Address(RVA = "0xC6C638", Offset = "0xC6C638", VA = "0xC6C638", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0xC6C654", Offset = "0xC6C654", VA = "0xC6C654", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xC6C658", Offset = "0xC6C658", VA = "0xC6C658", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0xC6C6CC", Offset = "0xC6C6CC", VA = "0xC6C6CC")]
	public VisEmitterPropertyModifier()
	{
	}
}
[Token(Token = "0x200027A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A14C", Offset = "0x85A14C")]
public class VisGameObjectPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x200064D")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CAE")]
		public const GameObjectProperty targetProperty = GameObjectProperty.UniformScale;
	}

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObjectProperty targetProperty;

	[Token(Token = "0x600126C")]
	[Address(RVA = "0xC6D120", Offset = "0xC6D120", VA = "0xC6D120", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0xC6D13C", Offset = "0xC6D13C", VA = "0xC6D13C", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0xC6D140", Offset = "0xC6D140", VA = "0xC6D140", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0xC6DE68", Offset = "0xC6DE68", VA = "0xC6DE68")]
	public VisGameObjectPropertyModifier()
	{
	}
}
[Token(Token = "0x200027B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A184", Offset = "0x85A184")]
public class VisLightPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x200064E")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CAF")]
		public const LightProperty targetProperty = LightProperty.Intensity;
	}

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LightProperty targetProperty;

	[Token(Token = "0x6001270")]
	[Address(RVA = "0xC6DF60", Offset = "0xC6DF60", VA = "0xC6DF60", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xC6DF7C", Offset = "0xC6DF7C", VA = "0xC6DF7C", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xC6DF80", Offset = "0xC6DF80", VA = "0xC6DF80", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xC6E2DC", Offset = "0xC6E2DC", VA = "0xC6E2DC")]
	public VisLightPropertyModifier()
	{
	}
}
[Token(Token = "0x200027C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A1BC", Offset = "0x85A1BC")]
public class VisMaterialLerpModifier : VisBasePropertyModifier
{
	[Token(Token = "0x200064F")]
	public new static class Defaults
	{
	}

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material lerpFromMaterial;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material lerpToMaterial;

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xC70344", Offset = "0xC70344", VA = "0xC70344", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xC70358", Offset = "0xC70358", VA = "0xC70358", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xC7035C", Offset = "0xC7035C", VA = "0xC7035C", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xC7051C", Offset = "0xC7051C", VA = "0xC7051C")]
	public VisMaterialLerpModifier()
	{
	}
}
[Token(Token = "0x200027D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A1F4", Offset = "0x85A1F4")]
public class VisMaterialPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x2000650")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CB0")]
		public const string targetProperty = "";

		[Token(Token = "0x4002CB1")]
		public const bool setAsProceduralMaterial = false;

		[Token(Token = "0x4002CB2")]
		public const bool rebuildProceduralTexturesImmediately = false;

		[Token(Token = "0x4002CB3")]
		public const bool applyToMaterialIndex = false;

		[Token(Token = "0x4002CB4")]
		public const int materialIndex = 0;
	}

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string targetProperty;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool setAsProceduralMaterial;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool rebuildProceduralTexturesImmediately;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool applyToMaterialIndex;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int materialIndex;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool specialTargetProperty;

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xC70784", Offset = "0xC70784", VA = "0xC70784", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xC707F0", Offset = "0xC707F0", VA = "0xC707F0", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xC70954", Offset = "0xC70954", VA = "0xC70954", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xC71084", Offset = "0xC71084", VA = "0xC71084")]
	public VisMaterialPropertyModifier()
	{
	}
}
[Token(Token = "0x200027E")]
public delegate void ValueUpdatedDelegate(float current, float previous, float difference, float adjustedDifference);
[Token(Token = "0x200027F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A22C", Offset = "0x85A22C")]
public class VisTargetModifier : VisBaseModifier
{
	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x14000037")]
	public event ValueUpdatedDelegate ValueUpdated
	{
		[Token(Token = "0x6001280")]
		[Address(RVA = "0xC724A8", Offset = "0xC724A8", VA = "0xC724A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8706D4", Offset = "0x8706D4")]
		add
		{
		}
		[Token(Token = "0x6001281")]
		[Address(RVA = "0xC7254C", Offset = "0xC7254C", VA = "0xC7254C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8706E4", Offset = "0x8706E4")]
		remove
		{
		}
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xC725F0", Offset = "0xC725F0", VA = "0xC725F0", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xC72874", Offset = "0xC72874", VA = "0xC72874", Slot = "12")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xC7261C", Offset = "0xC7261C", VA = "0xC7261C")]
	public void CreateAllDelegates()
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xC72878", Offset = "0xC72878", VA = "0xC72878")]
	public void DestroyAllDelegates()
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xC72AD0", Offset = "0xC72AD0", VA = "0xC72AD0")]
	public void AddGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xC72D58", Offset = "0xC72D58", VA = "0xC72D58")]
	public void RemoveGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xC72F80", Offset = "0xC72F80", VA = "0xC72F80", Slot = "13")]
	public override void OnValueUpdated(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xC72FB4", Offset = "0xC72FB4", VA = "0xC72FB4")]
	public VisTargetModifier()
	{
	}
}
[Token(Token = "0x2000280")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A264", Offset = "0x85A264")]
public class VisAddForceTrigger : VisBaseTrigger
{
	[Token(Token = "0x2000651")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CB5")]
		public const ControllerSourceValue controllerValue = ControllerSourceValue.Current;

		[Token(Token = "0x4002CB6")]
		public const float minControllerValue = 0f;

		[Token(Token = "0x4002CB7")]
		public const float maxControllerValue = 1f;

		[Token(Token = "0x4002CB8")]
		public const float minForceValue = 10f;

		[Token(Token = "0x4002CB9")]
		public const float maxForceValue = 200f;

		[Token(Token = "0x4002CBA")]
		public const bool invertValue = false;

		[Token(Token = "0x4002CBB")]
		public const bool randomValue = false;

		[Token(Token = "0x4002CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 forceDirection;

		[Token(Token = "0x4002CBD")]
		public const ForceMode forceMode = ForceMode.Impulse;
	}

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ControllerSourceValue controllerValue;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minControllerValue;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxControllerValue;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minForceValue;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxForceValue;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool invertValue;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool randomValue;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 forceDirection;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ForceMode forceMode;

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xC6613C", Offset = "0xC6613C", VA = "0xC6613C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xC6616C", Offset = "0xC6616C", VA = "0xC6616C", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xC66230", Offset = "0xC66230", VA = "0xC66230", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xC6645C", Offset = "0xC6645C", VA = "0xC6645C")]
	public VisAddForceTrigger()
	{
	}
}
[Token(Token = "0x2000281")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A29C", Offset = "0x85A29C")]
public class VisAnimationStatePropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x2000652")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CBE")]
		public const AnimationStateProperty targetProperty = AnimationStateProperty.NormalizedTime;

		[Token(Token = "0x4002CBF")]
		public const string targetAnimation = "Idle";
	}

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationStateProperty targetProperty;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string targetAnimation;

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xC669B4", Offset = "0xC669B4", VA = "0xC669B4", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xC66A80", Offset = "0xC66A80", VA = "0xC66A80", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xC66CA8", Offset = "0xC66CA8", VA = "0xC66CA8", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xC66DA0", Offset = "0xC66DA0", VA = "0xC66DA0")]
	public VisAnimationStatePropertyTrigger()
	{
	}
}
[Token(Token = "0x2000282")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A2D4", Offset = "0x85A2D4")]
public class VisEmitParticlesTrigger : VisBaseTrigger
{
	[Token(Token = "0x2000653")]
	public new static class Defaults
	{
	}

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int emitCount;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int emitCountVariance;

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xC6C538", Offset = "0xC6C538", VA = "0xC6C538", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xC6C550", Offset = "0xC6C550", VA = "0xC6C550", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xC6C554", Offset = "0xC6C554", VA = "0xC6C554", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xC6C614", Offset = "0xC6C614", VA = "0xC6C614")]
	public VisEmitParticlesTrigger()
	{
	}
}
[Token(Token = "0x2000283")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A30C", Offset = "0x85A30C")]
public class VisEmitterPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x2000654")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CC0")]
		public const EmitterProperty targetProperty = EmitterProperty.EmitterVelocityScale;
	}

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EmitterProperty targetProperty;

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xC6C6F0", Offset = "0xC6C6F0", VA = "0xC6C6F0", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xC6C764", Offset = "0xC6C764", VA = "0xC6C764")]
	public VisEmitterPropertyTrigger()
	{
	}
}
[Token(Token = "0x2000284")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A344", Offset = "0x85A344")]
public class VisGameObjectPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x2000655")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CC1")]
		public const GameObjectProperty targetProperty = GameObjectProperty.UniformScale;
	}

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObjectProperty targetProperty;

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xC6DE8C", Offset = "0xC6DE8C", VA = "0xC6DE8C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xC6DED0", Offset = "0xC6DED0", VA = "0xC6DED0", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xC6DED4", Offset = "0xC6DED4", VA = "0xC6DED4", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xC6DF0C", Offset = "0xC6DF0C", VA = "0xC6DF0C")]
	public VisGameObjectPropertyTrigger()
	{
	}
}
[Token(Token = "0x2000285")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A37C", Offset = "0x85A37C")]
public class VisLightPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x2000656")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CC2")]
		public const LightProperty targetProperty = LightProperty.Intensity;
	}

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LightProperty targetProperty;

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xC6E300", Offset = "0xC6E300", VA = "0xC6E300", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xC6E344", Offset = "0xC6E344", VA = "0xC6E344", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xC6E348", Offset = "0xC6E348", VA = "0xC6E348", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xC6E45C", Offset = "0xC6E45C", VA = "0xC6E45C")]
	public VisLightPropertyTrigger()
	{
	}
}
[Token(Token = "0x2000286")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A3B4", Offset = "0x85A3B4")]
public class VisMaterialLerpTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x2000657")]
	public new static class Defaults
	{
	}

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material lerpFromMaterial;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material lerpToMaterial;

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xC70538", Offset = "0xC70538", VA = "0xC70538", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0xC70574", Offset = "0xC70574", VA = "0xC70574", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xC70578", Offset = "0xC70578", VA = "0xC70578", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xC70738", Offset = "0xC70738", VA = "0xC70738")]
	public VisMaterialLerpTrigger()
	{
	}
}
[Token(Token = "0x2000287")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A3EC", Offset = "0x85A3EC")]
public class VisMaterialPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x2000658")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CC3")]
		public const string targetProperty = "";

		[Token(Token = "0x4002CC4")]
		public const bool setAsProceduralMaterial = false;

		[Token(Token = "0x4002CC5")]
		public const bool rebuildProceduralTexturesImmediately = false;

		[Token(Token = "0x4002CC6")]
		public const bool applyToMaterialIndex = false;

		[Token(Token = "0x4002CC7")]
		public const int materialIndex = 0;
	}

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string targetProperty;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool setAsProceduralMaterial;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool rebuildProceduralTexturesImmediately;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool applyToMaterialIndex;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int materialIndex;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool specialTargetProperty;

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xC710F0", Offset = "0xC710F0", VA = "0xC710F0", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xC71184", Offset = "0xC71184", VA = "0xC71184", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0xC712E8", Offset = "0xC712E8", VA = "0xC712E8", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0xC71A18", Offset = "0xC71A18", VA = "0xC71A18")]
	public VisMaterialPropertyTrigger()
	{
	}
}
[Token(Token = "0x2000288")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A424", Offset = "0x85A424")]
public class VisMessageTrigger : VisTargetTrigger
{
	[Token(Token = "0x2000659")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CC8")]
		public const string messageName = "TriggerMessage";

		[Token(Token = "0x4002CC9")]
		public const ControllerSourceValue messageParameter = ControllerSourceValue.Current;
	}

	[Token(Token = "0x200065A")]
	public enum ControllerSourceValue
	{
		[Token(Token = "0x4002CCB")]
		None,
		[Token(Token = "0x4002CCC")]
		Current,
		[Token(Token = "0x4002CCD")]
		Previous,
		[Token(Token = "0x4002CCE")]
		Difference
	}

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string messageName;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControllerSourceValue messageParameter;

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0xC71AB4", Offset = "0xC71AB4", VA = "0xC71AB4", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0xC71B20", Offset = "0xC71B20", VA = "0xC71B20", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0xC71B68", Offset = "0xC71B68", VA = "0xC71B68", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0xC71B70", Offset = "0xC71B70", VA = "0xC71B70", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0xC71D40", Offset = "0xC71D40", VA = "0xC71D40")]
	public VisMessageTrigger()
	{
	}
}
[Token(Token = "0x2000289")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A45C", Offset = "0x85A45C")]
public class VisSpawnPrefabTrigger : VisBaseTrigger
{
	[Token(Token = "0x200065B")]
	public new static class Defaults
	{
		[Token(Token = "0x4002CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 randomOffset;
	}

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject prefab;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 randomOffset;

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0xC71F60", Offset = "0xC71F60", VA = "0xC71F60", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0xC71FEC", Offset = "0xC71FEC", VA = "0xC71FEC", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xC71FF0", Offset = "0xC71FF0", VA = "0xC71FF0", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0xC72398", Offset = "0xC72398", VA = "0xC72398")]
	public VisSpawnPrefabTrigger()
	{
	}
}
[Token(Token = "0x200028A")]
public delegate void TriggeredDelegate(float current, float previous, float difference, float adjustedDifference);
[Token(Token = "0x200028B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A494", Offset = "0x85A494")]
public class VisTargetTrigger : VisBaseTrigger
{
	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x14000038")]
	public event TriggeredDelegate Triggered
	{
		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xC73024", Offset = "0xC73024", VA = "0xC73024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8706F4", Offset = "0x8706F4")]
		add
		{
		}
		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xC730C8", Offset = "0xC730C8", VA = "0xC730C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870704", Offset = "0x870704")]
		remove
		{
		}
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xC71B44", Offset = "0xC71B44", VA = "0xC71B44", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xC733C4", Offset = "0xC733C4", VA = "0xC733C4", Slot = "12")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xC71B6C", Offset = "0xC71B6C", VA = "0xC71B6C", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xC7316C", Offset = "0xC7316C", VA = "0xC7316C")]
	public void CreateAllDelegates()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xC733C8", Offset = "0xC733C8", VA = "0xC733C8")]
	public void DestroyAllDelegates()
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xC73620", Offset = "0xC73620", VA = "0xC73620")]
	public void AddGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xC738A8", Offset = "0xC738A8", VA = "0xC738A8")]
	public void RemoveGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xC71D0C", Offset = "0xC71D0C", VA = "0xC71D0C", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xC71D9C", Offset = "0xC71D9C", VA = "0xC71D9C")]
	public VisTargetTrigger()
	{
	}
}
[Token(Token = "0x200028C")]
public enum ControllerSourceValue
{
	[Token(Token = "0x400122D")]
	Current,
	[Token(Token = "0x400122E")]
	Previous,
	[Token(Token = "0x400122F")]
	Difference
}
[Token(Token = "0x200028D")]
public static class VisHelper
{
	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xC6A8DC", Offset = "0xC6A8DC", VA = "0xC6A8DC")]
	public static int Validate(int currentValue, int minValue, int maxValue, int defaultValue, UnityEngine.Object obj, string fieldName, bool error)
	{
		return default(int);
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xC67C78", Offset = "0xC67C78", VA = "0xC67C78")]
	public static float Validate(float currentValue, float minValue, float maxValue, float defaultValue, UnityEngine.Object obj, string fieldName, bool error)
	{
		return default(float);
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xC66388", Offset = "0xC66388", VA = "0xC66388")]
	public static float ConvertBetweenRanges(float sourceValue, float sourceMin, float sourceMax, float destMin, float destMax, bool invertDestValue)
	{
		return default(float);
	}
}
[Token(Token = "0x200028E")]
public enum GameObjectProperty
{
	[Token(Token = "0x4001231")]
	XPosition,
	[Token(Token = "0x4001232")]
	YPosition,
	[Token(Token = "0x4001233")]
	ZPosition,
	[Token(Token = "0x4001234")]
	XRotation,
	[Token(Token = "0x4001235")]
	YRotation,
	[Token(Token = "0x4001236")]
	ZRotation,
	[Token(Token = "0x4001237")]
	XVelocity,
	[Token(Token = "0x4001238")]
	YVelocity,
	[Token(Token = "0x4001239")]
	ZVelocity,
	[Token(Token = "0x400123A")]
	XAngularVelocity,
	[Token(Token = "0x400123B")]
	YAngularVelocity,
	[Token(Token = "0x400123C")]
	ZAngularVelocity,
	[Token(Token = "0x400123D")]
	UniformScale,
	[Token(Token = "0x400123E")]
	XScale,
	[Token(Token = "0x400123F")]
	YScale,
	[Token(Token = "0x4001240")]
	ZScale
}
[Token(Token = "0x200028F")]
public enum EmitterProperty
{
	[Token(Token = "0x4001242")]
	AngularVelocity,
	[Token(Token = "0x4001243")]
	RandomAngularVelocity,
	[Token(Token = "0x4001244")]
	EmitterVelocityScale,
	[Token(Token = "0x4001245")]
	MinSize,
	[Token(Token = "0x4001246")]
	MaxSize,
	[Token(Token = "0x4001247")]
	MinEnergy,
	[Token(Token = "0x4001248")]
	MaxEnergy,
	[Token(Token = "0x4001249")]
	MinEmission,
	[Token(Token = "0x400124A")]
	MaxEmission
}
[Token(Token = "0x2000290")]
public enum LightProperty
{
	[Token(Token = "0x400124C")]
	ColorRed,
	[Token(Token = "0x400124D")]
	ColorGreen,
	[Token(Token = "0x400124E")]
	ColorBlue,
	[Token(Token = "0x400124F")]
	ColorRGB,
	[Token(Token = "0x4001250")]
	ColorAlpha,
	[Token(Token = "0x4001251")]
	Intensity,
	[Token(Token = "0x4001252")]
	Range,
	[Token(Token = "0x4001253")]
	SpotAngle,
	[Token(Token = "0x4001254")]
	ShadowBias,
	[Token(Token = "0x4001255")]
	ShadowSoftness_DEPRECATED,
	[Token(Token = "0x4001256")]
	ShadowSoftnessFade_DEPRECATED,
	[Token(Token = "0x4001257")]
	ShadowStrength
}
[Token(Token = "0x2000291")]
public enum AnimationStateProperty
{
	[Token(Token = "0x4001259")]
	Speed,
	[Token(Token = "0x400125A")]
	NormalizedTime,
	[Token(Token = "0x400125B")]
	Weight
}
[Token(Token = "0x2000292")]
public static class VisPropertyHelper
{
	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xC6D178", Offset = "0xC6D178", VA = "0xC6D178")]
	public static void SetGameObjectProperty(GameObject gameObject, GameObjectProperty targetProperty, float propertyValue)
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xC6DFE8", Offset = "0xC6DFE8", VA = "0xC6DFE8")]
	public static void SetLightProperty(Light light, LightProperty targetProperty, float propertyValue)
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0xC66870", Offset = "0xC66870", VA = "0xC66870")]
	public static void SetAnimationStateProperty(AnimationState animationState, AnimationStateProperty targetProperty, float propertyValue)
	{
	}
}
[Token(Token = "0x2000293")]
public class cnCalibrate : MonoBehaviour
{
	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerHead;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform avatarHead;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform avatarCalibrate;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform selfAvatar;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform selfLeadAvatar;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leftHandAnchor;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform rightHandAnchor;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform avatarLeftHandAnchor;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform avatarRightHandAnchor;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float speed;

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0xC7B46C", Offset = "0xC7B46C", VA = "0xC7B46C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0xC7B470", Offset = "0xC7B470", VA = "0xC7B470")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xC7BC1C", Offset = "0xC7BC1C", VA = "0xC7BC1C")]
	public cnCalibrate()
	{
	}
}
[Token(Token = "0x2000294")]
public class cnMultiplierEffectController : MonoBehaviour
{
	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject multiplierEffectPrefab;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightController;

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xC7BC2C", Offset = "0xC7BC2C", VA = "0xC7BC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xC7BC30", Offset = "0xC7BC30", VA = "0xC7BC30")]
	private void Update()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xC7BCC4", Offset = "0xC7BCC4", VA = "0xC7BCC4")]
	public cnMultiplierEffectController()
	{
	}
}
[Token(Token = "0x2000295")]
public class cnOculusOptions : MonoBehaviour
{
	[Token(Token = "0x60012CC")]
	[Address(RVA = "0xC7BCCC", Offset = "0xC7BCCC", VA = "0xC7BCCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xC7BDA8", Offset = "0xC7BDA8", VA = "0xC7BDA8")]
	private void SetLevels(int level)
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xC7BE90", Offset = "0xC7BE90", VA = "0xC7BE90")]
	private void Update()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xC7BF70", Offset = "0xC7BF70", VA = "0xC7BF70")]
	public cnOculusOptions()
	{
	}
}
[Token(Token = "0x2000296")]
public class cnPaintWorld : MonoBehaviour
{
	[Token(Token = "0x200065C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D5B8", Offset = "0x85D5B8")]
	private sealed class <FadeCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cnPaintWorld <>4__this;

		[Token(Token = "0x4002CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x4002CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__2;

		[Token(Token = "0x170003E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B05")]
			[Address(RVA = "0xC7C720", Offset = "0xC7C720", VA = "0xC7C720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B07")]
			[Address(RVA = "0xC7C788", Offset = "0xC7C788", VA = "0xC7C788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0xC7C420", Offset = "0xC7C420", VA = "0xC7C420")]
		[DebuggerHidden]
		public <FadeCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0xC7C608", Offset = "0xC7C608", VA = "0xC7C608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0xC7C60C", Offset = "0xC7C60C", VA = "0xC7C60C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0xC7C728", Offset = "0xC7C728", VA = "0xC7C728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftController;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightController;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer rend;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color alpha;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color black;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D textureBrush;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool didHitLeft;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool didHitRight;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float currentTime;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D tex;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int colorDataIndex;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> colorData;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color[] brushColor;

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xC7BF78", Offset = "0xC7BF78", VA = "0xC7BF78")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0xC7C1B8", Offset = "0xC7C1B8", VA = "0xC7C1B8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xC7C2CC", Offset = "0xC7C2CC", VA = "0xC7C2CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xC7C320", Offset = "0xC7C320", VA = "0xC7C320")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xC7C354", Offset = "0xC7C354", VA = "0xC7C354")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xC7C388", Offset = "0xC7C388", VA = "0xC7C388")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870714", Offset = "0x870714")]
	private IEnumerator FadeCoroutine(Color color)
	{
		return null;
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xC7C44C", Offset = "0xC7C44C", VA = "0xC7C44C")]
	private void Reveal(int skip, Color color)
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xC7C530", Offset = "0xC7C530", VA = "0xC7C530")]
	public cnPaintWorld()
	{
	}
}
[Serializable]
[Token(Token = "0x2000297")]
public struct KeyMaterialMapEntry
{
	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public KeyCode key;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string keyNameOverride;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material material;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string materialNameOverride;
}
[Token(Token = "0x2000298")]
public class MaterialSwap : MonoBehaviour
{
	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text outputElement;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetMesh;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<KeyMaterialMapEntry> keyMaterialMap;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject canvas;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string entryTemplate;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color highlightColor;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool highlightCurrent;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int currentEntry;

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xA20458", Offset = "0xA20458", VA = "0xA20458")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xA20830", Offset = "0xA20830", VA = "0xA20830")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xA20940", Offset = "0xA20940", VA = "0xA20940")]
	public void Previous()
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xA209E4", Offset = "0xA209E4", VA = "0xA209E4")]
	public void Next()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xA20594", Offset = "0xA20594", VA = "0xA20594")]
	private void generateLabelText()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xA20520", Offset = "0xA20520", VA = "0xA20520")]
	private void loadMaterial(Material material)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xA20A94", Offset = "0xA20A94", VA = "0xA20A94")]
	private static string colorToHex(Color32 color)
	{
		return null;
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xA20C54", Offset = "0xA20C54", VA = "0xA20C54")]
	public MaterialSwap()
	{
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x2000299")]
	public class GUIArrows : MonoBehaviour
	{
		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ShowAngle;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_DesiredDirection;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_ArrowRenderers;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_CurrentAlpha;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_TargetAlpha;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_FadeSpeed;

		[Token(Token = "0x4001289")]
		private const string k_MaterialPropertyName = "_Alpha";

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xC07234", Offset = "0xC07234", VA = "0xC07234")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xC07248", Offset = "0xC07248", VA = "0xC07248")]
		private void Update()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xC074A0", Offset = "0xC074A0", VA = "0xC074A0")]
		public void Hide()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xC074C8", Offset = "0xC074C8", VA = "0xC074C8")]
		public void Show()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xC074F0", Offset = "0xC074F0", VA = "0xC074F0")]
		public GUIArrows()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class InputWarnings : MonoBehaviour
	{
		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D5C8", Offset = "0x85D5C8")]
		private sealed class <SingleClickCheckDelay>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputWarnings <>4__this;

			[Token(Token = "0x170003E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B0B")]
				[Address(RVA = "0xC084E8", Offset = "0xC084E8", VA = "0xC084E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B0D")]
				[Address(RVA = "0xC08550", Offset = "0xC08550", VA = "0xC08550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B08")]
			[Address(RVA = "0xC07F38", Offset = "0xC07F38", VA = "0xC07F38")]
			[DebuggerHidden]
			public <SingleClickCheckDelay>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002B09")]
			[Address(RVA = "0xC08400", Offset = "0xC08400", VA = "0xC08400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0xC08404", Offset = "0xC08404", VA = "0xC08404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0xC084F0", Offset = "0xC084F0", VA = "0xC084F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D5D8", Offset = "0x85D5D8")]
		private sealed class <DisplayWarning>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputWarnings <>4__this;

			[Token(Token = "0x4002CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string message;

			[Token(Token = "0x170003EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B11")]
				[Address(RVA = "0xC08390", Offset = "0xC08390", VA = "0xC08390", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B13")]
				[Address(RVA = "0xC083F8", Offset = "0xC083F8", VA = "0xC083F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0xC07F64", Offset = "0xC07F64", VA = "0xC07F64")]
			[DebuggerHidden]
			public <DisplayWarning>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0xC0813C", Offset = "0xC0813C", VA = "0xC0813C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B10")]
			[Address(RVA = "0xC08140", Offset = "0xC08140", VA = "0xC08140", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B12")]
			[Address(RVA = "0xC08398", Offset = "0xC08398", VA = "0xC08398", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_WarningDisplayTime;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_ShowDoubleTapWarnings;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_DoubleTapWarningMessage;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_ShowSingleTapWarnings;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_SingleTapWarningMessage;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_WarningText;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_BackgroundImage;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_TextTransform;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_WarningCoroutine;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_SingleClickDelayCoroutine;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_DisplayingWarning;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private VRInput.SwipeDirection m_CurrentSwipe;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_DownTime;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_WarningPosition;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_ScaleMultiplier;

		[Token(Token = "0x400129C")]
		private const float k_ClickIsHoldTime = 0.5f;

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xC07504", Offset = "0xC07504", VA = "0xC07504")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xC075C0", Offset = "0xC075C0", VA = "0xC075C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xC07990", Offset = "0xC07990", VA = "0xC07990")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xC07D60", Offset = "0xC07D60", VA = "0xC07D60")]
		private void HandleDoubleClick()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xC07E34", Offset = "0xC07E34", VA = "0xC07E34")]
		private void HandleClick()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xC07F08", Offset = "0xC07F08", VA = "0xC07F08")]
		private void HandleSwipe(VRInput.SwipeDirection swipe)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xC07F10", Offset = "0xC07F10", VA = "0xC07F10")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xC07E98", Offset = "0xC07E98", VA = "0xC07E98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870778", Offset = "0x870778")]
		private IEnumerator SingleClickCheckDelay()
		{
			return null;
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xC07DB8", Offset = "0xC07DB8", VA = "0xC07DB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8707DC", Offset = "0x8707DC")]
		private IEnumerator DisplayWarning(string message)
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xC07F90", Offset = "0xC07F90", VA = "0xC07F90")]
		public void TurnOnDoubleTapWarnings()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xC0802C", Offset = "0xC0802C", VA = "0xC0802C")]
		public void TurnOffDoubleTapWarnings()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xC08034", Offset = "0xC08034", VA = "0xC08034")]
		public void TurnOnSingleTapWarnings()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xC080D0", Offset = "0xC080D0", VA = "0xC080D0")]
		public void TurnOffSingleTapWarnings()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xC080D8", Offset = "0xC080D8", VA = "0xC080D8")]
		public InputWarnings()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_Prefabs;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_NumberInPool;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> m_Pool;

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xC08558", Offset = "0xC08558", VA = "0xC08558")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xC0859C", Offset = "0xC0859C", VA = "0xC0859C")]
		private void AddToPool()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xC086BC", Offset = "0xC086BC", VA = "0xC086BC")]
		public GameObject GetGameObjectFromPool()
		{
			return null;
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xC0878C", Offset = "0xC0878C", VA = "0xC0878C")]
		public void ReturnGameObjectToPool(GameObject go)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xC08838", Offset = "0xC08838", VA = "0xC08838")]
		public ObjectPool()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class PlatformDependentText : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200065F")]
		public class PlatformTextPair
		{
			[Token(Token = "0x4002CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RuntimePlatform m_Platform;

			[Token(Token = "0x4002CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Multiline]
			public string m_Text;

			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xC08C28", Offset = "0xC08C28", VA = "0xC08C28")]
			public PlatformTextPair(RuntimePlatform platform)
			{
			}
		}

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_TextComponent;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlatformTextPair[] m_PlatformTextPairs;

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xC088A8", Offset = "0xC088A8", VA = "0xC088A8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xC089D0", Offset = "0xC089D0", VA = "0xC089D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xC08A88", Offset = "0xC08A88", VA = "0xC08A88")]
		public PlatformDependentText()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class Reticle : MonoBehaviour
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_DefaultDistance;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_UseNormal;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_ReticleTransform;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_OriginalScale;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x17000161")]
		public bool UseNormal
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xC08C54", Offset = "0xC08C54", VA = "0xC08C54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012FC")]
			[Address(RVA = "0xC08C5C", Offset = "0xC08C5C", VA = "0xC08C5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public Transform ReticleTransform
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xC08C68", Offset = "0xC08C68", VA = "0xC08C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xC08C70", Offset = "0xC08C70", VA = "0xC08C70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xC08CC0", Offset = "0xC08CC0", VA = "0xC08CC0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xC08CE0", Offset = "0xC08CE0", VA = "0xC08CE0")]
		public void Show()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xC08D00", Offset = "0xC08D00", VA = "0xC08D00")]
		public void SetPosition()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xC08E48", Offset = "0xC08E48", VA = "0xC08E48")]
		public void SetPosition(RaycastHit hit)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xC09000", Offset = "0xC09000", VA = "0xC09000")]
		public Reticle()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class ReturnToMainMenu : MonoBehaviour
	{
		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D5E8", Offset = "0x85D5E8")]
		private sealed class <FadeToMenu>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReturnToMainMenu <>4__this;

			[Token(Token = "0x170003ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B18")]
				[Address(RVA = "0xC094AC", Offset = "0xC094AC", VA = "0xC094AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B1A")]
				[Address(RVA = "0xC09514", Offset = "0xC09514", VA = "0xC09514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B15")]
			[Address(RVA = "0xC09304", Offset = "0xC09304", VA = "0xC09304")]
			[DebuggerHidden]
			public <FadeToMenu>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002B16")]
			[Address(RVA = "0xC09388", Offset = "0xC09388", VA = "0xC09388", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B17")]
			[Address(RVA = "0xC0938C", Offset = "0xC0938C", VA = "0xC0938C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B19")]
			[Address(RVA = "0xC094B4", Offset = "0xC094B4", VA = "0xC094B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_MenuSceneName;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRCameraFade m_VRCameraFade;

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xC09010", Offset = "0xC09010", VA = "0xC09010")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xC0913C", Offset = "0xC0913C", VA = "0xC0913C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xC09268", Offset = "0xC09268", VA = "0xC09268")]
		private void HandleCancel()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xC09294", Offset = "0xC09294", VA = "0xC09294")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870840", Offset = "0x870840")]
		private IEnumerator FadeToMenu()
		{
			return null;
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xC09330", Offset = "0xC09330", VA = "0xC09330")]
		public ReturnToMainMenu()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class SelectionRadial : MonoBehaviour
	{
		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D5F8", Offset = "0x85D5F8")]
		private sealed class <FillSelectionRadial>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x4002CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170003EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B1E")]
				[Address(RVA = "0xC09CFC", Offset = "0xC09CFC", VA = "0xC09CFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B20")]
				[Address(RVA = "0xC09D64", Offset = "0xC09D64", VA = "0xC09D64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0xC09A8C", Offset = "0xC09A8C", VA = "0xC09A8C")]
			[DebuggerHidden]
			public <FillSelectionRadial>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0xC09C00", Offset = "0xC09C00", VA = "0xC09C00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0xC09C04", Offset = "0xC09C04", VA = "0xC09C04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0xC09D04", Offset = "0xC09D04", VA = "0xC09D04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D608", Offset = "0x85D608")]
		private sealed class <WaitForSelectionRadialToFill>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x170003F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B24")]
				[Address(RVA = "0xC09DF0", Offset = "0xC09DF0", VA = "0xC09DF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B26")]
				[Address(RVA = "0xC09E58", Offset = "0xC09E58", VA = "0xC09E58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B21")]
			[Address(RVA = "0xC09B28", Offset = "0xC09B28", VA = "0xC09B28")]
			[DebuggerHidden]
			public <WaitForSelectionRadialToFill>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002B22")]
			[Address(RVA = "0xC09D6C", Offset = "0xC09D6C", VA = "0xC09D6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B23")]
			[Address(RVA = "0xC09D70", Offset = "0xC09D70", VA = "0xC09D70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B25")]
			[Address(RVA = "0xC09DF8", Offset = "0xC09DF8", VA = "0xC09DF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_SelectionDuration;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_HideOnStart;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_Selection;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_SelectionFillRoutine;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_IsSelectionRadialActive;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_RadialFilled;

		[Token(Token = "0x17000163")]
		public float SelectionDuration
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0xC09664", Offset = "0xC09664", VA = "0xC09664")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000039")]
		public event Action OnSelectionComplete
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0xC0951C", Offset = "0xC0951C", VA = "0xC0951C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8708A4", Offset = "0x8708A4")]
			add
			{
			}
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xC095C0", Offset = "0xC095C0", VA = "0xC095C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8708B4", Offset = "0x8708B4")]
			remove
			{
			}
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xC0966C", Offset = "0xC0966C", VA = "0xC0966C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xC097D0", Offset = "0xC097D0", VA = "0xC097D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xC09934", Offset = "0xC09934", VA = "0xC09934")]
		private void Start()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xC099D4", Offset = "0xC099D4", VA = "0xC099D4")]
		public void Show()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xC09980", Offset = "0xC09980", VA = "0xC09980")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xC09A1C", Offset = "0xC09A1C", VA = "0xC09A1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8708C4", Offset = "0x8708C4")]
		private IEnumerator FillSelectionRadial()
		{
			return null;
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xC09AB8", Offset = "0xC09AB8", VA = "0xC09AB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870928", Offset = "0x870928")]
		public IEnumerator WaitForSelectionRadialToFill()
		{
			return null;
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xC09B54", Offset = "0xC09B54", VA = "0xC09B54")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xC09B90", Offset = "0xC09B90", VA = "0xC09B90")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xC09BE8", Offset = "0xC09BE8", VA = "0xC09BE8")]
		public SelectionRadial()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class SelectionSlider : MonoBehaviour
	{
		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D618", Offset = "0x85D618")]
		private sealed class <WaitForBarToFill>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x170003F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B2A")]
				[Address(RVA = "0xC0ABDC", Offset = "0xC0ABDC", VA = "0xC0ABDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B2C")]
				[Address(RVA = "0xC0AC44", Offset = "0xC0AC44", VA = "0xC0AC44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B27")]
			[Address(RVA = "0xC0A5A4", Offset = "0xC0A5A4", VA = "0xC0A5A4")]
			[DebuggerHidden]
			public <WaitForBarToFill>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002B28")]
			[Address(RVA = "0xC0AA8C", Offset = "0xC0AA8C", VA = "0xC0AA8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B29")]
			[Address(RVA = "0xC0AA90", Offset = "0xC0AA90", VA = "0xC0AA90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0xC0ABE4", Offset = "0xC0ABE4", VA = "0xC0ABE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D628", Offset = "0x85D628")]
		private sealed class <FillBar>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x4002CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fillTime>5__2;

			[Token(Token = "0x170003F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B30")]
				[Address(RVA = "0xC0AA1C", Offset = "0xC0AA1C", VA = "0xC0AA1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B32")]
				[Address(RVA = "0xC0AA84", Offset = "0xC0AA84", VA = "0xC0AA84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0xC0A640", Offset = "0xC0A640", VA = "0xC0A640")]
			[DebuggerHidden]
			public <FillBar>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0xC0A88C", Offset = "0xC0A88C", VA = "0xC0A88C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0xC0A890", Offset = "0xC0A890", VA = "0xC0A890", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B31")]
			[Address(RVA = "0xC0AA24", Offset = "0xC0AA24", VA = "0xC0AA24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Duration;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_Audio;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip m_OnOverClip;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_OnFilledClip;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider m_Slider;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_BarCanvas;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UIFader m_UIFader;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Collider m_Collider;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_DisableOnBarFill;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[SerializeField]
		private bool m_DisappearOnBarFill;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool m_BarFilled;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		private bool m_GazeOver;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_Timer;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine m_FillBarRoutine;

		[Token(Token = "0x40012C7")]
		private const string k_SliderMaterialPropertyName = "_SliderValue";

		[Token(Token = "0x1400003A")]
		public event Action OnBarFilled
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0xC09E60", Offset = "0xC09E60", VA = "0xC09E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87098C", Offset = "0x87098C")]
			add
			{
			}
			[Token(Token = "0x6001317")]
			[Address(RVA = "0xC09F04", Offset = "0xC09F04", VA = "0xC09F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87099C", Offset = "0x87099C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xC09FA8", Offset = "0xC09FA8", VA = "0xC09FA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xC0A220", Offset = "0xC0A220", VA = "0xC0A220")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xC0A498", Offset = "0xC0A498", VA = "0xC0A498")]
		private void Update()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xC0A534", Offset = "0xC0A534", VA = "0xC0A534")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8709AC", Offset = "0x8709AC")]
		public IEnumerator WaitForBarToFill()
		{
			return null;
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xC0A5D0", Offset = "0xC0A5D0", VA = "0xC0A5D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870A10", Offset = "0x870A10")]
		private IEnumerator FillBar()
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xC0A66C", Offset = "0xC0A66C", VA = "0xC0A66C")]
		private void SetSliderValue(float sliderValue)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xC0A77C", Offset = "0xC0A77C", VA = "0xC0A77C")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xC0A7B8", Offset = "0xC0A7B8", VA = "0xC0A7B8")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xC0A7F4", Offset = "0xC0A7F4", VA = "0xC0A7F4")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xC0A83C", Offset = "0xC0A83C", VA = "0xC0A83C")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xC0A87C", Offset = "0xC0A87C", VA = "0xC0A87C")]
		public SelectionSlider()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class UIFader : MonoBehaviour
	{
		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D638", Offset = "0x85D638")]
		private sealed class <WaitForFadeIn>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B36")]
				[Address(RVA = "0xC0BD68", Offset = "0xC0BD68", VA = "0xC0BD68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B38")]
				[Address(RVA = "0xC0BDD0", Offset = "0xC0BDD0", VA = "0xC0BDD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B33")]
			[Address(RVA = "0xC0AF60", Offset = "0xC0AF60", VA = "0xC0AF60")]
			[DebuggerHidden]
			public <WaitForFadeIn>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002B34")]
			[Address(RVA = "0xC0BCD8", Offset = "0xC0BCD8", VA = "0xC0BCD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B35")]
			[Address(RVA = "0xC0BCDC", Offset = "0xC0BCDC", VA = "0xC0BCDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xC0BD70", Offset = "0xC0BD70", VA = "0xC0BD70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D648", Offset = "0x85D648")]
		private sealed class <InteruptAndFadeIn>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B3C")]
				[Address(RVA = "0xC0BB74", Offset = "0xC0BB74", VA = "0xC0BB74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B3E")]
				[Address(RVA = "0xC0BBDC", Offset = "0xC0BBDC", VA = "0xC0BBDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B39")]
			[Address(RVA = "0xC0AFFC", Offset = "0xC0AFFC", VA = "0xC0AFFC")]
			[DebuggerHidden]
			public <InteruptAndFadeIn>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0xC0BAF0", Offset = "0xC0BAF0", VA = "0xC0BAF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0xC0BAF4", Offset = "0xC0BAF4", VA = "0xC0BAF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0xC0BB7C", Offset = "0xC0BB7C", VA = "0xC0BB7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D658", Offset = "0x85D658")]
		private sealed class <CheckAndFadeIn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B42")]
				[Address(RVA = "0xC0B560", Offset = "0xC0B560", VA = "0xC0B560", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B44")]
				[Address(RVA = "0xC0B5C8", Offset = "0xC0B5C8", VA = "0xC0B5C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0xC0B098", Offset = "0xC0B098", VA = "0xC0B098")]
			[DebuggerHidden]
			public <CheckAndFadeIn>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002B40")]
			[Address(RVA = "0xC0B4D8", Offset = "0xC0B4D8", VA = "0xC0B4D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B41")]
			[Address(RVA = "0xC0B4DC", Offset = "0xC0B4DC", VA = "0xC0B4DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B43")]
			[Address(RVA = "0xC0B568", Offset = "0xC0B568", VA = "0xC0B568", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D668", Offset = "0x85D668")]
		private sealed class <FadeIn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x4002CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lowestAlpha>5__2;

			[Token(Token = "0x170003FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B48")]
				[Address(RVA = "0xC0B874", Offset = "0xC0B874", VA = "0xC0B874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B4A")]
				[Address(RVA = "0xC0B8DC", Offset = "0xC0B8DC", VA = "0xC0B8DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B45")]
			[Address(RVA = "0xC0B134", Offset = "0xC0B134", VA = "0xC0B134")]
			[DebuggerHidden]
			public <FadeIn>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002B46")]
			[Address(RVA = "0xC0B6C8", Offset = "0xC0B6C8", VA = "0xC0B6C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B47")]
			[Address(RVA = "0xC0B6CC", Offset = "0xC0B6CC", VA = "0xC0B6CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B49")]
			[Address(RVA = "0xC0B87C", Offset = "0xC0B87C", VA = "0xC0B87C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D678", Offset = "0x85D678")]
		private sealed class <WaitForFadeOut>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170003FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B4E")]
				[Address(RVA = "0xC0BE68", Offset = "0xC0BE68", VA = "0xC0BE68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000400")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B50")]
				[Address(RVA = "0xC0BED0", Offset = "0xC0BED0", VA = "0xC0BED0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0xC0B1D0", Offset = "0xC0B1D0", VA = "0xC0B1D0")]
			[DebuggerHidden]
			public <WaitForFadeOut>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0xC0BDD8", Offset = "0xC0BDD8", VA = "0xC0BDD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0xC0BDDC", Offset = "0xC0BDDC", VA = "0xC0BDDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0xC0BE70", Offset = "0xC0BE70", VA = "0xC0BE70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D688", Offset = "0x85D688")]
		private sealed class <InteruptAndFadeOut>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000401")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B54")]
				[Address(RVA = "0xC0BC68", Offset = "0xC0BC68", VA = "0xC0BC68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000402")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B56")]
				[Address(RVA = "0xC0BCD0", Offset = "0xC0BCD0", VA = "0xC0BCD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B51")]
			[Address(RVA = "0xC0B26C", Offset = "0xC0B26C", VA = "0xC0B26C")]
			[DebuggerHidden]
			public <InteruptAndFadeOut>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002B52")]
			[Address(RVA = "0xC0BBE4", Offset = "0xC0BBE4", VA = "0xC0BBE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0xC0BBE8", Offset = "0xC0BBE8", VA = "0xC0BBE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0xC0BC70", Offset = "0xC0BC70", VA = "0xC0BC70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D698", Offset = "0x85D698")]
		private sealed class <CheckAndFadeOut>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000403")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B5A")]
				[Address(RVA = "0xC0B658", Offset = "0xC0B658", VA = "0xC0B658", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000404")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B5C")]
				[Address(RVA = "0xC0B6C0", Offset = "0xC0B6C0", VA = "0xC0B6C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B57")]
			[Address(RVA = "0xC0B308", Offset = "0xC0B308", VA = "0xC0B308")]
			[DebuggerHidden]
			public <CheckAndFadeOut>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002B58")]
			[Address(RVA = "0xC0B5D0", Offset = "0xC0B5D0", VA = "0xC0B5D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B59")]
			[Address(RVA = "0xC0B5D4", Offset = "0xC0B5D4", VA = "0xC0B5D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0xC0B660", Offset = "0xC0B660", VA = "0xC0B660", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D6A8", Offset = "0x85D6A8")]
		private sealed class <FadeOut>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x4002D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <highestAlpha>5__2;

			[Token(Token = "0x17000405")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B60")]
				[Address(RVA = "0xC0BA80", Offset = "0xC0BA80", VA = "0xC0BA80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000406")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B62")]
				[Address(RVA = "0xC0BAE8", Offset = "0xC0BAE8", VA = "0xC0BAE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0xC0B3A4", Offset = "0xC0B3A4", VA = "0xC0B3A4")]
			[DebuggerHidden]
			public <FadeOut>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0xC0B8E4", Offset = "0xC0B8E4", VA = "0xC0B8E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0xC0B8E8", Offset = "0xC0B8E8", VA = "0xC0B8E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B61")]
			[Address(RVA = "0xC0BA88", Offset = "0xC0BA88", VA = "0xC0BA88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_FadeSpeed;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup[] m_GroupsToFade;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Fading;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x862E30", Offset = "0x862E30")]
		private bool <Visible>k__BackingField;

		[Token(Token = "0x17000164")]
		public bool Visible
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0xC0AEDC", Offset = "0xC0AEDC", VA = "0xC0AEDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870AB4", Offset = "0x870AB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001328")]
			[Address(RVA = "0xC0AEE4", Offset = "0xC0AEE4", VA = "0xC0AEE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870AC4", Offset = "0x870AC4")]
			private set
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action OnFadeInComplete
		{
			[Token(Token = "0x6001323")]
			[Address(RVA = "0xC0AC4C", Offset = "0xC0AC4C", VA = "0xC0AC4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870A74", Offset = "0x870A74")]
			add
			{
			}
			[Token(Token = "0x6001324")]
			[Address(RVA = "0xC0ACF0", Offset = "0xC0ACF0", VA = "0xC0ACF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870A84", Offset = "0x870A84")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action OnFadeOutComplete
		{
			[Token(Token = "0x6001325")]
			[Address(RVA = "0xC0AD94", Offset = "0xC0AD94", VA = "0xC0AD94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870A94", Offset = "0x870A94")]
			add
			{
			}
			[Token(Token = "0x6001326")]
			[Address(RVA = "0xC0AE38", Offset = "0xC0AE38", VA = "0xC0AE38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870AA4", Offset = "0x870AA4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xC0AEF0", Offset = "0xC0AEF0", VA = "0xC0AEF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870AD4", Offset = "0x870AD4")]
		public IEnumerator WaitForFadeIn()
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xC0AF8C", Offset = "0xC0AF8C", VA = "0xC0AF8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870B38", Offset = "0x870B38")]
		public IEnumerator InteruptAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xC0B028", Offset = "0xC0B028", VA = "0xC0B028")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870B9C", Offset = "0x870B9C")]
		public IEnumerator CheckAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xC0B0C4", Offset = "0xC0B0C4", VA = "0xC0B0C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870C00", Offset = "0x870C00")]
		public IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xC0B160", Offset = "0xC0B160", VA = "0xC0B160")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870C64", Offset = "0x870C64")]
		public IEnumerator WaitForFadeOut()
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xC0B1FC", Offset = "0xC0B1FC", VA = "0xC0B1FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870CC8", Offset = "0x870CC8")]
		public IEnumerator InteruptAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xC0B298", Offset = "0xC0B298", VA = "0xC0B298")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870D2C", Offset = "0x870D2C")]
		public IEnumerator CheckAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xC0B334", Offset = "0xC0B334", VA = "0xC0B334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870D90", Offset = "0x870D90")]
		public IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xC0B3D0", Offset = "0xC0B3D0", VA = "0xC0B3D0")]
		public void SetVisible()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xC0B454", Offset = "0xC0B454", VA = "0xC0B454")]
		public void SetInvisible()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xC0B4C8", Offset = "0xC0B4C8", VA = "0xC0B4C8")]
		public UIFader()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class UIMovement : MonoBehaviour
	{
		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_LookatCamera;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_UIElement;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_RotateWithCamera;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_FollowSpeed;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_DistanceFromCamera;

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xC0BED8", Offset = "0xC0BED8", VA = "0xC0BED8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xC0BFB0", Offset = "0xC0BFB0", VA = "0xC0BFB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xC0C25C", Offset = "0xC0C25C", VA = "0xC0C25C")]
		public UIMovement()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class UITint : MonoBehaviour
	{
		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_Tint;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x862EA0", Offset = "0x862EA0")]
		[SerializeField]
		private float m_TintPercent;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] m_ImagesToTint;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xC0C274", Offset = "0xC0C274", VA = "0xC0C274")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xC0C334", Offset = "0xC0C334", VA = "0xC0C334")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xC0C3F4", Offset = "0xC0C3F4", VA = "0xC0C3F4")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xC0C4E8", Offset = "0xC0C4E8", VA = "0xC0C4E8")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xC0C5DC", Offset = "0xC0C5DC", VA = "0xC0C5DC")]
		public UITint()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class VRCameraFade : MonoBehaviour
	{
		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D6B8", Offset = "0x85D6B8")]
		private sealed class <BeginFadeOut>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x17000407")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B66")]
				[Address(RVA = "0xC0D458", Offset = "0xC0D458", VA = "0xC0D458", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000408")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B68")]
				[Address(RVA = "0xC0D4C0", Offset = "0xC0D4C0", VA = "0xC0D4C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B63")]
			[Address(RVA = "0xC0CB90", Offset = "0xC0CB90", VA = "0xC0CB90")]
			[DebuggerHidden]
			public <BeginFadeOut>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002B64")]
			[Address(RVA = "0xC0D344", Offset = "0xC0D344", VA = "0xC0D344", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B65")]
			[Address(RVA = "0xC0D348", Offset = "0xC0D348", VA = "0xC0D348", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B67")]
			[Address(RVA = "0xC0D460", Offset = "0xC0D460", VA = "0xC0D460", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D6C8", Offset = "0x85D6C8")]
		private sealed class <BeginFadeOut>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4002D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x17000409")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B6C")]
				[Address(RVA = "0xC0D5DC", Offset = "0xC0D5DC", VA = "0xC0D5DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B6E")]
				[Address(RVA = "0xC0D644", Offset = "0xC0D644", VA = "0xC0D644", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B69")]
			[Address(RVA = "0xC0CC50", Offset = "0xC0CC50", VA = "0xC0CC50")]
			[DebuggerHidden]
			public <BeginFadeOut>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0xC0D4C8", Offset = "0xC0D4C8", VA = "0xC0D4C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0xC0D4CC", Offset = "0xC0D4CC", VA = "0xC0D4CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0xC0D5E4", Offset = "0xC0D5E4", VA = "0xC0D5E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D6D8", Offset = "0x85D6D8")]
		private sealed class <BeginFadeIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x1700040B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B72")]
				[Address(RVA = "0xC0D150", Offset = "0xC0D150", VA = "0xC0D150", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B74")]
				[Address(RVA = "0xC0D1B8", Offset = "0xC0D1B8", VA = "0xC0D1B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0xC0CD00", Offset = "0xC0CD00", VA = "0xC0CD00")]
			[DebuggerHidden]
			public <BeginFadeIn>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002B70")]
			[Address(RVA = "0xC0D03C", Offset = "0xC0D03C", VA = "0xC0D03C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B71")]
			[Address(RVA = "0xC0D040", Offset = "0xC0D040", VA = "0xC0D040", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B73")]
			[Address(RVA = "0xC0D158", Offset = "0xC0D158", VA = "0xC0D158", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D6E8", Offset = "0x85D6E8")]
		private sealed class <BeginFadeIn>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4002D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x1700040D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B78")]
				[Address(RVA = "0xC0D2D4", Offset = "0xC0D2D4", VA = "0xC0D2D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B7A")]
				[Address(RVA = "0xC0D33C", Offset = "0xC0D33C", VA = "0xC0D33C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B75")]
			[Address(RVA = "0xC0CDC0", Offset = "0xC0CDC0", VA = "0xC0CDC0")]
			[DebuggerHidden]
			public <BeginFadeIn>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002B76")]
			[Address(RVA = "0xC0D1C0", Offset = "0xC0D1C0", VA = "0xC0D1C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B77")]
			[Address(RVA = "0xC0D1C4", Offset = "0xC0D1C4", VA = "0xC0D1C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B79")]
			[Address(RVA = "0xC0D2DC", Offset = "0xC0D2DC", VA = "0xC0D2DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D6F8", Offset = "0x85D6F8")]
		private sealed class <BeginFade>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startCol;

			[Token(Token = "0x4002D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endCol;

			[Token(Token = "0x4002D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x4002D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <timer>5__2;

			[Token(Token = "0x1700040F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B7E")]
				[Address(RVA = "0xC0CFCC", Offset = "0xC0CFCC", VA = "0xC0CFCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000410")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B80")]
				[Address(RVA = "0xC0D034", Offset = "0xC0D034", VA = "0xC0D034", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0xC0CDEC", Offset = "0xC0CDEC", VA = "0xC0CDEC")]
			[DebuggerHidden]
			public <BeginFade>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0xC0CED0", Offset = "0xC0CED0", VA = "0xC0CED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0xC0CED4", Offset = "0xC0CED4", VA = "0xC0CED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0xC0CFD4", Offset = "0xC0CFD4", VA = "0xC0CFD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_FadeImage;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixerSnapshot m_DefaultSnapshot;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioMixerSnapshot m_FadedSnapshot;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_FadeColor;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_FadeInOnSceneLoad;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool m_FadeInOnStart;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool m_IsFading;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_FadeStartTime;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_FadeOutColor;

		[Token(Token = "0x17000165")]
		public bool IsFading
		{
			[Token(Token = "0x600133E")]
			[Address(RVA = "0xC0C734", Offset = "0xC0C734", VA = "0xC0C734")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action OnFadeComplete
		{
			[Token(Token = "0x600133C")]
			[Address(RVA = "0xC0C5EC", Offset = "0xC0C5EC", VA = "0xC0C5EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870DF4", Offset = "0x870DF4")]
			add
			{
			}
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xC0C690", Offset = "0xC0C690", VA = "0xC0C690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x870E04", Offset = "0x870E04")]
			remove
			{
			}
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xC0C73C", Offset = "0xC0C73C", VA = "0xC0C73C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xC0C800", Offset = "0xC0C800", VA = "0xC0C800")]
		private void Start()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xC0C86C", Offset = "0xC0C86C", VA = "0xC0C86C")]
		private void HandleSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xC0C8CC", Offset = "0xC0C8CC", VA = "0xC0C8CC")]
		public void FadeOut(bool fadeAudio)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xC0C8D8", Offset = "0xC0C8D8", VA = "0xC0C8D8")]
		public void FadeOut(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xC0C860", Offset = "0xC0C860", VA = "0xC0C860")]
		public void FadeIn(bool fadeAudio)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xC0CA98", Offset = "0xC0CA98", VA = "0xC0CA98")]
		public void FadeIn(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xC09428", Offset = "0xC09428", VA = "0xC09428")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870E14", Offset = "0x870E14")]
		public IEnumerator BeginFadeOut(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xC0CBBC", Offset = "0xC0CBBC", VA = "0xC0CBBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870E78", Offset = "0x870E78")]
		public IEnumerator BeginFadeOut(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xC0CC7C", Offset = "0xC0CC7C", VA = "0xC0CC7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870EDC", Offset = "0x870EDC")]
		public IEnumerator BeginFadeIn(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xC0CD2C", Offset = "0xC0CD2C", VA = "0xC0CD2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870F40", Offset = "0x870F40")]
		public IEnumerator BeginFadeIn(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xC0C9D0", Offset = "0xC0C9D0", VA = "0xC0C9D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x870FA4", Offset = "0x870FA4")]
		private IEnumerator BeginFade(Color startCol, Color endCol, float duration)
		{
			return null;
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xC0CE18", Offset = "0xC0CE18", VA = "0xC0CE18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xC0CE94", Offset = "0xC0CE94", VA = "0xC0CE94")]
		public VRCameraFade()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class VRCameraUI : MonoBehaviour
	{
		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas m_Canvas;

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xC0D64C", Offset = "0xC0D64C", VA = "0xC0D64C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xC0D698", Offset = "0xC0D698", VA = "0xC0D698")]
		public VRCameraUI()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class VRDeviceManager : MonoBehaviour
	{
		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_RenderScale;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRDeviceManager s_Instance;

		[Token(Token = "0x17000166")]
		public static VRDeviceManager Instance
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xC0D6A0", Offset = "0xC0D6A0", VA = "0xC0D6A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xC0D790", Offset = "0xC0D790", VA = "0xC0D790")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC0D8D0", Offset = "0xC0D8D0", VA = "0xC0D8D0")]
		public VRDeviceManager()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask m_ExclusionLayers;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInput m_VrInput;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_ShowDebugRay;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_DebugRayLength;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_DebugRayDuration;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_RayLength;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VRInteractiveItem m_CurrentInteractible;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRInteractiveItem m_LastInteractible;

		[Token(Token = "0x17000167")]
		public VRInteractiveItem CurrentInteractible
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0xC0DA2C", Offset = "0xC0DA2C", VA = "0xC0DA2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action<RaycastHit> OnRaycasthit
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0xC0D8E4", Offset = "0xC0D8E4", VA = "0xC0D8E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871008", Offset = "0x871008")]
			add
			{
			}
			[Token(Token = "0x6001353")]
			[Address(RVA = "0xC0D988", Offset = "0xC0D988", VA = "0xC0D988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871018", Offset = "0x871018")]
			remove
			{
			}
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC0DA34", Offset = "0xC0DA34", VA = "0xC0DA34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xC0DB64", Offset = "0xC0DB64", VA = "0xC0DB64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xC0DC94", Offset = "0xC0DC94", VA = "0xC0DC94")]
		private void Update()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xC0DC98", Offset = "0xC0DC98", VA = "0xC0DC98")]
		private void EyeRaycast()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xC0E07C", Offset = "0xC0E07C", VA = "0xC0E07C")]
		private void DeactiveLastInteractible()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xC0E134", Offset = "0xC0E134", VA = "0xC0E134")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xC0E1E4", Offset = "0xC0E1E4", VA = "0xC0E1E4")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xC0E294", Offset = "0xC0E294", VA = "0xC0E294")]
		private void HandleClick()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xC0E344", Offset = "0xC0E344", VA = "0xC0E344")]
		private void HandleDoubleClick()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xC0E3F4", Offset = "0xC0E3F4", VA = "0xC0E3F4")]
		public VREyeRaycaster()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class VRFPSCounter : MonoBehaviour
	{
		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_DeltaTime;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_Text;

		[Token(Token = "0x40012F3")]
		private const float k_SmoothingCoef = 0.1f;

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xC0E410", Offset = "0xC0E410", VA = "0xC0E410")]
		private void Start()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xC0E468", Offset = "0xC0E468", VA = "0xC0E468")]
		private void Update()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xC0E598", Offset = "0xC0E598", VA = "0xC0E598")]
		public VRFPSCounter()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class VRInput : MonoBehaviour
	{
		[Token(Token = "0x2000672")]
		public enum SwipeDirection
		{
			[Token(Token = "0x4002D23")]
			NONE,
			[Token(Token = "0x4002D24")]
			UP,
			[Token(Token = "0x4002D25")]
			DOWN,
			[Token(Token = "0x4002D26")]
			LEFT,
			[Token(Token = "0x4002D27")]
			RIGHT
		}

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_DoubleClickTime;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_SwipeWidth;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 m_MouseDownPosition;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 m_MouseUpPosition;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_LastMouseUpTime;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_LastHorizontalValue;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_LastVerticalValue;

		[Token(Token = "0x17000168")]
		public float DoubleClickTime
		{
			[Token(Token = "0x600136E")]
			[Address(RVA = "0xC0E5A0", Offset = "0xC0E5A0", VA = "0xC0E5A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action<SwipeDirection> OnSwipe
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0xC07848", Offset = "0xC07848", VA = "0xC07848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871028", Offset = "0x871028")]
			add
			{
			}
			[Token(Token = "0x6001363")]
			[Address(RVA = "0xC07C18", Offset = "0xC07C18", VA = "0xC07C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871038", Offset = "0x871038")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event Action OnClick
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0xC077A4", Offset = "0xC077A4", VA = "0xC077A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871048", Offset = "0x871048")]
			add
			{
			}
			[Token(Token = "0x6001365")]
			[Address(RVA = "0xC07B74", Offset = "0xC07B74", VA = "0xC07B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871058", Offset = "0x871058")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action OnDown
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0xC078EC", Offset = "0xC078EC", VA = "0xC078EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871068", Offset = "0x871068")]
			add
			{
			}
			[Token(Token = "0x6001367")]
			[Address(RVA = "0xC07CBC", Offset = "0xC07CBC", VA = "0xC07CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871078", Offset = "0x871078")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action OnUp
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0xC0972C", Offset = "0xC0972C", VA = "0xC0972C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871088", Offset = "0x871088")]
			add
			{
			}
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xC09890", Offset = "0xC09890", VA = "0xC09890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871098", Offset = "0x871098")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event Action OnDoubleClick
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xC07700", Offset = "0xC07700", VA = "0xC07700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8710A8", Offset = "0x8710A8")]
			add
			{
			}
			[Token(Token = "0x600136B")]
			[Address(RVA = "0xC07AD0", Offset = "0xC07AD0", VA = "0xC07AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8710B8", Offset = "0x8710B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action OnCancel
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0xC09098", Offset = "0xC09098", VA = "0xC09098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8710C8", Offset = "0x8710C8")]
			add
			{
			}
			[Token(Token = "0x600136D")]
			[Address(RVA = "0xC091C4", Offset = "0xC091C4", VA = "0xC091C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8710D8", Offset = "0x8710D8")]
			remove
			{
			}
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xC0E5A8", Offset = "0xC0E5A8", VA = "0xC0E5A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xC0E5AC", Offset = "0xC0E5AC", VA = "0xC0E5AC")]
		private void CheckInput()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xC0E74C", Offset = "0xC0E74C", VA = "0xC0E74C")]
		private SwipeDirection DetectSwipe()
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xC0E888", Offset = "0xC0E888", VA = "0xC0E888")]
		private SwipeDirection DetectKeyboardEmulatedSwipe()
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xC0E9B8", Offset = "0xC0E9B8", VA = "0xC0E9B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xC0E9CC", Offset = "0xC0E9CC", VA = "0xC0E9CC")]
		public VRInput()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class VRInteractiveItem : MonoBehaviour
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_IsOver;

		[Token(Token = "0x17000169")]
		public bool IsOver
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0xC0EF04", Offset = "0xC0EF04", VA = "0xC0EF04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000045")]
		public event Action OnOver
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0xC0A0D8", Offset = "0xC0A0D8", VA = "0xC0A0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8710E8", Offset = "0x8710E8")]
			add
			{
			}
			[Token(Token = "0x6001376")]
			[Address(RVA = "0xC0A350", Offset = "0xC0A350", VA = "0xC0A350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8710F8", Offset = "0x8710F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event Action OnOut
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0xC0A17C", Offset = "0xC0A17C", VA = "0xC0A17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871108", Offset = "0x871108")]
			add
			{
			}
			[Token(Token = "0x6001378")]
			[Address(RVA = "0xC0A3F4", Offset = "0xC0A3F4", VA = "0xC0A3F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871118", Offset = "0x871118")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event Action OnClick
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0xC0E9E4", Offset = "0xC0E9E4", VA = "0xC0E9E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871128", Offset = "0x871128")]
			add
			{
			}
			[Token(Token = "0x600137A")]
			[Address(RVA = "0xC0EA88", Offset = "0xC0EA88", VA = "0xC0EA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871138", Offset = "0x871138")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action OnDoubleClick
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0xC0EB2C", Offset = "0xC0EB2C", VA = "0xC0EB2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871148", Offset = "0x871148")]
			add
			{
			}
			[Token(Token = "0x600137C")]
			[Address(RVA = "0xC0EBD0", Offset = "0xC0EBD0", VA = "0xC0EBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871158", Offset = "0x871158")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event Action OnUp
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0xC0EC74", Offset = "0xC0EC74", VA = "0xC0EC74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871168", Offset = "0x871168")]
			add
			{
			}
			[Token(Token = "0x600137E")]
			[Address(RVA = "0xC0ED18", Offset = "0xC0ED18", VA = "0xC0ED18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871178", Offset = "0x871178")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action OnDown
		{
			[Token(Token = "0x600137F")]
			[Address(RVA = "0xC0EDBC", Offset = "0xC0EDBC", VA = "0xC0EDBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871188", Offset = "0x871188")]
			add
			{
			}
			[Token(Token = "0x6001380")]
			[Address(RVA = "0xC0EE60", Offset = "0xC0EE60", VA = "0xC0EE60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871198", Offset = "0x871198")]
			remove
			{
			}
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xC0E05C", Offset = "0xC0E05C", VA = "0xC0E05C")]
		public void Over()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xC0E118", Offset = "0xC0E118", VA = "0xC0E118")]
		public void Out()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xC0E330", Offset = "0xC0E330", VA = "0xC0E330")]
		public void Click()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xC0E3E0", Offset = "0xC0E3E0", VA = "0xC0E3E0")]
		public void DoubleClick()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xC0E1D0", Offset = "0xC0E1D0", VA = "0xC0E1D0")]
		public void Up()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xC0E280", Offset = "0xC0E280", VA = "0xC0E280")]
		public void Down()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xC0EF0C", Offset = "0xC0EF0C", VA = "0xC0EF0C")]
		public VRInteractiveItem()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class VRTrackingReset : MonoBehaviour
	{
		[Token(Token = "0x6001389")]
		[Address(RVA = "0xC0EF14", Offset = "0xC0EF14", VA = "0xC0EF14")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xC0EF74", Offset = "0xC0EF74", VA = "0xC0EF74")]
		public VRTrackingReset()
		{
		}
	}
}
namespace VRStandardAssets.ShootingGallery
{
	[Token(Token = "0x20002AC")]
	public class ShootingGalleryController : MonoBehaviour
	{
		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D708", Offset = "0x85D708")]
		private sealed class <Start>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingGalleryController <>4__this;

			[Token(Token = "0x17000411")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B84")]
				[Address(RVA = "0xB68A9C", Offset = "0xB68A9C", VA = "0xB68A9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000412")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B86")]
				[Address(RVA = "0xB68B04", Offset = "0xB68B04", VA = "0xB68B04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0xB67A0C", Offset = "0xB67A0C", VA = "0xB67A0C")]
			[DebuggerHidden]
			public <Start>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002B82")]
			[Address(RVA = "0xB689A0", Offset = "0xB689A0", VA = "0xB689A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B83")]
			[Address(RVA = "0xB689A4", Offset = "0xB689A4", VA = "0xB689A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B85")]
			[Address(RVA = "0xB68AA4", Offset = "0xB68AA4", VA = "0xB68AA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D718", Offset = "0x85D718")]
		private sealed class <StartPhase>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingGalleryController <>4__this;

			[Token(Token = "0x17000413")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B8A")]
				[Address(RVA = "0xB68D28", Offset = "0xB68D28", VA = "0xB68D28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000414")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B8C")]
				[Address(RVA = "0xB68D90", Offset = "0xB68D90", VA = "0xB68D90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0xB67AA8", Offset = "0xB67AA8", VA = "0xB67AA8")]
			[DebuggerHidden]
			public <StartPhase>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002B88")]
			[Address(RVA = "0xB68B0C", Offset = "0xB68B0C", VA = "0xB68B0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B89")]
			[Address(RVA = "0xB68B10", Offset = "0xB68B10", VA = "0xB68B10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0xB68D30", Offset = "0xB68D30", VA = "0xB68D30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D728", Offset = "0x85D728")]
		private sealed class <PlayPhase>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingGalleryController <>4__this;

			[Token(Token = "0x17000415")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B90")]
				[Address(RVA = "0xB687A4", Offset = "0xB687A4", VA = "0xB687A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000416")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B92")]
				[Address(RVA = "0xB6880C", Offset = "0xB6880C", VA = "0xB6880C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0xB67B44", Offset = "0xB67B44", VA = "0xB67B44")]
			[DebuggerHidden]
			public <PlayPhase>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0xB685A0", Offset = "0xB685A0", VA = "0xB685A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0xB685A4", Offset = "0xB685A4", VA = "0xB685A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B91")]
			[Address(RVA = "0xB687AC", Offset = "0xB687AC", VA = "0xB687AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D738", Offset = "0x85D738")]
		private sealed class <EndPhase>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingGalleryController <>4__this;

			[Token(Token = "0x17000417")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B96")]
				[Address(RVA = "0xB68530", Offset = "0xB68530", VA = "0xB68530", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000418")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B98")]
				[Address(RVA = "0xB68598", Offset = "0xB68598", VA = "0xB68598", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B93")]
			[Address(RVA = "0xB67BE0", Offset = "0xB67BE0", VA = "0xB67BE0")]
			[DebuggerHidden]
			public <EndPhase>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002B94")]
			[Address(RVA = "0xB682A4", Offset = "0xB682A4", VA = "0xB682A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B95")]
			[Address(RVA = "0xB682A8", Offset = "0xB682A8", VA = "0xB682A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B97")]
			[Address(RVA = "0xB68538", Offset = "0xB68538", VA = "0xB68538", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D748", Offset = "0x85D748")]
		private sealed class <PlayUpdate>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingGalleryController <>4__this;

			[Token(Token = "0x4002D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <gameTimer>5__2;

			[Token(Token = "0x4002D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <spawnTimer>5__3;

			[Token(Token = "0x17000419")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B9C")]
				[Address(RVA = "0xB68930", Offset = "0xB68930", VA = "0xB68930", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B9E")]
				[Address(RVA = "0xB68998", Offset = "0xB68998", VA = "0xB68998", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B99")]
			[Address(RVA = "0xB67C7C", Offset = "0xB67C7C", VA = "0xB67C7C")]
			[DebuggerHidden]
			public <PlayUpdate>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0xB68814", Offset = "0xB68814", VA = "0xB68814", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0xB68818", Offset = "0xB68818", VA = "0xB68818", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0xB68938", Offset = "0xB68938", VA = "0xB68938", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SessionData.GameType m_GameType;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_IdealTargetNumber;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_BaseSpawnProbability;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_GameLength;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_SpawnInterval;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_EndDelay;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_SphereSpawnInnerRadius;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_SphereSpawnOuterRadius;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_SphereSpawnMaxHeight;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SelectionSlider m_SelectionSlider;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image m_TimerBar;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ObjectPool m_TargetObjectPool;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoxCollider m_SpawnCollider;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UIController m_UIController;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private InputWarnings m_InputWarnings;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_SpawnProbability;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_ProbabilityDelta;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x863230", Offset = "0x863230")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x1700016A")]
		public bool IsPlaying
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0xB67988", Offset = "0xB67988", VA = "0xB67988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8711A8", Offset = "0x8711A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600138C")]
			[Address(RVA = "0xB67990", Offset = "0xB67990", VA = "0xB67990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8711B8", Offset = "0x8711B8")]
			private set
			{
			}
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xB6799C", Offset = "0xB6799C", VA = "0xB6799C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8711C8", Offset = "0x8711C8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xB67A38", Offset = "0xB67A38", VA = "0xB67A38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87122C", Offset = "0x87122C")]
		private IEnumerator StartPhase()
		{
			return null;
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xB67AD4", Offset = "0xB67AD4", VA = "0xB67AD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871290", Offset = "0x871290")]
		private IEnumerator PlayPhase()
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xB67B70", Offset = "0xB67B70", VA = "0xB67B70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8712F4", Offset = "0x8712F4")]
		private IEnumerator EndPhase()
		{
			return null;
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xB67C0C", Offset = "0xB67C0C", VA = "0xB67C0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871358", Offset = "0x871358")]
		private IEnumerator PlayUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xB67CA8", Offset = "0xB67CA8", VA = "0xB67CA8")]
		private void Spawn(float timeRemaining)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xB67D9C", Offset = "0xB67D9C", VA = "0xB67D9C")]
		private Vector3 SpawnPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xB6810C", Offset = "0xB6810C", VA = "0xB6810C")]
		private void HandleTargetRemoved(ShootingTarget target)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xB68274", Offset = "0xB68274", VA = "0xB68274")]
		public ShootingGalleryController()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class ShootingGalleryGun : MonoBehaviour
	{
		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D758", Offset = "0x85D758")]
		private sealed class <Fire>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingGalleryGun <>4__this;

			[Token(Token = "0x4002D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x4002D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <randomFlareIndex>5__2;

			[Token(Token = "0x1700041B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BA2")]
				[Address(RVA = "0xB696F4", Offset = "0xB696F4", VA = "0xB696F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BA4")]
				[Address(RVA = "0xB6975C", Offset = "0xB6975C", VA = "0xB6975C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0xB69324", Offset = "0xB69324", VA = "0xB69324")]
			[DebuggerHidden]
			public <Fire>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0xB69410", Offset = "0xB69410", VA = "0xB69410", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0xB69414", Offset = "0xB69414", VA = "0xB69414", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0xB696FC", Offset = "0xB696FC", VA = "0xB696FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D768", Offset = "0x85D768")]
		private sealed class <MoveLineRenderer>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingGalleryGun <>4__this;

			[Token(Token = "0x4002D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float lineLength;

			[Token(Token = "0x4002D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timer>5__2;

			[Token(Token = "0x1700041D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BA8")]
				[Address(RVA = "0xB69918", Offset = "0xB69918", VA = "0xB69918", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BAA")]
				[Address(RVA = "0xB69980", Offset = "0xB69980", VA = "0xB69980", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0xB693D0", Offset = "0xB693D0", VA = "0xB693D0")]
			[DebuggerHidden]
			public <MoveLineRenderer>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0xB69764", Offset = "0xB69764", VA = "0xB69764", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0xB69768", Offset = "0xB69768", VA = "0xB69768", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0xB69920", Offset = "0xB69920", VA = "0xB69920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_DefaultLineLength;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_Damping;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_GunFlareVisibleSeconds;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_GunContainerSmoothing;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_GunAudio;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ShootingGalleryController m_ShootingGalleryController;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VREyeRaycaster m_EyeRaycaster;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_CameraTransform;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_GunContainer;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_GunEnd;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LineRenderer m_GunFlare;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ParticleSystem m_FlareParticles;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject[] m_FlareMeshes;

		[Token(Token = "0x400132C")]
		private const float k_DampingCoef = -20f;

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xB68D98", Offset = "0xB68D98", VA = "0xB68D98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xB68DB8", Offset = "0xB68DB8", VA = "0xB68DB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xB68E44", Offset = "0xB68E44", VA = "0xB68E44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xB68ED0", Offset = "0xB68ED0", VA = "0xB68ED0")]
		private void Update()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xB69184", Offset = "0xB69184", VA = "0xB69184")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xB692A8", Offset = "0xB692A8", VA = "0xB692A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8713BC", Offset = "0x8713BC")]
		private IEnumerator Fire(Transform target)
		{
			return null;
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xB69350", Offset = "0xB69350", VA = "0xB69350")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871420", Offset = "0x871420")]
		private IEnumerator MoveLineRenderer(float lineLength)
		{
			return null;
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xB693FC", Offset = "0xB693FC", VA = "0xB693FC")]
		public ShootingGalleryGun()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class ShootingGalleryScore : MonoBehaviour
	{
		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_ScoreText;

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xB69988", Offset = "0xB69988", VA = "0xB69988")]
		private void Update()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xB69A18", Offset = "0xB69A18", VA = "0xB69A18")]
		public ShootingGalleryScore()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class ShootingTarget : MonoBehaviour
	{
		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D778", Offset = "0x85D778")]
		private sealed class <MissTarget>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShootingTarget <>4__this;

			[Token(Token = "0x1700041F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BAE")]
				[Address(RVA = "0xB6A200", Offset = "0xB6A200", VA = "0xB6A200", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000420")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BB0")]
				[Address(RVA = "0xB6A268", Offset = "0xB6A268", VA = "0xB6A268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0xB69CEC", Offset = "0xB69CEC", VA = "0xB69CEC")]
			[DebuggerHidden]
			public <MissTarget>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0xB6A078", Offset = "0xB6A078", VA = "0xB6A078", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0xB6A07C", Offset = "0xB6A07C", VA = "0xB6A07C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0xB6A208", Offset = "0xB6A208", VA = "0xB6A208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D788", Offset = "0x85D788")]
		private sealed class <GameOver>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float gameTimeRemaining;

			[Token(Token = "0x4002D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ShootingTarget <>4__this;

			[Token(Token = "0x17000421")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BB4")]
				[Address(RVA = "0xB6A008", Offset = "0xB6A008", VA = "0xB6A008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000422")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BB6")]
				[Address(RVA = "0xB6A070", Offset = "0xB6A070", VA = "0xB6A070", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0xB69D18", Offset = "0xB69D18", VA = "0xB69D18")]
			[DebuggerHidden]
			public <GameOver>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0xB69F04", Offset = "0xB69F04", VA = "0xB69F04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0xB69F08", Offset = "0xB69F08", VA = "0xB69F08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0xB6A010", Offset = "0xB6A010", VA = "0xB6A010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_Score;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_TimeOutDuration;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_DestroyTimeOutDuration;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_DestroyPrefab;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_DestroyClip;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip m_SpawnClip;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip m_MissedClip;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_CameraTransform;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource m_Audio;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Renderer m_Renderer;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider m_Collider;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_IsEnding;

		[Token(Token = "0x1400004B")]
		public event Action<ShootingTarget> OnRemove
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xB68068", Offset = "0xB68068", VA = "0xB68068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871484", Offset = "0x871484")]
			add
			{
			}
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xB681D0", Offset = "0xB681D0", VA = "0xB681D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871494", Offset = "0x871494")]
			remove
			{
			}
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xB69A20", Offset = "0xB69A20", VA = "0xB69A20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xB69ADC", Offset = "0xB69ADC", VA = "0xB69ADC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xB69B68", Offset = "0xB69B68", VA = "0xB69B68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xB69BF4", Offset = "0xB69BF4", VA = "0xB69BF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xB67FA0", Offset = "0xB67FA0", VA = "0xB67FA0")]
		public void Restart(float gameTimeRemaining)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xB69BFC", Offset = "0xB69BFC", VA = "0xB69BFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8714A4", Offset = "0x8714A4")]
		private IEnumerator MissTarget()
		{
			return null;
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xB69C6C", Offset = "0xB69C6C", VA = "0xB69C6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871508", Offset = "0x871508")]
		private IEnumerator GameOver(float gameTimeRemaining)
		{
			return null;
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xB69D44", Offset = "0xB69D44", VA = "0xB69D44")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xB69EEC", Offset = "0xB69EEC", VA = "0xB69EEC")]
		public ShootingTarget()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class UIController : MonoBehaviour
	{
		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D798", Offset = "0x85D798")]
		private sealed class <ShowIntroUI>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x17000423")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BBA")]
				[Address(RVA = "0xB6A6D0", Offset = "0xB6A6D0", VA = "0xB6A6D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000424")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BBC")]
				[Address(RVA = "0xB6A738", Offset = "0xB6A738", VA = "0xB6A738", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0xB6A270", Offset = "0xB6A270", VA = "0xB6A270")]
			[DebuggerHidden]
			public <ShowIntroUI>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0xB6A650", Offset = "0xB6A650", VA = "0xB6A650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0xB6A654", Offset = "0xB6A654", VA = "0xB6A654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0xB6A6D8", Offset = "0xB6A6D8", VA = "0xB6A6D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D7A8", Offset = "0x85D7A8")]
		private sealed class <HideIntroUI>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x17000425")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BC0")]
				[Address(RVA = "0xB6A400", Offset = "0xB6A400", VA = "0xB6A400", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000426")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BC2")]
				[Address(RVA = "0xB6A468", Offset = "0xB6A468", VA = "0xB6A468", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0xB6A29C", Offset = "0xB6A29C", VA = "0xB6A29C")]
			[DebuggerHidden]
			public <HideIntroUI>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0xB6A380", Offset = "0xB6A380", VA = "0xB6A380", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0xB6A384", Offset = "0xB6A384", VA = "0xB6A384", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0xB6A408", Offset = "0xB6A408", VA = "0xB6A408", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D7B8", Offset = "0x85D7B8")]
		private sealed class <ShowOutroUI>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x17000427")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BC6")]
				[Address(RVA = "0xB6A89C", Offset = "0xB6A89C", VA = "0xB6A89C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000428")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BC8")]
				[Address(RVA = "0xB6A904", Offset = "0xB6A904", VA = "0xB6A904", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0xB6A2C8", Offset = "0xB6A2C8", VA = "0xB6A2C8")]
			[DebuggerHidden]
			public <ShowOutroUI>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0xB6A740", Offset = "0xB6A740", VA = "0xB6A740", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0xB6A744", Offset = "0xB6A744", VA = "0xB6A744", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0xB6A8A4", Offset = "0xB6A8A4", VA = "0xB6A8A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D7C8", Offset = "0x85D7C8")]
		private sealed class <HideOutroUI>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x17000429")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BCC")]
				[Address(RVA = "0xB6A4F0", Offset = "0xB6A4F0", VA = "0xB6A4F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BCE")]
				[Address(RVA = "0xB6A558", Offset = "0xB6A558", VA = "0xB6A558", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0xB6A2F4", Offset = "0xB6A2F4", VA = "0xB6A2F4")]
			[DebuggerHidden]
			public <HideOutroUI>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0xB6A470", Offset = "0xB6A470", VA = "0xB6A470", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0xB6A474", Offset = "0xB6A474", VA = "0xB6A474", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0xB6A4F8", Offset = "0xB6A4F8", VA = "0xB6A4F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D7D8", Offset = "0x85D7D8")]
		private sealed class <ShowPlayerUI>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x1700042B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BD2")]
				[Address(RVA = "0xB6A98C", Offset = "0xB6A98C", VA = "0xB6A98C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD4")]
				[Address(RVA = "0xB6A9F4", Offset = "0xB6A9F4", VA = "0xB6A9F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0xB6A320", Offset = "0xB6A320", VA = "0xB6A320")]
			[DebuggerHidden]
			public <ShowPlayerUI>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0xB6A90C", Offset = "0xB6A90C", VA = "0xB6A90C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0xB6A910", Offset = "0xB6A910", VA = "0xB6A910", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0xB6A994", Offset = "0xB6A994", VA = "0xB6A994", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D7E8", Offset = "0x85D7E8")]
		private sealed class <HidePlayerUI>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x1700042D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BD8")]
				[Address(RVA = "0xB6A5E0", Offset = "0xB6A5E0", VA = "0xB6A5E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BDA")]
				[Address(RVA = "0xB6A648", Offset = "0xB6A648", VA = "0xB6A648", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0xB6A34C", Offset = "0xB6A34C", VA = "0xB6A34C")]
			[DebuggerHidden]
			public <HidePlayerUI>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0xB6A560", Offset = "0xB6A560", VA = "0xB6A560", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0xB6A564", Offset = "0xB6A564", VA = "0xB6A564", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0xB6A5E8", Offset = "0xB6A5E8", VA = "0xB6A5E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UIFader m_IntroUI;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UIFader m_OutroUI;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UIFader m_PlayerUI;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_TotalScore;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_HighScore;

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xB68C48", Offset = "0xB68C48", VA = "0xB68C48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87156C", Offset = "0x87156C")]
		public IEnumerator ShowIntroUI()
		{
			return null;
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xB68CB8", Offset = "0xB68CB8", VA = "0xB68CB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8715D0", Offset = "0x8715D0")]
		public IEnumerator HideIntroUI()
		{
			return null;
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xB68450", Offset = "0xB68450", VA = "0xB68450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871634", Offset = "0x871634")]
		public IEnumerator ShowOutroUI()
		{
			return null;
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xB684C0", Offset = "0xB684C0", VA = "0xB684C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871698", Offset = "0x871698")]
		public IEnumerator HideOutroUI()
		{
			return null;
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xB686C4", Offset = "0xB686C4", VA = "0xB686C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8716FC", Offset = "0x8716FC")]
		public IEnumerator ShowPlayerUI()
		{
			return null;
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xB68734", Offset = "0xB68734", VA = "0xB68734")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871760", Offset = "0x871760")]
		public IEnumerator HidePlayerUI()
		{
			return null;
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xB6A378", Offset = "0xB6A378", VA = "0xB6A378")]
		public UIController()
		{
		}
	}
}
namespace VRStandardAssets.Menu
{
	[Token(Token = "0x20002B1")]
	public class MenuAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D7F8", Offset = "0x85D7F8")]
		private sealed class <PlayTextures>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuAnimator <>4__this;

			[Token(Token = "0x1700042F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BDE")]
				[Address(RVA = "0xB66DB0", Offset = "0xB66DB0", VA = "0xB66DB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000430")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BE0")]
				[Address(RVA = "0xB66E18", Offset = "0xB66E18", VA = "0xB66E18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0xB66CAC", Offset = "0xB66CAC", VA = "0xB66CAC")]
			[DebuggerHidden]
			public <PlayTextures>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xB66CE8", Offset = "0xB66CE8", VA = "0xB66CE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0xB66CEC", Offset = "0xB66CEC", VA = "0xB66CEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0xB66DB8", Offset = "0xB66DB8", VA = "0xB66DB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_FrameRate;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer m_ScreenMesh;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRInteractiveItem m_VRInteractiveItem;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture[] m_AnimTextures;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds m_FrameRateWait;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_CurrentTextureIndex;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_Playing;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xB669F8", Offset = "0xB669F8", VA = "0xB669F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xB66A70", Offset = "0xB66A70", VA = "0xB66A70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xB66B38", Offset = "0xB66B38", VA = "0xB66B38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xB66C00", Offset = "0xB66C00", VA = "0xB66C00")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xB66CA4", Offset = "0xB66CA4", VA = "0xB66CA4")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xB66C34", Offset = "0xB66C34", VA = "0xB66C34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8717C4", Offset = "0x8717C4")]
		private IEnumerator PlayTextures()
		{
			return null;
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xB66CD8", Offset = "0xB66CD8", VA = "0xB66CD8")]
		public MenuAnimator()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class MenuButton : MonoBehaviour
	{
		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D808", Offset = "0x85D808")]
		private sealed class <ActivateButton>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuButton <>4__this;

			[Token(Token = "0x17000431")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BE4")]
				[Address(RVA = "0xB673B0", Offset = "0xB673B0", VA = "0xB673B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000432")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BE6")]
				[Address(RVA = "0xB67418", Offset = "0xB67418", VA = "0xB67418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0xB67284", Offset = "0xB67284", VA = "0xB67284")]
			[DebuggerHidden]
			public <ActivateButton>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xB672B8", Offset = "0xB672B8", VA = "0xB672B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0xB672BC", Offset = "0xB672BC", VA = "0xB672BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0xB673B8", Offset = "0xB673B8", VA = "0xB673B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_SceneToLoad;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRCameraFade m_CameraFade;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_GazeOver;

		[Token(Token = "0x1400004C")]
		public event Action<MenuButton> OnButtonSelected
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xB66E20", Offset = "0xB66E20", VA = "0xB66E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871828", Offset = "0x871828")]
			add
			{
			}
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xB66EC4", Offset = "0xB66EC4", VA = "0xB66EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871838", Offset = "0x871838")]
			remove
			{
			}
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xB66F68", Offset = "0xB66F68", VA = "0xB66F68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xB6706C", Offset = "0xB6706C", VA = "0xB6706C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xB67170", Offset = "0xB67170", VA = "0xB67170")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xB671A8", Offset = "0xB671A8", VA = "0xB671A8")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xB671DC", Offset = "0xB671DC", VA = "0xB671DC")]
		private void HandleSelectionComplete()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xB67214", Offset = "0xB67214", VA = "0xB67214")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871848", Offset = "0x871848")]
		private IEnumerator ActivateButton()
		{
			return null;
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xB672B0", Offset = "0xB672B0", VA = "0xB672B0")]
		public MenuButton()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class MenuItemPopout : MonoBehaviour
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_Transform;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRInteractiveItem m_Item;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_PopSpeed;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_PopDistance;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPosition;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_PoppedPosition;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_TargetPosition;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xB67420", Offset = "0xB67420", VA = "0xB67420")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xB67538", Offset = "0xB67538", VA = "0xB67538")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xB67668", Offset = "0xB67668", VA = "0xB67668")]
		public MenuItemPopout()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class MenuSelectorMover : MonoBehaviour
	{
		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_PopSpeed;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_PopDistance;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_MoveSpeed;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_ParentTransform;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_ChildTransform;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem[] m_Items;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_TargetRotation;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_StartPosition;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_PoppedPosition;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_TargetPosition;

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xB6767C", Offset = "0xB6767C", VA = "0xB6767C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xB67760", Offset = "0xB67760", VA = "0xB67760")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xB6796C", Offset = "0xB6796C", VA = "0xB6796C")]
		public MenuSelectorMover()
		{
		}
	}
}
namespace VRStandardAssets.Maze
{
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A4CC", Offset = "0x85A4CC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A4CC", Offset = "0x85A4CC")]
	public class AICharacterControl : MonoBehaviour
	{
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x863540", Offset = "0x863540")]
		private NavMeshAgent <agent>k__BackingField;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x863550", Offset = "0x863550")]
		private ThirdPersonCharacter <character>k__BackingField;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Player m_Player;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_TargetPosition;

		[Token(Token = "0x1700016B")]
		public NavMeshAgent agent
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xB61F6C", Offset = "0xB61F6C", VA = "0xB61F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8718AC", Offset = "0x8718AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xB61F74", Offset = "0xB61F74", VA = "0xB61F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8718BC", Offset = "0x8718BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public ThirdPersonCharacter character
		{
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0xB61F7C", Offset = "0xB61F7C", VA = "0xB61F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8718CC", Offset = "0x8718CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xB61F84", Offset = "0xB61F84", VA = "0xB61F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8718DC", Offset = "0x8718DC")]
			private set
			{
			}
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xB61F8C", Offset = "0xB61F8C", VA = "0xB61F8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xB6207C", Offset = "0xB6207C", VA = "0xB6207C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xB6237C", Offset = "0xB6237C", VA = "0xB6237C")]
		public void SetTarget(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xB62388", Offset = "0xB62388", VA = "0xB62388")]
		public AICharacterControl()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class AgentTrail : MonoBehaviour
	{
		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D818", Offset = "0x85D818")]
		private sealed class <UpdatePath>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AgentTrail <>4__this;

			[Token(Token = "0x17000433")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BEA")]
				[Address(RVA = "0xB62690", Offset = "0xB62690", VA = "0xB62690", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000434")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BEC")]
				[Address(RVA = "0xB626F8", Offset = "0xB626F8", VA = "0xB626F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0xB624A0", Offset = "0xB624A0", VA = "0xB624A0")]
			[DebuggerHidden]
			public <UpdatePath>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xB624D4", Offset = "0xB624D4", VA = "0xB624D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0xB624D8", Offset = "0xB624D8", VA = "0xB624D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BEB")]
			[Address(RVA = "0xB62698", Offset = "0xB62698", VA = "0xB62698", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshAgent m_Agent;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer m_Line;

		[Token(Token = "0x4001366")]
		private const float k_PathDelay = 0.3f;

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xB62390", Offset = "0xB62390", VA = "0xB62390")]
		private void Update()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xB62404", Offset = "0xB62404", VA = "0xB62404")]
		public void SetDestination()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xB62430", Offset = "0xB62430", VA = "0xB62430")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8718EC", Offset = "0x8718EC")]
		private IEnumerator UpdatePath()
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xB624CC", Offset = "0xB624CC", VA = "0xB624CC")]
		public AgentTrail()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class CameraOrbit : MonoBehaviour
	{
		[Token(Token = "0x2000685")]
		public enum OrbitStyle
		{
			[Token(Token = "0x4002D66")]
			Smooth,
			[Token(Token = "0x4002D67")]
			Step,
			[Token(Token = "0x4002D68")]
			StepWithFade
		}

		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D828", Offset = "0x85D828")]
		private sealed class <RotateCamera>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraOrbit <>4__this;

			[Token(Token = "0x4002D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float increment;

			[Token(Token = "0x17000435")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BF0")]
				[Address(RVA = "0xB62C44", Offset = "0xB62C44", VA = "0xB62C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000436")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF2")]
				[Address(RVA = "0xB62CAC", Offset = "0xB62CAC", VA = "0xB62CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BED")]
			[Address(RVA = "0xB62960", Offset = "0xB62960", VA = "0xB62960")]
			[DebuggerHidden]
			public <RotateCamera>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xB62A50", Offset = "0xB62A50", VA = "0xB62A50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xB62A54", Offset = "0xB62A54", VA = "0xB62A54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xB62C4C", Offset = "0xB62C4C", VA = "0xB62C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OrbitStyle m_OrbitStyle;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_RotationIncrement;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_RotationFadeDuration;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRCameraFade m_CameraFade;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VRInput m_VrInput;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MazeGameController m_MazeGameController;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion m_StartRotation;

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xB62700", Offset = "0xB62700", VA = "0xB62700")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xB62738", Offset = "0xB62738", VA = "0xB62738")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xB627CC", Offset = "0xB627CC", VA = "0xB627CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xB62860", Offset = "0xB62860", VA = "0xB62860")]
		private void HandleSwipe(VRInput.SwipeDirection swipeDirection)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xB628E0", Offset = "0xB628E0", VA = "0xB628E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871950", Offset = "0x871950")]
		private IEnumerator RotateCamera(float increment)
		{
			return null;
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xB6298C", Offset = "0xB6298C", VA = "0xB6298C")]
		public void Restart()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xB62A3C", Offset = "0xB62A3C", VA = "0xB62A3C")]
		public CameraOrbit()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class DestinationMarker : MonoBehaviour
	{
		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MazeTargetSetting m_MazeTargetSetting;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_MarkerMoveAudio;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_Animator;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int m_HashMazeNavMarkerAnimState;

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xB62CB4", Offset = "0xB62CB4", VA = "0xB62CB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xB62CD8", Offset = "0xB62CD8", VA = "0xB62CD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xB62E0C", Offset = "0xB62E0C", VA = "0xB62E0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xB62CB8", Offset = "0xB62CB8", VA = "0xB62CB8")]
		public void Hide()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xB62F40", Offset = "0xB62F40", VA = "0xB62F40")]
		private void Show()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xB62F60", Offset = "0xB62F60", VA = "0xB62F60")]
		public void Restart()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xB62F64", Offset = "0xB62F64", VA = "0xB62F64")]
		private void HandleTargetSet(Transform target)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xB62FEC", Offset = "0xB62FEC", VA = "0xB62FEC")]
		public DestinationMarker()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class ExitArea : MonoBehaviour
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_PlayerTransform;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Player m_Player;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_IsShowingGameOver;

		[Token(Token = "0x1400004D")]
		public event Action OnGameComplete
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xB6304C", Offset = "0xB6304C", VA = "0xB6304C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8719B4", Offset = "0x8719B4")]
			add
			{
			}
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xB630F0", Offset = "0xB630F0", VA = "0xB630F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8719C4", Offset = "0x8719C4")]
			remove
			{
			}
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xB63194", Offset = "0xB63194", VA = "0xB63194")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xB631F4", Offset = "0xB631F4", VA = "0xB631F4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xB63354", Offset = "0xB63354", VA = "0xB63354")]
		public void Restart()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xB6332C", Offset = "0xB6332C", VA = "0xB6332C")]
		private void ShowGameOver()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xB6335C", Offset = "0xB6335C", VA = "0xB6335C")]
		public ExitArea()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class MazeGameController : MonoBehaviour
	{
		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D838", Offset = "0x85D838")]
		private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MazeGameController <>4__this;

			[Token(Token = "0x17000437")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BF6")]
				[Address(RVA = "0xB63FBC", Offset = "0xB63FBC", VA = "0xB63FBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000438")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF8")]
				[Address(RVA = "0xB64024", Offset = "0xB64024", VA = "0xB64024", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xB636A4", Offset = "0xB636A4", VA = "0xB636A4")]
			[DebuggerHidden]
			public <Start>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0xB63ED8", Offset = "0xB63ED8", VA = "0xB63ED8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0xB63EDC", Offset = "0xB63EDC", VA = "0xB63EDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0xB63FC4", Offset = "0xB63FC4", VA = "0xB63FC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D848", Offset = "0x85D848")]
		private sealed class <StartPhase>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MazeGameController <>4__this;

			[Token(Token = "0x17000439")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BFC")]
				[Address(RVA = "0xB6414C", Offset = "0xB6414C", VA = "0xB6414C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BFE")]
				[Address(RVA = "0xB641B4", Offset = "0xB641B4", VA = "0xB641B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xB63740", Offset = "0xB63740", VA = "0xB63740")]
			[DebuggerHidden]
			public <StartPhase>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0xB6402C", Offset = "0xB6402C", VA = "0xB6402C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xB64030", Offset = "0xB64030", VA = "0xB64030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0xB64154", Offset = "0xB64154", VA = "0xB64154", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D858", Offset = "0x85D858")]
		private sealed class <PlayPhase>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MazeGameController <>4__this;

			[Token(Token = "0x1700043B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C02")]
				[Address(RVA = "0xB63E68", Offset = "0xB63E68", VA = "0xB63E68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C04")]
				[Address(RVA = "0xB63ED0", Offset = "0xB63ED0", VA = "0xB63ED0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xB637DC", Offset = "0xB637DC", VA = "0xB637DC")]
			[DebuggerHidden]
			public <PlayPhase>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002C00")]
			[Address(RVA = "0xB63DA8", Offset = "0xB63DA8", VA = "0xB63DA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xB63DAC", Offset = "0xB63DAC", VA = "0xB63DAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C03")]
			[Address(RVA = "0xB63E70", Offset = "0xB63E70", VA = "0xB63E70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D868", Offset = "0x85D868")]
		private sealed class <EndPhase>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MazeGameController <>4__this;

			[Token(Token = "0x1700043D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C08")]
				[Address(RVA = "0xB63D38", Offset = "0xB63D38", VA = "0xB63D38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C0A")]
				[Address(RVA = "0xB63DA0", Offset = "0xB63DA0", VA = "0xB63DA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C05")]
			[Address(RVA = "0xB63878", Offset = "0xB63878", VA = "0xB63878")]
			[DebuggerHidden]
			public <EndPhase>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002C06")]
			[Address(RVA = "0xB63A44", Offset = "0xB63A44", VA = "0xB63A44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xB63A48", Offset = "0xB63A48", VA = "0xB63A48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xB63D40", Offset = "0xB63D40", VA = "0xB63D40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SelectionSlider m_SelectionSlider;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UIFader m_InstructionsFader;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UIFader m_WinFader;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UIFader m_LoseFader;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Player m_Player;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ExitArea m_ExitArea;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MazeTargetSetting m_MazeTargetSetting;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem m_WinParticles;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SwitchButton m_MazeSwitch;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Turret m_Turret;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private DestinationMarker m_DestinationMarker;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioSource m_GameOverAudioSource;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private VRCameraFade m_CameraFade;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private CameraOrbit m_CameraOrbit;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private InputWarnings m_InputWarnings;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_Playing;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool m_Win;

		[Token(Token = "0x1700016D")]
		public bool Playing
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xB63364", Offset = "0xB63364", VA = "0xB63364")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xB6336C", Offset = "0xB6336C", VA = "0xB6336C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xB634D0", Offset = "0xB634D0", VA = "0xB634D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xB63634", Offset = "0xB63634", VA = "0xB63634")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8719D4", Offset = "0x8719D4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xB636D0", Offset = "0xB636D0", VA = "0xB636D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871A38", Offset = "0x871A38")]
		private IEnumerator StartPhase()
		{
			return null;
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xB6376C", Offset = "0xB6376C", VA = "0xB6376C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871A9C", Offset = "0x871A9C")]
		private IEnumerator PlayPhase()
		{
			return null;
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xB63808", Offset = "0xB63808", VA = "0xB63808")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871B00", Offset = "0x871B00")]
		private IEnumerator EndPhase()
		{
			return null;
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xB638A4", Offset = "0xB638A4", VA = "0xB638A4")]
		private void Restart()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xB63A28", Offset = "0xB63A28", VA = "0xB63A28")]
		private void HandlePlayerShot()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xB63A30", Offset = "0xB63A30", VA = "0xB63A30")]
		private void HandleGameComplete()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xB63A3C", Offset = "0xB63A3C", VA = "0xB63A3C")]
		public MazeGameController()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class MazeTargetSetting : MonoBehaviour
	{
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_Active;

		[Token(Token = "0x1400004E")]
		public event Action<Transform> OnTargetSet
		{
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0xB62D68", Offset = "0xB62D68", VA = "0xB62D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871B64", Offset = "0x871B64")]
			add
			{
			}
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0xB62E9C", Offset = "0xB62E9C", VA = "0xB62E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871B74", Offset = "0x871B74")]
			remove
			{
			}
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xB641BC", Offset = "0xB641BC", VA = "0xB641BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xB64248", Offset = "0xB64248", VA = "0xB64248")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xB63E5C", Offset = "0xB63E5C", VA = "0xB63E5C")]
		public void Activate()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xB63D30", Offset = "0xB63D30", VA = "0xB63D30")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xB642D4", Offset = "0xB642D4", VA = "0xB642D4")]
		private void HandleDoubleClick()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xB6434C", Offset = "0xB6434C", VA = "0xB6434C")]
		public MazeTargetSetting()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D878", Offset = "0x85D878")]
		private sealed class <DyingSequence>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Player <>4__this;

			[Token(Token = "0x1700043F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C0E")]
				[Address(RVA = "0xB64928", Offset = "0xB64928", VA = "0xB64928", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000440")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C10")]
				[Address(RVA = "0xB64990", Offset = "0xB64990", VA = "0xB64990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0xB64608", Offset = "0xB64608", VA = "0xB64608")]
			[DebuggerHidden]
			public <DyingSequence>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xB647DC", Offset = "0xB647DC", VA = "0xB647DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0xB647E0", Offset = "0xB647E0", VA = "0xB647E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0xB64930", Offset = "0xB64930", VA = "0xB64930", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D888", Offset = "0x85D888")]
		private sealed class <PlayClipAndWait>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Player <>4__this;

			[Token(Token = "0x4002D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip clip;

			[Token(Token = "0x17000441")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C14")]
				[Address(RVA = "0xB64A7C", Offset = "0xB64A7C", VA = "0xB64A7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000442")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C16")]
				[Address(RVA = "0xB64AE4", Offset = "0xB64AE4", VA = "0xB64AE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C11")]
			[Address(RVA = "0xB646B0", Offset = "0xB646B0", VA = "0xB646B0")]
			[DebuggerHidden]
			public <PlayClipAndWait>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xB64998", Offset = "0xB64998", VA = "0xB64998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C13")]
			[Address(RVA = "0xB6499C", Offset = "0xB6499C", VA = "0xB6499C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C15")]
			[Address(RVA = "0xB64A84", Offset = "0xB64A84", VA = "0xB64A84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MazeTargetSetting m_MazeTargetSetting;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AgentTrail m_AgentTrail;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_PlayerAudio;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_PlayerHitClip;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip m_PlayerDieClip;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NavMeshAgent m_Agent;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AICharacterControl m_AiCharacter;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator m_Animator;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Collider m_Collider;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_IsDying;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_IsGameOver;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_OriginPosition;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly int m_HashResetPara;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private readonly int m_HashDyingPara;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int m_HashWinningPara;

		[Token(Token = "0x1700016E")]
		public bool Dead
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xB64354", Offset = "0xB64354", VA = "0xB64354")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400004F")]
		public event Action OnPlayerShot
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xB6342C", Offset = "0xB6342C", VA = "0xB6342C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871B84", Offset = "0x871B84")]
			add
			{
			}
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xB63590", Offset = "0xB63590", VA = "0xB63590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871B94", Offset = "0x871B94")]
			remove
			{
			}
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xB6435C", Offset = "0xB6435C", VA = "0xB6435C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xB64438", Offset = "0xB64438", VA = "0xB64438")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xB644C8", Offset = "0xB644C8", VA = "0xB644C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xB63930", Offset = "0xB63930", VA = "0xB63930")]
		public void Restart()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xB632CC", Offset = "0xB632CC", VA = "0xB632CC")]
		public void GameComplete()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xB64558", Offset = "0xB64558", VA = "0xB64558")]
		public void TurretHit()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xB64598", Offset = "0xB64598", VA = "0xB64598")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871BA4", Offset = "0x871BA4")]
		private IEnumerator DyingSequence()
		{
			return null;
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xB64634", Offset = "0xB64634", VA = "0xB64634")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871C08", Offset = "0x871C08")]
		private IEnumerator PlayClipAndWait(AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xB646DC", Offset = "0xB646DC", VA = "0xB646DC")]
		private void HandleSetTarget(Transform target)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xB6474C", Offset = "0xB6474C", VA = "0xB6474C")]
		public Player()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class SwitchButton : MonoBehaviour
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_SwitchAudio;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip m_SwitchPressClip;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip m_ActivateGUIClip;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectionSlider m_SelectionSlider;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UIFader m_SelectionSliderFader;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_Character;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Turret m_Turret;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_PowerOn;

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xB64AEC", Offset = "0xB64AEC", VA = "0xB64AEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xB64B78", Offset = "0xB64B78", VA = "0xB64B78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xB64C04", Offset = "0xB64C04", VA = "0xB64C04")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xB64CFC", Offset = "0xB64CFC", VA = "0xB64CFC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xB639D4", Offset = "0xB639D4", VA = "0xB639D4")]
		public void Restart()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xB64DD0", Offset = "0xB64DD0", VA = "0xB64DD0")]
		private void HandleBarFilled()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xB64E50", Offset = "0xB64E50", VA = "0xB64E50")]
		public SwitchButton()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A558", Offset = "0x85A558")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A558", Offset = "0x85A558")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A558", Offset = "0x85A558")]
	public class ThirdPersonCharacter : MonoBehaviour
	{
		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x863890", Offset = "0x863890")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_Animator;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_IsGrounded;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x40013B4")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TurnAmount;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_ForwardAmount;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CapsuleHeight;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Crouching;

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xB64E58", Offset = "0xB64E58", VA = "0xB64E58")]
		private void Start()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xB621C4", Offset = "0xB621C4", VA = "0xB621C4")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xB653E0", Offset = "0xB653E0", VA = "0xB653E0")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xB6566C", Offset = "0xB6566C", VA = "0xB6566C")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xB6581C", Offset = "0xB6581C", VA = "0xB6581C")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xB652CC", Offset = "0xB652CC", VA = "0xB652CC")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xB6518C", Offset = "0xB6518C", VA = "0xB6518C")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xB650BC", Offset = "0xB650BC", VA = "0xB650BC")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xB65A68", Offset = "0xB65A68", VA = "0xB65A68")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xB64F28", Offset = "0xB64F28", VA = "0xB64F28")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xB65B98", Offset = "0xB65B98", VA = "0xB65B98")]
		public ThirdPersonCharacter()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class Turret : MonoBehaviour
	{
		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D898", Offset = "0x85D898")]
		private sealed class <PowerUp>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Turret <>4__this;

			[Token(Token = "0x17000443")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C1A")]
				[Address(RVA = "0xB664C4", Offset = "0xB664C4", VA = "0xB664C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000444")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C1C")]
				[Address(RVA = "0xB6652C", Offset = "0xB6652C", VA = "0xB6652C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C17")]
			[Address(RVA = "0xB65F6C", Offset = "0xB65F6C", VA = "0xB65F6C")]
			[DebuggerHidden]
			public <PowerUp>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xB663AC", Offset = "0xB663AC", VA = "0xB663AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0xB663B0", Offset = "0xB663B0", VA = "0xB663B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0xB664CC", Offset = "0xB664CC", VA = "0xB664CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D8A8", Offset = "0x85D8A8")]
		private sealed class <ActiveLoop>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Turret <>4__this;

			[Token(Token = "0x17000445")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C20")]
				[Address(RVA = "0xB6633C", Offset = "0xB6633C", VA = "0xB6633C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000446")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C22")]
				[Address(RVA = "0xB663A4", Offset = "0xB663A4", VA = "0xB663A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0xB66008", Offset = "0xB66008", VA = "0xB66008")]
			[DebuggerHidden]
			public <ActiveLoop>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xB66244", Offset = "0xB66244", VA = "0xB66244", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0xB66248", Offset = "0xB66248", VA = "0xB66248", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C21")]
			[Address(RVA = "0xB66344", Offset = "0xB66344", VA = "0xB66344", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D8B8", Offset = "0x85D8B8")]
		private sealed class <SpinUpAndFire>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Turret <>4__this;

			[Token(Token = "0x4002D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000447")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C26")]
				[Address(RVA = "0xB66988", Offset = "0xB66988", VA = "0xB66988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000448")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C28")]
				[Address(RVA = "0xB669F0", Offset = "0xB669F0", VA = "0xB669F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C23")]
			[Address(RVA = "0xB660A4", Offset = "0xB660A4", VA = "0xB660A4")]
			[DebuggerHidden]
			public <SpinUpAndFire>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002C24")]
			[Address(RVA = "0xB667B4", Offset = "0xB667B4", VA = "0xB667B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C25")]
			[Address(RVA = "0xB667B8", Offset = "0xB667B8", VA = "0xB667B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0xB66990", Offset = "0xB66990", VA = "0xB66990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D8C8", Offset = "0x85D8C8")]
		private sealed class <SpinDown>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Turret <>4__this;

			[Token(Token = "0x4002D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000449")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C2C")]
				[Address(RVA = "0xB66744", Offset = "0xB66744", VA = "0xB66744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C2E")]
				[Address(RVA = "0xB667AC", Offset = "0xB667AC", VA = "0xB667AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C29")]
			[Address(RVA = "0xB66140", Offset = "0xB66140", VA = "0xB66140")]
			[DebuggerHidden]
			public <SpinDown>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0xB66534", Offset = "0xB66534", VA = "0xB66534", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0xB66538", Offset = "0xB66538", VA = "0xB66538", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0xB6674C", Offset = "0xB6674C", VA = "0xB6674C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_BarrelSpinSpeed;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_AimTime;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Range;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_CeaseFireTime;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_PlayerTransform;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Player m_Player;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_TurretRotator;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_TurretBarrel;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator m_Animator;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem m_GunParticles;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource m_BulletAudio;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioSource m_GunAudio;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioSource m_PowerAudio;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioClip m_GunSpinUpClip;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioClip m_GunSpinDownClip;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioClip m_PowerUpClip;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioClip m_PowerDownClip;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_PlayerInSight;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool m_Firing;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_AimTimer;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_IsTurretActive;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private readonly int m_HashPowerUpPara;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly int m_HashPowerDownPara;

		[Token(Token = "0x40013D3")]
		private const float k_PowerUpWaitTime = 2.033f;

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xB65BB8", Offset = "0xB65BB8", VA = "0xB65BB8")]
		private void AimAtPlayer()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xB639FC", Offset = "0xB639FC", VA = "0xB639FC")]
		public void Activate()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xB64E44", Offset = "0xB64E44", VA = "0xB64E44")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xB65EFC", Offset = "0xB65EFC", VA = "0xB65EFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871C6C", Offset = "0x871C6C")]
		private IEnumerator PowerUp()
		{
			return null;
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xB65F98", Offset = "0xB65F98", VA = "0xB65F98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871CD0", Offset = "0x871CD0")]
		private IEnumerator ActiveLoop()
		{
			return null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xB66034", Offset = "0xB66034", VA = "0xB66034")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871D34", Offset = "0x871D34")]
		private IEnumerator SpinUpAndFire()
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xB660D0", Offset = "0xB660D0", VA = "0xB660D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871D98", Offset = "0x871D98")]
		private IEnumerator SpinDown()
		{
			return null;
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xB6616C", Offset = "0xB6616C", VA = "0xB6616C")]
		private void PowerDown()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xB661C0", Offset = "0xB661C0", VA = "0xB661C0")]
		public Turret()
		{
		}
	}
}
namespace VRStandardAssets.Intro
{
	[Token(Token = "0x20002C0")]
	public class IntroManager : MonoBehaviour
	{
		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D8D8", Offset = "0x85D8D8")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x1700044B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C32")]
				[Address(RVA = "0xB61EFC", Offset = "0xB61EFC", VA = "0xB61EFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C34")]
				[Address(RVA = "0xB61F64", Offset = "0xB61F64", VA = "0xB61F64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0xB61D24", Offset = "0xB61D24", VA = "0xB61D24")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002C30")]
			[Address(RVA = "0xB61D58", Offset = "0xB61D58", VA = "0xB61D58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C31")]
			[Address(RVA = "0xB61D5C", Offset = "0xB61D5C", VA = "0xB61D5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C33")]
			[Address(RVA = "0xB61F04", Offset = "0xB61F04", VA = "0xB61F04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SelectionRadial m_Radial;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UIFader m_HowToUseFader;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectionSlider m_HowToUseSlider;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UIFader m_HowToUseConfirmFader;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SelectionSlider m_HowToUseConfirmSlider;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UIFader m_ReturnFader;

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xB61CB4", Offset = "0xB61CB4", VA = "0xB61CB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871DFC", Offset = "0x871DFC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xB61D50", Offset = "0xB61D50", VA = "0xB61D50")]
		public IntroManager()
		{
		}
	}
}
namespace VRStandardAssets.Flyer
{
	[Token(Token = "0x20002C1")]
	public class Asteroid : MonoBehaviour
	{
		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_AsteroidMinSize;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_AsteroidMaxSize;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_MinSpeed;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_MaxSpeed;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_MinRotationSpeed;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_MaxRotationSpeed;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_PlayerDamage;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int m_Score;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FlyerHealthController m_FlyerHealthController;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject m_Flyer;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_Cam;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_Speed;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_RotationAxis;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_RotationSpeed;

		[Token(Token = "0x40013EC")]
		private const float k_RemovalDistance = 50f;

		[Token(Token = "0x1700016F")]
		public int Score
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xB5D6C0", Offset = "0xB5D6C0", VA = "0xB5D6C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000050")]
		public event Action<Asteroid> OnAsteroidRemovalDistance
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xB5D430", Offset = "0xB5D430", VA = "0xB5D430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871E60", Offset = "0x871E60")]
			add
			{
			}
			[Token(Token = "0x6001428")]
			[Address(RVA = "0xB5D4D4", Offset = "0xB5D4D4", VA = "0xB5D4D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871E70", Offset = "0x871E70")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event Action<Asteroid> OnAsteroidHit
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0xB5D578", Offset = "0xB5D578", VA = "0xB5D578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871E80", Offset = "0x871E80")]
			add
			{
			}
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xB5D61C", Offset = "0xB5D61C", VA = "0xB5D61C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871E90", Offset = "0x871E90")]
			remove
			{
			}
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xB5D6C8", Offset = "0xB5D6C8", VA = "0xB5D6C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xB5D780", Offset = "0xB5D780", VA = "0xB5D780")]
		private void Start()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xB5D868", Offset = "0xB5D868", VA = "0xB5D868")]
		private void Update()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xB5DAA0", Offset = "0xB5DAA0", VA = "0xB5DAA0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xB5DCEC", Offset = "0xB5DCEC", VA = "0xB5DCEC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xB5DC80", Offset = "0xB5DC80", VA = "0xB5DC80")]
		public void Hit()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xB5DCF4", Offset = "0xB5DCF4", VA = "0xB5DCF4")]
		public Asteroid()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class AsteroidExplosion : MonoBehaviour
	{
		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D8E8", Offset = "0x85D8E8")]
		private sealed class <Timeout>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AsteroidExplosion <>4__this;

			[Token(Token = "0x1700044D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C38")]
				[Address(RVA = "0xB5E1A0", Offset = "0xB5E1A0", VA = "0xB5E1A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C3A")]
				[Address(RVA = "0xB5E208", Offset = "0xB5E208", VA = "0xB5E208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C35")]
			[Address(RVA = "0xB5E0A0", Offset = "0xB5E0A0", VA = "0xB5E0A0")]
			[DebuggerHidden]
			public <Timeout>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002C36")]
			[Address(RVA = "0xB5E0D4", Offset = "0xB5E0D4", VA = "0xB5E0D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C37")]
			[Address(RVA = "0xB5E0D8", Offset = "0xB5E0D8", VA = "0xB5E0D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C39")]
			[Address(RVA = "0xB5E1A8", Offset = "0xB5E1A8", VA = "0xB5E1A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem[] m_ParticleSystems;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_Duration;

		[Token(Token = "0x14000052")]
		public event Action<AsteroidExplosion> OnExplosionEnded
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0xB5DD28", Offset = "0xB5DD28", VA = "0xB5DD28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871EA0", Offset = "0x871EA0")]
			add
			{
			}
			[Token(Token = "0x6001434")]
			[Address(RVA = "0xB5DDCC", Offset = "0xB5DDCC", VA = "0xB5DDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x871EB0", Offset = "0x871EB0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xB5DE70", Offset = "0xB5DE70", VA = "0xB5DE70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xB5DF7C", Offset = "0xB5DF7C", VA = "0xB5DF7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xB5DF84", Offset = "0xB5DF84", VA = "0xB5DF84")]
		public void Restart()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xB5E030", Offset = "0xB5E030", VA = "0xB5E030")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871EC0", Offset = "0x871EC0")]
		private IEnumerator Timeout()
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xB5E0CC", Offset = "0xB5E0CC", VA = "0xB5E0CC")]
		public AsteroidExplosion()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class EnvironmentController : MonoBehaviour
	{
		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D8F8", Offset = "0x85D8F8")]
		private sealed class <SpawnAsteroidRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnvironmentController <>4__this;

			[Token(Token = "0x1700044F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C3E")]
				[Address(RVA = "0xB5EEC0", Offset = "0xB5EEC0", VA = "0xB5EEC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000450")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C40")]
				[Address(RVA = "0xB5EF28", Offset = "0xB5EF28", VA = "0xB5EF28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C3B")]
			[Address(RVA = "0xB5E864", Offset = "0xB5E864", VA = "0xB5E864")]
			[DebuggerHidden]
			public <SpawnAsteroidRoutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0xB5EDF8", Offset = "0xB5EDF8", VA = "0xB5EDF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C3D")]
			[Address(RVA = "0xB5EDFC", Offset = "0xB5EDFC", VA = "0xB5EDFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0xB5EEC8", Offset = "0xB5EEC8", VA = "0xB5EEC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D908", Offset = "0x85D908")]
		private sealed class <SpawnRingRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnvironmentController <>4__this;

			[Token(Token = "0x17000451")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C44")]
				[Address(RVA = "0xB5F044", Offset = "0xB5F044", VA = "0xB5F044", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000452")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C46")]
				[Address(RVA = "0xB5F0AC", Offset = "0xB5F0AC", VA = "0xB5F0AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C41")]
			[Address(RVA = "0xB5E890", Offset = "0xB5E890", VA = "0xB5E890")]
			[DebuggerHidden]
			public <SpawnRingRoutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002C42")]
			[Address(RVA = "0xB5EF30", Offset = "0xB5EF30", VA = "0xB5EF30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C43")]
			[Address(RVA = "0xB5EF34", Offset = "0xB5EF34", VA = "0xB5EF34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C45")]
			[Address(RVA = "0xB5F04C", Offset = "0xB5F04C", VA = "0xB5F04C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_AsteroidSpawnFrequency;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_RingSpawnFrequency;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_InitialAsteroidCount;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_AsteroidSpawnZoneRadius;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RingSpawnZoneRadius;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_SpawnZoneDistance;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ObjectPool m_AsteroidObjectPool;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ObjectPool m_AsteroidExplosionObjectPool;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ObjectPool m_RingObjectPool;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_Cam;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Ring> m_Rings;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Asteroid> m_Asteroids;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_Spawning;

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xB5E210", Offset = "0xB5E210", VA = "0xB5E210")]
		public void StartEnvironment()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xB5E5F0", Offset = "0xB5E5F0", VA = "0xB5E5F0")]
		public void StopEnvironment()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xB5E510", Offset = "0xB5E510", VA = "0xB5E510")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871F24", Offset = "0x871F24")]
		private IEnumerator SpawnAsteroidRoutine()
		{
			return null;
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xB5E308", Offset = "0xB5E308", VA = "0xB5E308")]
		private void SpawnAsteroid()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xB5E580", Offset = "0xB5E580", VA = "0xB5E580")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871F88", Offset = "0x871F88")]
		private IEnumerator SpawnRingRoutine()
		{
			return null;
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xB5E8BC", Offset = "0xB5E8BC", VA = "0xB5E8BC")]
		private void SpawnRing()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xB5E68C", Offset = "0xB5E68C", VA = "0xB5E68C")]
		private void HandleAsteroidRemoval(Asteroid asteroid)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xB5EB68", Offset = "0xB5EB68", VA = "0xB5EB68")]
		private void HandleAsteroidHit(Asteroid asteroid)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xB5EC70", Offset = "0xB5EC70", VA = "0xB5EC70")]
		private void HandleExplosionEnded(AsteroidExplosion explosion)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xB5E794", Offset = "0xB5E794", VA = "0xB5E794")]
		private void HandleRingRemove(Ring ring)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xB5EDC8", Offset = "0xB5EDC8", VA = "0xB5EDC8")]
		public EnvironmentController()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class FlyerAlignmentChecker : MonoBehaviour
	{
		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D918", Offset = "0x85D918")]
		private sealed class <CheckAlignment>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlyerAlignmentChecker <>4__this;

			[Token(Token = "0x17000453")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C4A")]
				[Address(RVA = "0xB5F3E8", Offset = "0xB5F3E8", VA = "0xB5F3E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000454")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C4C")]
				[Address(RVA = "0xB5F450", Offset = "0xB5F450", VA = "0xB5F450", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C47")]
			[Address(RVA = "0xB5F160", Offset = "0xB5F160", VA = "0xB5F160")]
			[DebuggerHidden]
			public <CheckAlignment>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002C48")]
			[Address(RVA = "0xB5F19C", Offset = "0xB5F19C", VA = "0xB5F19C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C49")]
			[Address(RVA = "0xB5F1A0", Offset = "0xB5F1A0", VA = "0xB5F1A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0xB5F3F0", Offset = "0xB5F3F0", VA = "0xB5F3F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_Radius;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Ring m_CurrentRing;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_IsGameRunning;

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xB5F0B4", Offset = "0xB5F0B4", VA = "0xB5F0B4")]
		public void StartGame()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xB5F158", Offset = "0xB5F158", VA = "0xB5F158")]
		public void StopGame()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xB5F0E8", Offset = "0xB5F0E8", VA = "0xB5F0E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x871FEC", Offset = "0x871FEC")]
		private IEnumerator CheckAlignment()
		{
			return null;
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xB5F18C", Offset = "0xB5F18C", VA = "0xB5F18C")]
		public FlyerAlignmentChecker()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class FlyerGameController : MonoBehaviour
	{
		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D928", Offset = "0x85D928")]
		private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlyerGameController <>4__this;

			[Token(Token = "0x17000455")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C50")]
				[Address(RVA = "0xB5FDFC", Offset = "0xB5FDFC", VA = "0xB5FDFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000456")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C52")]
				[Address(RVA = "0xB5FE64", Offset = "0xB5FE64", VA = "0xB5FE64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0xB5F4D0", Offset = "0xB5F4D0", VA = "0xB5F4D0")]
			[DebuggerHidden]
			public <Start>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0xB5FD30", Offset = "0xB5FD30", VA = "0xB5FD30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0xB5FD34", Offset = "0xB5FD34", VA = "0xB5FD34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C51")]
			[Address(RVA = "0xB5FE04", Offset = "0xB5FE04", VA = "0xB5FE04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D938", Offset = "0x85D938")]
		private sealed class <StartPhase>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlyerGameController <>4__this;

			[Token(Token = "0x17000457")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C56")]
				[Address(RVA = "0xB60170", Offset = "0xB60170", VA = "0xB60170", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000458")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C58")]
				[Address(RVA = "0xB601D8", Offset = "0xB601D8", VA = "0xB601D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C53")]
			[Address(RVA = "0xB5F56C", Offset = "0xB5F56C", VA = "0xB5F56C")]
			[DebuggerHidden]
			public <StartPhase>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002C54")]
			[Address(RVA = "0xB5FE6C", Offset = "0xB5FE6C", VA = "0xB5FE6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C55")]
			[Address(RVA = "0xB5FE70", Offset = "0xB5FE70", VA = "0xB5FE70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C57")]
			[Address(RVA = "0xB60178", Offset = "0xB60178", VA = "0xB60178", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D948", Offset = "0x85D948")]
		private sealed class <PlayPhase>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlyerGameController <>4__this;

			[Token(Token = "0x17000459")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C5C")]
				[Address(RVA = "0xB5FCC0", Offset = "0xB5FCC0", VA = "0xB5FCC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C5E")]
				[Address(RVA = "0xB5FD28", Offset = "0xB5FD28", VA = "0xB5FD28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C59")]
			[Address(RVA = "0xB5F608", Offset = "0xB5F608", VA = "0xB5F608")]
			[DebuggerHidden]
			public <PlayPhase>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0xB5FAF8", Offset = "0xB5FAF8", VA = "0xB5FAF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0xB5FAFC", Offset = "0xB5FAFC", VA = "0xB5FAFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0xB5FCC8", Offset = "0xB5FCC8", VA = "0xB5FCC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D958", Offset = "0x85D958")]
		private sealed class <EndPhase>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlyerGameController <>4__this;

			[Token(Token = "0x1700045B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C62")]
				[Address(RVA = "0xB5FA88", Offset = "0xB5FA88", VA = "0xB5FA88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C64")]
				[Address(RVA = "0xB5FAF0", Offset = "0xB5FAF0", VA = "0xB5FAF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0xB5F6A4", Offset = "0xB5F6A4", VA = "0xB5F6A4")]
			[DebuggerHidden]
			public <EndPhase>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002C60")]
			[Address(RVA = "0xB5F6E4", Offset = "0xB5F6E4", VA = "0xB5F6E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C61")]
			[Address(RVA = "0xB5F6E8", Offset = "0xB5F6E8", VA = "0xB5F6E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C63")]
			[Address(RVA = "0xB5FA90", Offset = "0xB5FA90", VA = "0xB5FA90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_GameDuration;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_IntroOutroFadeDuration;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SelectionSlider m_SelectionSlider;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FlyerHealthController m_HealthController;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FlyerAlignmentChecker m_AlignmentChecker;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FlyerMovementController m_FlyerMovementController;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EnvironmentController m_EnvironmentController;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UIController m_UIController;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GUIArrows m_GuiArrows;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image m_TimerBar;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private InputWarnings m_InputWarnings;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private VRCameraFade m_CameraFade;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_EndTime;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_TimeRemaining;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_IsGameRunning;

		[Token(Token = "0x17000170")]
		public bool IsGameRunning
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xB5F458", Offset = "0xB5F458", VA = "0xB5F458")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xB5F460", Offset = "0xB5F460", VA = "0xB5F460")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872050", Offset = "0x872050")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xB5F4FC", Offset = "0xB5F4FC", VA = "0xB5F4FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8720B4", Offset = "0x8720B4")]
		private IEnumerator StartPhase()
		{
			return null;
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xB5F598", Offset = "0xB5F598", VA = "0xB5F598")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872118", Offset = "0x872118")]
		private IEnumerator PlayPhase()
		{
			return null;
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xB5F634", Offset = "0xB5F634", VA = "0xB5F634")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87217C", Offset = "0x87217C")]
		private IEnumerator EndPhase()
		{
			return null;
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xB5F6D0", Offset = "0xB5F6D0", VA = "0xB5F6D0")]
		public FlyerGameController()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class FlyerHealthController : MonoBehaviour
	{
		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D968", Offset = "0x85D968")]
		private sealed class <DestroyFlyer>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlyerHealthController <>4__this;

			[Token(Token = "0x4002DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <flyerExplosion>5__2;

			[Token(Token = "0x1700045D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C68")]
				[Address(RVA = "0xB60590", Offset = "0xB60590", VA = "0xB60590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C6A")]
				[Address(RVA = "0xB605F8", Offset = "0xB605F8", VA = "0xB605F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C65")]
			[Address(RVA = "0xB60388", Offset = "0xB60388", VA = "0xB60388")]
			[DebuggerHidden]
			public <DestroyFlyer>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002C66")]
			[Address(RVA = "0xB603C4", Offset = "0xB603C4", VA = "0xB603C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C67")]
			[Address(RVA = "0xB603C8", Offset = "0xB603C8", VA = "0xB603C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C69")]
			[Address(RVA = "0xB60598", Offset = "0xB60598", VA = "0xB60598", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_StartingHealth;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_FlyerExplosionPrefab;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_HealthBar;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_ExplosionAudio;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource m_ThrusterAudio;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject[] m_FlyerUIGameObjects;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer[] m_FlyerRenderers;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Collider[] m_FlyerColliders;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_CurrentHealth;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_IsDead;

		[Token(Token = "0x400141B")]
		private const float k_WaitForExplosion = 3f;

		[Token(Token = "0x17000171")]
		public bool IsDead
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0xB601E0", Offset = "0xB601E0", VA = "0xB601E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xB5FC48", Offset = "0xB5FC48", VA = "0xB5FC48")]
		public void StartGame()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xB5F978", Offset = "0xB5F978", VA = "0xB5F978")]
		public void StopGame()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xB601E8", Offset = "0xB601E8", VA = "0xB601E8")]
		private void ShowFlyer(bool show)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xB5DB74", Offset = "0xB5DB74", VA = "0xB5DB74")]
		public void TakeDamage(int damage)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xB60318", Offset = "0xB60318", VA = "0xB60318")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8721E0", Offset = "0x8721E0")]
		private IEnumerator DestroyFlyer()
		{
			return null;
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xB603B4", Offset = "0xB603B4", VA = "0xB603B4")]
		public FlyerHealthController()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class FlyerLaser : MonoBehaviour
	{
		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D978", Offset = "0x85D978")]
		private sealed class <Timeout>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlyerLaser <>4__this;

			[Token(Token = "0x1700045F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C6E")]
				[Address(RVA = "0xB60A44", Offset = "0xB60A44", VA = "0xB60A44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000460")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C70")]
				[Address(RVA = "0xB60AAC", Offset = "0xB60AAC", VA = "0xB60AAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C6B")]
			[Address(RVA = "0xB608F8", Offset = "0xB608F8", VA = "0xB608F8")]
			[DebuggerHidden]
			public <Timeout>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0xB60968", Offset = "0xB60968", VA = "0xB60968", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0xB6096C", Offset = "0xB6096C", VA = "0xB6096C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0xB60A4C", Offset = "0xB60A4C", VA = "0xB60A4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_Speed;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_LaserLifeDuration;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_Hit;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x863D70", Offset = "0x863D70")]
		private ObjectPool <ObjectPool>k__BackingField;

		[Token(Token = "0x17000172")]
		public ObjectPool ObjectPool
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0xB60600", Offset = "0xB60600", VA = "0xB60600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872244", Offset = "0x872244")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001457")]
			[Address(RVA = "0xB60608", Offset = "0xB60608", VA = "0xB60608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872254", Offset = "0x872254")]
			set
			{
			}
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xB60610", Offset = "0xB60610", VA = "0xB60610")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xB60668", Offset = "0xB60668", VA = "0xB60668")]
		private void Update()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xB607A0", Offset = "0xB607A0", VA = "0xB607A0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xB60888", Offset = "0xB60888", VA = "0xB60888")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872264", Offset = "0x872264")]
		private IEnumerator Timeout()
		{
			return null;
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xB60924", Offset = "0xB60924", VA = "0xB60924")]
		public void Restart()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xB60954", Offset = "0xB60954", VA = "0xB60954")]
		public FlyerLaser()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class FlyerLaserController : MonoBehaviour
	{
		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FlyerGameController m_GameController;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ObjectPool m_LaserObjectPool;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_LaserSpawnPosLeft;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_LaserSpawnPosRight;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource m_LaserAudio;

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xB60AB4", Offset = "0xB60AB4", VA = "0xB60AB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xB60B40", Offset = "0xB60B40", VA = "0xB60B40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xB60BCC", Offset = "0xB60BCC", VA = "0xB60BCC")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xB60C18", Offset = "0xB60C18", VA = "0xB60C18")]
		private void SpawnLaser(Transform gunPos)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xB60D20", Offset = "0xB60D20", VA = "0xB60D20")]
		public FlyerLaserController()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class FlyerMovementController : MonoBehaviour
	{
		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D988", Offset = "0x85D988")]
		private sealed class <MoveFlyer>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FlyerMovementController <>4__this;

			[Token(Token = "0x17000461")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C74")]
				[Address(RVA = "0xB612F4", Offset = "0xB612F4", VA = "0xB612F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000462")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C76")]
				[Address(RVA = "0xB6135C", Offset = "0xB6135C", VA = "0xB6135C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C71")]
			[Address(RVA = "0xB60E30", Offset = "0xB60E30", VA = "0xB60E30")]
			[DebuggerHidden]
			public <MoveFlyer>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xB60E78", Offset = "0xB60E78", VA = "0xB60E78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C73")]
			[Address(RVA = "0xB60E7C", Offset = "0xB60E7C", VA = "0xB60E7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C75")]
			[Address(RVA = "0xB612FC", Offset = "0xB612FC", VA = "0xB612FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_DistanceFromCamera;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_Speed;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Damping;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Flyer;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_TargetMarker;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_CameraContainer;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text m_CurrentScore;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_IsGameRunning;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_FlyerStartPos;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion m_FlyerStartRot;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_TargetMarkerStartPos;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_TargetMarkerStartRot;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_CameraContainerStartPos;

		[Token(Token = "0x4001435")]
		private const float k_ExpDampingCoef = -20f;

		[Token(Token = "0x4001436")]
		private const float k_BankingCoef = 3f;

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xB60D28", Offset = "0xB60D28", VA = "0xB60D28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xB5FC8C", Offset = "0xB5FC8C", VA = "0xB5FC8C")]
		public void StartGame()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xB5F980", Offset = "0xB5F980", VA = "0xB5F980")]
		public void StopGame()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xB60DC0", Offset = "0xB60DC0", VA = "0xB60DC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8722C8", Offset = "0x8722C8")]
		private IEnumerator MoveFlyer()
		{
			return null;
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xB60E5C", Offset = "0xB60E5C", VA = "0xB60E5C")]
		public FlyerMovementController()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class Ring : MonoBehaviour
	{
		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_Score;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_AudioSource;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color m_BaseColor;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_ShipAlignedColor;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_ActivatedColor;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_HasTriggered;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_Cam;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject m_Flyer;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Material> m_Materials;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_ShipAligned;

		[Token(Token = "0x4001442")]
		private const float k_RemovalDistance = 50f;

		[Token(Token = "0x17000173")]
		public bool ShipAligned
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0xB6142C", Offset = "0xB6142C", VA = "0xB6142C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600146A")]
			[Address(RVA = "0xB5F398", Offset = "0xB5F398", VA = "0xB5F398")]
			set
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event Action<Ring> OnRingRemove
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0xB5EAC4", Offset = "0xB5EAC4", VA = "0xB5EAC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87232C", Offset = "0x87232C")]
			add
			{
			}
			[Token(Token = "0x6001469")]
			[Address(RVA = "0xB5ED24", Offset = "0xB5ED24", VA = "0xB5ED24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87233C", Offset = "0x87233C")]
			remove
			{
			}
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xB61434", Offset = "0xB61434", VA = "0xB61434")]
		private void Awake()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xB61564", Offset = "0xB61564", VA = "0xB61564")]
		private void Update()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xB61618", Offset = "0xB61618", VA = "0xB61618")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xB616FC", Offset = "0xB616FC", VA = "0xB616FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xB5EA98", Offset = "0xB5EA98", VA = "0xB5EA98")]
		public void Restart()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xB61364", Offset = "0xB61364", VA = "0xB61364")]
		private void SetRingColour(Color color)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xB61704", Offset = "0xB61704", VA = "0xB61704")]
		public Ring()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class UIController : MonoBehaviour
	{
		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D998", Offset = "0x85D998")]
		private sealed class <ShowIntroUI>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x17000463")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C7A")]
				[Address(RVA = "0xB61A78", Offset = "0xB61A78", VA = "0xB61A78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000464")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C7C")]
				[Address(RVA = "0xB61AE0", Offset = "0xB61AE0", VA = "0xB61AE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C77")]
			[Address(RVA = "0xB61760", Offset = "0xB61760", VA = "0xB61760")]
			[DebuggerHidden]
			public <ShowIntroUI>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002C78")]
			[Address(RVA = "0xB619F8", Offset = "0xB619F8", VA = "0xB619F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C79")]
			[Address(RVA = "0xB619FC", Offset = "0xB619FC", VA = "0xB619FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C7B")]
			[Address(RVA = "0xB61A80", Offset = "0xB61A80", VA = "0xB61A80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D9A8", Offset = "0x85D9A8")]
		private sealed class <HideIntroUI>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x17000465")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C80")]
				[Address(RVA = "0xB61898", Offset = "0xB61898", VA = "0xB61898", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000466")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C82")]
				[Address(RVA = "0xB61900", Offset = "0xB61900", VA = "0xB61900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0xB6178C", Offset = "0xB6178C", VA = "0xB6178C")]
			[DebuggerHidden]
			public <HideIntroUI>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0xB61818", Offset = "0xB61818", VA = "0xB61818", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0xB6181C", Offset = "0xB6181C", VA = "0xB6181C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C81")]
			[Address(RVA = "0xB618A0", Offset = "0xB618A0", VA = "0xB618A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D9B8", Offset = "0x85D9B8")]
		private sealed class <ShowOutroUI>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x17000467")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C86")]
				[Address(RVA = "0xB61C44", Offset = "0xB61C44", VA = "0xB61C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000468")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C88")]
				[Address(RVA = "0xB61CAC", Offset = "0xB61CAC", VA = "0xB61CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xB617B8", Offset = "0xB617B8", VA = "0xB617B8")]
			[DebuggerHidden]
			public <ShowOutroUI>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xB61AE8", Offset = "0xB61AE8", VA = "0xB61AE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xB61AEC", Offset = "0xB61AEC", VA = "0xB61AEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C87")]
			[Address(RVA = "0xB61C4C", Offset = "0xB61C4C", VA = "0xB61C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D9C8", Offset = "0x85D9C8")]
		private sealed class <HideOutroUI>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIController <>4__this;

			[Token(Token = "0x17000469")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C8C")]
				[Address(RVA = "0xB61988", Offset = "0xB61988", VA = "0xB61988", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C8E")]
				[Address(RVA = "0xB619F0", Offset = "0xB619F0", VA = "0xB619F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C89")]
			[Address(RVA = "0xB617E4", Offset = "0xB617E4", VA = "0xB617E4")]
			[DebuggerHidden]
			public <HideOutroUI>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0xB61908", Offset = "0xB61908", VA = "0xB61908", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0xB6190C", Offset = "0xB6190C", VA = "0xB6190C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C8D")]
			[Address(RVA = "0xB61990", Offset = "0xB61990", VA = "0xB61990", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UIFader m_IntroUI;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UIFader m_OutroUI;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_TotalScore;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_HighScore;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xB60090", Offset = "0xB60090", VA = "0xB60090")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87234C", Offset = "0x87234C")]
		public IEnumerator ShowIntroUI()
		{
			return null;
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xB60100", Offset = "0xB60100", VA = "0xB60100")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8723B0", Offset = "0x8723B0")]
		public IEnumerator HideIntroUI()
		{
			return null;
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xB5F908", Offset = "0xB5F908", VA = "0xB5F908")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872414", Offset = "0x872414")]
		public IEnumerator ShowOutroUI()
		{
			return null;
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xB5FA18", Offset = "0xB5FA18", VA = "0xB5FA18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872478", Offset = "0x872478")]
		public IEnumerator HideOutroUI()
		{
			return null;
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xB61810", Offset = "0xB61810", VA = "0xB61810")]
		public UIController()
		{
		}
	}
}
namespace VRStandardAssets.Examples
{
	[Token(Token = "0x20002CC")]
	public class ExampleInteractiveItem : MonoBehaviour
	{
		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material m_NormalMaterial;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material m_OverMaterial;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform menuParent;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string levelName;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMesh levelText;

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xB5CEF4", Offset = "0xB5CEF4", VA = "0xB5CEF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xB5CEF8", Offset = "0xB5CEF8", VA = "0xB5CEF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xB5CEFC", Offset = "0xB5CEFC", VA = "0xB5CEFC")]
		public ExampleInteractiveItem()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class ExampleRenderScale : MonoBehaviour
	{
		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_RenderScale;

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xB5CF54", Offset = "0xB5CF54", VA = "0xB5CF54")]
		private void Start()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xB5CF60", Offset = "0xB5CF60", VA = "0xB5CF60")]
		public ExampleRenderScale()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class ExampleRotation : MonoBehaviour
	{
		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_Damping;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_MaxYRotation;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_MinYRotation;

		[Token(Token = "0x4001452")]
		private const float k_ExpDampCoef = -20f;

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xB5CF70", Offset = "0xB5CF70", VA = "0xB5CF70")]
		private void Update()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xB5D180", Offset = "0xB5D180", VA = "0xB5D180")]
		public ExampleRotation()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class ExampleTouchpad : MonoBehaviour
	{
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_Torque;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xB5D19C", Offset = "0xB5D19C", VA = "0xB5D19C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xB5D230", Offset = "0xB5D230", VA = "0xB5D230")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xB5D2C4", Offset = "0xB5D2C4", VA = "0xB5D2C4")]
		private void HandleSwipe(VRInput.SwipeDirection swipeDirection)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xB5D420", Offset = "0xB5D420", VA = "0xB5D420")]
		public ExampleTouchpad()
		{
		}
	}
}
namespace VRStandardAssets.Common
{
	[Token(Token = "0x20002D0")]
	public static class SessionData
	{
		[Token(Token = "0x20006A1")]
		public enum GameType
		{
			[Token(Token = "0x4002DC0")]
			FLYER,
			[Token(Token = "0x4002DC1")]
			SHOOTER180,
			[Token(Token = "0x4002DC2")]
			SHOOTER360
		}

		[Token(Token = "0x4001456")]
		private const string k_FlyerData = "flyerData";

		[Token(Token = "0x4001457")]
		private const string k_Shooter180 = "shooter180Data";

		[Token(Token = "0x4001458")]
		private const string k_Shooter360 = "shooter360Data";

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_HighScore;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int s_Score;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string s_CurrentGame;

		[Token(Token = "0x17000174")]
		public static int HighScore
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0xB5CB40", Offset = "0xB5CB40", VA = "0xB5CB40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000175")]
		public static int Score
		{
			[Token(Token = "0x6001484")]
			[Address(RVA = "0xB5CB90", Offset = "0xB5CB90", VA = "0xB5CB90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xB5CBE0", Offset = "0xB5CBE0", VA = "0xB5CBE0")]
		public static void SetGameType(GameType gameType)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xB5CCBC", Offset = "0xB5CCBC", VA = "0xB5CCBC")]
		public static void Restart()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xB5CD74", Offset = "0xB5CD74", VA = "0xB5CD74")]
		public static void AddScore(int score)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xB5CD1C", Offset = "0xB5CD1C", VA = "0xB5CD1C")]
		public static int GetHighScore()
		{
			return default(int);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xB5CDD0", Offset = "0xB5CDD0", VA = "0xB5CDD0")]
		private static void CheckHighScore()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xB5CE38", Offset = "0xB5CE38", VA = "0xB5CE38")]
		private static void SetHighScore()
		{
		}
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x20002D1")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x20006A2")]
		public class ListIndices
		{
			[Token(Token = "0x4002DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> m_listIndices;

			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0xA9EDBC", Offset = "0xA9EDBC", VA = "0xA9EDBC")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A3")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4002DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex0;

			[Token(Token = "0x4002DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex1;

			[Token(Token = "0x4002DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int _boneIndex2;

			[Token(Token = "0x4002DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int _boneIndex3;

			[Token(Token = "0x4002DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight0;

			[Token(Token = "0x4002DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight1;

			[Token(Token = "0x4002DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _boneWeight2;

			[Token(Token = "0x4002DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _boneWeight3;

			[Token(Token = "0x6002C90")]
			[Address(RVA = "0xA9EFC4", Offset = "0xA9EFC4", VA = "0xA9EFC4")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x6002C91")]
			[Address(RVA = "0xA9F08C", Offset = "0xA9F08C", VA = "0xA9F08C")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x20006A4")]
		public class UniqueVertex
		{
			[Token(Token = "0x4002DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedX;

			[Token(Token = "0x4002DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_nFixedY;

			[Token(Token = "0x4002DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nFixedZ;

			[Token(Token = "0x4002DCF")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x6002C92")]
			[Address(RVA = "0xA9F144", Offset = "0xA9F144", VA = "0xA9F144", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C93")]
			[Address(RVA = "0xA9F204", Offset = "0xA9F204", VA = "0xA9F204", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6002C94")]
			[Address(RVA = "0xA9EE30", Offset = "0xA9EE30", VA = "0xA9EE30")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x6002C95")]
			[Address(RVA = "0xA9F264", Offset = "0xA9F264", VA = "0xA9F264")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002C96")]
			[Address(RVA = "0xA9F314", Offset = "0xA9F314", VA = "0xA9F314")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C97")]
			[Address(RVA = "0xA9F330", Offset = "0xA9F330", VA = "0xA9F330")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C98")]
			[Address(RVA = "0xA9F218", Offset = "0xA9F218", VA = "0xA9F218")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x6002C99")]
			[Address(RVA = "0xA9F35C", Offset = "0xA9F35C", VA = "0xA9F35C")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0xA9F2F0", Offset = "0xA9F2F0", VA = "0xA9F2F0")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20006A5")]
		private class RepeatedVertex
		{
			[Token(Token = "0x4002DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _nFaceIndex;

			[Token(Token = "0x4002DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x1700046B")]
			public int FaceIndex
			{
				[Token(Token = "0x6002C9B")]
				[Address(RVA = "0xA9F074", Offset = "0xA9F074", VA = "0xA9F074")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700046C")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x6002C9C")]
				[Address(RVA = "0xA9F07C", Offset = "0xA9F07C", VA = "0xA9F07C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0xA9EE80", Offset = "0xA9EE80", VA = "0xA9EE80")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x20006A6")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x4002DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nUniqueIndex;

			[Token(Token = "0x4002DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x1700046D")]
			public int UniqueIndex
			{
				[Token(Token = "0x6002C9E")]
				[Address(RVA = "0xA9F084", Offset = "0xA9F084", VA = "0xA9F084")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002C9F")]
			[Address(RVA = "0xA9EF20", Offset = "0xA9EF20", VA = "0xA9EF20")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0xA9EEB8", Offset = "0xA9EEB8", VA = "0xA9EEB8")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x17000176")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0xA9E800", Offset = "0xA9E800", VA = "0xA9E800")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xA9E808", Offset = "0xA9E808", VA = "0xA9E808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x600148D")]
			[Address(RVA = "0xA9E810", Offset = "0xA9E810", VA = "0xA9E810")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0xA9E818", Offset = "0xA9E818", VA = "0xA9E818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xA9E820", Offset = "0xA9E820", VA = "0xA9E820")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xA9F06C", Offset = "0xA9F06C", VA = "0xA9F06C")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D2")]
	public class RelevanceSphere
	{
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bExpanded;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 m_v3Position;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fRelevance;

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xA9F3F4", Offset = "0xA9F3F4", VA = "0xA9F3F4")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xA9F470", Offset = "0xA9F470", VA = "0xA9F470")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x20006A7")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x20006A8")]
		private class Triangle
		{
			[Token(Token = "0x4002DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x4002DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_bUVData;

			[Token(Token = "0x4002DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] m_aUV;

			[Token(Token = "0x4002DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] m_aIndices;

			[Token(Token = "0x4002DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x4002DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int m_nSubMesh;

			[Token(Token = "0x1700046E")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x6002CA5")]
				[Address(RVA = "0xAA5AAC", Offset = "0xAA5AAC", VA = "0xAA5AAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046F")]
			public bool HasUVData
			{
				[Token(Token = "0x6002CA6")]
				[Address(RVA = "0xAA5AB4", Offset = "0xAA5AB4", VA = "0xAA5AB4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000470")]
			public int[] IndicesUV
			{
				[Token(Token = "0x6002CA7")]
				[Address(RVA = "0xAA5ABC", Offset = "0xAA5ABC", VA = "0xAA5ABC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000471")]
			public Vector3 Normal
			{
				[Token(Token = "0x6002CA8")]
				[Address(RVA = "0xAA5AC4", Offset = "0xAA5AC4", VA = "0xAA5AC4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000472")]
			public int[] Indices
			{
				[Token(Token = "0x6002CA9")]
				[Address(RVA = "0xAA5AD0", Offset = "0xAA5AD0", VA = "0xAA5AD0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CAA")]
			[Address(RVA = "0xAA22F0", Offset = "0xAA22F0", VA = "0xAA22F0")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0xAA15C4", Offset = "0xAA15C4", VA = "0xAA15C4")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0xAA08A4", Offset = "0xAA08A4", VA = "0xAA08A4")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0xAA5AD8", Offset = "0xAA5AD8", VA = "0xAA5AD8")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0xAA0A20", Offset = "0xAA0A20", VA = "0xAA0A20")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0xAA5D50", Offset = "0xAA5D50", VA = "0xAA5D50")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0xAA14D0", Offset = "0xAA14D0", VA = "0xAA14D0")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0xAA5D8C", Offset = "0xAA5D8C", VA = "0xAA5D8C")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0xAA173C", Offset = "0xAA173C", VA = "0xAA173C")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x20006A9")]
		private class TriangleList
		{
			[Token(Token = "0x4002DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0xAA3D60", Offset = "0xAA3D60", VA = "0xAA3D60")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x20006AA")]
		private class Vertex
		{
			[Token(Token = "0x4002DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_v3Position;

			[Token(Token = "0x4002DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x4002DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x4002DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x4002DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int m_nID;

			[Token(Token = "0x4002DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x4002DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x4002DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m_fObjDist;

			[Token(Token = "0x4002DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vertex m_collapse;

			[Token(Token = "0x4002DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int m_nHeapSpot;

			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0xAA1F24", Offset = "0xAA1F24", VA = "0xAA1F24")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0xAA13FC", Offset = "0xAA13FC", VA = "0xAA13FC")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0xAA5C64", Offset = "0xAA5C64", VA = "0xAA5C64")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0xAA0910", Offset = "0xAA0910", VA = "0xAA0910")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006AB")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0xAA601C", Offset = "0xAA601C", VA = "0xAA601C", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0xAA61A8", Offset = "0xAA61A8", VA = "0xAA61A8", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0xAA4E6C", Offset = "0xAA4E6C", VA = "0xAA4E6C")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x20006AC")]
		private class VertexDataHash
		{
			[Token(Token = "0x4002DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x4002DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _v3Normal;

			[Token(Token = "0x4002DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x4002DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x4002DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color32 _color;

			[Token(Token = "0x4002DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x17000473")]
			public Vector3 Vertex
			{
				[Token(Token = "0x6002CBB")]
				[Address(RVA = "0xAA5DC8", Offset = "0xAA5DC8", VA = "0xAA5DC8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000474")]
			public Vector3 Normal
			{
				[Token(Token = "0x6002CBC")]
				[Address(RVA = "0xAA5DD4", Offset = "0xAA5DD4", VA = "0xAA5DD4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000475")]
			public Vector2 UV1
			{
				[Token(Token = "0x6002CBD")]
				[Address(RVA = "0xAA5DE0", Offset = "0xAA5DE0", VA = "0xAA5DE0")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000476")]
			public Vector2 UV2
			{
				[Token(Token = "0x6002CBE")]
				[Address(RVA = "0xAA5DE8", Offset = "0xAA5DE8", VA = "0xAA5DE8")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000477")]
			public Color32 Color
			{
				[Token(Token = "0x6002CBF")]
				[Address(RVA = "0xAA5DF0", Offset = "0xAA5DF0", VA = "0xAA5DF0")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xAA4E74", Offset = "0xAA4E74", VA = "0xAA4E74")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0xAA5DF8", Offset = "0xAA5DF8", VA = "0xAA5DF8", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0xAA5FB4", Offset = "0xAA5FB4", VA = "0xAA5FB4", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0xAA5FD4", Offset = "0xAA5FD4", VA = "0xAA5FD4")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0xAA5FF0", Offset = "0xAA5FF0", VA = "0xAA5FF0")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D9D8", Offset = "0x85D9D8")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh sourceMesh;

			[Token(Token = "0x4002DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gameObject;

			[Token(Token = "0x4002DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4002DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <nVertices>5__2;

			[Token(Token = "0x17000478")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CC8")]
				[Address(RVA = "0xAA5980", Offset = "0xAA5980", VA = "0xAA5980", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000479")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CCA")]
				[Address(RVA = "0xAA59E8", Offset = "0xAA59E8", VA = "0xAA59E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0xA9F840", Offset = "0xA9F840", VA = "0xA9F840")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0xAA4FD4", Offset = "0xAA4FD4", VA = "0xAA4FD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0xAA4FD8", Offset = "0xAA4FD8", VA = "0xAA4FD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0xAA5988", Offset = "0xAA5988", VA = "0xAA5988", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D9E8", Offset = "0x85D9E8")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nVertices;

			[Token(Token = "0x4002DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh meshOut;

			[Token(Token = "0x4002DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject gameObject;

			[Token(Token = "0x4002DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x4002DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x1700047A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CCE")]
				[Address(RVA = "0xAA3DD4", Offset = "0xAA3DD4", VA = "0xAA3DD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CD0")]
				[Address(RVA = "0xAA3E3C", Offset = "0xAA3E3C", VA = "0xAA3E3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0xA9F914", Offset = "0xA9F914", VA = "0xA9F914")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0xAA3258", Offset = "0xAA3258", VA = "0xAA3258", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0xAA325C", Offset = "0xAA325C", VA = "0xAA325C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0xAA3DDC", Offset = "0xAA3DDC", VA = "0xAA3DDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85D9F8", Offset = "0x85D9F8")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshIn;

			[Token(Token = "0x4002E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x4002E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh meshOut;

			[Token(Token = "0x4002E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject gameObject;

			[Token(Token = "0x4002E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x4002E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x4002E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x4002E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x4002E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x4002E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x4002E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x4002E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x4002E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x4002E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x4002E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x4002E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x4002E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x4002E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x4002E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x4002E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <bUV1>5__17;

			[Token(Token = "0x4002E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
			private bool <bUV2>5__18;

			[Token(Token = "0x4002E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
			private bool <bNormal>5__19;

			[Token(Token = "0x4002E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
			private bool <bTangent>5__20;

			[Token(Token = "0x4002E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x4002E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x4002E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <strMesh>5__23;

			[Token(Token = "0x4002E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int <i>5__24;

			[Token(Token = "0x1700047C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CD4")]
				[Address(RVA = "0xAA4F64", Offset = "0xAA4F64", VA = "0xAA4F64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CD6")]
				[Address(RVA = "0xAA4FCC", Offset = "0xAA4FCC", VA = "0xAA4FCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0xAA0338", Offset = "0xAA0338", VA = "0xAA0338")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0xAA3E44", Offset = "0xAA3E44", VA = "0xAA3E44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0xAA3E48", Offset = "0xAA3E48", VA = "0xAA3E48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0xAA4F6C", Offset = "0xAA4F6C", VA = "0xAA4F6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA08", Offset = "0x85DA08")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform transform;

			[Token(Token = "0x4002E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4002E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x1700047E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CDA")]
				[Address(RVA = "0xAA31E8", Offset = "0xAA31E8", VA = "0xAA31E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CDC")]
				[Address(RVA = "0xAA3250", Offset = "0xAA3250", VA = "0xAA3250", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0xAA0EB4", Offset = "0xAA0EB4", VA = "0xAA0EB4")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0xAA2A5C", Offset = "0xAA2A5C", VA = "0xAA2A5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0xAA2A60", Offset = "0xAA2A60", VA = "0xAA2A60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0xAA31F0", Offset = "0xAA31F0", VA = "0xAA31F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x863FF0", Offset = "0x863FF0")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x864000", Offset = "0x864000")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x4001468")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexMap;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_meshOriginal;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseCurvature;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[SerializeField]
		[HideInInspector]
		private bool m_bProtectTexture;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x1700017A")]
		public static bool Cancelled
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0xA9F58C", Offset = "0xA9F58C", VA = "0xA9F58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8724DC", Offset = "0x8724DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001494")]
			[Address(RVA = "0xA9F5F4", Offset = "0xA9F5F4", VA = "0xA9F5F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8724EC", Offset = "0x8724EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0xA9F664", Offset = "0xA9F664", VA = "0xA9F664")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001496")]
			[Address(RVA = "0xA9F6CC", Offset = "0xA9F6CC", VA = "0xA9F6CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x6001497")]
			[Address(RVA = "0xA9F738", Offset = "0xA9F738", VA = "0xA9F738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8724FC", Offset = "0x8724FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001498")]
			[Address(RVA = "0xA9F740", Offset = "0xA9F740", VA = "0xA9F740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87250C", Offset = "0x87250C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0xA9F74C", Offset = "0xA9F74C", VA = "0xA9F74C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149A")]
			[Address(RVA = "0xA9F754", Offset = "0xA9F754", VA = "0xA9F754")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public bool UseCurvature
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0xA9F760", Offset = "0xA9F760", VA = "0xA9F760")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149C")]
			[Address(RVA = "0xA9F768", Offset = "0xA9F768", VA = "0xA9F768")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool ProtectTexture
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0xA9F774", Offset = "0xA9F774", VA = "0xA9F774")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149E")]
			[Address(RVA = "0xA9F77C", Offset = "0xA9F77C", VA = "0xA9F77C")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public bool LockBorder
		{
			[Token(Token = "0x600149F")]
			[Address(RVA = "0xA9F788", Offset = "0xA9F788", VA = "0xA9F788")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xA9F790", Offset = "0xA9F790", VA = "0xA9F790")]
			set
			{
			}
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xA9F79C", Offset = "0xA9F79C", VA = "0xA9F79C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87251C", Offset = "0x87251C")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xA9F86C", Offset = "0xA9F86C", VA = "0xA9F86C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872580", Offset = "0x872580")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xA9F940", Offset = "0xA9F940", VA = "0xA9F940")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xA9F948", Offset = "0xA9F948", VA = "0xA9F948")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xA9F98C", Offset = "0xA9F98C", VA = "0xA9F98C")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xAA0294", Offset = "0xAA0294", VA = "0xAA0294")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8725E4", Offset = "0x8725E4")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xAA0364", Offset = "0xAA0364", VA = "0xAA0364")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xAA03FC", Offset = "0xAA03FC", VA = "0xAA03FC")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xAA0B0C", Offset = "0xAA0B0C", VA = "0xAA0B0C")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xAA0E1C", Offset = "0xAA0E1C", VA = "0xAA0E1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872648", Offset = "0x872648")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xAA0EE0", Offset = "0xAA0EE0", VA = "0xAA0EE0")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xAA1D70", Offset = "0xAA1D70", VA = "0xAA1D70")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xAA2054", Offset = "0xAA2054", VA = "0xAA2054")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xAA2644", Offset = "0xAA2644", VA = "0xAA2644")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xAA284C", Offset = "0xAA284C", VA = "0xAA284C")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xAA28F0", Offset = "0xAA28F0", VA = "0xAA28F0")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xAA19A4", Offset = "0xAA19A4", VA = "0xAA19A4")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xAA1B78", Offset = "0xAA1B78", VA = "0xAA1B78")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xAA29BC", Offset = "0xAA29BC", VA = "0xAA29BC")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xAA2850", Offset = "0xAA2850", VA = "0xAA2850")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xAA2A3C", Offset = "0xAA2A3C", VA = "0xAA2A3C")]
		public Simplifier()
		{
		}
	}
}
namespace DentedPixel
{
	[Token(Token = "0x20002D4")]
	public class LeanDummy
	{
		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xB15CA4", Offset = "0xB15CA4", VA = "0xB15CA4")]
		public LeanDummy()
		{
		}
	}
}
namespace DentedPixel.LTExamples
{
	[Token(Token = "0x20002D5")]
	public class PathBezier : MonoBehaviour
	{
		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] trans;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LTBezierPath cr;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject avatar1;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float iter;

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xB0C8E4", Offset = "0xB0C8E4", VA = "0xB0C8E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xB0CB34", Offset = "0xB0CB34", VA = "0xB0CB34")]
		private void Start()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xB0CCC0", Offset = "0xB0CCC0", VA = "0xB0CCC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xB0CD14", Offset = "0xB0CD14", VA = "0xB0CD14")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xB0CD6C", Offset = "0xB0CD6C", VA = "0xB0CD6C")]
		public PathBezier()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class TestingUnitTests : MonoBehaviour
	{
		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA18", Offset = "0x85DA18")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject[] cubes;

			[Token(Token = "0x4002E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] tweenIds;

			[Token(Token = "0x4002E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int onCompleteCount;

			[Token(Token = "0x4002E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject cubeToTrans;

			[Token(Token = "0x4002E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 cubeDestEnd;

			[Token(Token = "0x4002E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject cubeSpline;

			[Token(Token = "0x4002E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int jumpTimeId;

			[Token(Token = "0x4002E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public GameObject jumpCube;

			[Token(Token = "0x4002E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public GameObject zeroCube;

			[Token(Token = "0x4002E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public GameObject cubeScale;

			[Token(Token = "0x4002E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public GameObject cubeRotate;

			[Token(Token = "0x4002E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public GameObject cubeRotateA;

			[Token(Token = "0x4002E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public GameObject cubeRotateB;

			[Token(Token = "0x4002E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public float onStartTime;

			[Token(Token = "0x4002E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Vector3 beforePos;

			[Token(Token = "0x4002E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Vector3 beforePos2;

			[Token(Token = "0x4002E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public int totalEasingCheck;

			[Token(Token = "0x4002E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public int totalEasingCheckSuccess;

			[Token(Token = "0x4002E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			public bool value2UpdateCalled;

			[Token(Token = "0x4002E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Action <>9__21;

			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0xB0E868", Offset = "0xB0E868", VA = "0xB0E868")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0xB0F064", Offset = "0xB0F064", VA = "0xB0F064")]
			internal void <Start>b__0()
			{
			}

			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0xB0F118", Offset = "0xB0F118", VA = "0xB0F118")]
			internal void <Start>b__1()
			{
			}

			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0xB0F2EC", Offset = "0xB0F2EC", VA = "0xB0F2EC")]
			internal void <Start>b__21()
			{
			}

			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0xB0F384", Offset = "0xB0F384", VA = "0xB0F384")]
			internal void <Start>b__2()
			{
			}

			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0xB0F490", Offset = "0xB0F490", VA = "0xB0F490")]
			internal void <Start>b__4()
			{
			}

			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0xB0F5BC", Offset = "0xB0F5BC", VA = "0xB0F5BC")]
			internal void <Start>b__5()
			{
			}

			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0xB0F79C", Offset = "0xB0F79C", VA = "0xB0F79C")]
			internal void <Start>b__6()
			{
			}

			[Token(Token = "0x6002CE5")]
			[Address(RVA = "0xB0F8A4", Offset = "0xB0F8A4", VA = "0xB0F8A4")]
			internal void <Start>b__8()
			{
			}

			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0xB0FAA8", Offset = "0xB0FAA8", VA = "0xB0FAA8")]
			internal void <Start>b__9()
			{
			}

			[Token(Token = "0x6002CE7")]
			[Address(RVA = "0xB0FCB0", Offset = "0xB0FCB0", VA = "0xB0FCB0")]
			internal void <Start>b__10()
			{
			}

			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0xB0FEB8", Offset = "0xB0FEB8", VA = "0xB0FEB8")]
			internal void <Start>b__11()
			{
			}

			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0xB10168", Offset = "0xB10168", VA = "0xB10168")]
			internal void <Start>b__13(object completeObj)
			{
			}

			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0xB10290", Offset = "0xB10290", VA = "0xB10290")]
			internal void <Start>b__14()
			{
			}

			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0xB10540", Offset = "0xB10540", VA = "0xB10540")]
			internal void <Start>b__15()
			{
			}

			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0xB10568", Offset = "0xB10568", VA = "0xB10568")]
			internal void <Start>b__16()
			{
			}

			[Token(Token = "0x6002CED")]
			[Address(RVA = "0xB1064C", Offset = "0xB1064C", VA = "0xB1064C")]
			internal void <Start>b__17()
			{
			}

			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xB109A8", Offset = "0xB109A8", VA = "0xB109A8")]
			internal void <Start>b__19(Vector2 value)
			{
			}

			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0xB109B4", Offset = "0xB109B4", VA = "0xB109B4")]
			internal void <Start>b__20()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA28", Offset = "0x85DA28")]
		private sealed class <>c__DisplayClass22_1
		{
			[Token(Token = "0x4002E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float beforeX;

			[Token(Token = "0x4002E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass22_0 CS$<>8__locals1;

			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0xB0F794", Offset = "0xB0F794", VA = "0xB0F794")]
			public <>c__DisplayClass22_1()
			{
			}

			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0xB10A34", Offset = "0xB10A34", VA = "0xB10A34")]
			internal void <Start>b__23()
			{
			}
		}

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA38", Offset = "0x85DA38")]
		private sealed class <>c__DisplayClass22_2
		{
			[Token(Token = "0x4002E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int totalTweenTypeLength;

			[Token(Token = "0x4002E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass22_0 CS$<>8__locals2;

			[Token(Token = "0x4002E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<object> <>9__24;

			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0xB0E910", Offset = "0xB0E910", VA = "0xB0E910")]
			public <>c__DisplayClass22_2()
			{
			}

			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0xB10DB0", Offset = "0xB10DB0", VA = "0xB10DB0")]
			internal void <Start>b__24(object obj)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA48", Offset = "0x85DA48")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__22_3;

			[Token(Token = "0x4002E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__22_22;

			[Token(Token = "0x4002E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__22_7;

			[Token(Token = "0x4002E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<float> <>9__22_12;

			[Token(Token = "0x4002E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__22_18;

			[Token(Token = "0x4002E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action <>9__26_0;

			[Token(Token = "0x6002CF5")]
			[Address(RVA = "0xB0EE54", Offset = "0xB0EE54", VA = "0xB0EE54")]
			public <>c()
			{
			}

			[Token(Token = "0x6002CF6")]
			[Address(RVA = "0xB0EE5C", Offset = "0xB0EE5C", VA = "0xB0EE5C")]
			internal void <Start>b__22_3()
			{
			}

			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0xB0EED0", Offset = "0xB0EED0", VA = "0xB0EED0")]
			internal void <Start>b__22_22()
			{
			}

			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0xB0EED4", Offset = "0xB0EED4", VA = "0xB0EED4")]
			internal void <Start>b__22_7()
			{
			}

			[Token(Token = "0x6002CF9")]
			[Address(RVA = "0xB0EF48", Offset = "0xB0EF48", VA = "0xB0EF48")]
			internal void <Start>b__22_12(float val)
			{
			}

			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0xB0EFCC", Offset = "0xB0EFCC", VA = "0xB0EFCC")]
			internal void <Start>b__22_18()
			{
			}

			[Token(Token = "0x6002CFB")]
			[Address(RVA = "0xB0F058", Offset = "0xB0F058", VA = "0xB0F058")]
			internal void <pauseTimeNow>b__26_0()
			{
			}
		}

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA58", Offset = "0x85DA58")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pauseCount;

			[Token(Token = "0x4002E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject cubeRound;

			[Token(Token = "0x4002E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 onStartPos;

			[Token(Token = "0x4002E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 onStartPosSpline;

			[Token(Token = "0x4002E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject cubeSpline;

			[Token(Token = "0x4002E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject cubeSeq;

			[Token(Token = "0x4002E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject cubeBounds;

			[Token(Token = "0x4002E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool didPassBounds;

			[Token(Token = "0x4002E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 failPoint;

			[Token(Token = "0x4002E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int setOnStartNum;

			[Token(Token = "0x4002E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool setPosOnUpdate;

			[Token(Token = "0x4002E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int setPosNum;

			[Token(Token = "0x4002E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public bool hasGroupTweensCheckStarted;

			[Token(Token = "0x4002E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float previousXlt4;

			[Token(Token = "0x4002E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool onUpdateWasCalled;

			[Token(Token = "0x4002E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float start;

			[Token(Token = "0x4002E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float expectedTime;

			[Token(Token = "0x4002E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public bool didGetCorrectOnUpdate;

			[Token(Token = "0x4002E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Action <>9__13;

			[Token(Token = "0x4002E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Action<Vector3> <>9__14;

			[Token(Token = "0x4002E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public Action <>9__16;

			[Token(Token = "0x4002E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Action<object> <>9__15;

			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0xB10ED0", Offset = "0xB10ED0", VA = "0xB10ED0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002CFD")]
			[Address(RVA = "0xB10ED8", Offset = "0xB10ED8", VA = "0xB10ED8")]
			internal void <timeBasedTesting>b__0()
			{
			}

			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0xB10F08", Offset = "0xB10F08", VA = "0xB10F08")]
			internal void <timeBasedTesting>b__1()
			{
			}

			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0xB10F38", Offset = "0xB10F38", VA = "0xB10F38")]
			internal void <timeBasedTesting>b__2(float val)
			{
			}

			[Token(Token = "0x6002D00")]
			[Address(RVA = "0xB10F48", Offset = "0xB10F48", VA = "0xB10F48")]
			internal void <timeBasedTesting>b__3()
			{
			}

			[Token(Token = "0x6002D01")]
			[Address(RVA = "0xB111C0", Offset = "0xB111C0", VA = "0xB111C0")]
			internal void <timeBasedTesting>b__4()
			{
			}

			[Token(Token = "0x6002D02")]
			[Address(RVA = "0xB114F4", Offset = "0xB114F4", VA = "0xB114F4")]
			internal void <timeBasedTesting>b__5()
			{
			}

			[Token(Token = "0x6002D03")]
			[Address(RVA = "0xB1169C", Offset = "0xB1169C", VA = "0xB1169C")]
			internal void <timeBasedTesting>b__6(float val)
			{
			}

			[Token(Token = "0x6002D04")]
			[Address(RVA = "0xB117C8", Offset = "0xB117C8", VA = "0xB117C8")]
			internal void <timeBasedTesting>b__7()
			{
			}

			[Token(Token = "0x6002D05")]
			[Address(RVA = "0xB11A10", Offset = "0xB11A10", VA = "0xB11A10")]
			internal void <timeBasedTesting>b__13()
			{
			}

			[Token(Token = "0x6002D06")]
			[Address(RVA = "0xB11A20", Offset = "0xB11A20", VA = "0xB11A20")]
			internal void <timeBasedTesting>b__14(Vector3 newPosition)
			{
			}

			[Token(Token = "0x6002D07")]
			[Address(RVA = "0xB11A74", Offset = "0xB11A74", VA = "0xB11A74")]
			internal void <timeBasedTesting>b__15(object param)
			{
			}

			[Token(Token = "0x6002D08")]
			[Address(RVA = "0xB11CC8", Offset = "0xB11CC8", VA = "0xB11CC8")]
			internal void <timeBasedTesting>b__16()
			{
			}

			[Token(Token = "0x6002D09")]
			[Address(RVA = "0xB1217C", Offset = "0xB1217C", VA = "0xB1217C")]
			internal void <timeBasedTesting>b__8()
			{
			}

			[Token(Token = "0x6002D0A")]
			[Address(RVA = "0xB12488", Offset = "0xB12488", VA = "0xB12488")]
			internal void <timeBasedTesting>b__9(float val)
			{
			}

			[Token(Token = "0x6002D0B")]
			[Address(RVA = "0xB12494", Offset = "0xB12494", VA = "0xB12494")]
			internal void <timeBasedTesting>b__10()
			{
			}

			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0xB12764", Offset = "0xB12764", VA = "0xB12764")]
			internal void <timeBasedTesting>b__11(Vector3 val)
			{
			}

			[Token(Token = "0x6002D0D")]
			[Address(RVA = "0xB127A0", Offset = "0xB127A0", VA = "0xB127A0")]
			internal void <timeBasedTesting>b__12()
			{
			}
		}

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA68", Offset = "0x85DA68")]
		private sealed class <timeBasedTesting>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass24_0 <>8__1;

			[Token(Token = "0x4002E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <descriptionMatchCount>5__2;

			[Token(Token = "0x17000480")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D11")]
				[Address(RVA = "0xB15C34", Offset = "0xB15C34", VA = "0xB15C34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000481")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D13")]
				[Address(RVA = "0xB15C9C", Offset = "0xB15C9C", VA = "0xB15C9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D0E")]
			[Address(RVA = "0xB0E988", Offset = "0xB0E988", VA = "0xB0E988")]
			[DebuggerHidden]
			public <timeBasedTesting>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002D0F")]
			[Address(RVA = "0xB136F0", Offset = "0xB136F0", VA = "0xB136F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D10")]
			[Address(RVA = "0xB136F4", Offset = "0xB136F4", VA = "0xB136F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D12")]
			[Address(RVA = "0xB15C3C", Offset = "0xB15C3C", VA = "0xB15C3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA78", Offset = "0x85DA78")]
		private sealed class <lotsOfCancels>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4002E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <cubeCount>5__2;

			[Token(Token = "0x4002E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int[] <tweensA>5__3;

			[Token(Token = "0x4002E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject[] <aGOs>5__4;

			[Token(Token = "0x4002E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int[] <tweensB>5__5;

			[Token(Token = "0x4002E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GameObject[] <bGOs>5__6;

			[Token(Token = "0x17000482")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D17")]
				[Address(RVA = "0xB13448", Offset = "0xB13448", VA = "0xB13448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000483")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D19")]
				[Address(RVA = "0xB134B0", Offset = "0xB134B0", VA = "0xB134B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D14")]
			[Address(RVA = "0xB0EA24", Offset = "0xB0EA24", VA = "0xB0EA24")]
			[DebuggerHidden]
			public <lotsOfCancels>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002D15")]
			[Address(RVA = "0xB12820", Offset = "0xB12820", VA = "0xB12820", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D16")]
			[Address(RVA = "0xB12824", Offset = "0xB12824", VA = "0xB12824", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D18")]
			[Address(RVA = "0xB13450", Offset = "0xB13450", VA = "0xB13450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA88", Offset = "0x85DA88")]
		private sealed class <pauseTimeNow>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x17000484")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D1D")]
				[Address(RVA = "0xB13680", Offset = "0xB13680", VA = "0xB13680", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000485")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D1F")]
				[Address(RVA = "0xB136E8", Offset = "0xB136E8", VA = "0xB136E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D1A")]
			[Address(RVA = "0xB0EAC0", Offset = "0xB0EAC0", VA = "0xB0EAC0")]
			[DebuggerHidden]
			public <pauseTimeNow>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0xB134B8", Offset = "0xB134B8", VA = "0xB134B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D1C")]
			[Address(RVA = "0xB134BC", Offset = "0xB134BC", VA = "0xB134BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0xB13688", Offset = "0xB13688", VA = "0xB13688", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject cube1;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cube2;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject cube3;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject cube4;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject cubeAlpha1;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject cubeAlpha2;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool eventGameObjectWasCalled;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool eventGeneralWasCalled;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lt1Id;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LTDescr lt2;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LTDescr lt3;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LTDescr lt4;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LTDescr[] groupTweens;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] groupGOs;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int groupTweensCnt;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int rotateRepeat;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int rotateRepeatAngle;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject boxNoCollider;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float timeElapsedNormalTimeScale;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float timeElapsedIgnoreTimeScale;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool pauseTweenDidFinish;

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xB0CD74", Offset = "0xB0CD74", VA = "0xB0CD74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xB0CE48", Offset = "0xB0CE48", VA = "0xB0CE48")]
		private void Start()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xB0E870", Offset = "0xB0E870", VA = "0xB0E870")]
		private GameObject cubeNamed(string name)
		{
			return null;
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xB0E918", Offset = "0xB0E918", VA = "0xB0E918")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8726AC", Offset = "0x8726AC")]
		private IEnumerator timeBasedTesting()
		{
			return null;
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xB0E9B4", Offset = "0xB0E9B4", VA = "0xB0E9B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872710", Offset = "0x872710")]
		private IEnumerator lotsOfCancels()
		{
			return null;
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xB0EA50", Offset = "0xB0EA50", VA = "0xB0EA50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872774", Offset = "0x872774")]
		private IEnumerator pauseTimeNow()
		{
			return null;
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xB0EAEC", Offset = "0xB0EAEC", VA = "0xB0EAEC")]
		private void rotateRepeatFinished()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xB0EBA4", Offset = "0xB0EBA4", VA = "0xB0EBA4")]
		private void rotateRepeatAllFinished()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xB0ED44", Offset = "0xB0ED44", VA = "0xB0ED44")]
		private void eventGameObjectCalled(LTEvent e)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xB0ED50", Offset = "0xB0ED50", VA = "0xB0ED50")]
		private void eventGeneralCalled(LTEvent e)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xB0ED5C", Offset = "0xB0ED5C", VA = "0xB0ED5C")]
		public TestingUnitTests()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xB0ED64", Offset = "0xB0ED64", VA = "0xB0ED64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8727D8", Offset = "0x8727D8")]
		private void <lotsOfCancels>b__25_0()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xB0ED70", Offset = "0xB0ED70", VA = "0xB0ED70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8727E8", Offset = "0x8727E8")]
		private void <pauseTimeNow>b__26_1()
		{
		}
	}
}
namespace DigitalRuby.FastLineRenderer
{
	[Token(Token = "0x20002D7")]
	public class FastLineRendererDemoList : MonoBehaviour
	{
		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DA98", Offset = "0x85DA98")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FastLineRendererProperties props;

			[Token(Token = "0x6002D20")]
			[Address(RVA = "0xB1D2D0", Offset = "0xB1D2D0", VA = "0xB1D2D0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002D21")]
			[Address(RVA = "0xB1D534", Offset = "0xB1D534", VA = "0xB1D534")]
			internal void <CreateContinuousLineFromList>b__0(FastLineRendererProperties _props)
			{
			}
		}

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DAA8", Offset = "0x85DAA8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FastLineRendererProperties props;

			[Token(Token = "0x6002D22")]
			[Address(RVA = "0xB1D4FC", Offset = "0xB1D4FC", VA = "0xB1D4FC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002D23")]
			[Address(RVA = "0xB1D614", Offset = "0xB1D614", VA = "0xB1D614")]
			internal void <CreateDistinctSegmentsFromList>b__0(FastLineRendererProperties _props)
			{
			}
		}

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FastLineRenderer LineRenderer;

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xB1D0EC", Offset = "0xB1D0EC", VA = "0xB1D0EC")]
		private void CreateContinuousLineFromList()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xB1D2D8", Offset = "0xB1D2D8", VA = "0xB1D2D8")]
		private void CreateDistinctSegmentsFromList()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xB1D504", Offset = "0xB1D504", VA = "0xB1D504")]
		private void Start()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xB1D528", Offset = "0xB1D528", VA = "0xB1D528")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xB1D52C", Offset = "0xB1D52C", VA = "0xB1D52C")]
		public FastLineRendererDemoList()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	[ExecuteInEditMode]
	public class FastLineRendererDemoScript : MonoBehaviour
	{
		[Token(Token = "0x20006BB")]
		private enum RotationAxes
		{
			[Token(Token = "0x4002E70")]
			MouseXAndY,
			[Token(Token = "0x4002E71")]
			MouseX,
			[Token(Token = "0x4002E72")]
			MouseY
		}

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FastLineRenderer LineRenderer;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LineRenderer UnityLineRenderer;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle UseUnityLineRendererToggle;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text LineCountLabel;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MoveSpeed;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool EnableMouseLook;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool ShowCurves;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool ShowEffects;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool ShowGrid;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> UnityLineRendererPositions;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float deltaTime;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float msec;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float fps;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int lineCount;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RotationAxes axes;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float sensitivityX;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float sensitivityY;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float minimumX;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float maximumX;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float minimumY;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float maximumY;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float rotationX;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float rotationY;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion originalRotation;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FastLineRenderer lotsOfLinesRenderer;

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xB1D6E0", Offset = "0xB1D6E0", VA = "0xB1D6E0")]
		private void UpdateMovement()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xB1D82C", Offset = "0xB1D82C", VA = "0xB1D82C")]
		private void UpdateMouseLook()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xB1DC94", Offset = "0xB1DC94", VA = "0xB1DC94")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xB1DE8C", Offset = "0xB1DE8C", VA = "0xB1DE8C")]
		private byte RandomByte()
		{
			return default(byte);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xB1DEAC", Offset = "0xB1DEAC", VA = "0xB1DEAC")]
		private Vector3 RandomVelocity(float c)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xB1DF3C", Offset = "0xB1DF3C", VA = "0xB1DF3C")]
		private void DoShowEffects()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xB1E2DC", Offset = "0xB1E2DC", VA = "0xB1E2DC")]
		private void DoGrid()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xB1E4EC", Offset = "0xB1E4EC", VA = "0xB1E4EC")]
		private void UpdateDynamicLines()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xB1E980", Offset = "0xB1E980", VA = "0xB1E980")]
		private void CheckInput()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xB1E9AC", Offset = "0xB1E9AC", VA = "0xB1E9AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xB1F20C", Offset = "0xB1F20C", VA = "0xB1F20C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xB1EAA0", Offset = "0xB1EAA0", VA = "0xB1EAA0")]
		private void AddCurvesAndSpline()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xB1F328", Offset = "0xB1F328", VA = "0xB1F328")]
		public void GenerateLotsOfLines()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xB1F910", Offset = "0xB1F910", VA = "0xB1F910")]
		public void UseUnityLineRendererToggled()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xB1DBE4", Offset = "0xB1DBE4", VA = "0xB1DBE4")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xB1F9D4", Offset = "0xB1F9D4", VA = "0xB1F9D4")]
		public FastLineRendererDemoScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D9")]
	public struct LineGroupList
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864240", Offset = "0x864240")]
		public string Description;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864278", Offset = "0x864278")]
		public Vector3 Offset;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8642B0", Offset = "0x8642B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8642B0", Offset = "0x8642B0")]
		public float LineRadius;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86430C", Offset = "0x86430C")]
		public Color32 LineColor;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x864344", Offset = "0x864344")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864344", Offset = "0x864344")]
		public float GlowWidthMultiplier;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86439C", Offset = "0x86439C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86439C", Offset = "0x86439C")]
		public float GlowIntensity;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8643F0", Offset = "0x8643F0")]
		public bool AddStartCap;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864428", Offset = "0x864428")]
		public bool AddEndCap;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864460", Offset = "0x864460")]
		public FastLineRendererLineJoin LineJoin;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864498", Offset = "0x864498")]
		public bool Continuous;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ReorderableListAttribute", RVA = "0x8644D0", Offset = "0x8644D0")]
		public ReorderableList_Vector3 Points;

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x9F1D04", Offset = "0x9F1D04", VA = "0x9F1D04")]
		public static LineGroupList Default()
		{
			return default(LineGroupList);
		}
	}
	[Token(Token = "0x20002DA")]
	public enum FastLineRendererLineJoin
	{
		[Token(Token = "0x40014B5")]
		None,
		[Token(Token = "0x40014B6")]
		AdjustPosition,
		[Token(Token = "0x40014B7")]
		AttachToPrevious,
		[Token(Token = "0x40014B8")]
		Round
	}
	[Token(Token = "0x20002DB")]
	public enum FastLineRendererLineSegmentType
	{
		[Token(Token = "0x40014BA")]
		None = 0,
		[Token(Token = "0x40014BB")]
		Full = 2,
		[Token(Token = "0x40014BC")]
		StartCap = 4,
		[Token(Token = "0x40014BD")]
		EndCap = 8,
		[Token(Token = "0x40014BE")]
		RoundJoin = 0x10
	}
	[Token(Token = "0x20002DC")]
	public enum FastLineRendererSplineFlags
	{
		[Token(Token = "0x40014C0")]
		None = 0,
		[Token(Token = "0x40014C1")]
		ClosePath = 1,
		[Token(Token = "0x40014C2")]
		StartCap = 2,
		[Token(Token = "0x40014C3")]
		EndCap = 4
	}
	[Token(Token = "0x20002DD")]
	public class FastLineRendererProperties
	{
		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Start;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 End;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Radius;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color32 Color;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float GlowWidthMultiplier;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float GlowIntensityMultiplier;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector4 LifeTime;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 Velocity;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public FastLineRendererLineJoin LineJoin;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FastLineRendererLineSegmentType LineType;

		[Token(Token = "0x17000181")]
		public float AngularVelocity
		{
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0xB1FB7C", Offset = "0xB1FB7C", VA = "0xB1FB7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xB1E2D4", Offset = "0xB1E2D4", VA = "0xB1E2D4")]
			set
			{
			}
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xB1FA64", Offset = "0xB1FA64", VA = "0xB1FA64")]
		public static Vector4 LifeTimeInfinite()
		{
			return default(Vector4);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xB1D604", Offset = "0xB1D604", VA = "0xB1D604")]
		public void AddCreationTimeSeconds(float seconds)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xB1FAA8", Offset = "0xB1FAA8", VA = "0xB1FAA8")]
		public FastLineRendererProperties Clone()
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xB1FB84", Offset = "0xB1FB84", VA = "0xB1FB84")]
		public void SetLifeTime(float creationTime, float lifeTime, float fadeSeconds)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xB1E298", Offset = "0xB1E298", VA = "0xB1E298")]
		public void SetLifeTime(float lifeTime, float fadeSeconds)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xB1F8D4", Offset = "0xB1F8D4", VA = "0xB1F8D4")]
		public void SetLifeTime(float lifeTime)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xB1828C", Offset = "0xB1828C", VA = "0xB1828C")]
		public FastLineRendererProperties()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[ExecuteInEditMode]
	public class FastLineRenderer : MonoBehaviour
	{
		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DAB8", Offset = "0x85DAB8")]
		private sealed class <SendToCacheAfterCoRoutine>d__120 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TimeSpan elapsed;

			[Token(Token = "0x4002E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FastLineRenderer <>4__this;

			[Token(Token = "0x17000486")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D27")]
				[Address(RVA = "0xB1D07C", Offset = "0xB1D07C", VA = "0xB1D07C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000487")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D29")]
				[Address(RVA = "0xB1D0E4", Offset = "0xB1D0E4", VA = "0xB1D0E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D24")]
			[Address(RVA = "0xB1973C", Offset = "0xB1973C", VA = "0xB1973C")]
			[DebuggerHidden]
			public <SendToCacheAfterCoRoutine>d__120(int <>1__state)
			{
			}

			[Token(Token = "0x6002D25")]
			[Address(RVA = "0xB1CFBC", Offset = "0xB1CFBC", VA = "0xB1CFBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D26")]
			[Address(RVA = "0xB1CFC0", Offset = "0xB1CFC0", VA = "0xB1CFC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D28")]
			[Address(RVA = "0xB1D084", Offset = "0xB1D084", VA = "0xB1D084", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014CE")]
		public const int MaxLinesPerMesh = 16250;

		[Token(Token = "0x40014CF")]
		public const int MaxVerticesPerMesh = 65000;

		[Token(Token = "0x40014D0")]
		public const int MaxIndicesPerMesh = 97500;

		[Token(Token = "0x40014D1")]
		public const int VerticesPerLine = 4;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int[] QuadIndices;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector2 QuadUV1;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2 QuadUV2;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Vector2 QuadUV3;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Vector2 QuadUV4;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int mainTexId;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int mainTexStartCapId;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int mainTexEndCapId;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static int mainTexRoundJoinId;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static int glowTexId;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static int glowTexStartCapId;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static int glowTexEndCapId;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static int glowTexRoundJoinId;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static int animationSpeedId;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static int uvxScaleId;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static int uvyScaleId;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static int glowAnimationSpeedId;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static int uvxScaleGlowId;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private static int uvyScaleGlowId;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static int tintColorId;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static int glowTintColorId;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static int glowIntensityMultiplierId;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static int glowWidthMultiplierId;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static int glowLengthMultiplierId;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private static int jitterMultiplierId;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static int turbulenceMultiplierId;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private static int screenRadiusMultiplierId;

		[Token(Token = "0x40014ED")]
		private const int defaultListCapacity = 256;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static readonly LineGroupList[] defaultInitialGroups;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static readonly HashSet<FastLineRenderer> currentLineRenderers;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static readonly HashSet<FastLineRenderer> cache;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<Mesh> meshes;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<MeshRenderer> meshRenderers;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<List<Vector4>> texCoordsAndGlowLists;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<List<Vector3>> verticesLists;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<List<Vector4>> lineDirsLists;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<List<Color32>> colorsLists;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<List<Vector3>> endsLists;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<List<Vector4>> lifeTimesLists;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<Bounds> boundsList;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<Vector3> path;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3? lastPoint;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int listIndex;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Vector4> texCoordsAndGlow;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Vector3> vertices;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Vector4> lineDirs;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<Color32> colors;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Vector3> velocities;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<Vector4> lifeTimes;

		[Token(Token = "0x4001503")]
		private const int boundsPadder = 1000000000;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int currentBoundsMinX;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int currentBoundsMinY;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int currentBoundsMinZ;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int currentBoundsMaxX;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int currentBoundsMaxY;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int currentBoundsMaxZ;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private CanvasRenderer canvasRenderer;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool useCanvas;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864508", Offset = "0x864508")]
		public Material Material;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Material previousMaterial;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864540", Offset = "0x864540")]
		public bool CloneMaterial;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864578", Offset = "0x864578")]
		public Camera Camera;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8645B0", Offset = "0x8645B0")]
		public bool UseWorldSpace;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8645E8", Offset = "0x8645E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8645E8", Offset = "0x8645E8")]
		public float AnimationSpeed;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x864644", Offset = "0x864644")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864644", Offset = "0x864644")]
		public float LineUVXScale;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86469C", Offset = "0x86469C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86469C", Offset = "0x86469C")]
		public float LineUVYScale;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8646F4", Offset = "0x8646F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8646F4", Offset = "0x8646F4")]
		public float GlowAnimationSpeed;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x864750", Offset = "0x864750")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864750", Offset = "0x864750")]
		public float GlowUVXScale;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8647A8", Offset = "0x8647A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8647A8", Offset = "0x8647A8")]
		public float GlowUVYScale;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x864800", Offset = "0x864800")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864800", Offset = "0x864800")]
		public float StartCapScale;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x864854", Offset = "0x864854")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864854", Offset = "0x864854")]
		public float EndCapScale;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8648A8", Offset = "0x8648A8")]
		public Color32 TintColor;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8648E0", Offset = "0x8648E0")]
		public Color32 GlowColor;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x864918", Offset = "0x864918")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864918", Offset = "0x864918")]
		public float GlowIntensityMultiplier;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86496C", Offset = "0x86496C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86496C", Offset = "0x86496C")]
		public float GlowWidthMultiplier;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8649C0", Offset = "0x8649C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8649C0", Offset = "0x8649C0")]
		public float GlowLengthMultiplier;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864A14", Offset = "0x864A14")]
		public float JitterMultiplier;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864A4C", Offset = "0x864A4C")]
		public float Turbulence;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864A84", Offset = "0x864A84")]
		public Vector3 BoundsScale;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864ABC", Offset = "0x864ABC")]
		public Texture2D LineTexture;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864AF4", Offset = "0x864AF4")]
		public Texture2D LineTextureStartCap;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864B2C", Offset = "0x864B2C")]
		public Texture2D LineTextureEndCap;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864B64", Offset = "0x864B64")]
		public Texture2D LineTextureRoundJoin;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864B9C", Offset = "0x864B9C")]
		public Texture2D GlowTexture;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864BD4", Offset = "0x864BD4")]
		public Texture2D GlowTextureStartCap;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864C0C", Offset = "0x864C0C")]
		public Texture2D GlowTextureEndCap;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864C44", Offset = "0x864C44")]
		public Texture2D GlowTextureRoundJoin;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864C7C", Offset = "0x864C7C")]
		public float ScreenRadiusMultiplier;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864CB4", Offset = "0x864CB4")]
		public string SortLayerName;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864D00", Offset = "0x864D00")]
		public int SortOrderInLayer;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864D4C", Offset = "0x864D4C")]
		public LineGroupList[] InitialLineGroups;

		[Token(Token = "0x17000182")]
		public Mesh Mesh
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0xB15DD4", Offset = "0xB15DD4", VA = "0xB15DD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xB15E38", Offset = "0xB15E38", VA = "0xB15E38")]
			set
			{
			}
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xB16190", Offset = "0xB16190", VA = "0xB16190")]
		static FastLineRenderer()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xB164A0", Offset = "0xB164A0", VA = "0xB164A0")]
		private void CreateNewSetOfLists()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xB16670", Offset = "0xB16670", VA = "0xB16670")]
		private void AssignLists()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xB169E4", Offset = "0xB169E4", VA = "0xB169E4")]
		private void UpdateCurrentLists()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xB16CA0", Offset = "0xB16CA0", VA = "0xB16CA0")]
		private void ResetCurrentBounds()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xB16CC4", Offset = "0xB16CC4", VA = "0xB16CC4")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xB16AAC", Offset = "0xB16AAC", VA = "0xB16AAC")]
		private void UpdateCurrentBounds()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xB17648", Offset = "0xB17648", VA = "0xB17648")]
		private void ApplyListsToMeshes()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xB17E2C", Offset = "0xB17E2C", VA = "0xB17E2C")]
		private void UpdateCanvasRendererMesh()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xB17EE4", Offset = "0xB17EE4", VA = "0xB17EE4")]
		private void CreateInitialLines()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xB18828", Offset = "0xB18828", VA = "0xB18828")]
		private void CheckInitialLines()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xB1885C", Offset = "0xB1885C", VA = "0xB1885C")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xB18924", Offset = "0xB18924", VA = "0xB18924")]
		private void UpdateMaterial()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xB18FE0", Offset = "0xB18FE0", VA = "0xB18FE0")]
		private void ResetVariables()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xB190BC", Offset = "0xB190BC", VA = "0xB190BC")]
		private void AssignMaterialIds()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xB19408", Offset = "0xB19408", VA = "0xB19408")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xB1955C", Offset = "0xB1955C", VA = "0xB1955C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xB19580", Offset = "0xB19580", VA = "0xB19580")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xB1962C", Offset = "0xB1962C", VA = "0xB1962C")]
		private void SetupMeshRenderer(MeshRenderer meshRenderer)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xB15FB8", Offset = "0xB15FB8", VA = "0xB15FB8")]
		private GameObject CreateMeshObject()
		{
			return null;
		}

		[Token(Token = "0x60014FF")]
		private T[] GetArray<T>(List<T> list, int index, int count)
		{
			return null;
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xB17D48", Offset = "0xB17D48", VA = "0xB17D48")]
		private void EnsureMeshCount(int index)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xB196C0", Offset = "0xB196C0", VA = "0xB196C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8727F8", Offset = "0x8727F8")]
		private IEnumerator SendToCacheAfterCoRoutine(TimeSpan elapsed)
		{
			return null;
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xB19768", Offset = "0xB19768", VA = "0xB19768")]
		private void UpdateBounds(ref Vector3 point1, ref Vector3 point2)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xB19844", Offset = "0xB19844", VA = "0xB19844")]
		private void AddLineInternal(FastLineRendererProperties props, ref Vector4 dirStart, ref Vector4 dirEnd, FastLineRendererLineSegmentType type)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xB19C28", Offset = "0xB19C28", VA = "0xB19C28")]
		private void AppendLineInternal(FastLineRendererProperties props)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xB19FAC", Offset = "0xB19FAC", VA = "0xB19FAC")]
		private bool AddStartCapLine(FastLineRendererProperties props)
		{
			return default(bool);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xB1A180", Offset = "0xB1A180", VA = "0xB1A180")]
		private bool AddEndCapLine(FastLineRendererProperties props)
		{
			return default(bool);
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xB1A340", Offset = "0xB1A340", VA = "0xB1A340")]
		public static void ResetAll()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xB1A458", Offset = "0xB1A458", VA = "0xB1A458")]
		public void SetCapacity(int capacity)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xB1A9C0", Offset = "0xB1A9C0", VA = "0xB1A9C0")]
		public bool CanAddLines(ref int lineCount)
		{
			return default(bool);
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xB18438", Offset = "0xB18438", VA = "0xB18438")]
		public void AddLine(FastLineRendererProperties props, bool startCap = false, bool endCap = false)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xB1AA60", Offset = "0xB1AA60", VA = "0xB1AA60")]
		public void AddLine(FastLineRendererProperties props, IList<Vector3> points, Action<FastLineRendererProperties> segmentCallback, bool startCap = false, bool endCap = false)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xB1AF34", Offset = "0xB1AF34", VA = "0xB1AF34")]
		public void AddLines(FastLineRendererProperties props, IList<Vector3> points, Action<FastLineRendererProperties> segmentCallback, bool startCap = false, bool endCap = false)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xB182F0", Offset = "0xB182F0", VA = "0xB182F0")]
		public void StartLine(FastLineRendererProperties props)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xB1864C", Offset = "0xB1864C", VA = "0xB1864C")]
		public bool AppendLine(FastLineRendererProperties props)
		{
			return default(bool);
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xB185A4", Offset = "0xB185A4", VA = "0xB185A4")]
		public bool EndLine(FastLineRendererProperties props)
		{
			return default(bool);
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xB1B150", Offset = "0xB1B150", VA = "0xB1B150")]
		public void AppendCurve(FastLineRendererProperties props, Vector3 ctr1, Vector3 ctr2, int numberOfSegments, bool startCap, bool endCap, float animationTime = 0f)
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xB1B3AC", Offset = "0xB1B3AC", VA = "0xB1B3AC")]
		public bool AppendSpline(FastLineRendererProperties props, IList<Vector3> points, int numberOfSegments, FastLineRendererSplineFlags flags, float animationTime = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xB1B5D4", Offset = "0xB1B5D4", VA = "0xB1B5D4")]
		public void AppendCircle(FastLineRendererProperties props, Vector3 center, float radius, int numberOfSegments, Vector3 axis, float animationTime = 0f)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xB1B614", Offset = "0xB1B614", VA = "0xB1B614")]
		public void AppendArc(FastLineRendererProperties props, Vector3 center, float radius, float startAngle, float endAngle, int numberOfSegments, Vector3 axis, bool close = false, float animationTime = 0f)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xB1BAD0", Offset = "0xB1BAD0", VA = "0xB1BAD0")]
		public void AppendGrid(FastLineRendererProperties props, Bounds bounds, float cellSize, bool fill, float animationTime = 0f)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xB1C180", Offset = "0xB1C180", VA = "0xB1C180")]
		public bool ChangePosition(int index, Vector3 newStart, Vector3 newEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xB18758", Offset = "0xB18758", VA = "0xB18758")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xB1C484", Offset = "0xB1C484", VA = "0xB1C484")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x87285C", Offset = "0x87285C")]
		public bool Apply(bool optimize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xB15F40", Offset = "0xB15F40", VA = "0xB15F40")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xB1C488", Offset = "0xB1C488", VA = "0xB1C488")]
		public void CopyTo(FastLineRenderer other)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xB1C56C", Offset = "0xB1C56C", VA = "0xB1C56C")]
		public void SendToCache()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xB1C638", Offset = "0xB1C638", VA = "0xB1C638")]
		public void SendToCacheAfter(TimeSpan elapsed)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xB1C664", Offset = "0xB1C664", VA = "0xB1C664")]
		public static FastLineRenderer CreateWithParent(GameObject parent, FastLineRenderer template)
		{
			return null;
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xB1CA8C", Offset = "0xB1CA8C", VA = "0xB1CA8C")]
		public FastLineRenderer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DF")]
	public struct RangeOfIntegers
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Minimum;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Maximum;
	}
	[Serializable]
	[Token(Token = "0x20002E0")]
	public struct RangeOfFloats
	{
		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Minimum;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Maximum;
	}
	[Serializable]
	[Token(Token = "0x20002E1")]
	public class ReorderableList_GameObject : ReorderableList<GameObject>
	{
		[Token(Token = "0x600151E")]
		[Address(RVA = "0x9F3464", Offset = "0x9F3464", VA = "0x9F3464")]
		public ReorderableList_GameObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E2")]
	public class ReorderableList_Transform : ReorderableList<Transform>
	{
		[Token(Token = "0x600151F")]
		[Address(RVA = "0x9F35F4", Offset = "0x9F35F4", VA = "0x9F35F4")]
		public ReorderableList_Transform()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E3")]
	public class ReorderableList_Vector3 : ReorderableList<Vector3>
	{
		[Token(Token = "0x6001520")]
		[Address(RVA = "0x9F3644", Offset = "0x9F3644", VA = "0x9F3644")]
		public ReorderableList_Vector3()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class ReorderableList_Rect : ReorderableList<Rect>
	{
		[Token(Token = "0x6001521")]
		[Address(RVA = "0x9F3504", Offset = "0x9F3504", VA = "0x9F3504")]
		public ReorderableList_Rect()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public class ReorderableList_RectOffset : ReorderableList<RectOffset>
	{
		[Token(Token = "0x6001522")]
		[Address(RVA = "0x9F3554", Offset = "0x9F3554", VA = "0x9F3554")]
		public ReorderableList_RectOffset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E6")]
	public class ReorderableList_Int : ReorderableList<int>
	{
		[Token(Token = "0x6001523")]
		[Address(RVA = "0x9F34B4", Offset = "0x9F34B4", VA = "0x9F34B4")]
		public ReorderableList_Int()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E7")]
	public class ReorderableList_Float : ReorderableList<float>
	{
		[Token(Token = "0x6001524")]
		[Address(RVA = "0x9F3414", Offset = "0x9F3414", VA = "0x9F3414")]
		public ReorderableList_Float()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E8")]
	public class ReorderableList_String : ReorderableList<string>
	{
		[Token(Token = "0x6001525")]
		[Address(RVA = "0x9F35A4", Offset = "0x9F35A4", VA = "0x9F35A4")]
		public ReorderableList_String()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E9")]
	public class ReorderableList<T> : ReorderableListBase
	{
		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> List;

		[Token(Token = "0x6001526")]
		public ReorderableList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EA")]
	public class ReorderableListBase
	{
		[Token(Token = "0x6001527")]
		[Address(RVA = "0x9F340C", Offset = "0x9F340C", VA = "0x9F340C")]
		public ReorderableListBase()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class ReorderableListAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x864D84", Offset = "0x864D84")]
		private string <Tooltip>k__BackingField;

		[Token(Token = "0x17000183")]
		public string Tooltip
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0x9F33FC", Offset = "0x9F33FC", VA = "0x9F33FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872894", Offset = "0x872894")]
			get
			{
				return null;
			}
			[Token(Token = "0x600152A")]
			[Address(RVA = "0x9F3404", Offset = "0x9F3404", VA = "0x9F3404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8728A4", Offset = "0x8728A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x9F33D0", Offset = "0x9F33D0", VA = "0x9F33D0")]
		public ReorderableListAttribute(string tooltip)
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class SingleLineAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x864D94", Offset = "0x864D94")]
		private string <Tooltip>k__BackingField;

		[Token(Token = "0x17000184")]
		public string Tooltip
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0x9F36C0", Offset = "0x9F36C0", VA = "0x9F36C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8728B4", Offset = "0x8728B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x9F36C8", Offset = "0x9F36C8", VA = "0x9F36C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8728C4", Offset = "0x8728C4")]
			private set
			{
			}
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x9F3694", Offset = "0x9F3694", VA = "0x9F3694")]
		public SingleLineAttribute(string tooltip)
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class SingleLineClampAttribute : SingleLineAttribute
	{
		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x864DA4", Offset = "0x864DA4")]
		private double <MinValue>k__BackingField;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x864DB4", Offset = "0x864DB4")]
		private double <MaxValue>k__BackingField;

		[Token(Token = "0x17000185")]
		public double MinValue
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x9F3710", Offset = "0x9F3710", VA = "0x9F3710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8728D4", Offset = "0x8728D4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x9F3718", Offset = "0x9F3718", VA = "0x9F3718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8728E4", Offset = "0x8728E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public double MaxValue
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x9F3720", Offset = "0x9F3720", VA = "0x9F3720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8728F4", Offset = "0x8728F4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x9F3728", Offset = "0x9F3728", VA = "0x9F3728")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872904", Offset = "0x872904")]
			private set
			{
			}
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x9F36D0", Offset = "0x9F36D0", VA = "0x9F36D0")]
		public SingleLineClampAttribute(string tooltip, double minValue, double maxValue)
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public static class PathGenerator
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool Is2D;

		[Token(Token = "0x4001537")]
		private const float curveMultiplier = 3f;

		[Token(Token = "0x4001538")]
		private const float splineMultiplier1 = -3f;

		[Token(Token = "0x4001539")]
		private const float splineMultiplier2 = 3f;

		[Token(Token = "0x400153A")]
		private const float splineMultiplier3 = 2f;

		[Token(Token = "0x400153B")]
		private const float splineDistanceClamp = 1f;

		[Token(Token = "0x400153C")]
		private const float splineEpsilon = 0.0001f;

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x9F1D6C", Offset = "0x9F1D6C", VA = "0x9F1D6C")]
		public static float SquareRoot(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x9F1DF4", Offset = "0x9F1DF4", VA = "0x9F1DF4")]
		private static float Distance2D(ref Vector3 point1, ref Vector3 point2)
		{
			return default(float);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x9F1E0C", Offset = "0x9F1E0C", VA = "0x9F1E0C")]
		private static float Distance3D(ref Vector3 point1, ref Vector3 point2)
		{
			return default(float);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x9F1E3C", Offset = "0x9F1E3C", VA = "0x9F1E3C")]
		private static void GetCurvePoint2D(ref Vector3 start, ref Vector3 end, ref Vector3 ctr1, ref Vector3 ctr2, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x9F1F14", Offset = "0x9F1F14", VA = "0x9F1F14")]
		private static void GetCurvePoint3D(ref Vector3 start, ref Vector3 end, ref Vector3 ctr1, ref Vector3 ctr2, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x9F2030", Offset = "0x9F2030", VA = "0x9F2030")]
		private static void CalculateNonuniformCatmullRom(float p1, float p2, float p3, float p4, float distance1, float distance2, float distance3, out Vector4 point)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x9F20EC", Offset = "0x9F20EC", VA = "0x9F20EC")]
		private static float CalculatePolynomial(ref Vector4 point, float t)
		{
			return default(float);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x9F2118", Offset = "0x9F2118", VA = "0x9F2118")]
		private static void ClampSplineDistances(ref float distance1, ref float distance2, ref float distance3)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x9F2164", Offset = "0x9F2164", VA = "0x9F2164")]
		private static void GetSplinePoint2D(ref Vector3 point1, ref Vector3 point2, ref Vector3 point3, ref Vector3 point4, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x9F22F8", Offset = "0x9F22F8", VA = "0x9F22F8")]
		private static void GetSplinePoint3D(ref Vector3 point1, ref Vector3 point2, ref Vector3 point3, ref Vector3 point4, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x9F2520", Offset = "0x9F2520", VA = "0x9F2520")]
		public static float CreateCurve(ICollection<Vector3> path, Vector3 start, Vector3 end, Vector3 ctr1, Vector3 ctr2, int numberOfSegments, float startT)
		{
			return default(float);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x9F27A4", Offset = "0x9F27A4", VA = "0x9F27A4")]
		public static bool CreateSpline(ICollection<Vector3> path, IList<Vector3> points, int numberOfSegments, bool closePath)
		{
			return default(bool);
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x9F2D70", Offset = "0x9F2D70", VA = "0x9F2D70")]
		public static bool CreateSplineWithSegmentDistance(ICollection<Vector3> path, IList<Vector3> points, float distancePerSegment, bool closePath)
		{
			return default(bool);
		}
	}
}
namespace AraSamples
{
	[Serializable]
	[Token(Token = "0x20002EF")]
	public class AxleInfo
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WheelCollider leftWheel;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WheelCollider rightWheel;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool motor;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool steering;

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xBB4904", Offset = "0xBB4904", VA = "0xBB4904")]
		public AxleInfo()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class CarController : MonoBehaviour
	{
		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AxleInfo> axleInfos;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxMotorTorque;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxSteeringAngle;

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xBB490C", Offset = "0xBB490C", VA = "0xBB490C")]
		public void ApplyLocalPositionToVisuals(WheelCollider collider)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xBB49D8", Offset = "0xBB49D8", VA = "0xBB49D8")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xBB4BC8", Offset = "0xBB4BC8", VA = "0xBB4BC8")]
		public CarController()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class ObjectDragger : MonoBehaviour
	{
		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 screenPoint;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 offset;

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xBB4BD0", Offset = "0xBB4BD0", VA = "0xBB4BD0")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xBB4D54", Offset = "0xBB4D54", VA = "0xBB4D54")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xBB4E78", Offset = "0xBB4E78", VA = "0xBB4E78")]
		public ObjectDragger()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class Rotation : MonoBehaviour
	{
		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 axis;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xBB4E80", Offset = "0xBB4E80", VA = "0xBB4E80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xBB4EE8", Offset = "0xBB4EE8", VA = "0xBB4EE8")]
		public Rotation()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A62C", Offset = "0x85A62C")]
	public class WallPlayerController : MonoBehaviour
	{
		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int boardSize;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxTrailLenght;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] colors;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int coordX;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int coordZ;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AraTrail trail;

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xBB4EF8", Offset = "0xBB4EF8", VA = "0xBB4EF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xBB4F50", Offset = "0xBB4F50", VA = "0xBB4F50")]
		private void Update()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xBB5394", Offset = "0xBB5394", VA = "0xBB5394")]
		public WallPlayerController()
		{
		}
	}
}
namespace Ara
{
	[Token(Token = "0x20002F4")]
	[ExecuteInEditMode]
	public class AraTrail : MonoBehaviour
	{
		[Token(Token = "0x20006BD")]
		public enum TrailAlignment
		{
			[Token(Token = "0x4002E78")]
			View,
			[Token(Token = "0x4002E79")]
			Velocity,
			[Token(Token = "0x4002E7A")]
			Local
		}

		[Token(Token = "0x20006BE")]
		public enum TrailSorting
		{
			[Token(Token = "0x4002E7C")]
			OlderOnTop,
			[Token(Token = "0x4002E7D")]
			NewerOnTop
		}

		[Token(Token = "0x20006BF")]
		public enum Timescale
		{
			[Token(Token = "0x4002E7F")]
			Normal,
			[Token(Token = "0x4002E80")]
			Unscaled
		}

		[Token(Token = "0x20006C0")]
		public enum TextureMode
		{
			[Token(Token = "0x4002E82")]
			Stretch,
			[Token(Token = "0x4002E83")]
			Tile
		}

		[Token(Token = "0x20006C1")]
		public struct CurveFrame
		{
			[Token(Token = "0x4002E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4002E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 normal;

			[Token(Token = "0x4002E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 bitangent;

			[Token(Token = "0x4002E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 tangent;

			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0x766CCC", Offset = "0x766CCC", VA = "0x766CCC")]
			public CurveFrame(Vector3 position, Vector3 normal, Vector3 bitangent, Vector3 tangent)
			{
			}

			[Token(Token = "0x6002D2B")]
			[Address(RVA = "0x766CFC", Offset = "0x766CFC", VA = "0x766CFC")]
			public Vector3 Transport(Vector3 newTangent, Vector3 newPosition)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006C2")]
		public struct Point
		{
			[Token(Token = "0x4002E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4002E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 velocity;

			[Token(Token = "0x4002E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 tangent;

			[Token(Token = "0x4002E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 normal;

			[Token(Token = "0x4002E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color color;

			[Token(Token = "0x4002E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float thickness;

			[Token(Token = "0x4002E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float life;

			[Token(Token = "0x4002E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool discontinuous;

			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0x766DD8", Offset = "0x766DD8", VA = "0x766DD8")]
			public Point(Vector3 position, Vector3 velocity, Vector3 tangent, Vector3 normal, Color color, float thickness, float lifetime)
			{
			}

			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0xBB2D44", Offset = "0xBB2D44", VA = "0xBB2D44")]
			private static float CatmullRom(float p0, float p1, float p2, float p3, float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002D2E")]
			[Address(RVA = "0xBB2DB0", Offset = "0xBB2DB0", VA = "0xBB2DB0")]
			private static Color CatmullRomColor(Color p0, Color p1, Color p2, Color p3, float t)
			{
				return default(Color);
			}

			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0xBB30E0", Offset = "0xBB30E0", VA = "0xBB30E0")]
			private static Vector3 CatmullRom3D(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002D30")]
			[Address(RVA = "0xBB3378", Offset = "0xBB3378", VA = "0xBB3378")]
			public static Point Interpolate(Point a, Point b, Point c, Point d, float t)
			{
				return default(Point);
			}

			[Token(Token = "0x6002D31")]
			[Address(RVA = "0xBB3668", Offset = "0xBB3668", VA = "0xBB3668")]
			public static Point operator +(Point p1, Point p2)
			{
				return default(Point);
			}

			[Token(Token = "0x6002D32")]
			[Address(RVA = "0xBB3844", Offset = "0xBB3844", VA = "0xBB3844")]
			public static Point operator -(Point p1, Point p2)
			{
				return default(Point);
			}
		}

		[Token(Token = "0x400154F")]
		public const float epsilon = 1E-05f;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x864DC4", Offset = "0x864DC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864DC4", Offset = "0x864DC4")]
		public TrailSection section;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864E24", Offset = "0x864E24")]
		public Space space;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864E5C", Offset = "0x864E5C")]
		public Timescale timescale;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864E94", Offset = "0x864E94")]
		public TrailAlignment alignment;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864ECC", Offset = "0x864ECC")]
		public TrailSorting sorting;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864F04", Offset = "0x864F04")]
		public float thickness;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864F3C", Offset = "0x864F3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x864F3C", Offset = "0x864F3C")]
		public int smoothness;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864F90", Offset = "0x864F90")]
		public bool highQualityCorners;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x864FC8", Offset = "0x864FC8")]
		public int cornerRoundness;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x864FE0", Offset = "0x864FE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x864FE0", Offset = "0x864FE0")]
		public AnimationCurve thicknessOverLenght;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865040", Offset = "0x865040")]
		public Gradient colorOverLenght;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x865078", Offset = "0x865078")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865078", Offset = "0x865078")]
		public AnimationCurve thicknessOverTime;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8650D8", Offset = "0x8650D8")]
		public Gradient colorOverTime;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x865110", Offset = "0x865110")]
		public bool emit;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865148", Offset = "0x865148")]
		public float initialThickness;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865180", Offset = "0x865180")]
		public Color initialColor;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8651B8", Offset = "0x8651B8")]
		public Vector3 initialVelocity;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8651F0", Offset = "0x8651F0")]
		public float timeInterval;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865228", Offset = "0x865228")]
		public float minDistance;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865260", Offset = "0x865260")]
		public float time;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x865298", Offset = "0x865298")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865298", Offset = "0x865298")]
		public bool enablePhysics;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8652F8", Offset = "0x8652F8")]
		public float warmup;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865330", Offset = "0x865330")]
		public Vector3 gravity;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865368", Offset = "0x865368")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865368", Offset = "0x865368")]
		public float inertia;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8653BC", Offset = "0x8653BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8653BC", Offset = "0x8653BC")]
		public float velocitySmoothing;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865410", Offset = "0x865410")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865410", Offset = "0x865410")]
		public float damping;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x865464", Offset = "0x865464")]
		public Material[] materials;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ShadowCastingMode castShadows;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool receiveShadows;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool useLightProbes;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86549C", Offset = "0x86549C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86549C", Offset = "0x86549C")]
		public TextureMode textureMode;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8654FC", Offset = "0x8654FC")]
		public float uvFactor;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865534", Offset = "0x865534")]
		public float uvWidthFactor;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86556C", Offset = "0x86556C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86556C", Offset = "0x86556C")]
		public float tileAnchor;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public List<Point> points;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<Point> renderablePoints;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<int> discontinuities;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Mesh mesh_;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 velocity;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 prevPosition;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float accumTime;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<Vector3> vertices;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<Vector3> normals;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<Vector4> tangents;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Vector2> uvs;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<Color> vertColors;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<int> tris;

		[Token(Token = "0x17000187")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0xA5D0E0", Offset = "0xA5D0E0", VA = "0xA5D0E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000188")]
		private float DeltaTime
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0xA5D0EC", Offset = "0xA5D0EC", VA = "0xA5D0EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000189")]
		private float FixedDeltaTime
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0xA5D108", Offset = "0xA5D108", VA = "0xA5D108")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018A")]
		public Mesh mesh
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0xA5D124", Offset = "0xA5D124", VA = "0xA5D124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000054")]
		public event Action onUpdatePoints
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0xA5CF98", Offset = "0xA5CF98", VA = "0xA5CF98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872914", Offset = "0x872914")]
			add
			{
			}
			[Token(Token = "0x600154D")]
			[Address(RVA = "0xA5D03C", Offset = "0xA5D03C", VA = "0xA5D03C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872924", Offset = "0x872924")]
			remove
			{
			}
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xA5D12C", Offset = "0xA5D12C", VA = "0xA5D12C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xA5D1C4", Offset = "0xA5D1C4", VA = "0xA5D1C4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xA5D2C4", Offset = "0xA5D2C4", VA = "0xA5D2C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xA5D42C", Offset = "0xA5D42C", VA = "0xA5D42C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xA5D520", Offset = "0xA5D520", VA = "0xA5D520")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xA5D578", Offset = "0xA5D578", VA = "0xA5D578")]
		private void UpdateVelocity()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xA5D6EC", Offset = "0xA5D6EC", VA = "0xA5D6EC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xA5D75C", Offset = "0xA5D75C", VA = "0xA5D75C")]
		private void EmissionStep(float time)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xA5D1C8", Offset = "0xA5D1C8", VA = "0xA5D1C8")]
		private void Warmup()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xA5DEA0", Offset = "0xA5DEA0", VA = "0xA5DEA0")]
		private void PhysicsStep(float timestep)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xA5E0FC", Offset = "0xA5E0FC", VA = "0xA5E0FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xA5DCC8", Offset = "0xA5DCC8", VA = "0xA5DCC8")]
		public void EmitPoint(Vector3 position)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xA5D8A8", Offset = "0xA5D8A8", VA = "0xA5D8A8")]
		private void SnapLastPointToTransform()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xA5DA10", Offset = "0xA5DA10", VA = "0xA5DA10")]
		private void UpdatePointsLifecycle()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xA5E148", Offset = "0xA5E148", VA = "0xA5E148")]
		private void ClearMeshData()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xA5E220", Offset = "0xA5E220", VA = "0xA5E220")]
		private void CommitMeshData()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xA5E2C0", Offset = "0xA5E2C0", VA = "0xA5E2C0")]
		private void RenderMesh(Camera cam)
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xA5E4F4", Offset = "0xA5E4F4", VA = "0xA5E4F4")]
		public float GetLenght(List<Point> input)
		{
			return default(float);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xA5E634", Offset = "0xA5E634", VA = "0xA5E634")]
		private List<Point> GetRenderablePoints(int start, int end)
		{
			return null;
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xA5ED90", Offset = "0xA5ED90", VA = "0xA5ED90")]
		private CurveFrame InitializeCurveFrame(Vector3 point, Vector3 nextPoint)
		{
			return default(CurveFrame);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xA5F00C", Offset = "0xA5F00C", VA = "0xA5F00C")]
		private void UpdateTrailMesh(Camera cam)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xA5F2EC", Offset = "0xA5F2EC", VA = "0xA5F2EC")]
		private void UpdateSegmentMesh(int start, int end, Vector3 localCamPosition)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xA60B08", Offset = "0xA60B08", VA = "0xA60B08")]
		public AraTrail()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A6A0", Offset = "0x85A6A0")]
	public class ColorFromSpeed : MonoBehaviour
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8655E0", Offset = "0x8655E0")]
		public Gradient colorFromSpeed;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865618", Offset = "0x865618")]
		public float minSpeed;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865650", Offset = "0x865650")]
		public float maxSpeed;

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xBB3A20", Offset = "0xBB3A20", VA = "0xBB3A20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xBB3AC4", Offset = "0xBB3AC4", VA = "0xBB3AC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xBB3B50", Offset = "0xBB3B50", VA = "0xBB3B50")]
		private void SetColorFromSpeed()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xBB3CF0", Offset = "0xBB3CF0", VA = "0xBB3CF0")]
		public ColorFromSpeed()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A704", Offset = "0x85A704")]
	public class ElectricalArc : MonoBehaviour
	{
		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform source;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int points;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float burstInterval;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float burstRandom;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speedRandom;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float positionRandom;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float accum;

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xBB3D60", Offset = "0xBB3D60", VA = "0xBB3D60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xBB3DC4", Offset = "0xBB3DC4", VA = "0xBB3DC4")]
		private void Update()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xBB3E2C", Offset = "0xBB3E2C", VA = "0xBB3E2C")]
		private void ChangeArc()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xBB4170", Offset = "0xBB4170", VA = "0xBB4170")]
		public ElectricalArc()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A768", Offset = "0x85A768")]
	public class TireTrack : MonoBehaviour
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDist;

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xBB418C", Offset = "0xBB418C", VA = "0xBB418C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xBB4230", Offset = "0xBB4230", VA = "0xBB4230")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xBB42BC", Offset = "0xBB42BC", VA = "0xBB42BC")]
		private void ProjectToGround()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xBB45C4", Offset = "0xBB45C4", VA = "0xBB45C4")]
		public TireTrack()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85A7CC", Offset = "0x85A7CC")]
	public class TrailSection : ScriptableObject
	{
		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<Vector2> vertices;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int snapX;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int snapY;

		[Token(Token = "0x1700018B")]
		public int Segments
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0xBB45D8", Offset = "0xBB45D8", VA = "0xBB45D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xBB462C", Offset = "0xBB462C", VA = "0xBB462C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xBB46B0", Offset = "0xBB46B0", VA = "0xBB46B0")]
		public void CirclePreset(int segments)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xBB4840", Offset = "0xBB4840", VA = "0xBB4840")]
		public static int SnapTo(float val, int snapInterval, int threshold)
		{
			return default(int);
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xBB48FC", Offset = "0xBB48FC", VA = "0xBB48FC")]
		public TrailSection()
		{
		}
	}
}
namespace ToJ
{
	[Token(Token = "0x20002F9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A808", Offset = "0x85A808")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A808", Offset = "0x85A808")]
	public class Mask : MonoBehaviour
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _isMaskingEnabled;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _clampAlphaHorizontally;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _clampAlphaVertically;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _clampingBorder;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _useMaskAlphaChannel;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture mainTex;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 mainTexTiling;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 mainTexOffset;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool fullMaskRefresh;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Matrix4x4 oldWorldToMask;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Shader defaultMaskedSpriteShader;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Shader defaultMaskedUnlitShader;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material spritesAlphaMaskWorldCoords;

		[Token(Token = "0x40015A1")]
		private const string SPRITES_RESOURCE_ADDRESS = "Materials/Sprites-Alpha-Mask-WorldCoords";

		[Token(Token = "0x40015A2")]
		public const string MASKED_SPRITE_SHADER = "Alpha Masked/Sprites Alpha Masked - World Coords";

		[Token(Token = "0x40015A3")]
		public const string MASKED_UNLIT_SHADER = "Alpha Masked/Unlit Alpha Masked - World Coords";

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material maskMaterial;

		[Token(Token = "0x40015A5")]
		private const string MASK_RESOURCE_ADDRESS = "Materials/Mask-Material";

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MaterialPropertyBlock maskeePropertyBlock;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MaterialPropertyBlock maskPropertyBlock;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Material> createdMatsStorage;

		[Token(Token = "0x1700018C")]
		public bool IsMaskingEnabled
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0xAE57E8", Offset = "0xAE57E8", VA = "0xAE57E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600157B")]
			[Address(RVA = "0xAE57F0", Offset = "0xAE57F0", VA = "0xAE57F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public bool ClampAlphaHorizontally
		{
			[Token(Token = "0x600157C")]
			[Address(RVA = "0xAE5824", Offset = "0xAE5824", VA = "0xAE5824")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600157D")]
			[Address(RVA = "0xAE582C", Offset = "0xAE582C", VA = "0xAE582C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public bool ClampAlphaVertically
		{
			[Token(Token = "0x600157E")]
			[Address(RVA = "0xAE5854", Offset = "0xAE5854", VA = "0xAE5854")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600157F")]
			[Address(RVA = "0xAE585C", Offset = "0xAE585C", VA = "0xAE585C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public float ClampingBorder
		{
			[Token(Token = "0x6001580")]
			[Address(RVA = "0xAE5884", Offset = "0xAE5884", VA = "0xAE5884")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001581")]
			[Address(RVA = "0xAE588C", Offset = "0xAE588C", VA = "0xAE588C")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public bool UseMaskAlphaChannel
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0xAE58A8", Offset = "0xAE58A8", VA = "0xAE58A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001583")]
			[Address(RVA = "0xAE58B0", Offset = "0xAE58B0", VA = "0xAE58B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public Texture MainTex
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0xAE58D8", Offset = "0xAE58D8", VA = "0xAE58D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001585")]
			[Address(RVA = "0xAE58E0", Offset = "0xAE58E0", VA = "0xAE58E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public Vector2 MainTexTiling
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0xAE5970", Offset = "0xAE5970", VA = "0xAE5970")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001587")]
			[Address(RVA = "0xAE5978", Offset = "0xAE5978", VA = "0xAE5978")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public Vector2 MainTexOffset
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0xAE5A1C", Offset = "0xAE5A1C", VA = "0xAE5A1C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001589")]
			[Address(RVA = "0xAE5A24", Offset = "0xAE5A24", VA = "0xAE5A24")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		private Matrix4x4 OldWorldToMask
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0xAE5AC8", Offset = "0xAE5AC8", VA = "0xAE5AC8")]
			get
			{
				return default(Matrix4x4);
			}
			[Token(Token = "0x600158C")]
			[Address(RVA = "0xAE5AE4", Offset = "0xAE5AE4", VA = "0xAE5AE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		private Shader DefaultMaskedSpriteShader
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0xAE5B00", Offset = "0xAE5B00", VA = "0xAE5B00")]
			get
			{
				return null;
			}
			[Token(Token = "0x600158E")]
			[Address(RVA = "0xAE5B98", Offset = "0xAE5B98", VA = "0xAE5B98")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		private Shader DefaultMaskedUnlitShader
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xAE5BA0", Offset = "0xAE5BA0", VA = "0xAE5BA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xAE5C38", Offset = "0xAE5C38", VA = "0xAE5C38")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		private MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0xAE5C40", Offset = "0xAE5C40", VA = "0xAE5C40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		public Material SpritesAlphaMaskWorldCoords
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0xAE5CD8", Offset = "0xAE5CD8", VA = "0xAE5CD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001593")]
			[Address(RVA = "0xAE5DE0", Offset = "0xAE5DE0", VA = "0xAE5DE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public Material MaskMaterial
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0xAE5DE8", Offset = "0xAE5DE8", VA = "0xAE5DE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001595")]
			[Address(RVA = "0xAE5EF0", Offset = "0xAE5EF0", VA = "0xAE5EF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public MaterialPropertyBlock MaskeePropertyBlock
		{
			[Token(Token = "0x6001596")]
			[Address(RVA = "0xAE5EF8", Offset = "0xAE5EF8", VA = "0xAE5EF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001597")]
			[Address(RVA = "0xAE5F64", Offset = "0xAE5F64", VA = "0xAE5F64")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public MaterialPropertyBlock MaskPropertyBlock
		{
			[Token(Token = "0x6001598")]
			[Address(RVA = "0xAE5F6C", Offset = "0xAE5F6C", VA = "0xAE5F6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001599")]
			[Address(RVA = "0xAE5FD8", Offset = "0xAE5FD8", VA = "0xAE5FD8")]
			set
			{
			}
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xAE5818", Offset = "0xAE5818", VA = "0xAE5818")]
		public void ScheduleFullMaskRefresh()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xAE5FE0", Offset = "0xAE5FE0", VA = "0xAE5FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xAE602C", Offset = "0xAE602C", VA = "0xAE602C")]
		public bool IsMaskeeMaterial(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xAE60BC", Offset = "0xAE60BC", VA = "0xAE60BC")]
		private void ClearShaders()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xAE60C4", Offset = "0xAE60C4", VA = "0xAE60C4")]
		private void InitializeMeshRenderer(MeshRenderer target)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xAE6104", Offset = "0xAE6104", VA = "0xAE6104")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xAE6D78", Offset = "0xAE6D78", VA = "0xAE6D78")]
		private void UpdateInstanciatedMaterials(List<Material> differentMaterials, Matrix4x4 worldToMask)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xAE720C", Offset = "0xAE720C", VA = "0xAE720C")]
		private void UpdateUIMaterials(List<Graphic> differentGraphics, Matrix4x4 worldToMask, Vector4 tilingAndOffset)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xAE78AC", Offset = "0xAE78AC", VA = "0xAE78AC")]
		private void UpdateSpriteMaterials(List<SpriteRenderer> differentSpriteRenderers, Matrix4x4 worldToMask, Vector4 tilingAndOffset)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xAE6294", Offset = "0xAE6294", VA = "0xAE6294")]
		public void UpdateMasking()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xAE7040", Offset = "0xAE7040", VA = "0xAE7040")]
		private void ValidateShader(Material material)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xAE6128", Offset = "0xAE6128", VA = "0xAE6128")]
		private void RefreshMaskPropertyBlock()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xAE7CA4", Offset = "0xAE7CA4", VA = "0xAE7CA4")]
		private void GetMaskQuad(Mesh mesh, Rect r)
		{
		}

		[Token(Token = "0x60015A6")]
		private bool BasicArrayCompare<T>(T[] one, T[] two)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xAE8190", Offset = "0xAE8190", VA = "0xAE8190")]
		private List<Material> CollectDifferentMaterials()
		{
			return null;
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xAE8598", Offset = "0xAE8598", VA = "0xAE8598")]
		public void ChangeMaskTexture(Texture texture)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xAE859C", Offset = "0xAE859C", VA = "0xAE859C")]
		public void SetMaskRendererActive(bool value)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xAE85CC", Offset = "0xAE85CC", VA = "0xAE85CC")]
		public void DuplicateMaskedMaterials()
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xAE90B0", Offset = "0xAE90B0", VA = "0xAE90B0")]
		public Mask()
		{
		}
	}
}
namespace UnityStandardAssets.Effects
{
	[Token(Token = "0x20002FA")]
	public class ExplosionPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DAC8", Offset = "0x85DAC8")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExplosionPhysicsForce <>4__this;

			[Token(Token = "0x17000488")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D36")]
				[Address(RVA = "0xB56AAC", Offset = "0xB56AAC", VA = "0xB56AAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000489")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D38")]
				[Address(RVA = "0xB56B14", Offset = "0xB56B14", VA = "0xB56B14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D33")]
			[Address(RVA = "0xB56768", Offset = "0xB56768", VA = "0xB56768")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002D34")]
			[Address(RVA = "0xB567A4", Offset = "0xB567A4", VA = "0xB567A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D35")]
			[Address(RVA = "0xB567A8", Offset = "0xB567A8", VA = "0xB567A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D37")]
			[Address(RVA = "0xB56AB4", Offset = "0xB56AB4", VA = "0xB56AB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float explosionForce;

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xB566F8", Offset = "0xB566F8", VA = "0xB566F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872934", Offset = "0x872934")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xB56794", Offset = "0xB56794", VA = "0xB56794")]
		public ExplosionPhysicsForce()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class ParticleSystemMultiplier : MonoBehaviour
	{
		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplier;

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xB56B1C", Offset = "0xB56B1C", VA = "0xB56B1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xB56C7C", Offset = "0xB56C7C", VA = "0xB56C7C")]
		public ParticleSystemMultiplier()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x20002FC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A8A0", Offset = "0x85A8A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A8A0", Offset = "0x85A8A0")]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x20006C4")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x4002E94")]
			Ghosting,
			[Token(Token = "0x4002E95")]
			Anamorphic,
			[Token(Token = "0x4002E96")]
			Combined
		}

		[Token(Token = "0x20006C5")]
		public enum TweakMode
		{
			[Token(Token = "0x4002E98")]
			Basic,
			[Token(Token = "0x4002E99")]
			Complex
		}

		[Token(Token = "0x20006C6")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x4002E9B")]
			Auto,
			[Token(Token = "0x4002E9C")]
			On,
			[Token(Token = "0x4002E9D")]
			Off
		}

		[Token(Token = "0x20006C7")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x4002E9F")]
			Screen,
			[Token(Token = "0x4002EA0")]
			Add
		}

		[Token(Token = "0x20006C8")]
		public enum BloomQuality
		{
			[Token(Token = "0x4002EA2")]
			Cheap,
			[Token(Token = "0x4002EA3")]
			High
		}

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TweakMode tweakMode;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HDRBloomMode hdr;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool doHdr;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sepBlurSpread;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BloomQuality quality;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float bloomIntensity;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float bloomThreshold;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color bloomThresholdColor;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int bloomBlurIterations;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float flareRotation;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float hollyStretchWidth;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensflareIntensity;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float lensflareThreshold;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float lensFlareSaturation;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color flareColorA;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color flareColorB;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color flareColorC;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color flareColorD;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Shader lensFlareShader;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material lensFlareMaterial;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader screenBlendShader;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material screenBlend;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xB56C8C", Offset = "0xB56C8C", VA = "0xB56C8C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xB57264", Offset = "0xB57264", VA = "0xB57264")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xB58620", Offset = "0xB58620", VA = "0xB58620")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xB58420", Offset = "0xB58420", VA = "0xB58420")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xB58128", Offset = "0xB58128", VA = "0xB58128")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xB58044", Offset = "0xB58044", VA = "0xB58044")]
		private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xB58214", Offset = "0xB58214", VA = "0xB58214")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xB586E8", Offset = "0xB586E8", VA = "0xB586E8")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A938", Offset = "0x85A938")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xB56E28", Offset = "0xB56E28", VA = "0xB56E28")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xB58870", Offset = "0xB58870", VA = "0xB58870")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xB58A60", Offset = "0xB58A60", VA = "0xB58A60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xB58A6C", Offset = "0xB58A6C", VA = "0xB58A6C")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xB58A74", Offset = "0xB58A74", VA = "0xB58A74", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xB58B24", Offset = "0xB58B24", VA = "0xB58B24")]
		protected void Start()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xB56D14", Offset = "0xB56D14", VA = "0xB56D14")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xB58B30", Offset = "0xB58B30", VA = "0xB58B30")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xB58B8C", Offset = "0xB58B8C", VA = "0xB58B8C")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xB571BC", Offset = "0xB571BC", VA = "0xB571BC")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xB58B94", Offset = "0xB58B94", VA = "0xB58B94")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xB58844", Offset = "0xB58844", VA = "0xB58844")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xB58D94", Offset = "0xB58D94", VA = "0xB58D94")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xB58830", Offset = "0xB58830", VA = "0xB58830")]
		public PostEffectsBase()
		{
		}
	}
}
namespace UnityStandardAssets.CinematicEffects
{
	[Token(Token = "0x20002FE")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85A9AC", Offset = "0x85A9AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85A9AC", Offset = "0x85A9AC")]
	[ImageEffectAllowedInSceneView]
	public class Bloom : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006C9")]
		public struct Settings
		{
			[Token(Token = "0x4002EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C8D0", Offset = "0x86C8D0")]
			public float threshold;

			[Token(Token = "0x4002EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86C91C", Offset = "0x86C91C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C91C", Offset = "0x86C91C")]
			public float softKnee;

			[Token(Token = "0x4002EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86C980", Offset = "0x86C980")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C980", Offset = "0x86C980")]
			public float radius;

			[Token(Token = "0x4002EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C9E4", Offset = "0x86C9E4")]
			public float intensity;

			[Token(Token = "0x4002EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86CA30", Offset = "0x86CA30")]
			public bool highQuality;

			[Token(Token = "0x4002EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86CA7C", Offset = "0x86CA7C")]
			public bool antiFlicker;

			[Token(Token = "0x4002EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86CAC8", Offset = "0x86CAC8")]
			public Texture dirtTexture;

			[Token(Token = "0x4002EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MinAttribute", RVA = "0x86CB00", Offset = "0x86CB00")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86CB00", Offset = "0x86CB00")]
			public float dirtIntensity;

			[Token(Token = "0x1700048A")]
			public float thresholdGamma
			{
				[Token(Token = "0x6002D3A")]
				[Address(RVA = "0x76670C", Offset = "0x76670C", VA = "0x76670C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002D39")]
				[Address(RVA = "0x766704", Offset = "0x766704", VA = "0x766704")]
				set
				{
				}
			}

			[Token(Token = "0x1700048B")]
			public float thresholdLinear
			{
				[Token(Token = "0x6002D3C")]
				[Address(RVA = "0x76671C", Offset = "0x76671C", VA = "0x76671C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002D3B")]
				[Address(RVA = "0x766714", Offset = "0x766714", VA = "0x766714")]
				set
				{
				}
			}

			[Token(Token = "0x1700048C")]
			public static Settings defaultSettings
			{
				[Token(Token = "0x6002D3D")]
				[Address(RVA = "0xB56200", Offset = "0xB56200", VA = "0xB56200")]
				get
				{
					return default(Settings);
				}
			}
		}

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Settings settings;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private Shader m_Shader;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_Material;

		[Token(Token = "0x40015CF")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture[] m_blurBuffer1;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture[] m_blurBuffer2;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_Threshold;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_Curve;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_PrefilterOffs;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_SampleScale;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Intensity;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_DirtTex;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_DirtIntensity;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_BaseTex;

		[Token(Token = "0x1700019C")]
		public Shader shader
		{
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xB55260", Offset = "0xB55260", VA = "0xB55260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public Material material
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xB552F8", Offset = "0xB552F8", VA = "0xB552F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xB55454", Offset = "0xB55454", VA = "0xB55454")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xB55554", Offset = "0xB55554", VA = "0xB55554")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xB5585C", Offset = "0xB5585C", VA = "0xB5585C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xB55908", Offset = "0xB55908", VA = "0xB55908")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xB5616C", Offset = "0xB5616C", VA = "0xB5616C")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public static class ImageEffectHelper
	{
		[Token(Token = "0x1700019E")]
		public static bool supportsDX11
		{
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xB56324", Offset = "0xB56324", VA = "0xB56324")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xB555A0", Offset = "0xB555A0", VA = "0xB555A0")]
		public static bool IsSupported(Shader s, bool needDepth, bool needHdr, MonoBehaviour effect)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xB55388", Offset = "0xB55388", VA = "0xB55388")]
		public static Material CheckShaderAndCreateMaterial(Shader s)
		{
			return null;
		}
	}
	[Token(Token = "0x2000300")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xB56354", Offset = "0xB56354", VA = "0xB56354")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class RenderTextureUtility
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<RenderTexture> m_TemporaryRTs;

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xB56388", Offset = "0xB56388", VA = "0xB56388")]
		public RenderTexture GetTemporaryRenderTexture(int width, int height, int depthBuffer = 0, RenderTextureFormat format = RenderTextureFormat.ARGBHalf, FilterMode filterMode = FilterMode.Bilinear)
		{
			return null;
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xB5646C", Offset = "0xB5646C", VA = "0xB5646C")]
		public void ReleaseTemporaryRenderTexture(RenderTexture rt)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xB565E0", Offset = "0xB565E0", VA = "0xB565E0")]
		public void ReleaseAllTemporaryRenderTextures()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xB56688", Offset = "0xB56688", VA = "0xB56688")]
		public RenderTextureUtility()
		{
		}
	}
}
namespace BeautifulDissolves
{
	[Token(Token = "0x2000302")]
	public class Dissolve : MonoBehaviour
	{
		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected DissolveSettings m_DissolveSettings;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnDissolveStart;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnDissolveFinish;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Material[] m_Materials;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IEnumerator m_CurrentCoroutine;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool m_Dissolving;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_CanDissolve;

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xBB5BE4", Offset = "0xBB5BE4", VA = "0xBB5BE4", Slot = "4")]
		protected virtual Material[] GetMaterials()
		{
			return null;
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xBB5C94", Offset = "0xBB5C94", VA = "0xBB5C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xBB5CC0", Offset = "0xBB5CC0", VA = "0xBB5CC0")]
		public void TriggerDissolve()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xBB5CC8", Offset = "0xBB5CC8", VA = "0xBB5CC8")]
		public void TriggerDissolve(DissolveSettings settings)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xBB5F18", Offset = "0xBB5F18", VA = "0xBB5F18")]
		public void TriggerReverseDissolve()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xBB5DE0", Offset = "0xBB5DE0", VA = "0xBB5DE0")]
		public void TriggerDissolve(bool atomic, bool disableAfterDissolve, AnimationCurve dissolveCurve, float dissolveStartPercent, float time, float speed)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xBB5F48", Offset = "0xBB5F48", VA = "0xBB5F48")]
		private void InvokeDissolveStartEvents()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xBB6004", Offset = "0xBB6004", VA = "0xBB6004")]
		private void InvokeDissolveEndEvents()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xBB6018", Offset = "0xBB6018", VA = "0xBB6018")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xBB611C", Offset = "0xBB611C", VA = "0xBB611C")]
		public Dissolve()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xBB612C", Offset = "0xBB612C", VA = "0xBB612C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x872998", Offset = "0x872998")]
		private void <TriggerDissolve>b__12_0()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class DissolveGlowUpdate : MonoBehaviour
	{
		[Token(Token = "0x20006CA")]
		private enum StartMode
		{
			[Token(Token = "0x4002EAD")]
			OnAwake,
			[Token(Token = "0x4002EAE")]
			OnStart,
			[Token(Token = "0x4002EAF")]
			ByScript
		}

		[Token(Token = "0x20006CB")]
		private enum UpdateRate
		{
			[Token(Token = "0x4002EB1")]
			EveryFrame,
			[Token(Token = "0x4002EB2")]
			EveryNthFrame,
			[Token(Token = "0x4002EB3")]
			CustomFixedTimestep
		}

		[Token(Token = "0x20006CC")]
		private enum GlowSource
		{
			[Token(Token = "0x4002EB5")]
			Emissive,
			[Token(Token = "0x4002EB6")]
			Light
		}

		[Token(Token = "0x20006CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DAD8", Offset = "0x85DAD8")]
		private sealed class <FixedGlowUpdate>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DissolveGlowUpdate <>4__this;

			[Token(Token = "0x1700048D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D41")]
				[Address(RVA = "0xBB6E5C", Offset = "0xBB6E5C", VA = "0xBB6E5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D43")]
				[Address(RVA = "0xBB6EC4", Offset = "0xBB6EC4", VA = "0xBB6EC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D3E")]
			[Address(RVA = "0xBB68D0", Offset = "0xBB68D0", VA = "0xBB68D0")]
			[DebuggerHidden]
			public <FixedGlowUpdate>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002D3F")]
			[Address(RVA = "0xBB6DA8", Offset = "0xBB6DA8", VA = "0xBB6DA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D40")]
			[Address(RVA = "0xBB6DAC", Offset = "0xBB6DAC", VA = "0xBB6DAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D42")]
			[Address(RVA = "0xBB6E64", Offset = "0xBB6E64", VA = "0xBB6E64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DAE8", Offset = "0x85DAE8")]
		private sealed class <FrameGlowUpdate>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DissolveGlowUpdate <>4__this;

			[Token(Token = "0x4002EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <frame>5__2;

			[Token(Token = "0x1700048F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D47")]
				[Address(RVA = "0xBB6FAC", Offset = "0xBB6FAC", VA = "0xBB6FAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000490")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D49")]
				[Address(RVA = "0xBB7014", Offset = "0xBB7014", VA = "0xBB7014", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D44")]
			[Address(RVA = "0xBB68FC", Offset = "0xBB68FC", VA = "0xBB68FC")]
			[DebuggerHidden]
			public <FrameGlowUpdate>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002D45")]
			[Address(RVA = "0xBB6ECC", Offset = "0xBB6ECC", VA = "0xBB6ECC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D46")]
			[Address(RVA = "0xBB6ED0", Offset = "0xBB6ED0", VA = "0xBB6ED0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D48")]
			[Address(RVA = "0xBB6FB4", Offset = "0xBB6FB4", VA = "0xBB6FB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StartMode m_StartMode;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private UpdateRate m_UpdateRate;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GlowSource m_GlowSource;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8657A0", Offset = "0x8657A0")]
		[SerializeField]
		private float m_GlowCutoff;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_FrameDelay;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_UpdateTimestep;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Light m_GlowLightSource;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer m_Renderer;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_Material;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_UpdateFrames;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_GlowUpdating;

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xBB6148", Offset = "0xBB6148", VA = "0xBB6148")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xBB63C8", Offset = "0xBB63C8", VA = "0xBB63C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xBB6208", Offset = "0xBB6208", VA = "0xBB6208")]
		public void StartGlowUpdate()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xBB6554", Offset = "0xBB6554", VA = "0xBB6554")]
		public void StopGlowUpdate()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xBB6560", Offset = "0xBB6560", VA = "0xBB6560")]
		private void GlowUpdate()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xBB6474", Offset = "0xBB6474", VA = "0xBB6474")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8729A8", Offset = "0x8729A8")]
		private IEnumerator FixedGlowUpdate()
		{
			return null;
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xBB64E4", Offset = "0xBB64E4", VA = "0xBB64E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872A0C", Offset = "0x872A0C")]
		private IEnumerator FrameGlowUpdate()
		{
			return null;
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xBB65B8", Offset = "0xBB65B8", VA = "0xBB65B8")]
		private Color GetEmissiveColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xBB6A78", Offset = "0xBB6A78", VA = "0xBB6A78")]
		public void CreateLightSource()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xBB6CCC", Offset = "0xBB6CCC", VA = "0xBB6CCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xBB6D80", Offset = "0xBB6D80", VA = "0xBB6D80")]
		public DissolveGlowUpdate()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public static class DissolveHelper
	{
		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DAF8", Offset = "0x85DAF8")]
		private sealed class <LinearDissolve>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material mat;

			[Token(Token = "0x4002EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float from;

			[Token(Token = "0x4002EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float to;

			[Token(Token = "0x4002EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float time;

			[Token(Token = "0x4002EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action callback;

			[Token(Token = "0x4002EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000491")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D4D")]
				[Address(RVA = "0xBB8D1C", Offset = "0xBB8D1C", VA = "0xBB8D1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000492")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D4F")]
				[Address(RVA = "0xBB8D84", Offset = "0xBB8D84", VA = "0xBB8D84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D4A")]
			[Address(RVA = "0xBB8414", Offset = "0xBB8414", VA = "0xBB8414")]
			[DebuggerHidden]
			public <LinearDissolve>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6002D4B")]
			[Address(RVA = "0xBB8B50", Offset = "0xBB8B50", VA = "0xBB8B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D4C")]
			[Address(RVA = "0xBB8B54", Offset = "0xBB8B54", VA = "0xBB8B54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D4E")]
			[Address(RVA = "0xBB8D24", Offset = "0xBB8D24", VA = "0xBB8D24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB08", Offset = "0x85DB08")]
		private sealed class <LinearDissolve>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material[] mats;

			[Token(Token = "0x4002EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float from;

			[Token(Token = "0x4002ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float to;

			[Token(Token = "0x4002ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float time;

			[Token(Token = "0x4002ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action callback;

			[Token(Token = "0x4002ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000493")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D53")]
				[Address(RVA = "0xBB9040", Offset = "0xBB9040", VA = "0xBB9040", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000494")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D55")]
				[Address(RVA = "0xBB90A8", Offset = "0xBB90A8", VA = "0xBB90A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D50")]
			[Address(RVA = "0xBB84E4", Offset = "0xBB84E4", VA = "0xBB84E4")]
			[DebuggerHidden]
			public <LinearDissolve>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6002D51")]
			[Address(RVA = "0xBB8D8C", Offset = "0xBB8D8C", VA = "0xBB8D8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D52")]
			[Address(RVA = "0xBB8D90", Offset = "0xBB8D90", VA = "0xBB8D90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D54")]
			[Address(RVA = "0xBB9048", Offset = "0xBB9048", VA = "0xBB9048", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB18", Offset = "0x85DB18")]
		private sealed class <CurveDissolve>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float curveStartPercentage;

			[Token(Token = "0x4002ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Material[] mats;

			[Token(Token = "0x4002ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve dissolveCurve;

			[Token(Token = "0x4002ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float time;

			[Token(Token = "0x4002ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float speed;

			[Token(Token = "0x4002ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action callback;

			[Token(Token = "0x4002ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000495")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D59")]
				[Address(RVA = "0xBB8AE0", Offset = "0xBB8AE0", VA = "0xBB8AE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000496")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D5B")]
				[Address(RVA = "0xBB8B48", Offset = "0xBB8B48", VA = "0xBB8B48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D56")]
			[Address(RVA = "0xBB8510", Offset = "0xBB8510", VA = "0xBB8510")]
			[DebuggerHidden]
			public <CurveDissolve>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6002D57")]
			[Address(RVA = "0xBB888C", Offset = "0xBB888C", VA = "0xBB888C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D58")]
			[Address(RVA = "0xBB8890", Offset = "0xBB8890", VA = "0xBB8890", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D5A")]
			[Address(RVA = "0xBB8AE8", Offset = "0xBB8AE8", VA = "0xBB8AE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int dissolveMapID;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int tilingXID;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int tilingYID;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int directionMapID;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int dissolveMaskID;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int dissolveAmountID;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int dissolveDelayID;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int dissolveRampUpID;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int subTexID;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int outerEdgeColorID;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int innerEdgeColorID;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int edgeThicknessID;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int edgeColorRampUseID;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int edgeColorRampID;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static int dissolveGlowID;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static int dissolveGlowColorID;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int dissolveGlowIntensityID;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static int dissolveGlowFollowID;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static int emissionColorID;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string subTexKeyword;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string edgeColorRampUseKeyword;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string dissolveGlowKeyword;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string dissolveGlowFollowKeyword;

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xBB701C", Offset = "0xBB701C", VA = "0xBB701C")]
		public static void SetDissolveMap(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xBB7104", Offset = "0xBB7104", VA = "0xBB7104")]
		public static Texture GetDissolveMap(Material mat)
		{
			return null;
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xBB71CC", Offset = "0xBB71CC", VA = "0xBB71CC")]
		public static void SetDissolveMapTiling(Material mat, Vector2 tiling)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xBB72D0", Offset = "0xBB72D0", VA = "0xBB72D0")]
		public static Vector2 GetDissolveMapTiling(Material mat)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xBB73D8", Offset = "0xBB73D8", VA = "0xBB73D8")]
		public static void SetDirectionMap(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xBB7458", Offset = "0xBB7458", VA = "0xBB7458")]
		public static Texture GetDirectionMap(Material mat)
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xBB74C8", Offset = "0xBB74C8", VA = "0xBB74C8")]
		public static void SetDissolveMask(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xBB7548", Offset = "0xBB7548", VA = "0xBB7548")]
		public static Texture GetDissolveMask(Material mat)
		{
			return null;
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xBB75B8", Offset = "0xBB75B8", VA = "0xBB75B8")]
		public static void SetDissolveAmount(Material mat, float value)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xBB6928", Offset = "0xBB6928", VA = "0xBB6928")]
		public static float GetDissolveAmount(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xBB7638", Offset = "0xBB7638", VA = "0xBB7638")]
		public static void SetDissolveDelay(Material mat, float value)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xBB76B8", Offset = "0xBB76B8", VA = "0xBB76B8")]
		public static float GetDissolveDelay(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xBB7728", Offset = "0xBB7728", VA = "0xBB7728")]
		public static void SetDissolveRampUp(Material mat, float value)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xBB77A8", Offset = "0xBB77A8", VA = "0xBB77A8")]
		public static float GetDissolveRampUp(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xBB7818", Offset = "0xBB7818", VA = "0xBB7818")]
		public static void SetSubTex(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xBB7914", Offset = "0xBB7914", VA = "0xBB7914")]
		public static Texture GetSubTex(Material mat)
		{
			return null;
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xBB7984", Offset = "0xBB7984", VA = "0xBB7984")]
		public static void SetOuterEdgeColor(Material mat, Color color)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xBB7AB0", Offset = "0xBB7AB0", VA = "0xBB7AB0")]
		public static Color GetOuterEdgeColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xBB7B78", Offset = "0xBB7B78", VA = "0xBB7B78")]
		public static void SetInnerEdgeColor(Material mat, Color color)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xBB7C18", Offset = "0xBB7C18", VA = "0xBB7C18")]
		public static Color GetInnerEdgeColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xBB7C88", Offset = "0xBB7C88", VA = "0xBB7C88")]
		public static void SetEdgeThickness(Material mat, float value)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xBB7D08", Offset = "0xBB7D08", VA = "0xBB7D08")]
		public static float GetEdgeThickness(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xBB7D78", Offset = "0xBB7D78", VA = "0xBB7D78")]
		public static void SetEdgeColorRampUse(Material mat, bool value)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xBB7E7C", Offset = "0xBB7E7C", VA = "0xBB7E7C")]
		public static bool GetEdgeColorRampUse(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xBB7F48", Offset = "0xBB7F48", VA = "0xBB7F48")]
		public static void SetEdgeColorRamp(Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xBB7FC8", Offset = "0xBB7FC8", VA = "0xBB7FC8")]
		public static Texture GetEdgeColorRamp(Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xBB8038", Offset = "0xBB8038", VA = "0xBB8038")]
		public static void SetDissolveGlow(Material mat, bool value)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xBB80D4", Offset = "0xBB80D4", VA = "0xBB80D4")]
		public static bool GetDissolveGlow(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xBB8144", Offset = "0xBB8144", VA = "0xBB8144")]
		public static void SetDissolveGlowColor(Material mat, Color color)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xBB6998", Offset = "0xBB6998", VA = "0xBB6998")]
		public static Color GetDissolveGlowColor(Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xBB81E4", Offset = "0xBB81E4", VA = "0xBB81E4")]
		public static void SetDissolveGlowIntensity(Material mat, float value)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xBB6A08", Offset = "0xBB6A08", VA = "0xBB6A08")]
		public static float GetDissolveGlowIntensity(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xBB8264", Offset = "0xBB8264", VA = "0xBB8264")]
		public static void SetDissolveGlowFollow(Material mat, bool value)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xBB8300", Offset = "0xBB8300", VA = "0xBB8300")]
		public static bool GetDissolveGlowFollow(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xBB7268", Offset = "0xBB7268", VA = "0xBB7268")]
		private static void SetFloat(int propertyID, Material mat, float value)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xBB7380", Offset = "0xBB7380", VA = "0xBB7380")]
		private static float GetFloat(int propertyID, Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xBB709C", Offset = "0xBB709C", VA = "0xBB709C")]
		private static void SetTexture(int propertyID, Material mat, Texture2D texture)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xBB7174", Offset = "0xBB7174", VA = "0xBB7174")]
		private static Texture GetTexture(int propertyID, Material mat)
		{
			return null;
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xBB7A24", Offset = "0xBB7A24", VA = "0xBB7A24")]
		private static void SetColor(int propertyID, Material mat, Color color)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xBB7B20", Offset = "0xBB7B20", VA = "0xBB7B20")]
		private static Color GetColor(int propertyID, Material mat)
		{
			return default(Color);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xBB7E14", Offset = "0xBB7E14", VA = "0xBB7E14")]
		private static void SetBool(int propertyID, Material mat, bool value)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xBB7EEC", Offset = "0xBB7EEC", VA = "0xBB7EEC")]
		private static bool GetBool(int propertyID, Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xBB78E4", Offset = "0xBB78E4", VA = "0xBB78E4")]
		private static void EnableKeyword(string keyword, Material mat, bool condition)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xBB8370", Offset = "0xBB8370", VA = "0xBB8370")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872A70", Offset = "0x872A70")]
		public static IEnumerator LinearDissolve(Material mat, float from, float to, float time, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xBB8440", Offset = "0xBB8440", VA = "0xBB8440")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872AD4", Offset = "0x872AD4")]
		public static IEnumerator LinearDissolve(Material[] mats, float from, float to, float time, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xBB5F5C", Offset = "0xBB5F5C", VA = "0xBB5F5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872B38", Offset = "0x872B38")]
		public static IEnumerator CurveDissolve(Material[] mats, AnimationCurve dissolveCurve, float time, float curveStartPercentage, float speed, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xBB853C", Offset = "0xBB853C", VA = "0xBB853C")]
		public static bool IsInLayerMask(this GameObject obj, LayerMask mask)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000305")]
	public class DissolveOnClick : Dissolve
	{
		[Token(Token = "0x600161B")]
		[Address(RVA = "0xBB90B0", Offset = "0xBB90B0", VA = "0xBB90B0")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xBB90B8", Offset = "0xBB90B8", VA = "0xBB90B8")]
		public DissolveOnClick()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class DissolveOnCollision : Dissolve
	{
		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask collisionLayer;

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xBB90C8", Offset = "0xBB90C8", VA = "0xBB90C8")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xBB917C", Offset = "0xBB917C", VA = "0xBB917C")]
		public DissolveOnCollision()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class DissolveOnCollision2D : Dissolve
	{
		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask collisionLayer;

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xBB91B8", Offset = "0xBB91B8", VA = "0xBB91B8")]
		private void OnCollisionEnter2D(Collision2D col)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xBB926C", Offset = "0xBB926C", VA = "0xBB926C")]
		public DissolveOnCollision2D()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class DissolveOnKeyPress : Dissolve
	{
		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public KeyCode key;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isToggle;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool toggle;

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xBB92A8", Offset = "0xBB92A8", VA = "0xBB92A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xBB931C", Offset = "0xBB931C", VA = "0xBB931C")]
		public DissolveOnKeyPress()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class DissolveOnSpawn : Dissolve
	{
		[Token(Token = "0x6001623")]
		[Address(RVA = "0xBB932C", Offset = "0xBB932C", VA = "0xBB932C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xBB9334", Offset = "0xBB9334", VA = "0xBB9334")]
		public DissolveOnSpawn()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class DissolveOnTrigger : Dissolve
	{
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask collisionLayer;

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xBB9344", Offset = "0xBB9344", VA = "0xBB9344")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xBB93F8", Offset = "0xBB93F8", VA = "0xBB93F8")]
		public DissolveOnTrigger()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class DissolveOnTrigger2D : Dissolve
	{
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask collisionLayer;

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xBB9434", Offset = "0xBB9434", VA = "0xBB9434")]
		private void OnTriggerEnter2D(Collider2D col)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xBB94E8", Offset = "0xBB94E8", VA = "0xBB94E8")]
		public DissolveOnTrigger2D()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85AA64", Offset = "0x85AA64")]
	public class DissolveSettings : ScriptableObject
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Atomic;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool DisableAfterDissolve;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve DissolveCurve;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865810", Offset = "0x865810")]
		public float DissolveStartPercent;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Time;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Speed;

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xBB9524", Offset = "0xBB9524", VA = "0xBB9524")]
		public DissolveSettings()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class DissolveUI : Dissolve
	{
		[Token(Token = "0x600162A")]
		[Address(RVA = "0xBB9670", Offset = "0xBB9670", VA = "0xBB9670", Slot = "4")]
		protected override Material[] GetMaterials()
		{
			return null;
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xBB9820", Offset = "0xBB9820", VA = "0xBB9820")]
		public DissolveUI()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class DissolveSlider : MonoBehaviour
	{
		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider m_Slider;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer[] m_Renderers;

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xBB9578", Offset = "0xBB9578", VA = "0xBB9578")]
		public void UpdateDissolve()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xBB9668", Offset = "0xBB9668", VA = "0xBB9668")]
		public DissolveSlider()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class LookAtObject : MonoBehaviour
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Transform;

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xBB9830", Offset = "0xBB9830", VA = "0xBB9830")]
		private void Awake()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xBB9888", Offset = "0xBB9888", VA = "0xBB9888")]
		private void Update()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xBB98AC", Offset = "0xBB98AC", VA = "0xBB98AC")]
		public LookAtObject()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class RespawnManager : MonoBehaviour
	{
		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] zombies;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] zombiePrefabs;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] spawnPositions;

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xBB98B4", Offset = "0xBB98B4", VA = "0xBB98B4")]
		public void Respawn()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xBB9B48", Offset = "0xBB9B48", VA = "0xBB9B48")]
		public RespawnManager()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class UpdateLight : MonoBehaviour
	{
		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Light m_Light;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_OriginalValue;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material m_Material;

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xBB9B50", Offset = "0xBB9B50", VA = "0xBB9B50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xBB9B98", Offset = "0xBB9B98", VA = "0xBB9B98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xBB9C4C", Offset = "0xBB9C4C", VA = "0xBB9C4C")]
		private void OnDestory()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xBB9D00", Offset = "0xBB9D00", VA = "0xBB9D00")]
		public UpdateLight()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class Zombie : MonoBehaviour
	{
		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_Animator;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_Audio;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_DeathParticles;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Dissolve m_Dissolve;

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xBB9D08", Offset = "0xBB9D08", VA = "0xBB9D08")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xBB9DC4", Offset = "0xBB9DC4", VA = "0xBB9DC4")]
		private void InvokeDissolve()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xBB9DE0", Offset = "0xBB9DE0", VA = "0xBB9DE0")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xBB9E5C", Offset = "0xBB9E5C", VA = "0xBB9E5C")]
		public Zombie()
		{
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x2000313")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x600163B")]
		[Address(RVA = "0xAD88C4", Offset = "0xAD88C4", VA = "0xAD88C4", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xAD88F0", Offset = "0xAD88F0", VA = "0xAD88F0")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000314")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x600163D")]
		[Address(RVA = "0xAD88F8", Offset = "0xAD88F8", VA = "0xAD88F8", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xAD8CC8", Offset = "0xAD8CC8", VA = "0xAD8CC8")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x20006D2")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6002D5C")]
			[Address(RVA = "0xAD96B8", Offset = "0xAD96B8", VA = "0xAD96B8")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D3")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0xAD9708", Offset = "0xAD9708", VA = "0xAD9708")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D4")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6002D5E")]
			[Address(RVA = "0xAD9758", Offset = "0xAD9758", VA = "0xAD9758")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D5")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6002D5F")]
			[Address(RVA = "0xAD97A8", Offset = "0xAD97A8", VA = "0xAD97A8")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006D6")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x6002D60")]
			[Address(RVA = "0xAD97F8", Offset = "0xAD97F8", VA = "0xAD97F8")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x1700019F")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x600163F")]
			[Address(RVA = "0xAD8CD0", Offset = "0xAD8CD0", VA = "0xAD8CD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001640")]
			[Address(RVA = "0xAD8CD8", Offset = "0xAD8CD8", VA = "0xAD8CD8")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6001641")]
			[Address(RVA = "0xAD8CE0", Offset = "0xAD8CE0", VA = "0xAD8CE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001642")]
			[Address(RVA = "0xAD8CE8", Offset = "0xAD8CE8", VA = "0xAD8CE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6001643")]
			[Address(RVA = "0xAD8CF0", Offset = "0xAD8CF0", VA = "0xAD8CF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001644")]
			[Address(RVA = "0xAD8CF8", Offset = "0xAD8CF8", VA = "0xAD8CF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x6001645")]
			[Address(RVA = "0xAD8D00", Offset = "0xAD8D00", VA = "0xAD8D00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001646")]
			[Address(RVA = "0xAD8D08", Offset = "0xAD8D08", VA = "0xAD8D08")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0xAD8D10", Offset = "0xAD8D10", VA = "0xAD8D10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001648")]
			[Address(RVA = "0xAD8D18", Offset = "0xAD8D18", VA = "0xAD8D18")]
			set
			{
			}
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xAD8D20", Offset = "0xAD8D20", VA = "0xAD8D20")]
		private void Awake()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xAD8E88", Offset = "0xAD8E88", VA = "0xAD8E88")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xAD95D4", Offset = "0xAD95D4", VA = "0xAD95D4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xAD95D8", Offset = "0xAD95D8", VA = "0xAD95D8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xAD932C", Offset = "0xAD932C", VA = "0xAD932C")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xAD93A8", Offset = "0xAD93A8", VA = "0xAD93A8")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xAD9424", Offset = "0xAD9424", VA = "0xAD9424")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xAD94B4", Offset = "0xAD94B4", VA = "0xAD94B4")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xAD9544", Offset = "0xAD9544", VA = "0xAD9544")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xAD95DC", Offset = "0xAD95DC", VA = "0xAD95DC")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x2000316")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB28", Offset = "0x85DB28")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4002EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000497")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D64")]
				[Address(RVA = "0xE6B724", Offset = "0xE6B724", VA = "0xE6B724", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000498")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D66")]
				[Address(RVA = "0xE6B78C", Offset = "0xE6B78C", VA = "0xE6B78C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D61")]
			[Address(RVA = "0xE6B1F4", Offset = "0xE6B1F4", VA = "0xE6B1F4")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002D62")]
			[Address(RVA = "0xE6B228", Offset = "0xE6B228", VA = "0xE6B228", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D63")]
			[Address(RVA = "0xE6B22C", Offset = "0xE6B22C", VA = "0xE6B22C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D65")]
			[Address(RVA = "0xE6B72C", Offset = "0xE6B72C", VA = "0xE6B72C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4001633")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x4001634")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xE6B184", Offset = "0xE6B184", VA = "0xE6B184")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872BAC", Offset = "0x872BAC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xE6B220", Offset = "0xE6B220", VA = "0xE6B220")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB38", Offset = "0x85DB38")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4002EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000499")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D6A")]
				[Address(RVA = "0xE6BC6C", Offset = "0xE6BC6C", VA = "0xE6BC6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D6C")]
				[Address(RVA = "0xE6BCD4", Offset = "0xE6BCD4", VA = "0xE6BCD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D67")]
			[Address(RVA = "0xE6B804", Offset = "0xE6B804", VA = "0xE6B804")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002D68")]
			[Address(RVA = "0xE6B838", Offset = "0xE6B838", VA = "0xE6B838", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D69")]
			[Address(RVA = "0xE6B83C", Offset = "0xE6B83C", VA = "0xE6B83C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0xE6BC74", Offset = "0xE6BC74", VA = "0xE6BC74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x400163D")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x400163E")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xE6B794", Offset = "0xE6B794", VA = "0xE6B794")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872C10", Offset = "0x872C10")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xE6B830", Offset = "0xE6B830", VA = "0xE6B830")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xE6BCDC", Offset = "0xE6BCDC", VA = "0xE6BCDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xE6C2D0", Offset = "0xE6C2D0", VA = "0xE6C2D0")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xE6C2E0", Offset = "0xE6C2E0", VA = "0xE6C2E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xE6C2E4", Offset = "0xE6C2E4", VA = "0xE6C2E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xE6C58C", Offset = "0xE6C58C", VA = "0xE6C58C")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xE6C59C", Offset = "0xE6C59C", VA = "0xE6C59C")]
		private void Start()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xE6C900", Offset = "0xE6C900", VA = "0xE6C900")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x20006D9")]
		public enum CameraModes
		{
			[Token(Token = "0x4002EE0")]
			Follow,
			[Token(Token = "0x4002EE1")]
			Isometric,
			[Token(Token = "0x4002EE2")]
			Free
		}

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x4001663")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x4001664")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xE6C91C", Offset = "0xE6C91C", VA = "0xE6C91C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xE6C9A0", Offset = "0xE6C9A0", VA = "0xE6C9A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xE6CA58", Offset = "0xE6CA58", VA = "0xE6CA58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xE6CED4", Offset = "0xE6CED4", VA = "0xE6CED4")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xE6D7C4", Offset = "0xE6D7C4", VA = "0xE6D7C4")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x20006DA")]
		public enum MotionType
		{
			[Token(Token = "0x4002EE4")]
			Rotation,
			[Token(Token = "0x4002EE5")]
			BackAndForth,
			[Token(Token = "0x4002EE6")]
			Translation
		}

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xE6D86C", Offset = "0xE6D86C", VA = "0xE6D86C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xE6D984", Offset = "0xE6D984", VA = "0xE6D984")]
		private void Update()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xE6DBC0", Offset = "0xE6DBC0", VA = "0xE6DBC0")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB48", Offset = "0x85DB48")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x1700049B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D70")]
				[Address(RVA = "0xE6DE6C", Offset = "0xE6DE6C", VA = "0xE6DE6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D72")]
				[Address(RVA = "0xE6DED4", Offset = "0xE6DED4", VA = "0xE6DED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0xE6DCDC", Offset = "0xE6DCDC", VA = "0xE6DCDC")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002D6E")]
			[Address(RVA = "0xE6DD10", Offset = "0xE6DD10", VA = "0xE6DD10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D6F")]
			[Address(RVA = "0xE6DD14", Offset = "0xE6DD14", VA = "0xE6DD14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D71")]
			[Address(RVA = "0xE6DE74", Offset = "0xE6DE74", VA = "0xE6DE74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xE6DBD4", Offset = "0xE6DBD4", VA = "0xE6DBD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xE6DC40", Offset = "0xE6DC40", VA = "0xE6DC40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xE6DC6C", Offset = "0xE6DC6C", VA = "0xE6DC6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872C74", Offset = "0x872C74")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xE6DD08", Offset = "0xE6DD08", VA = "0xE6DD08")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4001674")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xE6DEDC", Offset = "0xE6DEDC", VA = "0xE6DEDC")]
		private void Start()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xE6DF98", Offset = "0xE6DF98", VA = "0xE6DF98")]
		private void Update()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xE6E034", Offset = "0xE6E034", VA = "0xE6E034")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB58", Offset = "0x85DB58")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4002EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4002EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4002EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x1700049D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D76")]
				[Address(RVA = "0xE6F110", Offset = "0xE6F110", VA = "0xE6F110", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D78")]
				[Address(RVA = "0xE6F178", Offset = "0xE6F178", VA = "0xE6F178", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D73")]
			[Address(RVA = "0xE6E1C8", Offset = "0xE6E1C8", VA = "0xE6E1C8")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002D74")]
			[Address(RVA = "0xE6E424", Offset = "0xE6E424", VA = "0xE6E424", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D75")]
			[Address(RVA = "0xE6E428", Offset = "0xE6E428", VA = "0xE6E428", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D77")]
			[Address(RVA = "0xE6F118", Offset = "0xE6F118", VA = "0xE6F118", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xE6E03C", Offset = "0xE6E03C", VA = "0xE6E03C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xE6E0A4", Offset = "0xE6E0A4", VA = "0xE6E0A4")]
		private void Start()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xE6E140", Offset = "0xE6E140", VA = "0xE6E140")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xE6E0D0", Offset = "0xE6E0D0", VA = "0xE6E0D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872CD8", Offset = "0x872CD8")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xE6E1F4", Offset = "0xE6E1F4", VA = "0xE6E1F4")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x20006DD")]
		public enum objectType
		{
			[Token(Token = "0x4002EF1")]
			TextMeshPro,
			[Token(Token = "0x4002EF2")]
			TextMeshProUGUI
		}

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x400167D")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xE6F180", Offset = "0xE6F180", VA = "0xE6F180")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xE6F35C", Offset = "0xE6F35C", VA = "0xE6F35C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xE6F3F8", Offset = "0xE6F3F8", VA = "0xE6F3F8")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20006DE")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4002EF4")]
			TopLeft,
			[Token(Token = "0x4002EF5")]
			BottomLeft,
			[Token(Token = "0x4002EF6")]
			TopRight,
			[Token(Token = "0x4002EF7")]
			BottomRight
		}

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4001684")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xE6F400", Offset = "0xE6F400", VA = "0xE6F400")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xE6F890", Offset = "0xE6F890", VA = "0xE6F890")]
		private void Start()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xE6F8BC", Offset = "0xE6F8BC", VA = "0xE6F8BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xE6F5F0", Offset = "0xE6F5F0", VA = "0xE6F5F0")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xE6FA1C", Offset = "0xE6FA1C", VA = "0xE6FA1C")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xE6FA34", Offset = "0xE6FA34", VA = "0xE6FA34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xE6FC6C", Offset = "0xE6FC6C", VA = "0xE6FC6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xE6FEA4", Offset = "0xE6FEA4", VA = "0xE6FEA4")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xE7007C", Offset = "0xE7007C", VA = "0xE7007C")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xE70254", Offset = "0xE70254", VA = "0xE70254")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xE70498", Offset = "0xE70498", VA = "0xE70498")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xE706DC", Offset = "0xE706DC", VA = "0xE706DC")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xE7090C", Offset = "0xE7090C", VA = "0xE7090C")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000323")]
	[ExecuteInEditMode]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowCharacters;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ShowWords;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ShowLinks;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool ShowLines;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ShowMeshBounds;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool ShowTextBounds;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8658F8", Offset = "0x8658F8")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8658F8", Offset = "0x8658F8")]
		public string ObjectStats;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_Transform;

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xE70914", Offset = "0xE70914", VA = "0xE70914")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xE7091C", Offset = "0xE7091C", VA = "0xE7091C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xE709A8", Offset = "0xE709A8", VA = "0xE709A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xE71284", Offset = "0xE71284", VA = "0xE71284", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xE71300", Offset = "0xE71300", VA = "0xE71300", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xE71378", Offset = "0xE71378", VA = "0xE71378")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x400169C")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x400169D")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xE71390", Offset = "0xE71390", VA = "0xE71390")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xE714F0", Offset = "0xE714F0", VA = "0xE714F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xE715B4", Offset = "0xE715B4", VA = "0xE715B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xE71678", Offset = "0xE71678", VA = "0xE71678")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xE7171C", Offset = "0xE7171C", VA = "0xE7171C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xE72EB8", Offset = "0xE72EB8", VA = "0xE72EB8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xE72EC4", Offset = "0xE72EC4", VA = "0xE72EC4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xE72ECC", Offset = "0xE72ECC", VA = "0xE72ECC", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xE72ED0", Offset = "0xE72ED0", VA = "0xE72ED0", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xE72628", Offset = "0xE72628", VA = "0xE72628")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xE72ED4", Offset = "0xE72ED4", VA = "0xE72ED4")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20006DF")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4002EF9")]
			TopLeft,
			[Token(Token = "0x4002EFA")]
			BottomLeft,
			[Token(Token = "0x4002EFB")]
			TopRight,
			[Token(Token = "0x4002EFC")]
			BottomRight
		}

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x40016AC")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xAD0860", Offset = "0xAD0860", VA = "0xAD0860")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xAD0D94", Offset = "0xAD0D94", VA = "0xAD0D94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xAD0DC0", Offset = "0xAD0DC0", VA = "0xAD0DC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xAD0A10", Offset = "0xAD0A10", VA = "0xAD0A10")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xAD0F20", Offset = "0xAD0F20", VA = "0xAD0F20")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x20006E0")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4002EFE")]
			TopLeft,
			[Token(Token = "0x4002EFF")]
			BottomLeft,
			[Token(Token = "0x4002F00")]
			TopRight,
			[Token(Token = "0x4002F01")]
			BottomRight
		}

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40016B1")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xAD0F38", Offset = "0xAD0F38", VA = "0xAD0F38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xAD1140", Offset = "0xAD1140", VA = "0xAD1140")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xAD1290", Offset = "0xAD1290", VA = "0xAD1290")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB68", Offset = "0x85DB68")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x4002F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x4002F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x1700049F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D7C")]
				[Address(RVA = "0xAD1654", Offset = "0xAD1654", VA = "0xAD1654", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D7E")]
				[Address(RVA = "0xAD16BC", Offset = "0xAD16BC", VA = "0xAD16BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D79")]
			[Address(RVA = "0xAD13A0", Offset = "0xAD13A0", VA = "0xAD13A0")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0xAD1434", Offset = "0xAD1434", VA = "0xAD1434", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D7B")]
			[Address(RVA = "0xAD1438", Offset = "0xAD1438", VA = "0xAD1438", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D7D")]
			[Address(RVA = "0xAD165C", Offset = "0xAD165C", VA = "0xAD165C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xAD12A0", Offset = "0xAD12A0", VA = "0xAD12A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xAD1330", Offset = "0xAD1330", VA = "0xAD1330")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872D3C", Offset = "0x872D3C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xAD13CC", Offset = "0xAD13CC", VA = "0xAD13CC")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB78", Offset = "0x85DB78")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4002F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x4002F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4002F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4002F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x170004A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D82")]
				[Address(RVA = "0xAD1BA0", Offset = "0xAD1BA0", VA = "0xAD1BA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D84")]
				[Address(RVA = "0xAD1C08", Offset = "0xAD1C08", VA = "0xAD1C08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D7F")]
			[Address(RVA = "0xAD196C", Offset = "0xAD196C", VA = "0xAD196C")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002D80")]
			[Address(RVA = "0xAD1A3C", Offset = "0xAD1A3C", VA = "0xAD1A3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D81")]
			[Address(RVA = "0xAD1A40", Offset = "0xAD1A40", VA = "0xAD1A40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D83")]
			[Address(RVA = "0xAD1BA8", Offset = "0xAD1BA8", VA = "0xAD1BA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB88", Offset = "0x85DB88")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4002F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4002F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4002F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x4002F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x170004A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D88")]
				[Address(RVA = "0xAD1DF8", Offset = "0xAD1DF8", VA = "0xAD1DF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D8A")]
				[Address(RVA = "0xAD1E60", Offset = "0xAD1E60", VA = "0xAD1E60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D85")]
			[Address(RVA = "0xAD1A08", Offset = "0xAD1A08", VA = "0xAD1A08")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002D86")]
			[Address(RVA = "0xAD1C10", Offset = "0xAD1C10", VA = "0xAD1C10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D87")]
			[Address(RVA = "0xAD1C14", Offset = "0xAD1C14", VA = "0xAD1C14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D89")]
			[Address(RVA = "0xAD1E00", Offset = "0xAD1E00", VA = "0xAD1E00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xAD16C4", Offset = "0xAD16C4", VA = "0xAD16C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xAD172C", Offset = "0xAD172C", VA = "0xAD172C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xAD17D8", Offset = "0xAD17D8", VA = "0xAD17D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xAD189C", Offset = "0xAD189C", VA = "0xAD189C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xAD1960", Offset = "0xAD1960", VA = "0xAD1960")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xAD175C", Offset = "0xAD175C", VA = "0xAD175C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872DA0", Offset = "0x872DA0")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xAD1998", Offset = "0xAD1998", VA = "0xAD1998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872E04", Offset = "0x872E04")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xAD1A34", Offset = "0xAD1A34", VA = "0xAD1A34")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DB98", Offset = "0x85DB98")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4002F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4002F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4002F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4002F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4002F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4002F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4002F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170004A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D8E")]
				[Address(RVA = "0xAD2F80", Offset = "0xAD2F80", VA = "0xAD2F80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D90")]
				[Address(RVA = "0xAD2FE8", Offset = "0xAD2FE8", VA = "0xAD2FE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D8B")]
			[Address(RVA = "0xAD2460", Offset = "0xAD2460", VA = "0xAD2460")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0xAD2AA0", Offset = "0xAD2AA0", VA = "0xAD2AA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D8D")]
			[Address(RVA = "0xAD2AA4", Offset = "0xAD2AA4", VA = "0xAD2AA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D8F")]
			[Address(RVA = "0xAD2F88", Offset = "0xAD2F88", VA = "0xAD2F88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DBA8", Offset = "0x85DBA8")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4002F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4002F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4002F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4002F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4002F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4002F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4002F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170004A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D94")]
				[Address(RVA = "0xAD2A30", Offset = "0xAD2A30", VA = "0xAD2A30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D96")]
				[Address(RVA = "0xAD2A98", Offset = "0xAD2A98", VA = "0xAD2A98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D91")]
			[Address(RVA = "0xAD248C", Offset = "0xAD248C", VA = "0xAD248C")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002D92")]
			[Address(RVA = "0xAD2560", Offset = "0xAD2560", VA = "0xAD2560", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D93")]
			[Address(RVA = "0xAD2564", Offset = "0xAD2564", VA = "0xAD2564", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D95")]
			[Address(RVA = "0xAD2A38", Offset = "0xAD2A38", VA = "0xAD2A38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xAD1E68", Offset = "0xAD1E68", VA = "0xAD1E68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xAD1F28", Offset = "0xAD1F28", VA = "0xAD1F28")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xAD2380", Offset = "0xAD2380", VA = "0xAD2380")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872E68", Offset = "0x872E68")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xAD23F0", Offset = "0xAD23F0", VA = "0xAD23F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872ECC", Offset = "0x872ECC")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xAD24B8", Offset = "0xAD24B8", VA = "0xAD24B8")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xAD2FF0", Offset = "0xAD2FF0", VA = "0xAD2FF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xAD2FF4", Offset = "0xAD2FF4", VA = "0xAD2FF4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xAD330C", Offset = "0xAD330C", VA = "0xAD330C")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DBB8", Offset = "0x85DBB8")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x4002F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4002F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x170004A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D9A")]
				[Address(RVA = "0xAD36E4", Offset = "0xAD36E4", VA = "0xAD36E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D9C")]
				[Address(RVA = "0xAD374C", Offset = "0xAD374C", VA = "0xAD374C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D97")]
			[Address(RVA = "0xAD3410", Offset = "0xAD3410", VA = "0xAD3410")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002D98")]
			[Address(RVA = "0xAD3444", Offset = "0xAD3444", VA = "0xAD3444", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D99")]
			[Address(RVA = "0xAD3448", Offset = "0xAD3448", VA = "0xAD3448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D9B")]
			[Address(RVA = "0xAD36EC", Offset = "0xAD36EC", VA = "0xAD36EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xAD331C", Offset = "0xAD331C", VA = "0xAD331C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xAD3374", Offset = "0xAD3374", VA = "0xAD3374")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xAD33A0", Offset = "0xAD33A0", VA = "0xAD33A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872F30", Offset = "0x872F30")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xAD343C", Offset = "0xAD343C", VA = "0xAD343C")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x20006E7")]
		private struct VertexAnim
		{
			[Token(Token = "0x4002F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x4002F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x4002F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DBC8", Offset = "0x85DBC8")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x4002F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4002F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x4002F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x4002F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x170004AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DA0")]
				[Address(RVA = "0xAD454C", Offset = "0xAD454C", VA = "0xAD454C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DA2")]
				[Address(RVA = "0xAD45B4", Offset = "0xAD45B4", VA = "0xAD45B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D9D")]
			[Address(RVA = "0xAD3A5C", Offset = "0xAD3A5C", VA = "0xAD3A5C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0xAD3AA0", Offset = "0xAD3AA0", VA = "0xAD3AA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D9F")]
			[Address(RVA = "0xAD3AA4", Offset = "0xAD3AA4", VA = "0xAD3AA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DA1")]
			[Address(RVA = "0xAD4554", Offset = "0xAD4554", VA = "0xAD4554", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xAD3754", Offset = "0xAD3754", VA = "0xAD3754")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xAD37AC", Offset = "0xAD37AC", VA = "0xAD37AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xAD3870", Offset = "0xAD3870", VA = "0xAD3870")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xAD3934", Offset = "0xAD3934", VA = "0xAD3934")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xAD39D0", Offset = "0xAD39D0", VA = "0xAD39D0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xAD3960", Offset = "0xAD3960", VA = "0xAD3960")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872F94", Offset = "0x872F94")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xAD3A88", Offset = "0xAD3A88", VA = "0xAD3A88")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DBD8", Offset = "0x85DBD8")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x4002F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4002F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170004AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DA6")]
				[Address(RVA = "0xAD53D4", Offset = "0xAD53D4", VA = "0xAD53D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DA8")]
				[Address(RVA = "0xAD543C", Offset = "0xAD543C", VA = "0xAD543C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DA3")]
			[Address(RVA = "0xAD48B4", Offset = "0xAD48B4", VA = "0xAD48B4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002DA4")]
			[Address(RVA = "0xAD48F0", Offset = "0xAD48F0", VA = "0xAD48F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DA5")]
			[Address(RVA = "0xAD48F4", Offset = "0xAD48F4", VA = "0xAD48F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DA7")]
			[Address(RVA = "0xAD53DC", Offset = "0xAD53DC", VA = "0xAD53DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xAD45BC", Offset = "0xAD45BC", VA = "0xAD45BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xAD4614", Offset = "0xAD4614", VA = "0xAD4614")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xAD46D8", Offset = "0xAD46D8", VA = "0xAD46D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xAD479C", Offset = "0xAD479C", VA = "0xAD479C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xAD4838", Offset = "0xAD4838", VA = "0xAD4838")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xAD47C8", Offset = "0xAD47C8", VA = "0xAD47C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x872FF8", Offset = "0x872FF8")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xAD48E0", Offset = "0xAD48E0", VA = "0xAD48E0")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DBE8", Offset = "0x85DBE8")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4002F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4002F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170004AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DAC")]
				[Address(RVA = "0xAD67C4", Offset = "0xAD67C4", VA = "0xAD67C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DAE")]
				[Address(RVA = "0xAD682C", Offset = "0xAD682C", VA = "0xAD682C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DA9")]
			[Address(RVA = "0xAD573C", Offset = "0xAD573C", VA = "0xAD573C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0xAD5780", Offset = "0xAD5780", VA = "0xAD5780", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DAB")]
			[Address(RVA = "0xAD5784", Offset = "0xAD5784", VA = "0xAD5784", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DAD")]
			[Address(RVA = "0xAD67CC", Offset = "0xAD67CC", VA = "0xAD67CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xAD5444", Offset = "0xAD5444", VA = "0xAD5444")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xAD549C", Offset = "0xAD549C", VA = "0xAD549C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xAD5560", Offset = "0xAD5560", VA = "0xAD5560")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xAD5624", Offset = "0xAD5624", VA = "0xAD5624")]
		private void Start()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xAD56C0", Offset = "0xAD56C0", VA = "0xAD56C0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xAD5650", Offset = "0xAD5650", VA = "0xAD5650")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87305C", Offset = "0x87305C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xAD5768", Offset = "0xAD5768", VA = "0xAD5768")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DBF8", Offset = "0x85DBF8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x4002F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0xAD6B80", Offset = "0xAD6B80", VA = "0xAD6B80")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002DB0")]
			[Address(RVA = "0xAD6B88", Offset = "0xAD6B88", VA = "0xAD6B88")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DC08", Offset = "0x85DC08")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x4002F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4002F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4002F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4002F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x170004B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DB4")]
				[Address(RVA = "0xAD78FC", Offset = "0xAD78FC", VA = "0xAD78FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DB6")]
				[Address(RVA = "0xAD7964", Offset = "0xAD7964", VA = "0xAD7964", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DB1")]
			[Address(RVA = "0xAD6B3C", Offset = "0xAD6B3C", VA = "0xAD6B3C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002DB2")]
			[Address(RVA = "0xAD6C4C", Offset = "0xAD6C4C", VA = "0xAD6C4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DB3")]
			[Address(RVA = "0xAD6C50", Offset = "0xAD6C50", VA = "0xAD6C50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DB5")]
			[Address(RVA = "0xAD7904", Offset = "0xAD7904", VA = "0xAD7904", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xAD6834", Offset = "0xAD6834", VA = "0xAD6834")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xAD688C", Offset = "0xAD688C", VA = "0xAD688C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xAD6950", Offset = "0xAD6950", VA = "0xAD6950")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xAD6A14", Offset = "0xAD6A14", VA = "0xAD6A14")]
		private void Start()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xAD6AB0", Offset = "0xAD6AB0", VA = "0xAD6AB0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xAD6A40", Offset = "0xAD6A40", VA = "0xAD6A40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8730C0", Offset = "0x8730C0")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xAD6B68", Offset = "0xAD6B68", VA = "0xAD6B68")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DC18", Offset = "0x85DC18")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x4002F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4002F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x170004B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002DBA")]
				[Address(RVA = "0xAD8854", Offset = "0xAD8854", VA = "0xAD8854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DBC")]
				[Address(RVA = "0xAD88BC", Offset = "0xAD88BC", VA = "0xAD88BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DB7")]
			[Address(RVA = "0xAD7AF8", Offset = "0xAD7AF8", VA = "0xAD7AF8")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002DB8")]
			[Address(RVA = "0xAD7D5C", Offset = "0xAD7D5C", VA = "0xAD7D5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002DB9")]
			[Address(RVA = "0xAD7D60", Offset = "0xAD7D60", VA = "0xAD7D60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DBB")]
			[Address(RVA = "0xAD885C", Offset = "0xAD885C", VA = "0xAD885C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xAD796C", Offset = "0xAD796C", VA = "0xAD796C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xAD79D4", Offset = "0xAD79D4", VA = "0xAD79D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xAD7A70", Offset = "0xAD7A70", VA = "0xAD7A70")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xAD7A00", Offset = "0xAD7A00", VA = "0xAD7A00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873124", Offset = "0x873124")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xAD7B24", Offset = "0xAD7B24", VA = "0xAD7B24")]
		public WarpTextExample()
		{
		}
	}
}
namespace SoftMasking
{
	[Token(Token = "0x2000332")]
	internal struct ClearListAtExit<T> : IDisposable
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> _list;

		[Token(Token = "0x60016D3")]
		public ClearListAtExit(List<T> list)
		{
		}

		[Token(Token = "0x60016D4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public interface ISoftMask
	{
		[Token(Token = "0x170001A4")]
		bool isAlive
		{
			[Token(Token = "0x60016D5")]
			get;
		}

		[Token(Token = "0x170001A5")]
		bool isMaskingEnabled
		{
			[Token(Token = "0x60016D6")]
			get;
		}

		[Token(Token = "0x60016D7")]
		Material GetReplacement(Material original);

		[Token(Token = "0x60016D8")]
		void ReleaseReplacement(Material replacement);

		[Token(Token = "0x60016D9")]
		void UpdateTransformChildren(Transform transform);
	}
	[Token(Token = "0x2000334")]
	internal class MaterialReplacements
	{
		[Token(Token = "0x20006EE")]
		private class MaterialOverride
		{
			[Token(Token = "0x4002F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _useCount;

			[Token(Token = "0x4002F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CB50", Offset = "0x86CB50")]
			private Material <original>k__BackingField;

			[Token(Token = "0x4002F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CB60", Offset = "0x86CB60")]
			private Material <replacement>k__BackingField;

			[Token(Token = "0x170004B5")]
			public Material original
			{
				[Token(Token = "0x6002DBE")]
				[Address(RVA = "0xE5E7C0", Offset = "0xE5E7C0", VA = "0xE5E7C0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A20C", Offset = "0x87A20C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002DBF")]
				[Address(RVA = "0xE5E7C8", Offset = "0xE5E7C8", VA = "0xE5E7C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A21C", Offset = "0x87A21C")]
				private set
				{
				}
			}

			[Token(Token = "0x170004B6")]
			public Material replacement
			{
				[Token(Token = "0x6002DC0")]
				[Address(RVA = "0xE5E7D0", Offset = "0xE5E7D0", VA = "0xE5E7D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A22C", Offset = "0x87A22C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002DC1")]
				[Address(RVA = "0xE5E7D8", Offset = "0xE5E7D8", VA = "0xE5E7D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A23C", Offset = "0x87A23C")]
				private set
				{
				}
			}

			[Token(Token = "0x6002DBD")]
			[Address(RVA = "0xE5E478", Offset = "0xE5E478", VA = "0xE5E478")]
			public MaterialOverride(Material original, Material replacement)
			{
			}

			[Token(Token = "0x6002DC2")]
			[Address(RVA = "0xE5E460", Offset = "0xE5E460", VA = "0xE5E460")]
			public Material Get()
			{
				return null;
			}

			[Token(Token = "0x6002DC3")]
			[Address(RVA = "0xE5E5F0", Offset = "0xE5E5F0", VA = "0xE5E5F0")]
			public bool Release()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IMaterialReplacer _replacer;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<Material> _applyParameters;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<MaterialOverride> _overrides;

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xE5E194", Offset = "0xE5E194", VA = "0xE5E194")]
		public MaterialReplacements(IMaterialReplacer replacer, Action<Material> applyParameters)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xE5E21C", Offset = "0xE5E21C", VA = "0xE5E21C")]
		public Material Get(Material original)
		{
			return null;
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xE5E4B8", Offset = "0xE5E4B8", VA = "0xE5E4B8")]
		public void Release(Material replacement)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xE5E608", Offset = "0xE5E608", VA = "0xE5E608")]
		public void ApplyAll()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xE5E6F0", Offset = "0xE5E6F0", VA = "0xE5E6F0")]
		public void DestroyAllAndClear()
		{
		}
	}
	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x85AAC8", Offset = "0x85AAC8")]
	public class GlobalMaterialReplacerAttribute : Attribute
	{
		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xE5E030", Offset = "0xE5E030", VA = "0xE5E030")]
		public GlobalMaterialReplacerAttribute()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public interface IMaterialReplacer
	{
		[Token(Token = "0x170001A6")]
		int order
		{
			[Token(Token = "0x60016E0")]
			get;
		}

		[Token(Token = "0x60016E1")]
		Material Replace(Material material);
	}
	[Token(Token = "0x2000337")]
	public static class MaterialReplacer
	{
		[Serializable]
		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DC28", Offset = "0x85DC28")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Assembly, IEnumerable<Type>> <>9__3_0;

			[Token(Token = "0x4002F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, bool> <>9__3_1;

			[Token(Token = "0x4002F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Type, IMaterialReplacer> <>9__3_2;

			[Token(Token = "0x4002F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IMaterialReplacer, bool> <>9__3_3;

			[Token(Token = "0x4002F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Type, bool> <>9__6_0;

			[Token(Token = "0x6002DC5")]
			[Address(RVA = "0xE5F074", Offset = "0xE5F074", VA = "0xE5F074")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0xE5F07C", Offset = "0xE5F07C", VA = "0xE5F07C")]
			internal IEnumerable<Type> <CollectGlobalReplacers>b__3_0(Assembly x)
			{
				return null;
			}

			[Token(Token = "0x6002DC7")]
			[Address(RVA = "0xE5F084", Offset = "0xE5F084", VA = "0xE5F084")]
			internal bool <CollectGlobalReplacers>b__3_1(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002DC8")]
			[Address(RVA = "0xE5F08C", Offset = "0xE5F08C", VA = "0xE5F08C")]
			internal IMaterialReplacer <CollectGlobalReplacers>b__3_2(Type t)
			{
				return null;
			}

			[Token(Token = "0x6002DC9")]
			[Address(RVA = "0xE5F094", Offset = "0xE5F094", VA = "0xE5F094")]
			internal bool <CollectGlobalReplacers>b__3_3(IMaterialReplacer t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002DCA")]
			[Address(RVA = "0xE5F0A0", Offset = "0xE5F0A0", VA = "0xE5F0A0")]
			internal bool <GetTypesSafe>b__6_0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IMaterialReplacer> _globalReplacers;

		[Token(Token = "0x170001A7")]
		public static IEnumerable<IMaterialReplacer> globalReplacers
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xE5E7E0", Offset = "0xE5E7E0", VA = "0xE5E7E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xE5E860", Offset = "0xE5E860", VA = "0xE5E860")]
		private static IEnumerable<IMaterialReplacer> CollectGlobalReplacers()
		{
			return null;
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xE5EB70", Offset = "0xE5EB70", VA = "0xE5EB70")]
		private static bool IsMaterialReplacerType(Type t)
		{
			return default(bool);
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xE5ECB4", Offset = "0xE5ECB4", VA = "0xE5ECB4")]
		private static IMaterialReplacer TryCreateInstance(Type t)
		{
			return null;
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xE5EE7C", Offset = "0xE5EE7C", VA = "0xE5EE7C")]
		private static IEnumerable<Type> GetTypesSafe(this Assembly asm)
		{
			return null;
		}
	}
	[Token(Token = "0x2000338")]
	public class MaterialReplacerChain : IMaterialReplacer
	{
		[Serializable]
		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DC38", Offset = "0x85DC38")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<IMaterialReplacer> <>9__7_0;

			[Token(Token = "0x6002DCC")]
			[Address(RVA = "0xE5F4F8", Offset = "0xE5F4F8", VA = "0xE5F4F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DCD")]
			[Address(RVA = "0xE5F500", Offset = "0xE5F500", VA = "0xE5F500")]
			internal int <Initialize>b__7_0(IMaterialReplacer a, IMaterialReplacer b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<IMaterialReplacer> _replacers;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86593C", Offset = "0x86593C")]
		private int <order>k__BackingField;

		[Token(Token = "0x170001A8")]
		public int order
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xE5F334", Offset = "0xE5F334", VA = "0xE5F334", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873198", Offset = "0x873198")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xE5F33C", Offset = "0xE5F33C", VA = "0xE5F33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8731A8", Offset = "0x8731A8")]
			private set
			{
			}
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xE5F10C", Offset = "0xE5F10C", VA = "0xE5F10C")]
		public MaterialReplacerChain(IEnumerable<IMaterialReplacer> replacers, IMaterialReplacer yetAnother)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xE5F344", Offset = "0xE5F344", VA = "0xE5F344", Slot = "5")]
		public Material Replace(Material material)
		{
			return null;
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xE5F1A0", Offset = "0xE5F1A0", VA = "0xE5F1A0")]
		private void Initialize()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public static class MaskChannel
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color alpha;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Color red;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Color green;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Color blue;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Color gray;
	}
	[Token(Token = "0x200033A")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85AAEC", Offset = "0x85AAEC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85AAEC", Offset = "0x85AAEC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85AAEC", Offset = "0x85AAEC")]
	public class SoftMask : UIBehaviour, ISoftMask, ICanvasRaycastFilter
	{
		[Serializable]
		[Token(Token = "0x20006F1")]
		public enum MaskSource
		{
			[Token(Token = "0x4002F5C")]
			Graphic,
			[Token(Token = "0x4002F5D")]
			Sprite,
			[Token(Token = "0x4002F5E")]
			Texture
		}

		[Serializable]
		[Token(Token = "0x20006F2")]
		public enum BorderMode
		{
			[Token(Token = "0x4002F60")]
			Simple,
			[Token(Token = "0x4002F61")]
			Sliced,
			[Token(Token = "0x4002F62")]
			Tiled
		}

		[Serializable]
		[Token(Token = "0x20006F3")]
		[Flags]
		public enum Errors
		{
			[Token(Token = "0x4002F64")]
			NoError = 0,
			[Token(Token = "0x4002F65")]
			UnsupportedShaders = 1,
			[Token(Token = "0x4002F66")]
			NestedMasks = 2,
			[Token(Token = "0x4002F67")]
			TightPackedSprite = 4,
			[Token(Token = "0x4002F68")]
			AlphaSplitSprite = 8,
			[Token(Token = "0x4002F69")]
			UnsupportedImageType = 0x10,
			[Token(Token = "0x4002F6A")]
			UnreadableTexture = 0x20
		}

		[Token(Token = "0x20006F4")]
		private struct SourceParameters
		{
			[Token(Token = "0x4002F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Image image;

			[Token(Token = "0x4002F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Sprite sprite;

			[Token(Token = "0x4002F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BorderMode spriteBorderMode;

			[Token(Token = "0x4002F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture2D texture;

			[Token(Token = "0x4002F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Rect textureUVRect;
		}

		[Token(Token = "0x20006F5")]
		private class MaterialReplacerImpl : IMaterialReplacer
		{
			[Token(Token = "0x4002F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly SoftMask _owner;

			[Token(Token = "0x170004B7")]
			public int order
			{
				[Token(Token = "0x6002DCF")]
				[Address(RVA = "0xE64D98", Offset = "0xE64D98", VA = "0xE64D98", Slot = "4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002DCE")]
			[Address(RVA = "0xE60810", Offset = "0xE60810", VA = "0xE60810")]
			public MaterialReplacerImpl(SoftMask owner)
			{
			}

			[Token(Token = "0x6002DD0")]
			[Address(RVA = "0xE64DA0", Offset = "0xE64DA0", VA = "0xE64DA0", Slot = "5")]
			public Material Replace(Material original)
			{
				return null;
			}

			[Token(Token = "0x6002DD1")]
			[Address(RVA = "0xE64EA4", Offset = "0xE64EA4", VA = "0xE64EA4")]
			private static Material Replace(Material original, Shader defaultReplacementShader)
			{
				return null;
			}
		}

		[Token(Token = "0x20006F6")]
		private static class Mathr
		{
			[Token(Token = "0x6002DD2")]
			[Address(RVA = "0xE63424", Offset = "0xE63424", VA = "0xE63424")]
			public static Vector4 ToVector(Rect r)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002DD3")]
			[Address(RVA = "0xE63538", Offset = "0xE63538", VA = "0xE63538")]
			public static Vector4 Div(Vector4 v, Vector2 s)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002DD4")]
			[Address(RVA = "0xE63AB4", Offset = "0xE63AB4", VA = "0xE63AB4")]
			public static Vector2 Div(Vector2 v, Vector2 s)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002DD5")]
			[Address(RVA = "0xE635AC", Offset = "0xE635AC", VA = "0xE635AC")]
			public static Vector4 Mul(Vector4 v, Vector2 s)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002DD6")]
			[Address(RVA = "0xE63578", Offset = "0xE63578", VA = "0xE63578")]
			public static Vector2 Size(Vector4 r)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002DD7")]
			[Address(RVA = "0xE634B8", Offset = "0xE634B8", VA = "0xE634B8")]
			public static Vector4 Move(Vector4 v, Vector2 o)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002DD8")]
			[Address(RVA = "0xE634F8", Offset = "0xE634F8", VA = "0xE634F8")]
			public static Vector4 BorderOf(Vector4 outer, Vector4 inner)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002DD9")]
			[Address(RVA = "0xE635EC", Offset = "0xE635EC", VA = "0xE635EC")]
			public static Vector4 ApplyBorder(Vector4 v, Vector4 b)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002DDA")]
			[Address(RVA = "0xE64FB0", Offset = "0xE64FB0", VA = "0xE64FB0")]
			public static Vector2 Min(Vector4 r)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002DDB")]
			[Address(RVA = "0xE64FDC", Offset = "0xE64FDC", VA = "0xE64FDC")]
			public static Vector2 Max(Vector4 r)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002DDC")]
			[Address(RVA = "0xE648E4", Offset = "0xE648E4", VA = "0xE648E4")]
			public static Vector2 Remap(Vector2 c, Vector4 from, Vector4 to)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002DDD")]
			[Address(RVA = "0xE614A4", Offset = "0xE614A4", VA = "0xE614A4")]
			public static bool Inside(Vector2 v, Vector4 r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006F7")]
		private struct MaterialParameters
		{
			[Token(Token = "0x2000834")]
			private static class Ids
			{
				[Token(Token = "0x40034EF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly int SoftMask;

				[Token(Token = "0x40034F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public static readonly int SoftMask_Rect;

				[Token(Token = "0x40034F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static readonly int SoftMask_UVRect;

				[Token(Token = "0x40034F2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public static readonly int SoftMask_ChannelWeights;

				[Token(Token = "0x40034F3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static readonly int SoftMask_WorldToMask;

				[Token(Token = "0x40034F4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public static readonly int SoftMask_BorderRect;

				[Token(Token = "0x40034F5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public static readonly int SoftMask_UVBorderRect;

				[Token(Token = "0x40034F6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public static readonly int SoftMask_TileRepeat;
			}

			[Token(Token = "0x4002F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector4 maskRect;

			[Token(Token = "0x4002F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector4 maskBorder;

			[Token(Token = "0x4002F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4 maskRectUV;

			[Token(Token = "0x4002F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector4 maskBorderUV;

			[Token(Token = "0x4002F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2 tileRepeat;

			[Token(Token = "0x4002F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color maskChannelWeights;

			[Token(Token = "0x4002F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Matrix4x4 worldToMask;

			[Token(Token = "0x4002F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Texture2D texture;

			[Token(Token = "0x4002F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public BorderMode borderMode;

			[Token(Token = "0x170004B8")]
			public Texture2D activeTexture
			{
				[Token(Token = "0x6002DDE")]
				[Address(RVA = "0x8FAD30", Offset = "0x8FAD30", VA = "0x8FAD30")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DDF")]
			[Address(RVA = "0x8FAD38", Offset = "0x8FAD38", VA = "0x8FAD38")]
			public bool SampleMask(Vector2 localPos, out float mask)
			{
				return default(bool);
			}

			[Token(Token = "0x6002DE0")]
			[Address(RVA = "0x8FAD40", Offset = "0x8FAD40", VA = "0x8FAD40")]
			public void Apply(Material mat)
			{
			}

			[Token(Token = "0x6002DE1")]
			[Address(RVA = "0x8FAD48", Offset = "0x8FAD48", VA = "0x8FAD48")]
			private Vector2 XY2UV(Vector2 localPos)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002DE2")]
			[Address(RVA = "0x8FAD50", Offset = "0x8FAD50", VA = "0x8FAD50")]
			private Vector2 MapSimple(Vector2 localPos)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002DE3")]
			[Address(RVA = "0x8FAD58", Offset = "0x8FAD58", VA = "0x8FAD58")]
			private Vector2 MapBorder(Vector2 localPos, bool repeat)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002DE4")]
			[Address(RVA = "0x8FAD64", Offset = "0x8FAD64", VA = "0x8FAD64")]
			private float Inset(float v, float x1, float x2, float u1, float u2, float repeat = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6002DE5")]
			[Address(RVA = "0x8FAD6C", Offset = "0x8FAD6C", VA = "0x8FAD6C")]
			private float Inset(float v, float x1, float x2, float x3, float x4, float u1, float u2, float u3, float u4, float repeat = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x6002DE6")]
			[Address(RVA = "0x8FAD84", Offset = "0x8FAD84", VA = "0x8FAD84")]
			private float Frac(float v)
			{
				return default(float);
			}

			[Token(Token = "0x6002DE7")]
			[Address(RVA = "0x8FAD88", Offset = "0x8FAD88", VA = "0x8FAD88")]
			private float MaskValue(Color mask)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20006F8")]
		private struct Diagnostics
		{
			[Token(Token = "0x2000835")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E718", Offset = "0x85E718")]
			private sealed class <>c__DisplayClass2_0
			{
				[Token(Token = "0x40034F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SoftMask softMask;

				[Token(Token = "0x6003216")]
				[Address(RVA = "0xE63FE8", Offset = "0xE63FE8", VA = "0xE63FE8")]
				public <>c__DisplayClass2_0()
				{
				}

				[Token(Token = "0x6003217")]
				[Address(RVA = "0xE64690", Offset = "0xE64690", VA = "0xE64690")]
				internal bool <PollErrors>b__0(SoftMaskable m)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x2000836")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E728", Offset = "0x85E728")]
			private sealed class <>c__DisplayClass10_0
			{
				[Token(Token = "0x40034F8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SoftMask softMask;

				[Token(Token = "0x6003218")]
				[Address(RVA = "0xE64448", Offset = "0xE64448", VA = "0xE64448")]
				public <>c__DisplayClass10_0()
				{
				}

				[Token(Token = "0x6003219")]
				[Address(RVA = "0xE64680", Offset = "0xE64680", VA = "0xE64680")]
				internal bool <ThereAreNestedMasks>b__0(SoftMask x)
				{
					return default(bool);
				}

				[Token(Token = "0x600321A")]
				[Address(RVA = "0xE64688", Offset = "0xE64688", VA = "0xE64688")]
				internal bool <ThereAreNestedMasks>b__1(SoftMask x)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4002F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private SoftMask _softMask;

			[Token(Token = "0x170004B9")]
			private Image image
			{
				[Token(Token = "0x6002DEB")]
				[Address(RVA = "0x8FACC4", Offset = "0x8FACC4", VA = "0x8FACC4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BA")]
			private Sprite sprite
			{
				[Token(Token = "0x6002DEC")]
				[Address(RVA = "0x8FACCC", Offset = "0x8FACCC", VA = "0x8FACCC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BB")]
			private Texture2D texture
			{
				[Token(Token = "0x6002DED")]
				[Address(RVA = "0x8FACD4", Offset = "0x8FACD4", VA = "0x8FACD4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DE8")]
			[Address(RVA = "0x8FACB4", Offset = "0x8FACB4", VA = "0x8FACB4")]
			public Diagnostics(SoftMask softMask)
			{
			}

			[Token(Token = "0x6002DE9")]
			[Address(RVA = "0x8FACBC", Offset = "0x8FACBC", VA = "0x8FACBC")]
			public Errors PollErrors()
			{
				return default(Errors);
			}

			[Token(Token = "0x6002DEA")]
			[Address(RVA = "0xE63200", Offset = "0xE63200", VA = "0xE63200")]
			public static Errors CheckSprite(Sprite sprite)
			{
				return default(Errors);
			}

			[Token(Token = "0x6002DEE")]
			[Address(RVA = "0x8FACDC", Offset = "0x8FACDC", VA = "0x8FACDC")]
			private bool ThereAreNestedMasks()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DEF")]
			[Address(RVA = "0x8FACE4", Offset = "0x8FACE4", VA = "0x8FACE4")]
			private Errors CheckImage()
			{
				return default(Errors);
			}

			[Token(Token = "0x6002DF0")]
			[Address(RVA = "0x8FACEC", Offset = "0x8FACEC", VA = "0x8FACEC")]
			private Errors CheckTexture()
			{
				return default(Errors);
			}

			[Token(Token = "0x6002DF1")]
			[Address(RVA = "0xE64540", Offset = "0xE64540", VA = "0xE64540")]
			private static bool AreCompeting(SoftMask softMask, SoftMask other)
			{
				return default(bool);
			}

			[Token(Token = "0x6002DF2")]
			private static T SelectChild<T>(T first, T second) where T : Component
			{
				return null;
			}

			[Token(Token = "0x6002DF3")]
			[Address(RVA = "0xE6446C", Offset = "0xE6446C", VA = "0xE6446C")]
			private static bool IsReadable(Texture2D texture)
			{
				return default(bool);
			}

			[Token(Token = "0x6002DF4")]
			[Address(RVA = "0xE64450", Offset = "0xE64450", VA = "0xE64450")]
			private static bool IsSupportedImageType(Image.Type type)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DC58", Offset = "0x85DC58")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<SoftMaskable> <>9__91_0;

			[Token(Token = "0x4002F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<SoftMaskable> <>9__92_0;

			[Token(Token = "0x6002DF6")]
			[Address(RVA = "0xE63EA4", Offset = "0xE63EA4", VA = "0xE63EA4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DF7")]
			[Address(RVA = "0xE63EAC", Offset = "0xE63EAC", VA = "0xE63EAC")]
			internal void <InvalidateChildren>b__91_0(SoftMaskable x)
			{
			}

			[Token(Token = "0x6002DF8")]
			[Address(RVA = "0xE63F6C", Offset = "0xE63F6C", VA = "0xE63F6C")]
			internal void <NotifyChildrenThatMaskMightChanged>b__92_0(SoftMaskable x)
			{
			}
		}

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Shader _defaultShader;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader _defaultETC1Shader;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MaskSource _source;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform _separateMask;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite _sprite;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BorderMode _spriteBorderMode;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D _texture;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Rect _textureUVRect;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color _channelWeights;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _raycastThreshold;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MaterialReplacements _materials;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MaterialParameters _parameters;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Sprite _lastUsedSprite;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Rect _lastMaskRect;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool _maskingWasEnabled;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		private bool _destroyed;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		private bool _dirty;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private RectTransform _maskTransform;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Graphic _graphic;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Canvas _canvas;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Rect DefaultUVRect;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<SoftMask> s_masks;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<SoftMaskable> s_maskables;

		[Token(Token = "0x170001A9")]
		public Shader defaultShader
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0xE6083C", Offset = "0xE6083C", VA = "0xE6083C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0xE60844", Offset = "0xE60844", VA = "0xE60844")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public Shader defaultETC1Shader
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xE60924", Offset = "0xE60924", VA = "0xE60924")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0xE6092C", Offset = "0xE6092C", VA = "0xE6092C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public MaskSource source
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xE60940", Offset = "0xE60940", VA = "0xE60940")]
			get
			{
				return default(MaskSource);
			}
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xE60948", Offset = "0xE60948", VA = "0xE60948")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public RectTransform separateMask
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xE609C8", Offset = "0xE609C8", VA = "0xE609C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0xE609D0", Offset = "0xE609D0", VA = "0xE609D0")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public Sprite sprite
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xE60A78", Offset = "0xE60A78", VA = "0xE60A78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xE60A80", Offset = "0xE60A80", VA = "0xE60A80")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public BorderMode spriteBorderMode
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xE60B30", Offset = "0xE60B30", VA = "0xE60B30")]
			get
			{
				return default(BorderMode);
			}
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xE60B38", Offset = "0xE60B38", VA = "0xE60B38")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public Texture2D texture
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xE60BB8", Offset = "0xE60BB8", VA = "0xE60BB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xE60BC0", Offset = "0xE60BC0", VA = "0xE60BC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public Rect textureUVRect
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xE60C70", Offset = "0xE60C70", VA = "0xE60C70")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xE60C7C", Offset = "0xE60C7C", VA = "0xE60C7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public Color channelWeights
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xE60D38", Offset = "0xE60D38", VA = "0xE60D38")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xE60D44", Offset = "0xE60D44", VA = "0xE60D44")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public float raycastThreshold
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xE60E00", Offset = "0xE60E00", VA = "0xE60E00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001701")]
			[Address(RVA = "0xE60E08", Offset = "0xE60E08", VA = "0xE60E08")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public bool isUsingRaycastFiltering
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xE60E10", Offset = "0xE60E10", VA = "0xE60E10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B4")]
		public bool isMaskingEnabled
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0xE60E20", Offset = "0xE60E20", VA = "0xE60E20", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B5")]
		private RectTransform maskTransform
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0xE6137C", Offset = "0xE6137C", VA = "0xE6137C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		private Canvas canvas
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0xE60EB8", Offset = "0xE60EB8", VA = "0xE60EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private bool isBasedOnGraphic
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xE621AC", Offset = "0xE621AC", VA = "0xE621AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B8")]
		private bool SoftMasking.ISoftMask.isAlive
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0xE621BC", Offset = "0xE621BC", VA = "0xE621BC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xE606B8", Offset = "0xE606B8", VA = "0xE606B8")]
		public SoftMask()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xE60F40", Offset = "0xE60F40", VA = "0xE60F40")]
		public Errors PollErrors()
		{
			return default(Errors);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xE6113C", Offset = "0xE6113C", VA = "0xE6113C", Slot = "22")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xE6166C", Offset = "0xE6166C", VA = "0xE6166C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xE61748", Offset = "0xE61748", VA = "0xE61748", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xE61D14", Offset = "0xE61D14", VA = "0xE61D14", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xE61EC8", Offset = "0xE61EC8", VA = "0xE61EC8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xE61EF8", Offset = "0xE61EF8", VA = "0xE61EF8", Slot = "23")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xE61FD0", Offset = "0xE61FD0", VA = "0xE61FD0", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xE61FFC", Offset = "0xE61FFC", VA = "0xE61FFC", Slot = "13")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xE62028", Offset = "0xE62028", VA = "0xE62028", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xE62058", Offset = "0xE62058", VA = "0xE62058", Slot = "15")]
		protected override void OnCanvasHierarchyChanged()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xE6208C", Offset = "0xE6208C", VA = "0xE6208C")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xE617A8", Offset = "0xE617A8", VA = "0xE617A8")]
		private void SubscribeOnWillRenderCanvases()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xE61E3C", Offset = "0xE61E3C", VA = "0xE61E3C")]
		private void UnsubscribeFromWillRenderCanvases()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xE620A8", Offset = "0xE620A8", VA = "0xE620A8")]
		private void OnWillRenderCanvases()
		{
		}

		[Token(Token = "0x6001713")]
		private static T Touch<T>(T obj)
		{
			return (T)null;
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xE62240", Offset = "0xE62240", VA = "0xE62240", Slot = "19")]
		private Material SoftMasking.ISoftMask.GetReplacement(Material original)
		{
			return null;
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xE62258", Offset = "0xE62258", VA = "0xE62258", Slot = "20")]
		private void SoftMasking.ISoftMask.ReleaseReplacement(Material replacement)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xE62270", Offset = "0xE62270", VA = "0xE62270", Slot = "21")]
		private void SoftMasking.ISoftMask.UpdateTransformChildren(Transform transform)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xE62274", Offset = "0xE62274", VA = "0xE62274")]
		private void OnGraphicDirty()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xE61A38", Offset = "0xE61A38", VA = "0xE61A38")]
		private void FindGraphic()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xE620DC", Offset = "0xE620DC", VA = "0xE620DC")]
		private Canvas NearestEnabledCanvas()
		{
			return null;
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xE61B9C", Offset = "0xE61B9C", VA = "0xE61B9C")]
		private void UpdateMaskParameters()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xE61880", Offset = "0xE61880", VA = "0xE61880")]
		private void SpawnMaskablesInChildren(Transform root)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xE623D4", Offset = "0xE623D4", VA = "0xE623D4")]
		private void InvalidateChildren()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xE61C2C", Offset = "0xE61C2C", VA = "0xE61C2C")]
		private void NotifyChildrenThatMaskMightChanged()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xE624BC", Offset = "0xE624BC", VA = "0xE624BC")]
		private void ForEachChildMaskable(Action<SoftMaskable> f)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xE61EB0", Offset = "0xE61EB0", VA = "0xE61EB0")]
		private void DestroyMaterials()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xE62748", Offset = "0xE62748", VA = "0xE62748")]
		private SourceParameters DeduceSourceParameters()
		{
			return default(SourceParameters);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xE629E8", Offset = "0xE629E8", VA = "0xE629E8")]
		private BorderMode ToBorderMode(Image.Type imageType)
		{
			return default(BorderMode);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xE6228C", Offset = "0xE6228C", VA = "0xE6228C")]
		private void CalculateMaskParameters()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xE62AFC", Offset = "0xE62AFC", VA = "0xE62AFC")]
		private void CalculateSpriteBased(Sprite sprite, BorderMode borderMode)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xE6372C", Offset = "0xE6372C", VA = "0xE6372C")]
		private static Vector4 AdjustBorders(Vector4 border, Vector4 rect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xE63088", Offset = "0xE63088", VA = "0xE63088")]
		private void CalculateTextureBased(Texture2D texture, Rect uvRect)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xE63188", Offset = "0xE63188", VA = "0xE63188")]
		private void CalculateSolidFill()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xE633D4", Offset = "0xE633D4", VA = "0xE633D4")]
		private void FillCommonParameters()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xE6362C", Offset = "0xE6362C", VA = "0xE6362C")]
		private float GraphicToCanvasScale(Sprite sprite)
		{
			return default(float);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xE639C0", Offset = "0xE639C0", VA = "0xE639C0")]
		private Matrix4x4 WorldToMask()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xE6144C", Offset = "0xE6144C", VA = "0xE6144C")]
		private Vector4 LocalMaskRect(Vector4 border)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xE6383C", Offset = "0xE6383C", VA = "0xE6383C")]
		private Vector2 MaskRepeat(Sprite sprite, Vector4 centralPart)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xE61694", Offset = "0xE61694", VA = "0xE61694")]
		private void WarnIfDefaultShaderIsNotSet()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xE632FC", Offset = "0xE632FC", VA = "0xE632FC")]
		private void WarnSpriteErrors(Errors errors)
		{
		}

		[Token(Token = "0x6001732")]
		private void Set<T>(ref T field, T value)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xE60858", Offset = "0xE60858", VA = "0xE60858")]
		private void SetShader(ref Shader field, Shader value, bool warnIfNotSet = true)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xE63BC4", Offset = "0xE63BC4", VA = "0xE63BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8731B8", Offset = "0x8731B8")]
		private void <.ctor>b__20_0(Material m)
		{
		}
	}
	[Token(Token = "0x200033B")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85ABBC", Offset = "0x85ABBC")]
	public class SoftMaskable : UIBehaviour, IMaterialModifier
	{
		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ISoftMask _mask;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Graphic _graphic;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _replacement;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _affectedByMask;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _destroyed;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8659EC", Offset = "0x8659EC")]
		private bool <shaderIsNotSupported>k__BackingField;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ISoftMask> s_softMasks;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Canvas> s_canvases;

		[Token(Token = "0x170001B9")]
		public bool shaderIsNotSupported
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xE65010", Offset = "0xE65010", VA = "0xE65010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8731C8", Offset = "0x8731C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001737")]
			[Address(RVA = "0xE65018", Offset = "0xE65018", VA = "0xE65018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8731D8", Offset = "0x8731D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public bool isMaskingEnabled
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0xE65024", Offset = "0xE65024", VA = "0xE65024")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BB")]
		public ISoftMask mask
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0xE65168", Offset = "0xE65168", VA = "0xE65168")]
			get
			{
				return null;
			}
			[Token(Token = "0x600173A")]
			[Address(RVA = "0xE65170", Offset = "0xE65170", VA = "0xE65170")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		private Graphic graphic
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0xE6563C", Offset = "0xE6563C", VA = "0xE6563C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private Material replacement
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0xE659E4", Offset = "0xE659E4", VA = "0xE659E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001748")]
			[Address(RVA = "0xE65274", Offset = "0xE65274", VA = "0xE65274")]
			set
			{
			}
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xE653A8", Offset = "0xE653A8", VA = "0xE653A8", Slot = "17")]
		public Material GetModifiedMaterial(Material baseMaterial)
		{
			return null;
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xE63EC4", Offset = "0xE63EC4", VA = "0xE63EC4")]
		public void Invalidate()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xE63FAC", Offset = "0xE63FAC", VA = "0xE63FAC")]
		public void MaskMightChanged()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xE657F8", Offset = "0xE657F8", VA = "0xE657F8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xE65828", Offset = "0xE65828", VA = "0xE65828", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xE65938", Offset = "0xE65938", VA = "0xE65938", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xE65964", Offset = "0xE65964", VA = "0xE65964", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xE65990", Offset = "0xE65990", VA = "0xE65990", Slot = "12")]
		protected override void OnTransformParentChanged()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xE659B8", Offset = "0xE659B8", VA = "0xE659B8", Slot = "15")]
		protected override void OnCanvasHierarchyChanged()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xE659E0", Offset = "0xE659E0", VA = "0xE659E0")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xE65868", Offset = "0xE65868", VA = "0xE65868")]
		private void RequestChildTransformUpdate()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xE656D0", Offset = "0xE656D0", VA = "0xE656D0")]
		private bool FindMaskOrDie()
		{
			return default(bool);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xE659EC", Offset = "0xE659EC", VA = "0xE659EC")]
		private static ISoftMask NearestMask(Transform transform, out bool processedByThisMask, bool enabledOnly = true)
		{
			return null;
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xE65B28", Offset = "0xE65B28", VA = "0xE65B28")]
		private static ISoftMask GetISoftMask(Transform current, bool shouldBeEnabled = true)
		{
			return null;
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xE65C9C", Offset = "0xE65C9C", VA = "0xE65C9C")]
		private static bool IsOverridingSortingCanvas(Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x600174D")]
		private static T GetComponent<T>(Component component, List<T> cachedList) where T : class
		{
			return null;
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xE654F8", Offset = "0xE654F8", VA = "0xE654F8")]
		private void SetShaderNotSupported(Material material)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xE65D78", Offset = "0xE65D78", VA = "0xE65D78")]
		public SoftMaskable()
		{
		}
	}
}
namespace SoftMasking.TextMeshPro
{
	[Token(Token = "0x200033C")]
	[GlobalMaterialReplacer]
	public class MaterialReplacer : IMaterialReplacer
	{
		[Token(Token = "0x170001BE")]
		public int order
		{
			[Token(Token = "0x6001751")]
			[Address(RVA = "0xE65E24", Offset = "0xE65E24", VA = "0xE65E24", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xE65E2C", Offset = "0xE65E2C", VA = "0xE65E2C", Slot = "5")]
		public Material Replace(Material material)
		{
			return null;
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xE65FD0", Offset = "0xE65FD0", VA = "0xE65FD0")]
		public MaterialReplacer()
		{
		}
	}
}
namespace SoftMasking.Extensions
{
	[Token(Token = "0x200033D")]
	public static class MaterialOps
	{
		[Token(Token = "0x6001754")]
		[Address(RVA = "0xE5DE70", Offset = "0xE5DE70", VA = "0xE5DE70")]
		public static bool SupportsSoftMask(this Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xE5DECC", Offset = "0xE5DECC", VA = "0xE5DECC")]
		public static bool HasDefaultUIShader(this Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xE5DF6C", Offset = "0xE5DF6C", VA = "0xE5DF6C")]
		public static bool HasDefaultETC1UIShader(this Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xE5E00C", Offset = "0xE5E00C", VA = "0xE5E00C")]
		public static void EnableKeyword(this Material mat, string keyword, bool enabled)
		{
		}
	}
}
namespace SoftMasking.Samples
{
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85AC38", Offset = "0x85AC38")]
	public class Draggable : UIBehaviour, IDragHandler, IEventSystemHandler
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RectTransform _rectTransform;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xE5F638", Offset = "0xE5F638", VA = "0xE5F638", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xE5F69C", Offset = "0xE5F69C", VA = "0xE5F69C", Slot = "17")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xE5F760", Offset = "0xE5F760", VA = "0xE5F760")]
		public Draggable()
		{
		}
	}
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85AC9C", Offset = "0x85AC9C")]
	public class HorizontalFovSetter : MonoBehaviour
	{
		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float horizontalFov;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera _camera;

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xE5F768", Offset = "0xE5F768", VA = "0xE5F768")]
		public void Awake()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xE5F7C0", Offset = "0xE5F7C0", VA = "0xE5F7C0")]
		public void Update()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xE5F808", Offset = "0xE5F808", VA = "0xE5F808")]
		public HorizontalFovSetter()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class Item : MonoBehaviour
	{
		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image image;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text title;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text description;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform healthBar;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform damageBar;

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xE5F810", Offset = "0xE5F810", VA = "0xE5F810")]
		public void Set(string name, Sprite sprite, Color color, float health, float damage)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xE5FA70", Offset = "0xE5FA70", VA = "0xE5FA70")]
		public Item()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class ItemsGenerator : MonoBehaviour
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform target;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite image;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int count;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string baseName;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Item itemPrefab;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color[] colors;

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xE5FA78", Offset = "0xE5FA78", VA = "0xE5FA78")]
		public void Generate()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xE5FCE0", Offset = "0xE5FCE0", VA = "0xE5FCE0")]
		private void DestroyChildren()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xE5FDA0", Offset = "0xE5FDA0", VA = "0xE5FDA0")]
		public ItemsGenerator()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class Minimap : MonoBehaviour
	{
		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform map;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform marker;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8659FC", Offset = "0x8659FC")]
		public float minZoom;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxZoom;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float zoomStep;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _zoom;

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xE5FEE4", Offset = "0xE5FEE4", VA = "0xE5FEE4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xE5FF94", Offset = "0xE5FF94", VA = "0xE5FF94")]
		public void ZoomIn()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xE600B8", Offset = "0xE600B8", VA = "0xE600B8")]
		public void ZoomOut()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xE60030", Offset = "0xE60030", VA = "0xE60030")]
		private float Clamp(float zoom)
		{
			return default(float);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xE60154", Offset = "0xE60154", VA = "0xE60154")]
		public Minimap()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class SoftMaskSampleChooser : MonoBehaviour
	{
		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DC68", Offset = "0x85DC68")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string activeSceneName;

			[Token(Token = "0x6002DF9")]
			[Address(RVA = "0xE602D0", Offset = "0xE602D0", VA = "0xE602D0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002DFA")]
			[Address(RVA = "0xE60374", Offset = "0xE60374", VA = "0xE60374")]
			internal bool <Start>b__0(Dropdown.OptionData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dropdown dropdown;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text fallbackLabel;

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xE60168", Offset = "0xE60168", VA = "0xE60168")]
		public void Start()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xE602D8", Offset = "0xE602D8", VA = "0xE602D8")]
		public void Choose(int sampleIndex)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xE6036C", Offset = "0xE6036C", VA = "0xE6036C")]
		public SoftMaskSampleChooser()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class SoftMaskToggler : MonoBehaviour
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject mask;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doNotTouchImage;

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xE60398", Offset = "0xE60398", VA = "0xE60398")]
		public void Toggle(bool enabled)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xE604AC", Offset = "0xE604AC", VA = "0xE604AC")]
		public SoftMaskToggler()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class Tooltip : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform tooltip;

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xE604B4", Offset = "0xE604B4", VA = "0xE604B4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xE60650", Offset = "0xE60650", VA = "0xE60650", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xE60680", Offset = "0xE60680", VA = "0xE60680", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xE606B0", Offset = "0xE606B0", VA = "0xE606B0")]
		public Tooltip()
		{
		}
	}
}
namespace Sun_Temple
{
	[Token(Token = "0x2000346")]
	public class MoveToLayer : MonoBehaviour
	{
		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int layer;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool alsoMoveChildren;

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xE69A58", Offset = "0xE69A58", VA = "0xE69A58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xE69AC8", Offset = "0xE69AC8", VA = "0xE69AC8")]
		private void SetChildLayerRecursive(Transform t, int layer)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xE69D64", Offset = "0xE69D64", VA = "0xE69D64")]
		public MoveToLayer()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class CursorLock : MonoBehaviour
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isLocked;

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xE699B8", Offset = "0xE699B8", VA = "0xE699B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xE699C4", Offset = "0xE699C4", VA = "0xE699C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xE69A50", Offset = "0xE69A50", VA = "0xE69A50")]
		public CursorLock()
		{
		}
	}
}
namespace SunTemple
{
	[Token(Token = "0x2000348")]
	public class CullDistanceVolume : MonoBehaviour
	{
		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxDistance;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool visualizeMaxDistance;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string playerTag;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] alwaysVisibleLayers;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject player;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera playerCamera;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] storedCullDistances;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool scriptIsEnabled;

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xE67570", Offset = "0xE67570", VA = "0xE67570")]
		private void Start()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xE67880", Offset = "0xE67880", VA = "0xE67880")]
		private bool Contains(int x, int[] y)
		{
			return default(bool);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xE678D0", Offset = "0xE678D0", VA = "0xE678D0")]
		private void EditCullDistances(Camera cam)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xE679A8", Offset = "0xE679A8", VA = "0xE679A8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xE67A04", Offset = "0xE67A04", VA = "0xE67A04")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xE67A68", Offset = "0xE67A68", VA = "0xE67A68")]
		public CullDistanceVolume()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class CullDistances : MonoBehaviour
	{
		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDistance;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] alwaysVisibleLayers;

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xE67B14", Offset = "0xE67B14", VA = "0xE67B14")]
		private void Start()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xE67C14", Offset = "0xE67C14", VA = "0xE67C14")]
		private bool Contains(int x, int[] y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xE67C64", Offset = "0xE67C64", VA = "0xE67C64")]
		public CullDistances()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class DisableRenderer : MonoBehaviour
	{
		[Token(Token = "0x6001781")]
		[Address(RVA = "0xE67DD0", Offset = "0xE67DD0", VA = "0xE67DD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xE67E34", Offset = "0xE67E34", VA = "0xE67E34")]
		public DisableRenderer()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class DistanceHide : MonoBehaviour
	{
		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int distance;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool visualizeDistance;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string playerTag;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] objectsToDisable;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject Player;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool scriptIsEnabled;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool screenshotMode;

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xE67E3C", Offset = "0xE67E3C", VA = "0xE67E3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xE680F4", Offset = "0xE680F4", VA = "0xE680F4")]
		private void CheckForDistance()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xE683A8", Offset = "0xE683A8", VA = "0xE683A8")]
		public DistanceHide()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class TriggerArea : MonoBehaviour
	{
		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject targetObjects;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string playerTag;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool startAsVisible;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool scriptIsEnabled;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool screenshotMode;

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xE69584", Offset = "0xE69584", VA = "0xE69584")]
		private void Start()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xE696F0", Offset = "0xE696F0", VA = "0xE696F0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xE69754", Offset = "0xE69754", VA = "0xE69754")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xE697B8", Offset = "0xE697B8", VA = "0xE697B8")]
		public TriggerArea()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public static class CircularLerp
	{
		[Token(Token = "0x600178A")]
		[Address(RVA = "0xE6749C", Offset = "0xE6749C", VA = "0xE6749C")]
		public static float Clerp(float start, float end, float value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200034E")]
	public class CursorManager : MonoBehaviour
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CursorManager instance;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite defaultCursor;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite lockedCursor;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite doorCursor;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image img;

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xE67CF0", Offset = "0xE67CF0", VA = "0xE67CF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xE67D5C", Offset = "0xE67D5C", VA = "0xE67D5C")]
		public void SetCursorToLocked()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xE67D80", Offset = "0xE67D80", VA = "0xE67D80")]
		public void SetCursorToDoor()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xE67DA4", Offset = "0xE67DA4", VA = "0xE67DA4")]
		public void SetCursorToDefault()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xE67DC8", Offset = "0xE67DC8", VA = "0xE67DC8")]
		public CursorManager()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class Door : MonoBehaviour
	{
		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsLocked;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool DoorClosed;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float OpenRotationAmount;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RotationSpeed;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MaxDistance;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string playerTag;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider DoorCollider;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject Player;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera Cam;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CursorManager cursor;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 StartRotation;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float StartAngle;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float EndAngle;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float LerpTime;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float CurrentLerpTime;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool Rotating;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool scriptIsEnabled;

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xE68414", Offset = "0xE68414", VA = "0xE68414")]
		private void Start()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xE6884C", Offset = "0xE6884C", VA = "0xE6884C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xE68A10", Offset = "0xE68A10", VA = "0xE68A10")]
		private void TryToOpen()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xE68C08", Offset = "0xE68C08", VA = "0xE68C08")]
		private void CursorHint()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xE68E20", Offset = "0xE68E20", VA = "0xE68E20")]
		public void Activate()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xE68904", Offset = "0xE68904", VA = "0xE68904")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xE68E30", Offset = "0xE68E30", VA = "0xE68E30")]
		private void Open()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xE68E9C", Offset = "0xE68E9C", VA = "0xE68E9C")]
		private void Close()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xE68F24", Offset = "0xE68F24", VA = "0xE68F24")]
		public Door()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class ExposureArea : MonoBehaviour
	{
		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool scriptIsEnabled;

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xE68FA4", Offset = "0xE68FA4", VA = "0xE68FA4")]
		private void Start()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xE690EC", Offset = "0xE690EC", VA = "0xE690EC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xE691E4", Offset = "0xE691E4", VA = "0xE691E4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xE692DC", Offset = "0xE692DC", VA = "0xE692DC")]
		public ExposureArea()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class ExposureManager : MonoBehaviour
	{
		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ExposureManager instance;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light Sun;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ExteriorSunIntensity;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float InteriorSunIntensity;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AdaptationSpeed;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string PlayerTag;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float StartIntensity;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float EndIntensity;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float LerpTime;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float CurrentLerpTime;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool LerpLight;

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xE692E4", Offset = "0xE692E4", VA = "0xE692E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xE69420", Offset = "0xE69420", VA = "0xE69420")]
		private void Update()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xE69430", Offset = "0xE69430", VA = "0xE69430")]
		private void LerpIntensity()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xE69294", Offset = "0xE69294", VA = "0xE69294")]
		public void SetSunIntensityToExterior()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xE6919C", Offset = "0xE6919C", VA = "0xE6919C")]
		public void SetSunIntensityToInterior()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xE69514", Offset = "0xE69514", VA = "0xE69514")]
		public ExposureManager()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class CharController_Motor : MonoBehaviour
	{
		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivity;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterController character;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject cam;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float moveFB;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float moveLR;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float rotHorizontal;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float rotVertical;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool webGLRightClickRotation;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float gravity;

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xE66FD0", Offset = "0xE66FD0", VA = "0xE66FD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xE67054", Offset = "0xE67054", VA = "0xE67054")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xE67268", Offset = "0xE67268", VA = "0xE67268")]
		private void CameraRotation(GameObject cam, float rotHorizontal, float rotVertical)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xE67474", Offset = "0xE67474", VA = "0xE67474")]
		public CharController_Motor()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class WindSwaySimple : MonoBehaviour
	{
		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float windIntensity;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float swayFrequency;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 direction;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float seed;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialEulerAngles;

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xE69818", Offset = "0xE69818", VA = "0xE69818")]
		private void Start()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xE6986C", Offset = "0xE6986C", VA = "0xE6986C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xE6994C", Offset = "0xE6994C", VA = "0xE6994C")]
		public WindSwaySimple()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x2000354")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x20006FB")]
		private class CameraState
		{
			[Token(Token = "0x4002F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4002F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4002F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4002F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4002F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4002F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6002DFB")]
			[Address(RVA = "0xB59168", Offset = "0xB59168", VA = "0xB59168")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6002DFC")]
			[Address(RVA = "0xB597D0", Offset = "0xB597D0", VA = "0xB597D0")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6002DFD")]
			[Address(RVA = "0xB598A0", Offset = "0xB598A0", VA = "0xB598A0")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6002DFE")]
			[Address(RVA = "0xB599C4", Offset = "0xB599C4", VA = "0xB599C4")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6002DFF")]
			[Address(RVA = "0xB59BF4", Offset = "0xB59BF4", VA = "0xB59BF4")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x865A0C", Offset = "0x865A0C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865A0C", Offset = "0x865A0C")]
		public float boost;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865A6C", Offset = "0x865A6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865A6C", Offset = "0x865A6C")]
		public float positionLerpTime;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x865AC4", Offset = "0x865AC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865AC4", Offset = "0x865AC4")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865B24", Offset = "0x865B24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865B24", Offset = "0x865B24")]
		public float rotationLerpTime;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x865B7C", Offset = "0x865B7C")]
		public bool invertY;

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xB59110", Offset = "0xB59110", VA = "0xB59110")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xB591F0", Offset = "0xB591F0", VA = "0xB591F0")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xB594AC", Offset = "0xB594AC", VA = "0xB594AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xB59A54", Offset = "0xB59A54", VA = "0xB59A54")]
		public SimpleCameraController()
		{
		}
	}
}
namespace MirzaBeig.ParticleSystems.Demos
{
	[Token(Token = "0x2000355")]
	public class MouseFollow : MonoBehaviour
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float distanceFromCamera;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ignoreTimeScale;

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xAB3624", Offset = "0xAB3624", VA = "0xAB3624")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xAB3628", Offset = "0xAB3628", VA = "0xAB3628")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xAB362C", Offset = "0xAB362C", VA = "0xAB362C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xAB37B4", Offset = "0xAB37B4", VA = "0xAB37B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xAB37B8", Offset = "0xAB37B8", VA = "0xAB37B8")]
		public MouseFollow()
		{
		}
	}
}
namespace UnitySampleAssets.Utility
{
	[Token(Token = "0x2000356")]
	public class ActivateTrigger : MonoBehaviour
	{
		[Token(Token = "0x20006FC")]
		public enum Mode
		{
			[Token(Token = "0x4002F86")]
			Trigger,
			[Token(Token = "0x4002F87")]
			Replace,
			[Token(Token = "0x4002F88")]
			Activate,
			[Token(Token = "0x4002F89")]
			Enable,
			[Token(Token = "0x4002F8A")]
			Animate,
			[Token(Token = "0x4002F8B")]
			Deactivate
		}

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode action;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object target;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject source;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int triggerCount;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool repeatTrigger;

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xAACF18", Offset = "0xAACF18", VA = "0xAACF18")]
		private void DoActivateTrigger()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xAAD380", Offset = "0xAAD380", VA = "0xAAD380")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xAAD384", Offset = "0xAAD384", VA = "0xAAD384")]
		public ActivateTrigger()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class AutoMobileShaderSwitch : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006FD")]
		public class ReplacementDefinition
		{
			[Token(Token = "0x4002F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Shader original;

			[Token(Token = "0x4002F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Shader replacement;

			[Token(Token = "0x6002E00")]
			[Address(RVA = "0xAADD04", Offset = "0xAADD04", VA = "0xAADD04")]
			public ReplacementDefinition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006FE")]
		public class ReplacementList
		{
			[Token(Token = "0x4002F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReplacementDefinition[] items;

			[Token(Token = "0x6002E01")]
			[Address(RVA = "0xAADD0C", Offset = "0xAADD0C", VA = "0xAADD0C")]
			public ReplacementList()
			{
			}
		}

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReplacementList replacements;

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xAAD39C", Offset = "0xAAD39C", VA = "0xAAD39C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xAADCFC", Offset = "0xAADCFC", VA = "0xAADCFC")]
		public AutoMobileShaderSwitch()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class AutoMoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006FF")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4002F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x4002F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x6002E02")]
			[Address(RVA = "0xAADEDC", Offset = "0xAADEDC", VA = "0xAADEDC")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float lastRealTime;

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xAADD6C", Offset = "0xAADD6C", VA = "0xAADD6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xAADD94", Offset = "0xAADD94", VA = "0xAADD94")]
		private void Update()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xAADED4", Offset = "0xAADED4", VA = "0xAADED4")]
		public AutoMoveAndRotate()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class CameraRefocus
	{
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Lookatpoint;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Parent;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 OrigCameraPos;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool refocus;

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xAADEEC", Offset = "0xAADEEC", VA = "0xAADEEC")]
		public CameraRefocus(Camera camera, Transform parent, Vector3 origCameraPos)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xAADF4C", Offset = "0xAADF4C", VA = "0xAADF4C")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xAADF54", Offset = "0xAADF54", VA = "0xAADF54")]
		public void ChangeParent(Transform parent)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xAADF5C", Offset = "0xAADF5C", VA = "0xAADF5C")]
		public void GetFocusPoint()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xAAE0D4", Offset = "0xAAE0D4", VA = "0xAAE0D4")]
		public void SetFocusPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035A")]
	public class CurveControlledBob
	{
		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _bobBaseInterval;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 _originalCameraPosition;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _time;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float HorizontalBobRange;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float VerticalBobRange;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _cyclePositionX;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _cyclePositionY;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xAAE128", Offset = "0xAAE128", VA = "0xAAE128")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xAAE1CC", Offset = "0xAAE1CC", VA = "0xAAE1CC")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xAAE2F4", Offset = "0xAAE2F4", VA = "0xAAE2F4")]
		public CurveControlledBob()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class DragRigidbody : MonoBehaviour
	{
		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DC78", Offset = "0x85DC78")]
		private sealed class <DragObject>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragRigidbody <>4__this;

			[Token(Token = "0x4002F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distance;

			[Token(Token = "0x4002F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <oldDrag>5__2;

			[Token(Token = "0x4002F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <oldAngularDrag>5__3;

			[Token(Token = "0x4002F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Camera <mainCamera>5__4;

			[Token(Token = "0x170004BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E06")]
				[Address(RVA = "0xAAED54", Offset = "0xAAED54", VA = "0xAAED54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E08")]
				[Address(RVA = "0xAAEDBC", Offset = "0xAAEDBC", VA = "0xAAEDBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E03")]
			[Address(RVA = "0xAAEAC4", Offset = "0xAAEAC4", VA = "0xAAEAC4")]
			[DebuggerHidden]
			public <DragObject>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002E04")]
			[Address(RVA = "0xAAEB10", Offset = "0xAAEB10", VA = "0xAAEB10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E05")]
			[Address(RVA = "0xAAEB14", Offset = "0xAAEB14", VA = "0xAAEB14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E07")]
			[Address(RVA = "0xAAED5C", Offset = "0xAAED5C", VA = "0xAAED5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float spring;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float damper;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float drag;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float angularDrag;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float distance;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool attachToCenterOfMass;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpringJoint springJoint;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xAAE534", Offset = "0xAAE534", VA = "0xAAE534")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xAAEA44", Offset = "0xAAEA44", VA = "0xAAEA44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873228", Offset = "0x873228")]
		private IEnumerator DragObject(float distance)
		{
			return null;
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xAAE994", Offset = "0xAAE994", VA = "0xAAE994")]
		private Camera FindCamera()
		{
			return null;
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xAAEAF0", Offset = "0xAAEAF0", VA = "0xAAEAF0")]
		public DragRigidbody()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class DynamicShadowSettings : MonoBehaviour
	{
		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light sunLight;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minHeight;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minShadowDistance;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minShadowBias;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxHeight;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxShadowDistance;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxShadowBias;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float adaptTime;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float smoothHeight;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float changeSpeed;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float originalStrength;

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xAAEDC4", Offset = "0xAAEDC4", VA = "0xAAEDC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xAAEDF8", Offset = "0xAAEDF8", VA = "0xAAEDF8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xAAF06C", Offset = "0xAAF06C", VA = "0xAAF06C")]
		public DynamicShadowSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035D")]
	public class FOVKick
	{
		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DC88", Offset = "0x85DC88")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4002F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170004BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E0C")]
				[Address(RVA = "0xAAF668", Offset = "0xAAF668", VA = "0xAAF668", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E0E")]
				[Address(RVA = "0xAAF6D0", Offset = "0xAAF6D0", VA = "0xAAF6D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E09")]
			[Address(RVA = "0xAAF238", Offset = "0xAAF238", VA = "0xAAF238")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002E0A")]
			[Address(RVA = "0xAAF504", Offset = "0xAAF504", VA = "0xAAF504", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E0B")]
			[Address(RVA = "0xAAF508", Offset = "0xAAF508", VA = "0xAAF508", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E0D")]
			[Address(RVA = "0xAAF670", Offset = "0xAAF670", VA = "0xAAF670", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DC98", Offset = "0x85DC98")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4002F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170004C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E12")]
				[Address(RVA = "0xAAF494", Offset = "0xAAF494", VA = "0xAAF494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E14")]
				[Address(RVA = "0xAAF4FC", Offset = "0xAAF4FC", VA = "0xAAF4FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E0F")]
			[Address(RVA = "0xAAF2D4", Offset = "0xAAF2D4", VA = "0xAAF2D4")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002E10")]
			[Address(RVA = "0xAAF31C", Offset = "0xAAF31C", VA = "0xAAF31C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E11")]
			[Address(RVA = "0xAAF320", Offset = "0xAAF320", VA = "0xAAF320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E13")]
			[Address(RVA = "0xAAF49C", Offset = "0xAAF49C", VA = "0xAAF49C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float OriginalFOV;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xAAF0A0", Offset = "0xAAF0A0", VA = "0xAAF0A0")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xAAF0E0", Offset = "0xAAF0E0", VA = "0xAAF0E0")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xAAF1C0", Offset = "0xAAF1C0", VA = "0xAAF1C0")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xAAF1C8", Offset = "0xAAF1C8", VA = "0xAAF1C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87328C", Offset = "0x87328C")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xAAF264", Offset = "0xAAF264", VA = "0xAAF264")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8732F0", Offset = "0x8732F0")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xAAF300", Offset = "0xAAF300", VA = "0xAAF300")]
		public FOVKick()
		{
		}
	}
	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85AD00", Offset = "0x85AD00")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float fpsMeasurePeriod;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int fpsAccumulator;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float fpsNextPeriod;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int currentFps;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string display;

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xAAF6D8", Offset = "0xAAF6D8", VA = "0xAAF6D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xAAF708", Offset = "0xAAF708", VA = "0xAAF708")]
		private void Update()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xAAF7F8", Offset = "0xAAF7F8", VA = "0xAAF7F8")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xAAF858", Offset = "0xAAF858", VA = "0xAAF858")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xAAF938", Offset = "0xAAF938", VA = "0xAAF938")]
		public FollowTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000360")]
	public class LerpControlledBob
	{
		[Token(Token = "0x2000703")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DCA8", Offset = "0x85DCA8")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x4002FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x170004C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E18")]
				[Address(RVA = "0xAAFC28", Offset = "0xAAFC28", VA = "0xAAFC28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E1A")]
				[Address(RVA = "0xAAFC90", Offset = "0xAAFC90", VA = "0xAAFC90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E15")]
			[Address(RVA = "0xAAFA10", Offset = "0xAAFA10", VA = "0xAAFA10")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002E16")]
			[Address(RVA = "0xAAFA44", Offset = "0xAAFA44", VA = "0xAAFA44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E17")]
			[Address(RVA = "0xAAFA48", Offset = "0xAAFA48", VA = "0xAAFA48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E19")]
			[Address(RVA = "0xAAFC30", Offset = "0xAAFC30", VA = "0xAAFC30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float offset;

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xAAF998", Offset = "0xAAF998", VA = "0xAAF998")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xAAF9A0", Offset = "0xAAF9A0", VA = "0xAAF9A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873354", Offset = "0x873354")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xAAFA3C", Offset = "0xAAFA3C", VA = "0xAAFA3C")]
		public LerpControlledBob()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class ObjectResetter : MonoBehaviour
	{
		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DCB8", Offset = "0x85DCB8")]
		private sealed class <ResetCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ObjectResetter <>4__this;

			[Token(Token = "0x170004C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E1E")]
				[Address(RVA = "0xAB00B4", Offset = "0xAB00B4", VA = "0xAB00B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E20")]
				[Address(RVA = "0xAB011C", Offset = "0xAB011C", VA = "0xAB011C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E1B")]
			[Address(RVA = "0xAAFE18", Offset = "0xAAFE18", VA = "0xAAFE18")]
			[DebuggerHidden]
			public <ResetCoroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002E1C")]
			[Address(RVA = "0xAAFE4C", Offset = "0xAAFE4C", VA = "0xAAFE4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E1D")]
			[Address(RVA = "0xAAFE50", Offset = "0xAAFE50", VA = "0xAAFE50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E1F")]
			[Address(RVA = "0xAB00BC", Offset = "0xAB00BC", VA = "0xAB00BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 originalPosition;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion originalRotation;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Transform> originalStructure;

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xAAFC98", Offset = "0xAAFC98", VA = "0xAAFC98")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xAAFD6C", Offset = "0xAAFD6C", VA = "0xAAFD6C")]
		public void DelayedReset(float delay)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xAAFD98", Offset = "0xAAFD98", VA = "0xAAFD98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8733B8", Offset = "0x8733B8")]
		public IEnumerator ResetCoroutine(float delay)
		{
			return null;
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xAAFE44", Offset = "0xAAFE44", VA = "0xAAFE44")]
		public ObjectResetter()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class ParticleSystemDestroyer : MonoBehaviour
	{
		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DCC8", Offset = "0x85DCC8")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParticleSystemDestroyer <>4__this;

			[Token(Token = "0x4002FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ParticleSystem[] <systems>5__2;

			[Token(Token = "0x4002FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <stopTime>5__3;

			[Token(Token = "0x170004C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E24")]
				[Address(RVA = "0xAB0514", Offset = "0xAB0514", VA = "0xAB0514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E26")]
				[Address(RVA = "0xAB057C", Offset = "0xAB057C", VA = "0xAB057C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E21")]
			[Address(RVA = "0xAB0194", Offset = "0xAB0194", VA = "0xAB0194")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002E22")]
			[Address(RVA = "0xAB01E0", Offset = "0xAB01E0", VA = "0xAB01E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E23")]
			[Address(RVA = "0xAB01E4", Offset = "0xAB01E4", VA = "0xAB01E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E25")]
			[Address(RVA = "0xAB051C", Offset = "0xAB051C", VA = "0xAB051C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minDuration;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxDuration;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float maxLifetime;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool earlyStop;

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xAB0124", Offset = "0xAB0124", VA = "0xAB0124")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87341C", Offset = "0x87341C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xAB01C0", Offset = "0xAB01C0", VA = "0xAB01C0")]
		public void Stop()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xAB01CC", Offset = "0xAB01CC", VA = "0xAB01CC")]
		public ParticleSystemDestroyer()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class PlatformSpecificContent : MonoBehaviour
	{
		[Token(Token = "0x2000706")]
		private enum BuildTargetGroup
		{
			[Token(Token = "0x4002FAE")]
			Standalone,
			[Token(Token = "0x4002FAF")]
			Mobile
		}

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BuildTargetGroup showOnlyOn;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] content;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool childrenOfThisObject;

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xAB0584", Offset = "0xAB0584", VA = "0xAB0584")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xAB0588", Offset = "0xAB0588", VA = "0xAB0588")]
		private void CheckEnableContent()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xAB05A4", Offset = "0xAB05A4", VA = "0xAB05A4")]
		private void EnableContent(bool enabled)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xAB08C4", Offset = "0xAB08C4", VA = "0xAB08C4")]
		public PlatformSpecificContent()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class SimpleActivatorMenu : MonoBehaviour
	{
		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text camSwitchButton;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] objects;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int currentActiveObject;

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xAB0924", Offset = "0xAB0924", VA = "0xAB0924")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xAB0990", Offset = "0xAB0990", VA = "0xAB0990")]
		public void NextCamera()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xAB0A68", Offset = "0xAB0A68", VA = "0xAB0A68")]
		public SimpleActivatorMenu()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class SimpleMouseRotator : MonoBehaviour
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 rotationRange;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationSpeed;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dampingTime;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoZeroVerticalOnMobile;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool autoZeroHorizontalOnMobile;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool relative;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 targetAngles;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 followAngles;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 followVelocity;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion originalRotation;

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xAB0A70", Offset = "0xAB0A70", VA = "0xAB0A70")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xAB0AAC", Offset = "0xAB0AAC", VA = "0xAB0AAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xAB0EE0", Offset = "0xAB0EE0", VA = "0xAB0EE0")]
		public SimpleMouseRotator()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class TimedObjectActivator : MonoBehaviour
	{
		[Token(Token = "0x2000707")]
		public enum Action
		{
			[Token(Token = "0x4002FB1")]
			Activate,
			[Token(Token = "0x4002FB2")]
			Deactivate,
			[Token(Token = "0x4002FB3")]
			Destroy,
			[Token(Token = "0x4002FB4")]
			ReloadLevel,
			[Token(Token = "0x4002FB5")]
			Call
		}

		[Serializable]
		[Token(Token = "0x2000708")]
		public class Entry
		{
			[Token(Token = "0x4002FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject target;

			[Token(Token = "0x4002FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action action;

			[Token(Token = "0x4002FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float delay;

			[Token(Token = "0x6002E27")]
			[Address(RVA = "0xAB16D0", Offset = "0xAB16D0", VA = "0xAB16D0")]
			public Entry()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000709")]
		public class Entries
		{
			[Token(Token = "0x4002FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Entry[] entries;

			[Token(Token = "0x6002E28")]
			[Address(RVA = "0xAB1308", Offset = "0xAB1308", VA = "0xAB1308")]
			public Entries()
			{
			}
		}

		[Token(Token = "0x200070A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DCD8", Offset = "0x85DCD8")]
		private sealed class <Activate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Entry entry;

			[Token(Token = "0x170004C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E2C")]
				[Address(RVA = "0xAB13DC", Offset = "0xAB13DC", VA = "0xAB13DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E2E")]
				[Address(RVA = "0xAB1444", Offset = "0xAB1444", VA = "0xAB1444", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E29")]
			[Address(RVA = "0xAB121C", Offset = "0xAB121C", VA = "0xAB121C")]
			[DebuggerHidden]
			public <Activate>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0xAB1310", Offset = "0xAB1310", VA = "0xAB1310", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0xAB1314", Offset = "0xAB1314", VA = "0xAB1314", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E2D")]
			[Address(RVA = "0xAB13E4", Offset = "0xAB13E4", VA = "0xAB13E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DCE8", Offset = "0x85DCE8")]
		private sealed class <Deactivate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Entry entry;

			[Token(Token = "0x170004CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E32")]
				[Address(RVA = "0xAB1518", Offset = "0xAB1518", VA = "0xAB1518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E34")]
				[Address(RVA = "0xAB1580", Offset = "0xAB1580", VA = "0xAB1580", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0xAB1248", Offset = "0xAB1248", VA = "0xAB1248")]
			[DebuggerHidden]
			public <Deactivate>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002E30")]
			[Address(RVA = "0xAB144C", Offset = "0xAB144C", VA = "0xAB144C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E31")]
			[Address(RVA = "0xAB1450", Offset = "0xAB1450", VA = "0xAB1450", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E33")]
			[Address(RVA = "0xAB1520", Offset = "0xAB1520", VA = "0xAB1520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200070C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DCF8", Offset = "0x85DCF8")]
		private sealed class <ReloadLevel>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Entry entry;

			[Token(Token = "0x170004CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E38")]
				[Address(RVA = "0xAB1660", Offset = "0xAB1660", VA = "0xAB1660", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E3A")]
				[Address(RVA = "0xAB16C8", Offset = "0xAB16C8", VA = "0xAB16C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E35")]
			[Address(RVA = "0xAB1274", Offset = "0xAB1274", VA = "0xAB1274")]
			[DebuggerHidden]
			public <ReloadLevel>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002E36")]
			[Address(RVA = "0xAB1588", Offset = "0xAB1588", VA = "0xAB1588", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E37")]
			[Address(RVA = "0xAB158C", Offset = "0xAB158C", VA = "0xAB158C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E39")]
			[Address(RVA = "0xAB1668", Offset = "0xAB1668", VA = "0xAB1668", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Entries entries;

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xAB0FA0", Offset = "0xAB0FA0", VA = "0xAB0FA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xAB10CC", Offset = "0xAB10CC", VA = "0xAB10CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873480", Offset = "0x873480")]
		private IEnumerator Activate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xAB113C", Offset = "0xAB113C", VA = "0xAB113C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8734E4", Offset = "0x8734E4")]
		private IEnumerator Deactivate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xAB11AC", Offset = "0xAB11AC", VA = "0xAB11AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873548", Offset = "0x873548")]
		private IEnumerator ReloadLevel(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xAB12A0", Offset = "0xAB12A0", VA = "0xAB12A0")]
		public TimedObjectActivator()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class TimedObjectDestructor : MonoBehaviour
	{
		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timeOut;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool detachChildren;

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xAB16D8", Offset = "0xAB16D8", VA = "0xAB16D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xAB1730", Offset = "0xAB1730", VA = "0xAB1730")]
		private void DestroyNow()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xAB17D0", Offset = "0xAB17D0", VA = "0xAB17D0")]
		public TimedObjectDestructor()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class WaypointCircuit : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200070D")]
		public class WaypointList
		{
			[Token(Token = "0x4002FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WaypointCircuit circuit;

			[Token(Token = "0x4002FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform[] items;

			[Token(Token = "0x6002E3B")]
			[Address(RVA = "0xB54868", Offset = "0xB54868", VA = "0xB54868")]
			public WaypointList()
			{
			}
		}

		[Token(Token = "0x200070E")]
		public struct RoutePoint
		{
			[Token(Token = "0x4002FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4002FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 direction;

			[Token(Token = "0x6002E3C")]
			[Address(RVA = "0x7666B8", Offset = "0x7666B8", VA = "0x7666B8")]
			public RoutePoint(Vector3 position, Vector3 direction)
			{
			}
		}

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaypointList waypointList;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool smoothRoute;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int numPoints;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] points;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] distances;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float editorVisualisationSubsteps;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x865C14", Offset = "0x865C14")]
		private float <Length>k__BackingField;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int p0n;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int p1n;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int p2n;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int p3n;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float i;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 P0;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 P1;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 P2;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 P3;

		[Token(Token = "0x170001BF")]
		public float Length
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xAB17E0", Offset = "0xAB17E0", VA = "0xAB17E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8735AC", Offset = "0x8735AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xAB17E8", Offset = "0xAB17E8", VA = "0xAB17E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8735BC", Offset = "0x8735BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public Transform[] Waypoints
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xAB17F0", Offset = "0xAB17F0", VA = "0xAB17F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xAB180C", Offset = "0xAB180C", VA = "0xAB180C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xAB1B34", Offset = "0xAB1B34", VA = "0xAB1B34")]
		public RoutePoint GetRoutePoint(float dist)
		{
			return default(RoutePoint);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xAB1C64", Offset = "0xAB1C64", VA = "0xAB1C64")]
		public Vector3 GetRoutePosition(float dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xAB1FBC", Offset = "0xAB1FBC", VA = "0xAB1FBC")]
		private Vector3 CatmullRom(Vector3 _P0, Vector3 _P1, Vector3 _P2, Vector3 _P3, float _i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xAB1868", Offset = "0xAB1868", VA = "0xAB1868")]
		private void CachePositionsAndDistances()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xAB2324", Offset = "0xAB2324", VA = "0xAB2324")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xAB25A4", Offset = "0xAB25A4", VA = "0xAB25A4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xAB232C", Offset = "0xAB232C", VA = "0xAB232C")]
		private void DrawGizmos(bool selected)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xAB25AC", Offset = "0xAB25AC", VA = "0xAB25AC")]
		public WaypointCircuit()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class WaypointProgressTracker : MonoBehaviour
	{
		[Token(Token = "0x200070F")]
		public enum ProgressStyle
		{
			[Token(Token = "0x4002FC8")]
			SmoothAlongRoute,
			[Token(Token = "0x4002FC9")]
			PointToPoint
		}

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaypointCircuit circuit;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float lookAheadForTargetOffset;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float lookAheadForTargetFactor;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lookAheadForSpeedOffset;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float lookAheadForSpeedFactor;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ProgressStyle progressStyle;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float pointToPointThreshold;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x865C94", Offset = "0x865C94")]
		private WaypointCircuit.RoutePoint <targetPoint>k__BackingField;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x865CA4", Offset = "0x865CA4")]
		private WaypointCircuit.RoutePoint <speedPoint>k__BackingField;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x865CB4", Offset = "0x865CB4")]
		private WaypointCircuit.RoutePoint <progressPoint>k__BackingField;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform target;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float progressDistance;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int progressNum;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastPosition;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float speed;

		[Token(Token = "0x170001C1")]
		public WaypointCircuit.RoutePoint targetPoint
		{
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0xB548C8", Offset = "0xB548C8", VA = "0xB548C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8735CC", Offset = "0x8735CC")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0xB548DC", Offset = "0xB548DC", VA = "0xB548DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8735DC", Offset = "0x8735DC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public WaypointCircuit.RoutePoint speedPoint
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xB548F0", Offset = "0xB548F0", VA = "0xB548F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8735EC", Offset = "0x8735EC")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x6001800")]
			[Address(RVA = "0xB54904", Offset = "0xB54904", VA = "0xB54904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8735FC", Offset = "0x8735FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public WaypointCircuit.RoutePoint progressPoint
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0xB54918", Offset = "0xB54918", VA = "0xB54918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87360C", Offset = "0x87360C")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x6001802")]
			[Address(RVA = "0xB5492C", Offset = "0xB5492C", VA = "0xB5492C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87361C", Offset = "0x87361C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xB54940", Offset = "0xB54940", VA = "0xB54940")]
		private void Start()
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xB54A24", Offset = "0xB54A24", VA = "0xB54A24")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xB54B00", Offset = "0xB54B00", VA = "0xB54B00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xB55068", Offset = "0xB55068", VA = "0xB55068")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xB55244", Offset = "0xB55244", VA = "0xB55244")]
		public WaypointProgressTracker()
		{
		}
	}
}
namespace UnitySampleAssets.CrossPlatformInput
{
	[Token(Token = "0x200036A")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x6001808")]
		[Address(RVA = "0xAAA75C", Offset = "0xAAA75C", VA = "0xAAA75C")]
		public void SetDownState(string name)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xAAA840", Offset = "0xAAA840", VA = "0xAAA840")]
		public void SetUpState(string name)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xAAA924", Offset = "0xAAA924", VA = "0xAAA924")]
		public void SetAxisPositiveState(string name)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xAAAA08", Offset = "0xAAAA08", VA = "0xAAAA08")]
		public void SetAxisNeutralState(string name)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xAAAAEC", Offset = "0xAAAAEC", VA = "0xAAAAEC")]
		public void SetAxisNegativeState(string name)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xAAABD0", Offset = "0xAAABD0", VA = "0xAAABD0")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000710")]
		public class VirtualAxis
		{
			[Token(Token = "0x4002FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CB70", Offset = "0x86CB70")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x4002FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CB80", Offset = "0x86CB80")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x170004CE")]
			public string name
			{
				[Token(Token = "0x6002E3D")]
				[Address(RVA = "0xAAB9E4", Offset = "0xAAB9E4", VA = "0xAAB9E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A51C", Offset = "0x87A51C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E3E")]
				[Address(RVA = "0xAAB9EC", Offset = "0xAAB9EC", VA = "0xAAB9EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A52C", Offset = "0x87A52C")]
				private set
				{
				}
			}

			[Token(Token = "0x170004CF")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6002E3F")]
				[Address(RVA = "0xAAB9F4", Offset = "0xAAB9F4", VA = "0xAAB9F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A53C", Offset = "0x87A53C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002E40")]
				[Address(RVA = "0xAAB9FC", Offset = "0xAAB9FC", VA = "0xAAB9FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A54C", Offset = "0x87A54C")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D0")]
			public float GetValue
			{
				[Token(Token = "0x6002E45")]
				[Address(RVA = "0xAABB0C", Offset = "0xAABB0C", VA = "0xAABB0C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170004D1")]
			public float GetValueRaw
			{
				[Token(Token = "0x6002E46")]
				[Address(RVA = "0xAABB14", Offset = "0xAABB14", VA = "0xAABB14")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6002E41")]
			[Address(RVA = "0xAABA08", Offset = "0xAABA08", VA = "0xAABA08")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6002E42")]
			[Address(RVA = "0xAABA10", Offset = "0xAABA10", VA = "0xAABA10")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6002E43")]
			[Address(RVA = "0xAABA9C", Offset = "0xAABA9C", VA = "0xAABA9C")]
			public void Remove()
			{
			}

			[Token(Token = "0x6002E44")]
			[Address(RVA = "0xAABB04", Offset = "0xAABB04", VA = "0xAABB04")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000711")]
		public class VirtualButton
		{
			[Token(Token = "0x4002FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CB90", Offset = "0x86CB90")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int lastPressedFrame;

			[Token(Token = "0x4002FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int releasedFrame;

			[Token(Token = "0x4002FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool pressed;

			[Token(Token = "0x4002FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86CBA0", Offset = "0x86CBA0")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x170004D2")]
			public string name
			{
				[Token(Token = "0x6002E47")]
				[Address(RVA = "0xAABB1C", Offset = "0xAABB1C", VA = "0xAABB1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A55C", Offset = "0x87A55C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E48")]
				[Address(RVA = "0xAABB24", Offset = "0xAABB24", VA = "0xAABB24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A56C", Offset = "0x87A56C")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D3")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6002E49")]
				[Address(RVA = "0xAABB2C", Offset = "0xAABB2C", VA = "0xAABB2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A57C", Offset = "0x87A57C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002E4A")]
				[Address(RVA = "0xAABB34", Offset = "0xAABB34", VA = "0xAABB34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87A58C", Offset = "0x87A58C")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D4")]
			public bool GetButton
			{
				[Token(Token = "0x6002E50")]
				[Address(RVA = "0xAABC94", Offset = "0xAABC94", VA = "0xAABC94")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004D5")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6002E51")]
				[Address(RVA = "0xAABC9C", Offset = "0xAABC9C", VA = "0xAABC9C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004D6")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6002E52")]
				[Address(RVA = "0xAABCC8", Offset = "0xAABCC8", VA = "0xAABCC8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002E4B")]
			[Address(RVA = "0xAABB40", Offset = "0xAABB40", VA = "0xAABB40")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0xAABB7C", Offset = "0xAABB7C", VA = "0xAABB7C")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0xAABBC4", Offset = "0xAABBC4", VA = "0xAABBC4")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0xAABC00", Offset = "0xAABC00", VA = "0xAABC00")]
			public void Released()
			{
			}

			[Token(Token = "0x6002E4F")]
			[Address(RVA = "0xAABC2C", Offset = "0xAABC2C", VA = "0xAABC2C")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput virtualInput;

		[Token(Token = "0x170001C4")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6001820")]
			[Address(RVA = "0xAAB664", Offset = "0xAAB664", VA = "0xAAB664")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xAAABD8", Offset = "0xAAABD8", VA = "0xAAABD8")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xAAAC44", Offset = "0xAAAC44", VA = "0xAAAC44")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xAAADE4", Offset = "0xAAADE4", VA = "0xAAADE4")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xAAAF84", Offset = "0xAAAF84", VA = "0xAAAF84")]
		public static void UnRegisterVirtualAxis(string _name)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xAAB0D4", Offset = "0xAAB0D4", VA = "0xAAB0D4")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xAAB1E4", Offset = "0xAAB1E4", VA = "0xAAB1E4")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xAAB2F0", Offset = "0xAAB2F0", VA = "0xAAB2F0")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xAAB3E8", Offset = "0xAAB3E8", VA = "0xAAB3E8")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xAAB358", Offset = "0xAAB358", VA = "0xAAB358")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xAAB450", Offset = "0xAAB450", VA = "0xAAB450")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xAAB4D0", Offset = "0xAAB4D0", VA = "0xAAB4D0")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xAAB550", Offset = "0xAAB550", VA = "0xAAB550")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xAAA7C0", Offset = "0xAAA7C0", VA = "0xAAA7C0")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xAAA8A4", Offset = "0xAAA8A4", VA = "0xAAA8A4")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xAAA988", Offset = "0xAAA988", VA = "0xAAA988")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xAAAB50", Offset = "0xAAAB50", VA = "0xAAAB50")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xAAAA6C", Offset = "0xAAAA6C", VA = "0xAAAA6C")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xAAB5D0", Offset = "0xAAB5D0", VA = "0xAAB5D0")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xAAB6E0", Offset = "0xAAB6E0", VA = "0xAAB6E0")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xAAB7DC", Offset = "0xAAB7DC", VA = "0xAAB7DC")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xAAB8E4", Offset = "0xAAB8E4", VA = "0xAAB8E4")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class InputAxisScrollbar : Scrollbar
	{
		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public string axis;

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xAABCF4", Offset = "0xAABCF4", VA = "0xAABCF4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xAABD9C", Offset = "0xAABD9C", VA = "0xAABD9C")]
		private void HandleInput(float arg0)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xAABE28", Offset = "0xAABE28", VA = "0xAABE28")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6001827")]
		[Address(RVA = "0xAABE30", Offset = "0xAABE30", VA = "0xAABE30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xAABE38", Offset = "0xAABE38", VA = "0xAABE38")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xAABE40", Offset = "0xAABE40", VA = "0xAABE40")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xAAC0BC", Offset = "0xAAC0BC", VA = "0xAAC0BC")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class TiltInput : MonoBehaviour
	{
		[Token(Token = "0x2000712")]
		public enum AxisOptions
		{
			[Token(Token = "0x4002FD3")]
			ForwardAxis,
			[Token(Token = "0x4002FD4")]
			SidewaysAxis
		}

		[Serializable]
		[Token(Token = "0x2000713")]
		public class AxisMapping
		{
			[Token(Token = "0x2000837")]
			public enum MappingType
			{
				[Token(Token = "0x40034FA")]
				NamedAxis,
				[Token(Token = "0x40034FB")]
				MousePositionX,
				[Token(Token = "0x40034FC")]
				MousePositionY,
				[Token(Token = "0x40034FD")]
				MousePositionZ
			}

			[Token(Token = "0x4002FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MappingType type;

			[Token(Token = "0x4002FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string axisName;

			[Token(Token = "0x6002E53")]
			[Address(RVA = "0xAACEF8", Offset = "0xAACEF8", VA = "0xAACEF8")]
			public AxisMapping()
			{
			}
		}

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisMapping mapping;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AxisOptions tiltAroundAxis;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fullTiltAngle;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centreAngleOffset;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CrossPlatformInputManager.VirtualAxis steerAxis;

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xAACBC0", Offset = "0xAACBC0", VA = "0xAACBC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xAACC44", Offset = "0xAACC44", VA = "0xAACC44")]
		private void Update()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xAACED0", Offset = "0xAACED0", VA = "0xAACED0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xAACEE8", Offset = "0xAACEE8", VA = "0xAACEE8")]
		public TiltInput()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> virtualAxes;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> virtualButtons;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<string> alwaysUseVirtual;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x865CC4", Offset = "0x865CC4")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x170001C5")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x600182F")]
			[Address(RVA = "0xAACF00", Offset = "0xAACF00", VA = "0xAACF00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87362C", Offset = "0x87362C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001830")]
			[Address(RVA = "0xAACF0C", Offset = "0xAACF0C", VA = "0xAACF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87363C", Offset = "0x87363C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xAAACBC", Offset = "0xAAACBC", VA = "0xAAACBC")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xAAAE5C", Offset = "0xAAAE5C", VA = "0xAAAE5C")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xAAB03C", Offset = "0xAAB03C", VA = "0xAAB03C")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xAAB14C", Offset = "0xAAB14C", VA = "0xAAB14C")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xAAB25C", Offset = "0xAAB25C", VA = "0xAAB25C")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xAAB790", Offset = "0xAAB790", VA = "0xAAB790")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xAAB890", Offset = "0xAAB890", VA = "0xAAB890")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xAAB994", Offset = "0xAAB994", VA = "0xAAB994")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x6001839")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x600183A")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x600183B")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x600183C")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x600183D")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x600183E")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x600183F")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6001840")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001841")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001842")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001843")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xAAC834", Offset = "0xAAC834", VA = "0xAAC834")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnitySampleAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000370")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x6001845")]
		[Address(RVA = "0xAAC0C4", Offset = "0xAAC0C4", VA = "0xAAC0C4")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xAAC158", Offset = "0xAAC158", VA = "0xAAC158")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xAAC1DC", Offset = "0xAAC1DC", VA = "0xAAC1DC", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xAAC274", Offset = "0xAAC274", VA = "0xAAC274", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xAAC32C", Offset = "0xAAC32C", VA = "0xAAC32C", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xAAC3B0", Offset = "0xAAC3B0", VA = "0xAAC3B0", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xAAC450", Offset = "0xAAC450", VA = "0xAAC450", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xAAC4F0", Offset = "0xAAC4F0", VA = "0xAAC4F0", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xAAC58C", Offset = "0xAAC58C", VA = "0xAAC58C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xAAC634", Offset = "0xAAC634", VA = "0xAAC634", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xAAC6E0", Offset = "0xAAC6E0", VA = "0xAAC6E0", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xAAC78C", Offset = "0xAAC78C", VA = "0xAAC78C", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xAAC828", Offset = "0xAAC828", VA = "0xAAC828", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xAAAC40", Offset = "0xAAAC40", VA = "0xAAAC40")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001853")]
		[Address(RVA = "0xAAC8F4", Offset = "0xAAC8F4", VA = "0xAAC8F4", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xAAC908", Offset = "0xAAC908", VA = "0xAAC908", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xAAC914", Offset = "0xAAC914", VA = "0xAAC914", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xAAC920", Offset = "0xAAC920", VA = "0xAAC920", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xAAC92C", Offset = "0xAAC92C", VA = "0xAAC92C", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xAAC998", Offset = "0xAAC998", VA = "0xAAC998", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xAACA04", Offset = "0xAACA04", VA = "0xAACA04", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xAACA70", Offset = "0xAACA70", VA = "0xAACA70", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xAACADC", Offset = "0xAACADC", VA = "0xAACADC", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xAACB48", Offset = "0xAACB48", VA = "0xAACB48", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xAACBB4", Offset = "0xAACBB4", VA = "0xAACBB4", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xAACBBC", Offset = "0xAACBBC", VA = "0xAACBBC")]
		public StandaloneInput()
		{
		}
	}
}
namespace ProBuilder2.Examples
{
	[Token(Token = "0x2000372")]
	public class CameraControls : MonoBehaviour
	{
		[Token(Token = "0x40017FB")]
		private const string INPUT_MOUSE_SCROLLWHEEL = "Mouse ScrollWheel";

		[Token(Token = "0x40017FC")]
		private const string INPUT_MOUSE_X = "Mouse X";

		[Token(Token = "0x40017FD")]
		private const string INPUT_MOUSE_Y = "Mouse Y";

		[Token(Token = "0x40017FE")]
		private const float MIN_CAM_DISTANCE = 10f;

		[Token(Token = "0x40017FF")]
		private const float MAX_CAM_DISTANCE = 40f;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865CD4", Offset = "0x865CD4")]
		public float orbitSpeed;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865CEC", Offset = "0x865CEC")]
		public float zoomSpeed;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float distance;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float idleRotation;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 dir;

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xB29D98", Offset = "0xB29D98", VA = "0xB29D98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xB29E5C", Offset = "0xB29E5C", VA = "0xB29E5C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xB2A240", Offset = "0xB2A240", VA = "0xB2A240")]
		public CameraControls()
		{
		}
	}
}
namespace PA.ParticleField.Samples
{
	[Token(Token = "0x2000373")]
	public class MipMapTexture : MonoBehaviour
	{
		[Token(Token = "0x4001805")]
		private const float MIN_BOKEH = -7f;

		[Token(Token = "0x4001806")]
		private const float MAX_BOKEH = 2f;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] textures;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material bokehMaterial;

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xFAED64", Offset = "0xFAED64", VA = "0xFAED64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xFAF00C", Offset = "0xFAF00C", VA = "0xFAF00C")]
		public void SetBokeh(float value)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xFAEDD0", Offset = "0xFAEDD0", VA = "0xFAEDD0")]
		private Texture2D GenerateTexture()
		{
			return null;
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xFAF0B4", Offset = "0xFAF0B4", VA = "0xFAF0B4")]
		public MipMapTexture()
		{
		}
	}
	[Token(Token = "0x2000374")]
	[ExecuteInEditMode]
	public class CausticsDemo : MonoBehaviour
	{
		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float cameraDistance;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float waterSurfaceHeight;

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xFAE918", Offset = "0xFAE918", VA = "0xFAE918")]
		private void Update()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xFAE91C", Offset = "0xFAE91C", VA = "0xFAE91C")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xFAEAD8", Offset = "0xFAEAD8", VA = "0xFAEAD8")]
		public CausticsDemo()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class ScrollTexture : MonoBehaviour
	{
		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string textureName;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 speed;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 offset;

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xFAFFDC", Offset = "0xFAFFDC", VA = "0xFAFFDC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xFB017C", Offset = "0xFB017C", VA = "0xFB017C")]
		public ScrollTexture()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class PACloudController : MonoBehaviour
	{
		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform followTarget;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PAParticleField[] cloudFields;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 area;

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xFAF1F0", Offset = "0xFAF1F0", VA = "0xFAF1F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xFAF4A0", Offset = "0xFAF4A0", VA = "0xFAF4A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xFAF4A4", Offset = "0xFAF4A4", VA = "0xFAF4A4")]
		private void UpdateCloudPositions()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xFAF7F0", Offset = "0xFAF7F0", VA = "0xFAF7F0")]
		public PACloudController()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class PAWaterController : MonoBehaviour
	{
		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yPosition;

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xFAFA60", Offset = "0xFAFA60", VA = "0xFAFA60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xFAFA98", Offset = "0xFAFA98", VA = "0xFAFA98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xFAFB04", Offset = "0xFAFB04", VA = "0xFAFB04")]
		public PAWaterController()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class Rain : MonoBehaviour
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera targetCamera;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PAParticleField dropField;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float groundHeight;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 mainOffset;

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xFAFBBC", Offset = "0xFAFBBC", VA = "0xFAFBBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xFAFC20", Offset = "0xFAFC20", VA = "0xFAFC20")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xFAFD88", Offset = "0xFAFD88", VA = "0xFAFD88")]
		public Rain()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class PAMeshParticlesFaceCamera : MonoBehaviour
	{
		[Token(Token = "0x2000714")]
		public enum FaceMethod
		{
			[Token(Token = "0x4002FD8")]
			Face,
			[Token(Token = "0x4002FD9")]
			Up
		}

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PAParticleField particleField;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FaceMethod faceMethod;

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xFAF7F8", Offset = "0xFAF7F8", VA = "0xFAF7F8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xFAF850", Offset = "0xFAF850", VA = "0xFAF850")]
		private void Update()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xFAFA58", Offset = "0xFAFA58", VA = "0xFAFA58")]
		public PAMeshParticlesFaceCamera()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x400181A")]
		private const float RANGE = 0.4f;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody r;

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xFAFD9C", Offset = "0xFAFD9C", VA = "0xFAFD9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xFAFF1C", Offset = "0xFAFF1C", VA = "0xFAFF1C")]
		private void Update()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xFAFFD4", Offset = "0xFAFFD4", VA = "0xFAFFD4")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class SmoothCamera : MonoBehaviour
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float height;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float damping;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool smoothRotation;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool followBehind;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationDamping;

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xFB0184", Offset = "0xFB0184", VA = "0xFB0184")]
		private void Start()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xFB02AC", Offset = "0xFB02AC", VA = "0xFB02AC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xFB05BC", Offset = "0xFB05BC", VA = "0xFB05BC")]
		public SmoothCamera()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class StarFieldSpaceship : MonoBehaviour
	{
		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float turnspeed;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rollSpeed;

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xFB05E4", Offset = "0xFB05E4", VA = "0xFB05E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xFB05E8", Offset = "0xFB05E8", VA = "0xFB05E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xFB0830", Offset = "0xFB0830", VA = "0xFB0830")]
		public StarFieldSpaceship()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class Stardust : MonoBehaviour
	{
		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxMagnitude;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lerpiness;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PAParticleField field;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPosition;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastDifference;

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xFB0850", Offset = "0xFB0850", VA = "0xFB0850")]
		private void Start()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xFB08FC", Offset = "0xFB08FC", VA = "0xFB08FC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xFB0A9C", Offset = "0xFB0A9C", VA = "0xFB0A9C")]
		public Stardust()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class CameraSwitch : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cameraA;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera cameraB;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform m_Rt;

		[Token(Token = "0x170001C6")]
		private RectTransform rt
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0xFAE828", Offset = "0xFAE828", VA = "0xFAE828")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xFAE664", Offset = "0xFAE664", VA = "0xFAE664", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xFAE668", Offset = "0xFAE668", VA = "0xFAE668")]
		private void SwitchCameras()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xFAE8D4", Offset = "0xFAE8D4", VA = "0xFAE8D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xFAE910", Offset = "0xFAE910", VA = "0xFAE910")]
		public CameraSwitch()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class DemosMenu : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] names;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text headerButton;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color openColor;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color closedColor;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject dropDown;

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xFAEAE8", Offset = "0xFAEAE8", VA = "0xFAEAE8")]
		private void Start()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xFAEAF0", Offset = "0xFAEAF0", VA = "0xFAEAF0")]
		private void Show(bool arg = true)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xFAEBD8", Offset = "0xFAEBD8", VA = "0xFAEBD8", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xFAEC14", Offset = "0xFAEC14", VA = "0xFAEC14")]
		public DemosMenu()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float updateInterval;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float accum;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frames;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeleft;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string frameString;

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xFAEC1C", Offset = "0xFAEC1C", VA = "0xFAEC1C")]
		private void Start()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xFAEC28", Offset = "0xFAEC28", VA = "0xFAEC28")]
		private void Update()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xFAED28", Offset = "0xFAED28", VA = "0xFAED28")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class LoadLevelButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x6001890")]
		[Address(RVA = "0xFAED38", Offset = "0xFAED38", VA = "0xFAED38", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xFAED54", Offset = "0xFAED54", VA = "0xFAED54")]
		private static List<string> GetSceneNames()
		{
			return null;
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xFAED5C", Offset = "0xFAED5C", VA = "0xFAED5C")]
		public LoadLevelButton()
		{
		}
	}
	[Token(Token = "0x2000382")]
	[ExecuteInEditMode]
	public class OrthoFollow : MonoBehaviour
	{
		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xFAF0BC", Offset = "0xFAF0BC", VA = "0xFAF0BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xFAF1E8", Offset = "0xFAF1E8", VA = "0xFAF1E8")]
		public OrthoFollow()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class ParticleSystemToggler : MonoBehaviour
	{
		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject system;

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xFAFB0C", Offset = "0xFAFB0C", VA = "0xFAFB0C")]
		public void SetSystemOff(bool arg)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xFAFBB4", Offset = "0xFAFBB4", VA = "0xFAFBB4")]
		public ParticleSystemToggler()
		{
		}
	}
}
namespace PlaygroundSplines
{
	[Token(Token = "0x2000384")]
	[ExecuteInEditMode]
	public class PlaygroundSpline : MonoBehaviour
	{
		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> points;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<BezierControlPointMode> modes;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool loop;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<TransformNode> transformNodes;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool reverse;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public float timeOffset;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3 positionOffset;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Transform splineTransform;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Matrix4x4 splineTransformMx;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public List<Transform> usedBy;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public float fixedVelocityOnNewNode;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public bool moveTransformsAsBeziers;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[HideInInspector]
		public bool exportWithNodeStructure;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool drawSplinePreviews;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		[HideInInspector]
		public bool drawGizmo;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public float bezierWidth;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 previousPosition;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion previousRotation;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 previousScale;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool isReady;

		[Token(Token = "0x170001C7")]
		public bool Loop
		{
			[Token(Token = "0x600189B")]
			[Address(RVA = "0xB24784", Offset = "0xB24784", VA = "0xB24784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600189C")]
			[Address(RVA = "0xB2478C", Offset = "0xB2478C", VA = "0xB2478C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public int ControlPointCount
		{
			[Token(Token = "0x600189D")]
			[Address(RVA = "0xB24D48", Offset = "0xB24D48", VA = "0xB24D48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C9")]
		public int NodeCount
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xB2486C", Offset = "0xB2486C", VA = "0xB2486C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xB245E4", Offset = "0xB245E4", VA = "0xB245E4")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xB245EC", Offset = "0xB245EC", VA = "0xB245EC")]
		public bool AddUser(Transform thisTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xB24684", Offset = "0xB24684", VA = "0xB24684")]
		public bool RemoveUser(Transform thisTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xB2471C", Offset = "0xB2471C", VA = "0xB2471C")]
		public bool HasUser(Transform thisTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xB24D98", Offset = "0xB24D98", VA = "0xB24D98")]
		public Vector3 GetControlPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xB24EA8", Offset = "0xB24EA8", VA = "0xB24EA8")]
		public void SetControlPoint(int index, Vector3 point, Vector3 offset)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xB248D8", Offset = "0xB248D8", VA = "0xB248D8")]
		public void SetControlPoint(int index, Vector3 point)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xB2540C", Offset = "0xB2540C", VA = "0xB2540C")]
		public void SetPoints(Vector3[] vectors)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xB2508C", Offset = "0xB2508C", VA = "0xB2508C")]
		public bool PointHasTransform(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xB25694", Offset = "0xB25694", VA = "0xB25694")]
		public void TranslateSpline(Vector3 translation)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xB257B4", Offset = "0xB257B4", VA = "0xB257B4")]
		public Vector3 GetTransformPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xB257C0", Offset = "0xB257C0", VA = "0xB257C0")]
		public Quaternion GetTransformRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xB257CC", Offset = "0xB257CC", VA = "0xB257CC")]
		public Vector3 GetTransformScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xB257D8", Offset = "0xB257D8", VA = "0xB257D8")]
		public BezierControlPointMode GetControlPointMode(int index)
		{
			return default(BezierControlPointMode);
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xB2586C", Offset = "0xB2586C", VA = "0xB2586C")]
		public void SetControlPointMode(int index, BezierControlPointMode mode)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xB25124", Offset = "0xB25124", VA = "0xB25124")]
		private void EnforceMode(int index)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xB2595C", Offset = "0xB2595C", VA = "0xB2595C")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xB25C74", Offset = "0xB25C74", VA = "0xB25C74")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xB24D9C", Offset = "0xB24D9C", VA = "0xB24D9C")]
		public Vector3 GetPoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xB25B68", Offset = "0xB25B68", VA = "0xB25B68")]
		public Vector3 GetInversePoint(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xB25E6C", Offset = "0xB25E6C", VA = "0xB25E6C")]
		public Vector3 GetPointWorldSpace(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xB24F6C", Offset = "0xB24F6C", VA = "0xB24F6C")]
		private void SetPoint(int index, Vector3 position)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xB26098", Offset = "0xB26098", VA = "0xB26098")]
		private void TranslatePoint(int index, Vector3 translation)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xB26344", Offset = "0xB26344", VA = "0xB26344")]
		private float CPOB(Vector3 aP, float aStart, float aEnd, int aSteps)
		{
			return default(float);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xB264C8", Offset = "0xB264C8", VA = "0xB264C8")]
		public float ClosestTimeFromPoint(Vector3 aP)
		{
			return default(float);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xB26554", Offset = "0xB26554", VA = "0xB26554")]
		public Vector3 ClosestPointFromPosition(Vector3 aP)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xB26578", Offset = "0xB26578", VA = "0xB26578")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xB26670", Offset = "0xB26670", VA = "0xB26670")]
		public void AddNode()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xB266E0", Offset = "0xB266E0", VA = "0xB266E0")]
		public void AddNode(int index)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xB26BD0", Offset = "0xB26BD0", VA = "0xB26BD0")]
		public void RemoveFirst()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xB26D4C", Offset = "0xB26D4C", VA = "0xB26D4C")]
		public void RemoveLast()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xB26BD8", Offset = "0xB26BD8", VA = "0xB26BD8")]
		public void RemoveNode(int index)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xB26DBC", Offset = "0xB26DBC", VA = "0xB26DBC")]
		public void ReverseAllNodes()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xB26E44", Offset = "0xB26E44", VA = "0xB26E44")]
		public void SwapNodes(int from, int to)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xB27188", Offset = "0xB27188", VA = "0xB27188")]
		public Transform[] ExportToTransforms()
		{
			return null;
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xB27628", Offset = "0xB27628", VA = "0xB27628")]
		public Vector3[] ExportToVector3()
		{
			return null;
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xB27764", Offset = "0xB27764", VA = "0xB27764")]
		public void Reset()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xB279E4", Offset = "0xB279E4", VA = "0xB279E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xB27C8C", Offset = "0xB27C8C", VA = "0xB27C8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xB27A14", Offset = "0xB27A14", VA = "0xB27A14")]
		private void SetMatrix()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xB27E1C", Offset = "0xB27E1C", VA = "0xB27E1C")]
		public PlaygroundSpline()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public static class Bezier
	{
		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xB23EC8", Offset = "0xB23EC8", VA = "0xB23EC8")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xB24054", Offset = "0xB24054", VA = "0xB24054")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xB241B0", Offset = "0xB241B0", VA = "0xB241B0")]
		public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xB243A8", Offset = "0xB243A8", VA = "0xB243A8")]
		public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000386")]
	public class TransformNode
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isAvailable;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 position;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 inversePosition;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 previousPosition;

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xB27D2C", Offset = "0xB27D2C", VA = "0xB27D2C")]
		public bool Update(Transform splineTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xB25674", Offset = "0xB25674", VA = "0xB25674")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xB28EAC", Offset = "0xB28EAC", VA = "0xB28EAC")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xB28EB8", Offset = "0xB28EB8", VA = "0xB28EB8")]
		public Vector3 GetInvsersePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xB25FD4", Offset = "0xB25FD4", VA = "0xB25FD4")]
		public void SetPosition(Vector3 newPosition)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xB26224", Offset = "0xB26224", VA = "0xB26224")]
		public void Translate(Vector3 translation)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xB28EC4", Offset = "0xB28EC4", VA = "0xB28EC4")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xB26BC8", Offset = "0xB26BC8", VA = "0xB26BC8")]
		public TransformNode()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public enum SplineMode
	{
		[Token(Token = "0x4001856")]
		Vector3,
		[Token(Token = "0x4001857")]
		Transform
	}
	[Token(Token = "0x2000388")]
	public enum BezierControlPointMode
	{
		[Token(Token = "0x4001859")]
		Aligned,
		[Token(Token = "0x400185A")]
		Mirrored,
		[Token(Token = "0x400185B")]
		Free
	}
	[Token(Token = "0x2000389")]
	[ExecuteInEditMode]
	public class PlaygroundSplineMesh : MonoBehaviour
	{
		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundSpline spline;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865DF8", Offset = "0x865DF8")]
		public int points;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865E14", Offset = "0x865E14")]
		public float width;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool noise;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x865E34", Offset = "0x865E34")]
		public float noiseStrength;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 noiseScale;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool noiseDistribution;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve noiseDistributionL;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve noiseDistributionR;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool followSurface;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool followSurfaceRotation;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float surfaceOffset;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 meshUpDirection;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 surfaceDirection;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int prevPoints;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float prevWidth;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool prevNoise;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float prevNoiseStrength;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 prevNoiseScale;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool prevNoiseDistribution;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool prevFollowSurface;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool prevFollowSurfaceRotation;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float prevSurfaceOffset;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 prevMeshUpDirection;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 prevSurfaceDirection;

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xB27F70", Offset = "0xB27F70", VA = "0xB27F70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xB28B1C", Offset = "0xB28B1C", VA = "0xB28B1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xB28BC4", Offset = "0xB28BC4", VA = "0xB28BC4")]
		private bool NeedsUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xB28AC8", Offset = "0xB28AC8", VA = "0xB28AC8")]
		private void SetVals()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xB28114", Offset = "0xB28114", VA = "0xB28114")]
		private void SetAnimationCurveVals(ref AnimationCurve curve)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xB28208", Offset = "0xB28208", VA = "0xB28208")]
		public void BuildSplineMesh(PlaygroundSpline spline, int points, float width)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xB28DD8", Offset = "0xB28DD8", VA = "0xB28DD8")]
		public PlaygroundSplineMesh()
		{
		}
	}
}
namespace ParticlePlayground
{
	[Token(Token = "0x200038A")]
	public class SwitchMultithreading : MonoBehaviour
	{
		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xB4C8B8", Offset = "0xB4C8B8", VA = "0xB4C8B8")]
		public static void NextParticleSystemMethod()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xB4C9F8", Offset = "0xB4C9F8", VA = "0xB4C9F8")]
		public static void NextSkinnedMeshMethod()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xB4CB04", Offset = "0xB4CB04", VA = "0xB4CB04")]
		public static void NextTurbulenceMethod()
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xB4CC10", Offset = "0xB4CC10", VA = "0xB4CC10")]
		public static void NextThreadPoolMethod()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xB4CCE8", Offset = "0xB4CCE8", VA = "0xB4CCE8")]
		public static void NextIndividualParticleSystemMethod(PlaygroundParticlesC p)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xB4CD2C", Offset = "0xB4CD2C", VA = "0xB4CD2C")]
		public SwitchMultithreading()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class PlaygroundFollow : MonoBehaviour
	{
		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundParticlesC particles;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject referenceObject;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float followerLifetime;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int cacheSize;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool sendEvents;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TrailRenderer referenceTrailRenderer;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float trailTime;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<PlaygroundFollower> followers;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<PlaygroundFollower> waitingFollowers;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlaygroundFollower[] referenceObjectsCache;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlaygroundFollower[] queue;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int cacheIndex;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlaygroundEventC birthEvent;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlaygroundEventC deathEvent;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform followerParent;

		[Token(Token = "0x14000055")]
		public event OnPlaygroundFollower followerEventBirth
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x9945D4", Offset = "0x9945D4", VA = "0x9945D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87364C", Offset = "0x87364C")]
			add
			{
			}
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x994678", Offset = "0x994678", VA = "0x994678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87365C", Offset = "0x87365C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event OnPlaygroundFollower followerEventDeath
		{
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x99471C", Offset = "0x99471C", VA = "0x99471C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87366C", Offset = "0x87366C")]
			add
			{
			}
			[Token(Token = "0x60018E1")]
			[Address(RVA = "0x9947C0", Offset = "0x9947C0", VA = "0x9947C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87367C", Offset = "0x87367C")]
			remove
			{
			}
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x994864", Offset = "0x994864", VA = "0x994864")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x994E04", Offset = "0x994E04", VA = "0x994E04")]
		private void OnParticleDidBirth(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x994ED4", Offset = "0x994ED4", VA = "0x994ED4")]
		private void OnParticleDidDie(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x994F6C", Offset = "0x994F6C", VA = "0x994F6C")]
		private int GetFollowerWithId(int particleId)
		{
			return default(int);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x995064", Offset = "0x995064", VA = "0x995064")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x9950D0", Offset = "0x9950D0", VA = "0x9950D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x9950D4", Offset = "0x9950D4", VA = "0x9950D4")]
		private void UpdateFollowers()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x995538", Offset = "0x995538", VA = "0x995538")]
		private void AddFollower(PlaygroundFollower follower, int i)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x995378", Offset = "0x995378", VA = "0x995378")]
		private void RemoveFollower(int i)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x9959C0", Offset = "0x9959C0", VA = "0x9959C0")]
		private void NextCacheIndex()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x9959F0", Offset = "0x9959F0", VA = "0x9959F0")]
		public PlaygroundFollower GetActiveFollower(int index)
		{
			return null;
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x995AAC", Offset = "0x995AAC", VA = "0x995AAC")]
		public PlaygroundFollower GetCachedFollower(int index)
		{
			return null;
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x995B60", Offset = "0x995B60", VA = "0x995B60")]
		public int GetActiveFollowersCount()
		{
			return default(int);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x995BB0", Offset = "0x995BB0", VA = "0x995BB0")]
		public int GetCachedFollowersCount()
		{
			return default(int);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x995BCC", Offset = "0x995BCC", VA = "0x995BCC")]
		public PlaygroundFollow()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class PlaygroundFollower
	{
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float lifetime;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrailRenderer trailRenderer;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int particleId;

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x994D9C", Offset = "0x994D9C", VA = "0x994D9C")]
		public PlaygroundFollower(Transform setTransform, GameObject setGameObject, TrailRenderer setTrailRenderer, float setLifetime, int setParticleId)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x995920", Offset = "0x995920", VA = "0x995920")]
		public PlaygroundFollower Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x200038D")]
	public delegate void OnPlaygroundFollower(PlaygroundFollower follower);
	[Token(Token = "0x200038E")]
	public class PlaygroundMultiRecorder : MonoBehaviour
	{
		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundRecorder[] playgroundRecorders;

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x995D40", Offset = "0x995D40", VA = "0x995D40")]
		public void StartRecording(float frameIntervalInSeconds)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x995DBC", Offset = "0x995DBC", VA = "0x995DBC")]
		public void StartRecording(float recordingLength, float frameIntervalInSeconds)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x995E40", Offset = "0x995E40", VA = "0x995E40")]
		public void RecordOneFrame()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x995EAC", Offset = "0x995EAC", VA = "0x995EAC")]
		public void InsertOneFrame(int frame)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x995F2C", Offset = "0x995F2C", VA = "0x995F2C")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x995F98", Offset = "0x995F98", VA = "0x995F98")]
		public void ClearRecording()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x996004", Offset = "0x996004", VA = "0x996004")]
		public void Play(float speed)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x996080", Offset = "0x996080", VA = "0x996080")]
		public void Play(float fromNormalizedTime, float speed, bool repeat)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x996114", Offset = "0x996114", VA = "0x996114")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x996180", Offset = "0x996180", VA = "0x996180")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x9961EC", Offset = "0x9961EC", VA = "0x9961EC")]
		public void Scrub(float normalizedTime)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x996268", Offset = "0x996268", VA = "0x996268")]
		public PlaygroundMultiRecorder()
		{
		}
	}
	[Token(Token = "0x200038F")]
	[ExecuteInEditMode]
	public class PlaygroundRecorder : MonoBehaviour
	{
		[Token(Token = "0x2000715")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD08", Offset = "0x85DD08")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4002FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4002FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float normalizedTime;

			[Token(Token = "0x6002E54")]
			[Address(RVA = "0xB42D18", Offset = "0xB42D18", VA = "0xB42D18")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6002E55")]
			[Address(RVA = "0xB44E08", Offset = "0xB44E08", VA = "0xB44E08")]
			internal void <Scrub>b__0()
			{
			}
		}

		[Token(Token = "0x2000716")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD18", Offset = "0x85DD18")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x4002FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4002FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float normalizedTime;

			[Token(Token = "0x6002E56")]
			[Address(RVA = "0xB43DF0", Offset = "0xB43DF0", VA = "0xB43DF0")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x6002E57")]
			[Address(RVA = "0xB44EC0", Offset = "0xB44EC0", VA = "0xB44EC0")]
			internal void <SetParticleSystemAsRecording>b__0()
			{
			}
		}

		[Token(Token = "0x2000717")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD28", Offset = "0x85DD28")]
		private sealed class <StartRecordingInternal>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4002FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float keyframeInterval;

			[Token(Token = "0x4002FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float recordingLength;

			[Token(Token = "0x170004D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E5B")]
				[Address(RVA = "0xB45458", Offset = "0xB45458", VA = "0xB45458", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E5D")]
				[Address(RVA = "0xB454C0", Offset = "0xB454C0", VA = "0xB454C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E58")]
			[Address(RVA = "0xB44C94", Offset = "0xB44C94", VA = "0xB44C94")]
			[DebuggerHidden]
			public <StartRecordingInternal>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002E59")]
			[Address(RVA = "0xB45360", Offset = "0xB45360", VA = "0xB45360", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E5A")]
			[Address(RVA = "0xB45364", Offset = "0xB45364", VA = "0xB45364", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E5C")]
			[Address(RVA = "0xB45460", Offset = "0xB45460", VA = "0xB45460", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD38", Offset = "0x85DD38")]
		private sealed class <RecordInternal>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4002FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float keyframeInterval;

			[Token(Token = "0x170004D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E61")]
				[Address(RVA = "0xB452F0", Offset = "0xB452F0", VA = "0xB452F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E63")]
				[Address(RVA = "0xB45358", Offset = "0xB45358", VA = "0xB45358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E5E")]
			[Address(RVA = "0xB44CC0", Offset = "0xB44CC0", VA = "0xB44CC0")]
			[DebuggerHidden]
			public <RecordInternal>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6002E5F")]
			[Address(RVA = "0xB45210", Offset = "0xB45210", VA = "0xB45210", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E60")]
			[Address(RVA = "0xB45214", Offset = "0xB45214", VA = "0xB45214", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E62")]
			[Address(RVA = "0xB452F8", Offset = "0xB452F8", VA = "0xB452F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000719")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD48", Offset = "0x85DD48")]
		private sealed class <Playback>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x170004DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E67")]
				[Address(RVA = "0xB451A0", Offset = "0xB451A0", VA = "0xB451A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E69")]
				[Address(RVA = "0xB45208", Offset = "0xB45208", VA = "0xB45208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E64")]
			[Address(RVA = "0xB44CEC", Offset = "0xB44CEC", VA = "0xB44CEC")]
			[DebuggerHidden]
			public <Playback>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6002E65")]
			[Address(RVA = "0xB45120", Offset = "0xB45120", VA = "0xB45120", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E66")]
			[Address(RVA = "0xB45124", Offset = "0xB45124", VA = "0xB45124", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E68")]
			[Address(RVA = "0xB451A8", Offset = "0xB451A8", VA = "0xB451A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200071A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD58", Offset = "0x85DD58")]
		private sealed class <PlayRecordedFrames>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float fromNormalizedTime;

			[Token(Token = "0x4002FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlaygroundRecorder <>4__this;

			[Token(Token = "0x4002FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x170004DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E6D")]
				[Address(RVA = "0xB450B0", Offset = "0xB450B0", VA = "0xB450B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E6F")]
				[Address(RVA = "0xB45118", Offset = "0xB45118", VA = "0xB45118", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0xB44D18", Offset = "0xB44D18", VA = "0xB44D18")]
			[DebuggerHidden]
			public <PlayRecordedFrames>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0xB44F78", Offset = "0xB44F78", VA = "0xB44F78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0xB44F7C", Offset = "0xB44F7C", VA = "0xB44F7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0xB450B8", Offset = "0xB450B8", VA = "0xB450B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool multithreading;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float keyframeInterval;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float playbackSpeed;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float playHead;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool loopPlayback;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool fadeIn;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool sizeIn;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool skipInterpolationOnEndFrames;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool localSpaceOnPlayback;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PlaygroundParticlesC playgroundSystem;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public PlaygroundRecorderData recorderData;

		[NonSerialized]
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<RecordedFrame> recordedFrames;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _inPlayback;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _isReplaying;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool _isRecording;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		private bool _hasRecorderData;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _hasPlaygroundSystem;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool _hasEditedRecordData;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _recordingStarted;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _lastRecordedFrameTime;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _recordingStartFrame;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _recordingEndFrame;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem.Particle[] _playbackParticles;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystemSimulationSpace _previousSimulationSpace;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private object locker;

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xB41884", Offset = "0xB41884", VA = "0xB41884")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xB41BF4", Offset = "0xB41BF4", VA = "0xB41BF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xB41C28", Offset = "0xB41C28", VA = "0xB41C28")]
		public bool HasRecordedFrames()
		{
			return default(bool);
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xB41C84", Offset = "0xB41C84", VA = "0xB41C84")]
		public bool IsRecording()
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xB41C8C", Offset = "0xB41C8C", VA = "0xB41C8C")]
		public bool IsReplaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xB41C94", Offset = "0xB41C94", VA = "0xB41C94")]
		public bool IsInPlayback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xB41C9C", Offset = "0xB41C9C", VA = "0xB41C9C")]
		public int FrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xB41CF8", Offset = "0xB41CF8", VA = "0xB41CF8")]
		public int GetFrameAtTime(float normalizedTime)
		{
			return default(int);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xB41DC4", Offset = "0xB41DC4", VA = "0xB41DC4")]
		public float GetFloatingFrameAtTime(float normalizedTime)
		{
			return default(float);
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xB41E5C", Offset = "0xB41E5C", VA = "0xB41E5C")]
		public float GetTimeAtFrame(int frame)
		{
			return default(float);
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xB41F08", Offset = "0xB41F08", VA = "0xB41F08")]
		public float GetKeyframeIntervalAtFrame(int frame)
		{
			return default(float);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xB41F94", Offset = "0xB41F94", VA = "0xB41F94")]
		public float RecordingStarted()
		{
			return default(float);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xB41F9C", Offset = "0xB41F9C", VA = "0xB41F9C")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xB4225C", Offset = "0xB4225C", VA = "0xB4225C")]
		public void StartRecording(float keyframeInterval)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xB42264", Offset = "0xB42264", VA = "0xB42264")]
		public void StartRecording(float recordingLength, float keyframeInterval)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xB4239C", Offset = "0xB4239C", VA = "0xB4239C")]
		public void RecordOneFrame()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xB424CC", Offset = "0xB424CC", VA = "0xB424CC")]
		public void InsertOneFrame(int frame, FrameType frameType = FrameType.Middle)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xB4207C", Offset = "0xB4207C", VA = "0xB4207C")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xB425F4", Offset = "0xB425F4", VA = "0xB425F4")]
		public void ClearRecording()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xB4272C", Offset = "0xB4272C", VA = "0xB4272C")]
		public void Play()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xB42834", Offset = "0xB42834", VA = "0xB42834")]
		public void Play(float speed)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xB42738", Offset = "0xB42738", VA = "0xB42738")]
		public void Play(float fromNormalizedTime, float speed, bool repeat)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xB42A04", Offset = "0xB42A04", VA = "0xB42A04")]
		public void Pause()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xB42A60", Offset = "0xB42A60", VA = "0xB42A60")]
		public void Stop()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xB42AF0", Offset = "0xB42AF0", VA = "0xB42AF0")]
		public void StopAndSerialize()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xB42B5C", Offset = "0xB42B5C", VA = "0xB42B5C")]
		public void Serialize()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xB41B08", Offset = "0xB41B08", VA = "0xB41B08")]
		public void Load()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xB419E8", Offset = "0xB419E8", VA = "0xB419E8")]
		public void LoadAsync()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xB42BB4", Offset = "0xB42BB4", VA = "0xB42BB4")]
		public void Scrub(float normalizedTime)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xB43AC8", Offset = "0xB43AC8", VA = "0xB43AC8")]
		public bool Trim(float leftTime, float rightTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xB43BDC", Offset = "0xB43BDC", VA = "0xB43BDC")]
		public void TrimInner(float leftTime, float rightTime)
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xB43C9C", Offset = "0xB43C9C", VA = "0xB43C9C")]
		public void SetParticleSystemAsCurrentPlayback()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xB43CA4", Offset = "0xB43CA4", VA = "0xB43CA4")]
		public void SetParticleSystemAsRecording(float normalizedTime)
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xB423A0", Offset = "0xB423A0", VA = "0xB423A0")]
		private void RecFrame()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xB424D0", Offset = "0xB424D0", VA = "0xB424D0")]
		private void InsertRecFrame(int frame, FrameType frameType)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xB42850", Offset = "0xB42850", VA = "0xB42850")]
		private void StartPlayback()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xB42700", Offset = "0xB42700", VA = "0xB42700")]
		private void StopPlayback()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xB42D20", Offset = "0xB42D20", VA = "0xB42D20")]
		private void ScrubInternal(float normalizedTime)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xB43DF8", Offset = "0xB43DF8", VA = "0xB43DF8")]
		private void SetParticleSystemAsRecordingInternal(float normalizedTime)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xB42318", Offset = "0xB42318", VA = "0xB42318")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87368C", Offset = "0x87368C")]
		private IEnumerator StartRecordingInternal(float recordingLength, float keyframeInterval)
		{
			return null;
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xB421DC", Offset = "0xB421DC", VA = "0xB421DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8736F0", Offset = "0x8736F0")]
		private IEnumerator RecordInternal(float keyframeInterval)
		{
			return null;
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xB44C24", Offset = "0xB44C24", VA = "0xB44C24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873754", Offset = "0x873754")]
		private IEnumerator Playback()
		{
			return null;
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xB42984", Offset = "0xB42984", VA = "0xB42984")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8737B8", Offset = "0x8737B8")]
		private IEnumerator PlayRecordedFrames(float fromNormalizedTime)
		{
			return null;
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xB44D44", Offset = "0xB44D44", VA = "0xB44D44")]
		public PlaygroundRecorder()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xB44DCC", Offset = "0xB44DCC", VA = "0xB44DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87381C", Offset = "0x87381C")]
		private void <LoadAsync>b__52_0()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public struct PlaybackParticle
	{
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Vector3 position;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public Vector3 velocity;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float rotation;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float size;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float lifetime;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float startLifetime;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float playgroundLife;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float playgroundStartLifetime;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float playgroundEndLifetime;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float playgroundLifetimeSubtraction;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Color32 color;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public Vector3 sourcePosition;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float startingSize;

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x765A2C", Offset = "0x765A2C", VA = "0x765A2C")]
		public PlaybackParticle(Vector3 position, Vector3 velocity, float rotation, float size, float lifetime, float startLifetime, float playgroundLife, float playgroundStartLifetime, float playgroundEndLifetime, float playgroundLifetimeSubtraction, Color32 color, Vector3 sourcePosition, float startingSize)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x765A7C", Offset = "0x765A7C", VA = "0x765A7C")]
		public ParticleSystem.Particle CloneAsParticle(bool includeVelocity = false)
		{
			return default(ParticleSystem.Particle);
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x765A88", Offset = "0x765A88", VA = "0x765A88")]
		public SerializedParticle CloneAsSerializedParticle()
		{
			return null;
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x765A90", Offset = "0x765A90", VA = "0x765A90")]
		public PlaybackParticle Clone()
		{
			return default(PlaybackParticle);
		}
	}
	[Token(Token = "0x2000391")]
	public enum FrameType
	{
		[Token(Token = "0x40018B4")]
		Start,
		[Token(Token = "0x40018B5")]
		Middle,
		[Token(Token = "0x40018B6")]
		End
	}
	[Token(Token = "0x2000392")]
	public class PlaygroundCompression
	{
		[Token(Token = "0x6001934")]
		[Address(RVA = "0x993F4C", Offset = "0x993F4C", VA = "0x993F4C")]
		public static byte[] SerializeAndCompress(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001935")]
		public static T DecompressAndDeserialize<T>(byte[] data)
		{
			return (T)null;
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x9941F4", Offset = "0x9941F4", VA = "0x9941F4")]
		public PlaygroundCompression()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000393")]
	public class RecordedFrame
	{
		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public PlaybackParticle[] particles;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float timeStamp;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float keyframeInterval;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public FrameType frameType;

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xB481F0", Offset = "0xB481F0", VA = "0xB481F0")]
		public RecordedFrame()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xB44798", Offset = "0xB44798", VA = "0xB44798")]
		public RecordedFrame(PlaygroundParticlesC playgroundParticles, float keyframeInterval)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xB48200", Offset = "0xB48200", VA = "0xB48200")]
		public RecordedFrame Clone()
		{
			return null;
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xB44B10", Offset = "0xB44B10", VA = "0xB44B10")]
		public ParticleSystem.Particle[] CloneAsParticles()
		{
			return null;
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xB482D0", Offset = "0xB482D0", VA = "0xB482D0")]
		public SerializedFrame CloneAsSerializedFrame()
		{
			return null;
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xB48374", Offset = "0xB48374", VA = "0xB48374")]
		public SerializedParticle[] CloneAsSerializedParticles()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000394")]
	public class SerializedFrame
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SerializedParticle[] serializedParticles;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeStamp;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float keyframeInterval;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FrameType frameType;

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xB4847C", Offset = "0xB4847C", VA = "0xB4847C")]
		public RecordedFrame CloneAsRecordedFrame()
		{
			return null;
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xB48510", Offset = "0xB48510", VA = "0xB48510")]
		public PlaybackParticle[] CloneAsPlaybackParticles()
		{
			return null;
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xB48364", Offset = "0xB48364", VA = "0xB48364")]
		public SerializedFrame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000395")]
	public class SerializedParticle
	{
		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 velocity;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotation;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float size;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lifetime;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float startLifetime;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float playgroundLife;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float playgroundStartLifetime;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float playgroundEndLifetime;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float playgroundLifetimeSubtraction;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color32 color;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 sourcePosition;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float startingSize;

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xB48714", Offset = "0xB48714", VA = "0xB48714")]
		public SerializedParticle(Vector3 position, Vector3 velocity, float rotation, float size, float lifetime, float startLifetime, float playgroundLife, float playgroundStartLifetime, float playgroundEndLifetime, float playgroundLifetimeSubtraction, Color32 color, Vector3 sourcePosition, float startingSize)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xB4861C", Offset = "0xB4861C", VA = "0xB4861C")]
		public PlaybackParticle CloneAsPlaybackParticle()
		{
			return default(PlaybackParticle);
		}
	}
	[Serializable]
	[Token(Token = "0x2000396")]
	public class ParticlePlaygroundTrail
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool update;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject trailGameObject;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform trailTransform;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public MeshRenderer trailRenderer;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public MeshFilter trailMeshFilter;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Mesh trailMesh;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int particleId;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int minPointCache;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public int maxPointCache;

		[NonSerialized]
		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<TrailPoint> trailPoints;

		[NonSerialized]
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3[] meshVerticesCache;

		[NonSerialized]
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3[] meshNormalsCache;

		[NonSerialized]
		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2[] meshUvsCache;

		[NonSerialized]
		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int[] meshTrianglesCache;

		[NonSerialized]
		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color32[] meshColorsCache;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _pointCache;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _birthIterator;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _deathIterator;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _particleTime;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _particlePosition;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 _previousParticlePosition;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 _particleDirection;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 _lastAddedPointPosition;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 _lastAddedPointDirection;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool _isDead;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool _isReady;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _timeCached;

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x97DD50", Offset = "0x97DD50", VA = "0x97DD50")]
		public ParticlePlaygroundTrail()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x97DEE8", Offset = "0x97DEE8", VA = "0x97DEE8")]
		public ParticlePlaygroundTrail(int pointCache)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x97DDE4", Offset = "0x97DDE4", VA = "0x97DDE4")]
		public void UpdateCache()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x97DFC4", Offset = "0x97DFC4", VA = "0x97DFC4")]
		public void UpdateMesh()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x97E054", Offset = "0x97E054", VA = "0x97E054")]
		public void RecalculateBounds()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x97E070", Offset = "0x97E070", VA = "0x97E070")]
		public void ClearMesh()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x97E124", Offset = "0x97E124", VA = "0x97E124")]
		public void SetFirstPoint(Vector3 pos, Vector3 dir, float startWidth, float lifetime)
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x97E2B0", Offset = "0x97E2B0", VA = "0x97E2B0")]
		public void SetLastPoint(Vector3 pos, Vector3 dir, float startWidth, float lifetime)
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x97E1A8", Offset = "0x97E1A8", VA = "0x97E1A8")]
		public void AddPoint(Vector3 position, float width, float lifetime)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x97E688", Offset = "0x97E688", VA = "0x97E688")]
		public void AddPoint(Vector3 position, Vector3 velocity, float width, float lifetime)
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x97E2F4", Offset = "0x97E2F4", VA = "0x97E2F4")]
		private void AddPoint(Vector3 position)
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x97E7C4", Offset = "0x97E7C4", VA = "0x97E7C4")]
		public void RemovePoint(int index)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x97E8F4", Offset = "0x97E8F4", VA = "0x97E8F4")]
		public void SetColor(int index, Color32 color)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x97E7B4", Offset = "0x97E7B4", VA = "0x97E7B4")]
		public void NextPoint()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x97E958", Offset = "0x97E958", VA = "0x97E958")]
		public float GetParticleTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x97E960", Offset = "0x97E960", VA = "0x97E960")]
		public void SetParticleTime(float time)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x97E968", Offset = "0x97E968", VA = "0x97E968")]
		public Vector3 GetParticlePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x97E974", Offset = "0x97E974", VA = "0x97E974")]
		public void SetParticlePosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x97EA3C", Offset = "0x97EA3C", VA = "0x97EA3C")]
		public void SetParticleDirection(Vector3 direction)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x97EA48", Offset = "0x97EA48", VA = "0x97EA48")]
		public Vector3 GetLastAddedPointPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x97EA54", Offset = "0x97EA54", VA = "0x97EA54")]
		public Vector3 GetParticleDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x97EA60", Offset = "0x97EA60", VA = "0x97EA60")]
		public Vector3 GetLastAddedPointDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x97EA6C", Offset = "0x97EA6C", VA = "0x97EA6C")]
		public float GetPathDeviation()
		{
			return default(float);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x97EB10", Offset = "0x97EB10", VA = "0x97EB10")]
		public int GetBirthIterator()
		{
			return default(int);
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x97EB18", Offset = "0x97EB18", VA = "0x97EB18")]
		public int GetDeathIterator()
		{
			return default(int);
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x97EB20", Offset = "0x97EB20", VA = "0x97EB20")]
		public int GetPointCache()
		{
			return default(int);
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x97EB28", Offset = "0x97EB28", VA = "0x97EB28")]
		public float TimeCached()
		{
			return default(float);
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x97EB30", Offset = "0x97EB30", VA = "0x97EB30")]
		public bool CanRemovePoint(int point)
		{
			return default(bool);
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x97EBB0", Offset = "0x97EBB0", VA = "0x97EBB0")]
		public bool CanRemoveTrail()
		{
			return default(bool);
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x97EC34", Offset = "0x97EC34", VA = "0x97EC34")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x97E2E8", Offset = "0x97E2E8", VA = "0x97E2E8")]
		public void Die()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x97EC3C", Offset = "0x97EC3C", VA = "0x97EC3C")]
		public bool IsDead()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000397")]
	public class TrailPoint
	{
		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 velocity;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lifetime;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float startLifetime;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float width;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _canRemove;

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xB4CD34", Offset = "0xB4CD34", VA = "0xB4CD34")]
		public TrailPoint(Vector3 position, float startLifetime)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xB4CD88", Offset = "0xB4CD88", VA = "0xB4CD88")]
		public TrailPoint(Vector3 position, float startLifetime, float width)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xB4CDE8", Offset = "0xB4CDE8", VA = "0xB4CDE8")]
		public TrailPoint(Vector3 position, Vector3 velocity, float startLifetime, float width)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xB47BA4", Offset = "0xB47BA4", VA = "0xB47BA4")]
		public void Update(float deltaTime, float width)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xB47B90", Offset = "0xB47B90", VA = "0xB47B90")]
		public float GetNormalizedLifetime()
		{
			return default(float);
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xB4CE60", Offset = "0xB4CE60", VA = "0xB4CE60")]
		public bool CanRemove()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000398")]
	[ExecuteInEditMode]
	public class PlaygroundTrails : MonoBehaviour
	{
		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundParticlesC playgroundSystem;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient lifetimeColor;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve pointArrayAlpha;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TrailColorMode colorMode;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TrailUvMode uvMode;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TrailRenderMode renderMode;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform billboardTransform;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 customRenderScale;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float time;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve timeWidth;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float widthScale;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float minVertexDistance;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float maxVertexDistance;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float maxPathDeviation;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool createPointsOnCollision;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int maxPoints;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool createFirstPointOnParticleBirth;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool createLastPointOnParticleDeath;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		public bool multithreading;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public PlaygroundEventC birthEvent;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public PlaygroundEventC deathEvent;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public PlaygroundEventC collisionEvent;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<ParticlePlaygroundTrail> _trails;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Transform parentTransform;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public GameObject parentGameObject;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material _materialCache;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _deltaTime;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _currentParticleCount;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _currentParticleMinLifetime;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _currentParticleMaxLifetime;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool _localSpace;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 _billboardTransformPosition;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private object _locker;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _isDoneThread;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Matrix4x4 _localMatrix;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private readonly Queue<TrailParticleInfo> _birthQueue;

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xB45760", Offset = "0xB45760", VA = "0xB45760")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xB45E08", Offset = "0xB45E08", VA = "0xB45E08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xB46090", Offset = "0xB46090", VA = "0xB46090")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xB460B4", Offset = "0xB460B4", VA = "0xB460B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xB47334", Offset = "0xB47334", VA = "0xB47334")]
		private void OnParticleBirthEvent(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xB473E8", Offset = "0xB473E8", VA = "0xB473E8")]
		private void OnParticleDeathEvent(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xB47694", Offset = "0xB47694", VA = "0xB47694")]
		private void OnParticleCollisionEvent(PlaygroundEventParticle particle)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xB478B8", Offset = "0xB478B8", VA = "0xB478B8")]
		public PlaygroundEventC GetBirthEvent()
		{
			return null;
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xB478C0", Offset = "0xB478C0", VA = "0xB478C0")]
		public PlaygroundEventC GetDeathEvent()
		{
			return null;
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xB478C8", Offset = "0xB478C8", VA = "0xB478C8")]
		public PlaygroundEventC GetCollisionEvent()
		{
			return null;
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xB45AA8", Offset = "0xB45AA8", VA = "0xB45AA8")]
		public void AddRequiredParticleEvents()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xB45F38", Offset = "0xB45F38", VA = "0xB45F38")]
		public void RemoveRequiredEvents()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xB478D0", Offset = "0xB478D0", VA = "0xB478D0")]
		public PlaygroundEventC GetEventFromType(EVENTTYPEC eventType)
		{
			return null;
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xB45D24", Offset = "0xB45D24", VA = "0xB45D24")]
		public Keyframe[] DefaultWidthKeys()
		{
			return null;
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xB46610", Offset = "0xB46610", VA = "0xB46610")]
		public void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xB4765C", Offset = "0xB4765C", VA = "0xB4765C")]
		public float EvaluateWidth(float normalizedTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xB479B8", Offset = "0xB479B8", VA = "0xB479B8")]
		public Color32 EvaluateColor(float normalizedTime)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xB479E8", Offset = "0xB479E8", VA = "0xB479E8")]
		public Color32 EvaluateColor(int trailIndex, int trailPointIndex)
		{
			return default(Color32);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xB46750", Offset = "0xB46750", VA = "0xB46750")]
		public void AddTrail(TrailParticleInfo particleInfo)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xB47578", Offset = "0xB47578", VA = "0xB47578")]
		public int GetOldestTrailWithParticleId(int particleId)
		{
			return default(int);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xB477CC", Offset = "0xB477CC", VA = "0xB477CC")]
		public int GetNewestTrailWithParticleId(int particleId)
		{
			return default(int);
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xB47A9C", Offset = "0xB47A9C", VA = "0xB47A9C")]
		public Transform GetParentTransform()
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xB47AA4", Offset = "0xB47AA4", VA = "0xB47AA4")]
		public GameObject GetParentGameObject()
		{
			return null;
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xB47AAC", Offset = "0xB47AAC", VA = "0xB47AAC")]
		public void StopTrail(int trailNumber)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xB47B40", Offset = "0xB47B40", VA = "0xB47B40")]
		public void StopOldestTrailWithParticleId(int particleId)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xB47B68", Offset = "0xB47B68", VA = "0xB47B68")]
		public void StopNewestTrailWithParticleId(int particleId)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xB45940", Offset = "0xB45940", VA = "0xB45940")]
		public void ResetTrails()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xB46974", Offset = "0xB46974", VA = "0xB46974")]
		public void RemoveTrail(int index)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xB45E2C", Offset = "0xB45E2C", VA = "0xB45E2C")]
		public void DestroyAllTrails()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xB46A38", Offset = "0xB46A38", VA = "0xB46A38")]
		private void CalculateTrail()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xB47BCC", Offset = "0xB47BCC", VA = "0xB47BCC")]
		public PlaygroundTrails()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xB47D04", Offset = "0xB47D04", VA = "0xB47D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87382C", Offset = "0x87382C")]
		private void <Update>b__40_0()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public enum TrailRenderMode
	{
		[Token(Token = "0x4001913")]
		Billboard,
		[Token(Token = "0x4001914")]
		Horizontal,
		[Token(Token = "0x4001915")]
		Vertical,
		[Token(Token = "0x4001916")]
		CustomRenderScale
	}
	[Token(Token = "0x200039A")]
	public enum TrailColorMode
	{
		[Token(Token = "0x4001918")]
		Lifetime,
		[Token(Token = "0x4001919")]
		PointArray
	}
	[Token(Token = "0x200039B")]
	public enum TrailUvMode
	{
		[Token(Token = "0x400191B")]
		Lifetime,
		[Token(Token = "0x400191C")]
		PointArray
	}
	[Token(Token = "0x200039C")]
	public struct TrailParticleInfo
	{
		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int particleId;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 velocity;

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x7666A4", Offset = "0x7666A4", VA = "0x7666A4")]
		public TrailParticleInfo(int particleId, Vector3 position, Vector3 velocity)
		{
		}
	}
	[Token(Token = "0x200039D")]
	[ExecuteInEditMode]
	public class PlaygroundC : MonoBehaviour
	{
		[Token(Token = "0x200071B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD68", Offset = "0x85DD68")]
		private sealed class <InitializePlayground>d__159 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundC <>4__this;

			[Token(Token = "0x170004DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E73")]
				[Address(RVA = "0x993674", Offset = "0x993674", VA = "0x993674", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E75")]
				[Address(RVA = "0x9936DC", Offset = "0x9936DC", VA = "0x9936DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E70")]
			[Address(RVA = "0x987E84", Offset = "0x987E84", VA = "0x987E84")]
			[DebuggerHidden]
			public <InitializePlayground>d__159(int <>1__state)
			{
			}

			[Token(Token = "0x6002E71")]
			[Address(RVA = "0x9930D0", Offset = "0x9930D0", VA = "0x9930D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E72")]
			[Address(RVA = "0x9930D4", Offset = "0x9930D4", VA = "0x9930D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E74")]
			[Address(RVA = "0x99367C", Offset = "0x99367C", VA = "0x99367C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int meshQuantity;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int particlesQuantity;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float version;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string specialVersion;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float globalTime;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float lastTimeUpdated;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float globalDeltaTime;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float globalTimescale;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Vector3 initialTargetPosition;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static int skinnedUpdateRate;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static bool triggerSceneRepaint;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float collisionSleepVelocity;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static int unsafeAutomaticThreadFrames;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Plane[] frustumPlanes;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool particleEventBirthInitialized;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static bool particleEventDeathInitialized;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static bool particleEventCollisionInitialized;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static bool particleEventTimeInitialized;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static PlaygroundC reference;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static Transform referenceTransform;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static GameObject referenceGameObject;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<PlaygroundParticlesC> particleSystems;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<ManipulatorObjectC> manipulators;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int paintMaxPositions;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool calculate;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PIXELMODEC pixelFilterMode;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool autoGroup;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool buildZeroAlphaPixels;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[HideInInspector]
		public bool drawGizmos;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[HideInInspector]
		public bool drawSourcePositions;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool showShuriken;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[HideInInspector]
		public bool paintToolbox;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public float collisionPlaneScale;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool showSnapshotsInHierarchy;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool drawWireframe;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[HideInInspector]
		public bool drawSplinePreview;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[HideInInspector]
		public bool globalTimeScale;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public ThreadPoolMethod threadPoolMethod;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public ThreadMethod threadMethod;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public ThreadMethodComponent skinnedMeshThreadMethod;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public ThreadMethodComponent turbulenceThreadMethod;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int maxThreads;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static PlaygroundQueue<Action> playgroundPool;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isDoneThread;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isDoneThreadLocal;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool isDoneThreadSkinned;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool isDoneThreadTurbulence;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int threads;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _prevMaxThreadCount;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static int processorCount;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private static int activeThreads;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static bool hasReference;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private static bool hasPlaygroundPool;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static System.Random random;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private static object locker;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private object lockerLocal;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int frameCount;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isReady;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool hasActiveParticleSystems;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
		private bool hasLocalNoThreads;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
		private bool hasLocalOnePerSystem;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool hasLocalOneForAll;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool hasActiveSkinnedMeshes;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool hasActiveTurbulence;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool isFirstUnsafeAutomaticFrames;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int threadAggregatorRuns;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> activeSystems;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ThreadMethod previousThreadMethod;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private ThreadMethodComponent previousSkinnedMeshThreadMethod;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ThreadMethodComponent previousTurbulenceThreadMethod;

		[Token(Token = "0x14000057")]
		public static event OnPlaygroundParticle particleEventBirth
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0x98137C", Offset = "0x98137C", VA = "0x98137C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87383C", Offset = "0x87383C")]
			add
			{
			}
			[Token(Token = "0x600198A")]
			[Address(RVA = "0x98146C", Offset = "0x98146C", VA = "0x98146C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87384C", Offset = "0x87384C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public static event OnPlaygroundParticle particleEventDeath
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0x98155C", Offset = "0x98155C", VA = "0x98155C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87385C", Offset = "0x87385C")]
			add
			{
			}
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x98164C", Offset = "0x98164C", VA = "0x98164C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87386C", Offset = "0x87386C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public static event OnPlaygroundParticle particleEventCollision
		{
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x98173C", Offset = "0x98173C", VA = "0x98173C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87387C", Offset = "0x87387C")]
			add
			{
			}
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x98182C", Offset = "0x98182C", VA = "0x98182C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87388C", Offset = "0x87388C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public static event OnPlaygroundParticle particleEventTime
		{
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x98191C", Offset = "0x98191C", VA = "0x98191C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87389C", Offset = "0x87389C")]
			add
			{
			}
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x981A0C", Offset = "0x981A0C", VA = "0x981A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8738AC", Offset = "0x8738AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x981AFC", Offset = "0x981AFC", VA = "0x981AFC")]
		public static void SendParticleEventBirth(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x981BA4", Offset = "0x981BA4", VA = "0x981BA4")]
		public static void SendParticleEventDeath(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x981C4C", Offset = "0x981C4C", VA = "0x981C4C")]
		public static void SendParticleEventCollision(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x981CF4", Offset = "0x981CF4", VA = "0x981CF4")]
		public static void SendParticleEventTime(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x981D9C", Offset = "0x981D9C", VA = "0x981D9C")]
		public static PlaygroundParticlesC Particle()
		{
			return null;
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x981F10", Offset = "0x981F10", VA = "0x981F10")]
		public static PlaygroundParticlesC ParticleNew()
		{
			return null;
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x982510", Offset = "0x982510", VA = "0x982510")]
		public static PlaygroundParticlesC Particle(Texture2D image, string name, Vector3 position, Quaternion rotation, Vector3 offset, float particleSize, float scale, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x9828F0", Offset = "0x9828F0", VA = "0x9828F0")]
		public static PlaygroundParticlesC Particle(Texture2D image)
		{
			return null;
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x982B14", Offset = "0x982B14", VA = "0x982B14")]
		public static PlaygroundParticlesC Particle(Texture2D[] images, string name, Vector3 position, Quaternion rotation, Vector3 offset, float particleSize, float scale, Material material)
		{
			return null;
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x982B30", Offset = "0x982B30", VA = "0x982B30")]
		public static PlaygroundParticlesC Particle(Texture2D[] images)
		{
			return null;
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x982CF8", Offset = "0x982CF8", VA = "0x982CF8")]
		public static PlaygroundParticlesC Particle(Mesh mesh, Texture2D texture, string name, Vector3 position, Quaternion rotation, float particleScale, Vector3 offset, Material material)
		{
			return null;
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x982E94", Offset = "0x982E94", VA = "0x982E94")]
		public static PlaygroundParticlesC Particle(Mesh mesh, Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x983120", Offset = "0x983120", VA = "0x983120")]
		public static PlaygroundParticlesC Particle(Mesh[] meshes, Texture2D[] textures, string name, Vector3 position, Quaternion rotation, float particleScale, Vector3[] offsets, Material material)
		{
			return null;
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x983130", Offset = "0x983130", VA = "0x983130")]
		public static PlaygroundParticlesC Particle(Mesh[] meshes, Texture2D[] textures)
		{
			return null;
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x983310", Offset = "0x983310", VA = "0x983310")]
		public static int Emit(PlaygroundParticlesC playgroundParticles)
		{
			return default(int);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x9833E0", Offset = "0x9833E0", VA = "0x9833E0")]
		public static int Emit(PlaygroundParticlesC playgroundParticles, Vector3 position, Vector3 normal, Color color)
		{
			return default(int);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x983478", Offset = "0x983478", VA = "0x983478")]
		public static void Emit(PlaygroundParticlesC playgroundParticles, bool setEmission)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x98358C", Offset = "0x98358C", VA = "0x98358C")]
		public static void GetPosition(SkinnedWorldObject particleStateWorldObject, bool updateNormals)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x983864", Offset = "0x983864", VA = "0x983864")]
		public static void GetPosition(Vector3[] vertices, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x983930", Offset = "0x983930", VA = "0x983930")]
		public static void GetNormals(Vector3[] normals, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x983958", Offset = "0x983958", VA = "0x983958")]
		public static void SetAlpha(PlaygroundParticlesC playgroundParticles, float alpha)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x9839E4", Offset = "0x9839E4", VA = "0x9839E4")]
		public static void SetSize(PlaygroundParticlesC playgroundParticles, float size)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x983AA4", Offset = "0x983AA4", VA = "0x983AA4")]
		public static void Translate(PlaygroundParticlesC playgroundParticles, Vector3 direction)
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x983BD0", Offset = "0x983BD0", VA = "0x983BD0")]
		public static void Add(PlaygroundParticlesC playgroundParticles, ParticleStateC state)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x983C4C", Offset = "0x983C4C", VA = "0x983C4C")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x983D68", Offset = "0x983D68", VA = "0x983D68")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x983D6C", Offset = "0x983D6C", VA = "0x983D6C")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, Texture2D depthmap, float depthmapStrength, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x983F04", Offset = "0x983F04", VA = "0x983F04")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, Texture2D depthmap, float depthmapStrength, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x983F08", Offset = "0x983F08", VA = "0x983F08")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x983F10", Offset = "0x983F10", VA = "0x983F10")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x983F14", Offset = "0x983F14", VA = "0x983F14")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, Texture2D texture, float scale, Vector3 offset, string stateName)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x983F1C", Offset = "0x983F1C", VA = "0x983F1C")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Mesh mesh, Texture2D texture, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x983F20", Offset = "0x983F20", VA = "0x983F20")]
		public static PlaygroundColliderC AddCollider(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x983FBC", Offset = "0x983FBC", VA = "0x983FBC")]
		public static PlaygroundColliderC AddCollider(PlaygroundParticlesC playgroundParticles, Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x98405C", Offset = "0x98405C", VA = "0x98405C")]
		public static void SetParticleCount(PlaygroundParticlesC playgroundParticles, int amount)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x984248", Offset = "0x984248", VA = "0x984248")]
		public static void SetLifetime(PlaygroundParticlesC playgroundParticles, float time)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x9843C0", Offset = "0x9843C0", VA = "0x9843C0")]
		public static void SetMaterial(PlaygroundParticlesC playgroundParticles, Material particleMaterial)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x9843E8", Offset = "0x9843E8", VA = "0x9843E8")]
		public static void Destroy(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x984468", Offset = "0x984468", VA = "0x984468")]
		public static WorldObject WorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x9845A8", Offset = "0x9845A8", VA = "0x9845A8")]
		public static SkinnedWorldObject SkinnedWorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x9846E8", Offset = "0x9846E8", VA = "0x9846E8")]
		public static ManipulatorObjectC ManipulatorObject(MANIPULATORTYPEC type, LayerMask affects, Transform manipulatorTransform, float size, float strength)
		{
			return null;
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x9848FC", Offset = "0x9848FC", VA = "0x9848FC")]
		public static ManipulatorObjectC ManipulatorObject(Transform manipulatorTransform)
		{
			return null;
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x98493C", Offset = "0x98493C", VA = "0x98493C")]
		public static ManipulatorObjectC ManipulatorObject(MANIPULATORTYPEC type, LayerMask affects, Transform manipulatorTransform, float size, float strength, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x984944", Offset = "0x984944", VA = "0x984944")]
		public static ManipulatorObjectC ManipulatorObject(Transform manipulatorTransform, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x984988", Offset = "0x984988", VA = "0x984988")]
		public static ManipulatorObjectC GetManipulator(int i)
		{
			return null;
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x984AD0", Offset = "0x984AD0", VA = "0x984AD0")]
		public static ManipulatorObjectC GetManipulator(int i, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x984B98", Offset = "0x984B98", VA = "0x984B98")]
		public static List<PlaygroundEventParticle> GetManipulatorParticles(int manipulator, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x985804", Offset = "0x985804", VA = "0x985804")]
		public static List<PlaygroundEventParticle> GetManipulatorParticles(int manipulator)
		{
			return null;
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x985BDC", Offset = "0x985BDC", VA = "0x985BDC")]
		public static Transform CreateTransform()
		{
			return null;
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x985C50", Offset = "0x985C50", VA = "0x985C50")]
		public static Transform CreatePlaygroundTransform(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x985E44", Offset = "0x985E44", VA = "0x985E44")]
		public static PlaygroundSpline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x985FAC", Offset = "0x985FAC", VA = "0x985FAC")]
		public static PlaygroundSpline CreateSpline(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x98619C", Offset = "0x98619C", VA = "0x98619C")]
		public static PlaygroundSpline CreateSpline(ManipulatorPropertyC manipulatorProperty)
		{
			return null;
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x986220", Offset = "0x986220", VA = "0x986220")]
		public static PlaygroundEventC CreateEvent()
		{
			return null;
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x9862CC", Offset = "0x9862CC", VA = "0x9862CC")]
		public static PlaygroundEventC CreateEvent(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x9863E4", Offset = "0x9863E4", VA = "0x9863E4")]
		public static PlaygroundEventC GetEvent(int i, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x9864AC", Offset = "0x9864AC", VA = "0x9864AC")]
		public static void RemoveEvent(int i, PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x986718", Offset = "0x986718", VA = "0x986718")]
		public static PlaygroundParticlesC GetParticles(int i)
		{
			return null;
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x986898", Offset = "0x986898", VA = "0x986898")]
		public static ParticleProjectionC ParticleProjection(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x986948", Offset = "0x986948", VA = "0x986948")]
		public static PaintObjectC PaintObject(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x9869E4", Offset = "0x9869E4", VA = "0x9869E4")]
		public static int Paint(PlaygroundParticlesC playgroundParticles, Vector3 position, Vector3 normal, Transform parent, Color32 color)
		{
			return default(int);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x986A08", Offset = "0x986A08", VA = "0x986A08")]
		public static void Paint(PaintObjectC paintObject, Vector3 position, Vector3 normal, Transform parent, Color32 color)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x986A20", Offset = "0x986A20", VA = "0x986A20")]
		public static bool Erase(PlaygroundParticlesC playgroundParticles, Vector3 position, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x986A40", Offset = "0x986A40", VA = "0x986A40")]
		public static bool Erase(PaintObjectC paintObject, Vector3 position, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x986A54", Offset = "0x986A54", VA = "0x986A54")]
		public static bool Erase(PlaygroundParticlesC playgroundParticles, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x986A74", Offset = "0x986A74", VA = "0x986A74")]
		public static void ClearPaint(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x986A94", Offset = "0x986A94", VA = "0x986A94")]
		public static int GetPaintPositionLength(PlaygroundParticlesC playgroundParticles)
		{
			return default(int);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x986AB8", Offset = "0x986AB8", VA = "0x986AB8")]
		public static void SetInitialTargetPosition(PlaygroundParticlesC playgroundParticles, Vector3 position)
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x986CB8", Offset = "0x986CB8", VA = "0x986CB8")]
		public static void Emission(PlaygroundParticlesC playgroundParticles, bool emit)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x986DB4", Offset = "0x986DB4", VA = "0x986DB4")]
		public static void Emission(PlaygroundParticlesC playgroundParticles, bool emit, bool restEmission)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x986DC0", Offset = "0x986DC0", VA = "0x986DC0")]
		public static void Clear(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x986E50", Offset = "0x986E50", VA = "0x986E50")]
		public static void RefreshScatter(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x987080", Offset = "0x987080", VA = "0x987080")]
		public static PlaygroundParticlesC InstantiatePreset(string presetName)
		{
			return null;
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x9873C0", Offset = "0x9873C0", VA = "0x9873C0")]
		public static PlaygroundParticlesC InstantiatePreset(string categoryName, string presetName)
		{
			return null;
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x987454", Offset = "0x987454", VA = "0x987454")]
		public static bool HasReference()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x9874BC", Offset = "0x9874BC", VA = "0x9874BC")]
		public static bool HasPlaygroundPool()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x987524", Offset = "0x987524", VA = "0x987524")]
		public bool IsDoneThread()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x98752C", Offset = "0x98752C", VA = "0x98752C")]
		public bool IsDoneThreadTurbulence()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x987534", Offset = "0x987534", VA = "0x987534")]
		public bool IsDoneThreadSkinnedMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x98753C", Offset = "0x98753C", VA = "0x98753C")]
		public bool IsFirstUnsafeAutomaticFrames()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x987544", Offset = "0x987544", VA = "0x987544")]
		public bool HasEnabledGlobalManipulators()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x97F18C", Offset = "0x97F18C", VA = "0x97F18C")]
		public static Color32[] GetPixels(Texture2D image)
		{
			return null;
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x9876A0", Offset = "0x9876A0", VA = "0x9876A0")]
		public static Vector3 Offset(PLAYGROUNDORIGINC origin, int imageWidth, int imageHeight, float meshScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x987810", Offset = "0x987810", VA = "0x987810")]
		public static Vector3[] RandomVector3(int length, Vector3 min, Vector3 max)
		{
			return null;
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x987A14", Offset = "0x987A14", VA = "0x987A14")]
		public static float[] RandomFloat(int length, float min, float max)
		{
			return null;
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x987B20", Offset = "0x987B20", VA = "0x987B20")]
		public static void ShuffleArray(float[] arr)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x987C18", Offset = "0x987C18", VA = "0x987C18")]
		public static void ShuffleArray(int[] arr)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x97B110", Offset = "0x97B110", VA = "0x97B110")]
		public static int Largest(int[] compare)
		{
			return default(int);
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x987D10", Offset = "0x987D10", VA = "0x987D10")]
		public static int CountZeroAlphasInTexture(Texture2D image)
		{
			return default(int);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x981E1C", Offset = "0x981E1C", VA = "0x981E1C")]
		public static GameObject ResourceInstantiate(string n)
		{
			return null;
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x987D8C", Offset = "0x987D8C", VA = "0x987D8C")]
		public static void TimeReset()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x987E14", Offset = "0x987E14", VA = "0x987E14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8738BC", Offset = "0x8738BC")]
		public IEnumerator InitializePlayground()
		{
			return null;
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x987EB0", Offset = "0x987EB0", VA = "0x987EB0")]
		public static bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x987F24", Offset = "0x987F24", VA = "0x987F24")]
		public static void SetTime()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x988074", Offset = "0x988074", VA = "0x988074")]
		public static void SetMaxThreads(int threadCount)
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x9882E4", Offset = "0x9882E4", VA = "0x9882E4")]
		private static void CheckEvents()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x988394", Offset = "0x988394", VA = "0x988394")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x988448", Offset = "0x988448", VA = "0x988448")]
		private void Start()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x9884A4", Offset = "0x9884A4", VA = "0x9884A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x98BE88", Offset = "0x98BE88", VA = "0x98BE88")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x98C1AC", Offset = "0x98C1AC", VA = "0x98C1AC")]
		public static int ActiveThreads()
		{
			return default(int);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x98C214", Offset = "0x98C214", VA = "0x98C214")]
		public static int ProcessorCount()
		{
			return default(int);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x98AF88", Offset = "0x98AF88", VA = "0x98AF88")]
		private void ThreadAggregator()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x991768", Offset = "0x991768", VA = "0x991768")]
		public static void RunAsync(Action a, ThreadPoolMethod threadPoolMethod)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x98C27C", Offset = "0x98C27C", VA = "0x98C27C")]
		public static void RunAsync(Action a)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x9918C8", Offset = "0x9918C8", VA = "0x9918C8")]
		public static void RunAsyncPlaygroundPool(Action a)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x991AE4", Offset = "0x991AE4", VA = "0x991AE4")]
		private static void RunAction(object a)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x991BCC", Offset = "0x991BCC", VA = "0x991BCC")]
		public PlaygroundC()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x991E74", Offset = "0x991E74", VA = "0x991E74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873920", Offset = "0x873920")]
		private void <ThreadAggregator>b__184_0()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x991F90", Offset = "0x991F90", VA = "0x991F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873930", Offset = "0x873930")]
		private void <ThreadAggregator>b__184_1()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x992D00", Offset = "0x992D00", VA = "0x992D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873940", Offset = "0x873940")]
		private void <ThreadAggregator>b__184_2()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x992F00", Offset = "0x992F00", VA = "0x992F00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873950", Offset = "0x873950")]
		private void <ThreadAggregator>b__184_3()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class PlaygroundQueue<T> : IDisposable where T : class
	{
		[Serializable]
		[Token(Token = "0x200071C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD78", Offset = "0x85DD78")]
		private sealed class <>c
		{
			[Token(Token = "0x4002FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Action<Thread> <>9__12_1;

			[Token(Token = "0x6002E77")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E78")]
			internal void <Dispose>b__12_1(Thread thread)
			{
			}
		}

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object _locker;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Thread> _workers;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Queue<T> _taskQueue;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> _dequeueAction;

		[Token(Token = "0x6001A02")]
		public PlaygroundQueue(int workerCount, Action<T> dequeueAction)
		{
		}

		[Token(Token = "0x6001A03")]
		public bool HasPool()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A04")]
		public bool HasTasks()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A05")]
		public int ThreadPoolCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001A06")]
		public int TaskCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001A07")]
		public void SetThreadPool(int amount)
		{
		}

		[Token(Token = "0x6001A08")]
		public void EnqueueTask(T task)
		{
		}

		[Token(Token = "0x6001A09")]
		private void Consume()
		{
		}

		[Token(Token = "0x6001A0A")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A0B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873960", Offset = "0x873960")]
		private void <Dispose>b__12_0(Thread thread)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039F")]
	public class PaintObjectC
	{
		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public List<PaintPositionC> paintPositions;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int positionLength;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public Vector3 lastPaintPosition;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public COLLISIONTYPEC collisionType;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minDepth;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxDepth;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float spacing;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask layerMask;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlaygroundBrushC brush;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool exceedMaxStopsPaint;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool initialized;

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x97CAEC", Offset = "0x97CAEC", VA = "0x97CAEC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x97CBEC", Offset = "0x97CBEC", VA = "0x97CBEC")]
		public bool Paint(Ray ray, Color32 color)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x97CF54", Offset = "0x97CF54", VA = "0x97CF54")]
		public int Paint(Vector3 pos, Vector3 norm, Transform parent, Color32 color)
		{
			return default(int);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x97D14C", Offset = "0x97D14C", VA = "0x97D14C")]
		public bool Erase(Vector3 pos, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x97D2B0", Offset = "0x97D2B0", VA = "0x97D2B0")]
		public bool Erase(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x97D348", Offset = "0x97D348", VA = "0x97D348")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x97D3D8", Offset = "0x97D3D8", VA = "0x97D3D8")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x97D464", Offset = "0x97D464", VA = "0x97D464")]
		public Vector3 GetNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x97D4F4", Offset = "0x97D4F4", VA = "0x97D4F4")]
		public Transform GetParent(int index)
		{
			return null;
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x97D580", Offset = "0x97D580", VA = "0x97D580")]
		public Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x97D610", Offset = "0x97D610", VA = "0x97D610")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x97D6E4", Offset = "0x97D6E4", VA = "0x97D6E4")]
		public void Update(int thisPosition)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x97D87C", Offset = "0x97D87C", VA = "0x97D87C")]
		public void RemoveNonParented()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x97D96C", Offset = "0x97D96C", VA = "0x97D96C")]
		public bool RemoveNonParented(int thisPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x97DA54", Offset = "0x97DA54", VA = "0x97DA54")]
		public void ClearPaint()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x97DAC0", Offset = "0x97DAC0", VA = "0x97DAC0")]
		public PaintObjectC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x97DC3C", Offset = "0x97DC3C", VA = "0x97DC3C")]
		public PaintObjectC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A0")]
	public class PaintPositionC
	{
		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color32 color;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform parent;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 initialPosition;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 initialNormal;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion parentRotation;

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x97D144", Offset = "0x97D144", VA = "0x97D144")]
		public PaintPositionC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A1")]
	public class PlaygroundBrushC
	{
		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D texture;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scale;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BRUSHDETAILC detail;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Color32[] color;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int colorLength;

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x981274", Offset = "0x981274", VA = "0x981274")]
		public void SetTexture(Texture2D newTexture)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x98127C", Offset = "0x98127C", VA = "0x98127C")]
		public void Construct()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x9812F8", Offset = "0x9812F8", VA = "0x9812F8")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x981340", Offset = "0x981340", VA = "0x981340")]
		public void SetColor(Color32 c, int index)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x97DC7C", Offset = "0x97DC7C", VA = "0x97DC7C")]
		public PlaygroundBrushC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x97CBCC", Offset = "0x97CBCC", VA = "0x97CBCC")]
		public PlaygroundBrushC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A2")]
	public class ParticleStateC
	{
		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color32[] color;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] position;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] normals;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D stateTexture;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D stateDepthmap;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float stateDepthmapStrength;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Mesh stateMesh;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string stateName;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stateScale;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 stateOffset;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform stateTransform;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Matrix4x4 stateTransformMx;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ScaleMethod stateScaleMethod;

		[NonSerialized]
		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool initialized;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public int colorLength;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public int positionLength;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public bool applyChromaKey;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public Color32 chromaKey;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float chromaKeySpread;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool isInitializing;

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x97FEB0", Offset = "0x97FEB0", VA = "0x97FEB0")]
		public bool IsInitializing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x97FEB8", Offset = "0x97FEB8", VA = "0x97FEB8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x9806A0", Offset = "0x9806A0", VA = "0x9806A0")]
		public void UpdateMatrix(bool isLocal)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x980100", Offset = "0x980100", VA = "0x980100")]
		public void ConstructParticles(Texture2D image, float scale, Vector3 offset, string newStateName, Transform newStateTransform)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x97B194", Offset = "0x97B194", VA = "0x97B194")]
		public void ConstructParticles(Mesh mesh, Texture2D texture, float scale, Vector3 offset, string newStateName, Transform newStateTransform)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x97BC20", Offset = "0x97BC20", VA = "0x97BC20")]
		public void ConstructParticles(Mesh mesh, float scale, Vector3 offset, string newStateName, Transform newStateTransform)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x980824", Offset = "0x980824", VA = "0x980824")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x980878", Offset = "0x980878", VA = "0x980878")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x980988", Offset = "0x980988", VA = "0x980988")]
		public Vector3 GetLocalPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x980AA8", Offset = "0x980AA8", VA = "0x980AA8")]
		public Vector3 GetNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x980B10", Offset = "0x980B10", VA = "0x980B10")]
		public Vector3 GetLocalNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x980B84", Offset = "0x980B84", VA = "0x980B84")]
		public Color32[] GetColors()
		{
			return null;
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x980BE4", Offset = "0x980BE4", VA = "0x980BE4")]
		public Vector3[] GetPositions()
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x980C44", Offset = "0x980C44", VA = "0x980C44")]
		public Vector3[] GetNormals()
		{
			return null;
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x980CA4", Offset = "0x980CA4", VA = "0x980CA4")]
		public void SetColor(int index, Color32 c)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x980CE0", Offset = "0x980CE0", VA = "0x980CE0")]
		public void SetPosition(int index, Vector3 v)
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x980D28", Offset = "0x980D28", VA = "0x980D28")]
		public void SetNormal(int index, Vector3 v)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x980D70", Offset = "0x980D70", VA = "0x980D70")]
		public Vector3 GetParentedPosition(int thisPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x980E7C", Offset = "0x980E7C", VA = "0x980E7C")]
		public ParticleStateC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x97B180", Offset = "0x97B180", VA = "0x97B180")]
		public ParticleStateC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A3")]
	public class ParticleProjectionC
	{
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		private Color32[] sourceColors;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		private Vector3[] sourcePositions;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		private Vector3[] targetPositions;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		private Vector3[] targetNormals;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		private bool[] hasProjected;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		private Transform[] targetParents;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D projectionTexture;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 projectionOrigin;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform projectionTransform;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Matrix4x4 projectionMatrix;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 projectionPosition;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 projectionDirection;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Quaternion projectionRotation;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float projectionDistance;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float projectionScale;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public LayerMask projectionMask;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public COLLISIONTYPEC collisionType;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float minDepth;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float maxDepth;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float surfaceOffset;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool liveUpdate;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool hasRefreshed;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public int colorLength;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public int positionLength;

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x97EC44", Offset = "0x97EC44", VA = "0x97EC44")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x97ED0C", Offset = "0x97ED0C", VA = "0x97ED0C")]
		public void Construct(Texture2D image, Transform transform)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x97F058", Offset = "0x97F058", VA = "0x97F058")]
		public void UpdateSource()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x97F144", Offset = "0x97F144", VA = "0x97F144")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x97F414", Offset = "0x97F414", VA = "0x97F414")]
		public void Update(int index)
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x97F9D8", Offset = "0x97F9D8", VA = "0x97F9D8")]
		public Color32 GetColor(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x97FA20", Offset = "0x97FA20", VA = "0x97FA20")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x97FA74", Offset = "0x97FA74", VA = "0x97FA74")]
		public Vector3 GetNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x97FAC8", Offset = "0x97FAC8", VA = "0x97FAC8")]
		public Transform GetParent(int index)
		{
			return null;
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x97FB10", Offset = "0x97FB10", VA = "0x97FB10")]
		public bool HasProjection(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x97FB58", Offset = "0x97FB58", VA = "0x97FB58")]
		public ParticleProjectionC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x97FE5C", Offset = "0x97FE5C", VA = "0x97FE5C")]
		public ParticleProjectionC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A4")]
	public class Vector3AnimationCurveC
	{
		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve x;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve y;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve z;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float xRepeat;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yRepeat;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float zRepeat;

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xB4CE68", Offset = "0xB4CE68", VA = "0xB4CE68")]
		public Vector3 Evaluate(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xB4CE70", Offset = "0xB4CE70", VA = "0xB4CE70")]
		public Vector3 Evaluate(float time, float scale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xB4CF9C", Offset = "0xB4CF9C", VA = "0xB4CF9C")]
		public bool HasKeys()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xB4D0D8", Offset = "0xB4D0D8", VA = "0xB4D0D8")]
		public void SetKeyValues(int key, float value)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xB4D138", Offset = "0xB4D138", VA = "0xB4D138")]
		public void SetKeyValues(int key, Vector3 value, float inTangent, float outTangent)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xB4D3B4", Offset = "0xB4D3B4", VA = "0xB4D3B4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xB4D4A8", Offset = "0xB4D4A8", VA = "0xB4D4A8")]
		public void Reset1()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xB4D5E0", Offset = "0xB4D5E0", VA = "0xB4D5E0")]
		public void ResetWithMidKey()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xB4D020", Offset = "0xB4D020", VA = "0xB4D020")]
		public void CheckNull()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xB4D6F0", Offset = "0xB4D6F0", VA = "0xB4D6F0")]
		public Vector3AnimationCurveC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xB4D834", Offset = "0xB4D834", VA = "0xB4D834")]
		public Vector3AnimationCurveC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A5")]
	public class WorldObjectBaseC
	{
		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Transform transform;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Rigidbody rigidbody;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Mesh mesh;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] vertexPositions;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] normals;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool updateNormals;

		[NonSerialized]
		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int cachedId;

		[NonSerialized]
		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool initialized;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public Matrix4x4 transformMatrix;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public ScaleMethod scaleMethod;

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xB4DB24", Offset = "0xB4DB24", VA = "0xB4DB24")]
		public void UpdateMatrix(bool isLocal)
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xB4C8A0", Offset = "0xB4C8A0", VA = "0xB4C8A0")]
		public WorldObjectBaseC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A6")]
	public class WorldObject : WorldObjectBaseC
	{
		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Renderer renderer;

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xB4D84C", Offset = "0xB4D84C", VA = "0xB4D84C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xB4D9D0", Offset = "0xB4D9D0", VA = "0xB4D9D0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xB4DA7C", Offset = "0xB4DA7C", VA = "0xB4DA7C")]
		public WorldObject Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xB4DB1C", Offset = "0xB4DB1C", VA = "0xB4DB1C")]
		public WorldObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A7")]
	public class SkinnedWorldObject : WorldObjectBaseC
	{
		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int downResolution;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform[] boneTransforms;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BoneWeight[] weights;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Matrix4x4[] bindPoses;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Matrix4x4[] boneMatrices;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3[] vertices;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3[] localVertices;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public bool isDoneThread;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Mesh bakedMesh;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xB4BDF4", Offset = "0xB4BDF4", VA = "0xB4BDF4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xB4C394", Offset = "0xB4C394", VA = "0xB4C394")]
		public void MeshUpdate()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xB4C3FC", Offset = "0xB4C3FC", VA = "0xB4C3FC")]
		public void BoneUpdate()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xB4C004", Offset = "0xB4C004", VA = "0xB4C004")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xB4C72C", Offset = "0xB4C72C", VA = "0xB4C72C")]
		public void UpdateOnNewThread()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xB4C7D8", Offset = "0xB4C7D8", VA = "0xB4C7D8")]
		public SkinnedWorldObject Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xB4C88C", Offset = "0xB4C88C", VA = "0xB4C88C")]
		public SkinnedWorldObject()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xB4C8A8", Offset = "0xB4C8A8", VA = "0xB4C8A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873970", Offset = "0x873970")]
		private void <UpdateOnNewThread>b__15_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A8")]
	public class ManipulatorObjectC
	{
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MANIPULATORTYPEC type;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ManipulatorPropertyC property;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ManipulatorPropertyC> properties;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask affects;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlaygroundTransformC transform;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MANIPULATORSHAPEC shape;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float size;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Bounds bounds;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float strength;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float strengthSmoothing;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float strengthDistanceEffect;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool applyParticleLifetimeStrength;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve particleLifetimeStrength;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool enabled;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool inverseBounds;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int manipulatorId;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool applyLifetimeFilter;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float lifetimeFilterMinimum;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float lifetimeFilterMaximum;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool applyParticleFilter;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float particleFilterMinimum;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float particleFilterMaximum;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public PlaygroundAxisConstraintsC axisConstraints;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool unfolded;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool trackParticles;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public TrackingMethod trackingMethod;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool sendEventEnter;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool sendEventExit;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool sendEventBirth;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool sendEventDeath;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool sendEventCollision;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool sendEventsUnfolded;

		[NonSerialized]
		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<ManipulatorParticle> particles;

		[NonSerialized]
		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<ManipulatorParticle> nonAffectedParticles;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public PlaygroundEventParticle manipulatorEventParticle;

		[NonSerialized]
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool initializedEventEnter;

		[NonSerialized]
		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool initializedEventExit;

		[NonSerialized]
		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		private bool initializedEventBirth;

		[NonSerialized]
		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
		private bool initializedEventDeath;

		[NonSerialized]
		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool initializedEventCollision;

		[Token(Token = "0x1400005B")]
		public event OnPlaygroundParticle particleEventEnter
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xBADFEC", Offset = "0xBADFEC", VA = "0xBADFEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873980", Offset = "0x873980")]
			add
			{
			}
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xBAEDB0", Offset = "0xBAEDB0", VA = "0xBAEDB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873990", Offset = "0x873990")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event OnPlaygroundParticle particleEventExit
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xBAEE54", Offset = "0xBAEE54", VA = "0xBAEE54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8739A0", Offset = "0x8739A0")]
			add
			{
			}
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xBAEEF8", Offset = "0xBAEEF8", VA = "0xBAEEF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8739B0", Offset = "0x8739B0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event OnPlaygroundParticle particleEventBirth
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xBAEF9C", Offset = "0xBAEF9C", VA = "0xBAEF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8739C0", Offset = "0x8739C0")]
			add
			{
			}
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xBAF040", Offset = "0xBAF040", VA = "0xBAF040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8739D0", Offset = "0x8739D0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event OnPlaygroundParticle particleEventDeath
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xBAF0E4", Offset = "0xBAF0E4", VA = "0xBAF0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8739E0", Offset = "0x8739E0")]
			add
			{
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xBAF188", Offset = "0xBAF188", VA = "0xBAF188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8739F0", Offset = "0x8739F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event OnPlaygroundParticle particleEventCollision
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0xBAF22C", Offset = "0xBAF22C", VA = "0xBAF22C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873A00", Offset = "0x873A00")]
			add
			{
			}
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0xBAF2D0", Offset = "0xBAF2D0", VA = "0xBAF2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873A10", Offset = "0x873A10")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xBAF374", Offset = "0xBAF374", VA = "0xBAF374")]
		public bool Contains(Vector3 position, Vector3 mPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xBAF614", Offset = "0xBAF614", VA = "0xBAF614")]
		public void SendParticleEventEnter()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xBAF644", Offset = "0xBAF644", VA = "0xBAF644")]
		public void SendParticleEventExit()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xBAF674", Offset = "0xBAF674", VA = "0xBAF674")]
		public void SendParticleEventBirth()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xBAF6A4", Offset = "0xBAF6A4", VA = "0xBAF6A4")]
		public void SendParticleEventDeath()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xBAF6D4", Offset = "0xBAF6D4", VA = "0xBAF6D4")]
		public void SendParticleEventCollision()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xBAF704", Offset = "0xBAF704", VA = "0xBAF704")]
		public PlaygroundEventParticle GetParticle(int index)
		{
			return null;
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xBAF7D8", Offset = "0xBAF7D8", VA = "0xBAF7D8")]
		public PlaygroundEventParticle GetParticle(int particleSystemId, int particleId)
		{
			return null;
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xBAF8B8", Offset = "0xBAF8B8", VA = "0xBAF8B8")]
		public List<PlaygroundEventParticle> GetParticles()
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xBAFA64", Offset = "0xBAFA64", VA = "0xBAFA64")]
		public bool ContainsParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xBAFB64", Offset = "0xBAFB64", VA = "0xBAFB64")]
		public bool IsSameId(int compareId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xBAFB74", Offset = "0xBAFB74", VA = "0xBAFB74")]
		public bool AddParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xBAFD10", Offset = "0xBAFD10", VA = "0xBAFD10")]
		public bool RemoveParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xBAFE6C", Offset = "0xBAFE6C", VA = "0xBAFE6C")]
		public void KillAllParticles()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xBAFFDC", Offset = "0xBAFFDC", VA = "0xBAFFDC")]
		public bool ContainsNonAffectedParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xBB00C8", Offset = "0xBB00C8", VA = "0xBB00C8")]
		public void AddNonAffectedParticle(int particleSystemId, int particleId)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xBB0158", Offset = "0xBB0158", VA = "0xBB0158")]
		public bool RemoveNonAffectedParticle(int particleSystemId, int particleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xBB026C", Offset = "0xBB026C", VA = "0xBB026C")]
		public bool LifetimeFilter(float life, float total)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xBB02A4", Offset = "0xBB02A4", VA = "0xBB02A4")]
		public bool ParticleFilter(int p, int total)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xBB02E4", Offset = "0xBB02E4", VA = "0xBB02E4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xBB0D54", Offset = "0xBB0D54", VA = "0xBB0D54")]
		public void SetTransform(Transform transform)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xBB0D70", Offset = "0xBB0D70", VA = "0xBB0D70")]
		public void SetLocalTargetsPosition(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xBB0EBC", Offset = "0xBB0EBC", VA = "0xBB0EBC")]
		public ManipulatorObjectC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xBB10F4", Offset = "0xBB10F4", VA = "0xBB10F4")]
		public ManipulatorObjectC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A9")]
	public class ManipulatorPropertyC
	{
		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MANIPULATORPROPERTYTYPEC type;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MANIPULATORPROPERTYTRANSITIONC transition;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MathManipulatorProperty mathProperty;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 velocity;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 localVelocity;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color color;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient lifetimeColor;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float size;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<PlaygroundTransformC> targets;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int targetPointer;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WorldObject meshTarget;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SkinnedWorldObject skinnedMeshTarget;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool meshTargetIsProcedural;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Matrix4x4 meshTargetMatrix;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ParticleStateC stateTarget;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public PlaygroundSpline splineTarget;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SPLINETARGETMETHOD splineTargetMethod;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float splineTimeOffset;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool splineTargetIsReady;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool useLocalRotation;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool onlyColorInRange;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		public bool keepColorAlphas;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool onlyPositionInRange;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool onlySizeInRange;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float zeroVelocityStrength;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float strength;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool unfolded;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public TARGETSORTINGC targetSorting;

		[NonSerialized]
		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int[] targetSortingList;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TARGETSORTINGC previousTargetSorting;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public TURBULENCETYPE turbulenceType;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float turbulenceTimeScale;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float turbulenceScale;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool turbulenceApplyLifetimeStrength;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AnimationCurve turbulenceLifetimeStrength;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SimplexNoise turbulenceSimplex;

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xBB058C", Offset = "0xBB058C", VA = "0xBB058C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xBB0CB4", Offset = "0xBB0CB4", VA = "0xBB0CB4")]
		public void UpdateMathProperty(Vector3 manipulatorPosition)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xBB16A4", Offset = "0xBB16A4", VA = "0xBB16A4")]
		public void UpdateMeshTarget()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xBB189C", Offset = "0xBB189C", VA = "0xBB189C")]
		public void UpdateSkinnedMeshTarget()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xBB18B8", Offset = "0xBB18B8", VA = "0xBB18B8")]
		public void SetMeshTarget(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xBB18D4", Offset = "0xBB18D4", VA = "0xBB18D4")]
		public void SetSkinnedMeshTarget(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xBB18F0", Offset = "0xBB18F0", VA = "0xBB18F0")]
		public bool SplineTargetIsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xBB16C0", Offset = "0xBB16C0", VA = "0xBB16C0")]
		public void TargetSorting()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xBB0BEC", Offset = "0xBB0BEC", VA = "0xBB0BEC")]
		public void SetLocalVelocity(Quaternion rotation, Vector3 newVelocity)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xBB0E1C", Offset = "0xBB0E1C", VA = "0xBB0E1C")]
		public void SetLocalTargetsPosition(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xBB18F8", Offset = "0xBB18F8", VA = "0xBB18F8")]
		public bool UpdateTarget(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xBB1340", Offset = "0xBB1340", VA = "0xBB1340")]
		public ManipulatorPropertyC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xBB1554", Offset = "0xBB1554", VA = "0xBB1554")]
		public ManipulatorPropertyC()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xBB19BC", Offset = "0xBB19BC", VA = "0xBB19BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873A20", Offset = "0x873A20")]
		private void <Update>b__36_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AA")]
	public class MathManipulatorProperty
	{
		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MATHMANIPULATORTYPE type;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MATHMANIPULATORPROPERTY property;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MATHMANIPULATORCLAMP clamp;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float clampCeil;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clampFloor;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float value;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 value3;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rate;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 rate3;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 value3Position;

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x979A64", Offset = "0x979A64", VA = "0x979A64")]
		public void Update(Vector3 position)
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x979B18", Offset = "0x979B18", VA = "0x979B18")]
		public Vector3 Evaluate(Vector3 inValue, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x97A22C", Offset = "0x97A22C", VA = "0x97A22C")]
		public Vector3 EvaluatePosition(Vector3 inValue, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x97A6AC", Offset = "0x97A6AC", VA = "0x97A6AC")]
		public float Evaluate(float inValue, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x97A89C", Offset = "0x97A89C", VA = "0x97A89C")]
		private float Clamp(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x97A0F0", Offset = "0x97A0F0", VA = "0x97A0F0")]
		private Vector3 Clamp(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x97A588", Offset = "0x97A588", VA = "0x97A588")]
		private Vector3 ClampPosition(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x97A1F8", Offset = "0x97A1F8", VA = "0x97A1F8")]
		private float ClampOut(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x97A20C", Offset = "0x97A20C", VA = "0x97A20C")]
		private Vector3 ClampOut(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x97A944", Offset = "0x97A944", VA = "0x97A944")]
		public MathManipulatorProperty Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x97AA00", Offset = "0x97AA00", VA = "0x97AA00")]
		public MathManipulatorProperty()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AB")]
	public class ManipulatorParticle
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int particleSystemId;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int particleId;

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xBAFCD8", Offset = "0xBAFCD8", VA = "0xBAFCD8")]
		public ManipulatorParticle(int setParticleSystemId, int setParticleId)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AC")]
	public class PlaygroundTransformC
	{
		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instanceID;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool available;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 localPosition;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 previousPosition;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 forward;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 up;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 right;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Quaternion rotation;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion inverseRotation;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ScaleMethod scaleMethod;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 localScale;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 lossyScale;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Matrix4x4 transformMatrix;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool unfolded;

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xB47DE8", Offset = "0xB47DE8", VA = "0xB47DE8")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xB47F58", Offset = "0xB47F58", VA = "0xB47F58")]
		public void UpdateMatrix()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xB47FD4", Offset = "0xB47FD4", VA = "0xB47FD4")]
		public bool IsSameAs(Transform comparer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xB48050", Offset = "0xB48050", VA = "0xB48050")]
		public void SetZeroRotation()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xB45550", Offset = "0xB45550", VA = "0xB45550")]
		public void SetFromTransform(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xB454E0", Offset = "0xB454E0", VA = "0xB454E0")]
		public void GetFromTransform(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xB480C0", Offset = "0xB480C0", VA = "0xB480C0")]
		public void SetLocalPosition(Transform otherTransform)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xB48114", Offset = "0xB48114", VA = "0xB48114")]
		public void SetPostitionAsLocal()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xB48128", Offset = "0xB48128", VA = "0xB48128")]
		public int GetInstanceID()
		{
			return default(int);
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xB48130", Offset = "0xB48130", VA = "0xB48130")]
		public PlaygroundTransformC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xB45548", Offset = "0xB45548", VA = "0xB45548")]
		public PlaygroundTransformC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AD")]
	public class PlaygroundColliderC
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Plane plane;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x993CE8", Offset = "0x993CE8", VA = "0x993CE8")]
		public void UpdatePlane()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x993E4C", Offset = "0x993E4C", VA = "0x993E4C")]
		public PlaygroundColliderC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x983FAC", Offset = "0x983FAC", VA = "0x983FAC")]
		public PlaygroundColliderC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AE")]
	public class PlaygroundAxisConstraintsC
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool x;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool y;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool z;

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x9811C4", Offset = "0x9811C4", VA = "0x9811C4")]
		public bool HasConstraints()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x9811EC", Offset = "0x9811EC", VA = "0x9811EC")]
		public PlaygroundAxisConstraintsC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x98126C", Offset = "0x98126C", VA = "0x98126C")]
		public PlaygroundAxisConstraintsC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AF")]
	public class PlaygroundGradientC
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gradient gradient;

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x995C74", Offset = "0x995C74", VA = "0x995C74")]
		public void CopyTo(PlaygroundGradientC copy)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x995CD8", Offset = "0x995CD8", VA = "0x995CD8")]
		public PlaygroundGradientC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B0")]
	public class PlaygroundEventC
	{
		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool sendToManager;

		[NonSerialized]
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool initializedTarget;

		[NonSerialized]
		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool initializedEvent;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundParticlesC target;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EVENTBROADCASTC broadcastType;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public EVENTTYPEC eventType;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EVENTINHERITANCEC eventInheritancePosition;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EVENTINHERITANCEC eventInheritanceVelocity;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EVENTINHERITANCEC eventInheritanceColor;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 eventPosition;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 eventVelocity;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color32 eventColor;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float eventTime;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float collisionThreshold;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float velocityMultiplier;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timer;

		[Token(Token = "0x14000060")]
		public event OnPlaygroundParticle particleEvent
		{
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x9941FC", Offset = "0x9941FC", VA = "0x9941FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873A30", Offset = "0x873A30")]
			add
			{
			}
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x9942A0", Offset = "0x9942A0", VA = "0x9942A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873A40", Offset = "0x873A40")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x994344", Offset = "0x994344", VA = "0x994344")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x994430", Offset = "0x994430", VA = "0x994430")]
		public bool UpdateTime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x9944C4", Offset = "0x9944C4", VA = "0x9944C4")]
		public void SetTimer(float newTime)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x9944CC", Offset = "0x9944CC", VA = "0x9944CC")]
		public void SendParticleEvent(PlaygroundEventParticle eventParticle)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x9944F0", Offset = "0x9944F0", VA = "0x9944F0")]
		public PlaygroundEventC Clone()
		{
			return null;
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x986278", Offset = "0x986278", VA = "0x986278")]
		public PlaygroundEventC()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public enum MANIPULATORTYPEC
	{
		[Token(Token = "0x4001A58")]
		None,
		[Token(Token = "0x4001A59")]
		Attractor,
		[Token(Token = "0x4001A5A")]
		AttractorGravitational,
		[Token(Token = "0x4001A5B")]
		Repellent,
		[Token(Token = "0x4001A5C")]
		Property,
		[Token(Token = "0x4001A5D")]
		Combined,
		[Token(Token = "0x4001A5E")]
		Vortex
	}
	[Token(Token = "0x20003B2")]
	public enum MANIPULATORPROPERTYTYPEC
	{
		[Token(Token = "0x4001A60")]
		None,
		[Token(Token = "0x4001A61")]
		Color,
		[Token(Token = "0x4001A62")]
		Velocity,
		[Token(Token = "0x4001A63")]
		AdditiveVelocity,
		[Token(Token = "0x4001A64")]
		Size,
		[Token(Token = "0x4001A65")]
		Target,
		[Token(Token = "0x4001A66")]
		Death,
		[Token(Token = "0x4001A67")]
		Attractor,
		[Token(Token = "0x4001A68")]
		Gravitational,
		[Token(Token = "0x4001A69")]
		Repellent,
		[Token(Token = "0x4001A6A")]
		LifetimeColor,
		[Token(Token = "0x4001A6B")]
		Vortex,
		[Token(Token = "0x4001A6C")]
		MeshTarget,
		[Token(Token = "0x4001A6D")]
		SkinnedMeshTarget,
		[Token(Token = "0x4001A6E")]
		Turbulence,
		[Token(Token = "0x4001A6F")]
		StateTarget,
		[Token(Token = "0x4001A70")]
		SplineTarget,
		[Token(Token = "0x4001A71")]
		Math
	}
	[Token(Token = "0x20003B3")]
	public enum MATHMANIPULATORTYPE
	{
		[Token(Token = "0x4001A73")]
		Sin,
		[Token(Token = "0x4001A74")]
		Cos,
		[Token(Token = "0x4001A75")]
		Lerp,
		[Token(Token = "0x4001A76")]
		Add,
		[Token(Token = "0x4001A77")]
		Subtract
	}
	[Token(Token = "0x20003B4")]
	public enum MATHMANIPULATORPROPERTY
	{
		[Token(Token = "0x4001A79")]
		Size,
		[Token(Token = "0x4001A7A")]
		Rotation,
		[Token(Token = "0x4001A7B")]
		Velocity,
		[Token(Token = "0x4001A7C")]
		Position
	}
	[Token(Token = "0x20003B5")]
	public enum MATHMANIPULATORCLAMP
	{
		[Token(Token = "0x4001A7E")]
		None,
		[Token(Token = "0x4001A7F")]
		ClampInValue,
		[Token(Token = "0x4001A80")]
		ClampOutValue
	}
	[Token(Token = "0x20003B6")]
	public enum MANIPULATORPROPERTYTRANSITIONC
	{
		[Token(Token = "0x4001A82")]
		None,
		[Token(Token = "0x4001A83")]
		Lerp,
		[Token(Token = "0x4001A84")]
		Linear
	}
	[Token(Token = "0x20003B7")]
	public enum MANIPULATORSHAPEC
	{
		[Token(Token = "0x4001A86")]
		Sphere,
		[Token(Token = "0x4001A87")]
		Box,
		[Token(Token = "0x4001A88")]
		Infinite
	}
	[Token(Token = "0x20003B8")]
	public enum PLAYGROUNDORIGINC
	{
		[Token(Token = "0x4001A8A")]
		TopLeft,
		[Token(Token = "0x4001A8B")]
		TopCenter,
		[Token(Token = "0x4001A8C")]
		TopRight,
		[Token(Token = "0x4001A8D")]
		MiddleLeft,
		[Token(Token = "0x4001A8E")]
		MiddleCenter,
		[Token(Token = "0x4001A8F")]
		MiddleRight,
		[Token(Token = "0x4001A90")]
		BottomLeft,
		[Token(Token = "0x4001A91")]
		BottomCenter,
		[Token(Token = "0x4001A92")]
		BottomRight
	}
	[Token(Token = "0x20003B9")]
	public enum PIXELMODEC
	{
		[Token(Token = "0x4001A94")]
		Bilinear,
		[Token(Token = "0x4001A95")]
		Pixel32
	}
	[Token(Token = "0x20003BA")]
	public enum COLORSOURCEC
	{
		[Token(Token = "0x4001A97")]
		Source,
		[Token(Token = "0x4001A98")]
		LifetimeColor,
		[Token(Token = "0x4001A99")]
		LifetimeColors
	}
	[Token(Token = "0x20003BB")]
	public enum COLORMETHOD
	{
		[Token(Token = "0x4001A9B")]
		Lifetime,
		[Token(Token = "0x4001A9C")]
		ParticleArray
	}
	[Token(Token = "0x20003BC")]
	public enum OVERFLOWMODEC
	{
		[Token(Token = "0x4001A9E")]
		SourceTransform,
		[Token(Token = "0x4001A9F")]
		World,
		[Token(Token = "0x4001AA0")]
		SourcePoint
	}
	[Token(Token = "0x20003BD")]
	public enum TRANSITIONTYPEC
	{
		[Token(Token = "0x4001AA2")]
		Linear,
		[Token(Token = "0x4001AA3")]
		EaseIn,
		[Token(Token = "0x4001AA4")]
		EaseOut
	}
	[Token(Token = "0x20003BE")]
	public enum INDIVIDUALTRANSITIONTYPEC
	{
		[Token(Token = "0x4001AA6")]
		Inherit,
		[Token(Token = "0x4001AA7")]
		Linear,
		[Token(Token = "0x4001AA8")]
		EaseIn,
		[Token(Token = "0x4001AA9")]
		EaseOut
	}
	[Token(Token = "0x20003BF")]
	public enum LERPTYPEC
	{
		[Token(Token = "0x4001AAB")]
		PositionColor,
		[Token(Token = "0x4001AAC")]
		Position,
		[Token(Token = "0x4001AAD")]
		Color
	}
	[Token(Token = "0x20003C0")]
	public enum SOURCEC
	{
		[Token(Token = "0x4001AAF")]
		State,
		[Token(Token = "0x4001AB0")]
		Transform,
		[Token(Token = "0x4001AB1")]
		WorldObject,
		[Token(Token = "0x4001AB2")]
		SkinnedWorldObject,
		[Token(Token = "0x4001AB3")]
		Script,
		[Token(Token = "0x4001AB4")]
		Paint,
		[Token(Token = "0x4001AB5")]
		Projection,
		[Token(Token = "0x4001AB6")]
		Spline
	}
	[Token(Token = "0x20003C1")]
	public enum SOURCEBIRTHMETHOD
	{
		[Token(Token = "0x4001AB8")]
		BirthPositions,
		[Token(Token = "0x4001AB9")]
		ParticlePositions
	}
	[Token(Token = "0x20003C2")]
	public enum ScaleMethod
	{
		[Token(Token = "0x4001ABB")]
		Local,
		[Token(Token = "0x4001ABC")]
		Lossy
	}
	[Token(Token = "0x20003C3")]
	public enum SORTINGC
	{
		[Token(Token = "0x4001ABE")]
		Scrambled,
		[Token(Token = "0x4001ABF")]
		ScrambledLinear,
		[Token(Token = "0x4001AC0")]
		Burst,
		[Token(Token = "0x4001AC1")]
		Linear,
		[Token(Token = "0x4001AC2")]
		Reversed,
		[Token(Token = "0x4001AC3")]
		NearestNeighbor,
		[Token(Token = "0x4001AC4")]
		NearestNeighborReversed,
		[Token(Token = "0x4001AC5")]
		Custom
	}
	[Token(Token = "0x20003C4")]
	public enum BRUSHDETAILC
	{
		[Token(Token = "0x4001AC7")]
		Perfect,
		[Token(Token = "0x4001AC8")]
		High,
		[Token(Token = "0x4001AC9")]
		Medium,
		[Token(Token = "0x4001ACA")]
		Low
	}
	[Token(Token = "0x20003C5")]
	public enum COLLISIONTYPEC
	{
		[Token(Token = "0x4001ACC")]
		Physics3D,
		[Token(Token = "0x4001ACD")]
		Physics2D
	}
	[Token(Token = "0x20003C6")]
	public enum VELOCITYBENDINGTYPEC
	{
		[Token(Token = "0x4001ACF")]
		SourcePosition,
		[Token(Token = "0x4001AD0")]
		ParticleDeltaPosition
	}
	[Token(Token = "0x20003C7")]
	public enum TARGETSORTINGC
	{
		[Token(Token = "0x4001AD2")]
		Scrambled,
		[Token(Token = "0x4001AD3")]
		Linear,
		[Token(Token = "0x4001AD4")]
		Reversed
	}
	[Token(Token = "0x20003C8")]
	public enum MASKSORTINGC
	{
		[Token(Token = "0x4001AD6")]
		Linear,
		[Token(Token = "0x4001AD7")]
		Reversed,
		[Token(Token = "0x4001AD8")]
		Scrambled
	}
	[Token(Token = "0x20003C9")]
	public enum NEARESTNEIGHBORORIGINMETHOD
	{
		[Token(Token = "0x4001ADA")]
		SourcePoint,
		[Token(Token = "0x4001ADB")]
		Vector3,
		[Token(Token = "0x4001ADC")]
		Transform
	}
	[Token(Token = "0x20003CA")]
	public enum SPLINETARGETMETHOD
	{
		[Token(Token = "0x4001ADE")]
		SplineTime,
		[Token(Token = "0x4001ADF")]
		ParticleTime
	}
	[Token(Token = "0x20003CB")]
	public enum MINMAXVECTOR3METHOD
	{
		[Token(Token = "0x4001AE1")]
		Rectangular,
		[Token(Token = "0x4001AE2")]
		RectangularLinear,
		[Token(Token = "0x4001AE3")]
		Spherical,
		[Token(Token = "0x4001AE4")]
		SphericalLinear
	}
	[Token(Token = "0x20003CC")]
	public enum EVENTTYPEC
	{
		[Token(Token = "0x4001AE6")]
		Birth,
		[Token(Token = "0x4001AE7")]
		Death,
		[Token(Token = "0x4001AE8")]
		Collision,
		[Token(Token = "0x4001AE9")]
		Time
	}
	[Token(Token = "0x20003CD")]
	public enum EVENTBROADCASTC
	{
		[Token(Token = "0x4001AEB")]
		Target,
		[Token(Token = "0x4001AEC")]
		EventListeners,
		[Token(Token = "0x4001AED")]
		Both
	}
	[Token(Token = "0x20003CE")]
	public enum EVENTINHERITANCEC
	{
		[Token(Token = "0x4001AEF")]
		User,
		[Token(Token = "0x4001AF0")]
		Particle,
		[Token(Token = "0x4001AF1")]
		Source
	}
	[Token(Token = "0x20003CF")]
	public enum TURBULENCETYPE
	{
		[Token(Token = "0x4001AF3")]
		None,
		[Token(Token = "0x4001AF4")]
		Simplex,
		[Token(Token = "0x4001AF5")]
		Perlin
	}
	[Token(Token = "0x20003D0")]
	public enum VALUEMETHOD
	{
		[Token(Token = "0x4001AF7")]
		Constant,
		[Token(Token = "0x4001AF8")]
		RandomBetweenTwoValues
	}
	[Token(Token = "0x20003D1")]
	public enum ONDONE
	{
		[Token(Token = "0x4001AFA")]
		Inactivate,
		[Token(Token = "0x4001AFB")]
		Destroy
	}
	[Token(Token = "0x20003D2")]
	public enum ThreadPoolMethod
	{
		[Token(Token = "0x4001AFD")]
		ThreadPool,
		[Token(Token = "0x4001AFE")]
		PlaygroundPool
	}
	[Token(Token = "0x20003D3")]
	public enum ThreadMethod
	{
		[Token(Token = "0x4001B00")]
		NoThreads,
		[Token(Token = "0x4001B01")]
		OnePerSystem,
		[Token(Token = "0x4001B02")]
		OneForAll,
		[Token(Token = "0x4001B03")]
		Automatic
	}
	[Token(Token = "0x20003D4")]
	public enum ThreadMethodLocal
	{
		[Token(Token = "0x4001B05")]
		Inherit,
		[Token(Token = "0x4001B06")]
		NoThreads,
		[Token(Token = "0x4001B07")]
		OnePerSystem,
		[Token(Token = "0x4001B08")]
		OneForAll
	}
	[Token(Token = "0x20003D5")]
	public enum ThreadMethodComponent
	{
		[Token(Token = "0x4001B0A")]
		InsideParticleCalculation,
		[Token(Token = "0x4001B0B")]
		OnePerSystem,
		[Token(Token = "0x4001B0C")]
		OneForAll
	}
	[Token(Token = "0x20003D6")]
	public enum TrackingMethod
	{
		[Token(Token = "0x4001B0E")]
		ManipulatorId,
		[Token(Token = "0x4001B0F")]
		ParticleId
	}
	[Token(Token = "0x20003D7")]
	public static class AnimationCurveExtensions
	{
		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xBAE298", Offset = "0xBAE298", VA = "0xBAE298")]
		public static void Reset(this AnimationCurve animationCurve)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xBAE350", Offset = "0xBAE350", VA = "0xBAE350")]
		public static void Reset1(this AnimationCurve animationCurve)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xBAE448", Offset = "0xBAE448", VA = "0xBAE448")]
		public static void Reset01(this AnimationCurve animationCurve)
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public delegate void OnPlaygroundParticle(PlaygroundEventParticle particle);
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85ADE4", Offset = "0x85ADE4")]
	[ExecuteInEditMode]
	public class PlaygroundParticlesC : MonoBehaviour
	{
		[Token(Token = "0x200071D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD88", Offset = "0x85DD88")]
		private sealed class <>c__DisplayClass365_0
		{
			[Token(Token = "0x4002FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4002FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BoneWeight[] weights;

			[Token(Token = "0x4002FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Matrix4x4[] boneMatrices;

			[Token(Token = "0x4002FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] vertices;

			[Token(Token = "0x4002FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SkinnedWorldObject particleStateWorldObject;

			[Token(Token = "0x6002E79")]
			[Address(RVA = "0xB3D7E8", Offset = "0xB3D7E8", VA = "0xB3D7E8")]
			public <>c__DisplayClass365_0()
			{
			}

			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0xB3D7F0", Offset = "0xB3D7F0", VA = "0xB3D7F0")]
			internal void <GetPosition>b__0()
			{
			}
		}

		[Token(Token = "0x200071E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DD98", Offset = "0x85DD98")]
		private sealed class <>c__DisplayClass384_0
		{
			[Token(Token = "0x4002FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4002FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SORTINGC sorting;

			[Token(Token = "0x4002FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float time;

			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0xB3DAF8", Offset = "0xB3DAF8", VA = "0xB3DAF8")]
			public <>c__DisplayClass384_0()
			{
			}

			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0xB3DB00", Offset = "0xB3DB00", VA = "0xB3DB00")]
			internal void <SetLifetime>b__0()
			{
			}
		}

		[Token(Token = "0x200071F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DDA8", Offset = "0x85DDA8")]
		private sealed class <>c__DisplayClass396_0
		{
			[Token(Token = "0x4002FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4002FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int amount;

			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0xB3DB18", Offset = "0xB3DB18", VA = "0xB3DB18")]
			public <>c__DisplayClass396_0()
			{
			}

			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0xB3DB20", Offset = "0xB3DB20", VA = "0xB3DB20")]
			internal void <SetParticleCount>b__0()
			{
			}
		}

		[Token(Token = "0x2000720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DDB8", Offset = "0x85DDB8")]
		private sealed class <>c__DisplayClass403_0
		{
			[Token(Token = "0x4002FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4002FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool callRestEmission;

			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0xB3DB34", Offset = "0xB3DB34", VA = "0xB3DB34")]
			public <>c__DisplayClass403_0()
			{
			}

			[Token(Token = "0x6002E80")]
			[Address(RVA = "0xB3DB3C", Offset = "0xB3DB3C", VA = "0xB3DB3C")]
			internal void <Emission>b__0()
			{
			}
		}

		[Token(Token = "0x2000721")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DDC8", Offset = "0x85DDC8")]
		private sealed class <>c__DisplayClass408_0
		{
			[Token(Token = "0x4003000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x6002E81")]
			[Address(RVA = "0xB3DC18", Offset = "0xB3DC18", VA = "0xB3DC18")]
			public <>c__DisplayClass408_0()
			{
			}

			[Token(Token = "0x6002E82")]
			[Address(RVA = "0xB3DC20", Offset = "0xB3DC20", VA = "0xB3DC20")]
			internal void <NewCalculatedThread>b__0()
			{
			}
		}

		[Token(Token = "0x2000722")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DDD8", Offset = "0x85DDD8")]
		private sealed class <>c__DisplayClass409_0
		{
			[Token(Token = "0x4003001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC[] playgroundParticles;

			[Token(Token = "0x6002E83")]
			[Address(RVA = "0xB3DC50", Offset = "0xB3DC50", VA = "0xB3DC50")]
			public <>c__DisplayClass409_0()
			{
			}

			[Token(Token = "0x6002E84")]
			[Address(RVA = "0xB3DC58", Offset = "0xB3DC58", VA = "0xB3DC58")]
			internal void <NewCalculatedThread>b__0()
			{
			}
		}

		[Token(Token = "0x2000723")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DDE8", Offset = "0x85DDE8")]
		private sealed class <>c__DisplayClass412_0
		{
			[Token(Token = "0x4003002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x6002E85")]
			[Address(RVA = "0xB3DD64", Offset = "0xB3DD64", VA = "0xB3DD64")]
			public <>c__DisplayClass412_0()
			{
			}

			[Token(Token = "0x6002E86")]
			[Address(RVA = "0xB3DD6C", Offset = "0xB3DD6C", VA = "0xB3DD6C")]
			internal void <ThreadedCalculations>b__0()
			{
			}
		}

		[Token(Token = "0x2000724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DDF8", Offset = "0x85DDF8")]
		private sealed class <SaveRoutine>d__445 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4003006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string saveName;

			[Token(Token = "0x4003007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlaygroundSave <data>5__2;

			[Token(Token = "0x170004E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E8A")]
				[Address(RVA = "0xB41390", Offset = "0xB41390", VA = "0xB41390", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E8C")]
				[Address(RVA = "0xB413F8", Offset = "0xB413F8", VA = "0xB413F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E87")]
			[Address(RVA = "0xB40F6C", Offset = "0xB40F6C", VA = "0xB40F6C")]
			[DebuggerHidden]
			public <SaveRoutine>d__445(int <>1__state)
			{
			}

			[Token(Token = "0x6002E88")]
			[Address(RVA = "0xB40F98", Offset = "0xB40F98", VA = "0xB40F98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E89")]
			[Address(RVA = "0xB40F9C", Offset = "0xB40F9C", VA = "0xB40F9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E8B")]
			[Address(RVA = "0xB41398", Offset = "0xB41398", VA = "0xB41398", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000725")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE08", Offset = "0x85DE08")]
		private sealed class <LoadRoutine>d__451 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400300A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x400300B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int loadPointer;

			[Token(Token = "0x400300C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int mask;

			[Token(Token = "0x400300D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <prevParticleCount>5__2;

			[Token(Token = "0x170004E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E90")]
				[Address(RVA = "0xB3FD00", Offset = "0xB3FD00", VA = "0xB3FD00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E92")]
				[Address(RVA = "0xB3FD68", Offset = "0xB3FD68", VA = "0xB3FD68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0xB3EDC0", Offset = "0xB3EDC0", VA = "0xB3EDC0")]
			[DebuggerHidden]
			public <LoadRoutine>d__451(int <>1__state)
			{
			}

			[Token(Token = "0x6002E8E")]
			[Address(RVA = "0xB3EDEC", Offset = "0xB3EDEC", VA = "0xB3EDEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E8F")]
			[Address(RVA = "0xB3EDF0", Offset = "0xB3EDF0", VA = "0xB3EDF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E91")]
			[Address(RVA = "0xB3FD08", Offset = "0xB3FD08", VA = "0xB3FD08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE18", Offset = "0x85DE18")]
		private sealed class <>c__DisplayClass453_0
		{
			[Token(Token = "0x400300E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] transitionPosition;

			[Token(Token = "0x400300F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int loadParticleCount;

			[Token(Token = "0x4003010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color32[] transitionColor;

			[Token(Token = "0x4003011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] transitionSize;

			[Token(Token = "0x4003012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float[] transitionRotation;

			[Token(Token = "0x4003013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4003014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public INDIVIDUALTRANSITIONTYPEC thisSnapshotTransition;

			[Token(Token = "0x4003015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float transitionStartTime;

			[Token(Token = "0x4003016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int loadPointer;

			[Token(Token = "0x4003017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public PlaygroundCache loadSnapshotData;

			[Token(Token = "0x4003018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool liveParticles;

			[Token(Token = "0x4003019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Color transparent;

			[Token(Token = "0x400301A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int transitionParticleCount;

			[Token(Token = "0x6002E93")]
			[Address(RVA = "0xB3DE18", Offset = "0xB3DE18", VA = "0xB3DE18")]
			public <>c__DisplayClass453_0()
			{
			}
		}

		[Token(Token = "0x2000727")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE28", Offset = "0x85DE28")]
		private sealed class <>c__DisplayClass453_1
		{
			[Token(Token = "0x400301B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isResizing;

			[Token(Token = "0x400301C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass453_0 CS$<>8__locals1;

			[Token(Token = "0x6002E94")]
			[Address(RVA = "0xB3DE20", Offset = "0xB3DE20", VA = "0xB3DE20")]
			public <>c__DisplayClass453_1()
			{
			}

			[Token(Token = "0x6002E95")]
			[Address(RVA = "0xB3DE28", Offset = "0xB3DE28", VA = "0xB3DE28")]
			internal void <LoadTransition>b__0()
			{
			}
		}

		[Token(Token = "0x2000728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE38", Offset = "0x85DE38")]
		private sealed class <>c__DisplayClass453_2
		{
			[Token(Token = "0x400301D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float currentTime;

			[Token(Token = "0x400301E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass453_0 CS$<>8__locals2;

			[Token(Token = "0x6002E96")]
			[Address(RVA = "0xB3E068", Offset = "0xB3E068", VA = "0xB3E068")]
			public <>c__DisplayClass453_2()
			{
			}

			[Token(Token = "0x6002E97")]
			[Address(RVA = "0xB3E070", Offset = "0xB3E070", VA = "0xB3E070")]
			internal void <LoadTransition>b__1()
			{
			}
		}

		[Token(Token = "0x2000729")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE48", Offset = "0x85DE48")]
		private sealed class <LoadTransition>d__453 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400301F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4003022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int loadPointer;

			[Token(Token = "0x4003023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass453_0 <>8__1;

			[Token(Token = "0x4003024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass453_1 <>8__2;

			[Token(Token = "0x4003025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass453_2 <>8__3;

			[Token(Token = "0x4003026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <loadParticleLifetime>5__2;

			[Token(Token = "0x4003027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool <firstFrameDone>5__3;

			[Token(Token = "0x4003028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <currentParticleCount>5__4;

			[Token(Token = "0x4003029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <initPosY>5__5;

			[Token(Token = "0x170004E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E9B")]
				[Address(RVA = "0xB409CC", Offset = "0xB409CC", VA = "0xB409CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E9D")]
				[Address(RVA = "0xB40A34", Offset = "0xB40A34", VA = "0xB40A34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E98")]
			[Address(RVA = "0xB3FD70", Offset = "0xB3FD70", VA = "0xB3FD70")]
			[DebuggerHidden]
			public <LoadTransition>d__453(int <>1__state)
			{
			}

			[Token(Token = "0x6002E99")]
			[Address(RVA = "0xB3FD9C", Offset = "0xB3FD9C", VA = "0xB3FD9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E9A")]
			[Address(RVA = "0xB3FDA0", Offset = "0xB3FDA0", VA = "0xB3FDA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E9C")]
			[Address(RVA = "0xB409D4", Offset = "0xB409D4", VA = "0xB409D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200072A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE58", Offset = "0x85DE58")]
		private sealed class <YieldedRefresh>d__458 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400302A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400302B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400302C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x400302D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <okToLoadFromStart>5__2;

			[Token(Token = "0x170004E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EA1")]
				[Address(RVA = "0xB41814", Offset = "0xB41814", VA = "0xB41814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EA3")]
				[Address(RVA = "0xB4187C", Offset = "0xB4187C", VA = "0xB4187C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E9E")]
			[Address(RVA = "0xB41400", Offset = "0xB41400", VA = "0xB41400")]
			[DebuggerHidden]
			public <YieldedRefresh>d__458(int <>1__state)
			{
			}

			[Token(Token = "0x6002E9F")]
			[Address(RVA = "0xB4142C", Offset = "0xB4142C", VA = "0xB4142C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EA0")]
			[Address(RVA = "0xB41430", Offset = "0xB41430", VA = "0xB41430", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EA2")]
			[Address(RVA = "0xB4181C", Offset = "0xB4181C", VA = "0xB4181C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200072B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE68", Offset = "0x85DE68")]
		private sealed class <>c__DisplayClass459_0
		{
			[Token(Token = "0x400302E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x400302F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float time;

			[Token(Token = "0x4003030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int resolution;

			[Token(Token = "0x4003031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int currentCycles;

			[Token(Token = "0x4003032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool isPrewarmingAsync;

			[Token(Token = "0x6002EA4")]
			[Address(RVA = "0xB3E798", Offset = "0xB3E798", VA = "0xB3E798")]
			public <>c__DisplayClass459_0()
			{
			}

			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0xB3E7A0", Offset = "0xB3E7A0", VA = "0xB3E7A0")]
			internal void <Prewarm>b__0()
			{
			}
		}

		[Token(Token = "0x200072C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE78", Offset = "0x85DE78")]
		private sealed class <Prewarm>d__459 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x4003036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4003037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int resolution;

			[Token(Token = "0x4003038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass459_0 <>8__1;

			[Token(Token = "0x4003039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <storedLocalTime>5__2;

			[Token(Token = "0x170004E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EA9")]
				[Address(RVA = "0xB40EFC", Offset = "0xB40EFC", VA = "0xB40EFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EAB")]
				[Address(RVA = "0xB40F64", Offset = "0xB40F64", VA = "0xB40F64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EA6")]
			[Address(RVA = "0xB40A3C", Offset = "0xB40A3C", VA = "0xB40A3C")]
			[DebuggerHidden]
			public <Prewarm>d__459(int <>1__state)
			{
			}

			[Token(Token = "0x6002EA7")]
			[Address(RVA = "0xB40A68", Offset = "0xB40A68", VA = "0xB40A68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EA8")]
			[Address(RVA = "0xB40A6C", Offset = "0xB40A6C", VA = "0xB40A6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EAA")]
			[Address(RVA = "0xB40F04", Offset = "0xB40F04", VA = "0xB40F04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200072D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE88", Offset = "0x85DE88")]
		private sealed class <Boot>d__463 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400303A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400303B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400303C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundParticlesC <>4__this;

			[Token(Token = "0x170004EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EAF")]
				[Address(RVA = "0xB3ED50", Offset = "0xB3ED50", VA = "0xB3ED50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EB1")]
				[Address(RVA = "0xB3EDB8", Offset = "0xB3EDB8", VA = "0xB3EDB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EAC")]
			[Address(RVA = "0xB3E898", Offset = "0xB3E898", VA = "0xB3E898")]
			[DebuggerHidden]
			public <Boot>d__463(int <>1__state)
			{
			}

			[Token(Token = "0x6002EAD")]
			[Address(RVA = "0xB3E8C4", Offset = "0xB3E8C4", VA = "0xB3E8C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EAE")]
			[Address(RVA = "0xB3E8C8", Offset = "0xB3E8C8", VA = "0xB3E8C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EB0")]
			[Address(RVA = "0xB3ED58", Offset = "0xB3ED58", VA = "0xB3ED58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SOURCEC source;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public int activeState;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool emit;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool loop;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool clearParticlesOnEmissionStop;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[HideInInspector]
		public bool disableOnDone;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public ONDONE disableOnDoneRoutine;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int updateRate;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool calculate;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[HideInInspector]
		public bool calculateDeltaMovement;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float deltaMovementStrength;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float minDeltaMovementStrength;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public VALUEMETHOD deltaMovementStrengthValueMethod;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool worldObjectUpdateVertices;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[HideInInspector]
		public bool worldObjectUpdateNormals;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public NEARESTNEIGHBORORIGINMETHOD nearestNeighborOriginMethod;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int nearestNeighborOrigin;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3 nearestNeighborOriginVector3;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform nearestNeighborOriginTransform;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int particleCount;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public float emissionRate;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public OVERFLOWMODEC overflowMode;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public Vector3 overflowOffset;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool applySourceScatter;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public Vector3 sourceScatterMin;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector3 sourceScatterMax;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public Vector3 scatterScale;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public MINMAXVECTOR3METHOD sourceScatterMethod;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public SORTINGC sorting;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public AnimationCurve lifetimeSorting;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public float sizeMin;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public float sizeMax;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float scale;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public float initialRotationMin;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float initialRotationMax;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public float rotationSpeedMin;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float rotationSpeedMax;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public bool rotateTowardsDirection;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Vector3 rotationNormal;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public VALUEMETHOD lifetimeValueMethod;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public float lifetime;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public float lifetimeMin;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public float lifetimeOffset;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[HideInInspector]
		public float lifetimeEmission;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public float minShurikenLifetime;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public bool applyLifetimeSize;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public AnimationCurve lifetimeSize;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public bool applyParticleArraySize;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public AnimationCurve particleArraySize;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public bool transitionBackToSource;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public AnimationCurve transitionBackToSourceAmount;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool onlySourcePositioning;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[HideInInspector]
		public bool onlyLifetimePositioning;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public Vector3AnimationCurveC lifetimePositioning;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool applyLifetimePositioningTimeScale;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		[HideInInspector]
		public bool applyLifetimePositioningPositionScale;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public AnimationCurve lifetimePositioningTimeScale;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public AnimationCurve lifetimePositioningPositionScale;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public float lifetimePositioningScale;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[HideInInspector]
		public bool lifetimePositioningUsesSourceDirection;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		[HideInInspector]
		public bool applyLifetimeVelocity;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Vector3AnimationCurveC lifetimeVelocity;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public float lifetimeVelocityScale;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[HideInInspector]
		public bool applyInitialVelocity;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public Vector3 initialVelocityMin;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[HideInInspector]
		public Vector3 initialVelocityMax;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public MINMAXVECTOR3METHOD initialVelocityMethod;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[HideInInspector]
		public bool applyInitialLocalVelocity;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public Vector3 initialLocalVelocityMin;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[HideInInspector]
		public Vector3 initialLocalVelocityMax;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		public MINMAXVECTOR3METHOD initialLocalVelocityMethod;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[HideInInspector]
		public bool applyInitialVelocityShape;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[HideInInspector]
		public Vector3AnimationCurveC initialVelocityShape;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[HideInInspector]
		public float initialVelocityShapeScale;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[HideInInspector]
		public bool applyVelocityBending;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		public Vector3 velocityBending;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[HideInInspector]
		public VELOCITYBENDINGTYPEC velocityBendingType;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[HideInInspector]
		public float maxVelocity;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[HideInInspector]
		public PlaygroundAxisConstraintsC axisConstraints;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public float damping;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[HideInInspector]
		public float velocityScale;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[HideInInspector]
		public Gradient lifetimeColor;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public List<PlaygroundGradientC> lifetimeColors;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[HideInInspector]
		public COLORSOURCEC colorSource;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[HideInInspector]
		public bool sourceUsesLifetimeAlpha;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[HideInInspector]
		public COLORMETHOD colorMethod;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[HideInInspector]
		public bool arrayColorUsesAlpha;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[HideInInspector]
		public Gradient arrayColorAlpha;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[HideInInspector]
		public bool applyLocalSpaceMovementCompensation;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		[HideInInspector]
		public bool applyRandomSizeOnRebirth;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
		[HideInInspector]
		public bool applyRandomInitialVelocityOnRebirth;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
		[HideInInspector]
		public bool applyRandomRotationOnRebirth;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[HideInInspector]
		public bool applyRandomScatterOnRebirth;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
		[HideInInspector]
		public bool applyInitialColorOnRebirth;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20E")]
		[HideInInspector]
		public bool applyRandomLifetimeOnRebirth;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20F")]
		[HideInInspector]
		public bool applyDeltaOnRebirth;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[HideInInspector]
		public bool calculateManipulatorOnRebirth;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		[HideInInspector]
		public bool pauseCalculationWhenInvisible;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
		[HideInInspector]
		public bool calculationTriggerSizeGizmo;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[HideInInspector]
		public Transform calculationTriggerTransform;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[HideInInspector]
		public Vector3 calculationTriggerSize;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[HideInInspector]
		public Vector3 calculationTriggerOffset;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[HideInInspector]
		public bool forceVisibilityWhenOutOfFrustrum;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
		[HideInInspector]
		public bool syncPositionsOnMainThread;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23A")]
		[HideInInspector]
		public bool applyLockPosition;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23B")]
		[HideInInspector]
		public bool applyLockRotation;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[HideInInspector]
		public bool applyLockScale;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
		[HideInInspector]
		public bool lockPositionIsLocal;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23E")]
		[HideInInspector]
		public bool lockRotationIsLocal;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[HideInInspector]
		public Vector3 lockPosition;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[HideInInspector]
		public Vector3 lockRotation;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[HideInInspector]
		public Vector3 lockScale;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[HideInInspector]
		public bool applyMovementCompensationLifetimeStrength;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[HideInInspector]
		public AnimationCurve movementCompensationLifetimeStrength;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[HideInInspector]
		public bool applyParticleMask;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[HideInInspector]
		public int particleMask;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[HideInInspector]
		public float particleMaskTime;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[HideInInspector]
		public MASKSORTINGC particleMaskSorting;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[HideInInspector]
		public float stretchSpeed;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[HideInInspector]
		public bool applyStretchStartDirection;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[HideInInspector]
		public Vector3 stretchStartDirection;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[HideInInspector]
		public bool applyLifetimeStretching;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[HideInInspector]
		public AnimationCurve stretchLifetime;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[HideInInspector]
		public ThreadMethodLocal threadMethod;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[HideInInspector]
		public bool multithreadedStartup;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[HideInInspector]
		public int scriptedEmissionIndex;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[HideInInspector]
		public Vector3 scriptedEmissionPosition;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[HideInInspector]
		public Vector3 scriptedEmissionVelocity;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		[HideInInspector]
		public Color scriptedEmissionColor;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[HideInInspector]
		private float scriptedLifetime;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[HideInInspector]
		public bool collision;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D9")]
		[HideInInspector]
		public bool affectRigidbodies;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DA")]
		[HideInInspector]
		public bool inverseRigidbodyCollision;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[HideInInspector]
		public float mass;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[HideInInspector]
		public float collisionRadius;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		[HideInInspector]
		public LayerMask collisionMask;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[HideInInspector]
		public List<Transform> collisionExclusion;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[HideInInspector]
		public float lifetimeLoss;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		[HideInInspector]
		public float bounciness;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[HideInInspector]
		public Vector3 bounceRandomMin;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		[HideInInspector]
		public Vector3 bounceRandomMax;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[HideInInspector]
		public List<PlaygroundColliderC> colliders;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[HideInInspector]
		public COLLISIONTYPEC collisionType;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		[HideInInspector]
		public float minCollisionDepth;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[HideInInspector]
		public float maxCollisionDepth;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		[HideInInspector]
		public bool stickyCollisions;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[HideInInspector]
		public float stickyCollisionsSurfaceOffset;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		[HideInInspector]
		public LayerMask stickyCollisionsMask;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[HideInInspector]
		public bool collisionPrecision;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x331")]
		[HideInInspector]
		public bool forceCollisionCaching;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x332")]
		[HideInInspector]
		public bool maskedParticlesBypassCollision;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public List<ParticleStateC> states;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[HideInInspector]
		public List<PlaygroundSpline> splines;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		[HideInInspector]
		public float splineTimeOffset;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		[HideInInspector]
		public bool treatAsOneSpline;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private int splineIndex;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[HideInInspector]
		public WorldObject worldObject;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[HideInInspector]
		public SkinnedWorldObject skinnedWorldObject;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[HideInInspector]
		public bool forceSkinnedMeshUpdateOnMainThread;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		[HideInInspector]
		public Transform sourceTransform;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[HideInInspector]
		public List<PlaygroundTransformC> sourceTransforms;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[HideInInspector]
		public bool treatAsOneTransform;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		private int transformIndex;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[HideInInspector]
		public PlaygroundParticlesC otherParticleSource;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[HideInInspector]
		public SOURCEBIRTHMETHOD otherParticleSourceMethod;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[HideInInspector]
		public PaintObjectC paint;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[HideInInspector]
		public ParticleProjectionC projection;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		public List<ManipulatorObjectC> manipulators;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[HideInInspector]
		public List<PlaygroundEventC> events;

		[NonSerialized]
		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public PlaygroundCache playgroundCache;

		[NonSerialized]
		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		public ParticleSystem.Particle[] particleCache;

		[NonSerialized]
		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public CollisionCache collisionCache;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[HideInInspector]
		public List<PlaygroundSave> snapshots;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		[HideInInspector]
		public bool loadFromStart;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		[HideInInspector]
		public int loadFrom;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[HideInInspector]
		public bool loadTransition;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		[HideInInspector]
		public TRANSITIONTYPEC loadTransitionType;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		[HideInInspector]
		public float loadTransitionTime;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[HideInInspector]
		public PlaygroundCache snapshotData;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		[HideInInspector]
		public float timeOfSnapshot;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		public bool isSnapshot;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		[HideInInspector]
		public ParticleSystem shurikenParticleSystem;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		[HideInInspector]
		public int particleSystemId;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		[HideInInspector]
		public GameObject particleSystemGameObject;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		[HideInInspector]
		public Transform particleSystemTransform;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		[HideInInspector]
		public Renderer particleSystemRenderer;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		[HideInInspector]
		public ParticleSystemRenderer particleSystemRenderer2;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		[HideInInspector]
		public List<PlaygroundParticlesC> eventControlledBy;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private SimplexNoise turbulenceSimplex;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		[HideInInspector]
		public TURBULENCETYPE turbulenceType;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		[HideInInspector]
		public float turbulenceStrength;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		[HideInInspector]
		public float turbulenceScale;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		[HideInInspector]
		public float turbulenceTimeScale;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		[HideInInspector]
		public bool turbulenceApplyLifetimeStrength;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		[HideInInspector]
		public AnimationCurve turbulenceLifetimeStrength;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		[HideInInspector]
		public bool prewarm;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		[HideInInspector]
		public float prewarmTime;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		[HideInInspector]
		public int prewarmCycles;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		[HideInInspector]
		public float particleTimescale;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private int thisLayer;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		private bool isPrewarming;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x475")]
		private bool inTransition;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private int previousParticleCount;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		private float previousEmissionRate;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		private bool renderModeStretch;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		private float previousSizeMin;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private float previousSizeMax;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48C")]
		private float previousInitialRotationMin;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private float previousInitialRotationMax;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
		private float previousRotationSpeedMin;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private float previousRotationSpeedMax;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49C")]
		private Vector3 previousVelocityMin;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private Vector3 previousVelocityMax;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B4")]
		private Vector3 previousLocalVelocityMin;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		private Vector3 previousLocalVelocityMax;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		private MINMAXVECTOR3METHOD previousLocalVelocityMethod;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private MINMAXVECTOR3METHOD previousVelocityMethod;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D4")]
		private SORTINGC previousSorting;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		private int previousNearestNeighborOrigin;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
		private NEARESTNEIGHBORORIGINMETHOD previousNearestNeighborOriginMethod;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		private Vector3 previousNearestNeighborOriginVector3;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		private Transform previousNearestNeighborOriginTransform;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private Vector3 nearestNeighborOriginTransformPosition;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x504")]
		private MASKSORTINGC previousMaskSorting;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		private VALUEMETHOD previousLifetimeValueMethod;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50C")]
		private float previousLifetime;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		private float previousLifetimeMin;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
		private float previousLifetimeEmission;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		private bool previousEmission;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x519")]
		private bool previousLoop;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
		private float emissionStopped;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		private bool queueEmissionHalt;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x521")]
		private bool hasEmitted;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x524")]
		private int lifetimeColorId;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		private System.Random internalRandom01;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
		private float lastTimeUpdated;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
		private PlaygroundEventParticle eventParticle;

		[NonSerialized]
		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		public bool cameFromNonCalculatedFrame;

		[NonSerialized]
		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x541")]
		public bool cameFromNonEmissionFrame;

		[NonSerialized]
		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x544")]
		public float localTime;

		[NonSerialized]
		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		public float localDeltaTime;

		[NonSerialized]
		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
		public int previousActiveState;

		[NonSerialized]
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
		public float simulationStarted;

		[NonSerialized]
		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x554")]
		public bool inPlayback;

		[NonSerialized]
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x555")]
		public bool loopExceeded;

		[NonSerialized]
		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		public int loopExceededOnParticle;

		[NonSerialized]
		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55C")]
		public bool isReadyForThreadedCalculations;

		[NonSerialized]
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55D")]
		public bool hasActiveParticles;

		[NonSerialized]
		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55E")]
		public bool isDoneThread;

		[NonSerialized]
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55F")]
		public bool threadHadNoActiveParticles;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		private bool hasEventManipulatorLocal;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x561")]
		private bool hasEventManipulatorGlobal;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x562")]
		private bool hasSeveralManipulatorEvents;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x563")]
		private bool hasGlobalAffectingManipulators;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
		private Quaternion particleSystemRotation;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
		private Quaternion particleSystemInverseRotation;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x584")]
		private int psTransformNum;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private Vector3 manipulatorFix;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
		private PlaygroundParticlesC thisInstance;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
		private float t;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A4")]
		private bool cancelDeltaPositioningOnSync;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
		private Quaternion stCompensationRot;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
		private Quaternion stCompensationRotPrev;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
		private Quaternion stRot;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
		private Vector3 stDir;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E4")]
		private bool localSpace;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E5")]
		private bool overflow;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E6")]
		private bool skinnedWorldObjectReady;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E7")]
		private bool stateReadyForTextureColor;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
		private int manipulatorEventCount;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5EC")]
		private bool hasEvent;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5ED")]
		private bool hasTimerEvent;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5EE")]
		private bool hasCollisionCache;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
		private int reportUpdateStepper;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F4")]
		private bool isReportingBadUpdateRate;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F5")]
		private bool isSettingLifetime;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F6")]
		private bool isSettingParticleTime;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F7")]
		private bool isSettingParticleCount;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
		private bool prevLoop;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5FC")]
		private SOURCEC prevSource;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
		private float realSimulationTime;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x604")]
		private bool isSaving;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x605")]
		private bool isLoading;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x606")]
		private bool transitionAvailable;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x607")]
		private bool abortTransition;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
		private bool isYieldRefreshing;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x609")]
		private bool initialized;

		[Token(Token = "0x170001CA")]
		public bool IsDoneThread
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x999DFC", Offset = "0x999DFC", VA = "0x999DFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x999E04", Offset = "0x999E04", VA = "0x999E04")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public float LastTimeUpdated
		{
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0x99A554", Offset = "0x99A554", VA = "0x99A554")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0x99A55C", Offset = "0x99A55C", VA = "0x99A55C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public float LocalDeltaTime
		{
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0x99A564", Offset = "0x99A564", VA = "0x99A564")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x99A56C", Offset = "0x99A56C", VA = "0x99A56C")]
			set
			{
			}
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x996270", Offset = "0x996270", VA = "0x996270")]
		public void CopyTo(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x997020", Offset = "0x997020", VA = "0x997020")]
		public void CopySaveDataTo(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x983490", Offset = "0x983490", VA = "0x983490")]
		public void Emit(bool setEmission)
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x997198", Offset = "0x997198", VA = "0x997198")]
		public int Emit()
		{
			return default(int);
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x997578", Offset = "0x997578", VA = "0x997578")]
		public int Emit(Vector3 givePosition)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x997610", Offset = "0x997610", VA = "0x997610")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x9833B0", Offset = "0x9833B0", VA = "0x9833B0")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity, Color32 giveColor)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x9976A8", Offset = "0x9976A8", VA = "0x9976A8")]
		public void Emit(int quantity)
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x99774C", Offset = "0x99774C", VA = "0x99774C")]
		public void Emit(int quantity, Vector3 givePosition, Vector3 randomVelocityMin, Vector3 randomVelocityMax, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x9979B8", Offset = "0x9979B8", VA = "0x9979B8")]
		public void Emit(int quantity, Vector3 randomPositionMin, Vector3 randomPositionMax, Vector3 randomVelocityMin, Vector3 randomVelocityMax, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x997B8C", Offset = "0x997B8C", VA = "0x997B8C")]
		public int Emit(float giveLifetime)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x997C30", Offset = "0x997C30", VA = "0x997C30")]
		public int Emit(Vector3 givePosition, float giveLifetime)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x997CD4", Offset = "0x997CD4", VA = "0x997CD4")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity, float giveLifetime)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x997D74", Offset = "0x997D74", VA = "0x997D74")]
		public int Emit(Vector3 givePosition, Vector3 giveVelocity, float giveLifetime, Color32 giveColor)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x997DB0", Offset = "0x997DB0", VA = "0x997DB0")]
		public void ThreadSafeEmit(Vector3 givePosition, Vector3 giveVelocity, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x997DB8", Offset = "0x997DB8", VA = "0x997DB8")]
		public void ThreadSafeEmit(int quantity, Vector3 givePosition, Vector3 randomVelocityMin, Vector3 randomVelocityMax, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x997230", Offset = "0x997230", VA = "0x997230")]
		private void EmitProcedure(Vector3 givePosition, Vector3 giveVelocity, Color32 giveColor)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x98AF08", Offset = "0x98AF08", VA = "0x98AF08")]
		public bool IsAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x999DCC", Offset = "0x999DCC", VA = "0x999DCC")]
		public bool IsLocalSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x999DD4", Offset = "0x999DD4", VA = "0x999DD4")]
		public bool InTransition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x999DDC", Offset = "0x999DDC", VA = "0x999DDC")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x999DE4", Offset = "0x999DE4", VA = "0x999DE4")]
		public bool IsSaving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x98B8AC", Offset = "0x98B8AC", VA = "0x98B8AC")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x98959C", Offset = "0x98959C", VA = "0x98959C")]
		public bool Initialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x999DEC", Offset = "0x999DEC", VA = "0x999DEC")]
		public bool IsYieldRefreshing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x999DF4", Offset = "0x999DF4", VA = "0x999DF4")]
		public bool IsSettingParticleTime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x98AF28", Offset = "0x98AF28", VA = "0x98AF28")]
		public bool IsSkinnedWorldObjectReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x98AF4C", Offset = "0x98AF4C", VA = "0x98AF4C")]
		public bool HasTurbulence()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x999E10", Offset = "0x999E10", VA = "0x999E10")]
		public bool HasOverflow()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x999E18", Offset = "0x999E18", VA = "0x999E18")]
		public bool HasGlobalManipulator()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x999E20", Offset = "0x999E20", VA = "0x999E20")]
		public bool HasCollisionCache()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x999E28", Offset = "0x999E28", VA = "0x999E28")]
		public bool HasCollided(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x999E98", Offset = "0x999E98", VA = "0x999E98")]
		public Vector3 GetCollisionPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x999F6C", Offset = "0x999F6C", VA = "0x999F6C")]
		public Vector3 GetCollisionNormal(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x99A040", Offset = "0x99A040", VA = "0x99A040")]
		public Vector3 GetStickyPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x99A114", Offset = "0x99A114", VA = "0x99A114")]
		public void SetSticky(int index, Vector3 position, Vector3 normal, float offset, Transform parent)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x99A240", Offset = "0x99A240", VA = "0x99A240")]
		public void UpdateSticky(int index)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x99A38C", Offset = "0x99A38C", VA = "0x99A38C")]
		public void ClearCollisions()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x99A3B4", Offset = "0x99A3B4", VA = "0x99A3B4")]
		public void ClearCollisions(int index)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x99A3F0", Offset = "0x99A3F0", VA = "0x99A3F0")]
		public Transform GetCollisionTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x99A460", Offset = "0x99A460", VA = "0x99A460")]
		public int GetLayer()
		{
			return default(int);
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x99A468", Offset = "0x99A468", VA = "0x99A468")]
		public void SetRandomSeed(int seed)
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x99A4D8", Offset = "0x99A4D8", VA = "0x99A4D8")]
		public bool IsReportingBadUpdateRate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x99A54C", Offset = "0x99A54C", VA = "0x99A54C")]
		public float GetDeltaTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x99233C", Offset = "0x99233C", VA = "0x99233C")]
		public SimplexNoise GetSimplex()
		{
			return null;
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x99A578", Offset = "0x99A578", VA = "0x99A578")]
		public void Kill(int p)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x99A714", Offset = "0x99A714", VA = "0x99A714")]
		public void KillAndSendManipulatorDeathEvents(int p)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x99ACE4", Offset = "0x99ACE4", VA = "0x99ACE4")]
		public void SetNoForce(int p, bool noForce)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x99AD2C", Offset = "0x99AD2C", VA = "0x99AD2C")]
		public bool NoForce(int p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x99AD70", Offset = "0x99AD70", VA = "0x99AD70")]
		public void Translate(int p, Vector3 translation)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x99AF44", Offset = "0x99AF44", VA = "0x99AF44")]
		public void ParticlePosition(int p, Vector3 position)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x99B0BC", Offset = "0x99B0BC", VA = "0x99B0BC")]
		public void ParticleColor(int p, Color32 color)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x99B1DC", Offset = "0x99B1DC", VA = "0x99B1DC")]
		private void SetParticleColorInternal(int index, Color32 color)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x99B224", Offset = "0x99B224", VA = "0x99B224")]
		private Color32 GetParticleColorInternal(int index)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x99B270", Offset = "0x99B270", VA = "0x99B270")]
		public void ParticleSize(int p, float size)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x99B394", Offset = "0x99B394", VA = "0x99B394")]
		public void ParticleVelocity(int p, Vector3 velocity)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x99B480", Offset = "0x99B480", VA = "0x99B480")]
		public void PositionToTransformPoint(int p, Vector3 position, Transform targetTransform)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x99B4EC", Offset = "0x99B4EC", VA = "0x99B4EC")]
		public void PositionToInverseTransformPoint(int p, Vector3 position, Transform targetTransform)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x99B558", Offset = "0x99B558", VA = "0x99B558")]
		public Vector3 GetParticlePosition(int p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x99B5A8", Offset = "0x99B5A8", VA = "0x99B5A8")]
		public Vector3 GetSourcePosition(int p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x99B5F8", Offset = "0x99B5F8", VA = "0x99B5F8")]
		public void SetHasActiveParticles()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x99B608", Offset = "0x99B608", VA = "0x99B608")]
		public bool HasSeveralManipulatorEvents()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x99B610", Offset = "0x99B610", VA = "0x99B610")]
		public void ProtectParticleFromManipulator(int particle, ManipulatorObjectC manipulator)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x99B694", Offset = "0x99B694", VA = "0x99B694")]
		public void RemoveParticleProtection(int particle)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x99B6D8", Offset = "0x99B6D8", VA = "0x99B6D8")]
		public bool IsSettingLifetime()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x99B6E0", Offset = "0x99B6E0", VA = "0x99B6E0")]
		public bool IsPrewarming()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x99B6E8", Offset = "0x99B6E8", VA = "0x99B6E8")]
		public bool IsParticleInsideManipulator(int particleId, ManipulatorObjectC manipulator)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x99B784", Offset = "0x99B784", VA = "0x99B784")]
		public int GetSplineIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x99B78C", Offset = "0x99B78C", VA = "0x99B78C")]
		public int GetTransformIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x99B794", Offset = "0x99B794", VA = "0x99B794")]
		public void RefreshMaskSorting()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x99B918", Offset = "0x99B918", VA = "0x99B918")]
		public void RefreshMaskSorting(int[] maskSortingArray)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x982638", Offset = "0x982638", VA = "0x982638")]
		public static PlaygroundParticlesC CreatePlaygroundParticles(Texture2D[] images, string name, Vector3 position, Quaternion rotation, Vector3 offset, float particleSize, float scale, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x9820E4", Offset = "0x9820E4", VA = "0x9820E4")]
		public static void OnCreatePlaygroundParticles(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x97AE50", Offset = "0x97AE50", VA = "0x97AE50")]
		public static PlaygroundParticlesC CreateParticleObject(string name, Vector3 position, Quaternion rotation, float particleSize, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x98446C", Offset = "0x98446C", VA = "0x98446C")]
		public static WorldObject NewWorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x9845AC", Offset = "0x9845AC", VA = "0x9845AC")]
		public static SkinnedWorldObject NewSkinnedWorldObject(Transform meshTransform)
		{
			return null;
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x99BB04", Offset = "0x99BB04", VA = "0x99BB04")]
		public static SkinnedWorldObject NewSkinnedWorldObject(Transform meshTransform, int downResolution)
		{
			return null;
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x98694C", Offset = "0x98694C", VA = "0x98694C")]
		public static PaintObjectC NewPaintObject(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x98689C", Offset = "0x98689C", VA = "0x98689C")]
		public static ParticleProjectionC NewProjectionObject(PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x9846F4", Offset = "0x9846F4", VA = "0x9846F4")]
		public static ManipulatorObjectC NewManipulatorObject(MANIPULATORTYPEC type, LayerMask affects, Transform manipulatorTransform, float size, float strength, PlaygroundParticlesC playgroundParticles)
		{
			return null;
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x983594", Offset = "0x983594", VA = "0x983594")]
		public static void GetPosition(SkinnedWorldObject particleStateWorldObject, bool updateNormals)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x983868", Offset = "0x983868", VA = "0x983868")]
		public static void GetPosition(Vector3[] v3, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x99BB30", Offset = "0x99BB30", VA = "0x99BB30")]
		public static void GetProceduralPosition(Vector3[] v3, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x983934", Offset = "0x983934", VA = "0x983934")]
		public static void GetNormals(Vector3[] v3, WorldObject particleStateWorldObject)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x9839E8", Offset = "0x9839E8", VA = "0x9839E8")]
		public static void SetSize(PlaygroundParticlesC playgroundParticles, float size)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x99BCB4", Offset = "0x99BCB4", VA = "0x99BCB4")]
		public void RefreshSystemRandom()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x99BD14", Offset = "0x99BD14", VA = "0x99BD14")]
		public static void SetSizeRandom(PlaygroundParticlesC playgroundParticles, float sizeMinimum, float sizeMaximum)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x99BD74", Offset = "0x99BD74", VA = "0x99BD74")]
		public static void SetRotationRandom(PlaygroundParticlesC playgroundParticles, float rotationMinimum, float rotationMaximum)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x99BE40", Offset = "0x99BE40", VA = "0x99BE40")]
		public static void SetInitialRotationRandom(PlaygroundParticlesC playgroundParticles, float rotationMinimum, float rotationMaximum)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x99BF0C", Offset = "0x99BF0C", VA = "0x99BF0C")]
		public static void SetVelocityRandom(PlaygroundParticlesC playgroundParticles, Vector3 velocityMinimum, Vector3 velocityMaximum)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x99C408", Offset = "0x99C408", VA = "0x99C408")]
		public static void SetLocalVelocityRandom(PlaygroundParticlesC playgroundParticles, Vector3 velocityMinimum, Vector3 velocityMaximum)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x9843C4", Offset = "0x9843C4", VA = "0x9843C4")]
		public static void SetMaterial(PlaygroundParticlesC playgroundParticles, Material particleMaterial)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x98395C", Offset = "0x98395C", VA = "0x98395C")]
		public static void SetAlpha(PlaygroundParticlesC playgroundParticles, float alpha)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x983AA8", Offset = "0x983AA8", VA = "0x983AA8")]
		public static void Translate(PlaygroundParticlesC playgroundParticles, Vector3 direction)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x983BD4", Offset = "0x983BD4", VA = "0x983BD4")]
		public static void Add(PlaygroundParticlesC playgroundParticles, ParticleStateC state)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x983C54", Offset = "0x983C54", VA = "0x983C54")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x983D74", Offset = "0x983D74", VA = "0x983D74")]
		public static void Add(PlaygroundParticlesC playgroundParticles, Texture2D image, Texture2D depthmap, float depthmapStrength, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x9843EC", Offset = "0x9843EC", VA = "0x9843EC")]
		public static void Destroy(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x984260", Offset = "0x984260", VA = "0x984260")]
		public static void SetLifetime(PlaygroundParticlesC playgroundParticles, SORTINGC sorting, float time)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x99C628", Offset = "0x99C628", VA = "0x99C628")]
		public static void SetLifetimeAsyncFriendly(PlaygroundParticlesC playgroundParticles, SORTINGC sorting, float time)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x99D0C8", Offset = "0x99D0C8", VA = "0x99D0C8")]
		public static void SetLifetimeSubtraction(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x99D664", Offset = "0x99D664", VA = "0x99D664")]
		public static void SetEmissionRate(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x99D204", Offset = "0x99D204", VA = "0x99D204")]
		public static void SetParticleTimeNow(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x99D988", Offset = "0x99D988", VA = "0x99D988")]
		public static void SetParticleTimeNowWithRestEmission(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x99DAA0", Offset = "0x99DAA0", VA = "0x99DAA0")]
		public static Color32 GetColorAtLifetime(PlaygroundParticlesC playgroundParticles, float time)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x99DAE0", Offset = "0x99DAE0", VA = "0x99DAE0")]
		public static void SetColorAtLifetime(PlaygroundParticlesC playgroundParticles, float time)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x99DB78", Offset = "0x99DB78", VA = "0x99DB78")]
		public static void SetColorWithLifetimeSorting(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x99DC40", Offset = "0x99DC40", VA = "0x99DC40")]
		public bool IsSettingParticleCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x984060", Offset = "0x984060", VA = "0x984060")]
		public static void SetParticleCount(PlaygroundParticlesC playgroundParticles, int amount)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x99DC48", Offset = "0x99DC48", VA = "0x99DC48")]
		private static void SetParticleCountAsyncFriendly(PlaygroundParticlesC playgroundParticles, int amount)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x97B3D0", Offset = "0x97B3D0", VA = "0x97B3D0")]
		public bool UpdateSystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x98B8CC", Offset = "0x98B8CC", VA = "0x98B8CC")]
		public void UpdateShuriken()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x986AC0", Offset = "0x986AC0", VA = "0x986AC0")]
		public static void SetInitialTargetPosition(PlaygroundParticlesC playgroundParticles, Vector3 position, bool refreshParticleSystem)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x986CC4", Offset = "0x986CC4", VA = "0x986CC4")]
		public static void Emission(PlaygroundParticlesC playgroundParticles, bool emission, bool callRestEmission)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x9A1F9C", Offset = "0x9A1F9C", VA = "0x9A1F9C")]
		public static float SignedAngle(Vector3 a, Vector3 b, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x9A20FC", Offset = "0x9A20FC", VA = "0x9A20FC")]
		public static Vector3 RandomVector3(System.Random random, Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x9895BC", Offset = "0x9895BC", VA = "0x9895BC")]
		public bool PrepareThreadedCalculations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x991570", Offset = "0x991570", VA = "0x991570")]
		public static void NewCalculatedThread(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x991654", Offset = "0x991654", VA = "0x991654")]
		public static void NewCalculatedThread(PlaygroundParticlesC[] playgroundParticles)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x9A2100", Offset = "0x9A2100", VA = "0x9A2100")]
		private Color32 GetParticleColor(int p, float normalizedLife, float normalizedP)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x9A10A4", Offset = "0x9A10A4", VA = "0x9A10A4")]
		private void SetSourcePosition(int p)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x98C458", Offset = "0x98C458", VA = "0x98C458")]
		public static void ThreadedCalculations(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x9A2AD4", Offset = "0x9A2AD4", VA = "0x9A2AD4")]
		public static void SendDeathEvents(PlaygroundParticlesC playgroundParticles, int p)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x9923A8", Offset = "0x9923A8", VA = "0x9923A8")]
		public static void Turbulence(PlaygroundParticlesC playgroundParticles, SimplexNoise turbulenceSimplex, int p, float t, TURBULENCETYPE turbulenceType, float turbulenceTimeScale, float turbulenceScale, float turbulenceStrength, bool turbulenceApplyLifetimeStrength, AnimationCurve turbulenceLifetimeStrength)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x9A3E04", Offset = "0x9A3E04", VA = "0x9A3E04")]
		public void CalculateCollisions()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x99E930", Offset = "0x99E930", VA = "0x99E930")]
		public static void Collisions(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x9A2518", Offset = "0x9A2518", VA = "0x9A2518")]
		public static Vector3 GetOverflow2(Vector3 overflow, int currentVal, int maxVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x9A2560", Offset = "0x9A2560", VA = "0x9A2560")]
		public static Vector3 GetOverflow2(Vector3 overflow, Vector3 direction, int currentVal, int maxVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x9A25B4", Offset = "0x9A25B4", VA = "0x9A25B4")]
		public static Vector3 Vector3Scale(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x9A2F60", Offset = "0x9A2F60", VA = "0x9A2F60")]
		public static void CalculateManipulator(PlaygroundParticlesC playgroundParticles, ManipulatorObjectC thisManipulator, int p, float t, float life, Vector3 particlePosition, Vector3 manipulatorPosition, bool localSpace)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x9A3E2C", Offset = "0x9A3E2C", VA = "0x9A3E2C")]
		public static void PropertyManipulator(PlaygroundParticlesC playgroundParticles, ManipulatorObjectC thisManipulator, ManipulatorPropertyC thisManipulatorProperty, float manipulatorStrength, int p, float t, Vector3 particlePosition, Vector3 manipulatorPosition, float manipulatorDistance, bool localSpace, bool contains)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x986E64", Offset = "0x986E64", VA = "0x986E64")]
		public void RefreshScatter()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x9879D0", Offset = "0x9879D0", VA = "0x9879D0")]
		public static float RandomRange(System.Random random, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x9978DC", Offset = "0x9978DC", VA = "0x9978DC")]
		public static Vector3 RandomRange(System.Random random, Vector3 min, Vector3 max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x99C12C", Offset = "0x99C12C", VA = "0x99C12C")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x99C29C", Offset = "0x99C29C", VA = "0x99C29C")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x9A8638", Offset = "0x9A8638", VA = "0x9A8638")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max, float sectorA, float sectorB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x9A87C0", Offset = "0x9A87C0", VA = "0x9A87C0")]
		public static Vector3 RandomRangeSpherical(System.Random random, float min, float max, float sectorA, float sectorB, float step)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x99BA1C", Offset = "0x99BA1C", VA = "0x99BA1C")]
		public static float[] RandomFloat(int length, float min, float max, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x9A25F4", Offset = "0x9A25F4", VA = "0x9A25F4")]
		public void InactivateParticle(int particleId)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x997110", Offset = "0x997110", VA = "0x997110")]
		public void InactivateParticles()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x997F40", Offset = "0x997F40", VA = "0x997F40")]
		public static void Rebirth(PlaygroundParticlesC playgroundParticles, int p, System.Random random)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x9A2A78", Offset = "0x9A2A78", VA = "0x9A2A78")]
		private void SendEvent(EVENTTYPEC eventType, int p)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x9A92D8", Offset = "0x9A92D8", VA = "0x9A92D8")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x9A3E0C", Offset = "0x9A3E0C", VA = "0x9A3E0C")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform)
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x9A3E18", Offset = "0x9A3E18", VA = "0x9A3E18")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform, Collider collisionCollider)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x9A3E20", Offset = "0x9A3E20", VA = "0x9A3E20")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform, Collider2D collisionCollider2D)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x9A8944", Offset = "0x9A8944", VA = "0x9A8944")]
		private void SendEvent(EVENTTYPEC eventType, int p, Vector3 preEventVelocity, Transform collisionTransform, Collider collisionCollider, Collider2D collisionCollider2D)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x984D9C", Offset = "0x984D9C", VA = "0x984D9C")]
		public bool UpdateEventParticle(PlaygroundEventParticle eParticle, int p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x9A92E8", Offset = "0x9A92E8", VA = "0x9A92E8")]
		public void RemoveState(int i)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x986DC4", Offset = "0x986DC4", VA = "0x986DC4")]
		public static void Clear(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x9A9398", Offset = "0x9A9398", VA = "0x9A9398")]
		public void Save()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x9A9514", Offset = "0x9A9514", VA = "0x9A9514")]
		public void Save(string saveName)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x9A9498", Offset = "0x9A9498", VA = "0x9A9498")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873A80", Offset = "0x873A80")]
		private IEnumerator SaveRoutine(string saveName)
		{
			return null;
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x9A95D8", Offset = "0x9A95D8", VA = "0x9A95D8")]
		public void Load(int loadPointer)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x9A9728", Offset = "0x9A9728", VA = "0x9A9728")]
		public void Load(string loadName)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x9A9888", Offset = "0x9A9888", VA = "0x9A9888")]
		public void LoadAndApplyMask(int loadPointer, int loadMask)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x9A96A4", Offset = "0x9A96A4", VA = "0x9A96A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873AE4", Offset = "0x873AE4")]
		private IEnumerator LoadRoutine(int loadPointer, int mask)
		{
			return null;
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x9A9958", Offset = "0x9A9958", VA = "0x9A9958")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873B48", Offset = "0x873B48")]
		private IEnumerator LoadTransition(int loadPointer)
		{
			return null;
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x9A99D8", Offset = "0x9A99D8", VA = "0x9A99D8")]
		private float TransitionType(INDIVIDUALTRANSITIONTYPEC thisTransitionType, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x9A9AD4", Offset = "0x9A9AD4", VA = "0x9A9AD4")]
		private void CheckReferences()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x9A9DA8", Offset = "0x9A9DA8", VA = "0x9A9DA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873BAC", Offset = "0x873BAC")]
		public IEnumerator YieldedRefresh()
		{
			return null;
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x9A9E18", Offset = "0x9A9E18", VA = "0x9A9E18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873C10", Offset = "0x873C10")]
		private IEnumerator Prewarm(float time, int resolution)
		{
			return null;
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x9A9EA8", Offset = "0x9A9EA8", VA = "0x9A9EA8")]
		private void PrewarmStepper(float time, int resolution)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x9A9FE0", Offset = "0x9A9FE0", VA = "0x9A9FE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x99E3A0", Offset = "0x99E3A0", VA = "0x99E3A0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x99E330", Offset = "0x99E330", VA = "0x99E330")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873C74", Offset = "0x873C74")]
		public IEnumerator Boot()
		{
			return null;
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x9AA238", Offset = "0x9AA238", VA = "0x9AA238")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x9AA4AC", Offset = "0x9AA4AC", VA = "0x9AA4AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x97BF04", Offset = "0x97BF04", VA = "0x97BF04")]
		public PlaygroundParticlesC()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class MeshParticles : PlaygroundParticlesC
	{
		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x97AA9C", Offset = "0x97AA9C", VA = "0x97AA9C")]
		public static PlaygroundParticlesC CreateMeshParticles(Mesh[] meshes, Texture2D[] textures, Texture2D[] heightMap, string name, Vector3 position, Quaternion rotation, float particleScale, Vector3[] offsets, Material material)
		{
			return null;
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x97BB0C", Offset = "0x97BB0C", VA = "0x97BB0C")]
		public static void Add(PlaygroundParticlesC meshParticles, Mesh mesh, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x97BDDC", Offset = "0x97BDDC", VA = "0x97BDDC")]
		public static void Add(PlaygroundParticlesC meshParticles, Mesh mesh, Texture2D texture, float scale, Vector3 offset, string stateName, Transform stateTransform)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x97BF00", Offset = "0x97BF00", VA = "0x97BF00")]
		public MeshParticles()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DB")]
	public class PlaygroundSave
	{
		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DE98", Offset = "0x85DE98")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x400303D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundSave <>4__this;

			[Token(Token = "0x400303E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlaygroundParticlesC loadTo;

			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0xB454D8", Offset = "0xB454D8", VA = "0xB454D8")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0xB4564C", Offset = "0xB4564C", VA = "0xB4564C")]
			internal void <Load>b__0()
			{
			}
		}

		[Token(Token = "0x200072F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DEA8", Offset = "0x85DEA8")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400303F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlaygroundParticlesC playgroundParticles;

			[Token(Token = "0x4003040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlaygroundSave <>4__this;

			[Token(Token = "0x6002EB4")]
			[Address(RVA = "0xB45540", Offset = "0xB45540", VA = "0xB45540")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0xB456EC", Offset = "0xB456EC", VA = "0xB456EC")]
			internal void <Save>b__0()
			{
			}
		}

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float time;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float lifetime;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int particleCount;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float version;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public PlaygroundParticlesC settings;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public PlaygroundTransformC transform;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Material material;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int loadMode;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool loadTransform;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[HideInInspector]
		public bool loadMaterial;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[HideInInspector]
		public bool setMaterialAfterTransition;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float transitionMultiplier;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public INDIVIDUALTRANSITIONTYPEC transitionType;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool unfolded;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isLoading;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool isSaving;

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xB454C8", Offset = "0xB454C8", VA = "0xB454C8")]
		public bool IsLoading()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xB454D0", Offset = "0xB454D0", VA = "0xB454D0")]
		public bool IsSaving()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xB3FB54", Offset = "0xB3FB54", VA = "0xB3FB54")]
		public void Load(PlaygroundParticlesC loadTo)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xB4124C", Offset = "0xB4124C", VA = "0xB4124C")]
		public void Save(PlaygroundParticlesC playgroundParticles)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xB45558", Offset = "0xB45558", VA = "0xB45558")]
		public PlaygroundSave Clone()
		{
			return null;
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xB4122C", Offset = "0xB4122C", VA = "0xB4122C")]
		public PlaygroundSave()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DC")]
	public class PlaygroundEventParticle
	{
		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public float initialSize;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public float size;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float rotation;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float life;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float totalLifetime;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float birth;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float birthDelay;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float death;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool emission;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool rebirth;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float lifetimeOffset;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3 velocity;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public Vector3 initialVelocity;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3 initialLocalVelocity;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public Vector3 position;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 targetPosition;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public Vector3 targetDirection;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Vector3 previousTargetPosition;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public Vector3 previousParticlePosition;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 collisionParticlePosition;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public Vector3 localSpaceMovementCompensation;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Vector3 scatterPosition;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public float initialRotation;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float rotationSpeed;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public Color32 color;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Color32 scriptedColor;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public Color32 initialColor;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public int lifetimeColorId;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public bool noForce;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[HideInInspector]
		public bool isNonBirthed;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		[HideInInspector]
		public bool isFirstLoop;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public int particleId;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public int particleSystemId;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public int manipulatorId;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public bool changedByProperty;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[HideInInspector]
		public bool changedByPropertyColor;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[HideInInspector]
		public bool changedByPropertyColorLerp;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE7")]
		[HideInInspector]
		public bool changedByPropertyColorKeepAlpha;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public bool changedByPropertySize;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		[HideInInspector]
		public bool changedByPropertyTarget;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		[HideInInspector]
		public bool changedByPropertyDeath;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[HideInInspector]
		public int propertyTarget;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public int propertyId;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public int propertyColorId;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public int excludeFromManipulatorId;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[HideInInspector]
		public bool isMasked;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public float maskAlpha;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public Transform collisionTransform;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public Collider collisionCollider;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Collider2D collisionCollider2D;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x9855C4", Offset = "0x9855C4", VA = "0x9855C4")]
		public PlaygroundEventParticle Clone()
		{
			return null;
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x984D94", Offset = "0x984D94", VA = "0x984D94")]
		public PlaygroundEventParticle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DD")]
	public class PlaygroundCache
	{
		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public float[] initialSize;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float[] size;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float[] rotation;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float[] life;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float[] lifetimeSubtraction;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float[] birth;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float[] birthDelay;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float[] death;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool[] emission;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool[] rebirth;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public float[] lifetimeOffset;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3[] velocity;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Vector3[] initialVelocity;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Vector3[] initialLocalVelocity;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Vector3[] position;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Vector3[] targetPosition;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Vector3[] targetDirection;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3[] previousTargetPosition;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3[] previousParticlePosition;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Vector3[] collisionParticlePosition;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Vector3[] localSpaceMovementCompensation;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Vector3[] scatterPosition;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float[] initialRotation;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float[] rotationSpeed;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Color32[] color;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public Color32[] scriptedColor;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Color32[] initialColor;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public int[] lifetimeColorId;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool[] noForce;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public bool[] isNonBirthed;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public bool[] isFirstLoop;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public bool[] simulate;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public bool[] isCalculatedThisFrame;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public bool[] changedByProperty;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool[] changedByPropertyColor;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public bool[] changedByPropertyColorLerp;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool[] changedByPropertyColorKeepAlpha;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public bool[] changedByPropertySize;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public bool[] changedByPropertyTarget;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public bool[] changedByPropertyDeath;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public int[] propertyTarget;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public int[] propertyId;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public int[] propertyColorId;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		public int[] manipulatorId;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public int[] excludeFromManipulatorId;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public float[] lifetimeLoss;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public bool[] isMasked;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public float[] maskAlpha;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[HideInInspector]
		public int[] maskSorting;

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x9936E4", Offset = "0x9936E4", VA = "0x9936E4")]
		public PlaygroundCache Clone()
		{
			return null;
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x993CE0", Offset = "0x993CE0", VA = "0x993CE0")]
		public PlaygroundCache()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DE")]
	public class CollisionCache
	{
		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool[] hasCollided;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Vector3[] collisionPosition;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3[] collisionNormal;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] collisionTransform;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public GameObject[] collisionGameObject;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] collisionTransformPosition;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] stickyPosition;

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xBAE540", Offset = "0xBAE540", VA = "0xBAE540")]
		public CollisionCache(int amount)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xBAE628", Offset = "0xBAE628", VA = "0xBAE628")]
		public void Set(int index, Vector3 position, Vector3 normal, Transform transform)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xBAE75C", Offset = "0xBAE75C", VA = "0xBAE75C")]
		public void SetSticky(int index, Vector3 position, Vector3 normal, float offset, Transform transform)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xBAE9A8", Offset = "0xBAE9A8", VA = "0xBAE9A8")]
		public void UpdateStickyPosition(int index)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xBAEB54", Offset = "0xBAEB54", VA = "0xBAEB54")]
		public void Reset(int index)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xBAEB98", Offset = "0xBAEB98", VA = "0xBAEB98")]
		public void ClearCollisions()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xBAEBEC", Offset = "0xBAEBEC", VA = "0xBAEBEC")]
		public CollisionCache Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x20003DF")]
	public class SimplexNoise
	{
		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[][] grad3;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[][] grad4;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int[] p;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int[] perm;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int[][] simplex;

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xB48810", Offset = "0xB48810", VA = "0xB48810")]
		static SimplexNoise()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xB4A734", Offset = "0xB4A734", VA = "0xB4A734")]
		private static int fastfloor(double x)
		{
			return default(int);
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xB4A748", Offset = "0xB4A748", VA = "0xB4A748")]
		private static double dot(int[] g, double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xB4A794", Offset = "0xB4A794", VA = "0xB4A794")]
		private static double dot(int[] g, double x, double y, double z)
		{
			return default(double);
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xB4A7F8", Offset = "0xB4A7F8", VA = "0xB4A7F8")]
		private static double dot(int[] g, double x, double y, double z, double w)
		{
			return default(double);
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xB4A870", Offset = "0xB4A870", VA = "0xB4A870")]
		public double noise(double xin, double yin, double zin)
		{
			return default(double);
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xB4AEE8", Offset = "0xB4AEE8", VA = "0xB4AEE8")]
		public double noise(double x, double y, double z, double w)
		{
			return default(double);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xB4BDEC", Offset = "0xB4BDEC", VA = "0xB4BDEC")]
		public SimplexNoise()
		{
		}
	}
}
namespace UnityEngine
{
	[Token(Token = "0x20003E0")]
	public class PlaygroundCycleSnapshots : MonoBehaviour
	{
		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlaygroundParticlesC particles;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlaygroundScenes sceneScript;

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xAA7C34", Offset = "0xAA7C34", VA = "0xAA7C34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xAA7CC0", Offset = "0xAA7CC0", VA = "0xAA7CC0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xAA7E28", Offset = "0xAA7E28", VA = "0xAA7E28")]
		public PlaygroundCycleSnapshots()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class PlaygroundProceduralMeshTarget : MonoBehaviour
	{
		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundParticlesC particles;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float manipulatorSize;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float manipulatorStrength;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float proceduralMeshSize;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int proceduralMeshRecursion;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationSpeed;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ManipulatorObjectC manipulator;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int subdivisionFactor;

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xAA7E30", Offset = "0xAA7E30", VA = "0xAA7E30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xAA7FDC", Offset = "0xAA7FDC", VA = "0xAA7FDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xAA8174", Offset = "0xAA8174", VA = "0xAA8174")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xAA8BCC", Offset = "0xAA8BCC", VA = "0xAA8BCC")]
		private void UpdateTargetManipulator()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xAA8BFC", Offset = "0xAA8BFC", VA = "0xAA8BFC")]
		public PlaygroundProceduralMeshTarget()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class IsoSphere
	{
		[Token(Token = "0x2000730")]
		private struct TriangleIndices
		{
			[Token(Token = "0x4003041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int v1;

			[Token(Token = "0x4003042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int v2;

			[Token(Token = "0x4003043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int v3;

			[Token(Token = "0x6002EB6")]
			[Address(RVA = "0x76653C", Offset = "0x76653C", VA = "0x76653C")]
			public TriangleIndices(int v1, int v2, int v3)
			{
			}
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xAA6D9C", Offset = "0xAA6D9C", VA = "0xAA6D9C")]
		private static int getMiddlePoint(int p1, int p2, ref List<Vector3> vertices, ref Dictionary<long, int> cache, float radius)
		{
			return default(int);
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xAA6F90", Offset = "0xAA6F90", VA = "0xAA6F90")]
		public static void CreateMesh(GameObject gameObject, int recursionLevel, float radius, bool visible)
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xAA7C2C", Offset = "0xAA7C2C", VA = "0xAA7C2C")]
		public IsoSphere()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class SubdivideMesh
	{
		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Vector3> vertices;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Vector3> normals;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<int> indices;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<uint, int> newVectices;

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xAAA470", Offset = "0xAAA470", VA = "0xAAA470")]
		private static int GetNewVertex(int i1, int i2)
		{
			return default(int);
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xAA87A0", Offset = "0xAA87A0", VA = "0xAA87A0")]
		public static void Subdivide(Mesh mesh)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xAAA754", Offset = "0xAAA754", VA = "0xAAA754")]
		public SubdivideMesh()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class PlaygroundRecordingExample : MonoBehaviour
	{
		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DEB8", Offset = "0x85DEB8")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundRecordingExample <>4__this;

			[Token(Token = "0x170004ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EBA")]
				[Address(RVA = "0xAA9310", Offset = "0xAA9310", VA = "0xAA9310", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EBC")]
				[Address(RVA = "0xAA9378", Offset = "0xAA9378", VA = "0xAA9378", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0xAA8C94", Offset = "0xAA8C94", VA = "0xAA8C94")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002EB8")]
			[Address(RVA = "0xAA922C", Offset = "0xAA922C", VA = "0xAA922C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0xAA9230", Offset = "0xAA9230", VA = "0xAA9230", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0xAA9318", Offset = "0xAA9318", VA = "0xAA9318", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundRecorder playgroundRecorder;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float keyframeInterval;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool recordFromStart;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect guiArea;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hoveringScrubSlider;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isScrubbing;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float playbackSliderValue;

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xAA8C24", Offset = "0xAA8C24", VA = "0xAA8C24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873CD8", Offset = "0x873CD8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xAA8CC0", Offset = "0xAA8CC0", VA = "0xAA8CC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xAA8D40", Offset = "0xAA8D40", VA = "0xAA8D40")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xAA9210", Offset = "0xAA9210", VA = "0xAA9210")]
		public PlaygroundRecordingExample()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class PlaygroundRecordingMultiExample : MonoBehaviour
	{
		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DEC8", Offset = "0x85DEC8")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlaygroundRecordingMultiExample <>4__this;

			[Token(Token = "0x400304A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170004EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EC0")]
				[Address(RVA = "0xAA9B28", Offset = "0xAA9B28", VA = "0xAA9B28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EC2")]
				[Address(RVA = "0xAA9B90", Offset = "0xAA9B90", VA = "0xAA9B90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0xAA93F0", Offset = "0xAA93F0", VA = "0xAA93F0")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0xAA99E8", Offset = "0xAA99E8", VA = "0xAA99E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0xAA99EC", Offset = "0xAA99EC", VA = "0xAA99EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0xAA9B30", Offset = "0xAA9B30", VA = "0xAA9B30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaygroundMultiRecorder playgroundMultiRecorder;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float keyframeInterval;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool recordFromStart;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect guiArea;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hoveringScrubSlider;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool isScrubbing;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float playbackSliderValue;

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xAA9380", Offset = "0xAA9380", VA = "0xAA9380")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873D3C", Offset = "0x873D3C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xAA941C", Offset = "0xAA941C", VA = "0xAA941C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xAA949C", Offset = "0xAA949C", VA = "0xAA949C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xAA99CC", Offset = "0xAA99CC", VA = "0xAA99CC")]
		public PlaygroundRecordingMultiExample()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class PlaygroundSwitchMultithreadingMethod : MonoBehaviour
	{
		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ManipulatorObjectC globalManipulator;

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xAA9B98", Offset = "0xAA9B98", VA = "0xAA9B98")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xAA9C08", Offset = "0xAA9C08", VA = "0xAA9C08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xAA9CC4", Offset = "0xAA9CC4", VA = "0xAA9CC4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xAAA424", Offset = "0xAAA424", VA = "0xAAA424")]
		private void SwitchManipulator()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xAAA468", Offset = "0xAAA468", VA = "0xAAA468")]
		public PlaygroundSwitchMultithreadingMethod()
		{
		}
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x20003E7")]
	public class GazeInteractionInputModule : OVRInputModule
	{
		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject currentlyGazedObject;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float lastTimeGazedObjectChanged;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8677F4", Offset = "0x8677F4")]
		public float activationDwellTime;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool isDragging;

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xAA66D4", Offset = "0xAA66D4", VA = "0xAA66D4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xAA67B4", Offset = "0xAA67B4", VA = "0xAA67B4", Slot = "30")]
		protected override MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xAA684C", Offset = "0xAA684C", VA = "0xAA684C")]
		protected PointerEventData.FramePressState GetGazeButtonState(GameObject rayCastHit)
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xAA6BAC", Offset = "0xAA6BAC", VA = "0xAA6BAC")]
		private GameObject GetCurrentlyGazedGameObject(GameObject go, out bool shouldImmediatelyRelease)
		{
			return null;
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xAA6D84", Offset = "0xAA6D84", VA = "0xAA6D84")]
		public void SetActivationDwellTime(float v)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xAA6D8C", Offset = "0xAA6D8C", VA = "0xAA6D8C")]
		public GazeInteractionInputModule()
		{
		}
	}
}
namespace cakeslice
{
	[Token(Token = "0x20003E8")]
	public class MaterialSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material target;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xC78364", Offset = "0xC78364", VA = "0xC78364")]
		public void Update()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xC78468", Offset = "0xC78468", VA = "0xC78468")]
		public MaterialSwitcher()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class OutlineAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pingPong;

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xC78FDC", Offset = "0xC78FDC", VA = "0xC78FDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xC78FE0", Offset = "0xC78FE0", VA = "0xC78FE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xC79584", Offset = "0xC79584", VA = "0xC79584")]
		public OutlineAnimation()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class Rotate : MonoBehaviour
	{
		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer;

		[Token(Token = "0x4001CD5")]
		private const float time = 1f;

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xC7B2C8", Offset = "0xC7B2C8", VA = "0xC7B2C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xC7B2CC", Offset = "0xC7B2CC", VA = "0xC7B2CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xC7B3B4", Offset = "0xC7B3B4", VA = "0xC7B3B4")]
		public Rotate()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class Toggle : MonoBehaviour
	{
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xC7B3BC", Offset = "0xC7B3BC", VA = "0xC7B3BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xC7B3C0", Offset = "0xC7B3C0", VA = "0xC7B3C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xC7B464", Offset = "0xC7B464", VA = "0xC7B464")]
		public Toggle()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class LinkedSet<T> : IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x2000733")]
		public enum AddType
		{
			[Token(Token = "0x400304C")]
			NO_CHANGE,
			[Token(Token = "0x400304D")]
			ADDED,
			[Token(Token = "0x400304E")]
			MOVED
		}

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LinkedList<T> list;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<T, LinkedListNode<T>> dictionary;

		[Token(Token = "0x6001BB4")]
		public LinkedSet()
		{
		}

		[Token(Token = "0x6001BB5")]
		public LinkedSet(IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x6001BB6")]
		public bool Contains(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB7")]
		public bool Add(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001BB9")]
		public AddType AddOrMoveToEnd(T t)
		{
			return default(AddType);
		}

		[Token(Token = "0x6001BBA")]
		public bool Remove(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBB")]
		public void ExceptWith(IEnumerable<T> enumerable)
		{
		}

		[Token(Token = "0x6001BBC")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001BBD")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20003ED")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85AE58", Offset = "0x85AE58")]
	public class Outline : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DED8", Offset = "0x85DED8")]
		private sealed class <>c
		{
			[Token(Token = "0x400304F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Camera, OutlineEffect> <>9__9_0;

			[Token(Token = "0x4003051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<OutlineEffect, bool> <>9__9_1;

			[Token(Token = "0x4003052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Camera, OutlineEffect> <>9__10_0;

			[Token(Token = "0x4003053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<OutlineEffect, bool> <>9__10_1;

			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0xC78E4C", Offset = "0xC78E4C", VA = "0xC78E4C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0xC78E54", Offset = "0xC78E54", VA = "0xC78E54")]
			internal OutlineEffect <OnEnable>b__9_0(Camera c)
			{
				return null;
			}

			[Token(Token = "0x6002EC6")]
			[Address(RVA = "0xC78EAC", Offset = "0xC78EAC", VA = "0xC78EAC")]
			internal bool <OnEnable>b__9_1(OutlineEffect e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0xC78F18", Offset = "0xC78F18", VA = "0xC78F18")]
			internal OutlineEffect <OnDisable>b__10_0(Camera c)
			{
				return null;
			}

			[Token(Token = "0x6002EC8")]
			[Address(RVA = "0xC78F70", Offset = "0xC78F70", VA = "0xC78F70")]
			internal bool <OnDisable>b__10_1(OutlineEffect e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86782C", Offset = "0x86782C")]
		private Renderer <Renderer>k__BackingField;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int color;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool eraseRenderer;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int originalLayer;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Material[] originalMaterials;

		[Token(Token = "0x170001CD")]
		public Renderer Renderer
		{
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0xC78470", Offset = "0xC78470", VA = "0xC78470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873DA0", Offset = "0x873DA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xC78478", Offset = "0xC78478", VA = "0xC78478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873DB0", Offset = "0x873DB0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xC78480", Offset = "0xC78480", VA = "0xC78480")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xC784D8", Offset = "0xC784D8", VA = "0xC784D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xC7895C", Offset = "0xC7895C", VA = "0xC7895C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xC78DE0", Offset = "0xC78DE0", VA = "0xC78DE0")]
		public Outline()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85AECC", Offset = "0x85AECC")]
	[ExecuteInEditMode]
	public class OutlineEffect : MonoBehaviour
	{
		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OutlineEffect m_instance;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly LinkedSet<Outline> outlines;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86785C", Offset = "0x86785C")]
		public float lineThickness;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x867874", Offset = "0x867874")]
		public float lineIntensity;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86788C", Offset = "0x86788C")]
		public float fillAmount;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color lineColor0;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color lineColor1;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color lineColor2;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool additiveRendering;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool backfaceCulling;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8678A4", Offset = "0x8678A4")]
		public bool cornerOutlines;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		public bool addLinesBetweenColors;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8678DC", Offset = "0x8678DC")]
		public bool scaleWithScreenSize;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x867914", Offset = "0x867914")]
		public float alphaCutoff;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool flipY;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Camera sourceCamera;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Camera outlineCamera;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material outline1Material;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material outline2Material;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material outline3Material;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material outlineEraseMaterial;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Shader outlineShader;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Shader outlineBufferShader;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Material outlineShaderMaterial;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public RenderTexture renderTexture;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public RenderTexture extraRenderTexture;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private CommandBuffer commandBuffer;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Material> materialBuffer;

		[Token(Token = "0x170001CE")]
		public static OutlineEffect Instance
		{
			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0xC7958C", Offset = "0xC7958C", VA = "0xC7958C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xC796A8", Offset = "0xC796A8", VA = "0xC796A8")]
		private OutlineEffect()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xC7979C", Offset = "0xC7979C", VA = "0xC7979C")]
		private Material GetMaterialFromID(int ID)
		{
			return null;
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xC797C4", Offset = "0xC797C4", VA = "0xC797C4")]
		private Material CreateMaterial(Color emissionColor)
		{
			return null;
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xC79928", Offset = "0xC79928", VA = "0xC79928")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xC7997C", Offset = "0xC7997C", VA = "0xC7997C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xC7A048", Offset = "0xC7A048", VA = "0xC7A048")]
		public void OnPreRender()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xC7AE64", Offset = "0xC7AE64", VA = "0xC7AE64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xC7AF44", Offset = "0xC7AF44", VA = "0xC7AF44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xC7B1B4", Offset = "0xC7B1B4", VA = "0xC7B1B4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xC79C1C", Offset = "0xC79C1C", VA = "0xC79C1C")]
		private void CreateMaterialsIfNeeded()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xC7B01C", Offset = "0xC7B01C", VA = "0xC7B01C")]
		private void DestroyMaterials()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xC790F8", Offset = "0xC790F8", VA = "0xC790F8")]
		public void UpdateMaterialsPublicProperties()
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xC79F1C", Offset = "0xC79F1C", VA = "0xC79F1C")]
		private void UpdateOutlineCameraFromSource()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xC788C4", Offset = "0xC788C4", VA = "0xC788C4")]
		public void AddOutline(Outline outline)
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xC78D48", Offset = "0xC78D48", VA = "0xC78D48")]
		public void RemoveOutline(Outline outline)
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20003EF")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170001CF")]
		public bool InRange
		{
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0xED381C", Offset = "0xED381C", VA = "0xED381C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xED3824", Offset = "0xED3824", VA = "0xED3824")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public bool Targeted
		{
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xED39AC", Offset = "0xED39AC", VA = "0xED39AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xED39B4", Offset = "0xED39B4", VA = "0xED39B4")]
			set
			{
			}
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xED39C0", Offset = "0xED39C0", VA = "0xED39C0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xED3830", Offset = "0xED3830", VA = "0xED3830")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xED3B8C", Offset = "0xED3B8C", VA = "0xED3B8C")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xED3BD0", Offset = "0xED3BD0", VA = "0xED3BD0")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xED3C2C", Offset = "0xED3C2C", VA = "0xED3C2C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xED1644", Offset = "0xED1644", VA = "0xED1644")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xED169C", Offset = "0xED169C", VA = "0xED169C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xED1940", Offset = "0xED1940", VA = "0xED1940")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xED1A30", Offset = "0xED1A30", VA = "0xED1A30")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xED16A0", Offset = "0xED16A0", VA = "0xED16A0")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xED1B20", Offset = "0xED1B20", VA = "0xED1B20")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000735")]
		public enum ContactTest
		{
			[Token(Token = "0x4003055")]
			PerpenTest,
			[Token(Token = "0x4003056")]
			BackwardsPress
		}

		[Token(Token = "0x4001D03")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001D04")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170001D1")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xED1BB8", Offset = "0xED1BB8", VA = "0xED1BB8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D2")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xED1BC0", Offset = "0xED1BC0", VA = "0xED1BC0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xED1BCC", Offset = "0xED1BCC", VA = "0xED1BCC", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xED1D1C", Offset = "0xED1D1C", VA = "0xED1D1C")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xED1F20", Offset = "0xED1F20", VA = "0xED1F20")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xED2080", Offset = "0xED2080", VA = "0xED2080")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xED21E0", Offset = "0xED21E0", VA = "0xED21E0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xED26A4", Offset = "0xED26A4", VA = "0xED26A4")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xED2830", Offset = "0xED2830", VA = "0xED2830")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xED2924", Offset = "0xED2924", VA = "0xED2924")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xED2A50", Offset = "0xED2A50", VA = "0xED2A50")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867A04", Offset = "0x867A04")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867A14", Offset = "0x867A14")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170001D3")]
		public Collider Collider
		{
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0xED2B3C", Offset = "0xED2B3C", VA = "0xED2B3C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873DC0", Offset = "0x873DC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xED2B44", Offset = "0xED2B44", VA = "0xED2B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873DD0", Offset = "0x873DD0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xED2B4C", Offset = "0xED2B4C", VA = "0xED2B4C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873DE0", Offset = "0x873DE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xED2B54", Offset = "0xED2B54", VA = "0xED2B54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873DF0", Offset = "0x873DF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xED2B5C", Offset = "0xED2B5C", VA = "0xED2B5C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xED2BAC", Offset = "0xED2BAC", VA = "0xED2BAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xED2C28", Offset = "0xED2C28", VA = "0xED2C28")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public interface ColliderZone
	{
		[Token(Token = "0x170001D6")]
		Collider Collider
		{
			[Token(Token = "0x6001BF5")]
			get;
		}

		[Token(Token = "0x170001D7")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001BF6")]
			get;
		}

		[Token(Token = "0x170001D8")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001BF7")]
			get;
		}
	}
	[Token(Token = "0x20003F4")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xED1E7C", Offset = "0xED1E7C", VA = "0xED1E7C")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public enum InteractionType
	{
		[Token(Token = "0x4001D18")]
		Enter,
		[Token(Token = "0x4001D19")]
		Stay,
		[Token(Token = "0x4001D1A")]
		Exit
	}
	[Token(Token = "0x20003F6")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000736")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4003058")]
			Mesh,
			[Token(Token = "0x4003059")]
			Skeleton,
			[Token(Token = "0x400305A")]
			Both
		}

		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DEE8", Offset = "0x85DEE8")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400305B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400305C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400305D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170004F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ECC")]
				[Address(RVA = "0xED8190", Offset = "0xED8190", VA = "0xED8190", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ECE")]
				[Address(RVA = "0xED81F8", Offset = "0xED81F8", VA = "0xED81F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0xED7C84", Offset = "0xED7C84", VA = "0xED7C84")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002ECA")]
			[Address(RVA = "0xED7F70", Offset = "0xED7F70", VA = "0xED7F70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ECB")]
			[Address(RVA = "0xED7F74", Offset = "0xED7F74", VA = "0xED7F74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ECD")]
			[Address(RVA = "0xED8198", Offset = "0xED8198", VA = "0xED8198", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D1B")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867A44", Offset = "0x867A44")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170001D9")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xED6188", Offset = "0xED6188", VA = "0xED6188")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xED72A4", Offset = "0xED72A4", VA = "0xED72A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xED6D0C", Offset = "0xED6D0C", VA = "0xED6D0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0xED730C", Offset = "0xED730C", VA = "0xED730C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xED7374", Offset = "0xED7374", VA = "0xED7374")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0xED73AC", Offset = "0xED73AC", VA = "0xED73AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xED7414", Offset = "0xED7414", VA = "0xED7414")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0xED744C", Offset = "0xED744C", VA = "0xED744C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xED74B4", Offset = "0xED74B4", VA = "0xED74B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0xED74EC", Offset = "0xED74EC", VA = "0xED74EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0xED6154", Offset = "0xED6154", VA = "0xED6154")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0xED7554", Offset = "0xED7554", VA = "0xED7554")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0xED6CD8", Offset = "0xED6CD8", VA = "0xED6CD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xED75B8", Offset = "0xED75B8", VA = "0xED75B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xED761C", Offset = "0xED761C", VA = "0xED761C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xED7650", Offset = "0xED7650", VA = "0xED7650")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xED76B4", Offset = "0xED76B4", VA = "0xED76B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xED76E8", Offset = "0xED76E8", VA = "0xED76E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0xED774C", Offset = "0xED774C", VA = "0xED774C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0xED7780", Offset = "0xED7780", VA = "0xED7780")]
			private set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0xED77E4", Offset = "0xED77E4", VA = "0xED77E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873E00", Offset = "0x873E00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0xED7834", Offset = "0xED7834", VA = "0xED7834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873E10", Offset = "0x873E10")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xED7888", Offset = "0xED7888", VA = "0xED7888")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xED7BFC", Offset = "0xED7BFC", VA = "0xED7BFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xED7B8C", Offset = "0xED7B8C", VA = "0xED7B8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873E20", Offset = "0x873E20")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xED3670", Offset = "0xED3670", VA = "0xED3670")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xED7CB0", Offset = "0xED7CB0", VA = "0xED7CB0")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xED6D44", Offset = "0xED6D44", VA = "0xED6D44")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xED5FC4", Offset = "0xED5FC4", VA = "0xED5FC4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xED7E90", Offset = "0xED7E90", VA = "0xED7E90")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000738")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6002ECF")]
			[Address(RVA = "0xED8948", Offset = "0xED8948", VA = "0xED8948")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170001E4")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xED8200", Offset = "0xED8200", VA = "0xED8200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xED8208", Offset = "0xED8208", VA = "0xED8208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xED8210", Offset = "0xED8210", VA = "0xED8210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xED8218", Offset = "0xED8218", VA = "0xED8218", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000061")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0xED8220", Offset = "0xED8220", VA = "0xED8220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873E84", Offset = "0x873E84")]
			add
			{
			}
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xED82C4", Offset = "0xED82C4", VA = "0xED82C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873E94", Offset = "0x873E94")]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xED83DC", Offset = "0xED83DC", VA = "0xED83DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873EA4", Offset = "0x873EA4")]
			add
			{
			}
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xED8480", Offset = "0xED8480", VA = "0xED8480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873EB4", Offset = "0x873EB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0xED8598", Offset = "0xED8598", VA = "0xED8598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873EC4", Offset = "0x873EC4")]
			add
			{
			}
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xED863C", Offset = "0xED863C", VA = "0xED863C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873ED4", Offset = "0x873ED4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xED8368", Offset = "0xED8368", VA = "0xED8368", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xED8524", Offset = "0xED8524", VA = "0xED8524", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xED86E0", Offset = "0xED86E0", VA = "0xED86E0", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001C24")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xED1CB8", Offset = "0xED1CB8", VA = "0xED1CB8", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xED881C", Offset = "0xED881C", VA = "0xED881C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xED2B34", Offset = "0xED2B34", VA = "0xED2B34")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001D33")]
		None,
		[Token(Token = "0x4001D34")]
		Proximity,
		[Token(Token = "0x4001D35")]
		Contact,
		[Token(Token = "0x4001D36")]
		Action
	}
	[Token(Token = "0x20003F9")]
	public enum InteractableState
	{
		[Token(Token = "0x4001D38")]
		Default,
		[Token(Token = "0x4001D39")]
		ProximityState,
		[Token(Token = "0x4001D3A")]
		ContactState,
		[Token(Token = "0x4001D3B")]
		ActionState
	}
	[Token(Token = "0x20003FA")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xED278C", Offset = "0xED278C", VA = "0xED278C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170001E8")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xED8998", Offset = "0xED8998", VA = "0xED8998")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xED8754", Offset = "0xED8754", VA = "0xED8754")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xED8880", Offset = "0xED8880", VA = "0xED8880")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xED8A00", Offset = "0xED8A00", VA = "0xED8A00")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DEF8", Offset = "0x85DEF8")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400305E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400305F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4003061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4003062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4003063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4003064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4003065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4003066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170004F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ED4")]
				[Address(RVA = "0xED9B38", Offset = "0xED9B38", VA = "0xED9B38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ED6")]
				[Address(RVA = "0xED9BA0", Offset = "0xED9BA0", VA = "0xED9BA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ED0")]
			[Address(RVA = "0xED956C", Offset = "0xED956C", VA = "0xED956C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0xED9728", Offset = "0xED9728", VA = "0xED9728", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0xED979C", Offset = "0xED979C", VA = "0xED979C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0xED9744", Offset = "0xED9744", VA = "0xED9744")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002ED5")]
			[Address(RVA = "0xED9B40", Offset = "0xED9B40", VA = "0xED9B40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xED9464", Offset = "0xED9464", VA = "0xED9464")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xED94E0", Offset = "0xED94E0", VA = "0xED94E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873EE4", Offset = "0x873EE4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xED9598", Offset = "0xED9598", VA = "0xED9598")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xED9720", Offset = "0xED9720", VA = "0xED9720")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170001E9")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xED5A00", Offset = "0xED5A00", VA = "0xED5A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xED5B68", Offset = "0xED5B68", VA = "0xED5B68")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xED9BA8", Offset = "0xED9BA8", VA = "0xED9BA8")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xED9C54", Offset = "0xED9C54", VA = "0xED9C54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xED9F1C", Offset = "0xED9F1C", VA = "0xED9F1C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xED9F64", Offset = "0xED9F64", VA = "0xED9F64")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xEDA1B4", Offset = "0xEDA1B4", VA = "0xEDA1B4")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xEDA2E0", Offset = "0xEDA2E0", VA = "0xEDA2E0")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF08", Offset = "0x85DF08")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170004F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EDA")]
				[Address(RVA = "0xED6F54", Offset = "0xED6F54", VA = "0xED6F54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EDC")]
				[Address(RVA = "0xED6FBC", Offset = "0xED6FBC", VA = "0xED6FBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ED7")]
			[Address(RVA = "0xED5C84", Offset = "0xED5C84", VA = "0xED5C84")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002ED8")]
			[Address(RVA = "0xED6970", Offset = "0xED6970", VA = "0xED6970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ED9")]
			[Address(RVA = "0xED6974", Offset = "0xED6974", VA = "0xED6974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EDB")]
			[Address(RVA = "0xED6F5C", Offset = "0xED6F5C", VA = "0xED6F5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D4B")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170001EA")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xED58E4", Offset = "0xED58E4", VA = "0xED58E4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001EB")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xED58EC", Offset = "0xED58EC", VA = "0xED58EC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001EC")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0xED58F4", Offset = "0xED58F4", VA = "0xED58F4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001ED")]
		public override bool EnableState
		{
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xED58FC", Offset = "0xED58FC", VA = "0xED58FC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xED5928", Offset = "0xED5928", VA = "0xED5928", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xED5964", Offset = "0xED5964", VA = "0xED5964", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xED5C14", Offset = "0xED5C14", VA = "0xED5C14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x873F48", Offset = "0x873F48")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xED5CB0", Offset = "0xED5CB0", VA = "0xED5CB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xED61C0", Offset = "0xED61C0", VA = "0xED61C0")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xED6438", Offset = "0xED6438", VA = "0xED6438")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xED6578", Offset = "0xED6578", VA = "0xED6578", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xED6844", Offset = "0xED6844", VA = "0xED6844", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xED6848", Offset = "0xED6848", VA = "0xED6848", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xED684C", Offset = "0xED684C", VA = "0xED684C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867AD4", Offset = "0x867AD4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867AE4", Offset = "0x867AE4")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867AF4", Offset = "0x867AF4")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170001EE")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xED6FC4", Offset = "0xED6FC4", VA = "0xED6FC4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873FAC", Offset = "0x873FAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C49")]
			[Address(RVA = "0xED6FCC", Offset = "0xED6FCC", VA = "0xED6FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873FBC", Offset = "0x873FBC")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public bool EnableState
		{
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xED6FD4", Offset = "0xED6FD4", VA = "0xED6FD4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0xED6FF0", Offset = "0xED6FF0", VA = "0xED6FF0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xED7010", Offset = "0xED7010", VA = "0xED7010", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873FCC", Offset = "0x873FCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xED7018", Offset = "0xED7018", VA = "0xED7018", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873FDC", Offset = "0x873FDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public float SphereRadius
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xED7024", Offset = "0xED7024", VA = "0xED7024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873FEC", Offset = "0x873FEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xED702C", Offset = "0xED702C", VA = "0xED702C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x873FFC", Offset = "0x873FFC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xED7034", Offset = "0xED7034", VA = "0xED7034")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xED707C", Offset = "0xED707C", VA = "0xED707C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xED7080", Offset = "0xED7080", VA = "0xED7080")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001D5B")]
		None = 0,
		[Token(Token = "0x4001D5C")]
		Ray = 1,
		[Token(Token = "0x4001D5D")]
		Poke = 4,
		[Token(Token = "0x4001D5E")]
		All = -1
	}
	[Token(Token = "0x2000401")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001D60")]
		Inactive,
		[Token(Token = "0x4001D61")]
		PrimaryInputDown,
		[Token(Token = "0x4001D62")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001D63")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000402")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xED6800", Offset = "0xED6800", VA = "0xED6800")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000403")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867B04", Offset = "0x867B04")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867B14", Offset = "0x867B14")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867B24", Offset = "0x867B24")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170001F2")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xED2A48", Offset = "0xED2A48", VA = "0xED2A48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xED8A7C", Offset = "0xED8A7C", VA = "0xED8A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87400C", Offset = "0x87400C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xED8A84", Offset = "0xED8A84", VA = "0xED8A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87401C", Offset = "0x87401C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001C57")]
			get;
		}

		[Token(Token = "0x170001F5")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001C58")]
			get;
		}

		[Token(Token = "0x170001F6")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001C59")]
			get;
		}

		[Token(Token = "0x170001F7")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xED8A90", Offset = "0xED8A90", VA = "0xED8A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87402C", Offset = "0x87402C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xED8A9C", Offset = "0xED8A9C", VA = "0xED8A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87403C", Offset = "0x87403C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xED8AA8", Offset = "0xED8AA8", VA = "0xED8AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87404C", Offset = "0x87404C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xED8AB4", Offset = "0xED8AB4", VA = "0xED8AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87405C", Offset = "0x87405C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001C62")]
			get;
			[Token(Token = "0x6001C63")]
			set;
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xED8AC0", Offset = "0xED8AC0", VA = "0xED8AC0")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001C5F")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001C60")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001C61")]
		public abstract void DeFocus();

		[Token(Token = "0x6001C64")]
		public abstract void Initialize();

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xED8AC8", Offset = "0xED8AC8", VA = "0xED8AC8")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xED8B18", Offset = "0xED8B18", VA = "0xED8B18")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xED8B70", Offset = "0xED8B70", VA = "0xED8B70", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xED8DB4", Offset = "0xED8DB4", VA = "0xED8DB4", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xED6860", Offset = "0xED6860", VA = "0xED6860")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170001FA")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001C6A")]
			get;
		}

		[Token(Token = "0x170001FB")]
		bool EnableState
		{
			[Token(Token = "0x6001C6C")]
			get;
			[Token(Token = "0x6001C6D")]
			set;
		}

		[Token(Token = "0x170001FC")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001C6E")]
			get;
			[Token(Token = "0x6001C6F")]
			set;
		}

		[Token(Token = "0x6001C6B")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000405")]
	public class PinchStateModule
	{
		[Token(Token = "0x200073B")]
		private enum PinchState
		{
			[Token(Token = "0x400306B")]
			None,
			[Token(Token = "0x400306C")]
			PinchDown,
			[Token(Token = "0x400306D")]
			PinchStay,
			[Token(Token = "0x400306E")]
			PinchUp
		}

		[Token(Token = "0x4001D70")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170001FD")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xEDC25C", Offset = "0xEDC25C", VA = "0xEDC25C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FE")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xEDC2E8", Offset = "0xEDC2E8", VA = "0xEDC2E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FF")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xEDC374", Offset = "0xEDC374", VA = "0xEDC374")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xEDC400", Offset = "0xEDC400", VA = "0xEDC400")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xEDC42C", Offset = "0xEDC42C", VA = "0xEDC42C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001D73")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001D74")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001D75")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001D76")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001D77")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x867B44", Offset = "0x867B44")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000200")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xEDC6CC", Offset = "0xEDC6CC", VA = "0xEDC6CC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000201")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xEDC6D4", Offset = "0xEDC6D4", VA = "0xEDC6D4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000202")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xEDC73C", Offset = "0xEDC73C", VA = "0xEDC73C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		public override bool EnableState
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xEDC744", Offset = "0xEDC744", VA = "0xEDC744", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xEDC788", Offset = "0xEDC788", VA = "0xEDC788", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xEDC7FC", Offset = "0xEDC7FC", VA = "0xEDC7FC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xEDC854", Offset = "0xEDC854", VA = "0xEDC854")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xEDC8F0", Offset = "0xEDC8F0", VA = "0xEDC8F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xEDCCB4", Offset = "0xEDCCB4", VA = "0xEDCCB4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xEDCDB0", Offset = "0xEDCDB0", VA = "0xEDCDB0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xEDD114", Offset = "0xEDD114", VA = "0xEDD114")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xEDD2B8", Offset = "0xEDD2B8", VA = "0xEDD2B8")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xEDD3E0", Offset = "0xEDD3E0", VA = "0xEDD3E0")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xEDD718", Offset = "0xEDD718", VA = "0xEDD718")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xEDDB28", Offset = "0xEDDB28", VA = "0xEDDB28", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xEDDBFC", Offset = "0xEDDBFC", VA = "0xEDDBFC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xEDDC30", Offset = "0xEDDC30", VA = "0xEDDC30")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001D83")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001D84")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867BB8", Offset = "0x867BB8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000204")]
		public bool EnableState
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0xEDC76C", Offset = "0xEDC76C", VA = "0xEDC76C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xEDC7A4", Offset = "0xEDC7A4", VA = "0xEDC7A4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0xEDDCE8", Offset = "0xEDDCE8", VA = "0xEDDCE8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0xEDCC78", Offset = "0xEDCC78", VA = "0xEDCC78", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0xEDDF18", Offset = "0xEDDF18", VA = "0xEDDF18", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87406C", Offset = "0x87406C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0xEDDF20", Offset = "0xEDDF20", VA = "0xEDDF20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87407C", Offset = "0x87407C")]
			set
			{
			}
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xEDDCF0", Offset = "0xEDDCF0", VA = "0xEDDCF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xEDDB5C", Offset = "0xEDDB5C", VA = "0xEDDB5C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xEDDF28", Offset = "0xEDDF28", VA = "0xEDDF28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xEDE254", Offset = "0xEDE254", VA = "0xEDE254")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xEDE444", Offset = "0xEDE444", VA = "0xEDE444")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000207")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xED5668", Offset = "0xED5668", VA = "0xED5668")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xED5670", Offset = "0xED5670", VA = "0xED5670")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xED56F8", Offset = "0xED56F8", VA = "0xED56F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xED5700", Offset = "0xED5700", VA = "0xED5700")]
			set
			{
			}
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xED576C", Offset = "0xED576C", VA = "0xED576C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xED58BC", Offset = "0xED58BC", VA = "0xED58BC")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xED58CC", Offset = "0xED58CC", VA = "0xED58CC")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xED58DC", Offset = "0xED58DC", VA = "0xED58DC")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xED31A0", Offset = "0xED31A0", VA = "0xED31A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xED31A4", Offset = "0xED31A4", VA = "0xED31A4")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xED3224", Offset = "0xED3224", VA = "0xED3224")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xED3314", Offset = "0xED3314", VA = "0xED3314")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xED3404", Offset = "0xED3404", VA = "0xED3404")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xED34C4", Offset = "0xED34C4", VA = "0xED34C4")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xED35B4", Offset = "0xED35B4", VA = "0xED35B4")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xED35FC", Offset = "0xED35FC", VA = "0xED35FC")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xED3758", Offset = "0xED3758", VA = "0xED3758")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xED37C8", Offset = "0xED37C8", VA = "0xED37C8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xED37D0", Offset = "0xED37D0", VA = "0xED37D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xED37D4", Offset = "0xED37D4", VA = "0xED37D4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xED378C", Offset = "0xED378C", VA = "0xED378C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xED3814", Offset = "0xED3814", VA = "0xED3814")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF18", Offset = "0x85DF18")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400306F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4003072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4003073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4003074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170004F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EE0")]
				[Address(RVA = "0xEDC100", Offset = "0xEDC100", VA = "0xEDC100", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EE2")]
				[Address(RVA = "0xEDC168", Offset = "0xEDC168", VA = "0xEDC168", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EDD")]
			[Address(RVA = "0xEDBE34", Offset = "0xEDBE34", VA = "0xEDBE34")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002EDE")]
			[Address(RVA = "0xEDBF10", Offset = "0xEDBF10", VA = "0xEDBF10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EDF")]
			[Address(RVA = "0xEDBF14", Offset = "0xEDBF14", VA = "0xEDBF14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EE1")]
			[Address(RVA = "0xEDC108", Offset = "0xEDC108", VA = "0xEDC108", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D94")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001D95")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xEDBA4C", Offset = "0xEDBA4C", VA = "0xEDBA4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xEDBAE4", Offset = "0xEDBAE4", VA = "0xEDBAE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xEDBD70", Offset = "0xEDBD70", VA = "0xEDBD70")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xEDBD00", Offset = "0xEDBD00", VA = "0xEDBD00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87408C", Offset = "0x87408C")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xEDBE60", Offset = "0xEDBE60", VA = "0xEDBE60")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200073D")]
		public enum SelectionState
		{
			[Token(Token = "0x4003076")]
			Off,
			[Token(Token = "0x4003077")]
			Selected,
			[Token(Token = "0x4003078")]
			Highlighted
		}

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000209")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0xEDE4A4", Offset = "0xEDE4A4", VA = "0xEDE4A4")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xEDE4AC", Offset = "0xEDE4AC", VA = "0xEDE4AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xEDE634", Offset = "0xEDE634", VA = "0xEDE634")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xEDE7F4", Offset = "0xEDE7F4", VA = "0xEDE7F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xEDE534", Offset = "0xEDE534", VA = "0xEDE534")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xEDE8E4", Offset = "0xEDE8E4", VA = "0xEDE8E4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200073E")]
		public enum SegmentType
		{
			[Token(Token = "0x400307A")]
			Straight,
			[Token(Token = "0x400307B")]
			LeftTurn,
			[Token(Token = "0x400307C")]
			RightTurn,
			[Token(Token = "0x400307D")]
			Switch
		}

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001DAA")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001DAB")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867C98", Offset = "0x867C98")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700020A")]
		public float StartDistance
		{
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xEDE950", Offset = "0xEDE950", VA = "0xEDE950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8740F0", Offset = "0x8740F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0xEDE958", Offset = "0xEDE958", VA = "0xEDE958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874100", Offset = "0x874100")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public float GridSize
		{
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xEDE960", Offset = "0xEDE960", VA = "0xEDE960")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xEDE968", Offset = "0xEDE968", VA = "0xEDE968")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public int SubDivCount
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xEDE970", Offset = "0xEDE970", VA = "0xEDE970")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xEDE978", Offset = "0xEDE978", VA = "0xEDE978")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public SegmentType Type
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xEDE980", Offset = "0xEDE980", VA = "0xEDE980")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700020E")]
		public Pose EndPose
		{
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xEDE988", Offset = "0xEDE988", VA = "0xEDE988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		public float Radius
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xEDEE1C", Offset = "0xEDEE1C", VA = "0xEDEE1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000210")]
		public float SegmentLength
		{
			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0xEDE9F0", Offset = "0xEDE9F0", VA = "0xEDE9F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xEDEE2C", Offset = "0xEDEE2C", VA = "0xEDEE2C")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xEDEE44", Offset = "0xEDEE44", VA = "0xEDEE44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xEDEA30", Offset = "0xEDEA30", VA = "0xEDEA30")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xEDEE48", Offset = "0xEDEE48", VA = "0xEDEE48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xEDEE4C", Offset = "0xEDEE4C", VA = "0xEDEE4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xEDEEB8", Offset = "0xEDEEB8", VA = "0xEDEEB8")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xEDFA40", Offset = "0xEDFA40", VA = "0xEDFA40")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xEDFD4C", Offset = "0xEDFD4C", VA = "0xEDFD4C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF28", Offset = "0x85DF28")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400307E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400307F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4003081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4003082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170004F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EE6")]
				[Address(RVA = "0xEE0954", Offset = "0xEE0954", VA = "0xEE0954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EE8")]
				[Address(RVA = "0xEE09BC", Offset = "0xEE09BC", VA = "0xEE09BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EE3")]
			[Address(RVA = "0xEE06CC", Offset = "0xEE06CC", VA = "0xEE06CC")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0xEE07A8", Offset = "0xEE07A8", VA = "0xEE07A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0xEE07AC", Offset = "0xEE07AC", VA = "0xEE07AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EE7")]
			[Address(RVA = "0xEE095C", Offset = "0xEE095C", VA = "0xEE095C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DB1")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001DB2")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xEDFDF0", Offset = "0xEDFDF0", VA = "0xEDFDF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xEDFE9C", Offset = "0xEDFE9C", VA = "0xEDFE9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xEDFF50", Offset = "0xEDFF50", VA = "0xEDFF50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xEE007C", Offset = "0xEE007C", VA = "0xEE007C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xEE01EC", Offset = "0xEE01EC", VA = "0xEE01EC")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xEE0388", Offset = "0xEE0388", VA = "0xEE0388")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xEE0604", Offset = "0xEE0604", VA = "0xEE0604")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xEE049C", Offset = "0xEE049C", VA = "0xEE049C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xEE04B0", Offset = "0xEE04B0", VA = "0xEE04B0")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xEE065C", Offset = "0xEE065C", VA = "0xEE065C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874110", Offset = "0x874110")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xEE06F8", Offset = "0xEE06F8", VA = "0xEE06F8")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000211")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xEE09C4", Offset = "0xEE09C4", VA = "0xEE09C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xEE09D4", Offset = "0xEE09D4", VA = "0xEE09D4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xEE09DC", Offset = "0xEE09DC", VA = "0xEE09DC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xEE0E48", Offset = "0xEE0E48", VA = "0xEE0E48")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001DC5")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001DC6")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867D98", Offset = "0x867D98")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000212")]
		public float Distance
		{
			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xEE0F40", Offset = "0xEE0F40", VA = "0xEE0F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874174", Offset = "0x874174")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xEE0F48", Offset = "0xEE0F48", VA = "0xEE0F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874184", Offset = "0x874184")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public float Scale
		{
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xEE0F50", Offset = "0xEE0F50", VA = "0xEE0F50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xEE0F58", Offset = "0xEE0F58", VA = "0xEE0F58")]
			set
			{
			}
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xEE09D8", Offset = "0xEE09D8", VA = "0xEE09D8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xEE0F60", Offset = "0xEE0F60", VA = "0xEE0F60")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xEE0A24", Offset = "0xEE0A24", VA = "0xEE0A24")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xEE0CFC", Offset = "0xEE0CFC", VA = "0xEE0CFC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001CDC")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xEE0EB8", Offset = "0xEE0EB8", VA = "0xEE0EB8")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF38", Offset = "0x85DF38")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4003086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4003087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4003088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4003089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400308A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x400308B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x400308C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x400308D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x400308E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170004FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EEC")]
				[Address(RVA = "0xEE18E8", Offset = "0xEE18E8", VA = "0xEE18E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EEE")]
				[Address(RVA = "0xEE1950", Offset = "0xEE1950", VA = "0xEE1950", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EE9")]
			[Address(RVA = "0xEE152C", Offset = "0xEE152C", VA = "0xEE152C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002EEA")]
			[Address(RVA = "0xEE16C4", Offset = "0xEE16C4", VA = "0xEE16C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EEB")]
			[Address(RVA = "0xEE16C8", Offset = "0xEE16C8", VA = "0xEE16C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EED")]
			[Address(RVA = "0xEE18F0", Offset = "0xEE18F0", VA = "0xEE18F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xEE1130", Offset = "0xEE1130", VA = "0xEE1130")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xEE117C", Offset = "0xEE117C", VA = "0xEE117C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xEE1288", Offset = "0xEE1288", VA = "0xEE1288")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xEE13D0", Offset = "0xEE13D0", VA = "0xEE13D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xEE12E4", Offset = "0xEE12E4", VA = "0xEE12E4")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xEE14AC", Offset = "0xEE14AC", VA = "0xEE14AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874194", Offset = "0x874194")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xEE1558", Offset = "0xEE1558", VA = "0xEE1558")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xEE1604", Offset = "0xEE1604", VA = "0xEE1604")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xEE1664", Offset = "0xEE1664", VA = "0xEE1664")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000741")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4003090")]
			Start,
			[Token(Token = "0x4003091")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4003092")]
			Stop
		}

		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF48", Offset = "0x85DF48")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4003096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4003097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4003098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4003099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400309A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x400309B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170004FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EF2")]
				[Address(RVA = "0xEE2274", Offset = "0xEE2274", VA = "0xEE2274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EF4")]
				[Address(RVA = "0xEE22DC", Offset = "0xEE22DC", VA = "0xEE22DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EEF")]
			[Address(RVA = "0xEE1C10", Offset = "0xEE1C10", VA = "0xEE1C10")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002EF0")]
			[Address(RVA = "0xEE2054", Offset = "0xEE2054", VA = "0xEE2054", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EF1")]
			[Address(RVA = "0xEE2058", Offset = "0xEE2058", VA = "0xEE2058", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EF3")]
			[Address(RVA = "0xEE227C", Offset = "0xEE227C", VA = "0xEE227C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DD9")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001DDA")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001DDB")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001DDC")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x867DF8", Offset = "0x867DF8")]
		protected float _initialSpeed;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xEE1958", Offset = "0xEE1958", VA = "0xEE1958")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xEE1AB0", Offset = "0xEE1AB0", VA = "0xEE1AB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xEE1ABC", Offset = "0xEE1ABC", VA = "0xEE1ABC", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xED31D8", Offset = "0xED31D8", VA = "0xED31D8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xEE1A2C", Offset = "0xEE1A2C", VA = "0xEE1A2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8741F8", Offset = "0x8741F8")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xEE1C3C", Offset = "0xEE1C3C", VA = "0xEE1C3C")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xEE1BAC", Offset = "0xEE1BAC", VA = "0xEE1BAC")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xED3258", Offset = "0xED3258", VA = "0xED3258")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xED3348", Offset = "0xED3348", VA = "0xED3348")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xEE1E70", Offset = "0xEE1E70", VA = "0xEE1E70")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xEE1F60", Offset = "0xEE1F60", VA = "0xEE1F60")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xED3438", Offset = "0xED3438", VA = "0xED3438")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xED34F8", Offset = "0xED34F8", VA = "0xED34F8")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xED35EC", Offset = "0xED35EC", VA = "0xED35EC")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xEE1FE8", Offset = "0xEE1FE8", VA = "0xEE1FE8")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000214")]
		public float TrackLength
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0xEE22E4", Offset = "0xEE22E4", VA = "0xEE22E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xEE22EC", Offset = "0xEE22EC", VA = "0xEE22EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xEE22F4", Offset = "0xEE22F4", VA = "0xEE22F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xEE0FE0", Offset = "0xEE0FE0", VA = "0xEE0FE0")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xEE22F8", Offset = "0xEE22F8", VA = "0xEE22F8")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xEE24F0", Offset = "0xEE24F0", VA = "0xEE24F0")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xEE260C", Offset = "0xEE260C", VA = "0xEE260C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class Pose
	{
		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xEDC5B0", Offset = "0xEDC5B0", VA = "0xEDC5B0")]
		public Pose()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xEDC65C", Offset = "0xEDC65C", VA = "0xEDC65C")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF58", Offset = "0x85DF58")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400309C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400309D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400309E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400309F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40030A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40030A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170004FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EF8")]
				[Address(RVA = "0xEE2BF0", Offset = "0xEE2BF0", VA = "0xEE2BF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000500")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EFA")]
				[Address(RVA = "0xEE2C58", Offset = "0xEE2C58", VA = "0xEE2C58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EF5")]
			[Address(RVA = "0xEE28B4", Offset = "0xEE28B4", VA = "0xEE28B4")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002EF6")]
			[Address(RVA = "0xEE2A14", Offset = "0xEE2A14", VA = "0xEE2A14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EF7")]
			[Address(RVA = "0xEE2A18", Offset = "0xEE2A18", VA = "0xEE2A18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EF9")]
			[Address(RVA = "0xEE2BF8", Offset = "0xEE2BF8", VA = "0xEE2BF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF68", Offset = "0x85DF68")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40030A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40030A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40030A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000501")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EFE")]
				[Address(RVA = "0xEE2D2C", Offset = "0xEE2D2C", VA = "0xEE2D2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000502")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F00")]
				[Address(RVA = "0xEE2D94", Offset = "0xEE2D94", VA = "0xEE2D94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EFB")]
			[Address(RVA = "0xEE2974", Offset = "0xEE2974", VA = "0xEE2974")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002EFC")]
			[Address(RVA = "0xEE2C60", Offset = "0xEE2C60", VA = "0xEE2C60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EFD")]
			[Address(RVA = "0xEE2C64", Offset = "0xEE2C64", VA = "0xEE2C64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EFF")]
			[Address(RVA = "0xEE2D34", Offset = "0xEE2D34", VA = "0xEE2D34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DFF")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x867FE0", Offset = "0x867FE0")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000215")]
		public bool IsMoving
		{
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xEE2628", Offset = "0xEE2628", VA = "0xEE2628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87425C", Offset = "0x87425C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D01")]
			[Address(RVA = "0xEE2630", Offset = "0xEE2630", VA = "0xEE2630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87426C", Offset = "0x87426C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xEE263C", Offset = "0xEE263C", VA = "0xEE263C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xEE2678", Offset = "0xEE2678", VA = "0xEE2678")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xEE27CC", Offset = "0xEE27CC", VA = "0xEE27CC")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xEE2834", Offset = "0xEE2834", VA = "0xEE2834")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87427C", Offset = "0x87427C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xEE28E0", Offset = "0xEE28E0", VA = "0xEE28E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8742E0", Offset = "0x8742E0")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xEE29A0", Offset = "0xEE29A0", VA = "0xEE29A0")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xEE2A0C", Offset = "0xEE2A0C", VA = "0xEE2A0C")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xEE2D9C", Offset = "0xEE2D9C", VA = "0xEE2D9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xEE2E04", Offset = "0xEE2E04", VA = "0xEE2E04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xEE2EBC", Offset = "0xEE2EBC", VA = "0xEE2EBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xEE2FBC", Offset = "0xEE2FBC", VA = "0xEE2FBC")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xEE3038", Offset = "0xEE3038", VA = "0xEE3038")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xEE3114", Offset = "0xEE3114", VA = "0xEE3114")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001E10")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001E11")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001E12")]
		EUDT_None,
		[Token(Token = "0x4001E13")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000418")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF78", Offset = "0x85DF78")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000503")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F04")]
				[Address(RVA = "0xEDB9DC", Offset = "0xEDB9DC", VA = "0xEDB9DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000504")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F06")]
				[Address(RVA = "0xEDBA44", Offset = "0xEDBA44", VA = "0xEDBA44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F01")]
			[Address(RVA = "0xEDB058", Offset = "0xEDB058", VA = "0xEDB058")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002F02")]
			[Address(RVA = "0xEDB790", Offset = "0xEDB790", VA = "0xEDB790", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F03")]
			[Address(RVA = "0xEDB794", Offset = "0xEDB794", VA = "0xEDB794", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F05")]
			[Address(RVA = "0xEDB9E4", Offset = "0xEDB9E4", VA = "0xEDB9E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001E15")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001E16")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001E17")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x868020", Offset = "0x868020")]
		public GameObject mainCamera;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x868058", Offset = "0x868058")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xEDA3A0", Offset = "0xEDA3A0", VA = "0xEDA3A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xEDAB80", Offset = "0xEDAB80", VA = "0xEDAB80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xEDACC0", Offset = "0xEDACC0", VA = "0xEDACC0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xEDADE8", Offset = "0xEDADE8", VA = "0xEDADE8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xEDAF10", Offset = "0xEDAF10", VA = "0xEDAF10")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xEDAC94", Offset = "0xEDAC94", VA = "0xEDAC94")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xEDAFE8", Offset = "0xEDAFE8", VA = "0xEDAFE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874344", Offset = "0x874344")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xEDB084", Offset = "0xEDB084", VA = "0xEDB084")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xEDA70C", Offset = "0xEDA70C", VA = "0xEDA70C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xEDB1AC", Offset = "0xEDB1AC", VA = "0xEDB1AC")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xEDB0B8", Offset = "0xEDB0B8", VA = "0xEDB0B8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xEDB548", Offset = "0xEDB548", VA = "0xEDB548")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xEDB624", Offset = "0xEDB624", VA = "0xEDB624")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xEDB6A0", Offset = "0xEDB6A0", VA = "0xEDB6A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8743A8", Offset = "0x8743A8")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xEDB6F0", Offset = "0xEDB6F0", VA = "0xEDB6F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8743B8", Offset = "0x8743B8")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xEDB740", Offset = "0xEDB740", VA = "0xEDB740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8743C8", Offset = "0x8743C8")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000216")]
		public bool Highlight
		{
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xED2C30", Offset = "0xED2C30", VA = "0xED2C30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0xED2C38", Offset = "0xED2C38", VA = "0xED2C38")]
			set
			{
			}
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xED2C44", Offset = "0xED2C44", VA = "0xED2C44")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xED2E10", Offset = "0xED2E10", VA = "0xED2E10", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xED2E38", Offset = "0xED2E38", VA = "0xED2E38", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xED2E60", Offset = "0xED2E60", VA = "0xED2E60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xED2D10", Offset = "0xED2D10", VA = "0xED2D10")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xED30B4", Offset = "0xED30B4", VA = "0xED30B4")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85AF60", Offset = "0x85AF60")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000217")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xED3C34", Offset = "0xED3C34", VA = "0xED3C34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xED3C3C", Offset = "0xED3C3C", VA = "0xED3C3C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xED3C58", Offset = "0xED3C58", VA = "0xED3C58", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xED3DE4", Offset = "0xED3DE4", VA = "0xED3DE4", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xED4778", Offset = "0xED4778", VA = "0xED4778", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xED4D34", Offset = "0xED4D34", VA = "0xED4D34", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xED5114", Offset = "0xED5114", VA = "0xED5114")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xED40AC", Offset = "0xED40AC", VA = "0xED40AC")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xED51F0", Offset = "0xED51F0", VA = "0xED51F0")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xED5628", Offset = "0xED5628", VA = "0xED5628", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xED5640", Offset = "0xED5640", VA = "0xED5640", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xED5648", Offset = "0xED5648", VA = "0xED5648")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xED7088", Offset = "0xED7088", VA = "0xED7088")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xED7138", Offset = "0xED7138", VA = "0xED7138")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xED71E4", Offset = "0xED71E4", VA = "0xED71E4")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000746")]
		public enum CrosshairState
		{
			[Token(Token = "0x40030AC")]
			Disabled,
			[Token(Token = "0x40030AD")]
			Enabled,
			[Token(Token = "0x40030AE")]
			Targeted
		}

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xED71EC", Offset = "0xED71EC", VA = "0xED71EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xED3AF0", Offset = "0xED3AF0", VA = "0xED3AF0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xED7254", Offset = "0xED7254", VA = "0xED7254")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xED729C", Offset = "0xED729C", VA = "0xED729C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xEDC170", Offset = "0xEDC170", VA = "0xEDC170")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xEDC23C", Offset = "0xEDC23C", VA = "0xEDC23C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xEDC248", Offset = "0xEDC248", VA = "0xEDC248")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xEDC254", Offset = "0xEDC254", VA = "0xEDC254")]
		public PauseOnInputLoss()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85AFC4", Offset = "0x85AFC4")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF88", Offset = "0x85DF88")]
		private sealed class <>c
		{
			[Token(Token = "0x40030AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6002F08")]
			[Address(RVA = "0x9E7F68", Offset = "0x9E7F68", VA = "0x9E7F68")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F09")]
			[Address(RVA = "0x9E7F70", Offset = "0x9E7F70", VA = "0x9E7F70")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001E46")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001E47")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001E48")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001E49")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001E4A")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001E4B")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001E4C")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001E4D")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001E4E")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001E4F")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001E50")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x9E71AC", Offset = "0x9E71AC", VA = "0x9E71AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x9E7204", Offset = "0x9E7204", VA = "0x9E7204")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x9E760C", Offset = "0x9E760C", VA = "0x9E760C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x9E76D8", Offset = "0x9E76D8", VA = "0x9E76D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x9E77E4", Offset = "0x9E77E4", VA = "0x9E77E4")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x9E7B1C", Offset = "0x9E7B1C", VA = "0x9E7B1C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x9E7C84", Offset = "0x9E7C84", VA = "0x9E7C84")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x9E7DD0", Offset = "0x9E7DD0", VA = "0x9E7DD0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x9E7880", Offset = "0x9E7880", VA = "0x9E7880")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x9E7920", Offset = "0x9E7920", VA = "0x9E7920")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x9E7460", Offset = "0x9E7460", VA = "0x9E7460")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x9E7EEC", Offset = "0x9E7EEC", VA = "0x9E7EEC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001E63")]
		Default,
		[Token(Token = "0x4001E64")]
		Generic,
		[Token(Token = "0x4001E65")]
		PingPongBall,
		[Token(Token = "0x4001E66")]
		Controller
	}
	[Token(Token = "0x2000420")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000218")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x9E7F9C", Offset = "0x9E7F9C", VA = "0x9E7F9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000219")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x9E7FA4", Offset = "0x9E7FA4", VA = "0x9E7FA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021A")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x9E7FAC", Offset = "0x9E7FAC", VA = "0x9E7FAC")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x9E7FB4", Offset = "0x9E7FB4", VA = "0x9E7FB4")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x9E7FBC", Offset = "0x9E7FBC", VA = "0x9E7FBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x9E8230", Offset = "0x9E8230", VA = "0x9E8230")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x9E828C", Offset = "0x9E828C", VA = "0x9E828C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x9E82D0", Offset = "0x9E82D0", VA = "0x9E82D0")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000422")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001E6E")]
		TRIANGLES,
		[Token(Token = "0x4001E6F")]
		QUADS
	}
	[Token(Token = "0x2000423")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001E71")]
		ABSORPTION,
		[Token(Token = "0x4001E72")]
		TRANSMISSION,
		[Token(Token = "0x4001E73")]
		SCATTERING
	}
	[Token(Token = "0x2000424")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000425")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001E78")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001E79")]
		public const string Tab = "    ";

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x9E917C", Offset = "0x9E917C", VA = "0x9E917C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8743D8", Offset = "0x8743D8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8743D8", Offset = "0x8743D8")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x9E9204", Offset = "0x9E9204", VA = "0x9E9204")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x874438", Offset = "0x874438")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x874438", Offset = "0x874438")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x9E929C", Offset = "0x9E929C", VA = "0x9E929C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x874498", Offset = "0x874498")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x874498", Offset = "0x874498")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x9E9324", Offset = "0x9E9324", VA = "0x9E9324")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8744F8", Offset = "0x8744F8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8744F8", Offset = "0x8744F8")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x9E93AC", Offset = "0x9E93AC", VA = "0x9E93AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x874558", Offset = "0x874558")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x874558", Offset = "0x874558")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class CAPI
	{
		[Token(Token = "0x2000748")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000749")]
		public enum Result
		{
			[Token(Token = "0x40030B2")]
			Success = 0,
			[Token(Token = "0x40030B3")]
			Failure = -1000,
			[Token(Token = "0x40030B4")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40030B5")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40030B6")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40030B7")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40030B8")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40030B9")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40030BA")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200074A")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40030BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6002F0E")]
			[Address(RVA = "0xED0CBC", Offset = "0xED0CBC", VA = "0xED0CBC")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001E7A")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001E82")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x9E94AC", Offset = "0x9E94AC", VA = "0x9E94AC")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x9E953C", Offset = "0x9E953C", VA = "0x9E953C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x9E96F8", Offset = "0x9E96F8", VA = "0x9E96F8")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x9E97D8", Offset = "0x9E97D8", VA = "0x9E97D8")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x9E9848", Offset = "0x9E9848", VA = "0x9E9848")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x9E98BC", Offset = "0x9E98BC", VA = "0x9E98BC")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x9E993C", Offset = "0x9E993C", VA = "0x9E993C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x9E9A54", Offset = "0x9E9A54", VA = "0x9E9A54")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x9E9AD4", Offset = "0x9E9AD4", VA = "0x9E9AD4")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x9E9BEC", Offset = "0x9E9BEC", VA = "0x9E9BEC")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x9E9C6C", Offset = "0x9E9C6C", VA = "0x9E9C6C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x9E9CEC", Offset = "0x9E9CEC", VA = "0x9E9CEC")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x9E9D6C", Offset = "0x9E9D6C", VA = "0x9E9D6C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x9E9DEC", Offset = "0x9E9DEC", VA = "0x9E9DEC")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x9E9E7C", Offset = "0x9E9E7C", VA = "0x9E9E7C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x9E9F0C", Offset = "0x9E9F0C", VA = "0x9E9F0C")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x9E9F9C", Offset = "0x9E9F9C", VA = "0x9E9F9C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x9EA01C", Offset = "0x9EA01C", VA = "0x9EA01C")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x9EA09C", Offset = "0x9EA09C", VA = "0x9EA09C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x9EA12C", Offset = "0x9EA12C", VA = "0x9EA12C")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x9EA1BC", Offset = "0x9EA1BC", VA = "0x9EA1BC")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x9EA24C", Offset = "0x9EA24C", VA = "0x9EA24C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x9EA2CC", Offset = "0x9EA2CC", VA = "0x9EA2CC")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x9EA36C", Offset = "0x9EA36C", VA = "0x9EA36C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x9EA3EC", Offset = "0x9EA3EC", VA = "0x9EA3EC")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x9EA48C", Offset = "0x9EA48C", VA = "0x9EA48C")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x9EA54C", Offset = "0x9EA54C", VA = "0x9EA54C")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x9EA61C", Offset = "0x9EA61C", VA = "0x9EA61C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x9EA6AC", Offset = "0x9EA6AC", VA = "0x9EA6AC")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x9EA73C", Offset = "0x9EA73C", VA = "0x9EA73C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x9EA7CC", Offset = "0x9EA7CC", VA = "0x9EA7CC")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x9EA85C", Offset = "0x9EA85C", VA = "0x9EA85C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x9EA8EC", Offset = "0x9EA8EC", VA = "0x9EA8EC")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x9EA96C", Offset = "0x9EA96C", VA = "0x9EA96C")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x9EAA8C", Offset = "0x9EAA8C", VA = "0x9EAA8C")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x9EA9FC", Offset = "0x9EA9FC", VA = "0x9EA9FC")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x9EAC80", Offset = "0x9EAC80", VA = "0x9EAC80")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x9EADB8", Offset = "0x9EADB8", VA = "0x9EADB8")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D7E")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x9EAE38", Offset = "0x9EAE38", VA = "0x9EAE38")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x9EB0A8", Offset = "0x9EB0A8", VA = "0x9EB0A8")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x9EB128", Offset = "0x9EB128", VA = "0x9EB128")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x9EB260", Offset = "0x9EB260", VA = "0x9EB260")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x9EB2E0", Offset = "0x9EB2E0", VA = "0x9EB2E0")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x9EB418", Offset = "0x9EB418", VA = "0x9EB418")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x9EB498", Offset = "0x9EB498", VA = "0x9EB498")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x9EB5D0", Offset = "0x9EB5D0", VA = "0x9EB5D0")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x9EB650", Offset = "0x9EB650", VA = "0x9EB650")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x9EB788", Offset = "0x9EB788", VA = "0x9EB788")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x9EB808", Offset = "0x9EB808", VA = "0x9EB808")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x9EB888", Offset = "0x9EB888", VA = "0x9EB888")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x9EB920", Offset = "0x9EB920", VA = "0x9EB920")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x9EB9A0", Offset = "0x9EB9A0", VA = "0x9EB9A0")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x9EBB4C", Offset = "0x9EBB4C", VA = "0x9EBB4C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x9EBC78", Offset = "0x9EBC78", VA = "0x9EBC78")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x9EBACC", Offset = "0x9EBACC", VA = "0x9EBACC")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x9EBCF8", Offset = "0x9EBCF8", VA = "0x9EBCF8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x9EBD78", Offset = "0x9EBD78", VA = "0x9EBD78")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x9EBE08", Offset = "0x9EBE08", VA = "0x9EBE08")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x9EBE88", Offset = "0x9EBE88", VA = "0x9EBE88")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x9EBF18", Offset = "0x9EBF18", VA = "0x9EBF18")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x9EBF98", Offset = "0x9EBF98", VA = "0x9EBF98")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x9EC018", Offset = "0x9EC018", VA = "0x9EC018")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x9EC254", Offset = "0x9EC254", VA = "0x9EC254")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x9EC2E4", Offset = "0x9EC2E4", VA = "0x9EC2E4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x9EC4D0", Offset = "0x9EC4D0", VA = "0x9EC4D0")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x9EC568", Offset = "0x9EC568", VA = "0x9EC568")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x9EC68C", Offset = "0x9EC68C", VA = "0x9EC68C")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x9EC70C", Offset = "0x9EC70C", VA = "0x9EC70C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x9EC78C", Offset = "0x9EC78C", VA = "0x9EC78C")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x9EC8B4", Offset = "0x9EC8B4", VA = "0x9EC8B4")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x9EC934", Offset = "0x9EC934", VA = "0x9EC934")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x9ECA5C", Offset = "0x9ECA5C", VA = "0x9ECA5C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x9ECADC", Offset = "0x9ECADC", VA = "0x9ECADC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x9ECB6C", Offset = "0x9ECB6C", VA = "0x9ECB6C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x9ECBFC", Offset = "0x9ECBFC", VA = "0x9ECBFC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x9ECC8C", Offset = "0x9ECC8C", VA = "0x9ECC8C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x9ECD0C", Offset = "0x9ECD0C", VA = "0x9ECD0C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x9ECD94", Offset = "0x9ECD94", VA = "0x9ECD94")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x9ECE1C", Offset = "0x9ECE1C", VA = "0x9ECE1C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x9ECE9C", Offset = "0x9ECE9C", VA = "0x9ECE9C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x9ECF1C", Offset = "0x9ECF1C", VA = "0x9ECF1C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x9ECFD0", Offset = "0x9ECFD0", VA = "0x9ECFD0")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x9ED060", Offset = "0x9ED060", VA = "0x9ED060")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x9ED0F0", Offset = "0x9ED0F0", VA = "0x9ED0F0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x9ED170", Offset = "0x9ED170", VA = "0x9ED170")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x9ED1F0", Offset = "0x9ED1F0", VA = "0x9ED1F0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x9ED270", Offset = "0x9ED270", VA = "0x9ED270")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x9ED308", Offset = "0x9ED308", VA = "0x9ED308")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x9ED398", Offset = "0x9ED398", VA = "0x9ED398")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x9ED428", Offset = "0x9ED428", VA = "0x9ED428")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x9ED4B8", Offset = "0x9ED4B8", VA = "0x9ED4B8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x9ED550", Offset = "0x9ED550", VA = "0x9ED550")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x9ED5E8", Offset = "0x9ED5E8", VA = "0x9ED5E8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x9ED668", Offset = "0x9ED668", VA = "0x9ED668")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x9ED6E8", Offset = "0x9ED6E8", VA = "0x9ED6E8")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x9ED810", Offset = "0x9ED810", VA = "0x9ED810")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x9ED890", Offset = "0x9ED890", VA = "0x9ED890")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x9ED9B8", Offset = "0x9ED9B8", VA = "0x9ED9B8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x9EDA38", Offset = "0x9EDA38", VA = "0x9EDA38")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x9EDB60", Offset = "0x9EDB60", VA = "0x9EDB60")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x9EDBE0", Offset = "0x9EDBE0", VA = "0x9EDBE0")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x9EDD88", Offset = "0x9EDD88", VA = "0x9EDD88")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x9EE024", Offset = "0x9EE024", VA = "0x9EE024")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0x9EDD08", Offset = "0x9EDD08", VA = "0x9EDD08")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x9EE0B4", Offset = "0x9EE0B4", VA = "0x9EE0B4")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x9EE134", Offset = "0x9EE134", VA = "0x9EE134")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x9EE1C4", Offset = "0x9EE1C4", VA = "0x9EE1C4")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x9EE254", Offset = "0x9EE254", VA = "0x9EE254")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x9EE2E4", Offset = "0x9EE2E4", VA = "0x9EE2E4")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x9EE384", Offset = "0x9EE384", VA = "0x9EE384")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x9EE424", Offset = "0x9EE424", VA = "0x9EE424")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x9EE4C4", Offset = "0x9EE4C4", VA = "0x9EE4C4")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x9EE544", Offset = "0x9EE544", VA = "0x9EE544")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x9EE5C4", Offset = "0x9EE5C4", VA = "0x9EE5C4")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x9EE644", Offset = "0x9EE644", VA = "0x9EE644")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x9EE6C4", Offset = "0x9EE6C4", VA = "0x9EE6C4")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x9EE744", Offset = "0x9EE744", VA = "0x9EE744")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x9EE86C", Offset = "0x9EE86C", VA = "0x9EE86C")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x9EE904", Offset = "0x9EE904", VA = "0x9EE904")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x9EE984", Offset = "0x9EE984", VA = "0x9EE984")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x9EE9E8", Offset = "0x9EE9E8", VA = "0x9EE9E8")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x9EEB04", Offset = "0x9EEB04", VA = "0x9EEB04")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x9EEB94", Offset = "0x9EEB94", VA = "0x9EEB94")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x9EECD8", Offset = "0x9EECD8", VA = "0x9EECD8")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x9EED68", Offset = "0x9EED68", VA = "0x9EED68")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x9EEE08", Offset = "0x9EEE08", VA = "0x9EEE08")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x9EF1A0", Offset = "0x9EF1A0", VA = "0x9EF1A0")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x9EF220", Offset = "0x9EF220", VA = "0x9EF220")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x9EF2B8", Offset = "0x9EF2B8", VA = "0x9EF2B8")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x9EFA80", Offset = "0x9EFA80", VA = "0x9EFA80")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x9EFB00", Offset = "0x9EFB00", VA = "0x9EFB00")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x9E9444", Offset = "0x9E9444", VA = "0x9E9444")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8745B8", Offset = "0x8745B8")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x9EFB98", Offset = "0x9EFB98", VA = "0x9EFB98")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x9EFC1C", Offset = "0x9EFC1C", VA = "0x9EFC1C")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x9EFC9C", Offset = "0x9EFC9C", VA = "0x9EFC9C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x9EFD1C", Offset = "0x9EFD1C", VA = "0x9EFD1C")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x9EFD9C", Offset = "0x9EFD9C", VA = "0x9EFD9C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x9F077C", Offset = "0x9F077C", VA = "0x9F077C")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x9F07FC", Offset = "0x9F07FC", VA = "0x9F07FC")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x9F0BE8", Offset = "0x9F0BE8", VA = "0x9F0BE8")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x9F0B58", Offset = "0x9F0B58", VA = "0x9F0B58")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x9F0C5C", Offset = "0x9F0C5C", VA = "0x9F0C5C")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000427")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x8681C0", Offset = "0x8681C0")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x9D29D0", Offset = "0x9D29D0", VA = "0x9D29D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x9D29D4", Offset = "0x9D29D4", VA = "0x9D29D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x9D2A94", Offset = "0x9D2A94", VA = "0x9D2A94")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86820C", Offset = "0x86820C")]
		public bool autoRetrigger;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x868244", Offset = "0x868244")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868268", Offset = "0x868268")]
		public Transform[] playPositions;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xACA5D8", Offset = "0xACA5D8", VA = "0xACA5D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xACA75C", Offset = "0xACA75C", VA = "0xACA75C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xACA93C", Offset = "0xACA93C", VA = "0xACA93C")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xACA7BC", Offset = "0xACA7BC", VA = "0xACA7BC")]
		public void Play()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xACAA00", Offset = "0xACAA00", VA = "0xACAA00")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xACAB78", Offset = "0xACAB78", VA = "0xACAB78")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001E91")]
		Default,
		[Token(Token = "0x4001E92")]
		Preload,
		[Token(Token = "0x4001E93")]
		ManualPreload
	}
	[Token(Token = "0x200042A")]
	public enum Fade
	{
		[Token(Token = "0x4001E95")]
		In,
		[Token(Token = "0x4001E96")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200042B")]
	public class SoundGroup
	{
		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8682A0", Offset = "0x8682A0")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x9D28B0", Offset = "0x9D28B0", VA = "0x9D28B0")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x9D2944", Offset = "0x9D2944", VA = "0x9D2944")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x9D05B0", Offset = "0x9D05B0", VA = "0x9D05B0")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x9D08EC", Offset = "0x9D08EC", VA = "0x9D08EC")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x9D1E64", Offset = "0x9D1E64", VA = "0x9D1E64")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200042C")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200074B")]
		public enum Fade
		{
			[Token(Token = "0x40030BD")]
			In,
			[Token(Token = "0x40030BE")]
			Out
		}

		[Token(Token = "0x200074C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DF98", Offset = "0x85DF98")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x40030BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6002F10")]
			[Address(RVA = "0x9D0014", Offset = "0x9D0014", VA = "0x9D0014")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6002F11")]
			[Address(RVA = "0x9D001C", Offset = "0x9D001C", VA = "0x9D001C")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200074D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DFA8", Offset = "0x85DFA8")]
		private sealed class <>c
		{
			[Token(Token = "0x40030C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6002F13")]
			[Address(RVA = "0x9CFF7C", Offset = "0x9CFF7C", VA = "0x9CFF7C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F14")]
			[Address(RVA = "0x9CFF84", Offset = "0x9CFF84", VA = "0x9CFF84")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8682CC", Offset = "0x8682CC")]
		public bool makePersistent;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868304", Offset = "0x868304")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86833C", Offset = "0x86833C")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868374", Offset = "0x868374")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8683AC", Offset = "0x8683AC")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8683E4", Offset = "0x8683E4")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86841C", Offset = "0x86841C")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868454", Offset = "0x868454")]
		public bool verboseLogging;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86848C", Offset = "0x86848C")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8684C4", Offset = "0x8684C4")]
		public float volumeSoundFX;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8684FC", Offset = "0x8684FC")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x1700021B")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0xACAC38", Offset = "0xACAC38", VA = "0xACAC38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021C")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xACAD18", Offset = "0xACAD18", VA = "0xACAD18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xACAD80", Offset = "0xACAD80", VA = "0xACAD80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021E")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xACADF4", Offset = "0xACADF4", VA = "0xACADF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021F")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0xACAE68", Offset = "0xACAE68", VA = "0xACAE68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xACAEDC", Offset = "0xACAEDC", VA = "0xACAEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xACAF50", Offset = "0xACAF50", VA = "0xACAF50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xACCCAC", Offset = "0xACCCAC", VA = "0xACCCAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xACAFC4", Offset = "0xACAFC4", VA = "0xACAFC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xACB1EC", Offset = "0xACB1EC", VA = "0xACB1EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xACAFC8", Offset = "0xACAFC8", VA = "0xACAFC8")]
		private void Init()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xACBE1C", Offset = "0xACBE1C", VA = "0xACBE1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xACB344", Offset = "0xACB344", VA = "0xACB344")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xACC448", Offset = "0xACC448", VA = "0xACC448")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xACC5C8", Offset = "0xACC5C8", VA = "0xACC5C8")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xACC764", Offset = "0xACC764", VA = "0xACC764")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xACC864", Offset = "0xACC864", VA = "0xACC864")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xACC8F4", Offset = "0xACC8F4", VA = "0xACC8F4")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xACB790", Offset = "0xACB790", VA = "0xACB790")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xACBE20", Offset = "0xACBE20", VA = "0xACBE20")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xACCDE0", Offset = "0xACCDE0", VA = "0xACCDE0")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xACCEE4", Offset = "0xACCEE4", VA = "0xACCEE4")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xACCFEC", Offset = "0xACCFEC", VA = "0xACCFEC")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xACCD14", Offset = "0xACCD14", VA = "0xACCD14")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xACD120", Offset = "0xACD120", VA = "0xACD120")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xACD1DC", Offset = "0xACD1DC", VA = "0xACD1DC")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xACD2FC", Offset = "0xACD2FC", VA = "0xACD2FC")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xACA94C", Offset = "0xACA94C", VA = "0xACA94C")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xACAAC4", Offset = "0xACAAC4", VA = "0xACAAC4")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xACD3B8", Offset = "0xACD3B8", VA = "0xACD3B8")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xACD484", Offset = "0xACD484", VA = "0xACD484")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xACD518", Offset = "0xACD518", VA = "0xACD518")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xACD5DC", Offset = "0xACD5DC", VA = "0xACD5DC")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xACD680", Offset = "0xACD680", VA = "0xACD680")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xACD73C", Offset = "0xACD73C", VA = "0xACD73C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xACE22C", Offset = "0xACE22C", VA = "0xACE22C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xACE8E8", Offset = "0xACE8E8", VA = "0xACE8E8")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xACEAC8", Offset = "0xACEAC8", VA = "0xACEAC8")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xACF604", Offset = "0xACF604", VA = "0xACF604")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xACD944", Offset = "0xACD944", VA = "0xACD944")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xACF724", Offset = "0xACF724", VA = "0xACF724")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xACF808", Offset = "0xACF808", VA = "0xACF808")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xACF908", Offset = "0xACF908", VA = "0xACF908")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xACFBC8", Offset = "0xACFBC8", VA = "0xACFBC8")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xACFD10", Offset = "0xACFD10", VA = "0xACFD10")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xACFE38", Offset = "0xACFE38", VA = "0xACFE38")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xACFF5C", Offset = "0xACFF5C", VA = "0xACFF5C")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xAD0034", Offset = "0xAD0034", VA = "0xAD0034")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xAD0168", Offset = "0xAD0168", VA = "0xAD0168")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xAD0554", Offset = "0xAD0554", VA = "0xAD0554")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001EBE")]
		None = -1,
		[Token(Token = "0x4001EBF")]
		Reserved,
		[Token(Token = "0x4001EC0")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200042E")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x9D0118", Offset = "0x9D0118", VA = "0x9D0118")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x9D00BC", Offset = "0x9D00BC", VA = "0x9D00BC")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200074E")]
		public enum FadeState
		{
			[Token(Token = "0x40030C3")]
			Null,
			[Token(Token = "0x40030C4")]
			FadingIn,
			[Token(Token = "0x40030C5")]
			FadingOut,
			[Token(Token = "0x40030C6")]
			Ducking
		}

		[Token(Token = "0x200074F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DFB8", Offset = "0x85DFB8")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40030CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x40030CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x40030CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000505")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F18")]
				[Address(RVA = "0x9D11CC", Offset = "0x9D11CC", VA = "0x9D11CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000506")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F1A")]
				[Address(RVA = "0x9D1234", Offset = "0x9D1234", VA = "0x9D1234", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F15")]
			[Address(RVA = "0x9D0C84", Offset = "0x9D0C84", VA = "0x9D0C84")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6002F16")]
			[Address(RVA = "0x9D10DC", Offset = "0x9D10DC", VA = "0x9D10DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F17")]
			[Address(RVA = "0x9D10E0", Offset = "0x9D10E0", VA = "0x9D10E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F19")]
			[Address(RVA = "0x9D11D4", Offset = "0x9D11D4", VA = "0x9D11D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DFC8", Offset = "0x85DFC8")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40030D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x40030D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40030D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x40030D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x40030D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40030D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000507")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F1E")]
				[Address(RVA = "0x9D1680", Offset = "0x9D1680", VA = "0x9D1680", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000508")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F20")]
				[Address(RVA = "0x9D16E8", Offset = "0x9D16E8", VA = "0x9D16E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F1B")]
			[Address(RVA = "0x9D106C", Offset = "0x9D106C", VA = "0x9D106C")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6002F1C")]
			[Address(RVA = "0x9D1514", Offset = "0x9D1514", VA = "0x9D1514", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F1D")]
			[Address(RVA = "0x9D1518", Offset = "0x9D1518", VA = "0x9D1518", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F1F")]
			[Address(RVA = "0x9D1688", Offset = "0x9D1688", VA = "0x9D1688", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000751")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DFD8", Offset = "0x85DFD8")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x40030D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x40030DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x40030DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x40030DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x40030DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40030DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40030DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40030E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40030E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000509")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F24")]
				[Address(RVA = "0x9D14A4", Offset = "0x9D14A4", VA = "0x9D14A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F26")]
				[Address(RVA = "0x9D150C", Offset = "0x9D150C", VA = "0x9D150C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F21")]
			[Address(RVA = "0x9D1098", Offset = "0x9D1098", VA = "0x9D1098")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002F22")]
			[Address(RVA = "0x9D123C", Offset = "0x9D123C", VA = "0x9D123C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F23")]
			[Address(RVA = "0x9D1240", Offset = "0x9D1240", VA = "0x9D1240", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F25")]
			[Address(RVA = "0x9D14AC", Offset = "0x9D14AC", VA = "0x9D14AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000223")]
		public float volume
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x9D01B8", Offset = "0x9D01B8", VA = "0x9D01B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x9D01D4", Offset = "0x9D01D4", VA = "0x9D01D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public float pitch
		{
			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0x9D01F0", Offset = "0x9D01F0", VA = "0x9D01F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x9D020C", Offset = "0x9D020C", VA = "0x9D020C")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public AudioClip clip
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0x9D0228", Offset = "0x9D0228", VA = "0x9D0228")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E30")]
			[Address(RVA = "0x9D0244", Offset = "0x9D0244", VA = "0x9D0244")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public float time
		{
			[Token(Token = "0x6001E31")]
			[Address(RVA = "0x9D0260", Offset = "0x9D0260", VA = "0x9D0260")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x9D027C", Offset = "0x9D027C", VA = "0x9D027C")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public float length
		{
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x9D0298", Offset = "0x9D0298", VA = "0x9D0298")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000228")]
		public bool loop
		{
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x9D0350", Offset = "0x9D0350", VA = "0x9D0350")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x9D036C", Offset = "0x9D036C", VA = "0x9D036C")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public bool mute
		{
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x9D038C", Offset = "0x9D038C", VA = "0x9D038C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x9D03A8", Offset = "0x9D03A8", VA = "0x9D03A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x9D03C8", Offset = "0x9D03C8", VA = "0x9D03C8")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0x9D03E4", Offset = "0x9D03E4", VA = "0x9D03E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public bool isPlaying
		{
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0x9D0400", Offset = "0x9D0400", VA = "0x9D0400")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x9D041C", Offset = "0x9D041C", VA = "0x9D041C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x9D059C", Offset = "0x9D059C", VA = "0x9D059C")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x9D0640", Offset = "0x9D0640", VA = "0x9D0640")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x9D0648", Offset = "0x9D0648", VA = "0x9D0648")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x9D0650", Offset = "0x9D0650", VA = "0x9D0650")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x9D0658", Offset = "0x9D0658", VA = "0x9D0658")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x9D0660", Offset = "0x9D0660", VA = "0x9D0660")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x9D0708", Offset = "0x9D0708", VA = "0x9D0708")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x9D0774", Offset = "0x9D0774", VA = "0x9D0774")]
		public void Play()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x9D07D4", Offset = "0x9D07D4", VA = "0x9D07D4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x9D080C", Offset = "0x9D080C", VA = "0x9D080C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x9D097C", Offset = "0x9D097C", VA = "0x9D097C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x9D09D4", Offset = "0x9D09D4", VA = "0x9D09D4")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x9D0AD0", Offset = "0x9D0AD0", VA = "0x9D0AD0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x9D0B88", Offset = "0x9D0B88", VA = "0x9D0B88")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x9D0BC8", Offset = "0x9D0BC8", VA = "0x9D0BC8")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x9D0BF4", Offset = "0x9D0BF4", VA = "0x9D0BF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87461C", Offset = "0x87461C")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x9D0CB0", Offset = "0x9D0CB0", VA = "0x9D0CB0")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x9D0D9C", Offset = "0x9D0D9C", VA = "0x9D0D9C")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x9D0EC0", Offset = "0x9D0EC0", VA = "0x9D0EC0")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x9D0F38", Offset = "0x9D0F38", VA = "0x9D0F38")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x9D0FD0", Offset = "0x9D0FD0", VA = "0x9D0FD0")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x9D0D18", Offset = "0x9D0D18", VA = "0x9D0D18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874680", Offset = "0x874680")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x9D0E18", Offset = "0x9D0E18", VA = "0x9D0E18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8746E4", Offset = "0x8746E4")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x9D10C4", Offset = "0x9D10C4", VA = "0x9D10C4")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001ED7")]
		Random,
		[Token(Token = "0x4001ED8")]
		Sequential
	}
	[Token(Token = "0x2000432")]
	public enum FreqHint
	{
		[Token(Token = "0x4001EDA")]
		None,
		[Token(Token = "0x4001EDB")]
		Wide,
		[Token(Token = "0x4001EDC")]
		Narrow
	}
	[Token(Token = "0x2000433")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001EDE")]
		VeryLow = -2,
		[Token(Token = "0x4001EDF")]
		Low,
		[Token(Token = "0x4001EE0")]
		Default,
		[Token(Token = "0x4001EE1")]
		High,
		[Token(Token = "0x4001EE2")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000434")]
	public class OSPProps
	{
		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8685E4", Offset = "0x8685E4")]
		public bool enableSpatialization;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86861C", Offset = "0x86861C")]
		public bool useFastOverride;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868654", Offset = "0x868654")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868654", Offset = "0x868654")]
		public float gain;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8686A8", Offset = "0x8686A8")]
		public bool enableInvSquare;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8686E0", Offset = "0x8686E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8686E0", Offset = "0x8686E0")]
		public float volumetric;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868738", Offset = "0x868738")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x868738", Offset = "0x868738")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x9D0128", Offset = "0x9D0128", VA = "0x9D0128")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000435")]
	public class SoundFX
	{
		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868798", Offset = "0x868798")]
		public string name;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8687D0", Offset = "0x8687D0")]
		public SoundFXNext playback;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868808", Offset = "0x868808")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868808", Offset = "0x868808")]
		public float volume;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86885C", Offset = "0x86885C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x86885C", Offset = "0x86885C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8688B8", Offset = "0x8688B8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8688B8", Offset = "0x8688B8")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868918", Offset = "0x868918")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868950", Offset = "0x868950")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868988", Offset = "0x868988")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8689C0", Offset = "0x8689C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8689C0", Offset = "0x8689C0")]
		public float spread;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868A18", Offset = "0x868A18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868A18", Offset = "0x868A18")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868A6C", Offset = "0x868A6C")]
		public SoundPriority priority;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868AA4", Offset = "0x868AA4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x868AA4", Offset = "0x868AA4")]
		public Vector2 delay;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868B00", Offset = "0x868B00")]
		public bool looping;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x868B38", Offset = "0x868B38")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700022C")]
		public int Length
		{
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x9D1BD8", Offset = "0x9D1BD8", VA = "0x9D1BD8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022D")]
		public bool IsValid
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x9D1BF4", Offset = "0x9D1BF4", VA = "0x9D1BF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022E")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x9D1C98", Offset = "0x9D1C98", VA = "0x9D1C98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x9D1CA0", Offset = "0x9D1CA0", VA = "0x9D1CA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x9D1CA8", Offset = "0x9D1CA8", VA = "0x9D1CA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000230")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x9D1CB4", Offset = "0x9D1CB4", VA = "0x9D1CB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x9D16F0", Offset = "0x9D16F0", VA = "0x9D16F0")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x9D1CCC", Offset = "0x9D1CCC", VA = "0x9D1CCC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x9D1D9C", Offset = "0x9D1D9C", VA = "0x9D1D9C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x9D1E3C", Offset = "0x9D1E3C", VA = "0x9D1E3C")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x9D1E84", Offset = "0x9D1E84", VA = "0x9D1E84")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x9D1F80", Offset = "0x9D1F80", VA = "0x9D1F80")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x9D1F8C", Offset = "0x9D1F8C", VA = "0x9D1F8C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x9D206C", Offset = "0x9D206C", VA = "0x9D206C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x9D2184", Offset = "0x9D2184", VA = "0x9D2184")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x9D2214", Offset = "0x9D2214", VA = "0x9D2214")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x9D22AC", Offset = "0x9D22AC", VA = "0x9D22AC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x9D233C", Offset = "0x9D233C", VA = "0x9D233C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x9D23CC", Offset = "0x9D23CC", VA = "0x9D23CC")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000436")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000231")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x9D2448", Offset = "0x9D2448", VA = "0x9D2448")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public string name
		{
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x9D2544", Offset = "0x9D2544", VA = "0x9D2544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x9D254C", Offset = "0x9D254C", VA = "0x9D254C")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public int Length
		{
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x9D2554", Offset = "0x9D2554", VA = "0x9D2554")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000234")]
		public bool IsValid
		{
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x9D2598", Offset = "0x9D2598", VA = "0x9D2598")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x9D2478", Offset = "0x9D2478", VA = "0x9D2478")]
		private void Init()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x9D25D0", Offset = "0x9D25D0", VA = "0x9D25D0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x9D2608", Offset = "0x9D2608", VA = "0x9D2608")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x9D2648", Offset = "0x9D2648", VA = "0x9D2648")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x9D2690", Offset = "0x9D2690", VA = "0x9D2690")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x9D2710", Offset = "0x9D2710", VA = "0x9D2710")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x9D2750", Offset = "0x9D2750", VA = "0x9D2750")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x9D27A0", Offset = "0x9D27A0", VA = "0x9D27A0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x9D27D8", Offset = "0x9D27D8", VA = "0x9D27D8")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x9D2818", Offset = "0x9D2818", VA = "0x9D2818")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x9D2850", Offset = "0x9D2850", VA = "0x9D2850")]
		public SoundFXRef()
		{
		}
	}
}
namespace MeshBrush
{
	[Token(Token = "0x2000437")]
	public class CombineUtility
	{
		[Token(Token = "0x2000752")]
		public struct MeshInstance
		{
			[Token(Token = "0x40030E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Mesh mesh;

			[Token(Token = "0x40030E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int subMeshIndex;

			[Token(Token = "0x40030E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Matrix4x4 transform;
		}

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int vertexCount;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int triangleCount;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int stripCount;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int curStripCount;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector3[] vertices;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3[] normals;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector4[] tangents;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector2[] uv;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector2[] uv1;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Color[] colors;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static int[] triangles;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static int[] strip;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static int offset;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static int triangleOffset;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static int stripOffset;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private static int vertexOffset;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Matrix4x4 invTranspose;

		[Token(Token = "0x4001F10")]
		public const string combinedMeshName = "Combined Mesh";

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private static Vector4 p4;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static Vector3 p;

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xA22224", Offset = "0xA22224", VA = "0xA22224")]
		public static Mesh Combine(MeshInstance[] combines, bool generateStrips)
		{
			return null;
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xA233DC", Offset = "0xA233DC", VA = "0xA233DC")]
		private static void Copy(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xA234BC", Offset = "0xA234BC", VA = "0xA234BC")]
		private static void CopyNormal(int vertexcount, Vector3[] src, Vector3[] dst, ref int offset, Matrix4x4 transform)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xA2377C", Offset = "0xA2377C", VA = "0xA2377C")]
		private static void Copy(int vertexcount, Vector2[] src, Vector2[] dst, ref int offset)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xA23800", Offset = "0xA23800", VA = "0xA23800")]
		private static void CopyColors(int vertexcount, Color[] src, Color[] dst, ref int offset)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xA235C0", Offset = "0xA235C0", VA = "0xA235C0")]
		private static void CopyTangents(int vertexcount, Vector4[] src, Vector4[] dst, ref int offset, Matrix4x4 transform)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xA23884", Offset = "0xA23884", VA = "0xA23884")]
		public CombineUtility()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public class MeshBrushParent : MonoBehaviour
	{
		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform[] meshes;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter[] meshFilters;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 myTransform;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Hashtable materialToMesh;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshFilter filter;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Renderer curRenderer;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material[] materials;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CombineUtility.MeshInstance instance;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CombineUtility.MeshInstance[] instances;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ArrayList objects;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ArrayList elements;

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xA23890", Offset = "0xA23890", VA = "0xA23890")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xA238F8", Offset = "0xA238F8", VA = "0xA238F8")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xA23968", Offset = "0xA23968", VA = "0xA23968")]
		public MeshBrushParent()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class RuntimeAPI : MonoBehaviour
	{
		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform thisTransform;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868B70", Offset = "0x868B70")]
		private GameObject[] <setOfMeshesToPaint>k__BackingField;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject brushObj;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform brushTransform;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RaycastHit hit;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject paintedMesh;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform paintedMeshTransform;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject holder;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform holderTransform;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ushort _amount;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _delayBetweenPaintStrokes;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _brushRadius;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868B80", Offset = "0x868B80")]
		private float <meshOffset>k__BackingField;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868B90", Offset = "0x868B90")]
		private float <scattering>k__BackingField;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float scatteringInsetThreshold;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868BA0", Offset = "0x868BA0")]
		private bool <yAxisIsTangent>k__BackingField;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _slopeInfluence;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868BB0", Offset = "0x868BB0")]
		private bool <activeSlopeFilter>k__BackingField;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _maxSlopeFilterAngle;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float slopeAngle;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868BC0", Offset = "0x868BC0")]
		private bool <inverseSlopeFilter>k__BackingField;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868BD0", Offset = "0x868BD0")]
		private bool <manualRefVecSampling>k__BackingField;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868BE0", Offset = "0x868BE0")]
		private Vector3 <sampledSlopeRefVector>k__BackingField;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868BF0", Offset = "0x868BF0")]
		private float <randomRotation>k__BackingField;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float randomWidth;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float randomHeight;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector4 _randomScale;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x868C00", Offset = "0x868C00")]
		private Vector3 <additiveScale>k__BackingField;

		[Token(Token = "0x17000235")]
		public GameObject[] setOfMeshesToPaint
		{
			[Token(Token = "0x6001E83")]
			[Address(RVA = "0xA23970", Offset = "0xA23970", VA = "0xA23970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874748", Offset = "0x874748")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E84")]
			[Address(RVA = "0xA23978", Offset = "0xA23978", VA = "0xA23978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874758", Offset = "0x874758")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public ushort amount
		{
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0xA23980", Offset = "0xA23980", VA = "0xA23980")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xA23988", Offset = "0xA23988", VA = "0xA23988")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public float delayBetweenPaintStrokes
		{
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0xA23A0C", Offset = "0xA23A0C", VA = "0xA23A0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E88")]
			[Address(RVA = "0xA23A14", Offset = "0xA23A14", VA = "0xA23A14")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public float brushRadius
		{
			[Token(Token = "0x6001E89")]
			[Address(RVA = "0xA23A9C", Offset = "0xA23A9C", VA = "0xA23A9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0xA23AA4", Offset = "0xA23AA4", VA = "0xA23AA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public float meshOffset
		{
			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0xA23AB8", Offset = "0xA23AB8", VA = "0xA23AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874768", Offset = "0x874768")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0xA23AC0", Offset = "0xA23AC0", VA = "0xA23AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874778", Offset = "0x874778")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public float scattering
		{
			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0xA23AC8", Offset = "0xA23AC8", VA = "0xA23AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874788", Offset = "0x874788")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0xA23AD0", Offset = "0xA23AD0", VA = "0xA23AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874798", Offset = "0x874798")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public bool yAxisIsTangent
		{
			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0xA23AD8", Offset = "0xA23AD8", VA = "0xA23AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8747A8", Offset = "0x8747A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0xA23AE0", Offset = "0xA23AE0", VA = "0xA23AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8747B8", Offset = "0x8747B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public float slopeInfluence
		{
			[Token(Token = "0x6001E91")]
			[Address(RVA = "0xA23AEC", Offset = "0xA23AEC", VA = "0xA23AEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E92")]
			[Address(RVA = "0xA23AF4", Offset = "0xA23AF4", VA = "0xA23AF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public bool activeSlopeFilter
		{
			[Token(Token = "0x6001E93")]
			[Address(RVA = "0xA23B7C", Offset = "0xA23B7C", VA = "0xA23B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8747C8", Offset = "0x8747C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E94")]
			[Address(RVA = "0xA23B84", Offset = "0xA23B84", VA = "0xA23B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8747D8", Offset = "0x8747D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public float maxSlopeFilterAngle
		{
			[Token(Token = "0x6001E95")]
			[Address(RVA = "0xA23B90", Offset = "0xA23B90", VA = "0xA23B90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E96")]
			[Address(RVA = "0xA23B98", Offset = "0xA23B98", VA = "0xA23B98")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public bool inverseSlopeFilter
		{
			[Token(Token = "0x6001E97")]
			[Address(RVA = "0xA23C20", Offset = "0xA23C20", VA = "0xA23C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8747E8", Offset = "0x8747E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xA23C28", Offset = "0xA23C28", VA = "0xA23C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8747F8", Offset = "0x8747F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public bool manualRefVecSampling
		{
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0xA23C34", Offset = "0xA23C34", VA = "0xA23C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874808", Offset = "0x874808")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xA23C3C", Offset = "0xA23C3C", VA = "0xA23C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874818", Offset = "0x874818")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public Vector3 sampledSlopeRefVector
		{
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xA23C48", Offset = "0xA23C48", VA = "0xA23C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874828", Offset = "0x874828")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xA23C54", Offset = "0xA23C54", VA = "0xA23C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874838", Offset = "0x874838")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public float randomRotation
		{
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xA23C60", Offset = "0xA23C60", VA = "0xA23C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874848", Offset = "0x874848")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xA23C68", Offset = "0xA23C68", VA = "0xA23C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874858", Offset = "0x874858")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public Vector4 randomScale
		{
			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0xA23C70", Offset = "0xA23C70", VA = "0xA23C70")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xA23C7C", Offset = "0xA23C7C", VA = "0xA23C7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public Vector3 additiveScale
		{
			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0xA23D98", Offset = "0xA23D98", VA = "0xA23D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874868", Offset = "0x874868")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xA23DA4", Offset = "0xA23DA4", VA = "0xA23DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874878", Offset = "0x874878")]
			set
			{
			}
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xA23DB0", Offset = "0xA23DB0", VA = "0xA23DB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xA23DE0", Offset = "0xA23DE0", VA = "0xA23DE0")]
		public void Paint_SingleMesh(RaycastHit paintHit)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xA245AC", Offset = "0xA245AC", VA = "0xA245AC")]
		public void Paint_MultipleMeshes(RaycastHit paintHit)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xA24314", Offset = "0xA24314", VA = "0xA24314")]
		private void ApplyRandomScale(GameObject sMesh)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xA24DAC", Offset = "0xA24DAC", VA = "0xA24DAC")]
		private void AddConstantScale(GameObject sMesh)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xA243AC", Offset = "0xA243AC", VA = "0xA243AC")]
		private void ApplyRandomRotation(GameObject rMesh)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xA244B0", Offset = "0xA244B0", VA = "0xA244B0")]
		private void ApplyMeshOffset(GameObject oMesh, Vector3 offsetDirection)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xA24F20", Offset = "0xA24F20", VA = "0xA24F20")]
		public RuntimeAPI()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class SaveCombinedMesh : MonoBehaviour
	{
		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xA24F9C", Offset = "0xA24F9C", VA = "0xA24F9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xA25004", Offset = "0xA25004", VA = "0xA25004")]
		public SaveCombinedMesh()
		{
		}
	}
}
namespace CPA
{
	[Token(Token = "0x200043B")]
	public class UnityVersionWrapper
	{
		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xBED394", Offset = "0xBED394", VA = "0xBED394")]
		public UnityVersionWrapper()
		{
		}
	}
}
namespace BeautifyEffect
{
	[Token(Token = "0x200043C")]
	public class CameraAnimator : MonoBehaviour
	{
		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xBC6F28", Offset = "0xBC6F28", VA = "0xBC6F28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xBC6F9C", Offset = "0xBC6F9C", VA = "0xBC6F9C")]
		public CameraAnimator()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class Demo1 : MonoBehaviour
	{
		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float deltaTime;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool benchmarkEnabled;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle style;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rect rect;

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xBC6FA4", Offset = "0xBC6FA4", VA = "0xBC6FA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xBC70D4", Offset = "0xBC70D4", VA = "0xBC70D4")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xBC7184", Offset = "0xBC7184", VA = "0xBC7184")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xBC7380", Offset = "0xBC7380", VA = "0xBC7380")]
		public Demo1()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class Demo2 : MonoBehaviour
	{
		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int demoMode;

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xBC7388", Offset = "0xBC7388", VA = "0xBC7388")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xBC7718", Offset = "0xBC7718", VA = "0xBC7718")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xBC738C", Offset = "0xBC738C", VA = "0xBC738C")]
		private void UpdateDemoMode()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xBC7788", Offset = "0xBC7788", VA = "0xBC7788")]
		public Demo2()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class Demo4 : MonoBehaviour
	{
		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xBC7790", Offset = "0xBC7790", VA = "0xBC7790")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xBC787C", Offset = "0xBC787C", VA = "0xBC787C")]
		public Demo4()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class FreeCameraMove : MonoBehaviour
	{
		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion originalRotation;

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xBC7884", Offset = "0xBC7884", VA = "0xBC7884")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xBC78D8", Offset = "0xBC78D8", VA = "0xBC78D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xBC8380", Offset = "0xBC8380", VA = "0xBC8380")]
		public FreeCameraMove()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class SphereAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xBC8464", Offset = "0xBC8464", VA = "0xBC8464")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xBC84BC", Offset = "0xBC84BC", VA = "0xBC84BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xBC85D0", Offset = "0xBC85D0", VA = "0xBC85D0")]
		public SphereAnimator()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public delegate float OnBeforeFocusEvent(float currentFocusDistance);
	[Token(Token = "0x2000443")]
	public enum BEAUTIFY_QUALITY
	{
		[Token(Token = "0x4001F49")]
		BestQuality,
		[Token(Token = "0x4001F4A")]
		BestPerformance,
		[Token(Token = "0x4001F4B")]
		Basic
	}
	[Token(Token = "0x2000444")]
	public enum BEAUTIFY_PRESET
	{
		[Token(Token = "0x4001F4D")]
		Soft = 10,
		[Token(Token = "0x4001F4E")]
		Medium = 20,
		[Token(Token = "0x4001F4F")]
		Strong = 30,
		[Token(Token = "0x4001F50")]
		Exaggerated = 40,
		[Token(Token = "0x4001F51")]
		Custom = 999
	}
	[Token(Token = "0x2000445")]
	public enum BEAUTIFY_TMO
	{
		[Token(Token = "0x4001F53")]
		Linear = 0,
		[Token(Token = "0x4001F54")]
		ACES = 10
	}
	[Token(Token = "0x2000446")]
	public enum BEAUTIFY_PRERENDER_EVENT
	{
		[Token(Token = "0x4001F56")]
		OnPreCull,
		[Token(Token = "0x4001F57")]
		OnPreRender
	}
	[Token(Token = "0x2000447")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85C028", Offset = "0x85C028")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85C028", Offset = "0x85C028")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85C028", Offset = "0x85C028")]
	[ImageEffectAllowedInSceneView]
	public class Beautify : MonoBehaviour
	{
		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DFE8", Offset = "0x85DFE8")]
		private sealed class <DoBlink>d__747 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x40030E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Beautify <>4__this;

			[Token(Token = "0x40030E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float maxValue;

			[Token(Token = "0x40030EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <start>5__2;

			[Token(Token = "0x40030EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__3;

			[Token(Token = "0x40030EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private WaitForEndOfFrame <w>5__4;

			[Token(Token = "0x1700050B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F2A")]
				[Address(RVA = "0xBC65F0", Offset = "0xBC65F0", VA = "0xBC65F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F2C")]
				[Address(RVA = "0xBC6658", Offset = "0xBC6658", VA = "0xBC6658", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F27")]
			[Address(RVA = "0xBC6034", Offset = "0xBC6034", VA = "0xBC6034")]
			[DebuggerHidden]
			public <DoBlink>d__747(int <>1__state)
			{
			}

			[Token(Token = "0x6002F28")]
			[Address(RVA = "0xBC6458", Offset = "0xBC6458", VA = "0xBC6458", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F29")]
			[Address(RVA = "0xBC645C", Offset = "0xBC645C", VA = "0xBC645C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F2B")]
			[Address(RVA = "0xBC65F8", Offset = "0xBC65F8", VA = "0xBC65F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BEAUTIFY_PRESET _preset;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private BEAUTIFY_QUALITY _quality;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BeautifyProfile _profile;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _syncWithProfile;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _compareMode;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868C60", Offset = "0x868C60")]
		private float _compareLineAngle;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868CA8", Offset = "0x868CA8")]
		private float _compareLineWidth;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868CF0", Offset = "0x868CF0")]
		private float _dither;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868D34", Offset = "0x868D34")]
		private float _ditherDepth;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868D74", Offset = "0x868D74")]
		private float _sharpenMinDepth;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868DB4", Offset = "0x868DB4")]
		private float _sharpenMaxDepth;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868DF8", Offset = "0x868DF8")]
		private float _sharpenMinMaxDepthFallOff;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868E38", Offset = "0x868E38")]
		private float _sharpen;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868E78", Offset = "0x868E78")]
		private float _sharpenDepthThreshold;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _tintColor;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868ECC", Offset = "0x868ECC")]
		private float _sharpenRelaxation;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868F10", Offset = "0x868F10")]
		private float _sharpenClamp;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868F50", Offset = "0x868F50")]
		private float _sharpenMotionSensibility;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868F90", Offset = "0x868F90")]
		private float _saturate;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x868FD0", Offset = "0x868FD0")]
		private float _contrast;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _brightness;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869020", Offset = "0x869020")]
		private float _daltonize;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private bool _vignetting;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color _vignettingColor;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869080", Offset = "0x869080")]
		private float _vignettingFade;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _vignettingCircularShape;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _vignettingAspectRatio;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8690E0", Offset = "0x8690E0")]
		private float _vignettingBlink;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Texture2D _vignettingMask;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _frame;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private Color _frameColor;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Texture2D _frameMask;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _lut;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869170", Offset = "0x869170")]
		private float _lutIntensity;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Texture2D _lutTexture;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private bool _nightVision;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private Color _nightVisionColor;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _outline;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color _outlineColor;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private bool _thermalVision;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[SerializeField]
		private bool _lensDirt;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869220", Offset = "0x869220")]
		private float _lensDirtThreshold;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869260", Offset = "0x869260")]
		private float _lensDirtIntensity;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Texture2D _lensDirtTexture;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private bool _bloom;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private LayerMask _bloomCullingMask;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8692D0", Offset = "0x8692D0")]
		private float _bloomLayerMaskDownsampling;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869310", Offset = "0x869310")]
		private float _bloomIntensity;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float _bloomMaxBrightness;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869360", Offset = "0x869360")]
		private float _bloomBoost0;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8693A0", Offset = "0x8693A0")]
		private float _bloomBoost1;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8693E0", Offset = "0x8693E0")]
		private float _bloomBoost2;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869420", Offset = "0x869420")]
		private float _bloomBoost3;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869460", Offset = "0x869460")]
		private float _bloomBoost4;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8694A0", Offset = "0x8694A0")]
		private float _bloomBoost5;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private bool _bloomAntiflicker;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		[SerializeField]
		private bool _bloomUltra;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869500", Offset = "0x869500")]
		private int _bloomUltraResolution;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869540", Offset = "0x869540")]
		private float _bloomThreshold;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private bool _bloomCustomize;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		[SerializeField]
		private bool _bloomDebug;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8695A0", Offset = "0x8695A0")]
		private float _bloomWeight0;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8695E0", Offset = "0x8695E0")]
		private float _bloomWeight1;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869620", Offset = "0x869620")]
		private float _bloomWeight2;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869660", Offset = "0x869660")]
		private float _bloomWeight3;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8696A0", Offset = "0x8696A0")]
		private float _bloomWeight4;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8696E0", Offset = "0x8696E0")]
		private float _bloomWeight5;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		private bool _bloomBlur;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		[SerializeField]
		private bool _bloomQuickerBlur;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869740", Offset = "0x869740")]
		private float _bloomDepthAtten;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869780", Offset = "0x869780")]
		private float _bloomLayerZBias;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private BEAUTIFY_PRERENDER_EVENT _preRenderCameraEvent;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private bool _anamorphicFlares;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8697E0", Offset = "0x8697E0")]
		private float _anamorphicFlaresIntensity;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		private bool _anamorphicFlaresAntiflicker;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		[SerializeField]
		private bool _anamorphicFlaresUltra;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869840", Offset = "0x869840")]
		private int _anamorphicUltraResolution;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869880", Offset = "0x869880")]
		private float _anamorphicFlaresThreshold;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8698C0", Offset = "0x8698C0")]
		private float _anamorphicFlaresSpread;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private bool _anamorphicFlaresVertical;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Color _anamorphicFlaresTint;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private bool _anamorphicFlaresBlur;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		[SerializeField]
		private bool _depthOfField;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
		[SerializeField]
		private bool _depthOfFieldTransparencySupport;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[SerializeField]
		private LayerMask _depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Transform _depthOfFieldTargetFocus;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private bool _depthOfFieldDebug;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		[SerializeField]
		private bool _depthOfFieldAutofocus;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[SerializeField]
		private Vector2 _depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[SerializeField]
		private float _depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private float _depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[SerializeField]
		private LayerMask _depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private LayerMask _depthOfFieldExclusionLayerMask;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8699E4", Offset = "0x8699E4")]
		private float _depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869A24", Offset = "0x869A24")]
		private float _depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869A64", Offset = "0x869A64")]
		private float _depthOfFieldExclusionBias;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869AA8", Offset = "0x869AA8")]
		private float _depthOfFieldDistance;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869AEC", Offset = "0x869AEC")]
		private float _depthOfFieldFocusSpeed;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869B30", Offset = "0x869B30")]
		private int _depthOfFieldDownsampling;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869B70", Offset = "0x869B70")]
		private int _depthOfFieldMaxSamples;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869BB0", Offset = "0x869BB0")]
		private float _depthOfFieldFocalLength;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[SerializeField]
		private float _depthOfFieldAperture;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlur;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		[SerializeField]
		private bool _depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		private float _depthOfFieldForegroundDistance;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private bool _depthOfFieldBokeh;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869C44", Offset = "0x869C44")]
		private float _depthOfFieldBokehThreshold;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869C84", Offset = "0x869C84")]
		private float _depthOfFieldBokehIntensity;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		private float _depthOfFieldMaxBrightness;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869CD4", Offset = "0x869CD4")]
		private float _depthOfFieldMaxDistance;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private FilterMode _depthOfFieldFilterMode;

		[NonSerialized]
		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public OnBeforeFocusEvent OnBeforeFocus;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private bool _eyeAdaptation;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869D34", Offset = "0x869D34")]
		private float _eyeAdaptationMinExposure;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869D74", Offset = "0x869D74")]
		private float _eyeAdaptationMaxExposure;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869DB8", Offset = "0x869DB8")]
		private float _eyeAdaptationSpeedToLight;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869DF8", Offset = "0x869DF8")]
		private float _eyeAdaptationSpeedToDark;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		private bool _purkinje;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869E48", Offset = "0x869E48")]
		private float _purkinjeAmount;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869E88", Offset = "0x869E88")]
		private float _purkinjeLuminanceThreshold;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private BEAUTIFY_TMO _tonemap;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		private bool _sunFlares;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private Transform _sun;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private LayerMask _sunFlaresLayerMask;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869F08", Offset = "0x869F08")]
		private float _sunFlaresIntensity;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869F48", Offset = "0x869F48")]
		private float _sunFlaresSolarWindSpeed;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[SerializeField]
		private Color _sunFlaresTint;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869F98", Offset = "0x869F98")]
		private int _sunFlaresDownsampling;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x869FD8", Offset = "0x869FD8")]
		private float _sunFlaresSunIntensity;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A018", Offset = "0x86A018")]
		private float _sunFlaresSunDiskSize;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A058", Offset = "0x86A058")]
		private float _sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A098", Offset = "0x86A098")]
		private float _sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A0D8", Offset = "0x86A0D8")]
		private float _sunFlaresCoronaRays1Length;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A11C", Offset = "0x86A11C")]
		private int _sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A15C", Offset = "0x86A15C")]
		private float _sunFlaresCoronaRays1Spread;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A1A0", Offset = "0x86A1A0")]
		private float _sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A1E4", Offset = "0x86A1E4")]
		private float _sunFlaresCoronaRays2Length;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A228", Offset = "0x86A228")]
		private int _sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A268", Offset = "0x86A268")]
		private float _sunFlaresCoronaRays2Spread;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A2AC", Offset = "0x86A2AC")]
		private float _sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A2F0", Offset = "0x86A2F0")]
		private float _sunFlaresGhosts1Size;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A330", Offset = "0x86A330")]
		private float _sunFlaresGhosts1Offset;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A370", Offset = "0x86A370")]
		private float _sunFlaresGhosts1Brightness;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A3B0", Offset = "0x86A3B0")]
		private float _sunFlaresGhosts2Size;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A3F0", Offset = "0x86A3F0")]
		private float _sunFlaresGhosts2Offset;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A430", Offset = "0x86A430")]
		private float _sunFlaresGhosts2Brightness;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A470", Offset = "0x86A470")]
		private float _sunFlaresGhosts3Size;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A4B0", Offset = "0x86A4B0")]
		private float _sunFlaresGhosts3Brightness;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A4F0", Offset = "0x86A4F0")]
		private float _sunFlaresGhosts3Offset;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A530", Offset = "0x86A530")]
		private float _sunFlaresGhosts4Size;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A570", Offset = "0x86A570")]
		private float _sunFlaresGhosts4Offset;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A5B0", Offset = "0x86A5B0")]
		private float _sunFlaresGhosts4Brightness;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A5F0", Offset = "0x86A5F0")]
		private float _sunFlaresHaloOffset;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A630", Offset = "0x86A630")]
		private float _sunFlaresHaloAmplitude;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A674", Offset = "0x86A674")]
		private float _sunFlaresHaloIntensity;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		[SerializeField]
		private bool _sunFlaresRotationDeadZone;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DD")]
		[SerializeField]
		private bool _blur;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A6D4", Offset = "0x86A6D4")]
		private float _blurIntensity;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A714", Offset = "0x86A714")]
		private int _downscale;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A754", Offset = "0x86A754")]
		private int _pixelateAmount;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		[SerializeField]
		private bool _pixelateDownscale;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A7A8", Offset = "0x86A7A8")]
		private float _antialiasStrength;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A7E8", Offset = "0x86A7E8")]
		private float _antialiasDepthThreshold;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public bool isDirty;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Beautify _beautify;

		[Token(Token = "0x4001FFD")]
		public const string SKW_BLOOM = "BEAUTIFY_BLOOM";

		[Token(Token = "0x4001FFE")]
		public const string SKW_LUT = "BEAUTIFY_LUT";

		[Token(Token = "0x4001FFF")]
		public const string SKW_NIGHT_VISION = "BEAUTIFY_NIGHT_VISION";

		[Token(Token = "0x4002000")]
		public const string SKW_THERMAL_VISION = "BEAUTIFY_THERMAL_VISION";

		[Token(Token = "0x4002001")]
		public const string SKW_OUTLINE = "BEAUTIFY_OUTLINE";

		[Token(Token = "0x4002002")]
		public const string SKW_FRAME = "BEAUTIFY_FRAME";

		[Token(Token = "0x4002003")]
		public const string SKW_FRAME_MASK = "BEAUTIFY_FRAME_MASK";

		[Token(Token = "0x4002004")]
		public const string SKW_DALTONIZE = "BEAUTIFY_DALTONIZE";

		[Token(Token = "0x4002005")]
		public const string SKW_DIRT = "BEAUTIFY_DIRT";

		[Token(Token = "0x4002006")]
		public const string SKW_VIGNETTING = "BEAUTIFY_VIGNETTING";

		[Token(Token = "0x4002007")]
		public const string SKW_VIGNETTING_MASK = "BEAUTIFY_VIGNETTING_MASK";

		[Token(Token = "0x4002008")]
		public const string SKW_DEPTH_OF_FIELD = "BEAUTIFY_DEPTH_OF_FIELD";

		[Token(Token = "0x4002009")]
		public const string SKW_DEPTH_OF_FIELD_TRANSPARENT = "BEAUTIFY_DEPTH_OF_FIELD_TRANSPARENT";

		[Token(Token = "0x400200A")]
		public const string SKW_EYE_ADAPTATION = "BEAUTIFY_EYE_ADAPTATION";

		[Token(Token = "0x400200B")]
		public const string SKW_TONEMAP_ACES = "BEAUTIFY_TONEMAP_ACES";

		[Token(Token = "0x400200C")]
		public const string SKW_PURKINJE = "BEAUTIFY_PURKINJE";

		[Token(Token = "0x400200D")]
		public const string SKW_BLOOM_USE_DEPTH = "BEAUTIFY_BLOOM_USE_DEPTH";

		[Token(Token = "0x400200E")]
		public const string SKW_BLOOM_USE_LAYER = "BEAUTIFY_BLOOM_USE_LAYER";

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Material bMatDesktop;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Material bMatMobile;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Material bMatBasic;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[SerializeField]
		private Material bMat;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Camera currentCamera;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Vector3 camPrevForward;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		private Vector3 camPrevPos;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private float currSens;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private int renderPass;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private RenderTexture[] rt;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private RenderTexture[] rtAF;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private RenderTexture[] rtEA;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private RenderTexture rtEAacum;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private RenderTexture rtEAHist;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private float dofPrevDistance;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private float dofLastAutofocusDistance;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private Vector4 dofLastBokehData;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		private Camera sceneCamera;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private Camera depthCam;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		private GameObject depthCamObj;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private Shader depthShader;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private Shader dofExclusionShader;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x4002028")]
		private const string BEAUTIFY_BUILD_HINT = "BeautifyBuildHint731RC1";

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private float sunFlareCurrentIntensity;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private Vector4 sunLastScrPos;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private float sunLastRot;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private Texture2D flareNoise;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private RenderTexture dofDepthTexture;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private RenderTexture dofExclusionTexture;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private RenderTexture bloomSourceTexture;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private RenderTexture bloomSourceDepthTexture;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private RenderTexture bloomSourceTextureRightEye;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private RenderTexture bloomSourceDepthTextureRightEye;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private RenderTexture pixelateTexture;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private RenderTextureDescriptor rtDescBase;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		private float sunFlareTime;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private int dofCurrentLayerMaskValue;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		private int bloomCurrentLayerMaskValue;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private int eyeWidth;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		private int eyeHeight;

		[Token(Token = "0x17000245")]
		public BEAUTIFY_PRESET preset
		{
			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xBB9E64", Offset = "0xBB9E64", VA = "0xBB9E64")]
			get
			{
				return default(BEAUTIFY_PRESET);
			}
			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0xBB9E6C", Offset = "0xBB9E6C", VA = "0xBB9E6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public BEAUTIFY_QUALITY quality
		{
			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0xBB9EFC", Offset = "0xBB9EFC", VA = "0xBB9EFC")]
			get
			{
				return default(BEAUTIFY_QUALITY);
			}
			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0xBB9F04", Offset = "0xBB9F04", VA = "0xBB9F04")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public BeautifyProfile profile
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xBB9FB8", Offset = "0xBB9FB8", VA = "0xBB9FB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0xBB9FC0", Offset = "0xBB9FC0", VA = "0xBB9FC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public bool syncWithProfile
		{
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0xBBA7E0", Offset = "0xBBA7E0", VA = "0xBBA7E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0xBBA7E8", Offset = "0xBBA7E8", VA = "0xBBA7E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public bool compareMode
		{
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xBBA7F4", Offset = "0xBBA7F4", VA = "0xBBA7F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0xBBA7FC", Offset = "0xBBA7FC", VA = "0xBBA7FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public float compareLineAngle
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xBBA858", Offset = "0xBBA858", VA = "0xBBA858")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xBBA860", Offset = "0xBBA860", VA = "0xBBA860")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public float compareLineWidth
		{
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0xBBA8B0", Offset = "0xBBA8B0", VA = "0xBBA8B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0xBBA8B8", Offset = "0xBBA8B8", VA = "0xBBA8B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public float dither
		{
			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xBBA908", Offset = "0xBBA908", VA = "0xBBA908")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0xBBA910", Offset = "0xBBA910", VA = "0xBBA910")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public float ditherDepth
		{
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0xBBA968", Offset = "0xBBA968", VA = "0xBBA968")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xBBA970", Offset = "0xBBA970", VA = "0xBBA970")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public float sharpenMinDepth
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0xBBA9C8", Offset = "0xBBA9C8", VA = "0xBBA9C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xBBA9D0", Offset = "0xBBA9D0", VA = "0xBBA9D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public float sharpenMaxDepth
		{
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0xBBAA20", Offset = "0xBBAA20", VA = "0xBBAA20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xBBAA28", Offset = "0xBBAA28", VA = "0xBBAA28")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public float sharpenMinMaxDepthFallOff
		{
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xBBAA78", Offset = "0xBBAA78", VA = "0xBBAA78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xBBAA80", Offset = "0xBBAA80", VA = "0xBBAA80")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public float sharpen
		{
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0xBBAAD0", Offset = "0xBBAAD0", VA = "0xBBAAD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0xBBAAD8", Offset = "0xBBAAD8", VA = "0xBBAAD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public float sharpenDepthThreshold
		{
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0xBBAB30", Offset = "0xBBAB30", VA = "0xBBAB30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0xBBAB38", Offset = "0xBBAB38", VA = "0xBBAB38")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public Color tintColor
		{
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0xBBAB90", Offset = "0xBBAB90", VA = "0xBBAB90")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xBBAB9C", Offset = "0xBBAB9C", VA = "0xBBAB9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public float sharpenRelaxation
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0xBBAC34", Offset = "0xBBAC34", VA = "0xBBAC34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xBBAC3C", Offset = "0xBBAC3C", VA = "0xBBAC3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public float sharpenClamp
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xBBAC94", Offset = "0xBBAC94", VA = "0xBBAC94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xBBAC9C", Offset = "0xBBAC9C", VA = "0xBBAC9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public float sharpenMotionSensibility
		{
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xBBACF4", Offset = "0xBBACF4", VA = "0xBBACF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xBBACFC", Offset = "0xBBACFC", VA = "0xBBACFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public float saturate
		{
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xBBAD4C", Offset = "0xBBAD4C", VA = "0xBBAD4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xBBAD54", Offset = "0xBBAD54", VA = "0xBBAD54")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public float contrast
		{
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xBBADAC", Offset = "0xBBADAC", VA = "0xBBADAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xBBADB4", Offset = "0xBBADB4", VA = "0xBBADB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public float brightness
		{
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xBBAE0C", Offset = "0xBBAE0C", VA = "0xBBAE0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xBBAE14", Offset = "0xBBAE14", VA = "0xBBAE14")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public float daltonize
		{
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xBBAE6C", Offset = "0xBBAE6C", VA = "0xBBAE6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xBBAE74", Offset = "0xBBAE74", VA = "0xBBAE74")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public bool vignetting
		{
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xBBAECC", Offset = "0xBBAECC", VA = "0xBBAECC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xBBAED4", Offset = "0xBBAED4", VA = "0xBBAED4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public Color vignettingColor
		{
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xBBAF30", Offset = "0xBBAF30", VA = "0xBBAF30")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xBBAF3C", Offset = "0xBBAF3C", VA = "0xBBAF3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public float vignettingFade
		{
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xBBAFD4", Offset = "0xBBAFD4", VA = "0xBBAFD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xBBAFDC", Offset = "0xBBAFDC", VA = "0xBBAFDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public bool vignettingCircularShape
		{
			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0xBBB02C", Offset = "0xBBB02C", VA = "0xBBB02C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xBBB034", Offset = "0xBBB034", VA = "0xBBB034")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public float vignettingAspectRatio
		{
			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xBBB090", Offset = "0xBBB090", VA = "0xBBB090")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xBBB098", Offset = "0xBBB098", VA = "0xBBB098")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public float vignettingBlink
		{
			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xBBB0E8", Offset = "0xBBB0E8", VA = "0xBBB0E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0xBBB0F0", Offset = "0xBBB0F0", VA = "0xBBB0F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public Texture2D vignettingMask
		{
			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xBBB140", Offset = "0xBBB140", VA = "0xBBB140")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xBBB148", Offset = "0xBBB148", VA = "0xBBB148")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public bool frame
		{
			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xBBB1F8", Offset = "0xBBB1F8", VA = "0xBBB1F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xBBB200", Offset = "0xBBB200", VA = "0xBBB200")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public Color frameColor
		{
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xBBB25C", Offset = "0xBBB25C", VA = "0xBBB25C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0xBBB268", Offset = "0xBBB268", VA = "0xBBB268")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public Texture2D frameMask
		{
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xBBB300", Offset = "0xBBB300", VA = "0xBBB300")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0xBBB308", Offset = "0xBBB308", VA = "0xBBB308")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public bool lut
		{
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xBBB3B8", Offset = "0xBBB3B8", VA = "0xBBB3B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xBBB3C0", Offset = "0xBBB3C0", VA = "0xBBB3C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public float lutIntensity
		{
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xBBB428", Offset = "0xBBB428", VA = "0xBBB428")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0xBBB430", Offset = "0xBBB430", VA = "0xBBB430")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public Texture2D lutTexture
		{
			[Token(Token = "0x6001F08")]
			[Address(RVA = "0xBBB480", Offset = "0xBBB480", VA = "0xBBB480")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F09")]
			[Address(RVA = "0xBBB488", Offset = "0xBBB488", VA = "0xBBB488")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public bool nightVision
		{
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xBBB538", Offset = "0xBBB538", VA = "0xBBB538")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0xBBB540", Offset = "0xBBB540", VA = "0xBBB540")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public Color nightVisionColor
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xBBB5F0", Offset = "0xBBB5F0", VA = "0xBBB5F0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xBBB5FC", Offset = "0xBBB5FC", VA = "0xBBB5FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public bool outline
		{
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xBBB694", Offset = "0xBBB694", VA = "0xBBB694")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0xBBB69C", Offset = "0xBBB69C", VA = "0xBBB69C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public Color outlineColor
		{
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xBBB6F8", Offset = "0xBBB6F8", VA = "0xBBB6F8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xBBB704", Offset = "0xBBB704", VA = "0xBBB704")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public bool thermalVision
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xBBB79C", Offset = "0xBBB79C", VA = "0xBBB79C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0xBBB7A4", Offset = "0xBBB7A4", VA = "0xBBB7A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public bool lensDirt
		{
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xBBB858", Offset = "0xBBB858", VA = "0xBBB858")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0xBBB860", Offset = "0xBBB860", VA = "0xBBB860")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public float lensDirtThreshold
		{
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0xBBB8BC", Offset = "0xBBB8BC", VA = "0xBBB8BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0xBBB8C4", Offset = "0xBBB8C4", VA = "0xBBB8C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public float lensDirtIntensity
		{
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0xBBB914", Offset = "0xBBB914", VA = "0xBBB914")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0xBBB91C", Offset = "0xBBB91C", VA = "0xBBB91C")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public Texture2D lensDirtTexture
		{
			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0xBBB96C", Offset = "0xBBB96C", VA = "0xBBB96C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0xBBB974", Offset = "0xBBB974", VA = "0xBBB974")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public bool bloom
		{
			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0xBBBA24", Offset = "0xBBBA24", VA = "0xBBBA24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0xBBBA2C", Offset = "0xBBBA2C", VA = "0xBBBA2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public LayerMask bloomCullingMask
		{
			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0xBBBA88", Offset = "0xBBBA88", VA = "0xBBBA88")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0xBBBA90", Offset = "0xBBBA90", VA = "0xBBBA90")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public float bloomLayerMaskDownsampling
		{
			[Token(Token = "0x6001F20")]
			[Address(RVA = "0xBBBB08", Offset = "0xBBBB08", VA = "0xBBBB08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xBBBB10", Offset = "0xBBBB10", VA = "0xBBBB10")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public float bloomIntensity
		{
			[Token(Token = "0x6001F22")]
			[Address(RVA = "0xBBBBC4", Offset = "0xBBBBC4", VA = "0xBBBBC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F23")]
			[Address(RVA = "0xBBBBCC", Offset = "0xBBBBCC", VA = "0xBBBBCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public float bloomMaxBrightness
		{
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0xBBBC74", Offset = "0xBBBC74", VA = "0xBBBC74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xBBBC7C", Offset = "0xBBBC7C", VA = "0xBBBC7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public float bloomBoost0
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0xBBBD24", Offset = "0xBBBD24", VA = "0xBBBD24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0xBBBD2C", Offset = "0xBBBD2C", VA = "0xBBBD2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public float bloomBoost1
		{
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0xBBBD7C", Offset = "0xBBBD7C", VA = "0xBBBD7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0xBBBD84", Offset = "0xBBBD84", VA = "0xBBBD84")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public float bloomBoost2
		{
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0xBBBDD4", Offset = "0xBBBDD4", VA = "0xBBBDD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0xBBBDDC", Offset = "0xBBBDDC", VA = "0xBBBDDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public float bloomBoost3
		{
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0xBBBE2C", Offset = "0xBBBE2C", VA = "0xBBBE2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xBBBE34", Offset = "0xBBBE34", VA = "0xBBBE34")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public float bloomBoost4
		{
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0xBBBE84", Offset = "0xBBBE84", VA = "0xBBBE84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xBBBE8C", Offset = "0xBBBE8C", VA = "0xBBBE8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public float bloomBoost5
		{
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0xBBBEDC", Offset = "0xBBBEDC", VA = "0xBBBEDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0xBBBEE4", Offset = "0xBBBEE4", VA = "0xBBBEE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public bool bloomAntiflicker
		{
			[Token(Token = "0x6001F32")]
			[Address(RVA = "0xBBBF34", Offset = "0xBBBF34", VA = "0xBBBF34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F33")]
			[Address(RVA = "0xBBBF3C", Offset = "0xBBBF3C", VA = "0xBBBF3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public bool bloomUltra
		{
			[Token(Token = "0x6001F34")]
			[Address(RVA = "0xBBBF98", Offset = "0xBBBF98", VA = "0xBBBF98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0xBBBFA0", Offset = "0xBBBFA0", VA = "0xBBBFA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public int bloomUltraResolution
		{
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xBBBFFC", Offset = "0xBBBFFC", VA = "0xBBBFFC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xBBC004", Offset = "0xBBC004", VA = "0xBBC004")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public float bloomThreshold
		{
			[Token(Token = "0x6001F38")]
			[Address(RVA = "0xBBC054", Offset = "0xBBC054", VA = "0xBBC054")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0xBBC05C", Offset = "0xBBC05C", VA = "0xBBC05C")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public bool bloomCustomize
		{
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0xBBC0AC", Offset = "0xBBC0AC", VA = "0xBBC0AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0xBBC0B4", Offset = "0xBBC0B4", VA = "0xBBC0B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000281")]
		public bool bloomDebug
		{
			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0xBBC110", Offset = "0xBBC110", VA = "0xBBC110")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0xBBC118", Offset = "0xBBC118", VA = "0xBBC118")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public float bloomWeight0
		{
			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0xBBC174", Offset = "0xBBC174", VA = "0xBBC174")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xBBC17C", Offset = "0xBBC17C", VA = "0xBBC17C")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public float bloomWeight1
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xBBC1CC", Offset = "0xBBC1CC", VA = "0xBBC1CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xBBC1D4", Offset = "0xBBC1D4", VA = "0xBBC1D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public float bloomWeight2
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xBBC224", Offset = "0xBBC224", VA = "0xBBC224")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0xBBC22C", Offset = "0xBBC22C", VA = "0xBBC22C")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public float bloomWeight3
		{
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0xBBC27C", Offset = "0xBBC27C", VA = "0xBBC27C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0xBBC284", Offset = "0xBBC284", VA = "0xBBC284")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public float bloomWeight4
		{
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0xBBC2D4", Offset = "0xBBC2D4", VA = "0xBBC2D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0xBBC2DC", Offset = "0xBBC2DC", VA = "0xBBC2DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public float bloomWeight5
		{
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0xBBC32C", Offset = "0xBBC32C", VA = "0xBBC32C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0xBBC334", Offset = "0xBBC334", VA = "0xBBC334")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public bool bloomBlur
		{
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0xBBC384", Offset = "0xBBC384", VA = "0xBBC384")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0xBBC38C", Offset = "0xBBC38C", VA = "0xBBC38C")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public bool bloomQuickerBlur
		{
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0xBBC3E8", Offset = "0xBBC3E8", VA = "0xBBC3E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0xBBC3F0", Offset = "0xBBC3F0", VA = "0xBBC3F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public float bloomDepthAtten
		{
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0xBBC44C", Offset = "0xBBC44C", VA = "0xBBC44C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0xBBC454", Offset = "0xBBC454", VA = "0xBBC454")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public float bloomLayerZBias
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0xBBC4A4", Offset = "0xBBC4A4", VA = "0xBBC4A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0xBBC4AC", Offset = "0xBBC4AC", VA = "0xBBC4AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public BEAUTIFY_PRERENDER_EVENT preRenderCameraEvent
		{
			[Token(Token = "0x6001F52")]
			[Address(RVA = "0xBBC564", Offset = "0xBBC564", VA = "0xBBC564")]
			get
			{
				return default(BEAUTIFY_PRERENDER_EVENT);
			}
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0xBBC56C", Offset = "0xBBC56C", VA = "0xBBC56C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public bool anamorphicFlares
		{
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0xBBC580", Offset = "0xBBC580", VA = "0xBBC580")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0xBBC588", Offset = "0xBBC588", VA = "0xBBC588")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public float anamorphicFlaresIntensity
		{
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0xBBC5E4", Offset = "0xBBC5E4", VA = "0xBBC5E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0xBBC5EC", Offset = "0xBBC5EC", VA = "0xBBC5EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028F")]
		public bool anamorphicFlaresAntiflicker
		{
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0xBBC694", Offset = "0xBBC694", VA = "0xBBC694")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xBBC69C", Offset = "0xBBC69C", VA = "0xBBC69C")]
			set
			{
			}
		}

		[Token(Token = "0x17000290")]
		public bool anamorphicFlaresUltra
		{
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0xBBC6F8", Offset = "0xBBC6F8", VA = "0xBBC6F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0xBBC700", Offset = "0xBBC700", VA = "0xBBC700")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public int anamorphicUltraResolution
		{
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0xBBC75C", Offset = "0xBBC75C", VA = "0xBBC75C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0xBBC764", Offset = "0xBBC764", VA = "0xBBC764")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public float anamorphicFlaresThreshold
		{
			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0xBBC7B4", Offset = "0xBBC7B4", VA = "0xBBC7B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xBBC7BC", Offset = "0xBBC7BC", VA = "0xBBC7BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public float anamorphicFlaresSpread
		{
			[Token(Token = "0x6001F60")]
			[Address(RVA = "0xBBC80C", Offset = "0xBBC80C", VA = "0xBBC80C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F61")]
			[Address(RVA = "0xBBC814", Offset = "0xBBC814", VA = "0xBBC814")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public bool anamorphicFlaresVertical
		{
			[Token(Token = "0x6001F62")]
			[Address(RVA = "0xBBC864", Offset = "0xBBC864", VA = "0xBBC864")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F63")]
			[Address(RVA = "0xBBC86C", Offset = "0xBBC86C", VA = "0xBBC86C")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public Color anamorphicFlaresTint
		{
			[Token(Token = "0x6001F64")]
			[Address(RVA = "0xBBC8C8", Offset = "0xBBC8C8", VA = "0xBBC8C8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001F65")]
			[Address(RVA = "0xBBC8DC", Offset = "0xBBC8DC", VA = "0xBBC8DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public bool anamorphicFlaresBlur
		{
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0xBBC984", Offset = "0xBBC984", VA = "0xBBC984")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0xBBC98C", Offset = "0xBBC98C", VA = "0xBBC98C")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public bool depthOfField
		{
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0xBBC9E8", Offset = "0xBBC9E8", VA = "0xBBC9E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0xBBC9F0", Offset = "0xBBC9F0", VA = "0xBBC9F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public bool depthOfFieldTransparencySupport
		{
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0xBBCA4C", Offset = "0xBBCA4C", VA = "0xBBCA4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0xBBCA54", Offset = "0xBBCA54", VA = "0xBBCA54")]
			set
			{
			}
		}

		[Token(Token = "0x17000299")]
		public LayerMask depthOfFieldTransparencyLayerMask
		{
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0xBBCAB0", Offset = "0xBBCAB0", VA = "0xBBCAB0")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xBBCAB8", Offset = "0xBBCAB8", VA = "0xBBCAB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700029A")]
		public Transform depthOfFieldTargetFocus
		{
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0xBBCB30", Offset = "0xBBCB30", VA = "0xBBCB30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xBBCB38", Offset = "0xBBCB38", VA = "0xBBCB38")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public bool depthOfFieldDebug
		{
			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xBBCBE8", Offset = "0xBBCBE8", VA = "0xBBCBE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xBBCBF0", Offset = "0xBBCBF0", VA = "0xBBCBF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public bool depthOfFieldAutofocus
		{
			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xBBCC4C", Offset = "0xBBCC4C", VA = "0xBBCC4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xBBCC54", Offset = "0xBBCC54", VA = "0xBBCC54")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public Vector2 depthofFieldAutofocusViewportPoint
		{
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xBBCCB0", Offset = "0xBBCCB0", VA = "0xBBCCB0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0xBBCCBC", Offset = "0xBBCCBC", VA = "0xBBCCBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public float depthOfFieldAutofocusMinDistance
		{
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xBBCD8C", Offset = "0xBBCD8C", VA = "0xBBCD8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0xBBCD94", Offset = "0xBBCD94", VA = "0xBBCD94")]
			set
			{
			}
		}

		[Token(Token = "0x1700029F")]
		public float depthOfFieldAutofocusMaxDistance
		{
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0xBBCDE4", Offset = "0xBBCDE4", VA = "0xBBCDE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0xBBCDEC", Offset = "0xBBCDEC", VA = "0xBBCDEC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public LayerMask depthOfFieldAutofocusLayerMask
		{
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xBBCE3C", Offset = "0xBBCE3C", VA = "0xBBCE3C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0xBBCE44", Offset = "0xBBCE44", VA = "0xBBCE44")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public LayerMask depthOfFieldExclusionLayerMask
		{
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0xBBCEBC", Offset = "0xBBCEBC", VA = "0xBBCEBC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0xBBCEC4", Offset = "0xBBCEC4", VA = "0xBBCEC4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public float depthOfFieldExclusionLayerMaskDownsampling
		{
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0xBBCF3C", Offset = "0xBBCF3C", VA = "0xBBCF3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xBBCF44", Offset = "0xBBCF44", VA = "0xBBCF44")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public float depthOfFieldTransparencySupportDownsampling
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xBBCFF8", Offset = "0xBBCFF8", VA = "0xBBCFF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0xBBD000", Offset = "0xBBD000", VA = "0xBBD000")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public float depthOfFieldExclusionBias
		{
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0xBBD0B4", Offset = "0xBBD0B4", VA = "0xBBD0B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0xBBD0BC", Offset = "0xBBD0BC", VA = "0xBBD0BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public float depthOfFieldDistance
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0xBBD16C", Offset = "0xBBD16C", VA = "0xBBD16C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xBBD174", Offset = "0xBBD174", VA = "0xBBD174")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public float depthOfFieldFocusSpeed
		{
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0xBBD228", Offset = "0xBBD228", VA = "0xBBD228")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xBBD230", Offset = "0xBBD230", VA = "0xBBD230")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public int depthOfFieldDownsampling
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0xBBD2EC", Offset = "0xBBD2EC", VA = "0xBBD2EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0xBBD2F4", Offset = "0xBBD2F4", VA = "0xBBD2F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public int depthOfFieldMaxSamples
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xBBD3A8", Offset = "0xBBD3A8", VA = "0xBBD3A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xBBD3B0", Offset = "0xBBD3B0", VA = "0xBBD3B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public float depthOfFieldFocalLength
		{
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xBBD464", Offset = "0xBBD464", VA = "0xBBD464")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0xBBD46C", Offset = "0xBBD46C", VA = "0xBBD46C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public float depthOfFieldAperture
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0xBBD514", Offset = "0xBBD514", VA = "0xBBD514")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0xBBD51C", Offset = "0xBBD51C", VA = "0xBBD51C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public bool depthOfFieldForegroundBlur
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xBBD5C4", Offset = "0xBBD5C4", VA = "0xBBD5C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0xBBD5CC", Offset = "0xBBD5CC", VA = "0xBBD5CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public bool depthOfFieldForegroundBlurHQ
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xBBD628", Offset = "0xBBD628", VA = "0xBBD628")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0xBBD630", Offset = "0xBBD630", VA = "0xBBD630")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public float depthOfFieldForegroundDistance
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0xBBD68C", Offset = "0xBBD68C", VA = "0xBBD68C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0xBBD694", Offset = "0xBBD694", VA = "0xBBD694")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public bool depthOfFieldBokeh
		{
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0xBBD6E4", Offset = "0xBBD6E4", VA = "0xBBD6E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0xBBD6EC", Offset = "0xBBD6EC", VA = "0xBBD6EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public float depthOfFieldBokehThreshold
		{
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0xBBD748", Offset = "0xBBD748", VA = "0xBBD748")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xBBD750", Offset = "0xBBD750", VA = "0xBBD750")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public float depthOfFieldBokehIntensity
		{
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0xBBD804", Offset = "0xBBD804", VA = "0xBBD804")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xBBD80C", Offset = "0xBBD80C", VA = "0xBBD80C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public float depthOfFieldMaxBrightness
		{
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0xBBD8C0", Offset = "0xBBD8C0", VA = "0xBBD8C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0xBBD8C8", Offset = "0xBBD8C8", VA = "0xBBD8C8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public float depthOfFieldMaxDistance
		{
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0xBBD970", Offset = "0xBBD970", VA = "0xBBD970")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xBBD978", Offset = "0xBBD978", VA = "0xBBD978")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public FilterMode depthOfFieldFilterMode
		{
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xBBDA20", Offset = "0xBBDA20", VA = "0xBBDA20")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0xBBDA28", Offset = "0xBBDA28", VA = "0xBBDA28")]
			set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public bool eyeAdaptation
		{
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xBBDA78", Offset = "0xBBDA78", VA = "0xBBDA78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0xBBDA80", Offset = "0xBBDA80", VA = "0xBBDA80")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public float eyeAdaptationMinExposure
		{
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xBBDADC", Offset = "0xBBDADC", VA = "0xBBDADC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xBBDAE4", Offset = "0xBBDAE4", VA = "0xBBDAE4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public float eyeAdaptationMaxExposure
		{
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xBBDB94", Offset = "0xBBDB94", VA = "0xBBDB94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xBBDB9C", Offset = "0xBBDB9C", VA = "0xBBDB9C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public float eyeAdaptationSpeedToLight
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xBBDC58", Offset = "0xBBDC58", VA = "0xBBDC58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0xBBDC60", Offset = "0xBBDC60", VA = "0xBBDC60")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public float eyeAdaptationSpeedToDark
		{
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0xBBDD10", Offset = "0xBBDD10", VA = "0xBBDD10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0xBBDD18", Offset = "0xBBDD18", VA = "0xBBDD18")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public bool purkinje
		{
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0xBBDDC8", Offset = "0xBBDDC8", VA = "0xBBDDC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0xBBDDD0", Offset = "0xBBDDD0", VA = "0xBBDDD0")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public float purkinjeAmount
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0xBBDE2C", Offset = "0xBBDE2C", VA = "0xBBDE2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0xBBDE34", Offset = "0xBBDE34", VA = "0xBBDE34")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public float purkinjeLuminanceThreshold
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0xBBDEEC", Offset = "0xBBDEEC", VA = "0xBBDEEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0xBBDEF4", Offset = "0xBBDEF4", VA = "0xBBDEF4")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public BEAUTIFY_TMO tonemap
		{
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0xBBDFAC", Offset = "0xBBDFAC", VA = "0xBBDFAC")]
			get
			{
				return default(BEAUTIFY_TMO);
			}
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0xBBDFB4", Offset = "0xBBDFB4", VA = "0xBBDFB4")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public bool sunFlares
		{
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0xBBE018", Offset = "0xBBE018", VA = "0xBBE018")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0xBBE020", Offset = "0xBBE020", VA = "0xBBE020")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public Transform sun
		{
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0xBBE07C", Offset = "0xBBE07C", VA = "0xBBE07C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0xBBE084", Offset = "0xBBE084", VA = "0xBBE084")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public LayerMask sunFlaresLayerMask
		{
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0xBBE134", Offset = "0xBBE134", VA = "0xBBE134")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0xBBE13C", Offset = "0xBBE13C", VA = "0xBBE13C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public float sunFlaresIntensity
		{
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0xBBE1B4", Offset = "0xBBE1B4", VA = "0xBBE1B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0xBBE1BC", Offset = "0xBBE1BC", VA = "0xBBE1BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public float sunFlaresSolarWindSpeed
		{
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0xBBE20C", Offset = "0xBBE20C", VA = "0xBBE20C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0xBBE214", Offset = "0xBBE214", VA = "0xBBE214")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public Color sunFlaresTint
		{
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0xBBE264", Offset = "0xBBE264", VA = "0xBBE264")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0xBBE278", Offset = "0xBBE278", VA = "0xBBE278")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public int sunFlaresDownsampling
		{
			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0xBBE320", Offset = "0xBBE320", VA = "0xBBE320")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0xBBE328", Offset = "0xBBE328", VA = "0xBBE328")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public float sunFlaresSunIntensity
		{
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0xBBE3DC", Offset = "0xBBE3DC", VA = "0xBBE3DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0xBBE3E4", Offset = "0xBBE3E4", VA = "0xBBE3E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public float sunFlaresSunDiskSize
		{
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0xBBE434", Offset = "0xBBE434", VA = "0xBBE434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0xBBE43C", Offset = "0xBBE43C", VA = "0xBBE43C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public float sunFlaresSunRayDiffractionIntensity
		{
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0xBBE48C", Offset = "0xBBE48C", VA = "0xBBE48C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0xBBE494", Offset = "0xBBE494", VA = "0xBBE494")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public float sunFlaresSunRayDiffractionThreshold
		{
			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0xBBE4E4", Offset = "0xBBE4E4", VA = "0xBBE4E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0xBBE4EC", Offset = "0xBBE4EC", VA = "0xBBE4EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public float sunFlaresCoronaRays1Length
		{
			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0xBBE53C", Offset = "0xBBE53C", VA = "0xBBE53C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0xBBE544", Offset = "0xBBE544", VA = "0xBBE544")]
			set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public int sunFlaresCoronaRays1Streaks
		{
			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0xBBE594", Offset = "0xBBE594", VA = "0xBBE594")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0xBBE59C", Offset = "0xBBE59C", VA = "0xBBE59C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public float sunFlaresCoronaRays1Spread
		{
			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0xBBE5EC", Offset = "0xBBE5EC", VA = "0xBBE5EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0xBBE5F4", Offset = "0xBBE5F4", VA = "0xBBE5F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public float sunFlaresCoronaRays1AngleOffset
		{
			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0xBBE644", Offset = "0xBBE644", VA = "0xBBE644")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0xBBE64C", Offset = "0xBBE64C", VA = "0xBBE64C")]
			set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public float sunFlaresCoronaRays2Length
		{
			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0xBBE69C", Offset = "0xBBE69C", VA = "0xBBE69C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0xBBE6A4", Offset = "0xBBE6A4", VA = "0xBBE6A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public int sunFlaresCoronaRays2Streaks
		{
			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0xBBE6F4", Offset = "0xBBE6F4", VA = "0xBBE6F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0xBBE6FC", Offset = "0xBBE6FC", VA = "0xBBE6FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public float sunFlaresCoronaRays2Spread
		{
			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0xBBE74C", Offset = "0xBBE74C", VA = "0xBBE74C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0xBBE754", Offset = "0xBBE754", VA = "0xBBE754")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public float sunFlaresCoronaRays2AngleOffset
		{
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xBBE7A4", Offset = "0xBBE7A4", VA = "0xBBE7A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xBBE7AC", Offset = "0xBBE7AC", VA = "0xBBE7AC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public float sunFlaresGhosts1Size
		{
			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0xBBE7FC", Offset = "0xBBE7FC", VA = "0xBBE7FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xBBE804", Offset = "0xBBE804", VA = "0xBBE804")]
			set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public float sunFlaresGhosts1Offset
		{
			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0xBBE854", Offset = "0xBBE854", VA = "0xBBE854")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0xBBE85C", Offset = "0xBBE85C", VA = "0xBBE85C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public float sunFlaresGhosts1Brightness
		{
			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0xBBE8AC", Offset = "0xBBE8AC", VA = "0xBBE8AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xBBE8B4", Offset = "0xBBE8B4", VA = "0xBBE8B4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D3")]
		public float sunFlaresGhosts2Size
		{
			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0xBBE904", Offset = "0xBBE904", VA = "0xBBE904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0xBBE90C", Offset = "0xBBE90C", VA = "0xBBE90C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D4")]
		public float sunFlaresGhosts2Offset
		{
			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0xBBE95C", Offset = "0xBBE95C", VA = "0xBBE95C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0xBBE964", Offset = "0xBBE964", VA = "0xBBE964")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public float sunFlaresGhosts2Brightness
		{
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xBBE9B4", Offset = "0xBBE9B4", VA = "0xBBE9B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0xBBE9BC", Offset = "0xBBE9BC", VA = "0xBBE9BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public float sunFlaresGhosts3Size
		{
			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0xBBEA0C", Offset = "0xBBEA0C", VA = "0xBBEA0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0xBBEA14", Offset = "0xBBEA14", VA = "0xBBEA14")]
			set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public float sunFlaresGhosts3Brightness
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0xBBEA64", Offset = "0xBBEA64", VA = "0xBBEA64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0xBBEA6C", Offset = "0xBBEA6C", VA = "0xBBEA6C")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public float sunFlaresGhosts3Offset
		{
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0xBBEABC", Offset = "0xBBEABC", VA = "0xBBEABC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0xBBEAC4", Offset = "0xBBEAC4", VA = "0xBBEAC4")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public float sunFlaresGhosts4Size
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0xBBEB14", Offset = "0xBBEB14", VA = "0xBBEB14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0xBBEB1C", Offset = "0xBBEB1C", VA = "0xBBEB1C")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public float sunFlaresGhosts4Offset
		{
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0xBBEB6C", Offset = "0xBBEB6C", VA = "0xBBEB6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0xBBEB74", Offset = "0xBBEB74", VA = "0xBBEB74")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public float sunFlaresGhosts4Brightness
		{
			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0xBBEBC4", Offset = "0xBBEBC4", VA = "0xBBEBC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0xBBEBCC", Offset = "0xBBEBCC", VA = "0xBBEBCC")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public float sunFlaresHaloOffset
		{
			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0xBBEC1C", Offset = "0xBBEC1C", VA = "0xBBEC1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0xBBEC24", Offset = "0xBBEC24", VA = "0xBBEC24")]
			set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public float sunFlaresHaloAmplitude
		{
			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0xBBEC74", Offset = "0xBBEC74", VA = "0xBBEC74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0xBBEC7C", Offset = "0xBBEC7C", VA = "0xBBEC7C")]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public float sunFlaresHaloIntensity
		{
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0xBBECCC", Offset = "0xBBECCC", VA = "0xBBECCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xBBECD4", Offset = "0xBBECD4", VA = "0xBBECD4")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public bool sunFlaresRotationDeadZone
		{
			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xBBED24", Offset = "0xBBED24", VA = "0xBBED24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xBBED2C", Offset = "0xBBED2C", VA = "0xBBED2C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public bool blur
		{
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0xBBED88", Offset = "0xBBED88", VA = "0xBBED88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0xBBED90", Offset = "0xBBED90", VA = "0xBBED90")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public float blurIntensity
		{
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0xBBEDEC", Offset = "0xBBEDEC", VA = "0xBBEDEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0xBBEDF4", Offset = "0xBBEDF4", VA = "0xBBEDF4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public int downscale
		{
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0xBBEE44", Offset = "0xBBEE44", VA = "0xBBEE44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0xBBEE4C", Offset = "0xBBEE4C", VA = "0xBBEE4C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public int pixelateAmount
		{
			[Token(Token = "0x6002000")]
			[Address(RVA = "0xBBEE9C", Offset = "0xBBEE9C", VA = "0xBBEE9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002001")]
			[Address(RVA = "0xBBEEA4", Offset = "0xBBEEA4", VA = "0xBBEEA4")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public bool pixelateDownscale
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0xBBEEF4", Offset = "0xBBEEF4", VA = "0xBBEEF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002003")]
			[Address(RVA = "0xBBEEFC", Offset = "0xBBEEFC", VA = "0xBBEEFC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public float antialiasStrength
		{
			[Token(Token = "0x6002004")]
			[Address(RVA = "0xBBEF58", Offset = "0xBBEF58", VA = "0xBBEF58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002005")]
			[Address(RVA = "0xBBEF60", Offset = "0xBBEF60", VA = "0xBBEF60")]
			set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public float antialiasDepthThreshold
		{
			[Token(Token = "0x6002006")]
			[Address(RVA = "0xBBEFB0", Offset = "0xBBEFB0", VA = "0xBBEFB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002007")]
			[Address(RVA = "0xBBEFB8", Offset = "0xBBEFB8", VA = "0xBBEFB8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public static Beautify instance
		{
			[Token(Token = "0x6002008")]
			[Address(RVA = "0xBBF008", Offset = "0xBBF008", VA = "0xBBF008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public Camera cameraEffect
		{
			[Token(Token = "0x6002009")]
			[Address(RVA = "0xBBF150", Offset = "0xBBF150", VA = "0xBBF150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		public float depthOfFieldCurrentFocalPointDistance
		{
			[Token(Token = "0x600202A")]
			[Address(RVA = "0xBC6060", Offset = "0xBC6060", VA = "0xBC6060")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xBBF158", Offset = "0xBBF158", VA = "0xBBF158")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xBC0768", Offset = "0xBC0768", VA = "0xBC0768")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xBC0BC8", Offset = "0xBC0BC8", VA = "0xBC0BC8")]
		private void Reset()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xBC0BCC", Offset = "0xBC0BCC", VA = "0xBC0BCC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xBC0F40", Offset = "0xBC0F40", VA = "0xBC0F40")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xBC0F50", Offset = "0xBC0F50", VA = "0xBC0F50")]
		private void DoOnPreRenderTasks()
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xBC1CF8", Offset = "0xBC1CF8", VA = "0xBC1CF8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xBC09B8", Offset = "0xBC09B8", VA = "0xBC09B8")]
		private void CleanUpRT()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xBC10F8", Offset = "0xBC10F8", VA = "0xBC10F8")]
		private void CheckDoFTransparencySupport()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xBC14B0", Offset = "0xBC14B0", VA = "0xBC14B0")]
		private void CheckDoFExclusionMask()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xBC1860", Offset = "0xBC1860", VA = "0xBC1860")]
		private void CheckBloomCullingLayer()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xBC1FD8", Offset = "0xBC1FD8", VA = "0xBC1FD8")]
		private void RenderLeftEyeDepth()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xBC2178", Offset = "0xBC2178", VA = "0xBC2178")]
		private void RenderRightEyeDepth()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xBC2318", Offset = "0xBC2318", VA = "0xBC2318", Slot = "4")]
		protected virtual void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xBC5950", Offset = "0xBC5950", VA = "0xBC5950")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xBC5454", Offset = "0xBC5454", VA = "0xBC5454")]
		private void BlurThis(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xBC5594", Offset = "0xBC5594", VA = "0xBC5594")]
		private void BlurThisDownscaling(RenderTexture rt, RenderTexture downscaled, float blurScale = 1f)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xBC5820", Offset = "0xBC5820", VA = "0xBC5820")]
		private RenderTexture BlurThisOneDirection(RenderTexture rt, bool vertical, float blurScale = 1f)
		{
			return null;
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xBC5164", Offset = "0xBC5164", VA = "0xBC5164")]
		private void BlurThisDoF(RenderTexture rt, int renderPass)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xBC5024", Offset = "0xBC5024", VA = "0xBC5024")]
		private void BlurThisAlpha(RenderTexture rt, float blurScale = 1f)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xBC5B88", Offset = "0xBC5B88", VA = "0xBC5B88")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xBB9F80", Offset = "0xBB9F80", VA = "0xBB9F80")]
		public void UpdateQualitySettings()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xBB9EBC", Offset = "0xBB9EBC", VA = "0xBB9EBC")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xBBF258", Offset = "0xBBF258", VA = "0xBBF258")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xBC5384", Offset = "0xBC5384", VA = "0xBC5384")]
		private void UpdateMaterialBloomIntensityAndThreshold()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xBC575C", Offset = "0xBC575C", VA = "0xBC575C")]
		private void UpdateMaterialAnamorphicIntensityAndThreshold()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xBC0EA4", Offset = "0xBC0EA4", VA = "0xBC0EA4")]
		private void UpdateSharpenParams(float sharpen)
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xBC4C94", Offset = "0xBC4C94", VA = "0xBC4C94")]
		private void UpdateDepthOfFieldData()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xBC5AB8", Offset = "0xBC5AB8", VA = "0xBC5AB8")]
		private void UpdateDepthOfFieldBlurData(Vector2 blurDir)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xBC5B94", Offset = "0xBC5B94", VA = "0xBC5B94")]
		private void UpdateDoFAutofocusDistance()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xBC5F74", Offset = "0xBC5F74", VA = "0xBC5F74")]
		public void Blink(float duration, float maxValue = 1f)
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xBC5FAC", Offset = "0xBC5FAC", VA = "0xBC5FAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874888", Offset = "0x874888")]
		private IEnumerator DoBlink(float duration, float maxValue)
		{
			return null;
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xBC6068", Offset = "0xBC6068", VA = "0xBC6068")]
		public Beautify()
		{
		}
	}
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C0F4", Offset = "0x85C0F4")]
	public class BeautifyProfile : ScriptableObject
	{
		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A83C", Offset = "0x86A83C")]
		public float dither;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A858", Offset = "0x86A858")]
		public float ditherDepth;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A870", Offset = "0x86A870")]
		public float sharpenMinDepth;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A888", Offset = "0x86A888")]
		public float sharpenMaxDepth;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A8A4", Offset = "0x86A8A4")]
		public float sharpen;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A8BC", Offset = "0x86A8BC")]
		public float sharpenMinMaxDepthFallOff;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A8D4", Offset = "0x86A8D4")]
		public float sharpenDepthThreshold;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color tintColor;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A8F0", Offset = "0x86A8F0")]
		public float sharpenRelaxation;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A90C", Offset = "0x86A90C")]
		public float sharpenClamp;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A924", Offset = "0x86A924")]
		public float sharpenMotionSensibility;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A93C", Offset = "0x86A93C")]
		public float antialiasStrength;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A954", Offset = "0x86A954")]
		public float antialiasDepthThreshold;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A970", Offset = "0x86A970")]
		public int downscale;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A988", Offset = "0x86A988")]
		public float saturate;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A9A0", Offset = "0x86A9A0")]
		public float contrast;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A9B8", Offset = "0x86A9B8")]
		public float brightness;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A9D0", Offset = "0x86A9D0")]
		public float daltonize;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool vignetting;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color vignettingColor;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float vignettingFade;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool vignettingCircularShape;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float vignettingAspectRatio;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86A9E8", Offset = "0x86A9E8")]
		public float vignettingBlink;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D vignettingMask;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool frame;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color frameColor;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D frameMask;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool lut;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AA00", Offset = "0x86AA00")]
		public float lutIntensity;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Texture2D lutTexture;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool nightVision;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Color nightVisionColor;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool outline;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Color outlineColor;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool thermalVision;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public bool lensDirt;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AA18", Offset = "0x86AA18")]
		public float lensDirtThreshold;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AA30", Offset = "0x86AA30")]
		public float lensDirtIntensity;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Texture2D lensDirtTexture;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool bloom;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public LayerMask bloomCullingMask;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AA48", Offset = "0x86AA48")]
		public float bloomLayerMaskDownsampling;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AA60", Offset = "0x86AA60")]
		public float bloomIntensity;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float bloomMaxBrightness;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AA78", Offset = "0x86AA78")]
		public float bloomBoost0;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AA90", Offset = "0x86AA90")]
		public float bloomBoost1;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AAA8", Offset = "0x86AAA8")]
		public float bloomBoost2;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AAC0", Offset = "0x86AAC0")]
		public float bloomBoost3;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AAD8", Offset = "0x86AAD8")]
		public float bloomBoost4;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AAF0", Offset = "0x86AAF0")]
		public float bloomBoost5;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool bloomAntiflicker;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		public bool bloomUltra;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AB08", Offset = "0x86AB08")]
		public int bloomUltraResolution;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AB20", Offset = "0x86AB20")]
		public float bloomThreshold;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool bloomCustomize;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AB38", Offset = "0x86AB38")]
		public float bloomWeight0;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AB50", Offset = "0x86AB50")]
		public float bloomWeight1;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AB68", Offset = "0x86AB68")]
		public float bloomWeight2;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AB80", Offset = "0x86AB80")]
		public float bloomWeight3;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AB98", Offset = "0x86AB98")]
		public float bloomWeight4;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ABB0", Offset = "0x86ABB0")]
		public float bloomWeight5;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool bloomBlur;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ABC8", Offset = "0x86ABC8")]
		public float bloomDepthAtten;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ABE0", Offset = "0x86ABE0")]
		public float bloomLayerZBias;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public bool anamorphicFlares;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ABF8", Offset = "0x86ABF8")]
		public float anamorphicFlaresIntensity;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool anamorphicFlaresAntiflicker;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		public bool anamorphicFlaresUltra;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AC10", Offset = "0x86AC10")]
		public int anamorphicFlaresUltraResolution;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AC28", Offset = "0x86AC28")]
		public float anamorphicFlaresThreshold;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AC40", Offset = "0x86AC40")]
		public float anamorphicFlaresSpread;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public bool anamorphicFlaresVertical;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public Color anamorphicFlaresTint;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public bool anamorphicFlaresBlur;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		public bool depthOfField;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		public bool depthOfFieldTransparencySupport;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Transform depthOfFieldTargetFocus;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool depthOfFieldAutofocus;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public Vector2 depthofFieldAutofocusViewportPoint;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public LayerMask depthOfFieldAutofocusLayerMask;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float depthOfFieldAutofocusMinDistance;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float depthOfFieldAutofocusMaxDistance;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public LayerMask depthOfFieldExclusionLayerMask;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AC5C", Offset = "0x86AC5C")]
		public float depthOfFieldExclusionLayerMaskDownsampling;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AC74", Offset = "0x86AC74")]
		public float depthOfFieldTransparencySupportDownsampling;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AC8C", Offset = "0x86AC8C")]
		public float depthOfFieldExclusionBias;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ACA8", Offset = "0x86ACA8")]
		public float depthOfFieldDistance;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ACC4", Offset = "0x86ACC4")]
		public float depthOfFieldFocusSpeed;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ACE0", Offset = "0x86ACE0")]
		public int depthOfFieldDownsampling;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ACF8", Offset = "0x86ACF8")]
		public int depthOfFieldMaxSamples;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AD10", Offset = "0x86AD10")]
		public float depthOfFieldFocalLength;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float depthOfFieldAperture;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public bool depthOfFieldForegroundBlur;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		public bool depthOfFieldForegroundBlurHQ;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float depthOfFieldForegroundDistance;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool depthOfFieldBokeh;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AD2C", Offset = "0x86AD2C")]
		public float depthOfFieldBokehThreshold;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AD44", Offset = "0x86AD44")]
		public float depthOfFieldBokehIntensity;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float depthOfFieldMaxBrightness;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float depthOfFieldMaxDistance;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public FilterMode depthOfFieldFilterMode;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public LayerMask depthOfFieldTransparencyLayerMask;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public bool eyeAdaptation;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AD5C", Offset = "0x86AD5C")]
		public float eyeAdaptationMinExposure;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AD74", Offset = "0x86AD74")]
		public float eyeAdaptationMaxExposure;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AD90", Offset = "0x86AD90")]
		public float eyeAdaptationSpeedToLight;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ADA8", Offset = "0x86ADA8")]
		public float eyeAdaptationSpeedToDark;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public bool purkinje;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ADC0", Offset = "0x86ADC0")]
		public float purkinjeAmount;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ADD8", Offset = "0x86ADD8")]
		public float purkinjeLuminanceThreshold;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public BEAUTIFY_TMO tonemap;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public bool sunFlares;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86ADF0", Offset = "0x86ADF0")]
		public float sunFlaresIntensity;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AE08", Offset = "0x86AE08")]
		public float sunFlaresSolarWindSpeed;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public Color sunFlaresTint;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AE20", Offset = "0x86AE20")]
		public int sunFlaresDownsampling;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AE38", Offset = "0x86AE38")]
		public float sunFlaresSunIntensity;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AE50", Offset = "0x86AE50")]
		public float sunFlaresSunDiskSize;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AE68", Offset = "0x86AE68")]
		public float sunFlaresSunRayDiffractionIntensity;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AE80", Offset = "0x86AE80")]
		public float sunFlaresSunRayDiffractionThreshold;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AE98", Offset = "0x86AE98")]
		public float sunFlaresCoronaRays1Length;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AEB4", Offset = "0x86AEB4")]
		public int sunFlaresCoronaRays1Streaks;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AECC", Offset = "0x86AECC")]
		public float sunFlaresCoronaRays1Spread;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AEE8", Offset = "0x86AEE8")]
		public float sunFlaresCoronaRays1AngleOffset;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AF04", Offset = "0x86AF04")]
		public float sunFlaresCoronaRays2Length;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AF20", Offset = "0x86AF20")]
		public int sunFlaresCoronaRays2Streaks;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AF38", Offset = "0x86AF38")]
		public float sunFlaresCoronaRays2Spread;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AF54", Offset = "0x86AF54")]
		public float sunFlaresCoronaRays2AngleOffset;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AF70", Offset = "0x86AF70")]
		public float sunFlaresGhosts1Size;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AF88", Offset = "0x86AF88")]
		public float sunFlaresGhosts1Offset;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AFA0", Offset = "0x86AFA0")]
		public float sunFlaresGhosts1Brightness;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AFB8", Offset = "0x86AFB8")]
		public float sunFlaresGhosts2Size;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AFD0", Offset = "0x86AFD0")]
		public float sunFlaresGhosts2Offset;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86AFE8", Offset = "0x86AFE8")]
		public float sunFlaresGhosts2Brightness;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B000", Offset = "0x86B000")]
		public float sunFlaresGhosts3Size;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B018", Offset = "0x86B018")]
		public float sunFlaresGhosts3Brightness;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B030", Offset = "0x86B030")]
		public float sunFlaresGhosts3Offset;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B048", Offset = "0x86B048")]
		public float sunFlaresGhosts4Size;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B060", Offset = "0x86B060")]
		public float sunFlaresGhosts4Offset;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B078", Offset = "0x86B078")]
		public float sunFlaresGhosts4Brightness;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B090", Offset = "0x86B090")]
		public float sunFlaresHaloOffset;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B0A8", Offset = "0x86B0A8")]
		public float sunFlaresHaloAmplitude;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B0C4", Offset = "0x86B0C4")]
		public float sunFlaresHaloIntensity;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public bool sunFlaresRotationDeadZone;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B5")]
		public bool blur;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86B0DC", Offset = "0x86B0DC")]
		public float blurIntensity;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public int pixelateAmount;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public bool pixelateDownscale;

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xBBA090", Offset = "0xBBA090", VA = "0xBBA090")]
		public void Load(Beautify b)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xBC6660", Offset = "0xBC6660", VA = "0xBC6660")]
		public void Save(Beautify b)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xBC6B34", Offset = "0xBC6B34", VA = "0xBC6B34")]
		public BeautifyProfile()
		{
		}
	}
}
namespace RotateLight
{
	[Token(Token = "0x2000449")]
	public class SinRotationOffset : MonoBehaviour
	{
		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Quaternion _initialRotation;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float sinAmplitude;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 sinDirection;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sinOffset;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sinSpeed;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Space space;

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xAFBD94", Offset = "0xAFBD94", VA = "0xAFBD94")]
		private void Start()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xAFBDE8", Offset = "0xAFBDE8", VA = "0xAFBDE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xAFBFC4", Offset = "0xAFBFC4", VA = "0xAFBFC4")]
		public SinRotationOffset()
		{
		}
	}
}
namespace AuraAPI
{
	[Token(Token = "0x200044A")]
	public class LightFlicker : MonoBehaviour
	{
		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _currentFactor;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _currentPos;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _deltaTime;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _initPos;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _targetFactor;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _targetPos;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _time;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _timeLeft;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color baseColor;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float maxFactor;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float minFactor;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float moveRange;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float speed;

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xBB5408", Offset = "0xBB5408", VA = "0xBB5408")]
		private void Start()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xBB5470", Offset = "0xBB5470", VA = "0xBB5470")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xBB54B4", Offset = "0xBB54B4", VA = "0xBB54B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xBB54EC", Offset = "0xBB54EC", VA = "0xBB54EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xBB5710", Offset = "0xBB5710", VA = "0xBB5710")]
		public LightFlicker()
		{
		}
	}
}
namespace AlmostEngine
{
	[Serializable]
	[Token(Token = "0x200044B")]
	public class HotKey
	{
		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_Shift;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_Control;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool m_Alt;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyCode m_Key;

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xA4AF98", Offset = "0xA4AF98", VA = "0xA4AF98")]
		public HotKey()
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xA4AFA0", Offset = "0xA4AFA0", VA = "0xA4AFA0")]
		public HotKey(bool shift, bool control, bool alt, KeyCode key)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xA4B000", Offset = "0xA4B000", VA = "0xA4B000")]
		public bool IsPressed()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200044C")]
	public static class ListExtras
	{
		[Token(Token = "0x600203A")]
		public static void Resize<T>(this List<T> list, int size, [Optional] T element)
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class MultiDisplayUtils : MonoBehaviour
	{
		[Token(Token = "0x600203B")]
		[Address(RVA = "0xA4B0B8", Offset = "0xA4B0B8", VA = "0xA4B0B8")]
		public static bool IsMultiDisplay()
		{
			return default(bool);
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xA4B1D4", Offset = "0xA4B1D4", VA = "0xA4B1D4")]
		public MultiDisplayUtils()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class PathUtils
	{
		[Token(Token = "0x600203D")]
		[Address(RVA = "0xA4B1DC", Offset = "0xA4B1DC", VA = "0xA4B1DC")]
		public static bool IsValidPath(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xA4B380", Offset = "0xA4B380", VA = "0xA4B380")]
		public PathUtils()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "XmlRootAttribute", RVA = "0x85C158", Offset = "0x85C158")]
	public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, IXmlSerializable, ISerializationCallbackReceiver
	{
		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[XmlIgnore]
		[SerializeField]
		public List<TKey> keys;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[XmlIgnore]
		[SerializeField]
		public List<TValue> values;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[XmlIgnore]
		[SerializeField]
		public List<TValue> nulls;

		[Token(Token = "0x600203F")]
		public SerializableDictionary()
		{
		}

		[Token(Token = "0x6002040")]
		public SerializableDictionary(SerializableDictionary<TKey, TValue> dic)
		{
		}

		[Token(Token = "0x6002041")]
		public XmlSchema GetSchema()
		{
			return null;
		}

		[Token(Token = "0x6002042")]
		public void ReadXml(XmlReader reader)
		{
		}

		[Token(Token = "0x6002043")]
		public void WriteXml(XmlWriter writer)
		{
		}

		[Token(Token = "0x6002044")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002045")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public abstract class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static T m_Instance;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool m_DontDestroyOnLoad;

		[Token(Token = "0x6002046")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002047")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002048")]
		protected virtual void OnSingletonAwake()
		{
		}

		[Token(Token = "0x6002049")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class UnityVersion
	{
		[Token(Token = "0x600204A")]
		[Address(RVA = "0xA5A274", Offset = "0xA5A274", VA = "0xA5A274")]
		public static bool HasPro()
		{
			return default(bool);
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xA5CA0C", Offset = "0xA5CA0C", VA = "0xA5CA0C")]
		public UnityVersion()
		{
		}
	}
}
namespace AlmostEngine.Screenshot
{
	[Token(Token = "0x2000452")]
	public class MultiDisplayCameraCapture : MonoBehaviour
	{
		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Texture2D m_TargetTexture;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_DoCopy;

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xA4FB14", Offset = "0xA4FB14", VA = "0xA4FB14")]
		public void CaptureCamera(Texture2D targetTexture)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xA4FB24", Offset = "0xA4FB24", VA = "0xA4FB24")]
		public bool CopyIsOver()
		{
			return default(bool);
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xA4FB34", Offset = "0xA4FB34", VA = "0xA4FB34")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xA4FC50", Offset = "0xA4FC50", VA = "0xA4FC50")]
		public MultiDisplayCameraCapture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000453")]
	public class PopularityPresetAsset : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000754")]
		public class Stat
		{
			[Token(Token = "0x40030ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScreenshotResolutionAsset m_Resolution;

			[Token(Token = "0x40030EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float m_Frequency;

			[Token(Token = "0x6002F2D")]
			[Address(RVA = "0xA4FE54", Offset = "0xA4FE54", VA = "0xA4FE54")]
			public Stat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85DFF8", Offset = "0x85DFF8")]
		private sealed class <>c
		{
			[Token(Token = "0x40030EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Stat> <>9__2_0;

			[Token(Token = "0x6002F2F")]
			[Address(RVA = "0xA4FE24", Offset = "0xA4FE24", VA = "0xA4FE24")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F30")]
			[Address(RVA = "0xA4FE2C", Offset = "0xA4FE2C", VA = "0xA4FE2C")]
			internal int <Sort>b__2_0(Stat a, Stat b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Stat> m_Stats;

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xA4FC58", Offset = "0xA4FC58", VA = "0xA4FC58")]
		public void Sort()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xA4FD50", Offset = "0xA4FD50", VA = "0xA4FD50")]
		public PopularityPresetAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000454")]
	public class PresetCollectionAsset : ScriptableObject
	{
		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ScreenshotResolutionAsset> m_Presets;

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xA4FE5C", Offset = "0xA4FE5C", VA = "0xA4FE5C")]
		public PresetCollectionAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000455")]
	public class ScreenshotResolutionAsset : ScriptableObject
	{
		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenshotResolution m_Resolution;

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xA57A94", Offset = "0xA57A94", VA = "0xA57A94")]
		public ScreenshotResolutionAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000456")]
	public class ScreenshotBatch
	{
		[Serializable]
		[Token(Token = "0x2000756")]
		public class ActiveItem
		{
			[Token(Token = "0x40030F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_Active;

			[Token(Token = "0x40030F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_Name;

			[Token(Token = "0x40030F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[HideInInspector]
			public int m_Id;

			[Token(Token = "0x6002F31")]
			[Address(RVA = "0xA4FFB4", Offset = "0xA4FFB4", VA = "0xA4FFB4")]
			public ActiveItem()
			{
			}
		}

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_Active;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_Name;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ScreenshotProcess> m_PreProcess;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ScreenshotProcess> m_PostProcess;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_OverrideActiveResolutions;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<ActiveItem> m_ActiveResolutions;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_OverrideActiveComposer;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ActiveItem> m_ActiveCompositions;

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xA4FECC", Offset = "0xA4FECC", VA = "0xA4FECC")]
		public ScreenshotBatch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000457")]
	public class ScreenshotCamera
	{
		[Token(Token = "0x2000757")]
		public enum CustomSettings
		{
			[Token(Token = "0x40030F5")]
			KEEP_CAMERA_SETTINGS,
			[Token(Token = "0x40030F6")]
			CUSTOM
		}

		[Token(Token = "0x2000758")]
		public class Settings
		{
			[Token(Token = "0x40030F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_Enabled;

			[Token(Token = "0x40030F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool m_GameObjectEnabled;

			[Token(Token = "0x40030F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public CameraClearFlags m_ClearFlags;

			[Token(Token = "0x40030FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color m_BackgroundColor;

			[Token(Token = "0x40030FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int m_CullingMask;

			[Token(Token = "0x40030FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float m_FOV;

			[Token(Token = "0x6002F32")]
			[Address(RVA = "0xA50410", Offset = "0xA50410", VA = "0xA50410")]
			public Settings(bool enabled, bool go, CameraClearFlags clear, Color color, int culling, float fov)
			{
			}
		}

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_Active;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera m_Camera;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomSettings m_ClearSettings;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CameraClearFlags m_ClearFlags;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color m_BackgroundColor;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CustomSettings m_CullingSettings;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_CullingMask;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CustomSettings m_FOVSettings;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_FOV;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Stack<Settings> m_SettingStack;

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xA5001C", Offset = "0xA5001C", VA = "0xA5001C")]
		public ScreenshotCamera()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xA500B8", Offset = "0xA500B8", VA = "0xA500B8")]
		public ScreenshotCamera(Camera cam)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xA50168", Offset = "0xA50168", VA = "0xA50168")]
		public void ApplySettings(bool isOffscreen = false)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xA504A4", Offset = "0xA504A4", VA = "0xA504A4")]
		public void Disable()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xA50684", Offset = "0xA50684", VA = "0xA50684")]
		public void RestoreSettings()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class ScreenshotComposer : MonoBehaviour
	{
		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E008", Offset = "0x85E008")]
		private sealed class <CaptureCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotComposer <>4__this;

			[Token(Token = "0x4003100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenshotResolution desiredCaptureResolution;

			[Token(Token = "0x4003101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<ScreenshotCamera> cameras;

			[Token(Token = "0x4003102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<ScreenshotOverlay> overlays;

			[Token(Token = "0x4003103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ScreenshotTaker.CaptureMode captureMode;

			[Token(Token = "0x4003104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int antiAliasing;

			[Token(Token = "0x4003105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool captureGameUI;

			[Token(Token = "0x4003106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public ScreenshotTaker.ColorFormat colorFormat;

			[Token(Token = "0x4003107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool recomputeAlphaMask;

			[Token(Token = "0x4003108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
			public bool stopTime;

			[Token(Token = "0x4003109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<RawImage>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700050D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F37")]
				[Address(RVA = "0xA51130", Offset = "0xA51130", VA = "0xA51130", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F39")]
				[Address(RVA = "0xA51198", Offset = "0xA51198", VA = "0xA51198", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F33")]
			[Address(RVA = "0xA50894", Offset = "0xA50894", VA = "0xA50894")]
			[DebuggerHidden]
			public <CaptureCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002F34")]
			[Address(RVA = "0xA50E50", Offset = "0xA50E50", VA = "0xA50E50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F35")]
			[Address(RVA = "0xA50EC4", Offset = "0xA50EC4", VA = "0xA50EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F36")]
			[Address(RVA = "0xA50E6C", Offset = "0xA50E6C", VA = "0xA50E6C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002F38")]
			[Address(RVA = "0xA51138", Offset = "0xA51138", VA = "0xA51138", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200075A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E018", Offset = "0x85E018")]
		private sealed class <CaptureInnerTextureCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400310A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400310B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400310C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotComposer <>4__this;

			[Token(Token = "0x400310D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RawImage texture;

			[Token(Token = "0x400310E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenshotResolution desiredCaptureResolution;

			[Token(Token = "0x400310F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<ScreenshotCamera> cameras;

			[Token(Token = "0x4003110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<ScreenshotOverlay> overlays;

			[Token(Token = "0x4003111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ScreenshotTaker.CaptureMode captureMode;

			[Token(Token = "0x4003112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int antiAliasing;

			[Token(Token = "0x4003113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool captureGameUI;

			[Token(Token = "0x4003114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public ScreenshotTaker.ColorFormat colorFormat;

			[Token(Token = "0x4003115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool recomputeAlphaMask;

			[Token(Token = "0x4003116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool stopTime;

			[Token(Token = "0x4003117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ScreenshotResolution <tempRes>5__2;

			[Token(Token = "0x1700050F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F3D")]
				[Address(RVA = "0xA515AC", Offset = "0xA515AC", VA = "0xA515AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000510")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F3F")]
				[Address(RVA = "0xA51614", Offset = "0xA51614", VA = "0xA51614", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F3A")]
			[Address(RVA = "0xA509A0", Offset = "0xA509A0", VA = "0xA509A0")]
			[DebuggerHidden]
			public <CaptureInnerTextureCoroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002F3B")]
			[Address(RVA = "0xA511A0", Offset = "0xA511A0", VA = "0xA511A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F3C")]
			[Address(RVA = "0xA511A4", Offset = "0xA511A4", VA = "0xA511A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F3E")]
			[Address(RVA = "0xA515B4", Offset = "0xA515B4", VA = "0xA515B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200075B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E028", Offset = "0x85E028")]
		private sealed class <ComputeInnerTextureSizeCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400311A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotComposer <>4__this;

			[Token(Token = "0x400311B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int compositionWidth;

			[Token(Token = "0x400311C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int compositionHeight;

			[Token(Token = "0x400311D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RawImage image;

			[Token(Token = "0x400311E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ScreenshotResolution resolution;

			[Token(Token = "0x400311F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <f>5__2;

			[Token(Token = "0x17000511")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F43")]
				[Address(RVA = "0xA51800", Offset = "0xA51800", VA = "0xA51800", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000512")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F45")]
				[Address(RVA = "0xA51868", Offset = "0xA51868", VA = "0xA51868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F40")]
			[Address(RVA = "0xA50A64", Offset = "0xA50A64", VA = "0xA50A64")]
			[DebuggerHidden]
			public <ComputeInnerTextureSizeCoroutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002F41")]
			[Address(RVA = "0xA5161C", Offset = "0xA5161C", VA = "0xA5161C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F42")]
			[Address(RVA = "0xA51620", Offset = "0xA51620", VA = "0xA51620", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F44")]
			[Address(RVA = "0xA51808", Offset = "0xA51808", VA = "0xA51808", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200075C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E038", Offset = "0x85E038")]
		private sealed class <CaptureCompositionCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotComposer <>4__this;

			[Token(Token = "0x4003123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenshotResolution desiredCaptureResolution;

			[Token(Token = "0x17000513")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F49")]
				[Address(RVA = "0xA50DE0", Offset = "0xA50DE0", VA = "0xA50DE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000514")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F4B")]
				[Address(RVA = "0xA50E48", Offset = "0xA50E48", VA = "0xA50E48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F46")]
			[Address(RVA = "0xA50B0C", Offset = "0xA50B0C", VA = "0xA50B0C")]
			[DebuggerHidden]
			public <CaptureCompositionCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002F47")]
			[Address(RVA = "0xA50BB4", Offset = "0xA50BB4", VA = "0xA50BB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F48")]
			[Address(RVA = "0xA50BB8", Offset = "0xA50BB8", VA = "0xA50BB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F4A")]
			[Address(RVA = "0xA50DE8", Offset = "0xA50DE8", VA = "0xA50DE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B19C", Offset = "0x86B19C")]
		public Camera m_Camera;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas m_Canvas;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B1D4", Offset = "0x86B1D4")]
		public List<RawImage> m_Textures;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ScreenshotTaker m_ScreenshotTaker;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float supersampleCoeff;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected int resizeframe;

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xA507BC", Offset = "0xA507BC", VA = "0xA507BC", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8748FC", Offset = "0x8748FC")]
		public virtual IEnumerator CaptureCoroutine(ScreenshotResolution desiredCaptureResolution, List<ScreenshotCamera> cameras, List<ScreenshotOverlay> overlays, ScreenshotTaker.CaptureMode captureMode, int antiAliasing = 8, bool captureGameUI = true, ScreenshotTaker.ColorFormat colorFormat = ScreenshotTaker.ColorFormat.RGB, bool recomputeAlphaMask = false, bool stopTime = false, bool restore = true)
		{
			return null;
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xA508C0", Offset = "0xA508C0", VA = "0xA508C0", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874960", Offset = "0x874960")]
		public virtual IEnumerator CaptureInnerTextureCoroutine(RawImage texture, ScreenshotResolution desiredCaptureResolution, List<ScreenshotCamera> cameras, List<ScreenshotOverlay> overlays, ScreenshotTaker.CaptureMode captureMode, int antiAliasing = 8, bool captureGameUI = true, ScreenshotTaker.ColorFormat colorFormat = ScreenshotTaker.ColorFormat.RGB, bool recomputeAlphaMask = false, bool stopTime = false, bool restore = true)
		{
			return null;
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xA509CC", Offset = "0xA509CC", VA = "0xA509CC", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8749C4", Offset = "0x8749C4")]
		public virtual IEnumerator ComputeInnerTextureSizeCoroutine(RawImage image, int compositionWidth, int compositionHeight, ScreenshotResolution resolution)
		{
			return null;
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xA50A90", Offset = "0xA50A90", VA = "0xA50A90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874A28", Offset = "0x874A28")]
		public IEnumerator CaptureCompositionCoroutine(ScreenshotResolution desiredCaptureResolution)
		{
			return null;
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xA50B38", Offset = "0xA50B38", VA = "0xA50B38")]
		public ScreenshotComposer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000459")]
	public class ScreenshotComposition
	{
		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_Active;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_Name;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotComposer m_Composer;

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xA51870", Offset = "0xA51870", VA = "0xA51870")]
		public ScreenshotComposition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045A")]
	public class ScreenshotConfig
	{
		[Token(Token = "0x200075D")]
		public enum AntiAliasing
		{
			[Token(Token = "0x4003125")]
			NONE = 0,
			[Token(Token = "0x4003126")]
			TWO = 2,
			[Token(Token = "0x4003127")]
			FOUR = 4,
			[Token(Token = "0x4003128")]
			EIGHT = 8
		}

		[Token(Token = "0x200075E")]
		public enum ShotMode
		{
			[Token(Token = "0x400312A")]
			ONE_SHOT,
			[Token(Token = "0x400312B")]
			BURST
		}

		[Token(Token = "0x200075F")]
		public enum CamerasMode
		{
			[Token(Token = "0x400312D")]
			GAME_VIEW,
			[Token(Token = "0x400312E")]
			CUSTOM_CAMERAS
		}

		[Token(Token = "0x2000760")]
		public enum ResolutionMode
		{
			[Token(Token = "0x4003130")]
			GAME_VIEW,
			[Token(Token = "0x4003131")]
			CUSTOM_RESOLUTIONS
		}

		[Token(Token = "0x2000761")]
		public enum CompositionMode
		{
			[Token(Token = "0x4003133")]
			SIMPLE_CAPTURE,
			[Token(Token = "0x4003134")]
			COMPOSITION
		}

		[Token(Token = "0x2000762")]
		public enum BatchMode
		{
			[Token(Token = "0x4003136")]
			SIMPLE_CAPTURE,
			[Token(Token = "0x4003137")]
			BATCHES
		}

		[Serializable]
		[Token(Token = "0x2000763")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E048", Offset = "0x85E048")]
		private sealed class <>c
		{
			[Token(Token = "0x4003138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ScreenshotComposition, bool> <>9__46_0;

			[Token(Token = "0x400313A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ScreenshotBatch, bool> <>9__50_0;

			[Token(Token = "0x6002F4D")]
			[Address(RVA = "0xA53208", Offset = "0xA53208", VA = "0xA53208")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0xA53210", Offset = "0xA53210", VA = "0xA53210")]
			internal bool <GetActiveCompositions>b__46_0(ScreenshotComposition x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F4F")]
			[Address(RVA = "0xA53228", Offset = "0xA53228", VA = "0xA53228")]
			internal bool <GetActiveBatches>b__50_0(ScreenshotBatch x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScreenshotNameParser.DestinationFolder m_DestinationFolder;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_RelativePath;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_RootedPath;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_FileName;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B20C", Offset = "0x86B20C")]
		public bool m_OverrideFiles;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B244", Offset = "0x86B244")]
		public TextureExporter.ImageFileFormat m_FileFormat;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_JPGQuality;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ScreenshotTaker.CaptureMode m_CaptureMode;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AntiAliasing m_MultisamplingAntiAliasing;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B27C", Offset = "0x86B27C")]
		public ScreenshotTaker.ColorFormat m_ColorFormat;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B2B4", Offset = "0x86B2B4")]
		public bool m_RecomputeAlphaLayer;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ShotMode m_ShotMode;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int m_MaxBurstShotsNumber;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_ShotTimeStep;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B2EC", Offset = "0x86B2EC")]
		public CamerasMode m_CameraMode;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B324", Offset = "0x86B324")]
		public bool m_ExportToDifferentLayers;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<ScreenshotCamera> m_Cameras;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B35C", Offset = "0x86B35C")]
		public ResolutionMode m_ResolutionCaptureMode;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<ScreenshotResolution> m_Resolutions;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ScreenshotResolution m_GameViewResolution;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B394", Offset = "0x86B394")]
		public bool m_CaptureActiveUICanvas;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<ScreenshotOverlay> m_Overlays;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CompositionMode m_CompositionMode;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<ScreenshotComposition> m_Compositions;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BatchMode m_BatchMode;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<ScreenshotBatch> m_Batches;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool m_ShowGuidesInPreview;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Canvas m_GuideCanvas;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Color m_GuidesColor;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool m_ShowPreview;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float m_PreviewSize;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B3CC", Offset = "0x86B3CC")]
		public bool m_PreviewInGameViewWhilePlaying;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B404", Offset = "0x86B404")]
		public bool m_DontDestroyOnLoad;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool m_StopTimeOnCapture;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		public bool m_PlaySoundOnCapture;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip m_ShotSound;

		[NonSerialized]
		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_Time;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public HotKey m_CaptureHotkey;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public HotKey m_UpdatePreviewHotkey;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public HotKey m_AlignHotkey;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public HotKey m_PauseHotkey;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public ScreenshotTaker.GameViewResizingWaitingMode m_GameViewResizingWaitingMode;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float m_ResizingWaitingTime;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int m_ResizingWaitingFrames;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool m_ShowDestination;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		public bool m_ShowName;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		public bool m_ShowCaptureMode;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
		public bool m_ShowResolutions;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool m_ShowCameras;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool m_ShowCanvas;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		public bool m_ShowComposition;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		public bool m_ShowBatches;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public bool m_ShowPreviewGUI;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
		public bool m_ShowCapture;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
		public bool m_ShowHotkeys;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x127")]
		public bool m_ShowGallery;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool m_ShowUtils;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool m_ShowUsage;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public bool m_ShowDelay;

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xA518D0", Offset = "0xA518D0", VA = "0xA518D0")]
		public ScreenshotConfig()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xA51BF8", Offset = "0xA51BF8", VA = "0xA51BF8")]
		public string GetPath()
		{
			return null;
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xA51C14", Offset = "0xA51C14", VA = "0xA51C14")]
		public List<ScreenshotCamera> GetActiveCameras()
		{
			return null;
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xA51DB4", Offset = "0xA51DB4", VA = "0xA51DB4")]
		public void AlignToView()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xA4F27C", Offset = "0xA4F27C", VA = "0xA4F27C")]
		public ScreenshotResolution GetFirstActiveResolution()
		{
			return null;
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xA51DB8", Offset = "0xA51DB8", VA = "0xA51DB8")]
		public List<ScreenshotResolution> GetActiveResolutions()
		{
			return null;
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xA51F88", Offset = "0xA51F88", VA = "0xA51F88")]
		public void UpdateGameviewResolution()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xA51B3C", Offset = "0xA51B3C", VA = "0xA51B3C")]
		protected void InitGameViewResolution()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xA51FEC", Offset = "0xA51FEC", VA = "0xA51FEC")]
		public void UpdateResolutionFilenames(List<ScreenshotResolution> resolutions)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xA5216C", Offset = "0xA5216C", VA = "0xA5216C")]
		public string ParseFileName(ScreenshotResolution resolution, DateTime time)
		{
			return null;
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xA52114", Offset = "0xA52114", VA = "0xA52114")]
		public void UpdateFileName(ScreenshotResolution resolution, DateTime time)
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xA522BC", Offset = "0xA522BC", VA = "0xA522BC")]
		public void UpdateRatios()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xA52480", Offset = "0xA52480", VA = "0xA52480")]
		public void SetAllPortait()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xA52574", Offset = "0xA52574", VA = "0xA52574")]
		public void SetAllLandscape()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xA52664", Offset = "0xA52664", VA = "0xA52664")]
		public void SelectAllResolutions()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xA52758", Offset = "0xA52758", VA = "0xA52758")]
		public void ClearAllResolutions()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xA52848", Offset = "0xA52848", VA = "0xA52848")]
		public void RemoveAllResolutions()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xA528A0", Offset = "0xA528A0", VA = "0xA528A0")]
		public List<ScreenshotComposition> GetActiveCompositions()
		{
			return null;
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xA529A0", Offset = "0xA529A0", VA = "0xA529A0")]
		public List<ScreenshotBatch> GetActiveBatches()
		{
			return null;
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xA52AA0", Offset = "0xA52AA0", VA = "0xA52AA0")]
		public void UpdatBatchesData()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xA52F10", Offset = "0xA52F10", VA = "0xA52F10")]
		public void SetTime(float time)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xA52F2C", Offset = "0xA52F2C", VA = "0xA52F2C")]
		public void TogglePause()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xA52F6C", Offset = "0xA52F6C", VA = "0xA52F6C")]
		public void ClearCache()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xA4F958", Offset = "0xA4F958", VA = "0xA4F958")]
		public void ExportAllToFiles()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xA53068", Offset = "0xA53068", VA = "0xA53068")]
		public void ExportToFiles(List<ScreenshotResolution> resolutions)
		{
		}
	}
	[Token(Token = "0x200045B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85C190", Offset = "0x85C190")]
	public class ScreenshotManager : MonoBehaviour
	{
		[Token(Token = "0x2000764")]
		public delegate void ExportDelegate(ScreenshotResolution res);

		[Token(Token = "0x2000765")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E058", Offset = "0x85E058")]
		private sealed class <UpdateAllCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400313B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400313C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400313D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotManager <>4__this;

			[Token(Token = "0x17000515")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F57")]
				[Address(RVA = "0xA54F6C", Offset = "0xA54F6C", VA = "0xA54F6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000516")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F59")]
				[Address(RVA = "0xA54FD4", Offset = "0xA54FD4", VA = "0xA54FD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F54")]
			[Address(RVA = "0xA53A38", Offset = "0xA53A38", VA = "0xA53A38")]
			[DebuggerHidden]
			public <UpdateAllCoroutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002F55")]
			[Address(RVA = "0xA54EC0", Offset = "0xA54EC0", VA = "0xA54EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F56")]
			[Address(RVA = "0xA54EC4", Offset = "0xA54EC4", VA = "0xA54EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F58")]
			[Address(RVA = "0xA54F74", Offset = "0xA54F74", VA = "0xA54F74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000766")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E068", Offset = "0x85E068")]
		private sealed class <CaptureAllCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400313E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400313F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotManager <>4__this;

			[Token(Token = "0x17000517")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F5D")]
				[Address(RVA = "0xA54A8C", Offset = "0xA54A8C", VA = "0xA54A8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000518")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F5F")]
				[Address(RVA = "0xA54AF4", Offset = "0xA54AF4", VA = "0xA54AF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F5A")]
			[Address(RVA = "0xA53A64", Offset = "0xA53A64", VA = "0xA53A64")]
			[DebuggerHidden]
			public <CaptureAllCoroutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002F5B")]
			[Address(RVA = "0xA549E0", Offset = "0xA549E0", VA = "0xA549E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F5C")]
			[Address(RVA = "0xA549E4", Offset = "0xA549E4", VA = "0xA549E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F5E")]
			[Address(RVA = "0xA54A94", Offset = "0xA54A94", VA = "0xA54A94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E078", Offset = "0x85E078")]
		private sealed class <CaptureCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotManager <>4__this;

			[Token(Token = "0x4003144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<ScreenshotResolution> resolutions;

			[Token(Token = "0x4003145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool export;

			[Token(Token = "0x4003146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool playSoundMask;

			[Token(Token = "0x4003147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__2;

			[Token(Token = "0x17000519")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F63")]
				[Address(RVA = "0xA54E50", Offset = "0xA54E50", VA = "0xA54E50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F65")]
				[Address(RVA = "0xA54EB8", Offset = "0xA54EB8", VA = "0xA54EB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F60")]
			[Address(RVA = "0xA53A90", Offset = "0xA53A90", VA = "0xA53A90")]
			[DebuggerHidden]
			public <CaptureCoroutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002F61")]
			[Address(RVA = "0xA54AFC", Offset = "0xA54AFC", VA = "0xA54AFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F62")]
			[Address(RVA = "0xA54B00", Offset = "0xA54B00", VA = "0xA54B00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F64")]
			[Address(RVA = "0xA54E58", Offset = "0xA54E58", VA = "0xA54E58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E088", Offset = "0x85E088")]
		private sealed class <>c
		{
			[Token(Token = "0x4003148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ScreenshotBatch.ActiveItem, bool> <>9__24_0;

			[Token(Token = "0x400314A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ScreenshotBatch.ActiveItem, bool> <>9__24_2;

			[Token(Token = "0x6002F67")]
			[Address(RVA = "0xA54998", Offset = "0xA54998", VA = "0xA54998")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F68")]
			[Address(RVA = "0xA549A0", Offset = "0xA549A0", VA = "0xA549A0")]
			internal bool <UpdateCoroutine>b__24_0(ScreenshotBatch.ActiveItem x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F69")]
			[Address(RVA = "0xA549B8", Offset = "0xA549B8", VA = "0xA549B8")]
			internal bool <UpdateCoroutine>b__24_2(ScreenshotBatch.ActiveItem x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002F6A")]
			[Address(RVA = "0xA549D0", Offset = "0xA549D0", VA = "0xA549D0")]
			internal void <.cctor>b__38_0()
			{
			}

			[Token(Token = "0x6002F6B")]
			[Address(RVA = "0xA549D4", Offset = "0xA549D4", VA = "0xA549D4")]
			internal void <.cctor>b__38_1()
			{
			}

			[Token(Token = "0x6002F6C")]
			[Address(RVA = "0xA549D8", Offset = "0xA549D8", VA = "0xA549D8")]
			internal void <.cctor>b__38_2(ScreenshotResolution res)
			{
			}

			[Token(Token = "0x6002F6D")]
			[Address(RVA = "0xA549DC", Offset = "0xA549DC", VA = "0xA549DC")]
			internal void <.cctor>b__38_3(ScreenshotResolution res)
			{
			}
		}

		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E098", Offset = "0x85E098")]
		private sealed class <UpdateCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400314B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400314C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400314D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotManager <>4__this;

			[Token(Token = "0x400314E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<ScreenshotResolution> resolutions;

			[Token(Token = "0x400314F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<ScreenshotCamera> cameras;

			[Token(Token = "0x4003150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool playSoundMask;

			[Token(Token = "0x4003151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<ScreenshotOverlay> overlays;

			[Token(Token = "0x4003152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool export;

			[Token(Token = "0x4003153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private DateTime <startTime>5__2;

			[Token(Token = "0x4003154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private List<ScreenshotBatch> <batches>5__3;

			[Token(Token = "0x4003155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <b>5__4;

			[Token(Token = "0x4003156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private ScreenshotBatch <currentBatch>5__5;

			[Token(Token = "0x4003157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private List<ScreenshotResolution> <resToCapture>5__6;

			[Token(Token = "0x4003158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private List<ScreenshotComposition> <compositionsToCapture>5__7;

			[Token(Token = "0x4003159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private int <c>5__8;

			[Token(Token = "0x400315A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private ScreenshotComposition <currentComposition>5__9;

			[Token(Token = "0x400315B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<ScreenshotResolution>.Enumerator <>7__wrap9;

			[Token(Token = "0x400315C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private ScreenshotResolution <resolution>5__11;

			[Token(Token = "0x400315D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private int <l>5__12;

			[Token(Token = "0x400315E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private ScreenshotCamera <separatedLayerCamera>5__13;

			[Token(Token = "0x400315F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private List<ScreenshotCamera> <currentCameras>5__14;

			[Token(Token = "0x4003160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private List<ScreenshotProcess>.Enumerator <>7__wrap14;

			[Token(Token = "0x1700051B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F74")]
				[Address(RVA = "0xA5642C", Offset = "0xA5642C", VA = "0xA5642C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F76")]
				[Address(RVA = "0xA56494", Offset = "0xA56494", VA = "0xA56494", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F6E")]
			[Address(RVA = "0xA53B70", Offset = "0xA53B70", VA = "0xA53B70")]
			[DebuggerHidden]
			public <UpdateCoroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002F6F")]
			[Address(RVA = "0xA54FDC", Offset = "0xA54FDC", VA = "0xA54FDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F70")]
			[Address(RVA = "0xA5518C", Offset = "0xA5518C", VA = "0xA5518C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F71")]
			[Address(RVA = "0xA55134", Offset = "0xA55134", VA = "0xA55134")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002F72")]
			[Address(RVA = "0xA55084", Offset = "0xA55084", VA = "0xA55084")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002F73")]
			[Address(RVA = "0xA550DC", Offset = "0xA550DC", VA = "0xA550DC")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6002F75")]
			[Address(RVA = "0xA56434", Offset = "0xA56434", VA = "0xA56434", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E0A8", Offset = "0x85E0A8")]
		private sealed class <UpdatePreviewCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotManager <>4__this;

			[Token(Token = "0x1700051D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F7A")]
				[Address(RVA = "0xA567F4", Offset = "0xA567F4", VA = "0xA567F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F7C")]
				[Address(RVA = "0xA5685C", Offset = "0xA5685C", VA = "0xA5685C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F77")]
			[Address(RVA = "0xA54180", Offset = "0xA54180", VA = "0xA54180")]
			[DebuggerHidden]
			public <UpdatePreviewCoroutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6002F78")]
			[Address(RVA = "0xA5649C", Offset = "0xA5649C", VA = "0xA5649C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F79")]
			[Address(RVA = "0xA564A0", Offset = "0xA564A0", VA = "0xA564A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F7B")]
			[Address(RVA = "0xA567FC", Offset = "0xA567FC", VA = "0xA567FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenshotConfig m_Config;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ScreenshotTaker m_ScreenshotTaker;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_IsBurstActive;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_IsCapturing;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UnityAction onCaptureBeginDelegate;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction onCaptureEndDelegate;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ExportDelegate onResolutionExportSuccessDelegate;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ExportDelegate onResolutionExportFailureDelegate;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ScreenshotComposer m_CurrentComposerInstance;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ScreenshotResolution> m_PreviewList;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ScreenshotOverlay> m_PreviewOverlayList;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScreenshotOverlay m_GuidesOverlay;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject m_GuideInstance;

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xA53240", Offset = "0xA53240", VA = "0xA53240")]
		public void Awake()
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xA53564", Offset = "0xA53564", VA = "0xA53564")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xA5331C", Offset = "0xA5331C", VA = "0xA5331C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xA533A0", Offset = "0xA533A0", VA = "0xA533A0")]
		public void ClearCache()
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xA53774", Offset = "0xA53774", VA = "0xA53774")]
		private void Update()
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xA53568", Offset = "0xA53568", VA = "0xA53568")]
		protected void InitScreenshotTaker()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xA537AC", Offset = "0xA537AC", VA = "0xA537AC")]
		protected void HandleHotkeys()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xA4F4D8", Offset = "0xA4F4D8", VA = "0xA4F4D8")]
		public void Capture()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xA4F66C", Offset = "0xA4F66C", VA = "0xA4F66C")]
		public void UpdateAll()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xA53968", Offset = "0xA53968", VA = "0xA53968")]
		public void UpdateResolutions(List<ScreenshotResolution> resolutions)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xA538F8", Offset = "0xA538F8", VA = "0xA538F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874A8C", Offset = "0x874A8C")]
		public IEnumerator UpdateAllCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xA53888", Offset = "0xA53888", VA = "0xA53888")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874AF0", Offset = "0x874AF0")]
		public IEnumerator CaptureAllCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xA5399C", Offset = "0xA5399C", VA = "0xA5399C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874B54", Offset = "0x874B54")]
		public IEnumerator CaptureCoroutine(List<ScreenshotResolution> resolutions, bool export = true, bool playSoundMask = true)
		{
			return null;
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xA53880", Offset = "0xA53880", VA = "0xA53880")]
		public void StopBurst()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xA53ABC", Offset = "0xA53ABC", VA = "0xA53ABC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874BB8", Offset = "0x874BB8")]
		protected IEnumerator UpdateCoroutine(List<ScreenshotResolution> resolutions, List<ScreenshotCamera> cameras, List<ScreenshotOverlay> overlays, bool export = true, bool playSoundMask = true)
		{
			return null;
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xA53B9C", Offset = "0xA53B9C", VA = "0xA53B9C")]
		public void UpdateFileName(ScreenshotResolution resolution, DateTime time, string currentCamera = "", string currentBatch = "", string currentComposer = "")
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xA53FE0", Offset = "0xA53FE0", VA = "0xA53FE0")]
		private void PlaySound()
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xA540E4", Offset = "0xA540E4", VA = "0xA540E4", Slot = "4")]
		public virtual void UpdatePreview()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xA54110", Offset = "0xA54110", VA = "0xA54110")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874C1C", Offset = "0x874C1C")]
		public IEnumerator UpdatePreviewCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xA5343C", Offset = "0xA5343C", VA = "0xA5343C")]
		protected void InitIngamePreview()
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xA54278", Offset = "0xA54278", VA = "0xA54278")]
		protected void ShowGuides()
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xA543E8", Offset = "0xA543E8", VA = "0xA543E8")]
		protected void SetColorRecursive(Canvas canvas, Color color)
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xA544CC", Offset = "0xA544CC", VA = "0xA544CC")]
		protected void HideGuides()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xA54604", Offset = "0xA54604", VA = "0xA54604")]
		public ScreenshotManager()
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xA54824", Offset = "0xA54824", VA = "0xA54824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874C80", Offset = "0x874C80")]
		private ScreenshotResolution <UpdateCoroutine>b__24_1(ScreenshotBatch.ActiveItem x)
		{
			return null;
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xA548AC", Offset = "0xA548AC", VA = "0xA548AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x874C90", Offset = "0x874C90")]
		private ScreenshotComposition <UpdateCoroutine>b__24_3(ScreenshotBatch.ActiveItem x)
		{
			return null;
		}
	}
	[Token(Token = "0x200045C")]
	public class ScreenshotNameParser
	{
		[Token(Token = "0x200076B")]
		public enum DestinationFolder
		{
			[Token(Token = "0x4003165")]
			CUSTOM_FOLDER,
			[Token(Token = "0x4003166")]
			DATA_PATH,
			[Token(Token = "0x4003167")]
			PERSISTENT_DATA_PATH,
			[Token(Token = "0x4003168")]
			PICTURES_FOLDER
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xA56894", Offset = "0xA56894", VA = "0xA56894")]
		public static string ParseSymbols(string name, ScreenshotResolution resolution, DateTime time)
		{
			return null;
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xA56D54", Offset = "0xA56D54", VA = "0xA56D54")]
		public static string ParseExtension(TextureExporter.ImageFileFormat format)
		{
			return null;
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xA4E310", Offset = "0xA4E310", VA = "0xA4E310")]
		public static string ParsePath(DestinationFolder destinationFolder, string customPath)
		{
			return null;
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xA5219C", Offset = "0xA5219C", VA = "0xA5219C")]
		public static string ParseFileName(string screenshotName, ScreenshotResolution resolution, DestinationFolder destination, string customPath, TextureExporter.ImageFileFormat format, bool overrideFiles, DateTime time)
		{
			return null;
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xA53CA0", Offset = "0xA53CA0", VA = "0xA53CA0")]
		public static string PreventOverride(string fullname)
		{
			return null;
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xA56DB0", Offset = "0xA56DB0", VA = "0xA56DB0")]
		public ScreenshotNameParser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045D")]
	public class ScreenshotOverlay
	{
		[Token(Token = "0x200076C")]
		public class Settings
		{
			[Token(Token = "0x4003169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_Enabled;

			[Token(Token = "0x400316A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool m_GameObjectEnabled;

			[Token(Token = "0x6002F7D")]
			[Address(RVA = "0xA57060", Offset = "0xA57060", VA = "0xA57060")]
			public Settings(bool enabled, bool go)
			{
			}
		}

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Canvas m_Canvas;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_Active;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stack<Settings> m_SettingStack;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas m_Instance;

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xA56DB8", Offset = "0xA56DB8", VA = "0xA56DB8")]
		public ScreenshotOverlay()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xA56768", Offset = "0xA56768", VA = "0xA56768")]
		public ScreenshotOverlay(Canvas canvas)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xA56E30", Offset = "0xA56E30", VA = "0xA56E30")]
		public void ApplySettings()
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xA570A4", Offset = "0xA570A4", VA = "0xA570A4")]
		public void Disable()
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xA571DC", Offset = "0xA571DC", VA = "0xA571DC")]
		public void RestoreSettings()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class ScreenshotProcess : MonoBehaviour
	{
		[Token(Token = "0x200076D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E0B8", Offset = "0x85E0B8")]
		private sealed class <ProcessCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400316B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400316C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400316D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotProcess <>4__this;

			[Token(Token = "0x1700051F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F81")]
				[Address(RVA = "0xA57484", Offset = "0xA57484", VA = "0xA57484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000520")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F83")]
				[Address(RVA = "0xA574EC", Offset = "0xA574EC", VA = "0xA574EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F7E")]
			[Address(RVA = "0xA573B4", Offset = "0xA573B4", VA = "0xA573B4")]
			[DebuggerHidden]
			public <ProcessCoroutine>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002F7F")]
			[Address(RVA = "0xA573E4", Offset = "0xA573E4", VA = "0xA573E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F80")]
			[Address(RVA = "0xA573E8", Offset = "0xA573E8", VA = "0xA573E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F82")]
			[Address(RVA = "0xA5748C", Offset = "0xA5748C", VA = "0xA5748C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xA57340", Offset = "0xA57340", VA = "0xA57340", Slot = "4")]
		public virtual void Process(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xA57344", Offset = "0xA57344", VA = "0xA57344", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874CA0", Offset = "0x874CA0")]
		public virtual IEnumerator ProcessCoroutine(ScreenshotResolution res)
		{
			return null;
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xA573E0", Offset = "0xA573E0", VA = "0xA573E0")]
		protected void ForceGameViewRepaint()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xA4BAA4", Offset = "0xA4BAA4", VA = "0xA4BAA4")]
		public ScreenshotProcess()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045F")]
	public class ScreenshotResolution
	{
		[Token(Token = "0x200076E")]
		public enum Orientation
		{
			[Token(Token = "0x400316F")]
			LANDSCAPE,
			[Token(Token = "0x4003170")]
			PORTRAIT
		}

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool m_Active;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int m_Width;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_Height;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Scale;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Orientation m_Orientation;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public string m_ResolutionName;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public string m_Category;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public string m_Platform;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_PPI;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B47C", Offset = "0x86B47C")]
		public int m_ForcedUnityPPI;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Canvas m_DeviceCanvas;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public string m_Ratio;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public string m_FileName;

		[NonSerialized]
		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D m_Texture;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool m_IgnoreOrientation;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Rect m_SafeAreaPortrait;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Rect m_SafeAreaLandscapeLeft;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Rect m_SafeAreaLandscapeRight;

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xA513C0", Offset = "0xA513C0", VA = "0xA513C0")]
		public ScreenshotResolution()
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xA574F4", Offset = "0xA574F4", VA = "0xA574F4")]
		public ScreenshotResolution(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xA57594", Offset = "0xA57594", VA = "0xA57594")]
		public void Copy(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xA57630", Offset = "0xA57630", VA = "0xA57630")]
		public ScreenshotResolution(int width, int height)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xA576D0", Offset = "0xA576D0", VA = "0xA576D0")]
		public ScreenshotResolution(string category, int width, int height, string name = "", int dpi = 0)
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xA523B0", Offset = "0xA523B0", VA = "0xA523B0")]
		public void UpdateRatio()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xA57798", Offset = "0xA57798", VA = "0xA57798")]
		private int GCD(int a, int b)
		{
			return default(int);
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xA51F64", Offset = "0xA51F64", VA = "0xA51F64")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xA577BC", Offset = "0xA577BC", VA = "0xA577BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xA51448", Offset = "0xA51448", VA = "0xA51448")]
		public int ComputeTargetWidth()
		{
			return default(int);
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xA51484", Offset = "0xA51484", VA = "0xA51484")]
		public int ComputeTargetHeight()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000460")]
	[ExecuteInEditMode]
	public class ScreenshotTaker : MonoBehaviour
	{
		[Token(Token = "0x200076F")]
		public enum ColorFormat
		{
			[Token(Token = "0x4003172")]
			RGB,
			[Token(Token = "0x4003173")]
			RGBA
		}

		[Token(Token = "0x2000770")]
		public enum CaptureMode
		{
			[Token(Token = "0x4003175")]
			GAMEVIEW_RESIZING,
			[Token(Token = "0x4003176")]
			RENDER_TO_TEXTURE,
			[Token(Token = "0x4003177")]
			FIXED_GAMEVIEW
		}

		[Token(Token = "0x2000771")]
		public enum GameViewResizingWaitingMode
		{
			[Token(Token = "0x4003179")]
			FRAMES,
			[Token(Token = "0x400317A")]
			TIME
		}

		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E0C8", Offset = "0x85E0C8")]
		private sealed class <CaptureScreenToTextureCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400317B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400317C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400317D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotTaker <>4__this;

			[Token(Token = "0x400317E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D texture;

			[Token(Token = "0x400317F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool captureGameUI;

			[Token(Token = "0x4003180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public ColorFormat colorFormat;

			[Token(Token = "0x4003181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool recomputeAlphaMask;

			[Token(Token = "0x17000521")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F87")]
				[Address(RVA = "0xA5B1B8", Offset = "0xA5B1B8", VA = "0xA5B1B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000522")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F89")]
				[Address(RVA = "0xA5B220", Offset = "0xA5B220", VA = "0xA5B220", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F84")]
			[Address(RVA = "0xA57B74", Offset = "0xA57B74", VA = "0xA57B74")]
			[DebuggerHidden]
			public <CaptureScreenToTextureCoroutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002F85")]
			[Address(RVA = "0xA5B100", Offset = "0xA5B100", VA = "0xA5B100", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F86")]
			[Address(RVA = "0xA5B104", Offset = "0xA5B104", VA = "0xA5B104", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F88")]
			[Address(RVA = "0xA5B1C0", Offset = "0xA5B1C0", VA = "0xA5B1C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000773")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E0D8", Offset = "0x85E0D8")]
		private sealed class <CaptureCamerasToTextureCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotTaker <>4__this;

			[Token(Token = "0x4003185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D texture;

			[Token(Token = "0x4003186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int width;

			[Token(Token = "0x4003187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int height;

			[Token(Token = "0x4003188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Camera> cameras;

			[Token(Token = "0x4003189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int antiAliasing;

			[Token(Token = "0x400318A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public ColorFormat colorFormat;

			[Token(Token = "0x400318B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool recomputeAlphaMask;

			[Token(Token = "0x17000523")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F8D")]
				[Address(RVA = "0xA5A910", Offset = "0xA5A910", VA = "0xA5A910", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000524")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F8F")]
				[Address(RVA = "0xA5A978", Offset = "0xA5A978", VA = "0xA5A978", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F8A")]
			[Address(RVA = "0xA57BA0", Offset = "0xA57BA0", VA = "0xA57BA0")]
			[DebuggerHidden]
			public <CaptureCamerasToTextureCoroutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002F8B")]
			[Address(RVA = "0xA5A860", Offset = "0xA5A860", VA = "0xA5A860", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F8C")]
			[Address(RVA = "0xA5A864", Offset = "0xA5A864", VA = "0xA5A864", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F8E")]
			[Address(RVA = "0xA5A918", Offset = "0xA5A918", VA = "0xA5A918", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E0E8", Offset = "0x85E0E8")]
		private sealed class <CaptureToTextureCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400318C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400318D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400318E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D texture;

			[Token(Token = "0x400318F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int width;

			[Token(Token = "0x4003190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int height;

			[Token(Token = "0x4003191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenshotTaker <>4__this;

			[Token(Token = "0x4003192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Camera> cameras;

			[Token(Token = "0x4003193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<Canvas> canvas;

			[Token(Token = "0x4003194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public CaptureMode captureMode;

			[Token(Token = "0x4003195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int antiAliasing;

			[Token(Token = "0x4003196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool captureGameUI;

			[Token(Token = "0x4003197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public ColorFormat colorFormat;

			[Token(Token = "0x4003198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool recomputeAlphaMask;

			[Token(Token = "0x17000525")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F93")]
				[Address(RVA = "0xA5B39C", Offset = "0xA5B39C", VA = "0xA5B39C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000526")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F95")]
				[Address(RVA = "0xA5B404", Offset = "0xA5B404", VA = "0xA5B404", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F90")]
			[Address(RVA = "0xA57CA8", Offset = "0xA57CA8", VA = "0xA57CA8")]
			[DebuggerHidden]
			public <CaptureToTextureCoroutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002F91")]
			[Address(RVA = "0xA5B228", Offset = "0xA5B228", VA = "0xA5B228", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F92")]
			[Address(RVA = "0xA5B22C", Offset = "0xA5B22C", VA = "0xA5B22C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F94")]
			[Address(RVA = "0xA5B3A4", Offset = "0xA5B3A4", VA = "0xA5B3A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E0F8", Offset = "0x85E0F8")]
		private sealed class <CaptureResolutionCoroutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400319A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400319B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Camera> cameras;

			[Token(Token = "0x400319C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Canvas> canvas;

			[Token(Token = "0x400319D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ScreenshotTaker <>4__this;

			[Token(Token = "0x400319E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ScreenshotResolution captureResolution;

			[Token(Token = "0x400319F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CaptureMode captureMode;

			[Token(Token = "0x40031A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int antiAliasing;

			[Token(Token = "0x40031A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool captureGameUI;

			[Token(Token = "0x40031A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public ColorFormat colorFormat;

			[Token(Token = "0x40031A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool recomputeAlphaMask;

			[Token(Token = "0x17000527")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F99")]
				[Address(RVA = "0xA5ACB8", Offset = "0xA5ACB8", VA = "0xA5ACB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000528")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F9B")]
				[Address(RVA = "0xA5AD20", Offset = "0xA5AD20", VA = "0xA5AD20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F96")]
			[Address(RVA = "0xA57CD4", Offset = "0xA57CD4", VA = "0xA57CD4")]
			[DebuggerHidden]
			public <CaptureResolutionCoroutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002F97")]
			[Address(RVA = "0xA5A980", Offset = "0xA5A980", VA = "0xA5A980", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F98")]
			[Address(RVA = "0xA5A984", Offset = "0xA5A984", VA = "0xA5A984", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0xA5ACC0", Offset = "0xA5ACC0", VA = "0xA5ACC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E108", Offset = "0x85E108")]
		private sealed class <CaptureAllCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<ScreenshotResolution> resolutions;

			[Token(Token = "0x40031A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<ScreenshotCamera> cameras;

			[Token(Token = "0x40031A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CaptureMode captureMode;

			[Token(Token = "0x40031A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<ScreenshotOverlay> overlays;

			[Token(Token = "0x40031AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool stopTime;

			[Token(Token = "0x40031AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ScreenshotTaker <>4__this;

			[Token(Token = "0x40031AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool captureGameUI;

			[Token(Token = "0x40031AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public ColorFormat colorFormat;

			[Token(Token = "0x40031AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool recomputeAlphaMask;

			[Token(Token = "0x40031AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int antiAliasing;

			[Token(Token = "0x40031B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool restore;

			[Token(Token = "0x40031B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private List<ScreenshotResolution>.Enumerator <>7__wrap1;

			[Token(Token = "0x40031B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private ScreenshotResolution <resolution>5__3;

			[Token(Token = "0x17000529")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FA0")]
				[Address(RVA = "0xA5A27C", Offset = "0xA5A27C", VA = "0xA5A27C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FA2")]
				[Address(RVA = "0xA5A2E4", Offset = "0xA5A2E4", VA = "0xA5A2E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F9C")]
			[Address(RVA = "0xA57D00", Offset = "0xA57D00", VA = "0xA57D00")]
			[DebuggerHidden]
			public <CaptureAllCoroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002F9D")]
			[Address(RVA = "0xA59BD0", Offset = "0xA59BD0", VA = "0xA59BD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F9E")]
			[Address(RVA = "0xA59C54", Offset = "0xA59C54", VA = "0xA59C54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F9F")]
			[Address(RVA = "0xA59BFC", Offset = "0xA59BFC", VA = "0xA59BFC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002FA1")]
			[Address(RVA = "0xA5A284", Offset = "0xA5A284", VA = "0xA5A284", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E118", Offset = "0x85E118")]
		private sealed class <CaptureResolutionTextureCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotTaker <>4__this;

			[Token(Token = "0x40031B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenshotResolution resolution;

			[Token(Token = "0x40031B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ColorFormat colorFormat;

			[Token(Token = "0x40031B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public CaptureMode captureMode;

			[Token(Token = "0x40031B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int antiAliasing;

			[Token(Token = "0x40031BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__2;

			[Token(Token = "0x1700052B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FA6")]
				[Address(RVA = "0xA5B090", Offset = "0xA5B090", VA = "0xA5B090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FA8")]
				[Address(RVA = "0xA5B0F8", Offset = "0xA5B0F8", VA = "0xA5B0F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FA3")]
			[Address(RVA = "0xA57DC4", Offset = "0xA57DC4", VA = "0xA57DC4")]
			[DebuggerHidden]
			public <CaptureResolutionTextureCoroutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002FA4")]
			[Address(RVA = "0xA5AD28", Offset = "0xA5AD28", VA = "0xA5AD28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FA5")]
			[Address(RVA = "0xA5AD2C", Offset = "0xA5AD2C", VA = "0xA5AD2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FA7")]
			[Address(RVA = "0xA5B098", Offset = "0xA5B098", VA = "0xA5B098", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E128", Offset = "0x85E128")]
		private sealed class <MultiDisplayCopyRenderBufferToTextureCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotTaker <>4__this;

			[Token(Token = "0x40031BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D targetTexture;

			[Token(Token = "0x40031BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private MultiDisplayCameraCapture <capture>5__2;

			[Token(Token = "0x1700052D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FAC")]
				[Address(RVA = "0xA5B5C4", Offset = "0xA5B5C4", VA = "0xA5B5C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FAE")]
				[Address(RVA = "0xA5B62C", Offset = "0xA5B62C", VA = "0xA5B62C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FA9")]
			[Address(RVA = "0xA58738", Offset = "0xA58738", VA = "0xA58738")]
			[DebuggerHidden]
			public <MultiDisplayCopyRenderBufferToTextureCoroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002FAA")]
			[Address(RVA = "0xA5B40C", Offset = "0xA5B40C", VA = "0xA5B40C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FAB")]
			[Address(RVA = "0xA5B410", Offset = "0xA5B410", VA = "0xA5B410", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FAD")]
			[Address(RVA = "0xA5B5CC", Offset = "0xA5B5CC", VA = "0xA5B5CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000779")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E138", Offset = "0x85E138")]
		private sealed class <CaptureAlphaMaskCoroutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotTaker <>4__this;

			[Token(Token = "0x40031C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenshotResolution resolution;

			[Token(Token = "0x40031C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CaptureMode captureMode;

			[Token(Token = "0x40031C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int antiAliasing;

			[Token(Token = "0x40031C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ColorFormat colorFormat;

			[Token(Token = "0x40031C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Camera <firstCamera>5__2;

			[Token(Token = "0x40031C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CameraClearFlags <clearMode>5__3;

			[Token(Token = "0x40031C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Color <clearColor>5__4;

			[Token(Token = "0x40031CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Texture2D <whiteTexture>5__5;

			[Token(Token = "0x1700052F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FB2")]
				[Address(RVA = "0xA5A7F0", Offset = "0xA5A7F0", VA = "0xA5A7F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000530")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FB4")]
				[Address(RVA = "0xA5A858", Offset = "0xA5A858", VA = "0xA5A858", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FAF")]
			[Address(RVA = "0xA59864", Offset = "0xA59864", VA = "0xA59864")]
			[DebuggerHidden]
			public <CaptureAlphaMaskCoroutine>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6002FB0")]
			[Address(RVA = "0xA5A2EC", Offset = "0xA5A2EC", VA = "0xA5A2EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0xA5A2F0", Offset = "0xA5A2F0", VA = "0xA5A2F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FB3")]
			[Address(RVA = "0xA5A7F8", Offset = "0xA5A7F8", VA = "0xA5A7F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E148", Offset = "0x85E148")]
		private sealed class <>c
		{
			[Token(Token = "0x40031CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002FB6")]
			[Address(RVA = "0xA59BBC", Offset = "0xA59BBC", VA = "0xA59BBC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002FB7")]
			[Address(RVA = "0xA59BC4", Offset = "0xA59BC4", VA = "0xA59BC4")]
			internal void <.cctor>b__49_0(ScreenshotResolution res)
			{
			}

			[Token(Token = "0x6002FB8")]
			[Address(RVA = "0xA59BC8", Offset = "0xA59BC8", VA = "0xA59BC8")]
			internal void <.cctor>b__49_1(ScreenshotResolution res)
			{
			}

			[Token(Token = "0x6002FB9")]
			[Address(RVA = "0xA59BCC", Offset = "0xA59BCC", VA = "0xA59BCC")]
			internal void <.cctor>b__49_2(ScreenshotResolution res)
			{
			}
		}

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D m_Texture;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public GameViewResizingWaitingMode m_GameViewResizingWaitingMode;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float m_GameViewResizingWaitingTime;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int m_GameViewResizingWaitingFrames;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<ScreenshotResolution, RenderTexture> m_RenderTextureCache;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static bool m_IsRunning;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ScreenshotCamera> m_Cameras;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ScreenshotCamera> m_SceneCameras;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ScreenshotOverlay> m_Overlays;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<ScreenshotOverlay> m_SceneOverlays;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction<ScreenshotResolution> onResolutionUpdateStartDelegate;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityAction<ScreenshotResolution> onResolutionUpdateEndDelegate;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static UnityAction<ScreenshotResolution> onResolutionScreenResizedDelegate;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_PreviousTimeScale;

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xA57A9C", Offset = "0xA57A9C", VA = "0xA57A9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xA57B2C", Offset = "0xA57B2C", VA = "0xA57B2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xA57AA0", Offset = "0xA57AA0", VA = "0xA57AA0")]
		public void Reset()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xA5371C", Offset = "0xA5371C", VA = "0xA5371C")]
		public void ClearCache()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xA4AADC", Offset = "0xA4AADC", VA = "0xA4AADC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874D04", Offset = "0x874D04")]
		public IEnumerator CaptureScreenToTextureCoroutine(Texture2D texture, bool captureGameUI = true, ColorFormat colorFormat = ColorFormat.RGB, bool recomputeAlphaMask = false)
		{
			return null;
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xA4A7A8", Offset = "0xA4A7A8", VA = "0xA4A7A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874D68", Offset = "0x874D68")]
		public IEnumerator CaptureCamerasToTextureCoroutine(Texture2D texture, int width, int height, List<Camera> cameras, int antiAliasing = 8, ColorFormat colorFormat = ColorFormat.RGB, bool recomputeAlphaMask = false)
		{
			return null;
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xA57BCC", Offset = "0xA57BCC", VA = "0xA57BCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874DCC", Offset = "0x874DCC")]
		public IEnumerator CaptureToTextureCoroutine(Texture2D texture, int width, int height, [Optional] List<Camera> cameras, [Optional] List<Canvas> canvas, CaptureMode captureMode = CaptureMode.RENDER_TO_TEXTURE, int antiAliasing = 8, bool captureGameUI = true, ColorFormat colorFormat = ColorFormat.RGB, bool recomputeAlphaMask = false)
		{
			return null;
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xA50D14", Offset = "0xA50D14", VA = "0xA50D14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874E30", Offset = "0x874E30")]
		public IEnumerator CaptureResolutionCoroutine(ScreenshotResolution captureResolution, [Optional] List<Camera> cameras, [Optional] List<Canvas> canvas, CaptureMode captureMode = CaptureMode.RENDER_TO_TEXTURE, int antiAliasing = 8, bool captureGameUI = true, ColorFormat colorFormat = ColorFormat.RGB, bool recomputeAlphaMask = false)
		{
			return null;
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xA514C0", Offset = "0xA514C0", VA = "0xA514C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874E94", Offset = "0x874E94")]
		public IEnumerator CaptureAllCoroutine(List<ScreenshotResolution> resolutions, List<ScreenshotCamera> cameras, List<ScreenshotOverlay> overlays, CaptureMode captureMode, int antiAliasing = 8, bool captureGameUI = true, ColorFormat colorFormat = ColorFormat.RGB, bool recomputeAlphaMask = false, bool stopTime = false, bool restore = true)
		{
			return null;
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xA57D2C", Offset = "0xA57D2C", VA = "0xA57D2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874EF8", Offset = "0x874EF8")]
		private IEnumerator CaptureResolutionTextureCoroutine(ScreenshotResolution resolution, CaptureMode captureMode, int antiAliasing, ColorFormat colorFormat)
		{
			return null;
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xA57DF0", Offset = "0xA57DF0", VA = "0xA57DF0")]
		public void CopyScreenToTexture(Texture2D targetTexture)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xA57E8C", Offset = "0xA57E8C", VA = "0xA57E8C")]
		public void RenderCamerasToTexture(List<ScreenshotCamera> cameras, Texture2D targetTexture, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xA58128", Offset = "0xA58128", VA = "0xA58128")]
		private Camera GetFirstActiveCamera()
		{
			return null;
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xA583EC", Offset = "0xA583EC", VA = "0xA583EC")]
		private Camera GetLastActiveCamera()
		{
			return null;
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xA586BC", Offset = "0xA586BC", VA = "0xA586BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874F5C", Offset = "0x874F5C")]
		private IEnumerator MultiDisplayCopyRenderBufferToTextureCoroutine(Texture2D targetTexture)
		{
			return null;
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xA58764", Offset = "0xA58764", VA = "0xA58764")]
		private Texture2D GetOrCreateTexture(ScreenshotResolution resolution, ColorFormat colorFormat, bool noScale = false)
		{
			return null;
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xA58958", Offset = "0xA58958", VA = "0xA58958")]
		private RenderTexture GetOrCreateRenderTexture(ScreenshotResolution resolution, int antiAliasing = 0)
		{
			return null;
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xA541AC", Offset = "0xA541AC", VA = "0xA541AC")]
		public void ApplySettings(List<ScreenshotCamera> cameras, List<ScreenshotOverlay> overlays, CaptureMode captureMode, bool renderUI)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xA57B3C", Offset = "0xA57B3C", VA = "0xA57B3C")]
		private void RestoreSettings()
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xA59798", Offset = "0xA59798", VA = "0xA59798")]
		private void StopTime()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xA57B30", Offset = "0xA57B30", VA = "0xA57B30")]
		private void RestoreTime()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xA59060", Offset = "0xA59060", VA = "0xA59060")]
		private List<ScreenshotOverlay> FindAllOtherSceneCanvas(List<ScreenshotOverlay> overlays)
		{
			return null;
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xA592FC", Offset = "0xA592FC", VA = "0xA592FC")]
		private void DisableCanvas(List<ScreenshotOverlay> overlays)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xA593E4", Offset = "0xA593E4", VA = "0xA593E4")]
		private void ApplyOverlaySettings(List<ScreenshotOverlay> overlays)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xA5965C", Offset = "0xA5965C", VA = "0xA5965C")]
		public void RestoreOverlaySettings(List<ScreenshotOverlay> overlays)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xA58BB8", Offset = "0xA58BB8", VA = "0xA58BB8")]
		private List<ScreenshotCamera> FindAllOtherSceneCameras(List<ScreenshotCamera> cameras)
		{
			return null;
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xA58E28", Offset = "0xA58E28", VA = "0xA58E28")]
		private void DisableCameras(List<ScreenshotCamera> cameras)
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xA59520", Offset = "0xA59520", VA = "0xA59520")]
		public void RestoreCameraSettings(List<ScreenshotCamera> cameras)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xA58F10", Offset = "0xA58F10", VA = "0xA58F10")]
		private void ApplyCameraSettings(List<ScreenshotCamera> cameras, CaptureMode captureMode)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xA597CC", Offset = "0xA597CC", VA = "0xA597CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x874FC0", Offset = "0x874FC0")]
		private IEnumerator CaptureAlphaMaskCoroutine(ScreenshotResolution resolution, CaptureMode captureMode, int antiAliasing, ColorFormat colorFormat)
		{
			return null;
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xA59890", Offset = "0xA59890", VA = "0xA59890")]
		private static void CopyTexture(Texture2D src, Texture2D dest)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xA59908", Offset = "0xA59908", VA = "0xA59908")]
		public ScreenshotTaker()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public static class SimpleScreenshotCapture
	{
		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E158", Offset = "0x85E158")]
		private sealed class <CaptureCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int width;

			[Token(Token = "0x40031CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int height;

			[Token(Token = "0x40031D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string fileName;

			[Token(Token = "0x40031D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Camera> cameras;

			[Token(Token = "0x40031D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Canvas> canvas;

			[Token(Token = "0x40031D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ScreenshotTaker.CaptureMode captureMode;

			[Token(Token = "0x40031D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int antiAliasing;

			[Token(Token = "0x40031D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool captureGameUI;

			[Token(Token = "0x40031D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public ScreenshotTaker.ColorFormat colorFormat;

			[Token(Token = "0x40031D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool recomputeAlphaMask;

			[Token(Token = "0x40031D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public TextureExporter.ImageFileFormat fileFormat;

			[Token(Token = "0x40031D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int JPGQuality;

			[Token(Token = "0x40031DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ScreenshotResolution <captureResolution>5__2;

			[Token(Token = "0x17000531")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FBD")]
				[Address(RVA = "0xA5BD34", Offset = "0xA5BD34", VA = "0xA5BD34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000532")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FBF")]
				[Address(RVA = "0xA5BD9C", Offset = "0xA5BD9C", VA = "0xA5BD9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FBA")]
			[Address(RVA = "0xA5B928", Offset = "0xA5B928", VA = "0xA5B928")]
			[DebuggerHidden]
			public <CaptureCoroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002FBB")]
			[Address(RVA = "0xA5B954", Offset = "0xA5B954", VA = "0xA5B954", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FBC")]
			[Address(RVA = "0xA5B958", Offset = "0xA5B958", VA = "0xA5B958", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FBE")]
			[Address(RVA = "0xA5BD3C", Offset = "0xA5BD3C", VA = "0xA5BD3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ScreenshotTaker m_ScreenshotTaker;

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xA5B634", Offset = "0xA5B634", VA = "0xA5B634")]
		private static void InitScreenshotTaker()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xA4ACF4", Offset = "0xA4ACF4", VA = "0xA4ACF4")]
		public static void CaptureScreen(string fileName, TextureExporter.ImageFileFormat fileFormat = TextureExporter.ImageFileFormat.PNG, int JPGQuality = 100, bool captureGameUI = true, ScreenshotTaker.ColorFormat colorFormat = ScreenshotTaker.ColorFormat.RGB, bool recomputeAlphaMask = false)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xA4AD80", Offset = "0xA4AD80", VA = "0xA4AD80")]
		public static void CaptureCameras(string fileName, int width, int height, List<Camera> cameras, TextureExporter.ImageFileFormat fileFormat = TextureExporter.ImageFileFormat.PNG, int JPGQuality = 100, int antiAliasing = 8, ScreenshotTaker.ColorFormat colorFormat = ScreenshotTaker.ColorFormat.RGB, bool recomputeAlphaMask = false)
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xA5B754", Offset = "0xA5B754", VA = "0xA5B754")]
		public static void Capture(string fileName, int width, int height, TextureExporter.ImageFileFormat fileFormat = TextureExporter.ImageFileFormat.PNG, int JPGQuality = 100, [Optional] List<Camera> cameras, [Optional] List<Canvas> canvas, ScreenshotTaker.CaptureMode captureMode = ScreenshotTaker.CaptureMode.RENDER_TO_TEXTURE, int antiAliasing = 8, bool captureGameUI = true, ScreenshotTaker.ColorFormat colorFormat = ScreenshotTaker.ColorFormat.RGB, bool recomputeAlphaMask = false)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xA5B848", Offset = "0xA5B848", VA = "0xA5B848")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875024", Offset = "0x875024")]
		public static IEnumerator CaptureCoroutine(string fileName, int width, int height, TextureExporter.ImageFileFormat fileFormat = TextureExporter.ImageFileFormat.PNG, int JPGQuality = 100, [Optional] List<Camera> cameras, [Optional] List<Canvas> canvas, ScreenshotTaker.CaptureMode captureMode = ScreenshotTaker.CaptureMode.RENDER_TO_TEXTURE, int antiAliasing = 8, bool captureGameUI = true, ScreenshotTaker.ColorFormat colorFormat = ScreenshotTaker.ColorFormat.RGB, bool recomputeAlphaMask = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000462")]
	public class UltimateScreenshotCreator
	{
		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string VERSION;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string AUTHOR;

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xA5C150", Offset = "0xA5C150", VA = "0xA5C150")]
		public UltimateScreenshotCreator()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class AndroidUtils
	{
		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xA4B388", Offset = "0xA4B388", VA = "0xA4B388")]
		public static bool IsPrimaryStorageAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xA4B390", Offset = "0xA4B390", VA = "0xA4B390")]
		public static string GetPrimaryStorage()
		{
			return null;
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xA4B3D8", Offset = "0xA4B3D8", VA = "0xA4B3D8")]
		public static string GetExternalFilesDir()
		{
			return null;
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xA4B724", Offset = "0xA4B724", VA = "0xA4B724")]
		public static string GetFirstAvailableMediaStorage()
		{
			return null;
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xA4B798", Offset = "0xA4B798", VA = "0xA4B798")]
		public static List<string> GetAvailableSecondaryStorages()
		{
			return null;
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xA4B6DC", Offset = "0xA4B6DC", VA = "0xA4B6DC")]
		public static string GetPictureFolder()
		{
			return null;
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xA4B7FC", Offset = "0xA4B7FC", VA = "0xA4B7FC")]
		public static string GetDirectoryName(string directoryType = "DIRECTORY_PICTURES")
		{
			return null;
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xA4B844", Offset = "0xA4B844", VA = "0xA4B844")]
		public static bool HasPermissionToAccessExternalStorage()
		{
			return default(bool);
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xA4B84C", Offset = "0xA4B84C", VA = "0xA4B84C")]
		public static int GetAndroidSDKVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xA4B8D4", Offset = "0xA4B8D4", VA = "0xA4B8D4")]
		public static bool HasPermission(string permissionName)
		{
			return default(bool);
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xA4B8DC", Offset = "0xA4B8DC", VA = "0xA4B8DC")]
		public static void AddImageToGallery(string file)
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xA4B8E0", Offset = "0xA4B8E0", VA = "0xA4B8E0")]
		public AndroidUtils()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public static class GameViewController
	{
		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xA4F988", Offset = "0xA4F988", VA = "0xA4F988")]
		public static void SaveCurrentGameViewSize()
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xA4F9F4", Offset = "0xA4F9F4", VA = "0xA4F9F4")]
		public static void SetGameViewSize(int width, int height)
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xA4FA60", Offset = "0xA4FA60", VA = "0xA4FA60")]
		public static void RestoreGameViewSize()
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xA4FACC", Offset = "0xA4FACC", VA = "0xA4FACC")]
		public static Vector2 GetCurrentGameViewSize()
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000465")]
	public class TextureExporter
	{
		[Token(Token = "0x200077C")]
		public enum ImageFileFormat
		{
			[Token(Token = "0x40031DC")]
			PNG,
			[Token(Token = "0x40031DD")]
			JPG
		}

		[Serializable]
		[Token(Token = "0x200077D")]
		public class ImageFile
		{
			[Token(Token = "0x40031DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D m_Texture;

			[Token(Token = "0x40031DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_Name;

			[Token(Token = "0x40031E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string m_Fullname;

			[Token(Token = "0x40031E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DateTime m_CreationDate;

			[Token(Token = "0x6002FC0")]
			[Address(RVA = "0xA5C140", Offset = "0xA5C140", VA = "0xA5C140")]
			public ImageFile()
			{
			}
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xA5BDA4", Offset = "0xA5BDA4", VA = "0xA5BDA4")]
		public static bool CreateExportDirectory(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xA5319C", Offset = "0xA5319C", VA = "0xA5319C")]
		public static bool ExportToFile(Texture2D texture, string fullpath, ImageFileFormat imageFormat, int JPGQuality = 70, bool addToGallery = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xA5BFE0", Offset = "0xA5BFE0", VA = "0xA5BFE0")]
		public static Texture2D LoadFromFile(string fullname)
		{
			return null;
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xA4E400", Offset = "0xA4E400", VA = "0xA4E400")]
		public static List<ImageFile> LoadFromPath(string path)
		{
			return null;
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xA5C148", Offset = "0xA5C148", VA = "0xA5C148")]
		public TextureExporter()
		{
		}
	}
}
namespace AlmostEngine.Screenshot.Extra
{
	[Token(Token = "0x2000466")]
	public class ChangeLanguageProcess : ScreenshotProcess
	{
		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_LanguageID;

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xA4B8E8", Offset = "0xA4B8E8", VA = "0xA4B8E8", Slot = "4")]
		public override void Process(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xA4BA9C", Offset = "0xA4BA9C", VA = "0xA4BA9C")]
		public ChangeLanguageProcess()
		{
		}
	}
	[Token(Token = "0x2000467")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85C214", Offset = "0x85C214")]
	public class GreyboxCanvas : MonoBehaviour
	{
		[Token(Token = "0x200077E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E168", Offset = "0x85E168")]
		private sealed class <DelayedUpdate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GreyboxCanvas <>4__this;

			[Token(Token = "0x17000533")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FC4")]
				[Address(RVA = "0xA4C054", Offset = "0xA4C054", VA = "0xA4C054", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000534")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FC6")]
				[Address(RVA = "0xA4C0BC", Offset = "0xA4C0BC", VA = "0xA4C0BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FC1")]
			[Address(RVA = "0xA4BB5C", Offset = "0xA4BB5C", VA = "0xA4BB5C")]
			[DebuggerHidden]
			public <DelayedUpdate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002FC2")]
			[Address(RVA = "0xA4BFA8", Offset = "0xA4BFA8", VA = "0xA4BFA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FC3")]
			[Address(RVA = "0xA4BFAC", Offset = "0xA4BFAC", VA = "0xA4BFAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FC5")]
			[Address(RVA = "0xA4C05C", Offset = "0xA4C05C", VA = "0xA4C05C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform m_ImageContainer;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform m_PreviousButton;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_NextButton;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform m_CloseButton;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text m_PageText;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text m_FileName;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScreenshotGallery m_Gallery;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_CurrentImageId;

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xA4BAAC", Offset = "0xA4BAAC", VA = "0xA4BAAC")]
		public void SetImage(ScreenshotGallery gallery, int i)
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xA4BAC0", Offset = "0xA4BAC0", VA = "0xA4BAC0", Slot = "4")]
		public virtual void UpdateUI()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xA4BAEC", Offset = "0xA4BAEC", VA = "0xA4BAEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875088", Offset = "0x875088")]
		public IEnumerator DelayedUpdate()
		{
			return null;
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xA4BB88", Offset = "0xA4BB88", VA = "0xA4BB88", Slot = "5")]
		public virtual void DoUpdate()
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xA4BE88", Offset = "0xA4BE88", VA = "0xA4BE88", Slot = "6")]
		public virtual void NextPageCallback()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xA4BEA0", Offset = "0xA4BEA0", VA = "0xA4BEA0", Slot = "7")]
		public virtual void PreviousPageCallback()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xA4BEB8", Offset = "0xA4BEB8", VA = "0xA4BEB8", Slot = "8")]
		public virtual void CloseCallback()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xA4BF20", Offset = "0xA4BF20", VA = "0xA4BF20", Slot = "9")]
		public virtual void RemoveCallback()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xA4BFA0", Offset = "0xA4BFA0", VA = "0xA4BFA0")]
		public GreyboxCanvas()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class GridGalleryCanvas : ScreenshotGallery
	{
		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GridLayoutGroup m_Grid;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RectTransform m_PreviousButton;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RectTransform m_NextButton;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text m_PageText;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int m_CurrentPage;

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xA4C0C4", Offset = "0xA4C0C4", VA = "0xA4C0C4", Slot = "12")]
		public virtual int MaxPages()
		{
			return default(int);
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xA4C160", Offset = "0xA4C160", VA = "0xA4C160", Slot = "13")]
		public virtual int ImagesPerPage()
		{
			return default(int);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xA4C2A0", Offset = "0xA4C2A0", VA = "0xA4C2A0", Slot = "9")]
		public override void DoGalleryUpdate()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xA4C678", Offset = "0xA4C678", VA = "0xA4C678", Slot = "14")]
		public virtual void NextPageCallback()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xA4C690", Offset = "0xA4C690", VA = "0xA4C690", Slot = "15")]
		public virtual void PreviousPageCallback()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xA4C6A8", Offset = "0xA4C6A8", VA = "0xA4C6A8", Slot = "16")]
		public virtual void CloseCallback()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xA4C6D0", Offset = "0xA4C6D0", VA = "0xA4C6D0")]
		public GridGalleryCanvas()
		{
		}
	}
	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85C278", Offset = "0x85C278")]
	public abstract class ScreenshotGallery : MonoBehaviour
	{
		[Token(Token = "0x200077F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E178", Offset = "0x85E178")]
		private sealed class <DelayedUpdate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotGallery <>4__this;

			[Token(Token = "0x17000535")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FCA")]
				[Address(RVA = "0xA4EC38", Offset = "0xA4EC38", VA = "0xA4EC38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000536")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FCC")]
				[Address(RVA = "0xA4ECA0", Offset = "0xA4ECA0", VA = "0xA4ECA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FC7")]
			[Address(RVA = "0xA4E264", Offset = "0xA4E264", VA = "0xA4E264")]
			[DebuggerHidden]
			public <DelayedUpdate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0xA4EB8C", Offset = "0xA4EB8C", VA = "0xA4EB8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FC9")]
			[Address(RVA = "0xA4EB90", Offset = "0xA4EB90", VA = "0xA4EB90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FCB")]
			[Address(RVA = "0xA4EC40", Offset = "0xA4EC40", VA = "0xA4EC40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E188", Offset = "0x85E188")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40031E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScreenshotGallery <>4__this;

			[Token(Token = "0x40031E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x6002FCD")]
			[Address(RVA = "0xA4E990", Offset = "0xA4E990", VA = "0xA4E990")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002FCE")]
			[Address(RVA = "0xA4EB64", Offset = "0xA4EB64", VA = "0xA4EB64")]
			internal void <InstantiateImageObject>b__0()
			{
			}
		}

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B534", Offset = "0x86B534")]
		public string m_ScreenshotFolderPath;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotNameParser.DestinationFolder m_DestinationFolder;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B56C", Offset = "0x86B56C")]
		public GreyboxCanvas m_GreyBox;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B5A4", Offset = "0x86B5A4")]
		public GameObject m_ImageItemPrefab;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<TextureExporter.ImageFile> m_ImageFiles;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public List<GameObject> m_ImageInstances;

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xA4E174", Offset = "0xA4E174", VA = "0xA4E174", Slot = "4")]
		public virtual void Show()
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xA4E1C8", Offset = "0xA4E1C8", VA = "0xA4E1C8", Slot = "5")]
		public virtual void UpdateGallery()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xA4E1F4", Offset = "0xA4E1F4", VA = "0xA4E1F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8750EC", Offset = "0x8750EC")]
		public IEnumerator DelayedUpdate()
		{
			return null;
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xA4E290", Offset = "0xA4E290", VA = "0xA4E290", Slot = "6")]
		public virtual void LoadImageFiles()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xA4E644", Offset = "0xA4E644", VA = "0xA4E644", Slot = "7")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xA4E774", Offset = "0xA4E774", VA = "0xA4E774", Slot = "8")]
		public virtual GameObject InstantiateImageObject(TextureExporter.ImageFile image, int i, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6002103")]
		public abstract void DoGalleryUpdate();

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xA4E998", Offset = "0xA4E998", VA = "0xA4E998", Slot = "10")]
		public virtual void RemoveImage(int index)
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xA4EA78", Offset = "0xA4EA78", VA = "0xA4EA78", Slot = "11")]
		public virtual void OnSelectImageCallback(int id)
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xA4C6D4", Offset = "0xA4C6D4", VA = "0xA4C6D4")]
		protected ScreenshotGallery()
		{
		}
	}
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85C2DC", Offset = "0x85C2DC")]
	public class SetScreenshotGalleryFolderPath : MonoBehaviour
	{
		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B5EC", Offset = "0x86B5EC")]
		public ScreenshotManager m_Manager;

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xA4ECA8", Offset = "0xA4ECA8", VA = "0xA4ECA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xA4EDAC", Offset = "0xA4EDAC", VA = "0xA4EDAC")]
		public SetScreenshotGalleryFolderPath()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class HideOnCapture : MonoBehaviour
	{
		[Token(Token = "0x6002109")]
		[Address(RVA = "0xA4C784", Offset = "0xA4C784", VA = "0xA4C784")]
		private void Start()
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xA4C8C4", Offset = "0xA4C8C4", VA = "0xA4C8C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xA4CA04", Offset = "0xA4CA04", VA = "0xA4CA04")]
		private void Hide(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xA4CA2C", Offset = "0xA4CA2C", VA = "0xA4CA2C")]
		private void Show(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xA4CA54", Offset = "0xA4CA54", VA = "0xA4CA54")]
		public HideOnCapture()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class MessageCanvas : MonoBehaviour
	{
		[Token(Token = "0x2000781")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E198", Offset = "0x85E198")]
		private sealed class <DestroyMessageCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MessageCanvas <>4__this;

			[Token(Token = "0x40031ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject message;

			[Token(Token = "0x17000537")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FD2")]
				[Address(RVA = "0xA4D2EC", Offset = "0xA4D2EC", VA = "0xA4D2EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000538")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FD4")]
				[Address(RVA = "0xA4D354", Offset = "0xA4D354", VA = "0xA4D354", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FCF")]
			[Address(RVA = "0xA4D148", Offset = "0xA4D148", VA = "0xA4D148")]
			[DebuggerHidden]
			public <DestroyMessageCoroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002FD0")]
			[Address(RVA = "0xA4D1EC", Offset = "0xA4D1EC", VA = "0xA4D1EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FD1")]
			[Address(RVA = "0xA4D1F0", Offset = "0xA4D1F0", VA = "0xA4D1F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FD3")]
			[Address(RVA = "0xA4D2F4", Offset = "0xA4D2F4", VA = "0xA4D2F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform m_MessagePanel;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_MessagePrefab;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_DisplayTime;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> m_Messages;

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xA4CA5C", Offset = "0xA4CA5C", VA = "0xA4CA5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xA4CD4C", Offset = "0xA4CD4C", VA = "0xA4CD4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xA4CE74", Offset = "0xA4CE74", VA = "0xA4CE74")]
		public void ExportSuccessCallback(ScreenshotResolution resolution)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xA4D058", Offset = "0xA4D058", VA = "0xA4D058")]
		public void ExportFailureCallback(ScreenshotResolution resolution)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xA4CC34", Offset = "0xA4CC34", VA = "0xA4CC34")]
		private void Clear()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xA4CEE8", Offset = "0xA4CEE8", VA = "0xA4CEE8")]
		public void DisplayMessage(string text)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xA4D0CC", Offset = "0xA4D0CC", VA = "0xA4D0CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875150", Offset = "0x875150")]
		private IEnumerator DestroyMessageCoroutine(GameObject message)
		{
			return null;
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xA4D174", Offset = "0xA4D174", VA = "0xA4D174")]
		public MessageCanvas()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class RequestAuthAtStartup : MonoBehaviour
	{
		[Token(Token = "0x6002116")]
		[Address(RVA = "0xA4D35C", Offset = "0xA4D35C", VA = "0xA4D35C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xA4D360", Offset = "0xA4D360", VA = "0xA4D360")]
		public RequestAuthAtStartup()
		{
		}
	}
	[Token(Token = "0x200046E")]
	[ExecuteInEditMode]
	public class RotateScreenshot : MonoBehaviour
	{
		[Token(Token = "0x6002118")]
		[Address(RVA = "0xA4D368", Offset = "0xA4D368", VA = "0xA4D368")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xA4D4A8", Offset = "0xA4D4A8", VA = "0xA4D4A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xA4D58C", Offset = "0xA4D58C", VA = "0xA4D58C")]
		private void EndCallback(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xA4D594", Offset = "0xA4D594", VA = "0xA4D594")]
		public static void RotateTexture(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xA4D628", Offset = "0xA4D628", VA = "0xA4D628")]
		public static Texture2D RotateTexture(Texture2D tex)
		{
			return null;
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xA4D7AC", Offset = "0xA4D7AC", VA = "0xA4D7AC")]
		public RotateScreenshot()
		{
		}
	}
	[Token(Token = "0x200046F")]
	[ExecuteInEditMode]
	public class ScreenshotCutter : MonoBehaviour
	{
		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform m_SelectionArea;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_HideSelectionAreaDuringCapture;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_CropBorder;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_WasActive;

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xA4D7B4", Offset = "0xA4D7B4", VA = "0xA4D7B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xA4D9A4", Offset = "0xA4D9A4", VA = "0xA4D9A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xA4DAE4", Offset = "0xA4DAE4", VA = "0xA4DAE4")]
		private void StartCallback(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xA4DBD8", Offset = "0xA4DBD8", VA = "0xA4DBD8")]
		private void EndCallback(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xA4DB74", Offset = "0xA4DB74", VA = "0xA4DB74")]
		private void Hide()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xA4DC84", Offset = "0xA4DC84", VA = "0xA4DC84")]
		private void Show()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xA4DCC0", Offset = "0xA4DCC0", VA = "0xA4DCC0")]
		private void CropTexture(ScreenshotResolution res)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xA4E160", Offset = "0xA4E160", VA = "0xA4E160")]
		public ScreenshotCutter()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class ShowScreenshotThumbnail : MonoBehaviour
	{
		[Token(Token = "0x2000782")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E1A8", Offset = "0x85E1A8")]
		private sealed class <ShowCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShowScreenshotThumbnail <>4__this;

			[Token(Token = "0x17000539")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FD8")]
				[Address(RVA = "0xA4F2EC", Offset = "0xA4F2EC", VA = "0xA4F2EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FDA")]
				[Address(RVA = "0xA4F354", Offset = "0xA4F354", VA = "0xA4F354", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FD5")]
			[Address(RVA = "0xA4F008", Offset = "0xA4F008", VA = "0xA4F008")]
			[DebuggerHidden]
			public <ShowCoroutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002FD6")]
			[Address(RVA = "0xA4F044", Offset = "0xA4F044", VA = "0xA4F044", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FD7")]
			[Address(RVA = "0xA4F048", Offset = "0xA4F048", VA = "0xA4F048", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FD9")]
			[Address(RVA = "0xA4F2F4", Offset = "0xA4F2F4", VA = "0xA4F2F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ScreenshotManager m_ScreenshotManager;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas m_Canvas;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_ImageContainer;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RawImage m_Texture;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_DisplayDuration;

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xA4EDB4", Offset = "0xA4EDB4", VA = "0xA4EDB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xA4EE90", Offset = "0xA4EE90", VA = "0xA4EE90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xA4EF6C", Offset = "0xA4EF6C", VA = "0xA4EF6C")]
		public void OnCaptureEndDelegate()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xA4EF98", Offset = "0xA4EF98", VA = "0xA4EF98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8751B4", Offset = "0x8751B4")]
		public IEnumerator ShowCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xA4F034", Offset = "0xA4F034", VA = "0xA4F034")]
		public ShowScreenshotThumbnail()
		{
		}
	}
	[Token(Token = "0x2000471")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85C360", Offset = "0x85C360")]
	public class TakeScreenshotButton : MonoBehaviour
	{
		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button m_Button;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ScreenshotManager m_ScreenshotManager;

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xA4F35C", Offset = "0xA4F35C", VA = "0xA4F35C")]
		private void Start()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xA4F438", Offset = "0xA4F438", VA = "0xA4F438")]
		private void OnClickCallback()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xA4F504", Offset = "0xA4F504", VA = "0xA4F504")]
		public TakeScreenshotButton()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class ValidationCanvas : MonoBehaviour
	{
		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenshotManager m_ScreenshotManager;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas m_Canvas;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_ImageContainer;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RawImage m_Texture;

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xA4F50C", Offset = "0xA4F50C", VA = "0xA4F50C")]
		public void Capture()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xA4F698", Offset = "0xA4F698", VA = "0xA4F698")]
		public void OnCaptureEndDelegate()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xA4F8A0", Offset = "0xA4F8A0", VA = "0xA4F8A0")]
		public void OnDiscardCallback()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xA4F8E8", Offset = "0xA4F8E8", VA = "0xA4F8E8")]
		public void OnSaveCallback()
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xA4F980", Offset = "0xA4F980", VA = "0xA4F980")]
		public ValidationCanvas()
		{
		}
	}
}
namespace AlmostEngine.SimpleLocalization
{
	[Token(Token = "0x2000473")]
	public abstract class ISimpleLocalizer : MonoBehaviour
	{
		[Token(Token = "0x6002133")]
		public abstract void OnLanguageChanged(string ID);

		[Token(Token = "0x6002134")]
		public abstract void Save();

		[Token(Token = "0x6002135")]
		public abstract void Restore();

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xA5C1CC", Offset = "0xA5C1CC", VA = "0xA5C1CC")]
		protected ISimpleLocalizer()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class LanguageSwitcher : MonoBehaviour
	{
		[Token(Token = "0x6002137")]
		[Address(RVA = "0xA5C1D4", Offset = "0xA5C1D4", VA = "0xA5C1D4")]
		public void Set(string id)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xA5C238", Offset = "0xA5C238", VA = "0xA5C238")]
		public LanguageSwitcher()
		{
		}
	}
	[Token(Token = "0x2000475")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85C3C4", Offset = "0x85C3C4")]
	public class SimpleImageLocalizer : ISimpleLocalizer
	{
		[Serializable]
		[Token(Token = "0x2000783")]
		public class Localization : SerializableDictionary<string, Texture>
		{
			[Token(Token = "0x6002FDB")]
			[Address(RVA = "0xA5C56C", Offset = "0xA5C56C", VA = "0xA5C56C")]
			public Localization()
			{
			}
		}

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Texture m_OriginalTexture;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localization m_Localisations;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RawImage m_Image;

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xA5C240", Offset = "0xA5C240", VA = "0xA5C240")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xA5C308", Offset = "0xA5C308", VA = "0xA5C308", Slot = "4")]
		public override void OnLanguageChanged(string ID)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xA5C414", Offset = "0xA5C414", VA = "0xA5C414", Slot = "5")]
		public override void Save()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xA5C434", Offset = "0xA5C434", VA = "0xA5C434", Slot = "6")]
		public override void Restore()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xA5C508", Offset = "0xA5C508", VA = "0xA5C508")]
		public SimpleImageLocalizer()
		{
		}
	}
	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C438", Offset = "0x85C438")]
	public class SimpleLocalizationLanguagesAsset : ScriptableObject
	{
		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_DefaultLanguage;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> m_Languages;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string m_CurrentLanguageID;

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xA4B99C", Offset = "0xA4B99C", VA = "0xA4B99C")]
		public static void SetLanguage(string id)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xA5C5BC", Offset = "0xA5C5BC", VA = "0xA5C5BC")]
		public SimpleLocalizationLanguagesAsset()
		{
		}
	}
	[Token(Token = "0x2000477")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85C484", Offset = "0x85C484")]
	public class SimpleTextLocalizer : ISimpleLocalizer
	{
		[Serializable]
		[Token(Token = "0x2000784")]
		public class Localization : SerializableDictionary<string, string>
		{
			[Token(Token = "0x6002FDC")]
			[Address(RVA = "0xA5C9BC", Offset = "0xA5C9BC", VA = "0xA5C9BC")]
			public Localization()
			{
			}
		}

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public string m_OriginalText;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localization m_Localisations;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_Text;

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xA5C698", Offset = "0xA5C698", VA = "0xA5C698")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xA5C760", Offset = "0xA5C760", VA = "0xA5C760", Slot = "4")]
		public override void OnLanguageChanged(string ID)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xA5C850", Offset = "0xA5C850", VA = "0xA5C850", Slot = "5")]
		public override void Save()
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xA5C88C", Offset = "0xA5C88C", VA = "0xA5C88C", Slot = "6")]
		public override void Restore()
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xA5C948", Offset = "0xA5C948", VA = "0xA5C948")]
		public SimpleTextLocalizer()
		{
		}
	}
}
namespace AlmostEngine.Examples
{
	[Token(Token = "0x2000478")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_MouseLookOnClickOnly;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_RotationCoeff;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_TranslationCoeff;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_TranslationMouseCoeff;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_TranslationMouseScrollCoeff;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_Character;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform m_Head;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_Mouse;

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xA49D2C", Offset = "0xA49D2C", VA = "0xA49D2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xA49DEC", Offset = "0xA49DEC", VA = "0xA49DEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xA4A43C", Offset = "0xA4A43C", VA = "0xA4A43C")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xA4A50C", Offset = "0xA4A50C", VA = "0xA4A50C")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class Bounce : MonoBehaviour
	{
		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_Origin;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_Offset;

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xA49BAC", Offset = "0xA49BAC", VA = "0xA49BAC")]
		private void Start()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xA49C00", Offset = "0xA49C00", VA = "0xA49C00")]
		private void Update()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xA49D24", Offset = "0xA49D24", VA = "0xA49D24")]
		public Bounce()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class CaptureCameraToTextureExample : MonoBehaviour
	{
		[Token(Token = "0x2000785")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E1B8", Offset = "0x85E1B8")]
		private sealed class <CaptureToTexture>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CaptureCameraToTextureExample <>4__this;

			[Token(Token = "0x1700053B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FE0")]
				[Address(RVA = "0xA4A868", Offset = "0xA4A868", VA = "0xA4A868", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FE2")]
				[Address(RVA = "0xA4A8D0", Offset = "0xA4A8D0", VA = "0xA4A8D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FDD")]
			[Address(RVA = "0xA4A5C4", Offset = "0xA4A5C4", VA = "0xA4A5C4")]
			[DebuggerHidden]
			public <CaptureToTexture>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002FDE")]
			[Address(RVA = "0xA4A604", Offset = "0xA4A604", VA = "0xA4A604", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FDF")]
			[Address(RVA = "0xA4A608", Offset = "0xA4A608", VA = "0xA4A608", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FE1")]
			[Address(RVA = "0xA4A870", Offset = "0xA4A870", VA = "0xA4A870", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenshotTaker m_ScreenshotTaker;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImage m_RawImage;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D m_TargetTexture;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera m_Camera;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_Width;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_Height;

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xA4A528", Offset = "0xA4A528", VA = "0xA4A528")]
		public void Capture()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xA4A554", Offset = "0xA4A554", VA = "0xA4A554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875218", Offset = "0x875218")]
		private IEnumerator CaptureToTexture()
		{
			return null;
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xA4A5F0", Offset = "0xA4A5F0", VA = "0xA4A5F0")]
		public CaptureCameraToTextureExample()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class CaptureScreenToTextureExample : MonoBehaviour
	{
		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E1C8", Offset = "0x85E1C8")]
		private sealed class <CaptureToTexture>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CaptureScreenToTextureExample <>4__this;

			[Token(Token = "0x1700053D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FE6")]
				[Address(RVA = "0xA4AB80", Offset = "0xA4AB80", VA = "0xA4AB80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FE8")]
				[Address(RVA = "0xA4ABE8", Offset = "0xA4ABE8", VA = "0xA4ABE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FE3")]
			[Address(RVA = "0xA4A974", Offset = "0xA4A974", VA = "0xA4A974")]
			[DebuggerHidden]
			public <CaptureToTexture>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002FE4")]
			[Address(RVA = "0xA4A9A8", Offset = "0xA4A9A8", VA = "0xA4A9A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FE5")]
			[Address(RVA = "0xA4A9AC", Offset = "0xA4A9AC", VA = "0xA4A9AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FE7")]
			[Address(RVA = "0xA4AB88", Offset = "0xA4AB88", VA = "0xA4AB88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenshotTaker m_ScreenshotTaker;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImage m_RawImage;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D m_TargetTexture;

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xA4A8D8", Offset = "0xA4A8D8", VA = "0xA4A8D8")]
		public void Capture()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xA4A904", Offset = "0xA4A904", VA = "0xA4A904")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87527C", Offset = "0x87527C")]
		private IEnumerator CaptureToTexture()
		{
			return null;
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xA4A9A0", Offset = "0xA4A9A0", VA = "0xA4A9A0")]
		public CaptureScreenToTextureExample()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class CaptureScreenshotExample : MonoBehaviour
	{
		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_Width;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_Height;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_Scale;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_FullpathA;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_FullpathB;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode m_ShortcutA;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode m_ShortcutB;

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xA4ABF0", Offset = "0xA4ABF0", VA = "0xA4ABF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xA4ADCC", Offset = "0xA4ADCC", VA = "0xA4ADCC")]
		public CaptureScreenshotExample()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class MenuController : MonoBehaviour
	{
		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CameraController m_Player;

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xA4AE44", Offset = "0xA4AE44", VA = "0xA4AE44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xA4AEDC", Offset = "0xA4AEDC", VA = "0xA4AEDC")]
		public void OnButtonClickCallback()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xA4AF90", Offset = "0xA4AF90", VA = "0xA4AF90")]
		public MenuController()
		{
		}
	}
}
namespace CubicleNinjas.GuidedTaiChi
{
	[Token(Token = "0x200047E")]
	public class AchievementsManager : MonoBehaviour
	{
		[Token(Token = "0x40021C6")]
		private const string WORLDMASTER1 = "WORLDMASTER1";

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_worldMaster1Unlocked;

		[Token(Token = "0x170002EA")]
		public bool WorldMaster1
		{
			[Token(Token = "0x6002158")]
			[Address(RVA = "0xC05E70", Offset = "0xC05E70", VA = "0xC05E70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xC05E78", Offset = "0xC05E78", VA = "0xC05E78")]
		public void CheckForAchievementUpdates()
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xC05F88", Offset = "0xC05F88", VA = "0xC05F88")]
		public void RecordWorldTourFinished()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xC05FE4", Offset = "0xC05FE4", VA = "0xC05FE4")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xC05FEC", Offset = "0xC05FEC", VA = "0xC05FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8752E0", Offset = "0x8752E0")]
		private void <CheckForAchievementUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class ArcadeCompleteMenu : ContentMenu
	{
		[Token(Token = "0x2000787")]
		private class HighScoreData
		{
			[Token(Token = "0x40031F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Username;

			[Token(Token = "0x40031F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long Score;

			[Token(Token = "0x40031F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Rank;

			[Token(Token = "0x40031FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool IsCurrentUser;

			[Token(Token = "0x1700053F")]
			public string FormattedScore
			{
				[Token(Token = "0x6002FE9")]
				[Address(RVA = "0xF58D90", Offset = "0xF58D90", VA = "0xF58D90")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FEA")]
			[Address(RVA = "0xF59768", Offset = "0xF59768", VA = "0xF59768")]
			public HighScoreData()
			{
			}
		}

		[Token(Token = "0x2000788")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Serializable]
		[Token(Token = "0x2000789")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E1D8", Offset = "0x85E1D8")]
		private sealed class <>c
		{
			[Token(Token = "0x40031FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40031FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<HighScoreData, int> <>9__13_0;

			[Token(Token = "0x40031FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<HighScoreData, bool> <>9__13_1;

			[Token(Token = "0x40031FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<HighScoreData, bool> <>9__13_2;

			[Token(Token = "0x40031FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<HighScoreData, bool> <>9__13_3;

			[Token(Token = "0x4003200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__27_0;

			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0xF5A7CC", Offset = "0xF5A7CC", VA = "0xF5A7CC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002FF1")]
			[Address(RVA = "0xF5A7D4", Offset = "0xF5A7D4", VA = "0xF5A7D4")]
			internal int <DisplayScoreData>b__13_0(HighScoreData e)
			{
				return default(int);
			}

			[Token(Token = "0x6002FF2")]
			[Address(RVA = "0xF5A7EC", Offset = "0xF5A7EC", VA = "0xF5A7EC")]
			internal bool <DisplayScoreData>b__13_1(HighScoreData s)
			{
				return default(bool);
			}

			[Token(Token = "0x6002FF3")]
			[Address(RVA = "0xF5A804", Offset = "0xF5A804", VA = "0xF5A804")]
			internal bool <DisplayScoreData>b__13_2(HighScoreData s)
			{
				return default(bool);
			}

			[Token(Token = "0x6002FF4")]
			[Address(RVA = "0xF5A81C", Offset = "0xF5A81C", VA = "0xF5A81C")]
			internal bool <DisplayScoreData>b__13_3(HighScoreData s)
			{
				return default(bool);
			}

			[Token(Token = "0x6002FF5")]
			[Address(RVA = "0xF5A834", Offset = "0xF5A834", VA = "0xF5A834")]
			internal void <ReloadLevel>b__27_0()
			{
			}
		}

		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E1E8", Offset = "0x85E1E8")]
		private sealed class <ReloadLevel>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000540")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FF9")]
				[Address(RVA = "0xF5AFD8", Offset = "0xF5AFD8", VA = "0xF5AFD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000541")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FFB")]
				[Address(RVA = "0xF5B040", Offset = "0xF5B040", VA = "0xF5B040", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FF6")]
			[Address(RVA = "0xF5A334", Offset = "0xF5A334", VA = "0xF5A334")]
			[DebuggerHidden]
			public <ReloadLevel>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002FF7")]
			[Address(RVA = "0xF5A8F8", Offset = "0xF5A8F8", VA = "0xF5A8F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FF8")]
			[Address(RVA = "0xF5A8FC", Offset = "0xF5A8FC", VA = "0xF5A8FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FFA")]
			[Address(RVA = "0xF5AFE0", Offset = "0xF5AFE0", VA = "0xF5AFE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool busy;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup LeaderboardData;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text NoInternetText;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text TrackText;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text SessionText;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Image Separator;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject LoadingIcon;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text Ranks;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text Names;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text Scores;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text playerScoreText;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Text playerNameText;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _isFetching;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<string, List<HighScoreData>> _scoreData;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _foundUser;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DateTime _fetchTimeout;

		[Token(Token = "0x40021D8")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x40021D9")]
		private const int TOP_N_COUNT = 12;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x170002EB")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6002169")]
			[Address(RVA = "0xF5A504", Offset = "0xF5A504", VA = "0xF5A504")]
			set
			{
			}
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xF5817C", Offset = "0xF5817C", VA = "0xF5817C")]
		private string DisplayName()
		{
			return null;
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xF58284", Offset = "0xF58284", VA = "0xF58284")]
		private void DisplayScoreData()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xF58DE4", Offset = "0xF58DE4", VA = "0xF58DE4")]
		public void ClearAndSetup()
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xF58E4C", Offset = "0xF58E4C", VA = "0xF58E4C")]
		private void GetHighScoreData()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xF58F7C", Offset = "0xF58F7C", VA = "0xF58F7C")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xF59770", Offset = "0xF59770", VA = "0xF59770", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xF59A64", Offset = "0xF59A64", VA = "0xF59A64")]
		private void Start()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xF59EE4", Offset = "0xF59EE4", VA = "0xF59EE4")]
		private void SubmitScore(long score)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xF5A0C8", Offset = "0xF5A0C8", VA = "0xF5A0C8")]
		private void FinishedWritingUserScore(Message<bool> message)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xF5A0CC", Offset = "0xF5A0CC", VA = "0xF5A0CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xF59A04", Offset = "0xF59A04", VA = "0xF59A04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8752F0", Offset = "0x8752F0")]
		private IEnumerator ReloadLevel()
		{
			return null;
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xF5A360", Offset = "0xF5A360", VA = "0xF5A360")]
		public void NewSession()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xF5A50C", Offset = "0xF5A50C", VA = "0xF5A50C")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xF5A618", Offset = "0xF5A618", VA = "0xF5A618")]
		public ArcadeCompleteMenu()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xF5A6C0", Offset = "0xF5A6C0", VA = "0xF5A6C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875354", Offset = "0x875354")]
		private void <NewSession>b__28_0(float alpha)
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class BigTeacherController : MonoBehaviour
	{
		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float currentTime;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform teacherSpot;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform bigSpot;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 teacherScale;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float teacherBigMultiplier;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isBig;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool isVisible;

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xF5BA20", Offset = "0xF5BA20", VA = "0xF5BA20")]
		private void Start()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xF5BA24", Offset = "0xF5BA24", VA = "0xF5BA24")]
		public BigTeacherController()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class CalibrateMenu : ContentMenu
	{
		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject ConfirmButton;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text CalibrationValueText;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DateTime _lastCalibrationTime;

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xF5CCCC", Offset = "0xF5CCCC", VA = "0xF5CCCC", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xF5CFA8", Offset = "0xF5CFA8", VA = "0xF5CFA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xF5CFC8", Offset = "0xF5CFC8", VA = "0xF5CFC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xF5D430", Offset = "0xF5D430", VA = "0xF5D430")]
		public void ClearCalibration()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xF5D14C", Offset = "0xF5D14C", VA = "0xF5D14C")]
		public void ClickedCalibrate()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xF5D7B0", Offset = "0xF5D7B0", VA = "0xF5D7B0")]
		public void ClickedConfirm()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xF5DB9C", Offset = "0xF5DB9C", VA = "0xF5DB9C")]
		public CalibrateMenu()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class CalibrationPromptMenu : ContentMenu
	{
		[Token(Token = "0x6002176")]
		[Address(RVA = "0xF5DC14", Offset = "0xF5DC14", VA = "0xF5DC14", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xF5DE38", Offset = "0xF5DE38", VA = "0xF5DE38")]
		public void Back()
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xF5E054", Offset = "0xF5E054", VA = "0xF5E054")]
		public void ClickYes()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xF5E1E8", Offset = "0xF5E1E8", VA = "0xF5E1E8")]
		public CalibrationPromptMenu()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class CheckControllers : MonoBehaviour
	{
		[Token(Token = "0x200078B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E1F8", Offset = "0x85E1F8")]
		private sealed class <CheckControllersCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CheckControllers <>4__this;

			[Token(Token = "0x17000542")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002FFF")]
				[Address(RVA = "0xF5F6B8", Offset = "0xF5F6B8", VA = "0xF5F6B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000543")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003001")]
				[Address(RVA = "0xF5F720", Offset = "0xF5F720", VA = "0xF5F720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FFC")]
			[Address(RVA = "0xF5E37C", Offset = "0xF5E37C", VA = "0xF5E37C")]
			[DebuggerHidden]
			public <CheckControllersCoroutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002FFD")]
			[Address(RVA = "0xF5F60C", Offset = "0xF5F60C", VA = "0xF5F60C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FFE")]
			[Address(RVA = "0xF5F610", Offset = "0xF5F610", VA = "0xF5F610", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003000")]
			[Address(RVA = "0xF5F6C0", Offset = "0xF5F6C0", VA = "0xF5F6C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text controllerConnectedText;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject avatarNorth;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject avatarWest;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject avatarEast;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject timer;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject logo;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject bg;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject instructions;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject backButton;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioSource menuMusicPlayer;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource musicPreviewPlayer;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject pauseMenu;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MainMenu mainMenu;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NewSelectTrainingMenu trainingMenu;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SelectEnvironmentMenu environmentMenu;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SelectMusicMenu musicMenu;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private NewIntroManager introManager;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private OptionsMenuNew optionsMenu;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool pauseMenuShowing;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool controllersConnected;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool menuMusicPaused;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool justSwitchedActivationState;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		private bool leftControllerConnected;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		private bool rightControllerConnected;

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xF5E1F0", Offset = "0xF5E1F0", VA = "0xF5E1F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xF5E30C", Offset = "0xF5E30C", VA = "0xF5E30C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875364", Offset = "0x875364")]
		private IEnumerator CheckControllersCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xF5CA2C", Offset = "0xF5CA2C", VA = "0xF5CA2C")]
		public void CheckConnectedControllers()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xF5E3A8", Offset = "0xF5E3A8", VA = "0xF5E3A8")]
		private void ShowObjects(bool controllersConnected)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xF5F408", Offset = "0xF5F408", VA = "0xF5F408")]
		private void PauseMusic()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xF5F364", Offset = "0xF5F364", VA = "0xF5F364")]
		private void PauseTutorialVoiceover()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xF5F170", Offset = "0xF5F170", VA = "0xF5F170")]
		private void CheckPauseMenu()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xF5EE84", Offset = "0xF5EE84", VA = "0xF5EE84")]
		private void SetTextColorForButtons(GameObject buttonMenu)
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0xF5F51C", Offset = "0xF5F51C", VA = "0xF5F51C")]
		private void SetAlpha(GameObject obj, bool controllersConnected)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xF5F59C", Offset = "0xF5F59C", VA = "0xF5F59C")]
		public CheckControllers()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class CheckScreenFader : MonoBehaviour
	{
		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup CanvasGroup;

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xF5F728", Offset = "0xF5F728", VA = "0xF5F728")]
		private void Start()
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xF5F72C", Offset = "0xF5F72C", VA = "0xF5F72C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xF5FA6C", Offset = "0xF5FA6C", VA = "0xF5FA6C")]
		public CheckScreenFader()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class ClickScrollButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsUp;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image ArrowImage;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color _originalColor;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color _dimColor;

		[Token(Token = "0x6002188")]
		[Address(RVA = "0xF5FA74", Offset = "0xF5FA74", VA = "0xF5FA74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xF5FAF8", Offset = "0xF5FAF8", VA = "0xF5FAF8", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0xF5FC64", Offset = "0xF5FC64", VA = "0xF5FC64", Slot = "5")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xF5FD44", Offset = "0xF5FD44", VA = "0xF5FD44", Slot = "6")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xF5FD74", Offset = "0xF5FD74", VA = "0xF5FD74")]
		public ClickScrollButton()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class DebugMenu : MonoBehaviour
	{
		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image MenuHighlight;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image MovementHighlight;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isOnMenu;

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xF61324", Offset = "0xF61324", VA = "0xF61324")]
		private void Awake()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xF61368", Offset = "0xF61368", VA = "0xF61368")]
		private void Update()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xF61528", Offset = "0xF61528", VA = "0xF61528")]
		private void UpdateHighlight()
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xF61574", Offset = "0xF61574", VA = "0xF61574")]
		public DebugMenu()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class DeleteIfExists : MonoBehaviour
	{
		[Token(Token = "0x6002191")]
		[Address(RVA = "0xF61584", Offset = "0xF61584", VA = "0xF61584")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xF616B0", Offset = "0xF616B0", VA = "0xF616B0")]
		public DeleteIfExists()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class EnvironmentCycler : MonoBehaviour
	{
		[Token(Token = "0x200078C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E208", Offset = "0x85E208")]
		private sealed class <CycleScenes>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnvironmentCycler <>4__this;

			[Token(Token = "0x400320A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int numCycles;

			[Token(Token = "0x400320B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__2;

			[Token(Token = "0x400320C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <j>5__3;

			[Token(Token = "0x17000544")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003005")]
				[Address(RVA = "0xF62030", Offset = "0xF62030", VA = "0xF62030", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000545")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003007")]
				[Address(RVA = "0xF62098", Offset = "0xF62098", VA = "0xF62098", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003002")]
			[Address(RVA = "0xF61924", Offset = "0xF61924", VA = "0xF61924")]
			[DebuggerHidden]
			public <CycleScenes>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6003003")]
			[Address(RVA = "0xF61E74", Offset = "0xF61E74", VA = "0xF61E74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003004")]
			[Address(RVA = "0xF61E78", Offset = "0xF61E78", VA = "0xF61E78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003006")]
			[Address(RVA = "0xF62038", Offset = "0xF62038", VA = "0xF62038", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200078D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E218", Offset = "0x85E218")]
		private sealed class <LoadScene>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400320D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400320E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400320F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnvironmentCycler <>4__this;

			[Token(Token = "0x4003210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int sceneIndex;

			[Token(Token = "0x4003211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000546")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600300B")]
				[Address(RVA = "0xF622D8", Offset = "0xF622D8", VA = "0xF622D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000547")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600300D")]
				[Address(RVA = "0xF62340", Offset = "0xF62340", VA = "0xF62340", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003008")]
			[Address(RVA = "0xF619D0", Offset = "0xF619D0", VA = "0xF619D0")]
			[DebuggerHidden]
			public <LoadScene>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6003009")]
			[Address(RVA = "0xF620A0", Offset = "0xF620A0", VA = "0xF620A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600300A")]
			[Address(RVA = "0xF620A4", Offset = "0xF620A4", VA = "0xF620A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600300C")]
			[Address(RVA = "0xF622E0", Offset = "0xF622E0", VA = "0xF622E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E228", Offset = "0x85E228")]
		private sealed class <>c
		{
			[Token(Token = "0x4003212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__13_0;

			[Token(Token = "0x600300F")]
			[Address(RVA = "0xF61DB8", Offset = "0xF61DB8", VA = "0xF61DB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6003010")]
			[Address(RVA = "0xF61DC0", Offset = "0xF61DC0", VA = "0xF61DC0")]
			internal void <LoadSceneOverlord>b__13_0()
			{
			}
		}

		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E238", Offset = "0x85E238")]
		private sealed class <LoadSceneOverlord>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int sceneIndex;

			[Token(Token = "0x4003217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EnvironmentCycler <>4__this;

			[Token(Token = "0x4003218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000548")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003014")]
				[Address(RVA = "0xF62D7C", Offset = "0xF62D7C", VA = "0xF62D7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000549")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003016")]
				[Address(RVA = "0xF62DE4", Offset = "0xF62DE4", VA = "0xF62DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003011")]
			[Address(RVA = "0xF61A7C", Offset = "0xF61A7C", VA = "0xF61A7C")]
			[DebuggerHidden]
			public <LoadSceneOverlord>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003012")]
			[Address(RVA = "0xF62348", Offset = "0xF62348", VA = "0xF62348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003013")]
			[Address(RVA = "0xF6234C", Offset = "0xF6234C", VA = "0xF6234C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003015")]
			[Address(RVA = "0xF62D84", Offset = "0xF62D84", VA = "0xF62D84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int secondsToStayInScene;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int cycles;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text secondsText;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int startSceneIndex;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastSceneIndex;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool finishedLoading;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CNScreenFade screenFader;

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xF616C0", Offset = "0xF616C0", VA = "0xF616C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xF617A8", Offset = "0xF617A8", VA = "0xF617A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xF61874", Offset = "0xF61874", VA = "0xF61874")]
		public void StartCycle()
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xF618A4", Offset = "0xF618A4", VA = "0xF618A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8753C8", Offset = "0x8753C8")]
		private IEnumerator CycleScenes(int numCycles)
		{
			return null;
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xF61950", Offset = "0xF61950", VA = "0xF61950")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87542C", Offset = "0x87542C")]
		private IEnumerator LoadScene(int sceneIndex)
		{
			return null;
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xF619FC", Offset = "0xF619FC", VA = "0xF619FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875490", Offset = "0x875490")]
		private IEnumerator LoadSceneOverlord(int sceneIndex)
		{
			return null;
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xF61AA8", Offset = "0xF61AA8", VA = "0xF61AA8")]
		private void HideTeacherSpawnSpheres()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xF61B98", Offset = "0xF61B98", VA = "0xF61B98")]
		public void AddSeconds(int secondsToAdd)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xF61C48", Offset = "0xF61C48", VA = "0xF61C48")]
		public EnvironmentCycler()
		{
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xF61C70", Offset = "0xF61C70", VA = "0xF61C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8754F4", Offset = "0x8754F4")]
		private bool <CycleScenes>b__11_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xF61C78", Offset = "0xF61C78", VA = "0xF61C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875504", Offset = "0x875504")]
		private void <LoadSceneOverlord>b__13_1()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class EnvironmentNameButton : ContentButton
	{
		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text EnvironmentName;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _tweenID;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _progress;

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xF62DEC", Offset = "0xF62DEC", VA = "0xF62DEC", Slot = "7")]
		protected override void SelfSetup()
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xF62E40", Offset = "0xF62E40", VA = "0xF62E40", Slot = "8")]
		protected override void CustomPointerEnter()
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xF62E44", Offset = "0xF62E44", VA = "0xF62E44", Slot = "9")]
		protected override void CustomPointerExit()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xF62E48", Offset = "0xF62E48", VA = "0xF62E48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xF62E4C", Offset = "0xF62E4C", VA = "0xF62E4C", Slot = "6")]
		protected override void FinishSetup()
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xF62E50", Offset = "0xF62E50", VA = "0xF62E50")]
		private void Start()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xF62E54", Offset = "0xF62E54", VA = "0xF62E54")]
		private void Update()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xF62E58", Offset = "0xF62E58", VA = "0xF62E58")]
		public EnvironmentNameButton()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class FinishedWorldTourMenu : ContentMenu
	{
		[Token(Token = "0x2000790")]
		private class HighScoreData
		{
			[Token(Token = "0x4003219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Username;

			[Token(Token = "0x400321A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long Score;

			[Token(Token = "0x400321B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Rank;

			[Token(Token = "0x400321C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool IsCurrentUser;

			[Token(Token = "0x1700054A")]
			public string FormattedScore
			{
				[Token(Token = "0x6003017")]
				[Address(RVA = "0xA293E8", Offset = "0xA293E8", VA = "0xA293E8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003018")]
			[Address(RVA = "0xA2943C", Offset = "0xA2943C", VA = "0xA2943C")]
			public HighScoreData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E248", Offset = "0x85E248")]
		private sealed class <>c
		{
			[Token(Token = "0x400321D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400321E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<HighScoreData, int> <>9__12_0;

			[Token(Token = "0x400321F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<HighScoreData, bool> <>9__12_1;

			[Token(Token = "0x4003220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<HighScoreData, bool> <>9__12_2;

			[Token(Token = "0x4003221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<HighScoreData, bool> <>9__12_3;

			[Token(Token = "0x4003222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__27_0;

			[Token(Token = "0x600301A")]
			[Address(RVA = "0xA28BA4", Offset = "0xA28BA4", VA = "0xA28BA4")]
			public <>c()
			{
			}

			[Token(Token = "0x600301B")]
			[Address(RVA = "0xA28BAC", Offset = "0xA28BAC", VA = "0xA28BAC")]
			internal int <DisplayScoreData>b__12_0(HighScoreData e)
			{
				return default(int);
			}

			[Token(Token = "0x600301C")]
			[Address(RVA = "0xA28BC4", Offset = "0xA28BC4", VA = "0xA28BC4")]
			internal bool <DisplayScoreData>b__12_1(HighScoreData s)
			{
				return default(bool);
			}

			[Token(Token = "0x600301D")]
			[Address(RVA = "0xA28BDC", Offset = "0xA28BDC", VA = "0xA28BDC")]
			internal bool <DisplayScoreData>b__12_2(HighScoreData s)
			{
				return default(bool);
			}

			[Token(Token = "0x600301E")]
			[Address(RVA = "0xA28BF4", Offset = "0xA28BF4", VA = "0xA28BF4")]
			internal bool <DisplayScoreData>b__12_3(HighScoreData s)
			{
				return default(bool);
			}

			[Token(Token = "0x600301F")]
			[Address(RVA = "0xA28C0C", Offset = "0xA28C0C", VA = "0xA28C0C")]
			internal void <ReloadLevel>b__27_0()
			{
			}
		}

		[Token(Token = "0x2000792")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E258", Offset = "0x85E258")]
		private sealed class <ReloadLevel>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x1700054B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003023")]
				[Address(RVA = "0xA29378", Offset = "0xA29378", VA = "0xA29378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003025")]
				[Address(RVA = "0xA293E0", Offset = "0xA293E0", VA = "0xA293E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003020")]
			[Address(RVA = "0xA28CD0", Offset = "0xA28CD0", VA = "0xA28CD0")]
			[DebuggerHidden]
			public <ReloadLevel>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6003021")]
			[Address(RVA = "0xA28CFC", Offset = "0xA28CFC", VA = "0xA28CFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003022")]
			[Address(RVA = "0xA28D00", Offset = "0xA28D00", VA = "0xA28D00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003024")]
			[Address(RVA = "0xA29380", Offset = "0xA29380", VA = "0xA29380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool busy;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup LeaderboardData;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text NoInternetText;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image Separator;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject LoadingIcon;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text Ranks;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text Names;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text Scores;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text playerScoreText;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text playerNameText;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string leaderboardAPIName;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isFetching;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<string, List<HighScoreData>> _scoreData;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _foundUser;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DateTime _fetchTimeout;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private long _timesCompleted;

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xF62E70", Offset = "0xF62E70", VA = "0xF62E70")]
		private string DisplayName()
		{
			return null;
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xF62F78", Offset = "0xF62F78", VA = "0xF62F78")]
		private void DisplayScoreData()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xF639D8", Offset = "0xF639D8", VA = "0xF639D8")]
		public void ClearAndSetup()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xF63A40", Offset = "0xF63A40", VA = "0xF63A40")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xF6422C", Offset = "0xF6422C", VA = "0xF6422C", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xF64520", Offset = "0xF64520", VA = "0xF64520")]
		private void Start()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xF646B4", Offset = "0xF646B4", VA = "0xF646B4")]
		private void GotLeaderboard(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xF64A0C", Offset = "0xF64A0C", VA = "0xF64A0C")]
		private void GetAllScores(Message<bool> message)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xF649C0", Offset = "0xF649C0", VA = "0xF649C0")]
		private void UpdateCount(long count)
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xF64AC4", Offset = "0xF64AC4", VA = "0xF64AC4")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xF644C0", Offset = "0xF644C0", VA = "0xF644C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875514", Offset = "0x875514")]
		private IEnumerator ReloadLevel()
		{
			return null;
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xF64D2C", Offset = "0xF64D2C", VA = "0xF64D2C")]
		public FinishedWorldTourMenu()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class FollowRealFoot : MonoBehaviour
	{
		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public cnTaiChi cnTaiChi;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FootPlacementManager FootPlacementManager;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform RealRightFoot;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FootPlacementMover FootPlacementMover;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MovementScale;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float RotationOffset;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _originalPosition;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _originalRotation;

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xA29444", Offset = "0xA29444", VA = "0xA29444")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0xA294A0", Offset = "0xA294A0", VA = "0xA294A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xA296C4", Offset = "0xA296C4", VA = "0xA296C4")]
		public void ResetPlacement()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xA2971C", Offset = "0xA2971C", VA = "0xA2971C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xA29774", Offset = "0xA29774", VA = "0xA29774")]
		public FollowRealFoot()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class FootPlacementManager : MonoBehaviour
	{
		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup CanvasGroup;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isShowing;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _tweenFadeID;

		[Token(Token = "0x170002EC")]
		public bool ShouldUpdate
		{
			[Token(Token = "0x60021B7")]
			[Address(RVA = "0xA29698", Offset = "0xA29698", VA = "0xA29698")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xA29784", Offset = "0xA29784", VA = "0xA29784")]
		private void Start()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xA297DC", Offset = "0xA297DC", VA = "0xA297DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xA29CE8", Offset = "0xA29CE8", VA = "0xA29CE8")]
		public FootPlacementManager()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xA29CF8", Offset = "0xA29CF8", VA = "0xA29CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875578", Offset = "0x875578")]
		private void <Update>b__6_0(float alpha)
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xA29D14", Offset = "0xA29D14", VA = "0xA29D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875588", Offset = "0x875588")]
		private void <Update>b__6_1(float alpha)
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class FootPlacementMover : MonoBehaviour
	{
		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public cnTaiChi cnTaiChi;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform FootToFollow;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FollowSpeed;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float RotationSpeed;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _originalPosition;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _originalRotation;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _shouldFollow;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshRenderer _renderer;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _maxAlpha;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _tweenID;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float LastZRotation;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _vel;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _velRot;

		[Token(Token = "0x170002ED")]
		public bool ShouldFollow
		{
			[Token(Token = "0x60021BD")]
			[Address(RVA = "0xA29D30", Offset = "0xA29D30", VA = "0xA29D30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xA29D38", Offset = "0xA29D38", VA = "0xA29D38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xA29DD4", Offset = "0xA29DD4", VA = "0xA29DD4")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xA29E2C", Offset = "0xA29E2C", VA = "0xA29E2C")]
		public void ToggleShouldFollow(bool shouldFollow)
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xA29F8C", Offset = "0xA29F8C", VA = "0xA29F8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0xA2A214", Offset = "0xA2A214", VA = "0xA2A214")]
		public FootPlacementMover()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class FreePauseMenu : ContentMenu
	{
		[Serializable]
		[Token(Token = "0x2000793")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E268", Offset = "0x85E268")]
		private sealed class <>c
		{
			[Token(Token = "0x4003226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__7_0;

			[Token(Token = "0x6003027")]
			[Address(RVA = "0xA2AE74", Offset = "0xA2AE74", VA = "0xA2AE74")]
			public <>c()
			{
			}

			[Token(Token = "0x6003028")]
			[Address(RVA = "0xA2AE7C", Offset = "0xA2AE7C", VA = "0xA2AE7C")]
			internal void <LoadNextLevel>b__7_0()
			{
			}
		}

		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E278", Offset = "0x85E278")]
		private sealed class <LoadNextLevel>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400322A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FreePauseMenu <>4__this;

			[Token(Token = "0x400322B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x1700054D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600302C")]
				[Address(RVA = "0xA2B63C", Offset = "0xA2B63C", VA = "0xA2B63C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600302E")]
				[Address(RVA = "0xA2B6A4", Offset = "0xA2B6A4", VA = "0xA2B6A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003029")]
			[Address(RVA = "0xA2ADD0", Offset = "0xA2ADD0", VA = "0xA2ADD0")]
			[DebuggerHidden]
			public <LoadNextLevel>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600302A")]
			[Address(RVA = "0xA2AF40", Offset = "0xA2AF40", VA = "0xA2AF40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600302B")]
			[Address(RVA = "0xA2AF44", Offset = "0xA2AF44", VA = "0xA2AF44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600302D")]
			[Address(RVA = "0xA2B644", Offset = "0xA2B644", VA = "0xA2B644", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool busy;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int minIndex;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int waterfallsIndex;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int sierraIndex;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int maxIndex;

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xA2A7DC", Offset = "0xA2A7DC", VA = "0xA2A7DC", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xA2AC5C", Offset = "0xA2AC5C", VA = "0xA2AC5C")]
		public void LeavePause()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xA2ABEC", Offset = "0xA2ABEC", VA = "0xA2ABEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875598", Offset = "0x875598")]
		private IEnumerator LoadNextLevel()
		{
			return null;
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xA2ADFC", Offset = "0xA2ADFC", VA = "0xA2ADFC")]
		public FreePauseMenu()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class HandTrackingVideo : ContentMenu
	{
		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xA2C758", Offset = "0xA2C758", VA = "0xA2C758")]
		public void ClickedDone()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xA2C9AC", Offset = "0xA2C9AC", VA = "0xA2C9AC", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xA2C9DC", Offset = "0xA2C9DC", VA = "0xA2C9DC")]
		public HandTrackingVideo()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class HandleIntro : MonoBehaviour
	{
		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xA2C9E4", Offset = "0xA2C9E4", VA = "0xA2C9E4")]
		public HandleIntro()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class InputHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject LeftHandLine;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject RightHandLine;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isRight;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isEnabled;

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xA2C9EC", Offset = "0xA2C9EC", VA = "0xA2C9EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xA2CA3C", Offset = "0xA2CA3C", VA = "0xA2CA3C")]
		private void Update()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xA2D3A8", Offset = "0xA2D3A8", VA = "0xA2D3A8")]
		public void ToggleLines(bool enabled)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xA2D45C", Offset = "0xA2D45C", VA = "0xA2D45C")]
		public InputHandSwitcher()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class IntroManager : MonoBehaviour
	{
		[Token(Token = "0x2000795")]
		private enum TutorialState
		{
			[Token(Token = "0x400322D")]
			Waiting1,
			[Token(Token = "0x400322E")]
			Active1,
			[Token(Token = "0x400322F")]
			Waiting2,
			[Token(Token = "0x4003230")]
			Active2,
			[Token(Token = "0x4003231")]
			Waiting3,
			[Token(Token = "0x4003232")]
			Active3,
			[Token(Token = "0x4003233")]
			Waiting4,
			[Token(Token = "0x4003234")]
			Active4,
			[Token(Token = "0x4003235")]
			Waiting5,
			[Token(Token = "0x4003236")]
			Active5,
			[Token(Token = "0x4003237")]
			Waiting6,
			[Token(Token = "0x4003238")]
			Active6,
			[Token(Token = "0x4003239")]
			Waiting7,
			[Token(Token = "0x400323A")]
			Active7,
			[Token(Token = "0x400323B")]
			Finished
		}

		[Serializable]
		[Token(Token = "0x2000796")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E288", Offset = "0x85E288")]
		private sealed class <>c
		{
			[Token(Token = "0x400323C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400323D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<float> <>9__53_0;

			[Token(Token = "0x400323E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<float> <>9__53_2;

			[Token(Token = "0x400323F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<float> <>9__53_4;

			[Token(Token = "0x4003240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<float> <>9__53_6;

			[Token(Token = "0x4003241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<float> <>9__53_8;

			[Token(Token = "0x4003242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action<float> <>9__53_10;

			[Token(Token = "0x4003243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action<float> <>9__53_11;

			[Token(Token = "0x4003244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Action <>9__59_0;

			[Token(Token = "0x6003030")]
			[Address(RVA = "0xA31A90", Offset = "0xA31A90", VA = "0xA31A90")]
			public <>c()
			{
			}

			[Token(Token = "0x6003031")]
			[Address(RVA = "0xA31A98", Offset = "0xA31A98", VA = "0xA31A98")]
			internal void <TargetReached>b__53_0(float value)
			{
			}

			[Token(Token = "0x6003032")]
			[Address(RVA = "0xA31B64", Offset = "0xA31B64", VA = "0xA31B64")]
			internal void <TargetReached>b__53_2(float value)
			{
			}

			[Token(Token = "0x6003033")]
			[Address(RVA = "0xA31C30", Offset = "0xA31C30", VA = "0xA31C30")]
			internal void <TargetReached>b__53_4(float value)
			{
			}

			[Token(Token = "0x6003034")]
			[Address(RVA = "0xA31CFC", Offset = "0xA31CFC", VA = "0xA31CFC")]
			internal void <TargetReached>b__53_6(float value)
			{
			}

			[Token(Token = "0x6003035")]
			[Address(RVA = "0xA31DC8", Offset = "0xA31DC8", VA = "0xA31DC8")]
			internal void <TargetReached>b__53_8(float value)
			{
			}

			[Token(Token = "0x6003036")]
			[Address(RVA = "0xA31E94", Offset = "0xA31E94", VA = "0xA31E94")]
			internal void <TargetReached>b__53_10(float value)
			{
			}

			[Token(Token = "0x6003037")]
			[Address(RVA = "0xA31F60", Offset = "0xA31F60", VA = "0xA31F60")]
			internal void <TargetReached>b__53_11(float value)
			{
			}

			[Token(Token = "0x6003038")]
			[Address(RVA = "0xA3202C", Offset = "0xA3202C", VA = "0xA3202C")]
			internal void <LoadScene>b__59_0()
			{
			}
		}

		[Token(Token = "0x2000797")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E298", Offset = "0x85E298")]
		private sealed class <DrawLinesNew>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastLineRenderer r;

			[Token(Token = "0x4003248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CameraPathAnimator c;

			[Token(Token = "0x4003249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FastLineRendererProperties p;

			[Token(Token = "0x1700054F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600303C")]
				[Address(RVA = "0xA32900", Offset = "0xA32900", VA = "0xA32900", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000550")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600303E")]
				[Address(RVA = "0xA32968", Offset = "0xA32968", VA = "0xA32968", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003039")]
			[Address(RVA = "0xA30654", Offset = "0xA30654", VA = "0xA30654")]
			[DebuggerHidden]
			public <DrawLinesNew>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600303A")]
			[Address(RVA = "0xA326B8", Offset = "0xA326B8", VA = "0xA326B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600303B")]
			[Address(RVA = "0xA326BC", Offset = "0xA326BC", VA = "0xA326BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600303D")]
			[Address(RVA = "0xA32908", Offset = "0xA32908", VA = "0xA32908", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E2A8", Offset = "0x85E2A8")]
		private sealed class <LoadScene>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400324A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400324B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400324C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int levelIndex;

			[Token(Token = "0x400324D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IntroManager <>4__this;

			[Token(Token = "0x400324E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000551")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003042")]
				[Address(RVA = "0xA32D68", Offset = "0xA32D68", VA = "0xA32D68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000552")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003044")]
				[Address(RVA = "0xA32DD0", Offset = "0xA32DD0", VA = "0xA32DD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600303F")]
			[Address(RVA = "0xA30D78", Offset = "0xA30D78", VA = "0xA30D78")]
			[DebuggerHidden]
			public <LoadScene>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6003040")]
			[Address(RVA = "0xA32970", Offset = "0xA32970", VA = "0xA32970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003041")]
			[Address(RVA = "0xA32974", Offset = "0xA32974", VA = "0xA32974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003043")]
			[Address(RVA = "0xA32D70", Offset = "0xA32D70", VA = "0xA32D70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E2B8", Offset = "0x85E2B8")]
		private sealed class <CheckForDistance>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400324F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraPathAnimator cameraPath;

			[Token(Token = "0x4003252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform hand;

			[Token(Token = "0x4003253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IntroManager <>4__this;

			[Token(Token = "0x17000553")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003048")]
				[Address(RVA = "0xA323C8", Offset = "0xA323C8", VA = "0xA323C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000554")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600304A")]
				[Address(RVA = "0xA32430", Offset = "0xA32430", VA = "0xA32430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003045")]
			[Address(RVA = "0xA30DA4", Offset = "0xA30DA4", VA = "0xA30DA4")]
			[DebuggerHidden]
			public <CheckForDistance>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6003046")]
			[Address(RVA = "0xA32158", Offset = "0xA32158", VA = "0xA32158", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003047")]
			[Address(RVA = "0xA3215C", Offset = "0xA3215C", VA = "0xA3215C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003049")]
			[Address(RVA = "0xA323D0", Offset = "0xA323D0", VA = "0xA323D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200079A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E2C8", Offset = "0x85E2C8")]
		private sealed class <CheckForDistanceSimple>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform follow;

			[Token(Token = "0x4003257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform hand;

			[Token(Token = "0x4003258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IntroManager <>4__this;

			[Token(Token = "0x17000555")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600304E")]
				[Address(RVA = "0xA32648", Offset = "0xA32648", VA = "0xA32648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000556")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003050")]
				[Address(RVA = "0xA326B0", Offset = "0xA326B0", VA = "0xA326B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600304B")]
			[Address(RVA = "0xA30DD0", Offset = "0xA30DD0", VA = "0xA30DD0")]
			[DebuggerHidden]
			public <CheckForDistanceSimple>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x600304C")]
			[Address(RVA = "0xA32438", Offset = "0xA32438", VA = "0xA32438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600304D")]
			[Address(RVA = "0xA3243C", Offset = "0xA3243C", VA = "0xA3243C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600304F")]
			[Address(RVA = "0xA32650", Offset = "0xA32650", VA = "0xA32650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PlayerRightHand;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform PlayerLeftHand;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FastLineRenderer LineRenderer;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator _checkDistance;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator _drawLines;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator _checkDistance2;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IEnumerator _drawLines2;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B644", Offset = "0x86B644")]
		public AudioClip Begin1;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip Begin2;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip Begin3;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip Begin4;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip Begin5;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip Begin6;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip Fail1;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip Fail2;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip Finish;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip Follow;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private TutorialState _state;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioSource AudioSource;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B67C", Offset = "0x86B67C")]
		public CameraPathAnimator CameraPath1;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public CameraPathAnimator CameraPath2;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public CameraPathAnimator CameraPath3;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public CameraPathAnimator CameraPath4;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public CameraPathAnimator CameraPath5;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public CameraPathAnimator CameraPath6Right;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CameraPathAnimator CameraPath6Left;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B6B4", Offset = "0x86B6B4")]
		public GameObject Target1;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject EndTarget1;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject Target2;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject EndTarget2;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject Target3;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject EndTarget3;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject Target4;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject EndTarget4;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject Target5;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject EndTarget5;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject Target6Left;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObject EndTarget6Left;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObject Target6Right;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public GameObject EndTarget6Right;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private FastLineRendererProperties props;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private FastLineRendererProperties props2;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private FastLineRenderer fastLineRenderer;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private FastLineRenderer fastLineRenderer2;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Vector3 _originalPos4;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector3 _originalPos5;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 _originalPos6Left;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 _originalPos6Right;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private int _fadeID;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int _vibrateTweenID;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool _leftIn;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		private bool _rightIn;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private DateTime _lastTimeReset;

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xA2EA4C", Offset = "0xA2EA4C", VA = "0xA2EA4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xA2F214", Offset = "0xA2F214", VA = "0xA2F214")]
		private void Update()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xA2F4D0", Offset = "0xA2F4D0", VA = "0xA2F4D0")]
		public void TargetLeft(int index, bool isRight = true)
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xA2F4F0", Offset = "0xA2F4F0", VA = "0xA2F4F0")]
		public void TargetReached(int index, bool isRight = true)
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xA303BC", Offset = "0xA303BC", VA = "0xA303BC")]
		private void CheckLeftRight()
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xA302B4", Offset = "0xA302B4", VA = "0xA302B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8755FC", Offset = "0x8755FC")]
		private IEnumerator DrawLinesNew(FastLineRenderer r, FastLineRendererProperties p, CameraPathAnimator c)
		{
			return null;
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xA30680", Offset = "0xA30680", VA = "0xA30680")]
		public void EndTargetReached(int index)
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xA2F450", Offset = "0xA2F450", VA = "0xA2F450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875660", Offset = "0x875660")]
		private IEnumerator LoadScene(int levelIndex)
		{
			return null;
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xA30230", Offset = "0xA30230", VA = "0xA30230")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8756C4", Offset = "0x8756C4")]
		private IEnumerator CheckForDistance(CameraPathAnimator cameraPath, Transform hand)
		{
			return null;
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xA30338", Offset = "0xA30338", VA = "0xA30338")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875728", Offset = "0x875728")]
		private IEnumerator CheckForDistanceSimple(Transform follow, Transform hand)
		{
			return null;
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xA30DFC", Offset = "0xA30DFC", VA = "0xA30DFC")]
		private void CheckReset()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xA3149C", Offset = "0xA3149C", VA = "0xA3149C")]
		private void DrawLines(FastLineRenderer r, FastLineRendererProperties p, CameraPathAnimator c)
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xA3167C", Offset = "0xA3167C", VA = "0xA3167C")]
		public IntroManager()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xA3173C", Offset = "0xA3173C", VA = "0xA3173C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87578C", Offset = "0x87578C")]
		private void <Start>b__48_0()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xA31790", Offset = "0xA31790", VA = "0xA31790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87579C", Offset = "0x87579C")]
		private void <TargetReached>b__53_1(float alpha)
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xA317C4", Offset = "0xA317C4", VA = "0xA317C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8757AC", Offset = "0x8757AC")]
		private void <TargetReached>b__53_3(float alpha)
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xA317F8", Offset = "0xA317F8", VA = "0xA317F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8757BC", Offset = "0x8757BC")]
		private void <TargetReached>b__53_5(float alpha)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xA3182C", Offset = "0xA3182C", VA = "0xA3182C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8757CC", Offset = "0x8757CC")]
		private void <TargetReached>b__53_7(float alpha)
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xA31854", Offset = "0xA31854", VA = "0xA31854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8757DC", Offset = "0x8757DC")]
		private void <TargetReached>b__53_9(float alpha)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xA3187C", Offset = "0xA3187C", VA = "0xA3187C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8757EC", Offset = "0x8757EC")]
		private void <CheckLeftRight>b__54_0(float alpha)
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xA318A4", Offset = "0xA318A4", VA = "0xA318A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8757FC", Offset = "0x8757FC")]
		private void <EndTargetReached>b__58_0()
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xA318C0", Offset = "0xA318C0", VA = "0xA318C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87580C", Offset = "0x87580C")]
		private void <EndTargetReached>b__58_1()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xA318DC", Offset = "0xA318DC", VA = "0xA318DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87581C", Offset = "0x87581C")]
		private void <EndTargetReached>b__58_2()
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xA318F8", Offset = "0xA318F8", VA = "0xA318F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87582C", Offset = "0x87582C")]
		private void <EndTargetReached>b__58_3()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xA31914", Offset = "0xA31914", VA = "0xA31914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87583C", Offset = "0x87583C")]
		private void <EndTargetReached>b__58_4()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xA31930", Offset = "0xA31930", VA = "0xA31930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87584C", Offset = "0x87584C")]
		private void <EndTargetReached>b__58_5()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xA3194C", Offset = "0xA3194C", VA = "0xA3194C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87585C", Offset = "0x87585C")]
		private void <EndTargetReached>b__58_6()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xA31968", Offset = "0xA31968", VA = "0xA31968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87586C", Offset = "0x87586C")]
		private void <CheckReset>b__64_0()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xA31984", Offset = "0xA31984", VA = "0xA31984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87587C", Offset = "0x87587C")]
		private void <CheckReset>b__64_1()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xA319A0", Offset = "0xA319A0", VA = "0xA319A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87588C", Offset = "0x87588C")]
		private void <CheckReset>b__64_2()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xA319BC", Offset = "0xA319BC", VA = "0xA319BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87589C", Offset = "0x87589C")]
		private void <CheckReset>b__64_3()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xA319D8", Offset = "0xA319D8", VA = "0xA319D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8758AC", Offset = "0x8758AC")]
		private void <CheckReset>b__64_4()
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xA319F4", Offset = "0xA319F4", VA = "0xA319F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8758BC", Offset = "0x8758BC")]
		private void <CheckReset>b__64_5()
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xA31A10", Offset = "0xA31A10", VA = "0xA31A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8758CC", Offset = "0x8758CC")]
		private void <CheckReset>b__64_6()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class MainMenuButton : ContentButton
	{
		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Image BackgroundImage;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text MenuText;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Enums.GameMode GameMode;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _tweenID;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _progress;

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xA34D74", Offset = "0xA34D74", VA = "0xA34D74", Slot = "7")]
		protected override void SelfSetup()
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xA34E54", Offset = "0xA34E54", VA = "0xA34E54", Slot = "8")]
		protected override void CustomPointerEnter()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xA34F9C", Offset = "0xA34F9C", VA = "0xA34F9C", Slot = "9")]
		protected override void CustomPointerExit()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xA35114", Offset = "0xA35114", VA = "0xA35114")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xA35190", Offset = "0xA35190", VA = "0xA35190", Slot = "6")]
		protected override void FinishSetup()
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xA35194", Offset = "0xA35194", VA = "0xA35194")]
		private void Start()
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xA35198", Offset = "0xA35198", VA = "0xA35198")]
		private void Update()
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xA3519C", Offset = "0xA3519C", VA = "0xA3519C")]
		public MainMenuButton()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xA351AC", Offset = "0xA351AC", VA = "0xA351AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8758DC", Offset = "0x8758DC")]
		private void <CustomPointerEnter>b__6_0(float value)
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xA35294", Offset = "0xA35294", VA = "0xA35294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8758EC", Offset = "0x8758EC")]
		private void <CustomPointerExit>b__7_0(float value)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0xA3537C", Offset = "0xA3537C", VA = "0xA3537C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8758FC", Offset = "0x8758FC")]
		private void <CustomPointerExit>b__7_1()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class MenuMusic : MonoBehaviour
	{
		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xA3539C", Offset = "0xA3539C", VA = "0xA3539C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0xA35418", Offset = "0xA35418", VA = "0xA35418")]
		public MenuMusic()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class MoveObject : MonoBehaviour
	{
		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject RecenterScreenPrefab;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 PlayerSpawn;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ScreenDistance;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform centerEyeAnchor;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _spawnedScreen;

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xA38758", Offset = "0xA38758", VA = "0xA38758")]
		private void Start()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xA38818", Offset = "0xA38818", VA = "0xA38818")]
		public void Move()
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xA38BD4", Offset = "0xA38BD4", VA = "0xA38BD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xA38C10", Offset = "0xA38C10", VA = "0xA38C10")]
		public MoveObject()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class MovesMenu : ContentMenu
	{
		[Serializable]
		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E2D8", Offset = "0x85E2D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4003259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400325A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__12_0;

			[Token(Token = "0x400325B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__12_1;

			[Token(Token = "0x6003052")]
			[Address(RVA = "0xA39704", Offset = "0xA39704", VA = "0xA39704")]
			public <>c()
			{
			}

			[Token(Token = "0x6003053")]
			[Address(RVA = "0xA3970C", Offset = "0xA3970C", VA = "0xA3970C")]
			internal void <LoadScene>b__12_0()
			{
			}

			[Token(Token = "0x6003054")]
			[Address(RVA = "0xA397C8", Offset = "0xA397C8", VA = "0xA397C8")]
			internal void <LoadScene>b__12_1()
			{
			}
		}

		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E2E8", Offset = "0x85E2E8")]
		private sealed class <LoadScene>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400325C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400325D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400325E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MovesMenu <>4__this;

			[Token(Token = "0x400325F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000557")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003058")]
				[Address(RVA = "0xA3A230", Offset = "0xA3A230", VA = "0xA3A230", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000558")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600305A")]
				[Address(RVA = "0xA3A298", Offset = "0xA3A298", VA = "0xA3A298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003055")]
			[Address(RVA = "0xA38DB8", Offset = "0xA38DB8", VA = "0xA38DB8")]
			[DebuggerHidden]
			public <LoadScene>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6003056")]
			[Address(RVA = "0xA3988C", Offset = "0xA3988C", VA = "0xA3988C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003057")]
			[Address(RVA = "0xA39890", Offset = "0xA39890", VA = "0xA39890", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003059")]
			[Address(RVA = "0xA3A238", Offset = "0xA3A238", VA = "0xA3A238", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup TopScrollButtonCanvasGroup;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CanvasGroup BottomScrollButtonCanvasGroup;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform ButtonContent;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ScrollViewManager ScrollViewManager;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Enums.MoveSetCategoryType MoveSetCategoryType;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject MovesetButton;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform ButtonGrid;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text GameModeText;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text Title;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal int pages;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal int currentPage;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool loading;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int index;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _fadeTweenID;

		[Token(Token = "0x6002202")]
		[Address(RVA = "0xA38C18", Offset = "0xA38C18", VA = "0xA38C18", Slot = "5")]
		public override void MenuSpecificSetup()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xA38D48", Offset = "0xA38D48", VA = "0xA38D48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87590C", Offset = "0x87590C")]
		private IEnumerator LoadScene()
		{
			return null;
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xA38DE4", Offset = "0xA38DE4", VA = "0xA38DE4", Slot = "8")]
		internal virtual void HoverOnArcadeMode(MoveSet moveSet)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xA38DE8", Offset = "0xA38DE8", VA = "0xA38DE8", Slot = "9")]
		internal virtual void HoverOffArcadeMode(MoveSet moveSet)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xA38DEC", Offset = "0xA38DEC", VA = "0xA38DEC", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xA39688", Offset = "0xA39688", VA = "0xA39688")]
		public MovesMenu()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class MusicMenu : ContentMenu
	{
		[Serializable]
		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E2F8", Offset = "0x85E2F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4003260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__15_0;

			[Token(Token = "0x4003262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__15_1;

			[Token(Token = "0x4003263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__15_2;

			[Token(Token = "0x4003264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<MusicTrack, bool> <>9__24_0;

			[Token(Token = "0x4003265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<MusicTrack, bool> <>9__24_1;

			[Token(Token = "0x600305C")]
			[Address(RVA = "0xA3AFC4", Offset = "0xA3AFC4", VA = "0xA3AFC4")]
			public <>c()
			{
			}

			[Token(Token = "0x600305D")]
			[Address(RVA = "0xA3AFCC", Offset = "0xA3AFCC", VA = "0xA3AFCC")]
			internal void <LoadScene>b__15_0()
			{
			}

			[Token(Token = "0x600305E")]
			[Address(RVA = "0xA3B07C", Offset = "0xA3B07C", VA = "0xA3B07C")]
			internal void <LoadScene>b__15_1()
			{
			}

			[Token(Token = "0x600305F")]
			[Address(RVA = "0xA3B138", Offset = "0xA3B138", VA = "0xA3B138")]
			internal void <LoadScene>b__15_2()
			{
			}

			[Token(Token = "0x6003060")]
			[Address(RVA = "0xA3B1FC", Offset = "0xA3B1FC", VA = "0xA3B1FC")]
			internal bool <ReceiveInput>b__24_0(MusicTrack t)
			{
				return default(bool);
			}

			[Token(Token = "0x6003061")]
			[Address(RVA = "0xA3B214", Offset = "0xA3B214", VA = "0xA3B214")]
			internal bool <ReceiveInput>b__24_1(MusicTrack t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E308", Offset = "0x85E308")]
		private sealed class <LoadScene>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicMenu <>4__this;

			[Token(Token = "0x4003269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000559")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003065")]
				[Address(RVA = "0xA3BB9C", Offset = "0xA3BB9C", VA = "0xA3BB9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003067")]
				[Address(RVA = "0xA3BC04", Offset = "0xA3BC04", VA = "0xA3BC04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003062")]
			[Address(RVA = "0xA3A3B0", Offset = "0xA3A3B0", VA = "0xA3A3B0")]
			[DebuggerHidden]
			public <LoadScene>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003063")]
			[Address(RVA = "0xA3B538", Offset = "0xA3B538", VA = "0xA3B538", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003064")]
			[Address(RVA = "0xA3B53C", Offset = "0xA3B53C", VA = "0xA3B53C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003066")]
			[Address(RVA = "0xA3BBA4", Offset = "0xA3BBA4", VA = "0xA3BBA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E318", Offset = "0x85E318")]
		private sealed class <CheckVolumeFadeout>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400326A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400326B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400326C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicMenu <>4__this;

			[Token(Token = "0x1700055B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600306B")]
				[Address(RVA = "0xA3B4C8", Offset = "0xA3B4C8", VA = "0xA3B4C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600306D")]
				[Address(RVA = "0xA3B530", Offset = "0xA3B530", VA = "0xA3B530", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003068")]
			[Address(RVA = "0xA3A3DC", Offset = "0xA3A3DC", VA = "0xA3A3DC")]
			[DebuggerHidden]
			public <CheckVolumeFadeout>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6003069")]
			[Address(RVA = "0xA3B22C", Offset = "0xA3B22C", VA = "0xA3B22C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600306A")]
			[Address(RVA = "0xA3B230", Offset = "0xA3B230", VA = "0xA3B230", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600306C")]
			[Address(RVA = "0xA3B4D0", Offset = "0xA3B4D0", VA = "0xA3B4D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup TopScrollButtonCanvasGroup;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CanvasGroup BottomScrollButtonCanvasGroup;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform ButtonContent;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ScrollViewManager ScrollViewManager;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject MovesetButton;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CanvasGroup OverlayInfo;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform ButtonGrid;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text TrackTitleText;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text TrackArtistText;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Image AlbumArt;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal int pages;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal int currentPage;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _fadeTweenID;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool loading;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int index;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DateTime _lastHoverTime;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private DateTime _lastEnterTime;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MusicTrack _hoveredTrack;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _isHovered;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool _okToPlay;

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xA3A2A0", Offset = "0xA3A2A0", VA = "0xA3A2A0", Slot = "5")]
		public override void MenuSpecificSetup()
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xA3A33C", Offset = "0xA3A33C", VA = "0xA3A33C")]
		private void Update()
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0xA3A340", Offset = "0xA3A340", VA = "0xA3A340")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875970", Offset = "0x875970")]
		private IEnumerator LoadScene()
		{
			return null;
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xA3A2CC", Offset = "0xA3A2CC", VA = "0xA3A2CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8759D4", Offset = "0x8759D4")]
		private IEnumerator CheckVolumeFadeout()
		{
			return null;
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xA3A408", Offset = "0xA3A408", VA = "0xA3A408", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xA3AEC0", Offset = "0xA3AEC0", VA = "0xA3AEC0")]
		public MusicMenu()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class NewIntroManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E328", Offset = "0x85E328")]
		private sealed class <>c
		{
			[Token(Token = "0x400326D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400326E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__45_0;

			[Token(Token = "0x600306F")]
			[Address(RVA = "0xA401FC", Offset = "0xA401FC", VA = "0xA401FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6003070")]
			[Address(RVA = "0xA40204", Offset = "0xA40204", VA = "0xA40204")]
			internal void <Start>b__45_0()
			{
			}
		}

		[Token(Token = "0x20007A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E338", Offset = "0x85E338")]
		private sealed class <LoadScene>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400326F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NewIntroManager <>4__this;

			[Token(Token = "0x4003272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool wait;

			[Token(Token = "0x1700055D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003074")]
				[Address(RVA = "0xA40D84", Offset = "0xA40D84", VA = "0xA40D84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003076")]
				[Address(RVA = "0xA40DEC", Offset = "0xA40DEC", VA = "0xA40DEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003071")]
			[Address(RVA = "0xA3C680", Offset = "0xA3C680", VA = "0xA3C680")]
			[DebuggerHidden]
			public <LoadScene>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6003072")]
			[Address(RVA = "0xA40878", Offset = "0xA40878", VA = "0xA40878", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003073")]
			[Address(RVA = "0xA4087C", Offset = "0xA4087C", VA = "0xA4087C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003075")]
			[Address(RVA = "0xA40D8C", Offset = "0xA40D8C", VA = "0xA40D8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E348", Offset = "0x85E348")]
		private sealed class <CheckForDistance>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraPathAnimator cameraPath;

			[Token(Token = "0x4003276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform hand;

			[Token(Token = "0x4003277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NewIntroManager <>4__this;

			[Token(Token = "0x1700055F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600307A")]
				[Address(RVA = "0xA4050C", Offset = "0xA4050C", VA = "0xA4050C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000560")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600307C")]
				[Address(RVA = "0xA40574", Offset = "0xA40574", VA = "0xA40574", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003077")]
			[Address(RVA = "0xA3EC20", Offset = "0xA3EC20", VA = "0xA3EC20")]
			[DebuggerHidden]
			public <CheckForDistance>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6003078")]
			[Address(RVA = "0xA402B8", Offset = "0xA402B8", VA = "0xA402B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003079")]
			[Address(RVA = "0xA402BC", Offset = "0xA402BC", VA = "0xA402BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600307B")]
			[Address(RVA = "0xA40514", Offset = "0xA40514", VA = "0xA40514", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E358", Offset = "0x85E358")]
		private sealed class <CheckForDistanceSimple>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400327A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform follow;

			[Token(Token = "0x400327B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform hand;

			[Token(Token = "0x400327C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NewIntroManager <>4__this;

			[Token(Token = "0x400327D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isRight;

			[Token(Token = "0x17000561")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003080")]
				[Address(RVA = "0xA40808", Offset = "0xA40808", VA = "0xA40808", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000562")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003082")]
				[Address(RVA = "0xA40870", Offset = "0xA40870", VA = "0xA40870", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600307D")]
			[Address(RVA = "0xA3FE88", Offset = "0xA3FE88", VA = "0xA3FE88")]
			[DebuggerHidden]
			public <CheckForDistanceSimple>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x600307E")]
			[Address(RVA = "0xA4057C", Offset = "0xA4057C", VA = "0xA4057C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600307F")]
			[Address(RVA = "0xA40580", Offset = "0xA40580", VA = "0xA40580", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003081")]
			[Address(RVA = "0xA40810", Offset = "0xA40810", VA = "0xA40810", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform SpawnedItems;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B6EC", Offset = "0x86B6EC")]
		public GameObject WhiteTarget;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject BlackTarget;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B724", Offset = "0x86B724")]
		public FollowSphere WhiteFollowSphere;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FollowSphere BlackFollowSphere;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FollowSphere WhiteFollowSphereFading;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FollowSphere BlackFollowSphereFading;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B75C", Offset = "0x86B75C")]
		public CameraPathAnimator CameraPath1;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CameraPathAnimator CameraPath2;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CameraPathAnimator CameraPath3;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CameraPathAnimator CameraPath3Player;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CameraPathAnimator CameraPath4Left;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraPathAnimator CameraPath4LeftPlayer;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CameraPathAnimator CameraPath4Right;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CameraPathAnimator CameraPath4RightPlayer;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B794", Offset = "0x86B794")]
		public AudioClip AudioClip351;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip AudioClip353;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip AudioClip355;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip AudioClip357;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip AudioClip359;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip AudioClip361;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip AudioClip363;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AudioClip AudioClip365;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AudioClip AudioClip367;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip AudioClip369;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip AudioClip371;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioClip AudioClip373;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip AudioClip375;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip AudioClip377;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip AudioClip379;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip AudioClip381;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip AudioClip383;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip AudioClip385;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip AudioClip387;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip AudioClip389;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AudioClip AudioClip391;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private SoundPlayer _soundPlayer;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GameObject toFollow;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private GameObject toFollowExtra;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GameObject _currentLeftStartTarget;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private GameObject _currentLeftEndTarget;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private GameObject _currentRightStartTarget;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private GameObject _currentRightEndTarget;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int state;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private int _startAudioDelayTweenID;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool _loadingMenu;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool _isLoading;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private DateTime _lastPause;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool _isPaused;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		private bool _hasEntered;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private DateTime _lastTimeReset;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int stateBig;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private FollowSphere _currentRightFollow;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private FollowSphere _currentLeftFollow;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private IEnumerator _checkDistance;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Transform PlayerRightHand;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Transform PlayerLeftHand;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool _entered;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		private bool _isCheckingForLeavingLeft;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		private bool _isCheckingForLeavingRight;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private int _delayedStart;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private bool _isLeftIn;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
		private bool _isRightIn;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int _delayedStartLeft;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int _delayedStartRight;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private IEnumerator _checkDistanceLeft;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private IEnumerator _checkDistanceRight;

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xA3BC0C", Offset = "0xA3BC0C", VA = "0xA3BC0C")]
		private void Start()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xA3C450", Offset = "0xA3C450", VA = "0xA3C450")]
		private void State4PathFinished()
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xA3C63C", Offset = "0xA3C63C", VA = "0xA3C63C")]
		public void LoadMenu()
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xA3C5B8", Offset = "0xA3C5B8", VA = "0xA3C5B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875A38", Offset = "0x875A38")]
		private IEnumerator LoadScene(int levelIndex, bool wait = true)
		{
			return null;
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xA3C6AC", Offset = "0xA3C6AC", VA = "0xA3C6AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xA3CBD8", Offset = "0xA3CBD8", VA = "0xA3CBD8")]
		public void LeavePause()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xA3CDA0", Offset = "0xA3CDA0", VA = "0xA3CDA0")]
		internal void EnteredTarget(bool isRight, bool IsEnd, int index)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xA3E118", Offset = "0xA3E118", VA = "0xA3E118")]
		private void CheckLeftRight()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xA3E734", Offset = "0xA3E734", VA = "0xA3E734")]
		internal void ExitedTarget(bool isRight, bool IsEnd, int index)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xA3EB9C", Offset = "0xA3EB9C", VA = "0xA3EB9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875A9C", Offset = "0x875A9C")]
		private IEnumerator CheckForDistance(CameraPathAnimator cameraPath, Transform hand)
		{
			return null;
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xA3EC4C", Offset = "0xA3EC4C", VA = "0xA3EC4C")]
		private void CheckReset(bool isRight = true)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xA3C20C", Offset = "0xA3C20C", VA = "0xA3C20C")]
		private void SetupState1()
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xA3D128", Offset = "0xA3D128", VA = "0xA3D128")]
		private void StartMovementState1()
		{
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xA3ED60", Offset = "0xA3ED60", VA = "0xA3ED60")]
		private void FailState1()
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xA3EA28", Offset = "0xA3EA28", VA = "0xA3EA28")]
		private void LeftStartState1()
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xA3D60C", Offset = "0xA3D60C", VA = "0xA3D60C")]
		private void SuccessState1()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xA3F450", Offset = "0xA3F450", VA = "0xA3F450")]
		private void SetupState2()
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0xA3D738", Offset = "0xA3D738", VA = "0xA3D738")]
		private void StartMovementState2()
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xA3EAE0", Offset = "0xA3EAE0", VA = "0xA3EAE0")]
		private void LeftStartState2()
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0xA3EE48", Offset = "0xA3EE48", VA = "0xA3EE48")]
		private void FailState2()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xA3DC60", Offset = "0xA3DC60", VA = "0xA3DC60")]
		private void SuccessState2()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xA3F698", Offset = "0xA3F698", VA = "0xA3F698")]
		private void SetupState3()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xA3DDA0", Offset = "0xA3DDA0", VA = "0xA3DDA0")]
		private void StartMovementState3()
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xA3EF48", Offset = "0xA3EF48", VA = "0xA3EF48")]
		private void FailState3()
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xA3F978", Offset = "0xA3F978", VA = "0xA3F978")]
		private void State3PathFinished()
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xA3F97C", Offset = "0xA3F97C", VA = "0xA3F97C")]
		private void SuccessState3()
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xA3FAA8", Offset = "0xA3FAA8", VA = "0xA3FAA8")]
		private void SetupState4()
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xA3E134", Offset = "0xA3E134", VA = "0xA3E134")]
		private void StartMovementState4()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xA3F094", Offset = "0xA3F094", VA = "0xA3F094")]
		private void FailState4(bool isRight)
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xA3FE84", Offset = "0xA3FE84", VA = "0xA3FE84")]
		private void Reset()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0xA3F8E0", Offset = "0xA3F8E0", VA = "0xA3F8E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875B00", Offset = "0x875B00")]
		private IEnumerator CheckForDistanceSimple(Transform follow, Transform hand, bool isRight)
		{
			return null;
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xA3FEB4", Offset = "0xA3FEB4", VA = "0xA3FEB4")]
		public NewIntroManager()
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xA3FF60", Offset = "0xA3FF60", VA = "0xA3FF60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875B64", Offset = "0x875B64")]
		private void <Start>b__45_1()
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xA3FFB8", Offset = "0xA3FFB8", VA = "0xA3FFB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875B74", Offset = "0x875B74")]
		private void <StartMovementState3>b__83_0()
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xA40058", Offset = "0xA40058", VA = "0xA40058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875B84", Offset = "0x875B84")]
		private void <StartMovementState4>b__94_0()
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xA400F8", Offset = "0xA400F8", VA = "0xA400F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875B94", Offset = "0x875B94")]
		private void <StartMovementState4>b__94_1()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class NewSelectTrainingMenu : MovesMenu
	{
		[Token(Token = "0x20007A4")]
		private class RankNameScore
		{
			[Token(Token = "0x400327E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Rank;

			[Token(Token = "0x400327F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Name;

			[Token(Token = "0x4003280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long Score;

			[Token(Token = "0x4003281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool IsExtra;

			[Token(Token = "0x17000563")]
			public string FormattedScore
			{
				[Token(Token = "0x6003083")]
				[Address(RVA = "0xA41630", Offset = "0xA41630", VA = "0xA41630")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003084")]
			[Address(RVA = "0xA41628", Offset = "0xA41628", VA = "0xA41628")]
			public RankNameScore()
			{
			}
		}

		[Token(Token = "0x20007A5")]
		private class HighScoreData
		{
			[Token(Token = "0x4003282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Username;

			[Token(Token = "0x4003283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long Score;

			[Token(Token = "0x4003284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Rank;

			[Token(Token = "0x4003285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool IsCurrentUser;

			[Token(Token = "0x17000564")]
			public string FormattedScore
			{
				[Token(Token = "0x6003085")]
				[Address(RVA = "0xA43CE8", Offset = "0xA43CE8", VA = "0xA43CE8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003086")]
			[Address(RVA = "0xA4446C", Offset = "0xA4446C", VA = "0xA4446C")]
			public HighScoreData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E368", Offset = "0x85E368")]
		private sealed class <>c
		{
			[Token(Token = "0x4003286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RankNameScore, bool> <>9__20_0;

			[Token(Token = "0x4003288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MoveSet, string> <>9__34_0;

			[Token(Token = "0x4003289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MoveSet, Guid> <>9__34_1;

			[Token(Token = "0x400328A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<HighScoreData, int> <>9__36_0;

			[Token(Token = "0x400328B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<HighScoreData, bool> <>9__36_1;

			[Token(Token = "0x400328C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<HighScoreData, bool> <>9__36_2;

			[Token(Token = "0x400328D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<HighScoreData, bool> <>9__36_3;

			[Token(Token = "0x6003088")]
			[Address(RVA = "0xA44634", Offset = "0xA44634", VA = "0xA44634")]
			public <>c()
			{
			}

			[Token(Token = "0x6003089")]
			[Address(RVA = "0xA4463C", Offset = "0xA4463C", VA = "0xA4463C")]
			internal bool <DisplayLeaderboardData>b__20_0(RankNameScore s)
			{
				return default(bool);
			}

			[Token(Token = "0x600308A")]
			[Address(RVA = "0xA446C8", Offset = "0xA446C8", VA = "0xA446C8")]
			internal string <SortMoveSet>b__34_0(MoveSet m)
			{
				return null;
			}

			[Token(Token = "0x600308B")]
			[Address(RVA = "0xA446E0", Offset = "0xA446E0", VA = "0xA446E0")]
			internal Guid <SortMoveSet>b__34_1(MoveSet m)
			{
				return default(Guid);
			}

			[Token(Token = "0x600308C")]
			[Address(RVA = "0xA44740", Offset = "0xA44740", VA = "0xA44740")]
			internal int <DisplayScoreData>b__36_0(HighScoreData e)
			{
				return default(int);
			}

			[Token(Token = "0x600308D")]
			[Address(RVA = "0xA44758", Offset = "0xA44758", VA = "0xA44758")]
			internal bool <DisplayScoreData>b__36_1(HighScoreData s)
			{
				return default(bool);
			}

			[Token(Token = "0x600308E")]
			[Address(RVA = "0xA44770", Offset = "0xA44770", VA = "0xA44770")]
			internal bool <DisplayScoreData>b__36_2(HighScoreData s)
			{
				return default(bool);
			}

			[Token(Token = "0x600308F")]
			[Address(RVA = "0xA44788", Offset = "0xA44788", VA = "0xA44788")]
			internal bool <DisplayScoreData>b__36_3(HighScoreData s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public CanvasGroup LeaderboardData;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject LeaderboardObjects;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Text Ranks;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Text Names;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Text Scores;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Image Separator;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject LoadingIcon;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject NoScoreText;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject NoInternetText;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CanvasGroup LeaderboardCanvasGroup;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Text SortButtonText;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GuidedLeaderboard leaderboard;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool isRoomScale;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<MoveSet> moveSets;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int lastButtonSprite;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int buttonCount;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool sortAlphabetically;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<RankNameScore> _scores;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RankNameScore _playerScore;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private DateTime _lastHoverTime;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private MoveSet _lastMoveSet;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int _masterLeaderboardFadeTweenID;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool _isHovered;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private DateTime _fetchTimeout;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool _isFetching;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private string _currentFetchingMoveSet;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Dictionary<string, List<HighScoreData>> _scoreData;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool _foundUser;

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xA40DF4", Offset = "0xA40DF4", VA = "0xA40DF4")]
		private void DisplayLeaderboardData()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xA41684", Offset = "0xA41684", VA = "0xA41684", Slot = "8")]
		internal override void HoverOnArcadeMode(MoveSet moveSet)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xA41850", Offset = "0xA41850", VA = "0xA41850", Slot = "9")]
		internal override void HoverOffArcadeMode(MoveSet moveSet)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xA41A10", Offset = "0xA41A10", VA = "0xA41A10")]
		private void Start()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xA41E28", Offset = "0xA41E28", VA = "0xA41E28")]
		public void ToggleSortOptions()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xA42348", Offset = "0xA42348", VA = "0xA42348")]
		private void UpdateButtonText()
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xA41DF0", Offset = "0xA41DF0", VA = "0xA41DF0")]
		private void SortMoveSetsAndMakeButtons(string sortType)
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xA42C18", Offset = "0xA42C18", VA = "0xA42C18")]
		private void SetScrollOptions()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xA426AC", Offset = "0xA426AC", VA = "0xA426AC")]
		private void InstantiateButtons()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xA423C4", Offset = "0xA423C4", VA = "0xA423C4")]
		private void SetMoveSets(string sortType)
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xA42D08", Offset = "0xA42D08", VA = "0xA42D08")]
		public void SortMoveSet(List<MoveSet> moveSetsList, bool alphabetical)
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xA42EC4", Offset = "0xA42EC4", VA = "0xA42EC4")]
		private void Update()
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xA43350", Offset = "0xA43350", VA = "0xA43350")]
		private void DisplayScoreData()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xA43D3C", Offset = "0xA43D3C", VA = "0xA43D3C")]
		public void ClearAndSetup()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xA43C2C", Offset = "0xA43C2C", VA = "0xA43C2C")]
		private void GetHighScoreData()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xA43DA4", Offset = "0xA43DA4", VA = "0xA43DA4")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xA44474", Offset = "0xA44474", VA = "0xA44474")]
		public NewSelectTrainingMenu()
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xA44598", Offset = "0xA44598", VA = "0xA44598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875BA4", Offset = "0x875BA4")]
		private void <HoverOnArcadeMode>b__24_0(float alpha)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xA445B4", Offset = "0xA445B4", VA = "0xA445B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875BB4", Offset = "0x875BB4")]
		private void <HoverOffArcadeMode>b__25_0(float alpha)
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class OptionsButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color HoverColor;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color OffHoverColor;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsOptions;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Image _gearImage;

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xA447A0", Offset = "0xA447A0", VA = "0xA447A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xA44814", Offset = "0xA44814", VA = "0xA44814", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xA4490C", Offset = "0xA4490C", VA = "0xA4490C", Slot = "5")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xA4493C", Offset = "0xA4493C", VA = "0xA4493C", Slot = "6")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xA4496C", Offset = "0xA4496C", VA = "0xA4496C")]
		public OptionsButton()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class OptionsMenu : ContentMenu
	{
		[Token(Token = "0x600224A")]
		[Address(RVA = "0xA44974", Offset = "0xA44974", VA = "0xA44974", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xA449A4", Offset = "0xA449A4", VA = "0xA449A4")]
		public OptionsMenu()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class OptionsMenuNew : ContentMenu
	{
		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider MusicVolumeSlider;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider EnvironmentVolumeSlider;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider TeacherVolumeSlider;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image EnableVibrationImage;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Image InvertVibrationImage;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image ToggleFeetImage;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image ShowTeachersCheckmark;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Image ShowArcadeScoreCheckmark;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Image ShowArcadeUICheckmark;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Image ShowFlowUICheckmark;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Image TeachersFaceForwardCheckmark;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Image SmallGuardianModeCheckmark;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Image ShowHandModelsCheckmark;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Image ShowHandOrbsAndLinesCheckmark;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject toggles;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _vibrationEnabled;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool _vibrationInverted;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		private bool _showTeachers;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		private bool _showFeet;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool _showArcadeScore;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool _showArcadeUI;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		private bool _showFlowUI;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
		private bool _teachersFaceForward;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _smallGuardianMode;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool _showHandModels;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool _showHandOrbsAndLines;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float music;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float env;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float teacher;

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xA449AC", Offset = "0xA449AC", VA = "0xA449AC", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xA44D98", Offset = "0xA44D98", VA = "0xA44D98")]
		private bool JustPinchedWithHand()
		{
			return default(bool);
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xA44F70", Offset = "0xA44F70", VA = "0xA44F70")]
		public void ToggleFeet()
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xA450D8", Offset = "0xA450D8", VA = "0xA450D8")]
		public void ToggleInvert()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xA45240", Offset = "0xA45240", VA = "0xA45240")]
		public void ToggleEnableVibration()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xA453A8", Offset = "0xA453A8", VA = "0xA453A8")]
		public void ToggleShowTeachers()
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xA45510", Offset = "0xA45510", VA = "0xA45510")]
		public void ToggleShowArcadeScore()
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xA456E0", Offset = "0xA456E0", VA = "0xA456E0")]
		public void ToggleShowArcadeUI()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xA45914", Offset = "0xA45914", VA = "0xA45914")]
		public void ToggleShowFlowUI()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xA45A7C", Offset = "0xA45A7C", VA = "0xA45A7C")]
		public void ToggleTeachersFaceForward()
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xA45F08", Offset = "0xA45F08", VA = "0xA45F08")]
		public void ToggleSmallGuardianMode()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xA462B0", Offset = "0xA462B0", VA = "0xA462B0")]
		public void ToggleShowHandModels()
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xA46418", Offset = "0xA46418", VA = "0xA46418")]
		public void ToggleShowHandOrbsAndLines()
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xA45BEC", Offset = "0xA45BEC", VA = "0xA45BEC")]
		private void RotateTeachers()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xA46580", Offset = "0xA46580", VA = "0xA46580")]
		private void Start()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xA470B0", Offset = "0xA470B0", VA = "0xA470B0")]
		public void ClickedCalibrate()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xA472A4", Offset = "0xA472A4", VA = "0xA472A4")]
		public void HandTrackingVideo()
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xA44B84", Offset = "0xA44B84", VA = "0xA44B84")]
		private void SavePrefs()
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xA46D5C", Offset = "0xA46D5C", VA = "0xA46D5C")]
		public void UpdateMusicVolume()
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xA46E58", Offset = "0xA46E58", VA = "0xA46E58")]
		public void UpdateEnvironmentVolume()
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xA46F54", Offset = "0xA46F54", VA = "0xA46F54")]
		public void UpdateTeacherVolume()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xA47498", Offset = "0xA47498", VA = "0xA47498")]
		public static float GetVolume(float sliderValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xA47538", Offset = "0xA47538", VA = "0xA47538")]
		public OptionsMenuNew()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class PauseMenu : ContentMenu
	{
		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E378", Offset = "0x85E378")]
		private sealed class <LoadHandTestingScene>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400328E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400328F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000565")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003093")]
				[Address(RVA = "0x9AE36C", Offset = "0x9AE36C", VA = "0x9AE36C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000566")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003095")]
				[Address(RVA = "0x9AE3D4", Offset = "0x9AE3D4", VA = "0x9AE3D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003090")]
			[Address(RVA = "0x9ADBC0", Offset = "0x9ADBC0", VA = "0x9ADBC0")]
			[DebuggerHidden]
			public <LoadHandTestingScene>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6003091")]
			[Address(RVA = "0x9AE2AC", Offset = "0x9AE2AC", VA = "0x9AE2AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003092")]
			[Address(RVA = "0x9AE2B0", Offset = "0x9AE2B0", VA = "0x9AE2B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003094")]
			[Address(RVA = "0x9AE374", Offset = "0x9AE374", VA = "0x9AE374", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E388", Offset = "0x85E388")]
		private sealed class <>c
		{
			[Token(Token = "0x4003291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__10_0;

			[Token(Token = "0x6003097")]
			[Address(RVA = "0x9AE1E0", Offset = "0x9AE1E0", VA = "0x9AE1E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6003098")]
			[Address(RVA = "0x9AE1E8", Offset = "0x9AE1E8", VA = "0x9AE1E8")]
			internal void <ReloadLevel>b__10_0()
			{
			}
		}

		[Token(Token = "0x20007A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E398", Offset = "0x85E398")]
		private sealed class <ReloadLevel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PauseMenu <>4__this;

			[Token(Token = "0x4003296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000567")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600309C")]
				[Address(RVA = "0x9AEE1C", Offset = "0x9AEE1C", VA = "0x9AEE1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000568")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600309E")]
				[Address(RVA = "0x9AEE84", Offset = "0x9AEE84", VA = "0x9AEE84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003099")]
			[Address(RVA = "0x9AE078", Offset = "0x9AE078", VA = "0x9AE078")]
			[DebuggerHidden]
			public <ReloadLevel>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600309A")]
			[Address(RVA = "0x9AE3DC", Offset = "0x9AE3DC", VA = "0x9AE3DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600309B")]
			[Address(RVA = "0x9AE3E0", Offset = "0x9AE3E0", VA = "0x9AE3E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600309D")]
			[Address(RVA = "0x9AEE24", Offset = "0x9AEE24", VA = "0x9AEE24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text SessionText;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text TrackText;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text SessionTextFocus;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject ConfigureArmLengthButton;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool IsTutorial;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool busy;

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x9AD5BC", Offset = "0x9AD5BC", VA = "0x9AD5BC", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x9ADB60", Offset = "0x9ADB60", VA = "0x9ADB60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875BC4", Offset = "0x875BC4")]
		private IEnumerator LoadHandTestingScene()
		{
			return null;
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x9ADA64", Offset = "0x9ADA64", VA = "0x9ADA64")]
		public void LeavePause()
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x9ADBEC", Offset = "0x9ADBEC", VA = "0x9ADBEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x9AD9F4", Offset = "0x9AD9F4", VA = "0x9AD9F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875C28", Offset = "0x875C28")]
		private IEnumerator ReloadLevel()
		{
			return null;
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x9AE0A4", Offset = "0x9AE0A4", VA = "0x9AE0A4")]
		public void ClickedCalibrate()
		{
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x9AE174", Offset = "0x9AE174", VA = "0x9AE174")]
		public PauseMenu()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class PlayerFeedback : MonoBehaviour
	{
		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsLeft;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject OuterOrb;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject InnerOrb;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _innerMaterial;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _orbMaterial;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _vibrateID;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _bounceID;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _colorID;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _originalScale;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _inScale;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _originalAlpha;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _inAlpha;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _innerMultiply;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _outerMultiply;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _fadeID;

		[Token(Token = "0x170002EE")]
		private OVRInput.Controller ThisController
		{
			[Token(Token = "0x600226B")]
			[Address(RVA = "0x9AEFCC", Offset = "0x9AEFCC", VA = "0x9AEFCC")]
			get
			{
				return default(OVRInput.Controller);
			}
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x9AEE8C", Offset = "0x9AEE8C", VA = "0x9AEE8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x9AEFE0", Offset = "0x9AEFE0", VA = "0x9AEFE0")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x9AF0CC", Offset = "0x9AF0CC", VA = "0x9AF0CC")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x9AF284", Offset = "0x9AF284", VA = "0x9AF284")]
		private bool IsMatch(string tagName)
		{
			return default(bool);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x9AF2F8", Offset = "0x9AF2F8", VA = "0x9AF2F8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x9AF6A4", Offset = "0x9AF6A4", VA = "0x9AF6A4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x9AF9DC", Offset = "0x9AF9DC", VA = "0x9AF9DC")]
		public PlayerFeedback()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x9AF9F8", Offset = "0x9AF9F8", VA = "0x9AF9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875C8C", Offset = "0x875C8C")]
		private void <FadeIn>b__19_0(float alpha)
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x9AFBFC", Offset = "0x9AFBFC", VA = "0x9AFBFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875C9C", Offset = "0x875C9C")]
		private void <OnTriggerEnter>b__21_0(float value)
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x9AFCE0", Offset = "0x9AFCE0", VA = "0x9AFCE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875CAC", Offset = "0x875CAC")]
		private void <OnTriggerEnter>b__21_1(float alpha)
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x9AFDDC", Offset = "0x9AFDDC", VA = "0x9AFDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875CBC", Offset = "0x875CBC")]
		private void <OnTriggerExit>b__22_0(float value)
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x9AFEC0", Offset = "0x9AFEC0", VA = "0x9AFEC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875CCC", Offset = "0x875CCC")]
		private void <OnTriggerExit>b__22_1(float alpha)
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class RecenterViewPanel : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E3A8", Offset = "0x85E3A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4003297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__3_1;

			[Token(Token = "0x60030A0")]
			[Address(RVA = "0x9B0434", Offset = "0x9B0434", VA = "0x9B0434")]
			public <>c()
			{
			}

			[Token(Token = "0x60030A1")]
			[Address(RVA = "0x9B043C", Offset = "0x9B043C", VA = "0x9B043C")]
			internal bool <FadeInAndOut>b__3_1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E3B8", Offset = "0x85E3B8")]
		private sealed class <FadeInAndOut>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400329A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400329B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RecenterViewPanel <>4__this;

			[Token(Token = "0x400329C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float secondsToStay;

			[Token(Token = "0x17000569")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030A5")]
				[Address(RVA = "0x9B0830", Offset = "0x9B0830", VA = "0x9B0830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030A7")]
				[Address(RVA = "0x9B0898", Offset = "0x9B0898", VA = "0x9B0898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030A2")]
			[Address(RVA = "0x9B0224", Offset = "0x9B0224", VA = "0x9B0224")]
			[DebuggerHidden]
			public <FadeInAndOut>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60030A3")]
			[Address(RVA = "0x9B04A4", Offset = "0x9B04A4", VA = "0x9B04A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030A4")]
			[Address(RVA = "0x9B04A8", Offset = "0x9B04A8", VA = "0x9B04A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030A6")]
			[Address(RVA = "0x9B0838", Offset = "0x9B0838", VA = "0x9B0838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject avatarNorth;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool inLevel;

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x9AFFBC", Offset = "0x9AFFBC", VA = "0x9AFFBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x9B01A4", Offset = "0x9B01A4", VA = "0x9B01A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875CDC", Offset = "0x875CDC")]
		public IEnumerator FadeInAndOut(float secondsToStay)
		{
			return null;
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x9B0250", Offset = "0x9B0250", VA = "0x9B0250")]
		public RecenterViewPanel()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x9B0258", Offset = "0x9B0258", VA = "0x9B0258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875D40", Offset = "0x875D40")]
		private void <FadeInAndOut>b__3_0(float alpha)
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x9B02C8", Offset = "0x9B02C8", VA = "0x9B02C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875D50", Offset = "0x875D50")]
		private void <FadeInAndOut>b__3_2(float alpha)
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x9B0338", Offset = "0x9B0338", VA = "0x9B0338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875D60", Offset = "0x875D60")]
		private void <FadeInAndOut>b__3_3()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class RoomSpaceDebug : MonoBehaviour
	{
		[Token(Token = "0x600227D")]
		[Address(RVA = "0x9B08A0", Offset = "0x9B08A0", VA = "0x9B08A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x9B09A0", Offset = "0x9B09A0", VA = "0x9B09A0")]
		public RoomSpaceDebug()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class ScoreManager : MonoBehaviour
	{
		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text ScoreText;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup CanvasGroup;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float fadeAmount;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _isShowing;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _tweenFadeID;

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x9B09A8", Offset = "0x9B09A8", VA = "0x9B09A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x9B0A00", Offset = "0x9B0A00", VA = "0x9B0A00")]
		private void Update()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x9B0F48", Offset = "0x9B0F48", VA = "0x9B0F48")]
		public ScoreManager()
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x9B0F58", Offset = "0x9B0F58", VA = "0x9B0F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875D70", Offset = "0x875D70")]
		private void <Update>b__6_0(float alpha)
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x9B0F74", Offset = "0x9B0F74", VA = "0x9B0F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875D80", Offset = "0x875D80")]
		private void <Update>b__6_1(float alpha)
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class VideoManagerAVPro : VideoManagerBase
	{
		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material Video2DMaterial;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnvironmentColors environmentColor;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color currentVideoColor;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color currentMeshColor;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshRenderer _videoSphere;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshRenderer _holderMesh;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int colorIndexVideo;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int colorIndexMesh;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action _videoReadyCallback;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _wasVideoPlaying;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool once;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int totalColors;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float intervalTime;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool colorVideoDelayDone;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool colorMeshDelayDone;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int colorVideoID;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int colorMeshID;

		[Token(Token = "0x170002EF")]
		public MediaPlayer MediaPlayer
		{
			[Token(Token = "0x6002284")]
			[Address(RVA = "0x9BFDC4", Offset = "0x9BFDC4", VA = "0x9BFDC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x9BFDCC", Offset = "0x9BFDCC", VA = "0x9BFDCC")]
		public void StartEnvironmentColor()
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x9BFEA4", Offset = "0x9BFEA4", VA = "0x9BFEA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x9C03AC", Offset = "0x9C03AC", VA = "0x9C03AC")]
		private void ApplyColorIndex()
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x9C0CF4", Offset = "0x9C0CF4", VA = "0x9C0CF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x9C0018", Offset = "0x9C0018", VA = "0x9C0018")]
		private void Setup()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x9C0DE8", Offset = "0x9C0DE8", VA = "0x9C0DE8", Slot = "4")]
		public override void LoadVideo(string fileName, Action videoReadyCallback)
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x9C0F08", Offset = "0x9C0F08", VA = "0x9C0F08", Slot = "5")]
		public override void StopAndCloseVideo()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x9C1004", Offset = "0x9C1004", VA = "0x9C1004", Slot = "7")]
		public override void PauseVideo()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x9C10E0", Offset = "0x9C10E0", VA = "0x9C10E0", Slot = "6")]
		public override void PlayVideo()
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x9C11BC", Offset = "0x9C11BC", VA = "0x9C11BC")]
		public void Update()
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x9BFE1C", Offset = "0x9BFE1C", VA = "0x9BFE1C")]
		private void StartColorTween()
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x9C00E0", Offset = "0x9C00E0", VA = "0x9C00E0")]
		private void CancelTween()
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x9C04F4", Offset = "0x9C04F4", VA = "0x9C04F4")]
		private void ColorTweenVideo()
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x9C08F4", Offset = "0x9C08F4", VA = "0x9C08F4")]
		private void ColorTweenMesh()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x9C0264", Offset = "0x9C0264", VA = "0x9C0264")]
		public void ChangeColorVideo(Color val)
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x9C0308", Offset = "0x9C0308", VA = "0x9C0308")]
		public void ChangeColorMesh(Color val)
		{
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x9C12A8", Offset = "0x9C12A8", VA = "0x9C12A8")]
		public VideoManagerAVPro()
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x9C12B8", Offset = "0x9C12B8", VA = "0x9C12B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875D90", Offset = "0x875D90")]
		private void <ColorTweenVideo>b__32_0()
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x9C12C8", Offset = "0x9C12C8", VA = "0x9C12C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875DA0", Offset = "0x875DA0")]
		private void <ColorTweenVideo>b__32_1()
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x9C12D8", Offset = "0x9C12D8", VA = "0x9C12D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875DB0", Offset = "0x875DB0")]
		private void <ColorTweenMesh>b__33_0()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x9C12E8", Offset = "0x9C12E8", VA = "0x9C12E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875DC0", Offset = "0x875DC0")]
		private void <ColorTweenMesh>b__33_1()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public abstract class VideoManagerBase : MonoBehaviour
	{
		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Enums.VideoType VideoType;

		[Token(Token = "0x600229A")]
		public abstract void LoadVideo(string fileName, Action videoReadyCallback);

		[Token(Token = "0x600229B")]
		public abstract void StopAndCloseVideo();

		[Token(Token = "0x600229C")]
		public abstract void PlayVideo();

		[Token(Token = "0x600229D")]
		public abstract void PauseVideo();

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x9C12B0", Offset = "0x9C12B0", VA = "0x9C12B0")]
		protected VideoManagerBase()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class cnAmbientLighting : MonoBehaviour
	{
		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light light;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer holder;

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x9C34BC", Offset = "0x9C34BC", VA = "0x9C34BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x9C35D8", Offset = "0x9C35D8", VA = "0x9C35D8")]
		public cnAmbientLighting()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class GuidedLeaderboard : MonoBehaviour
	{
		[Token(Token = "0x20007AC")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x4002357")]
		private const string MOVESET_01 = "MOVESET_01";

		[Token(Token = "0x4002358")]
		private const string MOVESET_02 = "MOVESET_02";

		[Token(Token = "0x4002359")]
		private const string MOVESET_03 = "MOVESET_03";

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string currentMoveSet;

		[Token(Token = "0x400235B")]
		private const int NUMBER_OF_ENTRIES = 15;

		[Token(Token = "0x400235C")]
		private const float LEADERBOARD_POLL_TIME = 30f;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float pollTimer;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SortedDictionary<int, LeaderboardEntry> highScores;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool foundLocalUserHighScore;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OnHighScoreLeaderboardUpdated highScoreCallback;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LeaderboardEntry cachedLeaderboardEntry;

		[Token(Token = "0x170002F0")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0xA2BCC0", Offset = "0xA2BCC0", VA = "0xA2BCC0")]
			set
			{
			}
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xA2B6C0", Offset = "0xA2B6C0", VA = "0xA2B6C0")]
		public void CheckEntitlement()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xA2B880", Offset = "0xA2B880", VA = "0xA2B880")]
		private void EntitlementsCallback(Message message)
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xA2B9AC", Offset = "0xA2B9AC", VA = "0xA2B9AC")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xA2BB38", Offset = "0xA2BB38", VA = "0xA2BB38")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xA2BCC8", Offset = "0xA2BCC8", VA = "0xA2BCC8")]
		private string GetCurrentMoveset()
		{
			return null;
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xA2BB8C", Offset = "0xA2BB8C", VA = "0xA2BB8C")]
		public void GetHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xA2BD80", Offset = "0xA2BD80", VA = "0xA2BD80")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xA2C4FC", Offset = "0xA2C4FC", VA = "0xA2C4FC")]
		public void ClearCache()
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xA2C504", Offset = "0xA2C504", VA = "0xA2C504")]
		public LeaderboardEntry GetPlayerLeaderboardEntry()
		{
			return null;
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xA2C50C", Offset = "0xA2C50C", VA = "0xA2C50C")]
		public SortedDictionary<int, LeaderboardEntry> GetCachedHighScores()
		{
			return null;
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xA2C530", Offset = "0xA2C530", VA = "0xA2C530")]
		public void SubmitScore(long score)
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xA2C6BC", Offset = "0xA2C6BC", VA = "0xA2C6BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xA2C6C0", Offset = "0xA2C6C0", VA = "0xA2C6C0")]
		public GuidedLeaderboard()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class cnTaiChi : MonoBehaviour
	{
		[Token(Token = "0x20007AD")]
		public enum InGameCategoreyVO
		{
			[Token(Token = "0x400329E")]
			BREATHING,
			[Token(Token = "0x400329F")]
			CONNECTION,
			[Token(Token = "0x40032A0")]
			POSTURE,
			[Token(Token = "0x40032A1")]
			AWARENESS,
			[Token(Token = "0x40032A2")]
			GENERAL
		}

		[Serializable]
		[Token(Token = "0x20007AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E3C8", Offset = "0x85E3C8")]
		private sealed class <>c
		{
			[Token(Token = "0x40032A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__90_0;

			[Token(Token = "0x40032A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__109_0;

			[Token(Token = "0x40032A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<float> <>9__109_1;

			[Token(Token = "0x40032A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action <>9__111_0;

			[Token(Token = "0x60030AD")]
			[Address(RVA = "0xB05794", Offset = "0xB05794", VA = "0xB05794")]
			public <>c()
			{
			}

			[Token(Token = "0x60030AE")]
			[Address(RVA = "0xB0579C", Offset = "0xB0579C", VA = "0xB0579C")]
			internal void <Play>b__90_0()
			{
			}

			[Token(Token = "0x60030AF")]
			[Address(RVA = "0xB05A64", Offset = "0xB05A64", VA = "0xB05A64")]
			internal void <Update>b__109_0()
			{
			}

			[Token(Token = "0x60030B0")]
			[Address(RVA = "0xB05B14", Offset = "0xB05B14", VA = "0xB05B14")]
			internal void <Update>b__109_1(float alpha)
			{
			}

			[Token(Token = "0x60030B1")]
			[Address(RVA = "0xB05BE4", Offset = "0xB05BE4", VA = "0xB05BE4")]
			internal void <ProcessInGameVO>b__111_0()
			{
			}
		}

		[Token(Token = "0x20007AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E3D8", Offset = "0x85E3D8")]
		private sealed class <CheckForEnd>d__98 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public cnTaiChi <>4__this;

			[Token(Token = "0x1700056B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030B5")]
				[Address(RVA = "0xB06194", Offset = "0xB06194", VA = "0xB06194", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030B7")]
				[Address(RVA = "0xB061FC", Offset = "0xB061FC", VA = "0xB061FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030B2")]
			[Address(RVA = "0xB05EAC", Offset = "0xB05EAC", VA = "0xB05EAC")]
			[DebuggerHidden]
			public <CheckForEnd>d__98(int <>1__state)
			{
			}

			[Token(Token = "0x60030B3")]
			[Address(RVA = "0xB05ED8", Offset = "0xB05ED8", VA = "0xB05ED8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030B4")]
			[Address(RVA = "0xB05EDC", Offset = "0xB05EDC", VA = "0xB05EDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030B6")]
			[Address(RVA = "0xB0619C", Offset = "0xB0619C", VA = "0xB0619C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E3E8", Offset = "0x85E3E8")]
		private sealed class <PlayerHandDetection>d__129 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40032AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public cnTaiChi <>4__this;

			[Token(Token = "0x40032AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <noScoreTimeout>5__2;

			[Token(Token = "0x40032B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <offeredCalibration>5__3;

			[Token(Token = "0x1700056D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030BB")]
				[Address(RVA = "0xB06910", Offset = "0xB06910", VA = "0xB06910", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030BD")]
				[Address(RVA = "0xB06978", Offset = "0xB06978", VA = "0xB06978", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030B8")]
			[Address(RVA = "0xB06204", Offset = "0xB06204", VA = "0xB06204")]
			[DebuggerHidden]
			public <PlayerHandDetection>d__129(int <>1__state)
			{
			}

			[Token(Token = "0x60030B9")]
			[Address(RVA = "0xB06230", Offset = "0xB06230", VA = "0xB06230", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030BA")]
			[Address(RVA = "0xB06234", Offset = "0xB06234", VA = "0xB06234", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030BC")]
			[Address(RVA = "0xB06918", Offset = "0xB06918", VA = "0xB06918", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator[] avatarTeachers;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator avatarSelf;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator avatarSelfLead;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform avatarLeadLeftTransform;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform avatarLeadRightTransform;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform avatarLeftTransform;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform avatarRightTransform;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform inputLeft;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform inputRight;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform outputLeft;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform outputRight;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform leadLeft;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform leadRight;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioSource[] leftAudioSource;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioSource[] rightAudioSource;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FootPlacementMover FootMoverLeft;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FootPlacementMover FootMoverRight;

		[Token(Token = "0x4002373")]
		private const float speed = 8f;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float leftDistance;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float rightDistance;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float leftPoints;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float rightPoints;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float currentStartTime;

		[Token(Token = "0x4002379")]
		private const float DELAY_TIME = 3f;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform leftAccuracyMeter;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform rightAccuracyMeter;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform leftAccuracyMarker;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rightAccuracyMarker;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool timerRanOut;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float accuracyLeft;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float accuracyRight;

		[Token(Token = "0x4002381")]
		private const float acuracyDistance = 0.2f;

		[Token(Token = "0x4002382")]
		private const float accuracyMarkerThreshold = 0.7f;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float currentLeftMultiplier;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float currentRightMultiplier;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float leftAccuracyMultiplierTimer;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float rightAccuracyMultiplierTimer;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool isLeftInMulitplier;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool isRightInMultiplier;

		[Token(Token = "0x4002389")]
		private const float multiplierDuration = 8f;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float leftScoreTimer;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float rightScoreTimer;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float leftScoreDuration;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float rightScoreDuration;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float leftPointsSquared;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float rightPointsSquared;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float leftScoreDisplayAccumulation;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float rightScoreDisplayAccumulation;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioSource leftMultiplierSoundFX;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioSource rightMultiplierSoundFX;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public OculusHaptics leftControllerHaptics;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public OculusHaptics rightControllerHaptics;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool playLeftHapticsOnce;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool playRightHapticsOnce;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AudioClip[] dingClips;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public AudioSource leftMultiplierFailedAudioSource;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AudioSource rightMultiplierFailedAudioSource;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GameObject textLeftMultiplier;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GameObject textRightMultiplier;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public cnMultiplierEffect[] textLeftScoreEffectPool;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public cnMultiplierEffect[] textRightScoreEffectPool;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int textLeftScoreEffectPoolIndex;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private int textRightScoreEffectPoolIndex;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B7CC", Offset = "0x86B7CC")]
		private float <TotalScore>k__BackingField;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private bool _paused;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		private bool _isIntro;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float menuMusicVolumeMax;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private VideoManagerAVPro videoManager;

		[Token(Token = "0x40023A6")]
		private const float SOFT_HAPTIC_INTENSITY = 0.1f;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Material LeftArcadeInnerTransparent;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Material RightArcadeInnerTransparent;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Material LeftArcadeInnerOpaque;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Material RightArcadeInnerOpaque;

		[Token(Token = "0x40023AB")]
		private const float PATH_INNER_ORB_SCALE = 0.075f;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public AudioSource audioSourceFoundFX;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float ORBS_DELAY;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float IN_GAME_VO_FREQUENCY;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float currentTimerVO;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private bool voEndingOnce;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float OriginalAlpha;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public InGameCategoreyVO eCategoreyVO;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int _introSoundDelayID;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public bool IsCurrentlyMoving;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int _delayIntroID;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Coroutine CheckForEndCoroutine;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private int _pathsID;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private int _targetsID;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private int _orbsDelayID;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public bool MotionStarted;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Vector3 _leftVel;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private Vector3 _rightVel;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int _leftVibrateID;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private int _rightVibrateID;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private bool _isLeftIn;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
		private bool _isRightIn;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private DateTime lastOrbInteractionTime;

		[Token(Token = "0x170002F1")]
		public float TotalScore
		{
			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x9C6D3C", Offset = "0x9C6D3C", VA = "0x9C6D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875DD0", Offset = "0x875DD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x9C6D44", Offset = "0x9C6D44", VA = "0x9C6D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875DE0", Offset = "0x875DE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public bool IsIntro
		{
			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x9C6D4C", Offset = "0x9C6D4C", VA = "0x9C6D4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F3")]
		public bool IsPaused
		{
			[Token(Token = "0x60022CF")]
			[Address(RVA = "0x9CE36C", Offset = "0x9CE36C", VA = "0x9CE36C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x9C6D54", Offset = "0x9C6D54", VA = "0x9C6D54")]
		private void Start()
		{
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x9C700C", Offset = "0x9C700C", VA = "0x9C700C")]
		public void Intro()
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x9C75BC", Offset = "0x9C75BC", VA = "0x9C75BC")]
		private void Play()
		{
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x9C7894", Offset = "0x9C7894", VA = "0x9C7894")]
		private void PrepareTaiChiMotion()
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x9C7FF0", Offset = "0x9C7FF0", VA = "0x9C7FF0")]
		public void ResetScore()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x9C7FF8", Offset = "0x9C7FF8", VA = "0x9C7FF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875DF0", Offset = "0x875DF0")]
		private IEnumerator CheckForEnd()
		{
			return null;
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x9C74F8", Offset = "0x9C74F8", VA = "0x9C74F8")]
		public void SetGhostsLayer(string layerName)
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x9C8068", Offset = "0x9C8068", VA = "0x9C8068")]
		private void StartTaiChiMotion()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x9C7A10", Offset = "0x9C7A10", VA = "0x9C7A10")]
		public void ResetPoints()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x9C7F64", Offset = "0x9C7F64", VA = "0x9C7F64")]
		private void StopTrack()
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x9C836C", Offset = "0x9C836C", VA = "0x9C836C")]
		internal void PlayTrack()
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x9C8478", Offset = "0x9C8478", VA = "0x9C8478")]
		public bool IsReadyToFade()
		{
			return default(bool);
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x9C848C", Offset = "0x9C848C", VA = "0x9C848C")]
		public bool IsReadyToCountDownTime()
		{
			return default(bool);
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x9C84A8", Offset = "0x9C84A8", VA = "0x9C84A8")]
		public void CalibratePlayer()
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x9C895C", Offset = "0x9C895C", VA = "0x9C895C")]
		private void Update()
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x9C9DF0", Offset = "0x9C9DF0", VA = "0x9C9DF0")]
		private void CalculateRemainingTime()
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x9CA3AC", Offset = "0x9CA3AC", VA = "0x9CA3AC")]
		private void ProcessInGameVO()
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x9C6D5C", Offset = "0x9C6D5C", VA = "0x9C6D5C")]
		private void SetGhostsAlpha(float alpha)
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x9C9860", Offset = "0x9C9860", VA = "0x9C9860")]
		public void LerpGhostsIn()
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x9CB48C", Offset = "0x9CB48C", VA = "0x9CB48C")]
		public void LerpGhostsOut()
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x9C94F0", Offset = "0x9C94F0", VA = "0x9C94F0")]
		private void PauseLoop()
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x9C9BF0", Offset = "0x9C9BF0", VA = "0x9C9BF0")]
		private void GameLoop()
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x9CB818", Offset = "0x9CB818", VA = "0x9CB818")]
		private void ProcessMovement()
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x9CD254", Offset = "0x9CD254", VA = "0x9CD254")]
		private void ProcessArcadeMode()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x9CDFB8", Offset = "0x9CDFB8", VA = "0x9CDFB8")]
		private void LeftMultiplierEffectComplete()
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x9CE15C", Offset = "0x9CE15C", VA = "0x9CE15C")]
		private void RightMultiplierEffectComplete()
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x9CE300", Offset = "0x9CE300", VA = "0x9CE300")]
		public void Interacted()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x9C83F8", Offset = "0x9C83F8", VA = "0x9C83F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875E54", Offset = "0x875E54")]
		private IEnumerator PlayerHandDetection(float delay)
		{
			return null;
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x9CDD84", Offset = "0x9CDD84", VA = "0x9CDD84")]
		private void LerpAccuracy()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x9CE374", Offset = "0x9CE374", VA = "0x9CE374")]
		public void TogglePause(bool isPaused)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x9C7298", Offset = "0x9C7298", VA = "0x9C7298")]
		public void ToggleArcadeEffects(bool isOn)
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x9CE77C", Offset = "0x9CE77C", VA = "0x9CE77C")]
		public cnTaiChi()
		{
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x9CE898", Offset = "0x9CE898", VA = "0x9CE898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875EB8", Offset = "0x875EB8")]
		private void <PrepareTaiChiMotion>b__93_0()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x9CEBF0", Offset = "0x9CEBF0", VA = "0x9CEBF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875EC8", Offset = "0x875EC8")]
		private void <StartTaiChiMotion>b__102_0()
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x9CEF08", Offset = "0x9CEF08", VA = "0x9CEF08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875ED8", Offset = "0x875ED8")]
		private void <ProcessArcadeMode>b__124_0()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x9CEF0C", Offset = "0x9CEF0C", VA = "0x9CEF0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875EE8", Offset = "0x875EE8")]
		private void <ProcessArcadeMode>b__124_1()
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x9CEF10", Offset = "0x9CEF10", VA = "0x9CEF10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875EF8", Offset = "0x875EF8")]
		private void <ProcessArcadeMode>b__124_2()
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x9CEF14", Offset = "0x9CEF14", VA = "0x9CEF14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875F08", Offset = "0x875F08")]
		private void <ProcessArcadeMode>b__124_3()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class ScrollButton : MonoBehaviour
	{
		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image BGImage;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text Text;

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x9B297C", Offset = "0x9B297C", VA = "0x9B297C")]
		public ScrollButton()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class ScrollButtonLong : MonoBehaviour
	{
		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image BGImage;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text Text;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text TimeText;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text CompletedText;

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x9B2984", Offset = "0x9B2984", VA = "0x9B2984")]
		public ScrollButtonLong()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class SelectEnvironmentMenu : ContentMenu
	{
		[Token(Token = "0x20007B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E3F8", Offset = "0x85E3F8")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x40032B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool blocked;

			[Token(Token = "0x60030BE")]
			[Address(RVA = "0x9B5560", Offset = "0x9B5560", VA = "0x9B5560")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x60030BF")]
			[Address(RVA = "0x9B5568", Offset = "0x9B5568", VA = "0x9B5568")]
			internal void <DoRandomEffect>b__0()
			{
			}

			[Token(Token = "0x60030C0")]
			[Address(RVA = "0x9B5570", Offset = "0x9B5570", VA = "0x9B5570")]
			internal void <DoRandomEffect>b__1()
			{
			}

			[Token(Token = "0x60030C1")]
			[Address(RVA = "0x9B5578", Offset = "0x9B5578", VA = "0x9B5578")]
			internal void <DoRandomEffect>b__2()
			{
			}
		}

		[Token(Token = "0x20007B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E408", Offset = "0x85E408")]
		private sealed class <DoRandomEffect>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectEnvironmentMenu <>4__this;

			[Token(Token = "0x40032B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass46_0 <>8__1;

			[Token(Token = "0x40032B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <lastIndex>5__2;

			[Token(Token = "0x1700056F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030C5")]
				[Address(RVA = "0x9B59F0", Offset = "0x9B59F0", VA = "0x9B59F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000570")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030C7")]
				[Address(RVA = "0x9B5A58", Offset = "0x9B5A58", VA = "0x9B5A58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030C2")]
			[Address(RVA = "0x9B4DF4", Offset = "0x9B4DF4", VA = "0x9B4DF4")]
			[DebuggerHidden]
			public <DoRandomEffect>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x60030C3")]
			[Address(RVA = "0x9B5628", Offset = "0x9B5628", VA = "0x9B5628", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030C4")]
			[Address(RVA = "0x9B562C", Offset = "0x9B562C", VA = "0x9B562C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030C6")]
			[Address(RVA = "0x9B59F8", Offset = "0x9B59F8", VA = "0x9B59F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E418", Offset = "0x85E418")]
		private sealed class <>c
		{
			[Token(Token = "0x40032B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__47_0;

			[Token(Token = "0x40032B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__47_1;

			[Token(Token = "0x40032BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__47_2;

			[Token(Token = "0x60030C9")]
			[Address(RVA = "0x9B5328", Offset = "0x9B5328", VA = "0x9B5328")]
			public <>c()
			{
			}

			[Token(Token = "0x60030CA")]
			[Address(RVA = "0x9B5330", Offset = "0x9B5330", VA = "0x9B5330")]
			internal void <LoadScene>b__47_0()
			{
			}

			[Token(Token = "0x60030CB")]
			[Address(RVA = "0x9B53E0", Offset = "0x9B53E0", VA = "0x9B53E0")]
			internal void <LoadScene>b__47_1()
			{
			}

			[Token(Token = "0x60030CC")]
			[Address(RVA = "0x9B549C", Offset = "0x9B549C", VA = "0x9B549C")]
			internal void <LoadScene>b__47_2()
			{
			}
		}

		[Token(Token = "0x20007B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E428", Offset = "0x85E428")]
		private sealed class <LoadScene>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectEnvironmentMenu <>4__this;

			[Token(Token = "0x40032BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000571")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030D0")]
				[Address(RVA = "0x9B657C", Offset = "0x9B657C", VA = "0x9B657C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000572")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030D2")]
				[Address(RVA = "0x9B65E4", Offset = "0x9B65E4", VA = "0x9B65E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030CD")]
			[Address(RVA = "0x9B4E20", Offset = "0x9B4E20", VA = "0x9B4E20")]
			[DebuggerHidden]
			public <LoadScene>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x60030CE")]
			[Address(RVA = "0x9B5A60", Offset = "0x9B5A60", VA = "0x9B5A60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030CF")]
			[Address(RVA = "0x9B5A64", Offset = "0x9B5A64", VA = "0x9B5A64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030D1")]
			[Address(RVA = "0x9B6584", Offset = "0x9B6584", VA = "0x9B6584", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E438", Offset = "0x85E438")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x40032BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SelectEnvironmentMenu <>4__this;

			[Token(Token = "0x40032C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completeCallback;

			[Token(Token = "0x60030D3")]
			[Address(RVA = "0x9B4E4C", Offset = "0x9B4E4C", VA = "0x9B4E4C")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x60030D4")]
			[Address(RVA = "0x9B5580", Offset = "0x9B5580", VA = "0x9B5580")]
			internal void <UpdateContent>b__0()
			{
			}

			[Token(Token = "0x60030D5")]
			[Address(RVA = "0x9B5598", Offset = "0x9B5598", VA = "0x9B5598")]
			internal void <UpdateContent>b__1()
			{
			}

			[Token(Token = "0x60030D6")]
			[Address(RVA = "0x9B55D4", Offset = "0x9B55D4", VA = "0x9B55D4")]
			internal void <UpdateContent>b__2()
			{
			}

			[Token(Token = "0x60030D7")]
			[Address(RVA = "0x9B55EC", Offset = "0x9B55EC", VA = "0x9B55EC")]
			internal void <UpdateContent>b__3()
			{
			}
		}

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject SnowMountains;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject Japan;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject CentralPark;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject RiverMeadows;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject Tropical;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject Fjord;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject Aruba;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject Caves;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject Underwater;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject BigIslandTropical;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject LostFalls;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject SierraGrande;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject CrystalPeak;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject AumoWoods;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject InfinityRise;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject SantiIsle;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject DjinnSands;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject ClearLake;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject FiroJungle;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject JadeForest;

		[Token(Token = "0x40023DC")]
		private const int SnowMountainsIndex = 2;

		[Token(Token = "0x40023DD")]
		private const int JapanIndex = 3;

		[Token(Token = "0x40023DE")]
		private const int CentralParkIndex = 4;

		[Token(Token = "0x40023DF")]
		private const int RiverIndex = 5;

		[Token(Token = "0x40023E0")]
		private const int TropicalIndex = 6;

		[Token(Token = "0x40023E1")]
		private const int FjordIndex = 7;

		[Token(Token = "0x40023E2")]
		private const int ArubaIndex = 8;

		[Token(Token = "0x40023E3")]
		private const int CavesIndex = 9;

		[Token(Token = "0x40023E4")]
		private const int UnderwaterIndex = 10;

		[Token(Token = "0x40023E5")]
		private const int BigIslandTropicalIndex = 11;

		[Token(Token = "0x40023E6")]
		private const int LostFallsIndex = 12;

		[Token(Token = "0x40023E7")]
		private const int SierraGrandeIndex = 15;

		[Token(Token = "0x40023E8")]
		private const int CrystalPeakIndex = 16;

		[Token(Token = "0x40023E9")]
		private const int AumoWoodsIndex = 17;

		[Token(Token = "0x40023EA")]
		private const int InfinityRiseIndex = 18;

		[Token(Token = "0x40023EB")]
		private const int SantiIsleIndex = 19;

		[Token(Token = "0x40023EC")]
		private const int DjinnSandsIndex = 20;

		[Token(Token = "0x40023ED")]
		private const int ClearLakeIndex = 21;

		[Token(Token = "0x40023EE")]
		private const int FiroJungleIndex = 22;

		[Token(Token = "0x40023EF")]
		private const int JadeForestIndex = 23;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int maxIndex;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int index;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool loading;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _waiting;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int randomIndex;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _clickedRandom;

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x9B32A8", Offset = "0x9B32A8", VA = "0x9B32A8", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x9B4D14", Offset = "0x9B4D14", VA = "0x9B4D14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875F18", Offset = "0x875F18")]
		private IEnumerator DoRandomEffect()
		{
			return null;
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x9B4D84", Offset = "0x9B4D84", VA = "0x9B4D84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875F7C", Offset = "0x875F7C")]
		private IEnumerator LoadScene()
		{
			return null;
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x9B4A34", Offset = "0x9B4A34", VA = "0x9B4A34")]
		private void UpdateContent(bool isLeft, bool skip = false, [Optional] Action completeCallback)
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x9B4E54", Offset = "0x9B4E54", VA = "0x9B4E54")]
		private void ReadyToSwitch()
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x9B5120", Offset = "0x9B5120", VA = "0x9B5120")]
		private void Start()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x9B520C", Offset = "0x9B520C", VA = "0x9B520C")]
		public SelectEnvironmentMenu()
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x9B521C", Offset = "0x9B521C", VA = "0x9B521C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x875FE0", Offset = "0x875FE0")]
		private void <ReceiveInput>b__45_0(float alpha)
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class SelectMusicMenu : MusicMenu
	{
		[Serializable]
		[Token(Token = "0x20007B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E448", Offset = "0x85E448")]
		private sealed class <>c
		{
			[Token(Token = "0x40032C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MusicTrack, bool> <>9__0_0;

			[Token(Token = "0x40032C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MusicTrack, string> <>9__0_1;

			[Token(Token = "0x60030D9")]
			[Address(RVA = "0x9B6D40", Offset = "0x9B6D40", VA = "0x9B6D40")]
			public <>c()
			{
			}

			[Token(Token = "0x60030DA")]
			[Address(RVA = "0x9B6D48", Offset = "0x9B6D48", VA = "0x9B6D48")]
			internal bool <Start>b__0_0(MusicTrack t)
			{
				return default(bool);
			}

			[Token(Token = "0x60030DB")]
			[Address(RVA = "0x9B6D60", Offset = "0x9B6D60", VA = "0x9B6D60")]
			internal string <Start>b__0_1(MusicTrack t)
			{
				return null;
			}
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x9B65EC", Offset = "0x9B65EC", VA = "0x9B65EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x9B6CD4", Offset = "0x9B6CD4", VA = "0x9B6CD4")]
		public SelectMusicMenu()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class SelectTrainingMenu : ContentMenu
	{
		[Serializable]
		[Token(Token = "0x20007B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E458", Offset = "0x85E458")]
		private sealed class <>c
		{
			[Token(Token = "0x40032C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__4_0;

			[Token(Token = "0x40032C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__4_1;

			[Token(Token = "0x40032C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action <>9__4_2;

			[Token(Token = "0x60030DD")]
			[Address(RVA = "0x9B8320", Offset = "0x9B8320", VA = "0x9B8320")]
			public <>c()
			{
			}

			[Token(Token = "0x60030DE")]
			[Address(RVA = "0x9B8328", Offset = "0x9B8328", VA = "0x9B8328")]
			internal void <LoadScene>b__4_0()
			{
			}

			[Token(Token = "0x60030DF")]
			[Address(RVA = "0x9B83D8", Offset = "0x9B83D8", VA = "0x9B83D8")]
			internal void <LoadScene>b__4_1()
			{
			}

			[Token(Token = "0x60030E0")]
			[Address(RVA = "0x9B8494", Offset = "0x9B8494", VA = "0x9B8494")]
			internal void <LoadScene>b__4_2()
			{
			}
		}

		[Token(Token = "0x20007B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E468", Offset = "0x85E468")]
		private sealed class <LoadScene>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectTrainingMenu <>4__this;

			[Token(Token = "0x40032CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000573")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030E4")]
				[Address(RVA = "0x9B8C58", Offset = "0x9B8C58", VA = "0x9B8C58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000574")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030E6")]
				[Address(RVA = "0x9B8CC0", Offset = "0x9B8CC0", VA = "0x9B8CC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030E1")]
			[Address(RVA = "0x9B8288", Offset = "0x9B8288", VA = "0x9B8288")]
			[DebuggerHidden]
			public <LoadScene>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60030E2")]
			[Address(RVA = "0x9B8558", Offset = "0x9B8558", VA = "0x9B8558", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030E3")]
			[Address(RVA = "0x9B855C", Offset = "0x9B855C", VA = "0x9B855C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030E5")]
			[Address(RVA = "0x9B8C60", Offset = "0x9B8C60", VA = "0x9B8C60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup CanvasGroup;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _levelIndex;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool loading;

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x9B6D78", Offset = "0x9B6D78", VA = "0x9B6D78", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x9B8218", Offset = "0x9B8218", VA = "0x9B8218")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x875FF0", Offset = "0x875FF0")]
		private IEnumerator LoadScene()
		{
			return null;
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x9B82B4", Offset = "0x9B82B4", VA = "0x9B82B4")]
		public SelectTrainingMenu()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class SessionCompleteMenu : ContentMenu
	{
		[Serializable]
		[Token(Token = "0x20007B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E478", Offset = "0x85E478")]
		private sealed class <>c
		{
			[Token(Token = "0x40032CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__4_0;

			[Token(Token = "0x60030E8")]
			[Address(RVA = "0x9B9454", Offset = "0x9B9454", VA = "0x9B9454")]
			public <>c()
			{
			}

			[Token(Token = "0x60030E9")]
			[Address(RVA = "0x9B945C", Offset = "0x9B945C", VA = "0x9B945C")]
			internal void <ReloadLevel>b__4_0()
			{
			}
		}

		[Token(Token = "0x20007BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E488", Offset = "0x85E488")]
		private sealed class <ReloadLevel>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000575")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030ED")]
				[Address(RVA = "0x9B9BE8", Offset = "0x9B9BE8", VA = "0x9B9BE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000576")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030EF")]
				[Address(RVA = "0x9B9C50", Offset = "0x9B9C50", VA = "0x9B9C50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030EA")]
			[Address(RVA = "0x9B91B4", Offset = "0x9B91B4", VA = "0x9B91B4")]
			[DebuggerHidden]
			public <ReloadLevel>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60030EB")]
			[Address(RVA = "0x9B9520", Offset = "0x9B9520", VA = "0x9B9520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030EC")]
			[Address(RVA = "0x9B9524", Offset = "0x9B9524", VA = "0x9B9524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030EE")]
			[Address(RVA = "0x9B9BF0", Offset = "0x9B9BF0", VA = "0x9B9BF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text SessionText;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool busy;

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x9B8CC8", Offset = "0x9B8CC8", VA = "0x9B8CC8", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x9B901C", Offset = "0x9B901C", VA = "0x9B901C")]
		private void Start()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x9B8FBC", Offset = "0x9B8FBC", VA = "0x9B8FBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876054", Offset = "0x876054")]
		private IEnumerator ReloadLevel()
		{
			return null;
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x9B91E0", Offset = "0x9B91E0", VA = "0x9B91E0")]
		public void NewSession()
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x9B92C4", Offset = "0x9B92C4", VA = "0x9B92C4")]
		public SessionCompleteMenu()
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x9B92CC", Offset = "0x9B92CC", VA = "0x9B92CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8760B8", Offset = "0x8760B8")]
		private void <ReceiveInput>b__2_0()
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x9B9348", Offset = "0x9B9348", VA = "0x9B9348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8760C8", Offset = "0x8760C8")]
		private void <NewSession>b__5_0(float alpha)
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class SetNames : MonoBehaviour
	{
		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsArcade;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MoveSet> MoveSets;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> Names;

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x9B9C58", Offset = "0x9B9C58", VA = "0x9B9C58")]
		private void Start()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x9B9DA0", Offset = "0x9B9DA0", VA = "0x9B9DA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x9B9DA4", Offset = "0x9B9DA4", VA = "0x9B9DA4")]
		public SetNames()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class SoundPlayer : MonoBehaviour
	{
		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource _audioSource;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<AudioClip> _audioClips;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _shouldBePlaying;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _waitingOnStart;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool _isPaused;

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x9BA5AC", Offset = "0x9BA5AC", VA = "0x9BA5AC")]
		public void Pause()
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x9BA5D4", Offset = "0x9BA5D4", VA = "0x9BA5D4")]
		public void UnPause()
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x9BA608", Offset = "0x9BA608", VA = "0x9BA608")]
		private void Awake()
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x9BA688", Offset = "0x9BA688", VA = "0x9BA688")]
		public void AddClip(AudioClip newClip)
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x9BA6F8", Offset = "0x9BA6F8", VA = "0x9BA6F8")]
		public void ClearClips()
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x9BA768", Offset = "0x9BA768", VA = "0x9BA768")]
		private void Update()
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x9BA83C", Offset = "0x9BA83C", VA = "0x9BA83C")]
		public SoundPlayer()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class StyleButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseCustomSpriteAlpha;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float CustomWhiteAlpha;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsBackButton;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool IsWorldTourButton;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Enums.TaiChiButton TaiChiButtonType;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Enums.WorldTourButton WorldTourButtonType;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IsHorizontalFade;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image BG;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image Sprite;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text Text;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text Text2;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _tweenID;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _originalTextSize;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _originalSpriteScale;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _originalSpriteAlpha;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _bgMaterial;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _textMaterial;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _progress;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _isIn;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool _isAnimating;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _originalDoneIconSize;

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x9BAFC4", Offset = "0x9BAFC4", VA = "0x9BAFC4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x9BB204", Offset = "0x9BB204", VA = "0x9BB204")]
		private void AnimateIn()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x9BB380", Offset = "0x9BB380", VA = "0x9BB380")]
		private void CheckForExit()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x9BB514", Offset = "0x9BB514", VA = "0x9BB514", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x9BB398", Offset = "0x9BB398", VA = "0x9BB398")]
		private void AnimateOut()
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x9BB6D8", Offset = "0x9BB6D8", VA = "0x9BB6D8")]
		private void CheckForEnter()
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x9BB6F0", Offset = "0x9BB6F0", VA = "0x9BB6F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x9BB9AC", Offset = "0x9BB9AC", VA = "0x9BB9AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x9BB9B0", Offset = "0x9BB9B0", VA = "0x9BB9B0", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x9BBC18", Offset = "0x9BBC18", VA = "0x9BBC18")]
		public StyleButton()
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x9BBC38", Offset = "0x9BBC38", VA = "0x9BBC38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8760D8", Offset = "0x8760D8")]
		private void <AnimateIn>b__22_0(float value)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x9BC0DC", Offset = "0x9BC0DC", VA = "0x9BC0DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8760E8", Offset = "0x8760E8")]
		private void <AnimateIn>b__22_1()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x9BC164", Offset = "0x9BC164", VA = "0x9BC164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8760F8", Offset = "0x8760F8")]
		private void <AnimateOut>b__25_0(float value)
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x9BC608", Offset = "0x9BC608", VA = "0x9BC608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876108", Offset = "0x876108")]
		private void <AnimateOut>b__25_1()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class TimerManager : MonoBehaviour
	{
		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text TimerText;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup CanvasGroup;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isShowing;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _tweenFadeID;

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x9BD1C4", Offset = "0x9BD1C4", VA = "0x9BD1C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x9BD21C", Offset = "0x9BD21C", VA = "0x9BD21C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x9BD828", Offset = "0x9BD828", VA = "0x9BD828")]
		public TimerManager()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x9BD838", Offset = "0x9BD838", VA = "0x9BD838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876118", Offset = "0x876118")]
		private void <Update>b__5_0(float alpha)
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x9BD8E0", Offset = "0x9BD8E0", VA = "0x9BD8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876128", Offset = "0x876128")]
		private void <Update>b__5_1(float alpha)
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class TrainingCompleteMenu : ContentMenu
	{
		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool busy;

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x9BD8FC", Offset = "0x9BD8FC", VA = "0x9BD8FC", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x9BDB88", Offset = "0x9BDB88", VA = "0x9BDB88")]
		public TrainingCompleteMenu()
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x9BDB90", Offset = "0x9BDB90", VA = "0x9BDB90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876138", Offset = "0x876138")]
		private void <ReceiveInput>b__1_0()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class CNScreenFade : MonoBehaviour
	{
		[Token(Token = "0x20007BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E498", Offset = "0x85E498")]
		private sealed class <Fade>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CNScreenFade <>4__this;

			[Token(Token = "0x40032D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float endAlpha;

			[Token(Token = "0x40032D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float manualFadeTime;

			[Token(Token = "0x40032D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float startAlpha;

			[Token(Token = "0x40032D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <_timer>5__2;

			[Token(Token = "0x40032D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000577")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030F3")]
				[Address(RVA = "0xF5CC5C", Offset = "0xF5CC5C", VA = "0xF5CC5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000578")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030F5")]
				[Address(RVA = "0xF5CCC4", Offset = "0xF5CCC4", VA = "0xF5CCC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030F0")]
			[Address(RVA = "0xF5C3F0", Offset = "0xF5C3F0", VA = "0xF5C3F0")]
			[DebuggerHidden]
			public <Fade>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60030F1")]
			[Address(RVA = "0xF5C494", Offset = "0xF5C494", VA = "0xF5C494", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030F2")]
			[Address(RVA = "0xF5C498", Offset = "0xF5C498", VA = "0xF5C498", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030F4")]
			[Address(RVA = "0xF5CC64", Offset = "0xF5CC64", VA = "0xF5CC64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B7DC", Offset = "0x86B7DC")]
		public float fadeTime;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B814", Offset = "0x86B814")]
		public Color fadeColor;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool fadeOnStart;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int renderQueue;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float uiFadeAlpha;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer fadeRenderer;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshFilter fadeMesh;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material fadeMaterial;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isFading;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _breakEarly;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B84C", Offset = "0x86B84C")]
		private float <currentAlpha>k__BackingField;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool IsGoingToBlack;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool HasStartedFading;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool HasFinishedFading;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CheckControllers controllerChecker;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public OVRCameraRig OVRCameraRig;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IEnumerator _lastFade;

		[Token(Token = "0x170002F4")]
		public float currentAlpha
		{
			[Token(Token = "0x600230F")]
			[Address(RVA = "0xF5BAA0", Offset = "0xF5BAA0", VA = "0xF5BAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876148", Offset = "0x876148")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002310")]
			[Address(RVA = "0xF5BAA8", Offset = "0xF5BAA8", VA = "0xF5BAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876158", Offset = "0x876158")]
			private set
			{
			}
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xF5BAB0", Offset = "0xF5BAB0", VA = "0xF5BAB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xF5BF48", Offset = "0xF5BF48", VA = "0xF5BF48")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xF5C01C", Offset = "0xF5C01C", VA = "0xF5C01C")]
		private void OnLevelFinishedLoading(int level)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xF5C054", Offset = "0xF5C054", VA = "0xF5C054")]
		private void Start()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xF5C09C", Offset = "0xF5C09C", VA = "0xF5C09C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xF5C0B8", Offset = "0xF5C0B8", VA = "0xF5C0B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xF5C21C", Offset = "0xF5C21C", VA = "0xF5C21C")]
		public void SetUIFade(float level)
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xF5BF38", Offset = "0xF5BF38", VA = "0xF5BF38")]
		public void SetFadeLevel(float level)
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xF53DD8", Offset = "0xF53DD8", VA = "0xF53DD8")]
		public void ManualFade(float startAlpha, float endAlpha, float manualFadeTime = -1f)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xF5BF88", Offset = "0xF5BF88", VA = "0xF5BF88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876168", Offset = "0x876168")]
		private IEnumerator Fade(float startAlpha, float endAlpha, float manualFadeTime = -1f)
		{
			return null;
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xF5C29C", Offset = "0xF5C29C", VA = "0xF5C29C")]
		private void SetMaterialAlpha()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xF5C41C", Offset = "0xF5C41C", VA = "0xF5C41C")]
		public bool IsFading()
		{
			return default(bool);
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xF5C424", Offset = "0xF5C424", VA = "0xF5C424")]
		public CNScreenFade()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class MainMenu : ContentMenu
	{
		[Serializable]
		[Token(Token = "0x20007BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E4A8", Offset = "0x85E4A8")]
		private sealed class <>c
		{
			[Token(Token = "0x40032D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__6_0;

			[Token(Token = "0x60030F7")]
			[Address(RVA = "0xA34368", Offset = "0xA34368", VA = "0xA34368")]
			public <>c()
			{
			}

			[Token(Token = "0x60030F8")]
			[Address(RVA = "0xA34370", Offset = "0xA34370", VA = "0xA34370")]
			internal void <LoadScene>b__6_0()
			{
			}
		}

		[Token(Token = "0x20007BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E4B8", Offset = "0x85E4B8")]
		private sealed class <LoadScene>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MainMenu <>4__this;

			[Token(Token = "0x40032DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000579")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030FC")]
				[Address(RVA = "0xA34D04", Offset = "0xA34D04", VA = "0xA34D04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030FE")]
				[Address(RVA = "0xA34D6C", Offset = "0xA34D6C", VA = "0xA34D6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030F9")]
			[Address(RVA = "0xA33F24", Offset = "0xA33F24", VA = "0xA33F24")]
			[DebuggerHidden]
			public <LoadScene>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60030FA")]
			[Address(RVA = "0xA3442C", Offset = "0xA3442C", VA = "0xA3442C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030FB")]
			[Address(RVA = "0xA34430", Offset = "0xA34430", VA = "0xA34430", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030FD")]
			[Address(RVA = "0xA34D0C", Offset = "0xA34D0C", VA = "0xA34D0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup InfoTextCanvasGroup;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text InfoText;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _tweenID;

		[Token(Token = "0x4002431")]
		private const int tutorialIndex = 13;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _loading;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int index;

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xA330FC", Offset = "0xA330FC", VA = "0xA330FC", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xA33EB4", Offset = "0xA33EB4", VA = "0xA33EB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8761CC", Offset = "0x8761CC")]
		private IEnumerator LoadScene()
		{
			return null;
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xA33F50", Offset = "0xA33F50", VA = "0xA33F50")]
		private void Start()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xA3401C", Offset = "0xA3401C", VA = "0xA3401C")]
		public MainMenu()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xA3402C", Offset = "0xA3402C", VA = "0xA3402C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876230", Offset = "0x876230")]
		private void <ReceiveInput>b__5_0(float alpha)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xA340D4", Offset = "0xA340D4", VA = "0xA340D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876240", Offset = "0x876240")]
		private void <ReceiveInput>b__5_1(float alpha)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xA3417C", Offset = "0xA3417C", VA = "0xA3417C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876250", Offset = "0x876250")]
		private void <ReceiveInput>b__5_2(float alpha)
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xA34224", Offset = "0xA34224", VA = "0xA34224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876260", Offset = "0x876260")]
		private void <ReceiveInput>b__5_3(float alpha)
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xA34240", Offset = "0xA34240", VA = "0xA34240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876270", Offset = "0x876270")]
		private void <ReceiveInput>b__5_4(float alpha)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xA3425C", Offset = "0xA3425C", VA = "0xA3425C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876280", Offset = "0x876280")]
		private void <ReceiveInput>b__5_5(float alpha)
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class WorldTourMenu : ContentMenu
	{
		[Serializable]
		[Token(Token = "0x20007BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E4C8", Offset = "0x85E4C8")]
		private sealed class <>c
		{
			[Token(Token = "0x40032DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, Guid> <>9__4_2;

			[Token(Token = "0x40032E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MoveSet, Guid> <>9__4_3;

			[Token(Token = "0x40032E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MoveSet, Guid> <>9__4_4;

			[Token(Token = "0x40032E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<MoveSet, Guid> <>9__4_5;

			[Token(Token = "0x40032E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<MoveSet, Guid> <>9__4_6;

			[Token(Token = "0x40032E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action <>9__6_0;

			[Token(Token = "0x40032E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action <>9__6_1;

			[Token(Token = "0x40032E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Action <>9__6_2;

			[Token(Token = "0x6003100")]
			[Address(RVA = "0x9C2788", Offset = "0x9C2788", VA = "0x9C2788")]
			public <>c()
			{
			}

			[Token(Token = "0x6003101")]
			[Address(RVA = "0x9C2790", Offset = "0x9C2790", VA = "0x9C2790")]
			internal Guid <ReceiveInput>b__4_2(int a)
			{
				return default(Guid);
			}

			[Token(Token = "0x6003102")]
			[Address(RVA = "0x9C27F0", Offset = "0x9C27F0", VA = "0x9C27F0")]
			internal Guid <ReceiveInput>b__4_3(MoveSet a)
			{
				return default(Guid);
			}

			[Token(Token = "0x6003103")]
			[Address(RVA = "0x9C2850", Offset = "0x9C2850", VA = "0x9C2850")]
			internal Guid <ReceiveInput>b__4_4(MoveSet a)
			{
				return default(Guid);
			}

			[Token(Token = "0x6003104")]
			[Address(RVA = "0x9C28B0", Offset = "0x9C28B0", VA = "0x9C28B0")]
			internal Guid <ReceiveInput>b__4_5(MoveSet a)
			{
				return default(Guid);
			}

			[Token(Token = "0x6003105")]
			[Address(RVA = "0x9C2910", Offset = "0x9C2910", VA = "0x9C2910")]
			internal Guid <ReceiveInput>b__4_6(MoveSet a)
			{
				return default(Guid);
			}

			[Token(Token = "0x6003106")]
			[Address(RVA = "0x9C2970", Offset = "0x9C2970", VA = "0x9C2970")]
			internal void <LoadWorldTourScene>b__6_0()
			{
			}

			[Token(Token = "0x6003107")]
			[Address(RVA = "0x9C2A20", Offset = "0x9C2A20", VA = "0x9C2A20")]
			internal void <LoadWorldTourScene>b__6_1()
			{
			}

			[Token(Token = "0x6003108")]
			[Address(RVA = "0x9C2ADC", Offset = "0x9C2ADC", VA = "0x9C2ADC")]
			internal void <LoadWorldTourScene>b__6_2()
			{
			}
		}

		[Token(Token = "0x20007BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E4D8", Offset = "0x85E4D8")]
		private sealed class <LoadWorldTourScene>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40032E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40032EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WorldTourMenu <>4__this;

			[Token(Token = "0x40032EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x1700057B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600310C")]
				[Address(RVA = "0x9C344C", Offset = "0x9C344C", VA = "0x9C344C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600310E")]
				[Address(RVA = "0x9C34B4", Offset = "0x9C34B4", VA = "0x9C34B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003109")]
			[Address(RVA = "0x9C26B0", Offset = "0x9C26B0", VA = "0x9C26B0")]
			[DebuggerHidden]
			public <LoadWorldTourScene>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600310A")]
			[Address(RVA = "0x9C2BA0", Offset = "0x9C2BA0", VA = "0x9C2BA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600310B")]
			[Address(RVA = "0x9C2BA4", Offset = "0x9C2BA4", VA = "0x9C2BA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600310D")]
			[Address(RVA = "0x9C3454", Offset = "0x9C3454", VA = "0x9C3454", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup InfoTextCanvasGroup;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text InfoText;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _tweenID;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _loading;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool loading;

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x9C145C", Offset = "0x9C145C", VA = "0x9C145C", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x9C2640", Offset = "0x9C2640", VA = "0x9C2640")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876290", Offset = "0x876290")]
		private IEnumerator LoadWorldTourScene()
		{
			return null;
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x9C26DC", Offset = "0x9C26DC", VA = "0x9C26DC")]
		public WorldTourMenu()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x9C26EC", Offset = "0x9C26EC", VA = "0x9C26EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8762F4", Offset = "0x8762F4")]
		private void <ReceiveInput>b__4_0(float alpha)
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x9C2708", Offset = "0x9C2708", VA = "0x9C2708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876304", Offset = "0x876304")]
		private void <ReceiveInput>b__4_1(float alpha)
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class ScrollViewManager : MonoBehaviour
	{
		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScrollRect ScrollRect;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ButtonsParent;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _scrollHeight;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _scrollCurrent;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _scrollTweenID;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float _movementAmount;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isAnimating;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _index;

		[Token(Token = "0x170002F5")]
		public bool IsAnimating
		{
			[Token(Token = "0x600232E")]
			[Address(RVA = "0x9B298C", Offset = "0x9B298C", VA = "0x9B298C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x9B2994", Offset = "0x9B2994", VA = "0x9B2994")]
		public void ClickDown()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x9B2C78", Offset = "0x9B2C78", VA = "0x9B2C78")]
		private void DisableOldTop()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x9B2D24", Offset = "0x9B2D24", VA = "0x9B2D24")]
		private void DisableOldBottom()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x9B2DE8", Offset = "0x9B2DE8", VA = "0x9B2DE8")]
		public void ClickUp()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x9B30D4", Offset = "0x9B30D4", VA = "0x9B30D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x9B31C0", Offset = "0x9B31C0", VA = "0x9B31C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x9B3214", Offset = "0x9B3214", VA = "0x9B3214")]
		public ScrollViewManager()
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x9B3228", Offset = "0x9B3228", VA = "0x9B3228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876314", Offset = "0x876314")]
		private void <ClickDown>b__10_0(float value)
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x9B3244", Offset = "0x9B3244", VA = "0x9B3244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876324", Offset = "0x876324")]
		private void <ClickDown>b__10_1()
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x9B3268", Offset = "0x9B3268", VA = "0x9B3268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876334", Offset = "0x876334")]
		private void <ClickUp>b__13_0(float value)
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x9B3284", Offset = "0x9B3284", VA = "0x9B3284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876344", Offset = "0x876344")]
		private void <ClickUp>b__13_1()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class StateMachineExit : StateMachineBehaviour
	{
		[Token(Token = "0x600233A")]
		[Address(RVA = "0x9BA844", Offset = "0x9BA844", VA = "0x9BA844", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x9BA8E0", Offset = "0x9BA8E0", VA = "0x9BA8E0")]
		public StateMachineExit()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class Enums
	{
		[Token(Token = "0x20007C0")]
		public enum Color
		{
			[Token(Token = "0x40032ED")]
			Black,
			[Token(Token = "0x40032EE")]
			White
		}

		[Token(Token = "0x20007C1")]
		public enum Direction
		{
			[Token(Token = "0x40032F0")]
			Up,
			[Token(Token = "0x40032F1")]
			Down,
			[Token(Token = "0x40032F2")]
			Left,
			[Token(Token = "0x40032F3")]
			Right,
			[Token(Token = "0x40032F4")]
			Center
		}

		[Token(Token = "0x20007C2")]
		public enum AppState
		{
			[Token(Token = "0x40032F6")]
			MainMenu,
			[Token(Token = "0x40032F7")]
			SelectTraining,
			[Token(Token = "0x40032F8")]
			WorldTourMenu,
			[Token(Token = "0x40032F9")]
			SelectEnvironment,
			[Token(Token = "0x40032FA")]
			InSession,
			[Token(Token = "0x40032FB")]
			SelectMusic,
			[Token(Token = "0x40032FC")]
			FinishedSession,
			[Token(Token = "0x40032FD")]
			FinishedTraining,
			[Token(Token = "0x40032FE")]
			FinishedArcade,
			[Token(Token = "0x40032FF")]
			TutorialPause,
			[Token(Token = "0x4003300")]
			Pause,
			[Token(Token = "0x4003301")]
			Options,
			[Token(Token = "0x4003302")]
			Tutorial,
			[Token(Token = "0x4003303")]
			CalibrateMenu,
			[Token(Token = "0x4003304")]
			FinishedWorldTour,
			[Token(Token = "0x4003305")]
			CalibratePrompt,
			[Token(Token = "0x4003306")]
			UpdatePopup,
			[Token(Token = "0x4003307")]
			HandTrackingVideo
		}

		[Token(Token = "0x20007C3")]
		public enum MenuScreen
		{
			[Token(Token = "0x4003309")]
			MainMenu,
			[Token(Token = "0x400330A")]
			Screen2,
			[Token(Token = "0x400330B")]
			Screen3,
			[Token(Token = "0x400330C")]
			Screen4
		}

		[Token(Token = "0x20007C4")]
		public enum GameMode
		{
			[Token(Token = "0x400330E")]
			Learn,
			[Token(Token = "0x400330F")]
			Expert,
			[Token(Token = "0x4003310")]
			Arcade,
			[Token(Token = "0x4003311")]
			Options,
			[Token(Token = "0x4003312")]
			Free
		}

		[Token(Token = "0x20007C5")]
		public enum Environment
		{
			[Token(Token = "0x4003314")]
			SnowMountains,
			[Token(Token = "0x4003315")]
			Japan,
			[Token(Token = "0x4003316")]
			CentralPark,
			[Token(Token = "0x4003317")]
			RiverMeadows,
			[Token(Token = "0x4003318")]
			Tropical,
			[Token(Token = "0x4003319")]
			Fjord,
			[Token(Token = "0x400331A")]
			Aruba,
			[Token(Token = "0x400331B")]
			Caves,
			[Token(Token = "0x400331C")]
			Underwater,
			[Token(Token = "0x400331D")]
			BigIslandTropical,
			[Token(Token = "0x400331E")]
			DolphinCay,
			[Token(Token = "0x400331F")]
			LostFalls,
			[Token(Token = "0x4003320")]
			SierraGrande,
			[Token(Token = "0x4003321")]
			CrystalPeak,
			[Token(Token = "0x4003322")]
			AumoWoods,
			[Token(Token = "0x4003323")]
			InfinityRise,
			[Token(Token = "0x4003324")]
			SantiIsle,
			[Token(Token = "0x4003325")]
			DjinnSands,
			[Token(Token = "0x4003326")]
			ClearLake,
			[Token(Token = "0x4003327")]
			FiroJungle,
			[Token(Token = "0x4003328")]
			JadeForest
		}

		[Token(Token = "0x20007C6")]
		public enum ModularState
		{
			[Token(Token = "0x400332A")]
			None,
			[Token(Token = "0x400332B")]
			SimpleDownloader,
			[Token(Token = "0x400332C")]
			PrepareSpot,
			[Token(Token = "0x400332D")]
			DownloadAndPrepareContent
		}

		[Token(Token = "0x20007C7")]
		public enum MenuAccessPath
		{
			[Token(Token = "0x400332F")]
			FrontMenu,
			[Token(Token = "0x4003330")]
			PauseMenu
		}

		[Token(Token = "0x20007C8")]
		public enum ButtonType
		{
			[Token(Token = "0x4003332")]
			Value,
			[Token(Token = "0x4003333")]
			Back,
			[Token(Token = "0x4003334")]
			LeftDirectional,
			[Token(Token = "0x4003335")]
			RightDirectional,
			[Token(Token = "0x4003336")]
			Page,
			[Token(Token = "0x4003337")]
			Confirm,
			[Token(Token = "0x4003338")]
			MainMenu,
			[Token(Token = "0x4003339")]
			Options,
			[Token(Token = "0x400333A")]
			Delete,
			[Token(Token = "0x400333B")]
			Restart
		}

		[Token(Token = "0x20007C9")]
		public enum LoggingLevel
		{
			[Token(Token = "0x400333D")]
			Info,
			[Token(Token = "0x400333E")]
			Success,
			[Token(Token = "0x400333F")]
			Warning,
			[Token(Token = "0x4003340")]
			Error,
			[Token(Token = "0x4003341")]
			None
		}

		[Token(Token = "0x20007CA")]
		public enum DeviceType
		{
			[Token(Token = "0x4003343")]
			Monitor,
			[Token(Token = "0x4003344")]
			OculusMobileVR,
			[Token(Token = "0x4003345")]
			DesktopVR,
			[Token(Token = "0x4003346")]
			MiVR
		}

		[Token(Token = "0x20007CB")]
		public enum ControllerType
		{
			[Token(Token = "0x4003348")]
			Default,
			[Token(Token = "0x4003349")]
			OculusGo,
			[Token(Token = "0x400334A")]
			GearVR,
			[Token(Token = "0x400334B")]
			MiVR,
			[Token(Token = "0x400334C")]
			None
		}

		[Token(Token = "0x20007CC")]
		public enum InputType
		{
			[Token(Token = "0x400334E")]
			LeftDirectional,
			[Token(Token = "0x400334F")]
			RightDirectional,
			[Token(Token = "0x4003350")]
			NumberedButton,
			[Token(Token = "0x4003351")]
			SelectWithValue,
			[Token(Token = "0x4003352")]
			OnHoverWithValue,
			[Token(Token = "0x4003353")]
			Back,
			[Token(Token = "0x4003354")]
			ControllerBack,
			[Token(Token = "0x4003355")]
			StringSelect,
			[Token(Token = "0x4003356")]
			OffHoverWithValue,
			[Token(Token = "0x4003357")]
			Confirm,
			[Token(Token = "0x4003358")]
			SliderValue,
			[Token(Token = "0x4003359")]
			MainMenu,
			[Token(Token = "0x400335A")]
			Options,
			[Token(Token = "0x400335B")]
			Delete,
			[Token(Token = "0x400335C")]
			TriggerDown,
			[Token(Token = "0x400335D")]
			TriggerUp,
			[Token(Token = "0x400335E")]
			SliderDown,
			[Token(Token = "0x400335F")]
			SliderUp,
			[Token(Token = "0x4003360")]
			ScrollUp,
			[Token(Token = "0x4003361")]
			ScrollDown,
			[Token(Token = "0x4003362")]
			FreeMode
		}

		[Token(Token = "0x20007CD")]
		public enum SoundEffect
		{
			[Token(Token = "0x4003364")]
			Hover,
			[Token(Token = "0x4003365")]
			Select,
			[Token(Token = "0x4003366")]
			MenuTransition,
			[Token(Token = "0x4003367")]
			Scroll
		}

		[Token(Token = "0x20007CE")]
		public enum VideoType
		{
			[Token(Token = "0x4003369")]
			Video3D,
			[Token(Token = "0x400336A")]
			Video2D
		}

		[Token(Token = "0x20007CF")]
		public enum MoveSetType
		{
			[Token(Token = "0x400336C")]
			Ordered,
			[Token(Token = "0x400336D")]
			Random
		}

		[Token(Token = "0x20007D0")]
		public enum TaiChiButton
		{
			[Token(Token = "0x400336F")]
			Learn,
			[Token(Token = "0x4003370")]
			Expert,
			[Token(Token = "0x4003371")]
			Arcade,
			[Token(Token = "0x4003372")]
			Free,
			[Token(Token = "0x4003373")]
			WorldTour
		}

		[Token(Token = "0x20007D1")]
		public enum WorldTourButton
		{
			[Token(Token = "0x4003375")]
			Fifteen,
			[Token(Token = "0x4003376")]
			Thirty,
			[Token(Token = "0x4003377")]
			Sixty
		}

		[Token(Token = "0x20007D2")]
		public enum MoveSetCategoryType
		{
			[Token(Token = "0x4003379")]
			Learn,
			[Token(Token = "0x400337A")]
			Expert,
			[Token(Token = "0x400337B")]
			Arcade
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xF616B8", Offset = "0xF616B8", VA = "0xF616B8")]
		public Enums()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class Structs
	{
		[Serializable]
		[Token(Token = "0x20007D3")]
		public struct HandPosition
		{
			[Token(Token = "0x400337C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Position;

			[Token(Token = "0x400337D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool IsControlPoint;

			[Token(Token = "0x400337E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Time;
		}

		[Serializable]
		[Token(Token = "0x20007D4")]
		public struct MenuBGVideo
		{
			[Token(Token = "0x400337F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string VideoName;

			[Token(Token = "0x4003380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Enums.Direction Direction;
		}

		[Serializable]
		[Token(Token = "0x20007D5")]
		public struct BGWithOffset
		{
			[Token(Token = "0x4003381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Sprite BGSprite;

			[Token(Token = "0x4003382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float Offset;
		}

		[Token(Token = "0x20007D6")]
		public class VideoMaskObjects
		{
			[Token(Token = "0x4003383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image FadeInMask;

			[Token(Token = "0x4003384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image FadeOutMask;

			[Token(Token = "0x4003385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image WhiteoutMask;

			[Token(Token = "0x600310F")]
			[Address(RVA = "0x9BAE58", Offset = "0x9BAE58", VA = "0x9BAE58")]
			public void FadeIn()
			{
			}

			[Token(Token = "0x6003110")]
			[Address(RVA = "0x9BAE9C", Offset = "0x9BAE9C", VA = "0x9BAE9C")]
			public void ToggleWhiteout(bool enabled)
			{
			}

			[Token(Token = "0x6003111")]
			[Address(RVA = "0x9BAF08", Offset = "0x9BAF08", VA = "0x9BAF08")]
			public void FadeOut()
			{
			}

			[Token(Token = "0x6003112")]
			[Address(RVA = "0x9BAF4C", Offset = "0x9BAF4C", VA = "0x9BAF4C")]
			public void ToggleAll(bool enabled)
			{
			}

			[Token(Token = "0x6003113")]
			[Address(RVA = "0x9BAFB4", Offset = "0x9BAFB4", VA = "0x9BAFB4")]
			public VideoMaskObjects()
			{
			}
		}

		[Token(Token = "0x20007D7")]
		public class InputWrapper
		{
			[Token(Token = "0x4003386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Enums.InputType InputType;

			[Token(Token = "0x4003387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object Value;

			[Token(Token = "0x4003388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ContentButton CallingButton;

			[Token(Token = "0x4003389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool SkipTimeoutCheck;

			[Token(Token = "0x6003114")]
			[Address(RVA = "0x9BA904", Offset = "0x9BA904", VA = "0x9BA904")]
			public InputWrapper()
			{
			}
		}

		[Token(Token = "0x20007D8")]
		public class AppStateWrapper
		{
			[Token(Token = "0x400338A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Enums.AppState AppState;

			[Token(Token = "0x400338B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Enums.ModularState ModularState;

			[Token(Token = "0x400338C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Enums.MenuAccessPath MenuAccessPath;

			[Token(Token = "0x400338D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Enums.GameMode GameMode;

			[Token(Token = "0x400338E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Enums.Environment SelectedEnvironment;

			[Token(Token = "0x400338F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MoveSet SelectedMoveSet;

			[Token(Token = "0x4003390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MusicTrack SelectedMusicTrack;

			[Token(Token = "0x4003391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int LevelIndex;

			[Token(Token = "0x4003392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float Score;

			[Token(Token = "0x4003393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float TimeRemaining;

			[Token(Token = "0x4003394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool IsWaitingToStart;

			[Token(Token = "0x4003395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
			public bool IsRoomScale;

			[Token(Token = "0x4003396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
			public bool IsLeftScoreAllowed;

			[Token(Token = "0x4003397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
			public bool IsRightScoreAllowed;

			[Token(Token = "0x4003398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float CurrentVisualizerThreshold;

			[Token(Token = "0x4003399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float CalibratedScale;

			[Token(Token = "0x400339A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public WorldTourData WorldTour;

			[Token(Token = "0x400339B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool IsWorldTour;

			[Token(Token = "0x400339C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool IsCalibratingInSession;

			[Token(Token = "0x6003115")]
			[Address(RVA = "0x9BA8F0", Offset = "0x9BA8F0", VA = "0x9BA8F0")]
			public AppStateWrapper()
			{
			}
		}

		[Token(Token = "0x20007D9")]
		public class WorldTourData
		{
			[Token(Token = "0x400339D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> EnvironmentIndexes;

			[Token(Token = "0x400339E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MoveSet> MoveSets;

			[Token(Token = "0x400339F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int CurrentIndex;

			[Token(Token = "0x40033A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool LevelFinished;

			[Token(Token = "0x40033A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string Leaderboard;

			[Token(Token = "0x6003116")]
			[Address(RVA = "0x9BAFBC", Offset = "0x9BAFBC", VA = "0x9BAFBC")]
			public WorldTourData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007DA")]
		public class MoveWithTransitionTime
		{
			[Token(Token = "0x40033A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Move Move;

			[Token(Token = "0x40033A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float TransitionTime;

			[Token(Token = "0x6003117")]
			[Address(RVA = "0x9BA90C", Offset = "0x9BA90C", VA = "0x9BA90C")]
			public MoveWithTransitionTime()
			{
			}
		}

		[Token(Token = "0x20007DB")]
		public class SavedOptions
		{
			[Token(Token = "0x40033A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool ShowFeet;

			[Token(Token = "0x40033A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool InvertVibration;

			[Token(Token = "0x40033A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool EnableVibration;

			[Token(Token = "0x40033A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool ShowTeachers;

			[Token(Token = "0x40033A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool ShowArcadeScore;

			[Token(Token = "0x40033A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool ShowArcadeUI;

			[Token(Token = "0x40033AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
			public bool ShowFlowUI;

			[Token(Token = "0x40033AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
			public bool TeachersFaceForward;

			[Token(Token = "0x40033AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool SmallGuardianMode;

			[Token(Token = "0x40033AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool ShowHandModels;

			[Token(Token = "0x40033AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool ShowHandOrbsAndLines;

			[Token(Token = "0x40033AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool HasSeenUpdatePopup;

			[Token(Token = "0x40033B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool HasSeenHandUpdatePopup;

			[Token(Token = "0x40033B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float MusicVolume;

			[Token(Token = "0x40033B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float EnvironmentVolume;

			[Token(Token = "0x40033B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float TeacherVolume;

			[Token(Token = "0x40033B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float PlayerScale;

			[Token(Token = "0x6003118")]
			[Address(RVA = "0x9ACD54", Offset = "0x9ACD54", VA = "0x9ACD54")]
			internal void Load()
			{
			}

			[Token(Token = "0x6003119")]
			[Address(RVA = "0x9BA914", Offset = "0x9BA914", VA = "0x9BA914")]
			internal void SetVolume()
			{
			}

			[Token(Token = "0x600311A")]
			[Address(RVA = "0x9BAAE8", Offset = "0x9BAAE8", VA = "0x9BAAE8")]
			internal void SaveUpdatePopupInfo(bool hasSeenUpdatePopup)
			{
			}

			[Token(Token = "0x600311B")]
			[Address(RVA = "0x9BAB5C", Offset = "0x9BAB5C", VA = "0x9BAB5C")]
			internal void SaveHandUpdatePopupInfo(bool hasSeenHandUpdatePopup)
			{
			}

			[Token(Token = "0x600311C")]
			[Address(RVA = "0x9BABD0", Offset = "0x9BABD0", VA = "0x9BABD0")]
			internal void Save(bool vibrationEnabled, bool vibrationInverted, bool showFeet, float musicVolume, float environmentVolume, float teacherVolume, bool showTeachers, bool showArcadeScore, bool showArcadeUI, bool showFlowUI, bool teachersFaceForward, bool smallGuardianMode, bool showHandModels, bool showHandOrbsAndLines)
			{
			}

			[Token(Token = "0x600311D")]
			[Address(RVA = "0x9ACD28", Offset = "0x9ACD28", VA = "0x9ACD28")]
			public SavedOptions()
			{
			}
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x9BA8E8", Offset = "0x9BA8E8", VA = "0x9BA8E8")]
		public Structs()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class AnimationManager : MonoBehaviour
	{
		[Token(Token = "0x600233E")]
		[Address(RVA = "0xF43034", Offset = "0xF43034", VA = "0xF43034")]
		public AnimationManager()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class AppManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E4E8", Offset = "0x85E4E8")]
		private sealed class <>c
		{
			[Token(Token = "0x40033B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40033B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MoveSet, bool> <>9__19_0;

			[Token(Token = "0x40033B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MoveSet, bool> <>9__19_1;

			[Token(Token = "0x40033B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MoveSet, bool> <>9__19_2;

			[Token(Token = "0x40033B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<MoveSet, bool> <>9__19_3;

			[Token(Token = "0x40033BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__28_0;

			[Token(Token = "0x40033BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<bool> <>9__31_0;

			[Token(Token = "0x40033BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action<float> <>9__54_0;

			[Token(Token = "0x40033BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Action<float> <>9__54_1;

			[Token(Token = "0x40033BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Action<float> <>9__54_2;

			[Token(Token = "0x40033BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Action<float> <>9__54_3;

			[Token(Token = "0x40033C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Action <>9__54_4;

			[Token(Token = "0x40033C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Action <>9__79_0;

			[Token(Token = "0x600311F")]
			[Address(RVA = "0xF54178", Offset = "0xF54178", VA = "0xF54178")]
			public <>c()
			{
			}

			[Token(Token = "0x6003120")]
			[Address(RVA = "0xF54180", Offset = "0xF54180", VA = "0xF54180")]
			internal bool <SetupAnimators>b__19_0(MoveSet s)
			{
				return default(bool);
			}

			[Token(Token = "0x6003121")]
			[Address(RVA = "0xF54254", Offset = "0xF54254", VA = "0xF54254")]
			internal bool <SetupAnimators>b__19_1(MoveSet s)
			{
				return default(bool);
			}

			[Token(Token = "0x6003122")]
			[Address(RVA = "0xF54328", Offset = "0xF54328", VA = "0xF54328")]
			internal bool <SetupAnimators>b__19_2(MoveSet s)
			{
				return default(bool);
			}

			[Token(Token = "0x6003123")]
			[Address(RVA = "0xF543FC", Offset = "0xF543FC", VA = "0xF543FC")]
			internal bool <SetupAnimators>b__19_3(MoveSet s)
			{
				return default(bool);
			}

			[Token(Token = "0x6003124")]
			[Address(RVA = "0xF544D0", Offset = "0xF544D0", VA = "0xF544D0")]
			internal void <LoadNextLevel>b__28_0()
			{
			}

			[Token(Token = "0x6003125")]
			[Address(RVA = "0xF54594", Offset = "0xF54594", VA = "0xF54594")]
			internal bool <GrowOrbsShrinkControllers>b__31_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6003126")]
			[Address(RVA = "0xF54630", Offset = "0xF54630", VA = "0xF54630")]
			internal void <CheckTopLogo>b__54_0(float alpha)
			{
			}

			[Token(Token = "0x6003127")]
			[Address(RVA = "0xF54784", Offset = "0xF54784", VA = "0xF54784")]
			internal void <CheckTopLogo>b__54_1(float alpha)
			{
			}

			[Token(Token = "0x6003128")]
			[Address(RVA = "0xF548D8", Offset = "0xF548D8", VA = "0xF548D8")]
			internal void <CheckTopLogo>b__54_2(float alpha)
			{
			}

			[Token(Token = "0x6003129")]
			[Address(RVA = "0xF549A8", Offset = "0xF549A8", VA = "0xF549A8")]
			internal void <CheckTopLogo>b__54_3(float alpha)
			{
			}

			[Token(Token = "0x600312A")]
			[Address(RVA = "0xF54A78", Offset = "0xF54A78", VA = "0xF54A78")]
			internal void <CheckTopLogo>b__54_4()
			{
			}

			[Token(Token = "0x600312B")]
			[Address(RVA = "0xF54BA8", Offset = "0xF54BA8", VA = "0xF54BA8")]
			internal void <LoadMenu>b__79_0()
			{
			}
		}

		[Token(Token = "0x20007DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E4F8", Offset = "0x85E4F8")]
		private sealed class <LoadNextLevel>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40033C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40033C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40033C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x1700057D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600312F")]
				[Address(RVA = "0xF57A40", Offset = "0xF57A40", VA = "0xF57A40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003131")]
				[Address(RVA = "0xF57AA8", Offset = "0xF57AA8", VA = "0xF57AA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600312C")]
			[Address(RVA = "0xF47710", Offset = "0xF47710", VA = "0xF47710")]
			[DebuggerHidden]
			public <LoadNextLevel>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x600312D")]
			[Address(RVA = "0xF569D8", Offset = "0xF569D8", VA = "0xF569D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600312E")]
			[Address(RVA = "0xF569DC", Offset = "0xF569DC", VA = "0xF569DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003130")]
			[Address(RVA = "0xF57A48", Offset = "0xF57A48", VA = "0xF57A48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E508", Offset = "0x85E508")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x40033C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AppManager <>4__this;

			[Token(Token = "0x40033C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject leftOrb;

			[Token(Token = "0x40033C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject rightOrb;

			[Token(Token = "0x6003132")]
			[Address(RVA = "0xF54D30", Offset = "0xF54D30", VA = "0xF54D30")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6003133")]
			[Address(RVA = "0xF54D38", Offset = "0xF54D38", VA = "0xF54D38")]
			internal void <ShrinkOrbsGrowControllers>b__0()
			{
			}

			[Token(Token = "0x6003134")]
			[Address(RVA = "0xF54D58", Offset = "0xF54D58", VA = "0xF54D58")]
			internal void <ShrinkOrbsGrowControllers>b__1()
			{
			}

			[Token(Token = "0x6003135")]
			[Address(RVA = "0xF54D78", Offset = "0xF54D78", VA = "0xF54D78")]
			internal void <ShrinkOrbsGrowControllers>b__2()
			{
			}
		}

		[Token(Token = "0x20007DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E518", Offset = "0x85E518")]
		private sealed class <ShrinkOrbsGrowControllers>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40033C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40033C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40033CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppManager <>4__this;

			[Token(Token = "0x1700057F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003139")]
				[Address(RVA = "0xF5810C", Offset = "0xF5810C", VA = "0xF5810C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000580")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600313B")]
				[Address(RVA = "0xF58174", Offset = "0xF58174", VA = "0xF58174", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003136")]
			[Address(RVA = "0xF4876C", Offset = "0xF4876C", VA = "0xF4876C")]
			[DebuggerHidden]
			public <ShrinkOrbsGrowControllers>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6003137")]
			[Address(RVA = "0xF57AB0", Offset = "0xF57AB0", VA = "0xF57AB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003138")]
			[Address(RVA = "0xF57AB4", Offset = "0xF57AB4", VA = "0xF57AB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600313A")]
			[Address(RVA = "0xF58114", Offset = "0xF58114", VA = "0xF58114", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E528", Offset = "0x85E528")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40033CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AppManager <>4__this;

			[Token(Token = "0x40033CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject leftController;

			[Token(Token = "0x40033CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject rightController;

			[Token(Token = "0x600313C")]
			[Address(RVA = "0xF54D98", Offset = "0xF54D98", VA = "0xF54D98")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600313D")]
			[Address(RVA = "0xF54DA0", Offset = "0xF54DA0", VA = "0xF54DA0")]
			internal void <GrowOrbsShrinkControllers>b__1()
			{
			}

			[Token(Token = "0x600313E")]
			[Address(RVA = "0xF54DC0", Offset = "0xF54DC0", VA = "0xF54DC0")]
			internal void <GrowOrbsShrinkControllers>b__2()
			{
			}

			[Token(Token = "0x600313F")]
			[Address(RVA = "0xF54DE0", Offset = "0xF54DE0", VA = "0xF54DE0")]
			internal void <GrowOrbsShrinkControllers>b__3()
			{
			}
		}

		[Token(Token = "0x20007E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E538", Offset = "0x85E538")]
		private sealed class <GrowOrbsShrinkControllers>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40033CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40033CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40033D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppManager <>4__this;

			[Token(Token = "0x40033D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass31_0 <>8__1;

			[Token(Token = "0x17000581")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003143")]
				[Address(RVA = "0xF559E0", Offset = "0xF559E0", VA = "0xF559E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000582")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003145")]
				[Address(RVA = "0xF55A48", Offset = "0xF55A48", VA = "0xF55A48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003140")]
			[Address(RVA = "0xF48798", Offset = "0xF48798", VA = "0xF48798")]
			[DebuggerHidden]
			public <GrowOrbsShrinkControllers>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6003141")]
			[Address(RVA = "0xF552B8", Offset = "0xF552B8", VA = "0xF552B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003142")]
			[Address(RVA = "0xF552BC", Offset = "0xF552BC", VA = "0xF552BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003144")]
			[Address(RVA = "0xF559E8", Offset = "0xF559E8", VA = "0xF559E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E548", Offset = "0x85E548")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x40033D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material matToFade;

			[Token(Token = "0x40033D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AppManager <>4__this;

			[Token(Token = "0x40033D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action midCallback;

			[Token(Token = "0x40033D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action completeCallback;

			[Token(Token = "0x40033D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool showUnderlay;

			[Token(Token = "0x6003146")]
			[Address(RVA = "0xF4B6FC", Offset = "0xF4B6FC", VA = "0xF4B6FC")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6003147")]
			[Address(RVA = "0xF54E00", Offset = "0xF54E00", VA = "0xF54E00")]
			internal void <FadeMenuOverlayUp>b__0(float alpha)
			{
			}

			[Token(Token = "0x6003148")]
			[Address(RVA = "0xF54E6C", Offset = "0xF54E6C", VA = "0xF54E6C")]
			internal void <FadeMenuOverlayUp>b__1()
			{
			}
		}

		[Token(Token = "0x20007E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E558", Offset = "0x85E558")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x40033D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material matToFade;

			[Token(Token = "0x40033D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completeCallback;

			[Token(Token = "0x6003149")]
			[Address(RVA = "0xF4B90C", Offset = "0xF4B90C", VA = "0xF4B90C")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x600314A")]
			[Address(RVA = "0xF54FDC", Offset = "0xF54FDC", VA = "0xF54FDC")]
			internal void <FadeMenuOverlayDown>b__0(float alpha)
			{
			}

			[Token(Token = "0x600314B")]
			[Address(RVA = "0xF55048", Offset = "0xF55048", VA = "0xF55048")]
			internal void <FadeMenuOverlayDown>b__1()
			{
			}
		}

		[Token(Token = "0x20007E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E568", Offset = "0x85E568")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x40033D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material matToFade;

			[Token(Token = "0x40033DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AppManager <>4__this;

			[Token(Token = "0x40033DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action midCallback;

			[Token(Token = "0x40033DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action completeCallback;

			[Token(Token = "0x40033DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool showUnderlay;

			[Token(Token = "0x600314C")]
			[Address(RVA = "0xF4B914", Offset = "0xF4B914", VA = "0xF4B914")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x600314D")]
			[Address(RVA = "0xF5505C", Offset = "0xF5505C", VA = "0xF5505C")]
			internal void <FadeMenuOverlayUpFlipped>b__0(float alpha)
			{
			}

			[Token(Token = "0x600314E")]
			[Address(RVA = "0xF550C8", Offset = "0xF550C8", VA = "0xF550C8")]
			internal void <FadeMenuOverlayUpFlipped>b__1()
			{
			}
		}

		[Token(Token = "0x20007E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E578", Offset = "0x85E578")]
		private sealed class <>c__DisplayClass50_0
		{
			[Token(Token = "0x40033DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material matToFade;

			[Token(Token = "0x40033DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action completeCallback;

			[Token(Token = "0x600314F")]
			[Address(RVA = "0xF4BB24", Offset = "0xF4BB24", VA = "0xF4BB24")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x6003150")]
			[Address(RVA = "0xF55238", Offset = "0xF55238", VA = "0xF55238")]
			internal void <FadeMenuOverlayDownFlippped>b__0(float alpha)
			{
			}

			[Token(Token = "0x6003151")]
			[Address(RVA = "0xF552A4", Offset = "0xF552A4", VA = "0xF552A4")]
			internal void <FadeMenuOverlayDownFlippped>b__1()
			{
			}
		}

		[Token(Token = "0x20007E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E588", Offset = "0x85E588")]
		private sealed class <LoadMenu>d__79 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40033E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40033E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40033E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppManager <>4__this;

			[Token(Token = "0x40033E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000583")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003155")]
				[Address(RVA = "0xF56968", Offset = "0xF56968", VA = "0xF56968", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000584")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003157")]
				[Address(RVA = "0xF569D0", Offset = "0xF569D0", VA = "0xF569D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003152")]
			[Address(RVA = "0xF53EC8", Offset = "0xF53EC8", VA = "0xF53EC8")]
			[DebuggerHidden]
			public <LoadMenu>d__79(int <>1__state)
			{
			}

			[Token(Token = "0x6003153")]
			[Address(RVA = "0xF55A50", Offset = "0xF55A50", VA = "0xF55A50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003154")]
			[Address(RVA = "0xF55A54", Offset = "0xF55A54", VA = "0xF55A54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003156")]
			[Address(RVA = "0xF56970", Offset = "0xF56970", VA = "0xF56970", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B85C", Offset = "0x86B85C")]
		private static Structs.AppStateWrapper <AppState>k__BackingField;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isFadingIn;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool CanPause;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool Restarting;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool switchedStateToMainMenuAtStart;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool orbsFinishedGrowing;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool controllersFinishedGrowing;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool hasSeenUpdatePopup;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool hasSeenHandUpdatePopup;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRInputModule _ovrInputModule;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUsingHands;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool justSwitchedHands;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator CheckForEndOFAnimation;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _isPaused;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _mainCanvasTransform;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ContentMenu _lastSpawnedMenu;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B86C", Offset = "0x86B86C")]
		private static AppManager <Instance>k__BackingField;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _menuOverlayFadeTweenID;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _menuOverlayFadeTweenID2;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _menuBGOverlayMaterial;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material _menuBGOverlayMaterialEnvironment;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _topLogoTweenID;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _backButtonTweenID;

		[Token(Token = "0x170002F6")]
		public static Structs.AppStateWrapper AppState
		{
			[Token(Token = "0x600233F")]
			[Address(RVA = "0xF4303C", Offset = "0xF4303C", VA = "0xF4303C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876354", Offset = "0x876354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002340")]
			[Address(RVA = "0xF430A4", Offset = "0xF430A4", VA = "0xF430A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876364", Offset = "0x876364")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public Transform MainCanvasTransform
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0xF487C4", Offset = "0xF487C4", VA = "0xF487C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		public static AppManager Instance
		{
			[Token(Token = "0x6002351")]
			[Address(RVA = "0xF487CC", Offset = "0xF487CC", VA = "0xF487CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8764A0", Offset = "0x8764A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002352")]
			[Address(RVA = "0xF48834", Offset = "0xF48834", VA = "0xF48834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8764B0", Offset = "0x8764B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xF43110", Offset = "0xF43110", VA = "0xF43110")]
		public bool AbleToPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xF431B4", Offset = "0xF431B4", VA = "0xF431B4")]
		public void UnPause()
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xF43DAC", Offset = "0xF43DAC", VA = "0xF43DAC")]
		public void Restart()
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xF453D0", Offset = "0xF453D0", VA = "0xF453D0")]
		private void SetupAnimators()
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xF4600C", Offset = "0xF4600C", VA = "0xF4600C")]
		private void CheckForDuplicateMoveSets()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xF46354", Offset = "0xF46354", VA = "0xF46354")]
		private List<string> DuplicateMoveSets(List<MoveSet> moveSets)
		{
			return null;
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xF464C8", Offset = "0xF464C8", VA = "0xF464C8")]
		public void TogglePaused(bool isPaused)
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xF464D4", Offset = "0xF464D4", VA = "0xF464D4")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xF464DC", Offset = "0xF464DC", VA = "0xF464DC")]
		public void PauseTutorial()
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xF46B60", Offset = "0xF46B60", VA = "0xF46B60")]
		public void UnPauseTutorial()
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xF46E34", Offset = "0xF46E34", VA = "0xF46E34")]
		public void Pause(bool forCalibration = false)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xF476B0", Offset = "0xF476B0", VA = "0xF476B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876374", Offset = "0x876374")]
		private IEnumerator LoadNextLevel()
		{
			return null;
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xF4773C", Offset = "0xF4773C", VA = "0xF4773C")]
		public void AnimationComplete()
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xF46AF0", Offset = "0xF46AF0", VA = "0xF46AF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8763D8", Offset = "0x8763D8")]
		public IEnumerator ShrinkOrbsGrowControllers()
		{
			return null;
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xF43D3C", Offset = "0xF43D3C", VA = "0xF43D3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87643C", Offset = "0x87643C")]
		public IEnumerator GrowOrbsShrinkControllers()
		{
			return null;
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xF488A0", Offset = "0xF488A0", VA = "0xF488A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xF48ED0", Offset = "0xF48ED0", VA = "0xF48ED0")]
		public void StartApp()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xF46884", Offset = "0xF46884", VA = "0xF46884")]
		public void SwitchState(Enums.AppState newState, bool isForward = true, bool isTutorial = false)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xF4A30C", Offset = "0xF4A30C", VA = "0xF4A30C")]
		internal void FadeMenuOverlayUp(Action midCallback, bool showUnderlay, [Optional] Action completeCallback, [Optional] Material matToFade)
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xF4B704", Offset = "0xF4B704", VA = "0xF4B704")]
		internal void FadeMenuOverlayDown(Action midCallback, Action completeCallback, [Optional] Material matToFade)
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xF4A084", Offset = "0xF4A084", VA = "0xF4A084")]
		internal void FadeMenuOverlayUpFlipped(Action midCallback, bool showUnderlay, [Optional] Action completeCallback, [Optional] Material matToFade)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xF4B91C", Offset = "0xF4B91C", VA = "0xF4B91C")]
		internal void FadeMenuOverlayDownFlippped(Action midCallback, Action completeCallback, [Optional] Material matToFade)
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xF4BB2C", Offset = "0xF4BB2C", VA = "0xF4BB2C")]
		public static void CancelAllRecursively(Transform parent)
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xF4AD54", Offset = "0xF4AD54", VA = "0xF4AD54")]
		private void CheckTopLogo()
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xF4A594", Offset = "0xF4A594", VA = "0xF4A594")]
		private void ReadyToShowNextMenu([Optional] GameObject toDestroy, bool isTutorial = false)
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xF4BC2C", Offset = "0xF4BC2C", VA = "0xF4BC2C")]
		private GameObject SpawnMenuElement(GameObject obj, Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xF4C1C0", Offset = "0xF4C1C0", VA = "0xF4C1C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xF4BCD4", Offset = "0xF4BCD4", VA = "0xF4BCD4")]
		public Type GetCurrentMenuType()
		{
			return null;
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xF4C278", Offset = "0xF4C278", VA = "0xF4C278")]
		public void MoveCanvasToMenuPosition()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xF49ECC", Offset = "0xF49ECC", VA = "0xF49ECC")]
		public void MoveCanvasToInLevelPosition()
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xF4C430", Offset = "0xF4C430", VA = "0xF4C430")]
		public void MoveCameraToMenuPosition()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xF49D48", Offset = "0xF49D48", VA = "0xF49D48")]
		public void MoveCameraToInLevelPosition()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xF4C5E8", Offset = "0xF4C5E8", VA = "0xF4C5E8")]
		public void MoveCameraToInTutorialPosition()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xF4C79C", Offset = "0xF4C79C", VA = "0xF4C79C")]
		public void MoveCanvasToInTutorialPosition()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xF4C958", Offset = "0xF4C958", VA = "0xF4C958")]
		public void SwitchToInLevel()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xF4E404", Offset = "0xF4E404", VA = "0xF4E404")]
		public void CheckSpawnOrbs()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xF4EDB0", Offset = "0xF4EDB0", VA = "0xF4EDB0")]
		private void CheckTeachers()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xF4EA08", Offset = "0xF4EA08", VA = "0xF4EA08")]
		private void CheckUISettings()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xF4F040", Offset = "0xF4F040", VA = "0xF4F040")]
		public void SwitchToFreeMode()
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xF50030", Offset = "0xF50030", VA = "0xF50030")]
		private void SwitchTo(string switchTo)
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xF50EC0", Offset = "0xF50EC0", VA = "0xF50EC0")]
		public void SetRayTransformHand(GameObject hand)
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xF51230", Offset = "0xF51230", VA = "0xF51230")]
		private void SetRayTransformController()
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xF513DC", Offset = "0xF513DC", VA = "0xF513DC")]
		private void SetOrbPositions()
		{
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xF51684", Offset = "0xF51684", VA = "0xF51684")]
		private void CheckIfHandsShouldBeShowing()
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xF51A14", Offset = "0xF51A14", VA = "0xF51A14")]
		private void Update()
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xF537F0", Offset = "0xF537F0", VA = "0xF537F0")]
		private void CheckForControllerButtonPresses()
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xF53AC4", Offset = "0xF53AC4", VA = "0xF53AC4")]
		private void MakeSureRayTransformAndLaserMatch()
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xF53C78", Offset = "0xF53C78", VA = "0xF53C78")]
		public void SwitchToMenu(bool fade = true)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xF53E58", Offset = "0xF53E58", VA = "0xF53E58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8764C0", Offset = "0x8764C0")]
		private IEnumerator LoadMenu()
		{
			return null;
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xF53EF4", Offset = "0xF53EF4", VA = "0xF53EF4")]
		public AppManager()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xF5409C", Offset = "0xF5409C", VA = "0xF5409C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876524", Offset = "0x876524")]
		private void <SwitchState>b__42_0()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xF540D8", Offset = "0xF540D8", VA = "0xF540D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876534", Offset = "0x876534")]
		private void <SwitchState>b__42_1()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource HoverAudioSource;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource SelectAudioSource;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource MenuTransitionAudioSource;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource ScrollAudioSource;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource MusicPreviewAudioSource;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource MainMenuEnvironmentAudio;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MenuMusicMultiplier;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _envTweenID;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _musicPreviewFadeID;

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xF5B440", Offset = "0xF5B440", VA = "0xF5B440")]
		private void Update()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xF49C10", Offset = "0xF49C10", VA = "0xF49C10")]
		public void FadeUpMainMenuEnvironmentAudio()
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xF5B530", Offset = "0xF5B530", VA = "0xF5B530")]
		public void FadeDownMainMenuEnvironmentAudio()
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xF43C54", Offset = "0xF43C54", VA = "0xF43C54")]
		public void PlaySoundEffect(Enums.SoundEffect effect)
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xF5B668", Offset = "0xF5B668", VA = "0xF5B668")]
		public void PlayMusicTrackPreview(MusicTrack track)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xF5B7FC", Offset = "0xF5B7FC", VA = "0xF5B7FC")]
		public void FadeOutMusicTrackPreview()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xF5B97C", Offset = "0xF5B97C", VA = "0xF5B97C")]
		public AudioManager()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xF5B994", Offset = "0xF5B994", VA = "0xF5B994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876544", Offset = "0x876544")]
		private void <FadeUpMainMenuEnvironmentAudio>b__9_0(float volume)
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xF5B9B0", Offset = "0xF5B9B0", VA = "0xF5B9B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876554", Offset = "0x876554")]
		private void <FadeDownMainMenuEnvironmentAudio>b__10_0(float volume)
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xF5B9CC", Offset = "0xF5B9CC", VA = "0xF5B9CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876564", Offset = "0x876564")]
		private void <PlayMusicTrackPreview>b__12_0(float volume)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xF5B9E8", Offset = "0xF5B9E8", VA = "0xF5B9E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876574", Offset = "0x876574")]
		private void <FadeOutMusicTrackPreview>b__14_0(float volume)
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xF5BA04", Offset = "0xF5BA04", VA = "0xF5BA04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876584", Offset = "0x876584")]
		private void <FadeOutMusicTrackPreview>b__14_1()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class InputHandler : MonoBehaviour
	{
		[Token(Token = "0x20007E7")]
		public delegate void ButtonHoverEventHandler(bool isOn, ContentButton hoveredButton);

		[Token(Token = "0x20007E8")]
		public delegate void ButtonPressEventHandler(ContentButton pressedButton);

		[Serializable]
		[Token(Token = "0x20007E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E598", Offset = "0x85E598")]
		private sealed class <>c
		{
			[Token(Token = "0x40033E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40033E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<float> <>9__18_0;

			[Token(Token = "0x40033E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ButtonHoverEventHandler <>9__24_0;

			[Token(Token = "0x40033E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ButtonPressEventHandler <>9__24_1;

			[Token(Token = "0x6003161")]
			[Address(RVA = "0xA2E45C", Offset = "0xA2E45C", VA = "0xA2E45C")]
			public <>c()
			{
			}

			[Token(Token = "0x6003162")]
			[Address(RVA = "0xA2E464", Offset = "0xA2E464", VA = "0xA2E464")]
			internal void <TriggerVibration>b__18_0(float value)
			{
			}

			[Token(Token = "0x6003163")]
			[Address(RVA = "0xA2E5B4", Offset = "0xA2E5B4", VA = "0xA2E5B4")]
			internal void <.ctor>b__24_0(bool <p0>, ContentButton <p1>)
			{
			}

			[Token(Token = "0x6003164")]
			[Address(RVA = "0xA2E5B8", Offset = "0xA2E5B8", VA = "0xA2E5B8")]
			internal void <.ctor>b__24_1(ContentButton <p0>)
			{
			}
		}

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object _lastValueObject;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime _lastInput;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DateTime _backDown;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _vibrateTweenID;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform _activeInputRay;

		[Token(Token = "0x170002F9")]
		public static Transform ActiveInputRay
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0xA2E118", Offset = "0xA2E118", VA = "0xA2E118")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002392")]
			[Address(RVA = "0xA2E1FC", Offset = "0xA2E1FC", VA = "0xA2E1FC")]
			set
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event ButtonHoverEventHandler ButtonHoverEvent
		{
			[Token(Token = "0x6002387")]
			[Address(RVA = "0xA2D66C", Offset = "0xA2D66C", VA = "0xA2D66C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876594", Offset = "0x876594")]
			add
			{
			}
			[Token(Token = "0x6002388")]
			[Address(RVA = "0xA2D710", Offset = "0xA2D710", VA = "0xA2D710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8765A4", Offset = "0x8765A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event ButtonPressEventHandler ButtonPressedEvent
		{
			[Token(Token = "0x6002389")]
			[Address(RVA = "0xA2D7B4", Offset = "0xA2D7B4", VA = "0xA2D7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8765B4", Offset = "0x8765B4")]
			add
			{
			}
			[Token(Token = "0x600238A")]
			[Address(RVA = "0xA2D858", Offset = "0xA2D858", VA = "0xA2D858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8765C4", Offset = "0x8765C4")]
			remove
			{
			}
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xA2D46C", Offset = "0xA2D46C", VA = "0xA2D46C")]
		internal void EnterBlockRaycasts()
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xA2D5AC", Offset = "0xA2D5AC", VA = "0xA2D5AC")]
		internal void ExitBlockRaycasts()
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xA2D8FC", Offset = "0xA2D8FC", VA = "0xA2D8FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xA2D960", Offset = "0xA2D960", VA = "0xA2D960")]
		private void Start()
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xA2D964", Offset = "0xA2D964", VA = "0xA2D964")]
		private void Update()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xA2DA20", Offset = "0xA2DA20", VA = "0xA2DA20")]
		public void ProvideLocalInput(Enums.InputType inputType, [Optional] object valueObject, [Optional] ContentButton callingButton, bool skipTimeoutCheck = false)
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xA2C824", Offset = "0xA2C824", VA = "0xA2C824")]
		public void TriggerVibration()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xA2DB4C", Offset = "0xA2DB4C", VA = "0xA2DB4C")]
		public void ProvideInput(Structs.InputWrapper inputWrapper)
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xA2E268", Offset = "0xA2E268", VA = "0xA2E268")]
		public InputHandler()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class Logger : MonoBehaviour
	{
		[Token(Token = "0x6002395")]
		[Address(RVA = "0xA32DD8", Offset = "0xA32DD8", VA = "0xA32DD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xA32E3C", Offset = "0xA32E3C", VA = "0xA32E3C")]
		public void Log(Enums.LoggingLevel level, string message)
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xA32EA0", Offset = "0xA32EA0", VA = "0xA32EA0")]
		public void Log(Enums.LoggingLevel level, string className, string methodName, string message)
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xA330F4", Offset = "0xA330F4", VA = "0xA330F4")]
		public Logger()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class Overlord : MonoBehaviour
	{
		[Token(Token = "0x20007EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E5A8", Offset = "0x85E5A8")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x40033E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool showingNotice;

			[Token(Token = "0x40033E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Overlord <>4__this;

			[Token(Token = "0x6003165")]
			[Address(RVA = "0x9AD250", Offset = "0x9AD250", VA = "0x9AD250")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6003166")]
			[Address(RVA = "0x9AD490", Offset = "0x9AD490", VA = "0x9AD490")]
			internal void <StartApp>b__0()
			{
			}

			[Token(Token = "0x6003167")]
			[Address(RVA = "0x9AD588", Offset = "0x9AD588", VA = "0x9AD588")]
			internal void <StartApp>b__1()
			{
			}
		}

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool HasSeenIntroNotice;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool HasShownRecenterMessage;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isRiftBuild;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool shortWorldTour;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ClearPlayerPrefs;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AppConfig AppConfig;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OVRCameraRig OVRCameraRig;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem multiplierParticlesPrefabWhite;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem multiplierParticlesPrefabBlack;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int OverlordIndex;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int ThisOverlordIndex;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B89C", Offset = "0x86B89C")]
		private static Overlord <Instance>k__BackingField;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioManager AudioManager;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InGameElements InGameElements;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B8AC", Offset = "0x86B8AC")]
		private static InputHandler <InputHandler>k__BackingField;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B8BC", Offset = "0x86B8BC")]
		private static AppManager <AppManager>k__BackingField;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B8CC", Offset = "0x86B8CC")]
		private static Logger <Logger>k__BackingField;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B8DC", Offset = "0x86B8DC")]
		private static OVRManager <OVRManager>k__BackingField;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86B8EC", Offset = "0x86B8EC")]
		private static CNScreenFade <ScreenFader>k__BackingField;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private OVRInputModule _ovrInputModule;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OVRGazePointer _ovrGazePointer;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 smallGuardianModeAvatarOffset;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 orbPositionWithinHandLeft;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 orbPositionWithinHandRight;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _isRightHandDominant;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ulong _OculusID;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string _OculusName;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Structs.SavedOptions SavedOptions;

		[Token(Token = "0x170002FA")]
		public static Overlord Instance
		{
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x9AB4B4", Offset = "0x9AB4B4", VA = "0x9AB4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8765D4", Offset = "0x8765D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239A")]
			[Address(RVA = "0x9AB51C", Offset = "0x9AB51C", VA = "0x9AB51C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8765E4", Offset = "0x8765E4")]
			set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		public static InputHandler InputHandler
		{
			[Token(Token = "0x600239B")]
			[Address(RVA = "0x9AB588", Offset = "0x9AB588", VA = "0x9AB588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8765F4", Offset = "0x8765F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x9AB5F0", Offset = "0x9AB5F0", VA = "0x9AB5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876604", Offset = "0x876604")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public static AppManager AppManager
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x9AB65C", Offset = "0x9AB65C", VA = "0x9AB65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876614", Offset = "0x876614")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239E")]
			[Address(RVA = "0x9AB6C4", Offset = "0x9AB6C4", VA = "0x9AB6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876624", Offset = "0x876624")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public static Logger Logger
		{
			[Token(Token = "0x600239F")]
			[Address(RVA = "0x9AB730", Offset = "0x9AB730", VA = "0x9AB730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876634", Offset = "0x876634")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023A0")]
			[Address(RVA = "0x9AB798", Offset = "0x9AB798", VA = "0x9AB798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876644", Offset = "0x876644")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public static OVRManager OVRManager
		{
			[Token(Token = "0x60023A1")]
			[Address(RVA = "0x9AB804", Offset = "0x9AB804", VA = "0x9AB804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876654", Offset = "0x876654")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x9AB86C", Offset = "0x9AB86C", VA = "0x9AB86C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876664", Offset = "0x876664")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public static CNScreenFade ScreenFader
		{
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x9AB8D8", Offset = "0x9AB8D8", VA = "0x9AB8D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876674", Offset = "0x876674")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023A4")]
			[Address(RVA = "0x9AB940", Offset = "0x9AB940", VA = "0x9AB940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876684", Offset = "0x876684")]
			private set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public bool IsRightHandDominant
		{
			[Token(Token = "0x60023A6")]
			[Address(RVA = "0x9AB9B4", Offset = "0x9AB9B4", VA = "0x9AB9B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x9AB9BC", Offset = "0x9AB9BC", VA = "0x9AB9BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public static AppConfig Config
		{
			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x9ABC40", Offset = "0x9ABC40", VA = "0x9ABC40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		public static ulong OculusID
		{
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x9ABCF0", Offset = "0x9ABCF0", VA = "0x9ABCF0")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0x9ABE44", Offset = "0x9ABE44", VA = "0x9ABE44")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public static string OculusName
		{
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x9ABF94", Offset = "0x9ABF94", VA = "0x9ABF94")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0x9AC15C", Offset = "0x9AC15C", VA = "0x9AC15C")]
			set
			{
			}
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x9AB9AC", Offset = "0x9AB9AC", VA = "0x9AB9AC")]
		public OVRInputModule GetOVRInputModule()
		{
			return null;
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x9AC2AC", Offset = "0x9AC2AC", VA = "0x9AC2AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x9AD19C", Offset = "0x9AD19C", VA = "0x9AD19C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x9ACFC8", Offset = "0x9ACFC8", VA = "0x9ACFC8")]
		private void StartApp()
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x9AD258", Offset = "0x9AD258", VA = "0x9AD258")]
		private void Update()
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x9AD34C", Offset = "0x9AD34C", VA = "0x9AD34C")]
		public Overlord()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class AnimatingObject : MonoBehaviour
	{
		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _originalScale;

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xF42EA8", Offset = "0xF42EA8", VA = "0xF42EA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0xF42F54", Offset = "0xF42F54", VA = "0xF42F54")]
		public void AnimateIn(float animateTime, float delay, LeanTweenType animationType)
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0xF4302C", Offset = "0xF4302C", VA = "0xF4302C")]
		public AnimatingObject()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public abstract class ContentButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x20007EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E5B8", Offset = "0x85E5B8")]
		private sealed class <>c
		{
			[Token(Token = "0x40033EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40033EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__19_0;

			[Token(Token = "0x40033EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static UnityAction <>9__19_1;

			[Token(Token = "0x6003169")]
			[Address(RVA = "0xF60B04", Offset = "0xF60B04", VA = "0xF60B04")]
			public <>c()
			{
			}

			[Token(Token = "0x600316A")]
			[Address(RVA = "0xF60B0C", Offset = "0xF60B0C", VA = "0xF60B0C")]
			internal void <Awake>b__19_0()
			{
			}

			[Token(Token = "0x600316B")]
			[Address(RVA = "0xF60BCC", Offset = "0xF60BCC", VA = "0xF60BCC")]
			internal void <Awake>b__19_1()
			{
			}
		}

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Enums.ButtonType ButtonType;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string StringValue;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Is3DButon;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool ShouldEnable3DOnStart;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool ShouldAnimateIn;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MovementAmount3D;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ShouldFireOffHoverIfSelected;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool SkipInputTimeoutCheck;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color _customBackgroundColor;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected object _valueObject;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _animationID;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _moveBackAnimationID;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DateTime _lastTimeMoved;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal Button Button;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isDisplayingAsPressed;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _pointerIsIn;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool _isSelected;

		[Token(Token = "0x17000304")]
		public object ValueObject
		{
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xF5FD84", Offset = "0xF5FD84", VA = "0xF5FD84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0xF5FD8C", Offset = "0xF5FD8C", VA = "0xF5FD8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xF601A0", Offset = "0xF601A0", VA = "0xF601A0")]
		public void SetupButton(object valueObject)
		{
		}

		[Token(Token = "0x60023B9")]
		protected abstract void FinishSetup();

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xF601B0", Offset = "0xF601B0", VA = "0xF601B0", Slot = "7")]
		protected virtual void SelfSetup()
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xF601B4", Offset = "0xF601B4", VA = "0xF601B4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0xF60328", Offset = "0xF60328", VA = "0xF60328", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60023BD")]
		protected abstract void CustomPointerEnter();

		[Token(Token = "0x60023BE")]
		protected abstract void CustomPointerExit();

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xF604A8", Offset = "0xF604A8", VA = "0xF604A8")]
		protected ContentButton()
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xF604B8", Offset = "0xF604B8", VA = "0xF604B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876694", Offset = "0x876694")]
		private void <Awake>b__19_2()
		{
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xF60584", Offset = "0xF60584", VA = "0xF60584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8766A4", Offset = "0x8766A4")]
		private void <Awake>b__19_3()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xF60650", Offset = "0xF60650", VA = "0xF60650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8766B4", Offset = "0x8766B4")]
		private void <Awake>b__19_4()
		{
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xF60770", Offset = "0xF60770", VA = "0xF60770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8766C4", Offset = "0x8766C4")]
		private void <Awake>b__19_5()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xF6083C", Offset = "0xF6083C", VA = "0xF6083C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8766D4", Offset = "0x8766D4")]
		private void <Awake>b__19_6()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xF60908", Offset = "0xF60908", VA = "0xF60908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8766E4", Offset = "0x8766E4")]
		private void <Awake>b__19_7()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xF609D4", Offset = "0xF609D4", VA = "0xF609D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8766F4", Offset = "0x8766F4")]
		private void <Awake>b__19_8()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public abstract class ContentMenu : MonoBehaviour, InputReceiver
	{
		[Token(Token = "0x20007EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E5C8", Offset = "0x85E5C8")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40033ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ContentMenu <>4__this;

			[Token(Token = "0x40033EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<GameObject> completeCallback;

			[Token(Token = "0x600316C")]
			[Address(RVA = "0xF60F4C", Offset = "0xF60F4C", VA = "0xF60F4C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600316D")]
			[Address(RVA = "0xF61110", Offset = "0xF61110", VA = "0xF61110")]
			internal void <AnimateOut>b__0(float value)
			{
			}

			[Token(Token = "0x600316E")]
			[Address(RVA = "0xF61138", Offset = "0xF61138", VA = "0xF61138")]
			internal void <AnimateOut>b__1()
			{
			}
		}

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _originalScale;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal CanvasGroup _canvasGroup;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _numPages;

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xF60C8C", Offset = "0xF60C8C", VA = "0xF60C8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xF60DF4", Offset = "0xF60DF4", VA = "0xF60DF4", Slot = "5")]
		public virtual void MenuSpecificSetup()
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xF60DF8", Offset = "0xF60DF8", VA = "0xF60DF8", Slot = "6")]
		public virtual void MenuSpecificDisplay(bool isForward = true)
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xF4C074", Offset = "0xF4C074", VA = "0xF4C074")]
		public void Display(bool isForward)
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xF5A43C", Offset = "0xF5A43C", VA = "0xF5A43C")]
		public void SwitchToNewState(Enums.AppState newState, bool isForward = true)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xF60DFC", Offset = "0xF60DFC", VA = "0xF60DFC")]
		internal void AnimateOut(Action<GameObject> completeCallback)
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xF60F54", Offset = "0xF60F54", VA = "0xF60F54")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60023CE")]
		public abstract void ReceiveInput(Structs.InputWrapper capturedInput);

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xF5A6B8", Offset = "0xF5A6B8", VA = "0xF5A6B8")]
		protected ContentMenu()
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xF60FD0", Offset = "0xF60FD0", VA = "0xF60FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876704", Offset = "0x876704")]
		private void <Display>b__6_0(float value)
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xF61078", Offset = "0xF61078", VA = "0xF61078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876714", Offset = "0x876714")]
		private void <Display>b__6_1()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class FormButton : ContentButton
	{
		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Image BackgroundImage;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text MenuText;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int MoveSetID;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _tweenID;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _progress;

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xA2A2A4", Offset = "0xA2A2A4", VA = "0xA2A2A4", Slot = "7")]
		protected override void SelfSetup()
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xA2A390", Offset = "0xA2A390", VA = "0xA2A390", Slot = "8")]
		protected override void CustomPointerEnter()
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xA2A4C8", Offset = "0xA2A4C8", VA = "0xA2A4C8", Slot = "9")]
		protected override void CustomPointerExit()
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xA2A5FC", Offset = "0xA2A5FC", VA = "0xA2A5FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xA2A678", Offset = "0xA2A678", VA = "0xA2A678", Slot = "6")]
		protected override void FinishSetup()
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xA2A67C", Offset = "0xA2A67C", VA = "0xA2A67C")]
		private void Start()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xA2A680", Offset = "0xA2A680", VA = "0xA2A680")]
		private void Update()
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xA2A684", Offset = "0xA2A684", VA = "0xA2A684")]
		public FormButton()
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xA2A694", Offset = "0xA2A694", VA = "0xA2A694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876724", Offset = "0x876724")]
		private void <CustomPointerEnter>b__6_0(float value)
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xA2A738", Offset = "0xA2A738", VA = "0xA2A738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876734", Offset = "0x876734")]
		private void <CustomPointerExit>b__7_0(float value)
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class GenericButton : ContentButton
	{
		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xA2B6AC", Offset = "0xA2B6AC", VA = "0xA2B6AC", Slot = "8")]
		protected override void CustomPointerEnter()
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xA2B6B0", Offset = "0xA2B6B0", VA = "0xA2B6B0", Slot = "9")]
		protected override void CustomPointerExit()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xA2B6B4", Offset = "0xA2B6B4", VA = "0xA2B6B4", Slot = "6")]
		protected override void FinishSetup()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xA2B6B8", Offset = "0xA2B6B8", VA = "0xA2B6B8")]
		public GenericButton()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public interface InputReceiver
	{
		[Token(Token = "0x60023E0")]
		void ReceiveInput(Structs.InputWrapper capturedInput);
	}
	[Token(Token = "0x20004C5")]
	public class ControllerHelper : MonoBehaviour
	{
		[Token(Token = "0x20007ED")]
		private enum ControllerStatus
		{
			[Token(Token = "0x40033F0")]
			None,
			[Token(Token = "0x40033F1")]
			Left,
			[Token(Token = "0x40033F2")]
			Right,
			[Token(Token = "0x40033F3")]
			Camera
		}

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OVRCameraRig OVRCameraRig;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject LeftController;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject RightController;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ControllerStatus _controllerStatus;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DateTime _nextCheckTime;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _timeBetweenChecks;

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xF611A8", Offset = "0xF611A8", VA = "0xF611A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xF61268", Offset = "0xF61268", VA = "0xF61268")]
		private void TurnAllControllerOff()
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xF612AC", Offset = "0xF612AC", VA = "0xF612AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xF612B0", Offset = "0xF612B0", VA = "0xF612B0")]
		private void ToggleControllers(ControllerStatus status)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xF61310", Offset = "0xF61310", VA = "0xF61310")]
		public ControllerHelper()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class MotionCaptureTool : MonoBehaviour
	{
		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LeftHandTransform;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform RightHandTransform;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandCaptureData HandCaptureData;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _timer;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _hasStarted;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _timeUntilNewLeftPoint;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _timeUntilNewRightPoint;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _pointTimeDelay;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _isFirstLeftPoint;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool _isFirstRightPoint;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool _isDone;

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xA35420", Offset = "0xA35420", VA = "0xA35420")]
		private void Start()
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xA35424", Offset = "0xA35424", VA = "0xA35424")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xA35438", Offset = "0xA35438", VA = "0xA35438")]
		private void Save()
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xA35B24", Offset = "0xA35B24", VA = "0xA35B24")]
		private void Update()
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xA35E48", Offset = "0xA35E48", VA = "0xA35E48")]
		public MotionCaptureTool()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class MotionVisualizerTool : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E5D8", Offset = "0x85E5D8")]
		private sealed class <>c
		{
			[Token(Token = "0x40033F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40033F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Structs.HandPosition, Vector3> <>9__37_1;

			[Token(Token = "0x40033F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Structs.HandPosition, Vector3> <>9__38_1;

			[Token(Token = "0x6003170")]
			[Address(RVA = "0xA38738", Offset = "0xA38738", VA = "0xA38738")]
			public <>c()
			{
			}

			[Token(Token = "0x6003171")]
			[Address(RVA = "0xA38740", Offset = "0xA38740", VA = "0xA38740")]
			internal Vector3 <DrawNextLeftSet>b__37_1(Structs.HandPosition p)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6003172")]
			[Address(RVA = "0xA3874C", Offset = "0xA3874C", VA = "0xA3874C")]
			internal Vector3 <DrawNextRightSet>b__38_1(Structs.HandPosition p)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FastLineRenderer _lineRenderer;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform LeftController;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform RightController;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform LeftTarget;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform RightTarget;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform LeftFollow;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform RightFollow;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject TaiChiTargetLeft;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject TaiChiTargetRight;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextAsset MoveTextAsset;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioMixer _audioMixer;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<List<Structs.HandPosition>> _leftPoints;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<List<Structs.HandPosition>> _rightPoints;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastLineRendererProperties propsLeft;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FastLineRendererProperties propsRight;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FastLineRenderer rLeft;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FastLineRenderer rRight;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public HandCaptureData HandCaptureData;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _timer;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Structs.HandPosition _nextLeft;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Structs.HandPosition _nextRight;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool _isLeftFinished;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool _isRightFinished;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private TaiChiTarget _firstLeftTarget;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private TaiChiTarget _firstRightTarget;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _started;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int _leftIndex;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _rightIndex;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int _leftPointIndex;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int _rightPointIndex;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool _leftDone;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		private bool _rightDone;

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xA35EB0", Offset = "0xA35EB0", VA = "0xA35EB0")]
		public void ResetLines()
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0xA35EEC", Offset = "0xA35EEC", VA = "0xA35EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xA36088", Offset = "0xA36088", VA = "0xA36088")]
		public void Setup()
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0xA367A4", Offset = "0xA367A4", VA = "0xA367A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xA37EF0", Offset = "0xA37EF0", VA = "0xA37EF0")]
		public static float ConvertRange(float originalStart, float originalEnd, float newStart, float newEnd, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xA370E4", Offset = "0xA370E4", VA = "0xA370E4")]
		private void DrawNextLeftSet()
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xA378CC", Offset = "0xA378CC", VA = "0xA378CC")]
		private void DrawNextRightSet()
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0xA37F0C", Offset = "0xA37F0C", VA = "0xA37F0C")]
		public static Vector3[] MakeSmoothCurve(Vector3[] arrayToCurve, float smoothness)
		{
			return null;
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xA381F0", Offset = "0xA381F0", VA = "0xA381F0")]
		private Vector3[] Chaikin(Vector3[] pts, int depth)
		{
			return null;
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xA384CC", Offset = "0xA384CC", VA = "0xA384CC")]
		public MotionVisualizerTool()
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xA385B4", Offset = "0xA385B4", VA = "0xA385B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876744", Offset = "0x876744")]
		private void <DrawNextLeftSet>b__37_0(float alpha)
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xA38644", Offset = "0xA38644", VA = "0xA38644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876754", Offset = "0x876754")]
		private void <DrawNextRightSet>b__38_0(float alpha)
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class TaiChiTarget : MonoBehaviour
	{
		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Enums.Color Color;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem ParticleSystem;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer InnerOrb;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer OuterOrb;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource PoofSound;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _fadeMaterial;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _outerMaterial;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _fadeTweenID;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _destroyFadeTweenID;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _emitTweenID;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _shrinkTweenID;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _vibrateTweenID;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _fadeOuterTweenID;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _originalOuterAlpha;

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x9BC688", Offset = "0x9BC688", VA = "0x9BC688")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x9BC884", Offset = "0x9BC884", VA = "0x9BC884")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x9BCA2C", Offset = "0x9BCA2C", VA = "0x9BCA2C")]
		public void ShrinkOuterOrb(float time)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x9BCB54", Offset = "0x9BCB54", VA = "0x9BCB54")]
		public void ExplodeTarget(float time)
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x9BCD94", Offset = "0x9BCD94", VA = "0x9BCD94")]
		public void DissolveIn(float time = 1f)
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x9BCEDC", Offset = "0x9BCEDC", VA = "0x9BCEDC")]
		public void DissolveOut(float time = 1f)
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x9BC814", Offset = "0x9BC814", VA = "0x9BC814")]
		public void SetDissolveLevel(float level)
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x9BCDA4", Offset = "0x9BCDA4", VA = "0x9BCDA4")]
		private void Fade(float begin, float end, float time)
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x9BCEEC", Offset = "0x9BCEEC", VA = "0x9BCEEC")]
		public TaiChiTarget()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x9BCF00", Offset = "0x9BCF00", VA = "0x9BCF00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876764", Offset = "0x876764")]
		private void <Awake>b__14_0(float alpha)
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x9BCF84", Offset = "0x9BCF84", VA = "0x9BCF84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876774", Offset = "0x876774")]
		private void <ShrinkOuterOrb>b__16_0()
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x9BCFBC", Offset = "0x9BCFBC", VA = "0x9BCFBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876784", Offset = "0x876784")]
		private void <ExplodeTarget>b__17_0(float value)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x9BD09C", Offset = "0x9BD09C", VA = "0x9BD09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876794", Offset = "0x876794")]
		private void <ExplodeTarget>b__17_1()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x9BD0DC", Offset = "0x9BD0DC", VA = "0x9BD0DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8767A4", Offset = "0x8767A4")]
		private void <ExplodeTarget>b__17_2()
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x9BD158", Offset = "0x9BD158", VA = "0x9BD158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8767B4", Offset = "0x8767B4")]
		private void <Fade>b__21_0(float fadeLevel)
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public static class Utils
	{
		[Token(Token = "0x6002406")]
		[Address(RVA = "0x9AF098", Offset = "0x9AF098", VA = "0x9AF098")]
		public static Color SetAlphaNew(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x9BFD94", Offset = "0x9BFD94", VA = "0x9BFD94")]
		public static void SetAlpha(this Color color, float alpha)
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class TutorialMenu : ContentMenu
	{
		[Serializable]
		[Token(Token = "0x20007EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E5E8", Offset = "0x85E5E8")]
		private sealed class <>c
		{
			[Token(Token = "0x40033F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40033F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__4_0;

			[Token(Token = "0x6003174")]
			[Address(RVA = "0x9BE194", Offset = "0x9BE194", VA = "0x9BE194")]
			public <>c()
			{
			}

			[Token(Token = "0x6003175")]
			[Address(RVA = "0x9BE19C", Offset = "0x9BE19C", VA = "0x9BE19C")]
			internal void <LoadScene>b__4_0()
			{
			}
		}

		[Token(Token = "0x20007F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E5F8", Offset = "0x85E5F8")]
		private sealed class <LoadScene>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40033F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40033FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40033FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialMenu <>4__this;

			[Token(Token = "0x40033FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int levelIndex;

			[Token(Token = "0x40033FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool inSession;

			[Token(Token = "0x40033FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x17000585")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003179")]
				[Address(RVA = "0x9BE63C", Offset = "0x9BE63C", VA = "0x9BE63C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000586")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600317B")]
				[Address(RVA = "0x9BE6A4", Offset = "0x9BE6A4", VA = "0x9BE6A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003176")]
			[Address(RVA = "0x9BE0FC", Offset = "0x9BE0FC", VA = "0x9BE0FC")]
			[DebuggerHidden]
			public <LoadScene>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6003177")]
			[Address(RVA = "0x9BE258", Offset = "0x9BE258", VA = "0x9BE258", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003178")]
			[Address(RVA = "0x9BE25C", Offset = "0x9BE25C", VA = "0x9BE25C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600317A")]
			[Address(RVA = "0x9BE644", Offset = "0x9BE644", VA = "0x9BE644", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup CanvasGroup;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int _levelIndex;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool loading;

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x9BDC0C", Offset = "0x9BDC0C", VA = "0x9BDC0C", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x9BE070", Offset = "0x9BE070", VA = "0x9BE070")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8767E4", Offset = "0x8767E4")]
		private IEnumerator LoadScene(int levelIndex, bool inSession)
		{
			return null;
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x9BE128", Offset = "0x9BE128", VA = "0x9BE128")]
		public TutorialMenu()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class TutorialTarget : MonoBehaviour
	{
		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject InnerOrb;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TransparentOrb;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject OuterOrb;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IsRight;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool IsEnd;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int Index;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NewIntroManager IntroManager;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _vibrateID;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _bounceID;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _originalScale;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _inScale;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _innerMaterial;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _orbMaterial;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _transparentMaterial;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _originalAlpha;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _inAlpha;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _colorID;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _fadeOutTweenID;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _fadeID;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _innerMaterialColor;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _fadeInTweenID;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float _transparentOrbAlpha;

		[Token(Token = "0x17000305")]
		private OVRInput.Controller ThisController
		{
			[Token(Token = "0x600240F")]
			[Address(RVA = "0x9BEC48", Offset = "0x9BEC48", VA = "0x9BEC48")]
			get
			{
				return default(OVRInput.Controller);
			}
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x9BE6AC", Offset = "0x9BE6AC", VA = "0x9BE6AC")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x9BE7D4", Offset = "0x9BE7D4", VA = "0x9BE7D4")]
		private bool IsMatch(string tagName)
		{
			return default(bool);
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x9BE848", Offset = "0x9BE848", VA = "0x9BE848")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x9BEBD4", Offset = "0x9BEBD4", VA = "0x9BEBD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x9BEC5C", Offset = "0x9BEC5C", VA = "0x9BEC5C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x9BEF38", Offset = "0x9BEF38", VA = "0x9BEF38")]
		private void Start()
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x9BF194", Offset = "0x9BF194", VA = "0x9BF194")]
		public TutorialTarget()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x9BF1C4", Offset = "0x9BF1C4", VA = "0x9BF1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876848", Offset = "0x876848")]
		private void <FadeOut>b__18_0(float value)
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x9BF2C4", Offset = "0x9BF2C4", VA = "0x9BF2C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876858", Offset = "0x876858")]
		private void <FadeOut>b__18_1()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x9BF340", Offset = "0x9BF340", VA = "0x9BF340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876868", Offset = "0x876868")]
		private void <OnTriggerEnter>b__21_0(float value)
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x9BF424", Offset = "0x9BF424", VA = "0x9BF424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876878", Offset = "0x876878")]
		private void <OnTriggerEnter>b__21_1(float alpha)
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x9BF520", Offset = "0x9BF520", VA = "0x9BF520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876888", Offset = "0x876888")]
		private void <OnTriggerExit>b__25_0(float value)
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x9BF604", Offset = "0x9BF604", VA = "0x9BF604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876898", Offset = "0x876898")]
		private void <OnTriggerExit>b__25_1(float alpha)
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x9BF700", Offset = "0x9BF700", VA = "0x9BF700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8768A8", Offset = "0x8768A8")]
		private void <Start>b__29_0(float value)
		{
		}
	}
	[Token(Token = "0x20004CC")]
	public class UpdatePopup : ContentMenu
	{
		[Token(Token = "0x600241A")]
		[Address(RVA = "0x9BF7CC", Offset = "0x9BF7CC", VA = "0x9BF7CC")]
		public void ClickedContinue()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x9BFBEC", Offset = "0x9BFBEC", VA = "0x9BFBEC", Slot = "7")]
		public override void ReceiveInput(Structs.InputWrapper capturedInput)
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x9BFC00", Offset = "0x9BFC00", VA = "0x9BFC00")]
		public UpdatePopup()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class UpdateSoftMask : MonoBehaviour
	{
		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VideoPlayer _videoPlayer;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoftMask _softMask;

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x9BFC08", Offset = "0x9BFC08", VA = "0x9BFC08")]
		private void Start()
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x9BFCC8", Offset = "0x9BFCC8", VA = "0x9BFCC8")]
		private void Started(VideoPlayer source)
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x9BFD88", Offset = "0x9BFD88", VA = "0x9BFD88")]
		private void Update()
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x9BFD10", Offset = "0x9BFD10", VA = "0x9BFD10")]
		public static Texture2D ToTexture2D(Texture texture)
		{
			return null;
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x9BFD8C", Offset = "0x9BFD8C", VA = "0x9BFD8C")]
		public UpdateSoftMask()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class VideoMask : MonoBehaviour
	{
		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer Blackout;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer FadeInMask;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer FadeOutMask;

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x9C12F8", Offset = "0x9C12F8", VA = "0x9C12F8")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x9C133C", Offset = "0x9C133C", VA = "0x9C133C")]
		public void ToggleBlackout(bool enabled)
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x9C13A8", Offset = "0x9C13A8", VA = "0x9C13A8")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x9C13EC", Offset = "0x9C13EC", VA = "0x9C13EC")]
		public void ToggleAll(bool enabled)
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x9C1454", Offset = "0x9C1454", VA = "0x9C1454")]
		public VideoMask()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class cnArcadeEffect : MonoBehaviour
	{
		[Token(Token = "0x20007F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E608", Offset = "0x85E608")]
		private sealed class <StopEffect>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40033FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public cnArcadeEffect <>4__this;

			[Token(Token = "0x17000587")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600317F")]
				[Address(RVA = "0x9C3A6C", Offset = "0x9C3A6C", VA = "0x9C3A6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000588")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003181")]
				[Address(RVA = "0x9C3AD4", Offset = "0x9C3AD4", VA = "0x9C3AD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600317C")]
			[Address(RVA = "0x9C37D0", Offset = "0x9C37D0", VA = "0x9C37D0")]
			[DebuggerHidden]
			public <StopEffect>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600317D")]
			[Address(RVA = "0x9C39C4", Offset = "0x9C39C4", VA = "0x9C39C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600317E")]
			[Address(RVA = "0x9C39C8", Offset = "0x9C39C8", VA = "0x9C39C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003180")]
			[Address(RVA = "0x9C3A74", Offset = "0x9C3A74", VA = "0x9C3A74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new Transform transform;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer renderer;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isLeft;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool doEffect;

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x9C35E0", Offset = "0x9C35E0", VA = "0x9C35E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x9C35E4", Offset = "0x9C35E4", VA = "0x9C35E4")]
		private void ResetEffect()
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x9C372C", Offset = "0x9C372C", VA = "0x9C372C")]
		public void StartEffect()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x9C3760", Offset = "0x9C3760", VA = "0x9C3760")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8768B8", Offset = "0x8768B8")]
		private IEnumerator StopEffect()
		{
			return null;
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x9C37FC", Offset = "0x9C37FC", VA = "0x9C37FC")]
		private void Update()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x9C39B4", Offset = "0x9C39B4", VA = "0x9C39B4")]
		public cnArcadeEffect()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class cnBeatEffectPool : MonoBehaviour
	{
		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VisMessageTrigger visMessageTrigger;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public cnArcadeEffect[] beatEffect;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int beatEffectIndex;

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x9C3ADC", Offset = "0x9C3ADC", VA = "0x9C3ADC")]
		private void Start()
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x9C3B58", Offset = "0x9C3B58", VA = "0x9C3B58")]
		public void DropTheBeat()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x9C3C20", Offset = "0x9C3C20", VA = "0x9C3C20")]
		public void SetVisualizerThreshold(float threshold)
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x9C3C3C", Offset = "0x9C3C3C", VA = "0x9C3C3C")]
		public cnBeatEffectPool()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class cnFlowSpecialCase : MonoBehaviour
	{
		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StyleButton buttonFrom;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text to;

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x9C3C44", Offset = "0x9C3C44", VA = "0x9C3C44")]
		private void Start()
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x9C3D44", Offset = "0x9C3D44", VA = "0x9C3D44")]
		private void Update()
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x9C3C48", Offset = "0x9C3C48", VA = "0x9C3C48")]
		private void CopyStyle()
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x9C3D48", Offset = "0x9C3D48", VA = "0x9C3D48")]
		public cnFlowSpecialCase()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class cnFlyby : MonoBehaviour
	{
		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform flybyObject;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform start;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform end;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delayTime;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float duration;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float currentStartTime;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float currentFlyTime;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool canFly;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool canDelay;

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x9C3D50", Offset = "0x9C3D50", VA = "0x9C3D50")]
		public void Start()
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x9C3DA0", Offset = "0x9C3DA0", VA = "0x9C3DA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x9C3F80", Offset = "0x9C3F80", VA = "0x9C3F80")]
		public cnFlyby()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class cnFlyingMovement : MonoBehaviour
	{
		[Token(Token = "0x20007F2")]
		public enum AffectedControllers
		{
			[Token(Token = "0x4003403")]
			LEFT_CONTROLLER,
			[Token(Token = "0x4003404")]
			RIGHT_CONTROLLER,
			[Token(Token = "0x4003405")]
			BOTH_CONTROLLERS
		}

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FlockChild system;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distanceOffset;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dampen;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 currentLeftVelocity;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 currentRightVelocity;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 currentBothVelocity;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public AffectedControllers affectedControllers;

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x9C3F90", Offset = "0x9C3F90", VA = "0x9C3F90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x9C4570", Offset = "0x9C4570", VA = "0x9C4570")]
		private void InitIfNeeded()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x9C4600", Offset = "0x9C4600", VA = "0x9C4600")]
		public cnFlyingMovement()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	public class cnHotAirBalloon : MonoBehaviour
	{
		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform flybyObject;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform start;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform end;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float delayTime;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float duration;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EffectSettings burner1;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EffectSettings burner2;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float currentStartTime;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float currentFlyTime;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool canFly;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float amplitude;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float period;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float phase;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float frequency;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float angularFrequency;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float elapsedTime;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float lastY;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float direction;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioSource hotAirAudio;

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x9C46AC", Offset = "0x9C46AC", VA = "0x9C46AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x9C46E8", Offset = "0x9C46E8", VA = "0x9C46E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x9C4900", Offset = "0x9C4900", VA = "0x9C4900")]
		private Vector3 CalcSmoothSineWave()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x9C4A94", Offset = "0x9C4A94", VA = "0x9C4A94")]
		public cnHotAirBalloon()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class cnLoadMainMenu : MonoBehaviour
	{
		[Token(Token = "0x20007F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E618", Offset = "0x85E618")]
		private sealed class <LoadMainMenu>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000589")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003185")]
				[Address(RVA = "0x9C4C58", Offset = "0x9C4C58", VA = "0x9C4C58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003187")]
				[Address(RVA = "0x9C4CC0", Offset = "0x9C4CC0", VA = "0x9C4CC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003182")]
			[Address(RVA = "0x9C4B38", Offset = "0x9C4B38", VA = "0x9C4B38")]
			[DebuggerHidden]
			public <LoadMainMenu>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6003183")]
			[Address(RVA = "0x9C4B6C", Offset = "0x9C4B6C", VA = "0x9C4B6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003184")]
			[Address(RVA = "0x9C4B70", Offset = "0x9C4B70", VA = "0x9C4B70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003186")]
			[Address(RVA = "0x9C4C60", Offset = "0x9C4C60", VA = "0x9C4C60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x9C4AAC", Offset = "0x9C4AAC", VA = "0x9C4AAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x9C4AD8", Offset = "0x9C4AD8", VA = "0x9C4AD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x87691C", Offset = "0x87691C")]
		private IEnumerator LoadMainMenu()
		{
			return null;
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x9C4B64", Offset = "0x9C4B64", VA = "0x9C4B64")]
		public cnLoadMainMenu()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	public class cnMultiplierEffect : MonoBehaviour
	{
		[Token(Token = "0x20007F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E628", Offset = "0x85E628")]
		private sealed class <DestroyParticles>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400340A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x400340B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ParticleSystem particles;

			[Token(Token = "0x1700058B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600318B")]
				[Address(RVA = "0x9C56CC", Offset = "0x9C56CC", VA = "0x9C56CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600318D")]
				[Address(RVA = "0x9C5734", Offset = "0x9C5734", VA = "0x9C5734", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003188")]
			[Address(RVA = "0x9C514C", Offset = "0x9C514C", VA = "0x9C514C")]
			[DebuggerHidden]
			public <DestroyParticles>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003189")]
			[Address(RVA = "0x9C55DC", Offset = "0x9C55DC", VA = "0x9C55DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600318A")]
			[Address(RVA = "0x9C55E0", Offset = "0x9C55E0", VA = "0x9C55E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600318C")]
			[Address(RVA = "0x9C56D4", Offset = "0x9C56D4", VA = "0x9C56D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E638", Offset = "0x85E638")]
		private sealed class <Freeze>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400340C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400340D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400340E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x400340F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public cnMultiplierEffect <>4__this;

			[Token(Token = "0x1700058D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003191")]
				[Address(RVA = "0x9C5828", Offset = "0x9C5828", VA = "0x9C5828", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003193")]
				[Address(RVA = "0x9C5890", Offset = "0x9C5890", VA = "0x9C5890", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600318E")]
			[Address(RVA = "0x9C5178", Offset = "0x9C5178", VA = "0x9C5178")]
			[DebuggerHidden]
			public <Freeze>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600318F")]
			[Address(RVA = "0x9C573C", Offset = "0x9C573C", VA = "0x9C573C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003190")]
			[Address(RVA = "0x9C5740", Offset = "0x9C5740", VA = "0x9C5740", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003192")]
			[Address(RVA = "0x9C5830", Offset = "0x9C5830", VA = "0x9C5830", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E648", Offset = "0x85E648")]
		private sealed class <UnFreeze>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4003413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public cnMultiplierEffect <>4__this;

			[Token(Token = "0x1700058F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003197")]
				[Address(RVA = "0x9C5AF8", Offset = "0x9C5AF8", VA = "0x9C5AF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000590")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003199")]
				[Address(RVA = "0x9C5B60", Offset = "0x9C5B60", VA = "0x9C5B60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003194")]
			[Address(RVA = "0x9C5224", Offset = "0x9C5224", VA = "0x9C5224")]
			[DebuggerHidden]
			public <UnFreeze>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6003195")]
			[Address(RVA = "0x9C59C8", Offset = "0x9C59C8", VA = "0x9C59C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003196")]
			[Address(RVA = "0x9C59CC", Offset = "0x9C59CC", VA = "0x9C59CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003198")]
			[Address(RVA = "0x9C5B00", Offset = "0x9C5B00", VA = "0x9C5B00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E658", Offset = "0x85E658")]
		private sealed class <StartFade>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4003417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public cnMultiplierEffect <>4__this;

			[Token(Token = "0x17000591")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600319D")]
				[Address(RVA = "0x9C5958", Offset = "0x9C5958", VA = "0x9C5958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000592")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600319F")]
				[Address(RVA = "0x9C59C0", Offset = "0x9C59C0", VA = "0x9C59C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600319A")]
			[Address(RVA = "0x9C52D0", Offset = "0x9C52D0", VA = "0x9C52D0")]
			[DebuggerHidden]
			public <StartFade>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600319B")]
			[Address(RVA = "0x9C5898", Offset = "0x9C5898", VA = "0x9C5898", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600319C")]
			[Address(RVA = "0x9C589C", Offset = "0x9C589C", VA = "0x9C589C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600319E")]
			[Address(RVA = "0x9C5960", Offset = "0x9C5960", VA = "0x9C5960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem particlePrefab;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rigidbody;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float thrust;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool canFade;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool canScale;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool isLeft;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float fadeDistance;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float distance;

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x9C4CC8", Offset = "0x9C4CC8", VA = "0x9C4CC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x9C4CCC", Offset = "0x9C4CCC", VA = "0x9C4CCC")]
		private void ResetScore()
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x9C4DFC", Offset = "0x9C4DFC", VA = "0x9C4DFC")]
		public void SetText(float value)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x9C4E20", Offset = "0x9C4E20", VA = "0x9C4E20")]
		private void TriggerEffect()
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x9C4F14", Offset = "0x9C4F14", VA = "0x9C4F14")]
		private void SpawnParticles()
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x9C50CC", Offset = "0x9C50CC", VA = "0x9C50CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876980", Offset = "0x876980")]
		private IEnumerator DestroyParticles(ParticleSystem particles, float seconds)
		{
			return null;
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x9C4E94", Offset = "0x9C4E94", VA = "0x9C4E94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8769E4", Offset = "0x8769E4")]
		private IEnumerator Freeze(float time)
		{
			return null;
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x9C51A4", Offset = "0x9C51A4", VA = "0x9C51A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876A48", Offset = "0x876A48")]
		private IEnumerator UnFreeze(float time)
		{
			return null;
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x9C5250", Offset = "0x9C5250", VA = "0x9C5250")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876AAC", Offset = "0x876AAC")]
		private IEnumerator StartFade(float time)
		{
			return null;
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x9C52FC", Offset = "0x9C52FC", VA = "0x9C52FC")]
		private void Update()
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x9C55B8", Offset = "0x9C55B8", VA = "0x9C55B8")]
		public cnMultiplierEffect()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class cnOrbHaptics : MonoBehaviour
	{
		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OculusHaptics controllerHaptics;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider controllerCollider;

		[Token(Token = "0x4002531")]
		private const float INTENSITY = 0.15f;

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x9C5B68", Offset = "0x9C5B68", VA = "0x9C5B68")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x9C5C18", Offset = "0x9C5C18", VA = "0x9C5C18")]
		public cnOrbHaptics()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class cnPAParticleMovement : MonoBehaviour
	{
		[Token(Token = "0x20007F8")]
		public enum AffectedControllers
		{
			[Token(Token = "0x4003419")]
			LEFT_CONTROLLER,
			[Token(Token = "0x400341A")]
			RIGHT_CONTROLLER,
			[Token(Token = "0x400341B")]
			BOTH_CONTROLLERS
		}

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PAParticleField system;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float intensity;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dampen;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 axis;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 currentLeftVelocity;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 currentRightVelocity;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 currentBothVelocity;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AffectedControllers affectedControllers;

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x9C5C20", Offset = "0x9C5C20", VA = "0x9C5C20")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x9C6308", Offset = "0x9C6308", VA = "0x9C6308")]
		private void InitIfNeeded()
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x9C6398", Offset = "0x9C6398", VA = "0x9C6398")]
		public cnPAParticleMovement()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class cnParticleMovement : MonoBehaviour
	{
		[Token(Token = "0x20007F9")]
		public enum AffectedControllers
		{
			[Token(Token = "0x400341D")]
			LEFT_CONTROLLER,
			[Token(Token = "0x400341E")]
			RIGHT_CONTROLLER,
			[Token(Token = "0x400341F")]
			BOTH_CONTROLLERS
		}

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem system;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float intensity;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float dampen;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 currentLeftVelocity;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 currentRightVelocity;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 currentBothVelocity;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 gravityVelocity;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AffectedControllers affectedControllers;

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x9C6454", Offset = "0x9C6454", VA = "0x9C6454")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x9C6B70", Offset = "0x9C6B70", VA = "0x9C6B70")]
		private void InitIfNeeded()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x9C6C80", Offset = "0x9C6C80", VA = "0x9C6C80")]
		public cnParticleMovement()
		{
		}
	}
}
namespace CubicleNinjas.GuidedTaiChi.ScriptableObjects
{
	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C508", Offset = "0x85C508")]
	public class EnvironmentColors : ScriptableObject
	{
		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B8FC", Offset = "0x86B8FC")]
		public Color[] videoColors;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color[] meshColors;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float DelayInSeconds;

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x9B17B4", Offset = "0x9B17B4", VA = "0x9B17B4")]
		public EnvironmentColors()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C554", Offset = "0x85C554")]
	public class AllMoves : ScriptableObject
	{
		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MoveSet Arcade1MoveSet;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveSet Arcade2MoveSet;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MoveSet Arcade3MoveSet;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MoveSet Learn1MoveSet;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MoveSet Learn2MoveSet;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MoveSet Learn3MoveSet;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MoveSet Expert1MoveSet;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MoveSet Expert2MoveSet;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MoveSet Expert3MoveSet;

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x9B0F90", Offset = "0x9B0F90", VA = "0x9B0F90")]
		public AllMoves()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C5A0", Offset = "0x85C5A0")]
	public class AppConfig : ScriptableObject
	{
		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoConfig VideoConfig;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebuggingConfig DebuggingConfig;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DeviceInformation DeviceInformation;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AppResources AppResources;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MovesConfig MovesConfig;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Structs.BGWithOffset> ButtonBGSprites;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MusicTrack> MusicTracks;

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x9B0F98", Offset = "0x9B0F98", VA = "0x9B0F98")]
		public AppConfig()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C5F4", Offset = "0x85C5F4")]
	public class AppResources : ScriptableObject
	{
		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject MainMenu;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject SelectTrainingMenu;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject SelectEnvironmentMenu;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject SelectMusicMenu;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject FinishedTrainingMenu;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject FinishedSessionMenu;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject FinishedArcadeMenu;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject PauseMenu;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject TutorialPauseMenu;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject OptionsMenu;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject TutorialMenu;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject MoveSetButton;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject MoveSetButtonLong;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject MusicButton;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject FreePauseMenu;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject CalibrateMenu;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject WorldTourMenu;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject FinishedWorldTourMenu;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject CalibrationPromptMenu;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject UpdatePopup;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject HandTrackingVideo;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Material UIOverlayMaterial;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public MoveSet TutorialMoveSet;

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x9B0FA0", Offset = "0x9B0FA0", VA = "0x9B0FA0")]
		public AppResources()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C648", Offset = "0x85C648")]
	public class DebuggingConfig : ScriptableObject
	{
		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Enums.LoggingLevel LoggingLevel;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ActAsOculusGo;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enums.ControllerType ControllerTypeOverride;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ClearPlayerPrefs;

		[Token(Token = "0x17000306")]
		public bool IsControllerOverrideSet
		{
			[Token(Token = "0x6002459")]
			[Address(RVA = "0x9B0FA8", Offset = "0x9B0FA8", VA = "0x9B0FA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x9B0FB8", Offset = "0x9B0FB8", VA = "0x9B0FB8")]
		public DebuggingConfig()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C694", Offset = "0x85C694")]
	public class DeviceInformation : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20007FA")]
		public class SpawnedObject
		{
			[Token(Token = "0x4003420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool DontDestroy;

			[Token(Token = "0x4003421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject ObjectToSpawn;

			[Token(Token = "0x4003422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string Name;

			[Token(Token = "0x4003423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 Position;

			[Token(Token = "0x4003424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 Rotation;

			[Token(Token = "0x60031A0")]
			[Address(RVA = "0x9B17AC", Offset = "0x9B17AC", VA = "0x9B17AC")]
			public SpawnedObject()
			{
			}
		}

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Enums.DeviceType DeviceType;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SpawnedObject> ObjectsToSpawn;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isOculusGo;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _deviceID;

		[Token(Token = "0x17000307")]
		public bool IsOculusGo
		{
			[Token(Token = "0x600245B")]
			[Address(RVA = "0x9B0FC0", Offset = "0x9B0FC0", VA = "0x9B0FC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600245C")]
			[Address(RVA = "0x9B1094", Offset = "0x9B1094", VA = "0x9B1094")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public string DeviceID
		{
			[Token(Token = "0x600245D")]
			[Address(RVA = "0x9B10A0", Offset = "0x9B10A0", VA = "0x9B10A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000309")]
		public bool UseGoPerformance
		{
			[Token(Token = "0x600245E")]
			[Address(RVA = "0x9B10A8", Offset = "0x9B10A8", VA = "0x9B10A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030A")]
		public bool IsMobileVR
		{
			[Token(Token = "0x600245F")]
			[Address(RVA = "0x9B10E0", Offset = "0x9B10E0", VA = "0x9B10E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030B")]
		public Enums.ControllerType ControllerType
		{
			[Token(Token = "0x6002460")]
			[Address(RVA = "0x9B10F4", Offset = "0x9B10F4", VA = "0x9B10F4")]
			get
			{
				return default(Enums.ControllerType);
			}
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x9B11E4", Offset = "0x9B11E4", VA = "0x9B11E4")]
		public void SetupDevice()
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x9B1500", Offset = "0x9B1500", VA = "0x9B1500")]
		public void SpawnPrefabs()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x9B1754", Offset = "0x9B1754", VA = "0x9B1754")]
		public DeviceInformation()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C6E0", Offset = "0x85C6E0")]
	public class GameplayElement : ScriptableObject
	{
		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MoveSet Move;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveSetCategory MoveSetCategory;

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x9B17BC", Offset = "0x9B17BC", VA = "0x9B17BC")]
		public GameplayElement()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class HandCaptureData
	{
		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Structs.HandPosition> LeftHandPositions;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Structs.HandPosition> RightHandPositions;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _leftIndex;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _rightIndex;

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x9B17C4", Offset = "0x9B17C4", VA = "0x9B17C4")]
		public void ClearData()
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x9B184C", Offset = "0x9B184C", VA = "0x9B184C")]
		public void AddHandPosition(Vector3 position, bool isLeft, bool isControlPoint, float time)
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x9B191C", Offset = "0x9B191C", VA = "0x9B191C")]
		public void Rewind()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x9B1924", Offset = "0x9B1924", VA = "0x9B1924")]
		public Structs.HandPosition GetNextHandPosition(bool isLeft)
		{
			return default(Structs.HandPosition);
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x9B1A04", Offset = "0x9B1A04", VA = "0x9B1A04")]
		public bool IsCurrentPositionLast(bool isLeft)
		{
			return default(bool);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x9B1A88", Offset = "0x9B1A88", VA = "0x9B1A88")]
		internal void Load(TextAsset textAsset)
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x9B2770", Offset = "0x9B2770", VA = "0x9B2770")]
		public HandCaptureData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C72C", Offset = "0x85C72C")]
	public class Move : ScriptableObject
	{
		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationClip MoveClip;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationClip MoveClipStationary;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string MoveName;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Speed;

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x9B2808", Offset = "0x9B2808", VA = "0x9B2808")]
		public Move()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C778", Offset = "0x85C778")]
	public class MoveSet : ScriptableObject
	{
		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Enums.MoveSetCategoryType MoveSetCategoryType;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveSetCategory Category;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Name;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Enums.MoveSetType MoveSetType;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Structs.MoveWithTransitionTime> Moves;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int LevelIndex;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsTutorial;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Leaderboard;

		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RuntimeAnimatorController AnimatorController;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MusicTrack MusicTrack;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float Speed;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float Duration;

		[Token(Token = "0x1700030C")]
		public float DurationWithSpeedModifier
		{
			[Token(Token = "0x600246D")]
			[Address(RVA = "0x9B2818", Offset = "0x9B2818", VA = "0x9B2818")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030D")]
		public string DurationFormatted
		{
			[Token(Token = "0x600246E")]
			[Address(RVA = "0x9B282C", Offset = "0x9B282C", VA = "0x9B282C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x9B2940", Offset = "0x9B2940", VA = "0x9B2940")]
		public MoveSet()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C7C4", Offset = "0x85C7C4")]
	public class MoveSetCategory : ScriptableObject
	{
		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CategoryName;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite CategoryImage;

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x9B2950", Offset = "0x9B2950", VA = "0x9B2950")]
		public MoveSetCategory()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C810", Offset = "0x85C810")]
	public class MovesConfig : ScriptableObject
	{
		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MoveSet> LearnMoveSets;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MoveSet> ExpertMoveSets;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<MoveSet> ArcadeMoveSets;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<MoveSet> StationaryLearnMoveSets;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<MoveSet> StationaryExpertMoveSets;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<MoveSet> StationaryArcadeMoveSets;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MoveSet> RoomScaleShortWorldTourMoveSets;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<MoveSet> StationaryShortWorldTourMoveSets;

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x9B2958", Offset = "0x9B2958", VA = "0x9B2958")]
		public MovesConfig()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C85C", Offset = "0x85C85C")]
	public class MusicTrack : ScriptableObject
	{
		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip LeftAudio;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip RightAudio;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip PreviewAudio;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Title;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Artist;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite Art;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IsArcadeSong;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float VisualizerThreshold;

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x9B2960", Offset = "0x9B2960", VA = "0x9B2960")]
		public MusicTrack()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x85C8A8", Offset = "0x85C8A8")]
	public class VideoConfig : ScriptableObject
	{
		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material VideoMaterialMaskIn;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material VideoMaterialMaskOut;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Structs.MenuBGVideo> MenuBGVideos;

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x9B2974", Offset = "0x9B2974", VA = "0x9B2974")]
		public VideoConfig()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class InGameElements : MonoBehaviour
	{
		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputHandSwitcher InputHandSwitcher;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRGazePointer OVRGazePointer;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasGroup BackButton;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject LoadingIcon;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject NoticeImage;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject CanvasObject;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform MenuContentParent;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CanvasGroup MasterCanvasGroup;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject OVRCameraRig;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image TopLogo;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RawImage MenuBGUnderlay;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RawImage MenuBGOverlay;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public RawImage MenuBGOverlayEnvironment;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material InstructorBodyMaterial;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material InstructorHeadMaterial;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Material InstructorLimbsMaterial;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject LeftHand;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject RightHand;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject LeftController;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject RightController;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject LeftInGameHandItem;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject RightInGameHandItem;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject AvatarSelf;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject AvatarLead;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject AvatarNorth;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CanvasGroup InstructionsTextCanvasGroup;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GameObject InstructionsTextControllers;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject InstructionsTextHands;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject AvatarEast;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject AvatarWest;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public cnTaiChi TaiChiScript;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject LeftTarget;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject RightTarget;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject Paths;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject TrackingSpace;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AudioSource MenuMusic;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Transform PlayerHandLeft;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform PlayerHandRight;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObject LeftFollow;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public GameObject RightFollow;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public PlayerFeedback PlayerFeedbackLeft;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public PlayerFeedback PlayerFeedbackRight;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Material OuterOrbLeftMaterial;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Material OuterOrbRightMaterial;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Material InnerOrbLeftMaterial;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Material InnerOrbRightMaterial;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public AraTrail PlayerTrailLeft;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public AraTrail PlayerTrailRight;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public AudioSource LeftAudio;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public AudioSource RightAudio;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public AudioSource RightEffectAudio;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public GameObject VisualizerManager;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public GameObject ArcadeEffectLeft;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public GameObject ArcadeEffectRight;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public GameObject ArcadeEffectScorePoolLeft;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public GameObject ArcadeEffectScorePoolRight;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public GameObject arcadeScoreObject;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GameObject arcadeTimer;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public GameObject flowTimer;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public GameObject PathLeftInnerOrb;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public GameObject PathRightInnerOrb;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public GameObject PathLeftOuterOrb;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public GameObject PathRightOuterOrb;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public FlareLayer FlareLayer;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Transform CenterEyeAnchor;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public TextMesh DebugMovesetText;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public AudioSource VoiceOverAudio;

		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public AudioClip[] AudioSessionStart;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public AudioClip[] AudioBreathing;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public AudioClip[] AudioConnection;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public AudioClip[] AudioPosture;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public AudioClip[] AudioAwareness;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public AudioClip[] AudioGeneral;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public AudioClip[] AudioGoodbye;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public AudioMixer AudioMixer;

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x9B2800", Offset = "0x9B2800", VA = "0x9B2800")]
		public InGameElements()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo
{
	[Token(Token = "0x20004E9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85C8FC", Offset = "0x85C8FC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85C8FC", Offset = "0x85C8FC")]
	public class ApplyToMaterial : MonoBehaviour
	{
		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 _offset;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 _scale;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _material;

		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _texturePropertyName;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MediaPlayer _media;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D _defaultTexture;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture _originalTexture;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 _originalScale;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 _originalOffset;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x40025F8")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propChromaTex;

		[Token(Token = "0x40025FA")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x40025FC")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xFD92D8", Offset = "0xFD92D8", VA = "0xFD92D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xFD945C", Offset = "0xFD945C", VA = "0xFD945C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xFD9818", Offset = "0xFD9818", VA = "0xFD9818")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xFD9EB8", Offset = "0xFD9EB8", VA = "0xFD9EB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xFD9FF8", Offset = "0xFD9FF8", VA = "0xFD9FF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xFDA01C", Offset = "0xFDA01C", VA = "0xFDA01C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xFD9EDC", Offset = "0xFD9EDC", VA = "0xFD9EDC")]
		private void SaveProperties()
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xFDA020", Offset = "0xFDA020", VA = "0xFDA020")]
		private void RestoreProperties()
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xFDA144", Offset = "0xFDA144", VA = "0xFDA144")]
		public ApplyToMaterial()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85C960", Offset = "0x85C960")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85C960", Offset = "0x85C960")]
	public class ApplyToMesh : MonoBehaviour
	{
		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B934", Offset = "0x86B934")]
		[SerializeField]
		private MediaPlayer _media;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86B980", Offset = "0x86B980")]
		[SerializeField]
		private Texture2D _defaultTexture;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x86B9CC", Offset = "0x86B9CC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86B9CC", Offset = "0x86B9CC")]
		[SerializeField]
		private Renderer _mesh;

		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _texturePropertyName;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _offset;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDirty;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture _lastTextureApplied;

		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _propTexture;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x400260B")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propChromaTex;

		[Token(Token = "0x400260D")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x400260F")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x1700030E")]
		public MediaPlayer Player
		{
			[Token(Token = "0x600247E")]
			[Address(RVA = "0xFDA1DC", Offset = "0xFDA1DC", VA = "0xFDA1DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600247F")]
			[Address(RVA = "0xFDA1E4", Offset = "0xFDA1E4", VA = "0xFDA1E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public Texture2D DefaultTexture
		{
			[Token(Token = "0x6002480")]
			[Address(RVA = "0xFDA3A0", Offset = "0xFDA3A0", VA = "0xFDA3A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002481")]
			[Address(RVA = "0xFDA3A8", Offset = "0xFDA3A8", VA = "0xFDA3A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public Renderer MeshRenderer
		{
			[Token(Token = "0x6002482")]
			[Address(RVA = "0xFDA438", Offset = "0xFDA438", VA = "0xFDA438")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002483")]
			[Address(RVA = "0xFDA440", Offset = "0xFDA440", VA = "0xFDA440")]
			set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public string TexturePropertyName
		{
			[Token(Token = "0x6002484")]
			[Address(RVA = "0xFDA4D0", Offset = "0xFDA4D0", VA = "0xFDA4D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002485")]
			[Address(RVA = "0xFDA4D8", Offset = "0xFDA4D8", VA = "0xFDA4D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public Vector2 Offset
		{
			[Token(Token = "0x6002486")]
			[Address(RVA = "0xFDA524", Offset = "0xFDA524", VA = "0xFDA524")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002487")]
			[Address(RVA = "0xFDA52C", Offset = "0xFDA52C", VA = "0xFDA52C")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public Vector2 Scale
		{
			[Token(Token = "0x6002488")]
			[Address(RVA = "0xFDA5D0", Offset = "0xFDA5D0", VA = "0xFDA5D0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002489")]
			[Address(RVA = "0xFDA5D8", Offset = "0xFDA5D8", VA = "0xFDA5D8")]
			set
			{
			}
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xFDA67C", Offset = "0xFDA67C", VA = "0xFDA67C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0xFDA8B4", Offset = "0xFDA8B4", VA = "0xFDA8B4")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xFDAD98", Offset = "0xFDAD98", VA = "0xFDAD98")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xFDA1E8", Offset = "0xFDA1E8", VA = "0xFDA1E8")]
		private void ChangeMediaPlayer(MediaPlayer player)
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xFDA8C0", Offset = "0xFDA8C0", VA = "0xFDA8C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xFDADB8", Offset = "0xFDADB8", VA = "0xFDADB8")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xFDB368", Offset = "0xFDB368", VA = "0xFDB368")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xFDB4C0", Offset = "0xFDB4C0", VA = "0xFDB4C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xFDB4D0", Offset = "0xFDB4D0", VA = "0xFDB4D0")]
		public ApplyToMesh()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85C9C4", Offset = "0x85C9C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85C9C4", Offset = "0x85C9C4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85C9C4", Offset = "0x85C9C4")]
	public class AudioOutput : MonoBehaviour
	{
		[Token(Token = "0x20007FB")]
		public enum AudioOutputMode
		{
			[Token(Token = "0x4003426")]
			Single,
			[Token(Token = "0x4003427")]
			Multiple
		}

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioOutputMode _audioOutputMode;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int _channelMask;

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xFDB560", Offset = "0xFDB560", VA = "0xFDB560")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xFDB5B8", Offset = "0xFDB5B8", VA = "0xFDB5B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xFDB754", Offset = "0xFDB754", VA = "0xFDB754")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xFDB75C", Offset = "0xFDB75C", VA = "0xFDB75C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0xFDB5C0", Offset = "0xFDB5C0", VA = "0xFDB5C0")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xFDBAFC", Offset = "0xFDBAFC", VA = "0xFDBAFC")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xFDB88C", Offset = "0xFDB88C", VA = "0xFDB88C")]
		private static void ApplyAudioSettings(MediaPlayer player, AudioSource audioSource)
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xFDBB64", Offset = "0xFDBB64", VA = "0xFDBB64")]
		public AudioOutput()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85CA74", Offset = "0x85CA74")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85CA74", Offset = "0x85CA74")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85CA74", Offset = "0x85CA74")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85CA74", Offset = "0x85CA74")]
	public class CubemapCube : MonoBehaviour
	{
		[Token(Token = "0x20007FC")]
		public enum Layout
		{
			[Token(Token = "0x4003429")]
			FacebookTransform32,
			[Token(Token = "0x400342A")]
			Facebook360Capture
		}

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MeshRenderer _renderer;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float expansion_coeff;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Layout _layout;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture _texture;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _verticalFlip;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _textureWidth;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _textureHeight;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propApplyGamma;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x4002621")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propChromaTex;

		[Token(Token = "0x4002623")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x17000314")]
		public MediaPlayer Player
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0xFDCA08", Offset = "0xFDCA08", VA = "0xFDCA08")]
			get
			{
				return null;
			}
			[Token(Token = "0x600249B")]
			[Address(RVA = "0xFDCA00", Offset = "0xFDCA00", VA = "0xFDCA00")]
			set
			{
			}
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xFDCA10", Offset = "0xFDCA10", VA = "0xFDCA10")]
		private void Awake()
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xFDCB10", Offset = "0xFDCB10", VA = "0xFDCB10")]
		private void Start()
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xFDDC58", Offset = "0xFDDC58", VA = "0xFDDC58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xFDDDAC", Offset = "0xFDDDAC", VA = "0xFDDDAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0xFDCC90", Offset = "0xFDCC90", VA = "0xFDCC90")]
		private void BuildMesh()
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xFDE54C", Offset = "0xFDE54C", VA = "0xFDE54C")]
		private void UpdateMeshUV(int textureWidth, int textureHeight, bool flipY)
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0xFDEFAC", Offset = "0xFDEFAC", VA = "0xFDEFAC")]
		public CubemapCube()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85CB4C", Offset = "0x85CB4C")]
	public class DebugOverlay : MonoBehaviour
	{
		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _guiDepth;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _displaySize;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _debugOverlayCount;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool _displayControls;

		[Token(Token = "0x400262A")]
		private const int s_GuiStartWidth = 10;

		[Token(Token = "0x400262B")]
		private const int s_GuiWidth = 180;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_GuiPositionX;

		[Token(Token = "0x17000315")]
		public bool DisplayControls
		{
			[Token(Token = "0x60024A4")]
			[Address(RVA = "0xFDEFC0", Offset = "0xFDEFC0", VA = "0xFDEFC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0xFDEFC8", Offset = "0xFDEFC8", VA = "0xFDEFC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0xFDEFD4", Offset = "0xFDEFD4", VA = "0xFDEFD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0xFDEFDC", Offset = "0xFDEFDC", VA = "0xFDEFDC")]
			set
			{
			}
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xFDF064", Offset = "0xFDF064", VA = "0xFDF064")]
		private void SetGuiPositionFromVideoIndex(int index)
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xFDF104", Offset = "0xFDF104", VA = "0xFDF104")]
		private void Update()
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0xFDF10C", Offset = "0xFDF10C", VA = "0xFDF10C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xFE0884", Offset = "0xFE0884", VA = "0xFE0884")]
		public DebugOverlay()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85CB88", Offset = "0x85CB88")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85CB88", Offset = "0x85CB88")]
	[ExecuteInEditMode]
	public class DisplayBackground : MonoBehaviour
	{
		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IMediaProducer _source;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D _texture;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _material;

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0xFE9EE8", Offset = "0xFE9EE8", VA = "0xFE9EE8")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xFEA09C", Offset = "0xFEA09C", VA = "0xFEA09C")]
		public DisplayBackground()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85CBFC", Offset = "0x85CBFC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85CBFC", Offset = "0x85CBFC")]
	[ExecuteInEditMode]
	public class DisplayIMGUI : MonoBehaviour
	{
		[Token(Token = "0x4002630")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4002631")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _displayInEditor;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ScaleMode _scaleMode;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color _color;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _alphaBlend;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _useDepth;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int _depth;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _fullScreen;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BB0C", Offset = "0x86BB0C")]
		public float _x;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BB24", Offset = "0x86BB24")]
		public float _y;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BB3C", Offset = "0x86BB3C")]
		public float _width;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BB54", Offset = "0x86BB54")]
		public float _height;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propAlphaPack;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propVertScale;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propChromaTex;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _material;

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xFEA0A4", Offset = "0xFEA0A4", VA = "0xFEA0A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xFEA198", Offset = "0xFEA198", VA = "0xFEA198")]
		private void Start()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xFEA2D4", Offset = "0xFEA2D4", VA = "0xFEA2D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xFEA380", Offset = "0xFEA380", VA = "0xFEA380")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0xFEA5E4", Offset = "0xFEA5E4", VA = "0xFEA5E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xFEA8E8", Offset = "0xFEA8E8", VA = "0xFEA8E8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0xFEB1BC", Offset = "0xFEB1BC", VA = "0xFEB1BC")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xFEB2A8", Offset = "0xFEB2A8", VA = "0xFEB2A8")]
		public DisplayIMGUI()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85CC70", Offset = "0x85CC70")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85CC70", Offset = "0x85CC70")]
	public class DisplayUGUI : MaskableGraphic
	{
		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public Rect m_UVRect;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public bool _setNativeSize;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		public ScaleMode _scaleMode;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		public bool _noDefaultDisplay;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[SerializeField]
		public bool _displayInEditor;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public Texture _defaultTexture;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _lastWidth;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int _lastHeight;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _flipY;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Texture _lastTexture;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader _shaderStereoPacking;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Shader _shaderAndroidOES;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propAlphaPack;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propVertScale;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _propStereo;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int _propApplyGamma;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x4002658")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int _propChromaTex;

		[Token(Token = "0x400265A")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _userMaterial;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material _material;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<UIVertex> _vertices;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<int> QuadIndices;

		[Token(Token = "0x17000317")]
		public override Texture mainTexture
		{
			[Token(Token = "0x60024BA")]
			[Address(RVA = "0xFEBC20", Offset = "0xFEBC20", VA = "0xFEBC20", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0xFECA18", Offset = "0xFECA18", VA = "0xFECA18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024BF")]
			[Address(RVA = "0xFE7D90", Offset = "0xFE7D90", VA = "0xFE7D90")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public Rect uvRect
		{
			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xFECA20", Offset = "0xFECA20", VA = "0xFECA20")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x60024C1")]
			[Address(RVA = "0xFECA2C", Offset = "0xFECA2C", VA = "0xFECA2C")]
			set
			{
			}
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xFEB2F8", Offset = "0xFEB2F8", VA = "0xFEB2F8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xFEB790", Offset = "0xFEB790", VA = "0xFEB790", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xFEB814", Offset = "0xFEB814", VA = "0xFEB814", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0xFEB8E0", Offset = "0xFEB8E0", VA = "0xFEB8E0")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0xFEBDCC", Offset = "0xFEBDCC", VA = "0xFEBDCC")]
		public bool HasValidTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0xFEBF34", Offset = "0xFEBF34", VA = "0xFEBF34")]
		private void UpdateInternalMaterial()
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0xFEC124", Offset = "0xFEC124", VA = "0xFEC124")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xFECABC", Offset = "0xFECABC", VA = "0xFECABC", Slot = "45")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x876B10", Offset = "0x876B10")]
		public override void SetNativeSize()
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xFECD00", Offset = "0xFECD00", VA = "0xFECD00", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xFED3C4", Offset = "0xFED3C4", VA = "0xFED3C4", Slot = "42")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x876B48", Offset = "0x876B48")]
		protected override void OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xFECDA8", Offset = "0xFECDA8", VA = "0xFECDA8")]
		private void _OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xFED3C8", Offset = "0xFED3C8", VA = "0xFED3C8")]
		private Vector4 GetDrawingDimensions(ScaleMode scaleMode, ref Rect uvRect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xFED9CC", Offset = "0xFED9CC", VA = "0xFED9CC")]
		public DisplayUGUI()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85CCE4", Offset = "0x85CCE4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85CCE4", Offset = "0x85CCE4")]
	public class MediaPlayer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007FD")]
		public class Setup
		{
			[Token(Token = "0x400342B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool persistent;

			[Token(Token = "0x60031A1")]
			[Address(RVA = "0xAF3F78", Offset = "0xAF3F78", VA = "0xAF3F78")]
			public Setup()
			{
			}
		}

		[Token(Token = "0x20007FE")]
		public enum FileLocation
		{
			[Token(Token = "0x400342D")]
			AbsolutePathOrURL,
			[Token(Token = "0x400342E")]
			RelativeToProjectFolder,
			[Token(Token = "0x400342F")]
			RelativeToStreamingAssetsFolder,
			[Token(Token = "0x4003430")]
			RelativeToDataFolder,
			[Token(Token = "0x4003431")]
			RelativeToPeristentDataFolder
		}

		[Serializable]
		[Token(Token = "0x20007FF")]
		public class PlatformOptions
		{
			[Token(Token = "0x4003432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool overridePath;

			[Token(Token = "0x4003433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FileLocation pathLocation;

			[Token(Token = "0x4003434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x60031A2")]
			[Address(RVA = "0xAF3F18", Offset = "0xAF3F18", VA = "0xAF3F18", Slot = "4")]
			public virtual bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60031A3")]
			[Address(RVA = "0xAF3F20", Offset = "0xAF3F20", VA = "0xAF3F20", Slot = "5")]
			public virtual string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x60031A4")]
			[Address(RVA = "0xAF3F28", Offset = "0xAF3F28", VA = "0xAF3F28", Slot = "6")]
			public virtual string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x60031A5")]
			[Address(RVA = "0xAF3F30", Offset = "0xAF3F30", VA = "0xAF3F30", Slot = "7")]
			public virtual string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x60031A6")]
			[Address(RVA = "0xAF3CD0", Offset = "0xAF3CD0", VA = "0xAF3CD0")]
			public PlatformOptions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000800")]
		public class OptionsWindows : PlatformOptions
		{
			[Token(Token = "0x4003435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Windows.VideoApi videoApi;

			[Token(Token = "0x4003436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4003437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool useUnityAudio;

			[Token(Token = "0x4003438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool forceAudioResample;

			[Token(Token = "0x4003439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			public bool useTextureMips;

			[Token(Token = "0x400343A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool hintAlphaChannel;

			[Token(Token = "0x400343B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool useLowLatency;

			[Token(Token = "0x400343C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string forceAudioOutputDeviceName;

			[Token(Token = "0x400343D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<string> preferredFilters;

			[Token(Token = "0x400343E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool enableAudio360;

			[Token(Token = "0x400343F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x60031A7")]
			[Address(RVA = "0xAF3DD8", Offset = "0xAF3DD8", VA = "0xAF3DD8", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60031A8")]
			[Address(RVA = "0xAF2A70", Offset = "0xAF2A70", VA = "0xAF2A70")]
			public OptionsWindows()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000801")]
		public class OptionsApple : PlatformOptions
		{
			[Token(Token = "0x4003440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Multiline]
			public string httpHeaderJson;

			[Token(Token = "0x4003441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string keyServerURLOverride;

			[Token(Token = "0x4003442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string keyServerAuthToken;

			[Token(Token = "0x4003443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[Multiline]
			public string base64EncodedKeyBlob;

			[Token(Token = "0x60031A9")]
			[Address(RVA = "0xAF3CE0", Offset = "0xAF3CE0", VA = "0xAF3CE0", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60031AA")]
			[Address(RVA = "0xAF3D50", Offset = "0xAF3D50", VA = "0xAF3D50", Slot = "5")]
			public override string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x60031AB")]
			[Address(RVA = "0xAF3D58", Offset = "0xAF3D58", VA = "0xAF3D58", Slot = "6")]
			public override string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x60031AC")]
			[Address(RVA = "0xAF3D60", Offset = "0xAF3D60", VA = "0xAF3D60", Slot = "7")]
			public override string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x60031AD")]
			[Address(RVA = "0xAF3D68", Offset = "0xAF3D68", VA = "0xAF3D68")]
			public OptionsApple()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000802")]
		public class OptionsMacOSX : OptionsApple
		{
			[Token(Token = "0x60031AE")]
			[Address(RVA = "0xAF2B0C", Offset = "0xAF2B0C", VA = "0xAF2B0C")]
			public OptionsMacOSX()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000803")]
		public class OptionsIOS : OptionsApple
		{
			[Token(Token = "0x4003444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool useYpCbCr420Textures;

			[Token(Token = "0x60031AF")]
			[Address(RVA = "0xAF3D78", Offset = "0xAF3D78", VA = "0xAF3D78", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60031B0")]
			[Address(RVA = "0xAF2B1C", Offset = "0xAF2B1C", VA = "0xAF2B1C")]
			public OptionsIOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000804")]
		public class OptionsTVOS : OptionsIOS
		{
			[Token(Token = "0x60031B1")]
			[Address(RVA = "0xAF2B34", Offset = "0xAF2B34", VA = "0xAF2B34")]
			public OptionsTVOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000805")]
		public class OptionsAndroid : PlatformOptions
		{
			[Token(Token = "0x4003445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Android.VideoApi videoApi;

			[Token(Token = "0x4003446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useFastOesPath;

			[Token(Token = "0x4003447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool showPosterFrame;

			[Token(Token = "0x4003448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool enableAudio360;

			[Token(Token = "0x4003449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x400344A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool preferSoftwareDecoder;

			[Token(Token = "0x400344B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[Multiline]
			public string httpHeaderJson;

			[Token(Token = "0x400344C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86CBF0", Offset = "0x86CBF0")]
			public int fileOffset;

			[Token(Token = "0x60031B2")]
			[Address(RVA = "0xAF3C54", Offset = "0xAF3C54", VA = "0xAF3C54", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60031B3")]
			[Address(RVA = "0xAF2B4C", Offset = "0xAF2B4C", VA = "0xAF2B4C")]
			public OptionsAndroid()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000806")]
		public class OptionsWindowsPhone : PlatformOptions
		{
			[Token(Token = "0x400344D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x400344E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x400344F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4003450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4003451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x60031B4")]
			[Address(RVA = "0xAF3E98", Offset = "0xAF3E98", VA = "0xAF3E98", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60031B5")]
			[Address(RVA = "0xAF2B60", Offset = "0xAF2B60", VA = "0xAF2B60")]
			public OptionsWindowsPhone()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000807")]
		public class OptionsWindowsUWP : PlatformOptions
		{
			[Token(Token = "0x4003452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4003453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4003454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4003455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4003456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x60031B6")]
			[Address(RVA = "0xAF3ED8", Offset = "0xAF3ED8", VA = "0xAF3ED8", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60031B7")]
			[Address(RVA = "0xAF2B7C", Offset = "0xAF2B7C", VA = "0xAF2B7C")]
			public OptionsWindowsUWP()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000808")]
		public class OptionsWebGL : PlatformOptions
		{
			[Token(Token = "0x4003457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WebGL.ExternalLibrary externalLibrary;

			[Token(Token = "0x4003458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useTextureMips;

			[Token(Token = "0x60031B8")]
			[Address(RVA = "0xAF3DB0", Offset = "0xAF3DB0", VA = "0xAF3DB0", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x60031B9")]
			[Address(RVA = "0xAF2B98", Offset = "0xAF2B98", VA = "0xAF2B98")]
			public OptionsWebGL()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000809")]
		public class OptionsPS4 : PlatformOptions
		{
			[Token(Token = "0x60031BA")]
			[Address(RVA = "0xAF2BA8", Offset = "0xAF2BA8", VA = "0xAF2BA8")]
			public OptionsPS4()
			{
			}
		}

		[Token(Token = "0x200080A")]
		public delegate void ProcessExtractedFrame(Texture2D extractedFrame);

		[Token(Token = "0x200080B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E668", Offset = "0x85E668")]
		private sealed class <LoadSubtitlesCoroutine>d__166 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400345A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400345B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x400345C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x400345D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FileLocation fileLocation;

			[Token(Token = "0x400345E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string filePath;

			[Token(Token = "0x400345F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000593")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031C2")]
				[Address(RVA = "0xAF3BE4", Offset = "0xAF3BE4", VA = "0xAF3BE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000594")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031C4")]
				[Address(RVA = "0xAF3C4C", Offset = "0xAF3C4C", VA = "0xAF3C4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031BF")]
			[Address(RVA = "0xAEDAEC", Offset = "0xAEDAEC", VA = "0xAEDAEC")]
			[DebuggerHidden]
			public <LoadSubtitlesCoroutine>d__166(int <>1__state)
			{
			}

			[Token(Token = "0x60031C0")]
			[Address(RVA = "0xAF3988", Offset = "0xAF3988", VA = "0xAF3988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031C1")]
			[Address(RVA = "0xAF398C", Offset = "0xAF398C", VA = "0xAF398C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031C3")]
			[Address(RVA = "0xAF3BEC", Offset = "0xAF3BEC", VA = "0xAF3BEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200080C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E678", Offset = "0x85E678")]
		private sealed class <FinalRenderCapture>d__188 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4003463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldInstruction <wait>5__2;

			[Token(Token = "0x17000595")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031C8")]
				[Address(RVA = "0xAF3918", Offset = "0xAF3918", VA = "0xAF3918", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000596")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031CA")]
				[Address(RVA = "0xAF3980", Offset = "0xAF3980", VA = "0xAF3980", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031C5")]
			[Address(RVA = "0xAF0BFC", Offset = "0xAF0BFC", VA = "0xAF0BFC")]
			[DebuggerHidden]
			public <FinalRenderCapture>d__188(int <>1__state)
			{
			}

			[Token(Token = "0x60031C6")]
			[Address(RVA = "0xAF37DC", Offset = "0xAF37DC", VA = "0xAF37DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031C7")]
			[Address(RVA = "0xAF37E0", Offset = "0xAF37E0", VA = "0xAF37E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031C9")]
			[Address(RVA = "0xAF3920", Offset = "0xAF3920", VA = "0xAF3920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200080D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E688", Offset = "0x85E688")]
		private sealed class <ExtractFrameCoroutine>d__208 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D target;

			[Token(Token = "0x4003467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4003468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeSeconds;

			[Token(Token = "0x4003469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool accurateSeek;

			[Token(Token = "0x400346A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProcessExtractedFrame callback;

			[Token(Token = "0x400346B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Texture2D <result>5__2;

			[Token(Token = "0x400346C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <currFc>5__3;

			[Token(Token = "0x400346D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <iterations>5__4;

			[Token(Token = "0x400346E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <maxIterations>5__5;

			[Token(Token = "0x17000597")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031CE")]
				[Address(RVA = "0xAF376C", Offset = "0xAF376C", VA = "0xAF376C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000598")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031D0")]
				[Address(RVA = "0xAF37D4", Offset = "0xAF37D4", VA = "0xAF37D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031CB")]
			[Address(RVA = "0xAF21C8", Offset = "0xAF21C8", VA = "0xAF21C8")]
			[DebuggerHidden]
			public <ExtractFrameCoroutine>d__208(int <>1__state)
			{
			}

			[Token(Token = "0x60031CC")]
			[Address(RVA = "0xAF2BBC", Offset = "0xAF2BBC", VA = "0xAF2BBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031CD")]
			[Address(RVA = "0xAF2BC0", Offset = "0xAF2BC0", VA = "0xAF2BC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031CF")]
			[Address(RVA = "0xAF3774", Offset = "0xAF3774", VA = "0xAF3774", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FileLocation m_VideoLocation;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_VideoPath;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_AutoOpen;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_AutoStart;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_Loop;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BBDC", Offset = "0x86BBDC")]
		public float m_Volume;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BBF4", Offset = "0x86BBF4")]
		private float m_Balance;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_Muted;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BC34", Offset = "0x86BC34")]
		public float m_PlaybackRate;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_Resample;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Resampler.ResampleMode m_ResampleMode;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BC74", Offset = "0x86BC74")]
		public int m_ResampleBufferSize;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Resampler m_Resampler;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_Persistent;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private VideoMapping m_videoMapping;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StereoPacking m_StereoPacking;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AlphaPacking m_AlphaPacking;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_DisplayDebugStereoColorTint;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode m_FilterMode;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextureWrapMode m_WrapMode;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BCAC", Offset = "0x86BCAC")]
		public int m_AnisoLevel;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_LoadSubtitles;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private FileLocation m_SubtitleLocation;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FileLocation m_queueSubtitleLocation;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string m_SubtitlePath;

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string m_queueSubtitlePath;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_loadSubtitlesRoutine;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform m_AudioHeadTransform;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool m_AudioFocusEnabled;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_AudioFocusTransform;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BD24", Offset = "0x86BD24")]
		private float m_AudioFocusWidthDegrees;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x86BD6C", Offset = "0x86BD6C")]
		private float m_AudioFocusOffLevelDB;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MediaPlayerEvent m_events;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private int m_eventMask;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private FileFormat m_forceFileFormat;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _pauseMediaOnAppPause;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[SerializeField]
		private bool _playMediaOnAppUnpause;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IMediaControl m_Control;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IMediaProducer m_Texture;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IMediaInfo m_Info;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IMediaPlayer m_Player;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IMediaSubtitles m_Subtitles;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private IDisposable m_Dispose;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_VideoOpened;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_AutoStartTriggered;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		private bool m_WasPlayingOnPause;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine _renderingCoroutine;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_GlobalStartup;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_EventFired_ReadyToPlay;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool m_EventFired_Started;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool m_EventFired_FirstFrameReady;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		private bool m_EventFired_FinishedPlaying;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool m_EventFired_MetaDataReady;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		private bool m_EventState_PlaybackStalled;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		private bool m_EventState_PlaybackBuffering;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x117")]
		private bool m_EventState_PlaybackSeeking;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_EventState_PreviousWidth;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_EventState_PreviousHeight;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_previousSubtitleIndex;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera m_DummyCamera;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool m_FinishedFrameOpenCheck;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private uint m_sourceSampleRate;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private uint m_sourceChannels;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private bool m_manuallySetAudioSourceProperties;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private OptionsWindows _optionsWindows;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private OptionsMacOSX _optionsMacOSX;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private OptionsIOS _optionsIOS;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private OptionsTVOS _optionsTVOS;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private OptionsAndroid _optionsAndroid;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private OptionsWindowsPhone _optionsWindowsPhone;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private OptionsWindowsUWP _optionsWindowsUWP;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private OptionsWebGL _optionsWebGL;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private OptionsPS4 _optionsPS4;

		[Token(Token = "0x1700031A")]
		public Resampler FrameResampler
		{
			[Token(Token = "0x60024C9")]
			[Address(RVA = "0xAEC568", Offset = "0xAEC568", VA = "0xAEC568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		public bool Persistent
		{
			[Token(Token = "0x60024CA")]
			[Address(RVA = "0xAEC570", Offset = "0xAEC570", VA = "0xAEC570")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024CB")]
			[Address(RVA = "0xAEC578", Offset = "0xAEC578", VA = "0xAEC578")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public VideoMapping VideoLayoutMapping
		{
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0xAEC584", Offset = "0xAEC584", VA = "0xAEC584")]
			get
			{
				return default(VideoMapping);
			}
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0xAEC58C", Offset = "0xAEC58C", VA = "0xAEC58C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public virtual IMediaInfo Info
		{
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0xAEC594", Offset = "0xAEC594", VA = "0xAEC594", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		public virtual IMediaControl Control
		{
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0xAEC59C", Offset = "0xAEC59C", VA = "0xAEC59C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		public virtual IMediaPlayer Player
		{
			[Token(Token = "0x60024D0")]
			[Address(RVA = "0xAEC5A4", Offset = "0xAEC5A4", VA = "0xAEC5A4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		public virtual IMediaProducer TextureProducer
		{
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0xAEC5AC", Offset = "0xAEC5AC", VA = "0xAEC5AC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		public virtual IMediaSubtitles Subtitles
		{
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xAEC5B4", Offset = "0xAEC5B4", VA = "0xAEC5B4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		public MediaPlayerEvent Events
		{
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0xAEC5BC", Offset = "0xAEC5BC", VA = "0xAEC5BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		public bool VideoOpened
		{
			[Token(Token = "0x60024D4")]
			[Address(RVA = "0xAEC6A0", Offset = "0xAEC6A0", VA = "0xAEC6A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000324")]
		public bool PauseMediaOnAppPause
		{
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0xAEC6A8", Offset = "0xAEC6A8", VA = "0xAEC6A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024D6")]
			[Address(RVA = "0xAEC6B0", Offset = "0xAEC6B0", VA = "0xAEC6B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public bool PlayMediaOnAppUnpause
		{
			[Token(Token = "0x60024D7")]
			[Address(RVA = "0xAEC6BC", Offset = "0xAEC6BC", VA = "0xAEC6BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0xAEC6C4", Offset = "0xAEC6C4", VA = "0xAEC6C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public FileFormat ForceFileFormat
		{
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0xAEC6D0", Offset = "0xAEC6D0", VA = "0xAEC6D0")]
			get
			{
				return default(FileFormat);
			}
			[Token(Token = "0x60024DA")]
			[Address(RVA = "0xAEC6D8", Offset = "0xAEC6D8", VA = "0xAEC6D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public Transform AudioHeadTransform
		{
			[Token(Token = "0x60024DC")]
			[Address(RVA = "0xAEC6E8", Offset = "0xAEC6E8", VA = "0xAEC6E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0xAEC6E0", Offset = "0xAEC6E0", VA = "0xAEC6E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public bool AudioFocusEnabled
		{
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0xAEC6F0", Offset = "0xAEC6F0", VA = "0xAEC6F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024DE")]
			[Address(RVA = "0xAEC6F8", Offset = "0xAEC6F8", VA = "0xAEC6F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public float AudioFocusOffLevelDB
		{
			[Token(Token = "0x60024DF")]
			[Address(RVA = "0xAEC704", Offset = "0xAEC704", VA = "0xAEC704")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024E0")]
			[Address(RVA = "0xAEC70C", Offset = "0xAEC70C", VA = "0xAEC70C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public float AudioFocusWidthDegrees
		{
			[Token(Token = "0x60024E1")]
			[Address(RVA = "0xAEC714", Offset = "0xAEC714", VA = "0xAEC714")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024E2")]
			[Address(RVA = "0xAEC71C", Offset = "0xAEC71C", VA = "0xAEC71C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public Transform AudioFocusTransform
		{
			[Token(Token = "0x60024E3")]
			[Address(RVA = "0xAEC724", Offset = "0xAEC724", VA = "0xAEC724")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024E4")]
			[Address(RVA = "0xAEC72C", Offset = "0xAEC72C", VA = "0xAEC72C")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		public OptionsWindows PlatformOptionsWindows
		{
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0xAEC734", Offset = "0xAEC734", VA = "0xAEC734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032D")]
		public OptionsMacOSX PlatformOptionsMacOSX
		{
			[Token(Token = "0x60024E6")]
			[Address(RVA = "0xAEC73C", Offset = "0xAEC73C", VA = "0xAEC73C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		public OptionsIOS PlatformOptionsIOS
		{
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0xAEC744", Offset = "0xAEC744", VA = "0xAEC744")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		public OptionsTVOS PlatformOptionsTVOS
		{
			[Token(Token = "0x60024E8")]
			[Address(RVA = "0xAEC74C", Offset = "0xAEC74C", VA = "0xAEC74C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		public OptionsAndroid PlatformOptionsAndroid
		{
			[Token(Token = "0x60024E9")]
			[Address(RVA = "0xAEC754", Offset = "0xAEC754", VA = "0xAEC754")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		public OptionsWindowsPhone PlatformOptionsWindowsPhone
		{
			[Token(Token = "0x60024EA")]
			[Address(RVA = "0xAEC75C", Offset = "0xAEC75C", VA = "0xAEC75C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		public OptionsWindowsUWP PlatformOptionsWindowsUWP
		{
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xAEC764", Offset = "0xAEC764", VA = "0xAEC764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		public OptionsWebGL PlatformOptionsWebGL
		{
			[Token(Token = "0x60024EC")]
			[Address(RVA = "0xAEC76C", Offset = "0xAEC76C", VA = "0xAEC76C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		public OptionsPS4 PlatformOptionsPS4
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xAEC774", Offset = "0xAEC774", VA = "0xAEC774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		public bool SubtitlesEnabled
		{
			[Token(Token = "0x60024F6")]
			[Address(RVA = "0xAED984", Offset = "0xAED984", VA = "0xAED984")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000336")]
		public string SubtitlePath
		{
			[Token(Token = "0x60024F7")]
			[Address(RVA = "0xAED98C", Offset = "0xAED98C", VA = "0xAED98C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		public FileLocation SubtitleLocation
		{
			[Token(Token = "0x60024F8")]
			[Address(RVA = "0xAED994", Offset = "0xAED994", VA = "0xAED994")]
			get
			{
				return default(FileLocation);
			}
		}

		[Token(Token = "0x60024EE")]
		[Address(RVA = "0xAEC77C", Offset = "0xAEC77C", VA = "0xAEC77C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0xAEC80C", Offset = "0xAEC80C", VA = "0xAEC80C")]
		protected void Initialise()
		{
		}

		[Token(Token = "0x60024F0")]
		[Address(RVA = "0xAECAAC", Offset = "0xAECAAC", VA = "0xAECAAC")]
		private void Start()
		{
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0xAED298", Offset = "0xAED298", VA = "0xAED298")]
		public bool OpenVideoFromFile(FileLocation location, string path, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0xAED2DC", Offset = "0xAED2DC", VA = "0xAED2DC")]
		public bool OpenVideoFromBuffer(byte[] buffer, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0xAED534", Offset = "0xAED534", VA = "0xAED534")]
		public bool StartOpenChunkedVideoFromBuffer(ulong length, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xAED784", Offset = "0xAED784", VA = "0xAED784")]
		public bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xAED89C", Offset = "0xAED89C", VA = "0xAED89C")]
		public bool EndOpenChunkedVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xAECED4", Offset = "0xAECED4", VA = "0xAECED4")]
		public bool EnableSubtitles(FileLocation fileLocation, string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0xAEDA58", Offset = "0xAEDA58", VA = "0xAEDA58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876B80", Offset = "0x876B80")]
		private IEnumerator LoadSubtitlesCoroutine(string url, FileLocation fileLocation, string filePath)
		{
			return null;
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0xAEDB18", Offset = "0xAEDB18", VA = "0xAEDB18")]
		public void DisableSubtitles()
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0xAED360", Offset = "0xAED360", VA = "0xAED360")]
		private bool OpenVideoFromBufferInternal(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0xAED5B8", Offset = "0xAED5B8", VA = "0xAED5B8")]
		private bool StartOpenVideoFromBufferInternal(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xAED788", Offset = "0xAED788", VA = "0xAED788")]
		private bool AddChunkToBufferInternal(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xAED8A0", Offset = "0xAED8A0", VA = "0xAED8A0")]
		private bool EndOpenVideoFromBufferInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xAECB30", Offset = "0xAECB30", VA = "0xAECB30")]
		private bool OpenVideoFromFile()
		{
			return default(bool);
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xAEDD80", Offset = "0xAEDD80", VA = "0xAEDD80")]
		private void SetPlaybackOptions()
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0xAEDC24", Offset = "0xAEDC24", VA = "0xAEDC24")]
		public void CloseVideo()
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0xAEE398", Offset = "0xAEE398", VA = "0xAEE398")]
		public void Play()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0xAEE4E0", Offset = "0xAEE4E0", VA = "0xAEE4E0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0xAEE614", Offset = "0xAEE614", VA = "0xAEE614")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0xAEE6D0", Offset = "0xAEE6D0", VA = "0xAEE6D0")]
		public void Rewind(bool pause)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0xAEE7B4", Offset = "0xAEE7B4", VA = "0xAEE7B4", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0xAEF5E8", Offset = "0xAEF5E8", VA = "0xAEF5E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0xAEF5EC", Offset = "0xAEF5EC", VA = "0xAEF5EC")]
		private void UpdateResampler()
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0xAF06F0", Offset = "0xAF06F0", VA = "0xAF06F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0xAF07C4", Offset = "0xAF07C4", VA = "0xAF07C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0xAF08A4", Offset = "0xAF08A4", VA = "0xAF08A4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0xAF0A34", Offset = "0xAF0A34", VA = "0xAF0A34")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0xAED258", Offset = "0xAED258", VA = "0xAED258")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0xAEE368", Offset = "0xAEE368", VA = "0xAEE368")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xAF0B8C", Offset = "0xAF0B8C", VA = "0xAF0B8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876BE4", Offset = "0x876BE4")]
		private IEnumerator FinalRenderCapture()
		{
			return null;
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xAED99C", Offset = "0xAED99C", VA = "0xAED99C")]
		public static Platform GetPlatform()
		{
			return default(Platform);
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xAF0C28", Offset = "0xAF0C28", VA = "0xAF0C28")]
		public PlatformOptions GetCurrentPlatformOptions()
		{
			return null;
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0xAF0C30", Offset = "0xAF0C30", VA = "0xAF0C30")]
		public static string GetPath(FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xAF0D48", Offset = "0xAF0D48", VA = "0xAF0D48")]
		public static string GetFilePath(string path, FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xAEE258", Offset = "0xAEE258", VA = "0xAEE258")]
		private long GetPlatformFileOffset()
		{
			return default(long);
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xAEE274", Offset = "0xAEE274", VA = "0xAEE274")]
		private string GetPlatformHttpHeaderJson()
		{
			return null;
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xAED9A4", Offset = "0xAED9A4", VA = "0xAED9A4")]
		private string GetPlatformFilePath(Platform platform, ref string filePath, ref FileLocation fileLocation)
		{
			return null;
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0xAF0E3C", Offset = "0xAF0E3C", VA = "0xAF0E3C", Slot = "11")]
		public virtual BaseMediaPlayer CreatePlatformMediaPlayer()
		{
			return null;
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xAF10CC", Offset = "0xAF10CC", VA = "0xAF10CC")]
		private bool ForceWaitForNewFrame(int lastFrameCount, float timeoutMs)
		{
			return default(bool);
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xAEEBA8", Offset = "0xAEEBA8", VA = "0xAEEBA8")]
		private void UpdateAudioFocus()
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xAEE9FC", Offset = "0xAEE9FC", VA = "0xAEE9FC")]
		private void UpdateAudioHeadTransform()
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xAEEDF8", Offset = "0xAEEDF8", VA = "0xAEEDF8")]
		private void UpdateErrors()
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xAEEF5C", Offset = "0xAEEF5C", VA = "0xAEEF5C")]
		private void UpdateEvents()
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xAEE33C", Offset = "0xAEE33C", VA = "0xAEE33C")]
		protected bool IsHandleEvent(MediaPlayerEvent.EventType eventType)
		{
			return default(bool);
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0xAF1348", Offset = "0xAF1348", VA = "0xAF1348")]
		private bool FireEventIfPossible(MediaPlayerEvent.EventType eventType, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xAF13DC", Offset = "0xAF13DC", VA = "0xAF13DC")]
		private bool CanFireEvent(MediaPlayerEvent.EventType et, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xAF1C34", Offset = "0xAF1C34", VA = "0xAF1C34")]
		private void OnApplicationFocus(bool focusStatus)
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xAF1D24", Offset = "0xAF1D24", VA = "0xAF1D24")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xAF1EAC", Offset = "0xAF1EAC", VA = "0xAF1EAC")]
		private static Camera GetDummyCamera()
		{
			return null;
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xAF2120", Offset = "0xAF2120", VA = "0xAF2120")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876C48", Offset = "0x876C48")]
		private IEnumerator ExtractFrameCoroutine(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000)
		{
			return null;
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xAF21F4", Offset = "0xAF21F4", VA = "0xAF21F4")]
		public void ExtractFrameAsync(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000)
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xAF2224", Offset = "0xAF2224", VA = "0xAF2224")]
		public Texture2D ExtractFrame(Texture2D target, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000)
		{
			return null;
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xAF241C", Offset = "0xAF241C", VA = "0xAF241C")]
		private Texture ExtractFrame(float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000)
		{
			return null;
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xAF287C", Offset = "0xAF287C", VA = "0xAF287C")]
		public MediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F2")]
	public class MediaPlaylist
	{
		[Serializable]
		[Token(Token = "0x200080E")]
		public class MediaItem
		{
			[Token(Token = "0x400346F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public MediaPlayer.FileLocation fileLocation;

			[Token(Token = "0x4003470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public string filePath;

			[Token(Token = "0x4003471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public bool loop;

			[Token(Token = "0x4003472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			public PlaylistMediaPlayer.StartMode startMode;

			[Token(Token = "0x4003473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public PlaylistMediaPlayer.ProgressMode progressMode;

			[Token(Token = "0x4003474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			public float progressTimeSeconds;

			[Token(Token = "0x4003475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public bool autoPlay;

			[Token(Token = "0x4003476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			public StereoPacking stereoPacking;

			[Token(Token = "0x4003477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public AlphaPacking alphaPacking;

			[Token(Token = "0x4003478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			public bool isOverrideTransition;

			[Token(Token = "0x4003479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public PlaylistMediaPlayer.Transition overrideTransition;

			[Token(Token = "0x400347A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			public float overrideTransitionDuration;

			[Token(Token = "0x400347B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public PlaylistMediaPlayer.Easing overrideTransitionEasing;

			[Token(Token = "0x60031D1")]
			[Address(RVA = "0xAF41CC", Offset = "0xAF41CC", VA = "0xAF41CC")]
			public MediaItem()
			{
			}
		}

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<MediaItem> _items;

		[Token(Token = "0x17000338")]
		public List<MediaItem> Items
		{
			[Token(Token = "0x600252A")]
			[Address(RVA = "0xAF40E0", Offset = "0xAF40E0", VA = "0xAF40E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xAF40E8", Offset = "0xAF40E8", VA = "0xAF40E8")]
		public bool HasItemAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xAF4158", Offset = "0xAF4158", VA = "0xAF4158")]
		public MediaPlaylist()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85CD48", Offset = "0x85CD48")]
	public class PlaylistMediaPlayer : MediaPlayer, IMediaProducer
	{
		[Token(Token = "0x200080F")]
		public enum Transition
		{
			[Token(Token = "0x400347D")]
			None,
			[Token(Token = "0x400347E")]
			Fade,
			[Token(Token = "0x400347F")]
			Black,
			[Token(Token = "0x4003480")]
			White,
			[Token(Token = "0x4003481")]
			Transparent,
			[Token(Token = "0x4003482")]
			Horiz,
			[Token(Token = "0x4003483")]
			Vert,
			[Token(Token = "0x4003484")]
			Diag,
			[Token(Token = "0x4003485")]
			MirrorH,
			[Token(Token = "0x4003486")]
			MirrorV,
			[Token(Token = "0x4003487")]
			MirrorD,
			[Token(Token = "0x4003488")]
			ScrollV,
			[Token(Token = "0x4003489")]
			ScrollH,
			[Token(Token = "0x400348A")]
			Circle,
			[Token(Token = "0x400348B")]
			Diamond,
			[Token(Token = "0x400348C")]
			Blinds,
			[Token(Token = "0x400348D")]
			Arrows,
			[Token(Token = "0x400348E")]
			SlideH,
			[Token(Token = "0x400348F")]
			SlideV,
			[Token(Token = "0x4003490")]
			Zoom,
			[Token(Token = "0x4003491")]
			RectV,
			[Token(Token = "0x4003492")]
			Random
		}

		[Token(Token = "0x2000810")]
		public enum PlaylistLoopMode
		{
			[Token(Token = "0x4003494")]
			None,
			[Token(Token = "0x4003495")]
			Loop
		}

		[Token(Token = "0x2000811")]
		public enum StartMode
		{
			[Token(Token = "0x4003497")]
			Immediate,
			[Token(Token = "0x4003498")]
			Manual
		}

		[Token(Token = "0x2000812")]
		public enum ProgressMode
		{
			[Token(Token = "0x400349A")]
			OnFinish,
			[Token(Token = "0x400349B")]
			BeforeFinish,
			[Token(Token = "0x400349C")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x2000813")]
		public class Easing
		{
			[Token(Token = "0x2000838")]
			public enum Preset
			{
				[Token(Token = "0x40034FF")]
				Step,
				[Token(Token = "0x4003500")]
				Linear,
				[Token(Token = "0x4003501")]
				InQuad,
				[Token(Token = "0x4003502")]
				OutQuad,
				[Token(Token = "0x4003503")]
				InOutQuad,
				[Token(Token = "0x4003504")]
				InCubic,
				[Token(Token = "0x4003505")]
				OutCubic,
				[Token(Token = "0x4003506")]
				InOutCubic,
				[Token(Token = "0x4003507")]
				InQuint,
				[Token(Token = "0x4003508")]
				OutQuint,
				[Token(Token = "0x4003509")]
				InOutQuint,
				[Token(Token = "0x400350A")]
				InQuart,
				[Token(Token = "0x400350B")]
				OutQuart,
				[Token(Token = "0x400350C")]
				InOutQuart,
				[Token(Token = "0x400350D")]
				InExpo,
				[Token(Token = "0x400350E")]
				OutExpo,
				[Token(Token = "0x400350F")]
				InOutExpo,
				[Token(Token = "0x4003510")]
				Random,
				[Token(Token = "0x4003511")]
				RandomNotStep
			}

			[Token(Token = "0x400349D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Preset preset;

			[Token(Token = "0x60031D2")]
			[Address(RVA = "0xAF5104", Offset = "0xAF5104", VA = "0xAF5104")]
			public static Func<float, float> GetFunction(Preset preset)
			{
				return null;
			}

			[Token(Token = "0x60031D3")]
			[Address(RVA = "0xAF67C0", Offset = "0xAF67C0", VA = "0xAF67C0")]
			public static float PowerEaseIn(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x60031D4")]
			[Address(RVA = "0xAF6834", Offset = "0xAF6834", VA = "0xAF6834")]
			public static float PowerEaseOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x60031D5")]
			[Address(RVA = "0xAF68BC", Offset = "0xAF68BC", VA = "0xAF68BC")]
			public static float PowerEaseInOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x60031D6")]
			[Address(RVA = "0xAF6904", Offset = "0xAF6904", VA = "0xAF6904")]
			public static float Step(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031D7")]
			[Address(RVA = "0xAF691C", Offset = "0xAF691C", VA = "0xAF691C")]
			public static float Linear(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031D8")]
			[Address(RVA = "0xAF6920", Offset = "0xAF6920", VA = "0xAF6920")]
			public static float InQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031D9")]
			[Address(RVA = "0xAF6928", Offset = "0xAF6928", VA = "0xAF6928")]
			public static float OutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031DA")]
			[Address(RVA = "0xAF6930", Offset = "0xAF6930", VA = "0xAF6930")]
			public static float InOutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031DB")]
			[Address(RVA = "0xAF6938", Offset = "0xAF6938", VA = "0xAF6938")]
			public static float InCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031DC")]
			[Address(RVA = "0xAF6940", Offset = "0xAF6940", VA = "0xAF6940")]
			public static float OutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031DD")]
			[Address(RVA = "0xAF6948", Offset = "0xAF6948", VA = "0xAF6948")]
			public static float InOutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031DE")]
			[Address(RVA = "0xAF6950", Offset = "0xAF6950", VA = "0xAF6950")]
			public static float InQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031DF")]
			[Address(RVA = "0xAF6958", Offset = "0xAF6958", VA = "0xAF6958")]
			public static float OutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031E0")]
			[Address(RVA = "0xAF6960", Offset = "0xAF6960", VA = "0xAF6960")]
			public static float InOutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031E1")]
			[Address(RVA = "0xAF6968", Offset = "0xAF6968", VA = "0xAF6968")]
			public static float InQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031E2")]
			[Address(RVA = "0xAF6970", Offset = "0xAF6970", VA = "0xAF6970")]
			public static float OutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031E3")]
			[Address(RVA = "0xAF6978", Offset = "0xAF6978", VA = "0xAF6978")]
			public static float InOutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031E4")]
			[Address(RVA = "0xAF6980", Offset = "0xAF6980", VA = "0xAF6980")]
			public static float InExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031E5")]
			[Address(RVA = "0xAF6A14", Offset = "0xAF6A14", VA = "0xAF6A14")]
			public static float OutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031E6")]
			[Address(RVA = "0xAF6A9C", Offset = "0xAF6A9C", VA = "0xAF6A9C")]
			public static float InOutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x60031E7")]
			[Address(RVA = "0xAF6B80", Offset = "0xAF6B80", VA = "0xAF6B80")]
			public Easing()
			{
			}
		}

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private MediaPlayer _playerA;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private MediaPlayer _playerB;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private bool _playlistAutoProgress;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private PlaylistLoopMode _playlistLoopMode;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private MediaPlaylist _playlist;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86BF1C", Offset = "0x86BF1C")]
		private bool _pausePreviousOnTransition;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		private Transition _nextTransition;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private float _transitionDuration;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Easing _transitionEasing;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propFromTex;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propT;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private int _playlistIndex;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private MediaPlayer _nextPlayer;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Shader _shader;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Material _material;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Transition _currentTransition;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private string _currentTransitionName;

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float _currentTransitionDuration;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Easing.Preset _currentTransitionEasing;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float _textureTimer;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float _transitionTimer;

		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Func<float, float> _easeFunc;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private RenderTexture _rt;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private MediaPlaylist.MediaItem _currentItem;

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private MediaPlaylist.MediaItem _nextItem;

		[Token(Token = "0x17000339")]
		public MediaPlayer CurrentPlayer
		{
			[Token(Token = "0x600252D")]
			[Address(RVA = "0xAF4724", Offset = "0xAF4724", VA = "0xAF4724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public MediaPlayer NextPlayer
		{
			[Token(Token = "0x600252E")]
			[Address(RVA = "0xAF47B8", Offset = "0xAF47B8", VA = "0xAF47B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public MediaPlaylist Playlist
		{
			[Token(Token = "0x600252F")]
			[Address(RVA = "0xAF47C0", Offset = "0xAF47C0", VA = "0xAF47C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public int PlaylistIndex
		{
			[Token(Token = "0x6002530")]
			[Address(RVA = "0xAF47C8", Offset = "0xAF47C8", VA = "0xAF47C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033D")]
		public MediaPlaylist.MediaItem PlaylistItem
		{
			[Token(Token = "0x6002531")]
			[Address(RVA = "0xAF47D0", Offset = "0xAF47D0", VA = "0xAF47D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		public PlaylistLoopMode LoopMode
		{
			[Token(Token = "0x6002532")]
			[Address(RVA = "0xAF4864", Offset = "0xAF4864", VA = "0xAF4864")]
			get
			{
				return default(PlaylistLoopMode);
			}
			[Token(Token = "0x6002533")]
			[Address(RVA = "0xAF486C", Offset = "0xAF486C", VA = "0xAF486C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public bool AutoProgress
		{
			[Token(Token = "0x6002534")]
			[Address(RVA = "0xAF4874", Offset = "0xAF4874", VA = "0xAF4874")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002535")]
			[Address(RVA = "0xAF487C", Offset = "0xAF487C", VA = "0xAF487C")]
			set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public override IMediaInfo Info
		{
			[Token(Token = "0x6002536")]
			[Address(RVA = "0xAF4888", Offset = "0xAF4888", VA = "0xAF4888", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000341")]
		public override IMediaControl Control
		{
			[Token(Token = "0x6002537")]
			[Address(RVA = "0xAF4934", Offset = "0xAF4934", VA = "0xAF4934", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		public override IMediaProducer TextureProducer
		{
			[Token(Token = "0x6002538")]
			[Address(RVA = "0xAF49E0", Offset = "0xAF49E0", VA = "0xAF49E0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xAF4B3C", Offset = "0xAF4B3C", VA = "0xAF4B3C")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xAF4E98", Offset = "0xAF4E98", VA = "0xAF4E98")]
		private Texture GetCurrentTexture()
		{
			return null;
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xAF4FD8", Offset = "0xAF4FD8", VA = "0xAF4FD8")]
		private Texture GetNextTexture()
		{
			return null;
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xAF5394", Offset = "0xAF5394", VA = "0xAF5394")]
		private void Awake()
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xAF5484", Offset = "0xAF5484", VA = "0xAF5484", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xAF5574", Offset = "0xAF5574", VA = "0xAF5574")]
		private void Start()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xAF57C8", Offset = "0xAF57C8", VA = "0xAF57C8")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xAF5A08", Offset = "0xAF5A08", VA = "0xAF5A08")]
		public bool PrevItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xAF5980", Offset = "0xAF5980", VA = "0xAF5980")]
		public bool NextItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xAF5A14", Offset = "0xAF5A14", VA = "0xAF5A14")]
		public bool CanJumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xAF56E0", Offset = "0xAF56E0", VA = "0xAF56E0")]
		public bool JumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xAF5AA8", Offset = "0xAF5AA8", VA = "0xAF5AA8")]
		public void OpenVideoFile(MediaPlaylist.MediaItem mediaItem)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xAF4AA0", Offset = "0xAF4AA0", VA = "0xAF4AA0")]
		private bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xAF5C58", Offset = "0xAF5C58", VA = "0xAF5C58")]
		private void SetTransition(Transition transition, float duration, Easing.Preset easing)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xAF5D78", Offset = "0xAF5D78", VA = "0xAF5D78", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xAF6234", Offset = "0xAF6234", VA = "0xAF6234", Slot = "13")]
		public Texture GetTexture(int index = 0)
		{
			return null;
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xAF623C", Offset = "0xAF623C", VA = "0xAF623C", Slot = "12")]
		public int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xAF6304", Offset = "0xAF6304", VA = "0xAF6304", Slot = "14")]
		public int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0xAF63D0", Offset = "0xAF63D0", VA = "0xAF63D0", Slot = "15")]
		public bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0xAF649C", Offset = "0xAF649C", VA = "0xAF649C", Slot = "16")]
		public long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0xAF6568", Offset = "0xAF6568", VA = "0xAF6568", Slot = "17")]
		public bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0xAF6634", Offset = "0xAF6634", VA = "0xAF6634", Slot = "18")]
		public Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0xAF5D0C", Offset = "0xAF5D0C", VA = "0xAF5D0C")]
		private static string GetTransitionName(Transition transition)
		{
			return null;
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xAF6710", Offset = "0xAF6710", VA = "0xAF6710")]
		public PlaylistMediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F4")]
	public class StreamParserEvent : UnityEvent<StreamParser, StreamParserEvent.EventType>
	{
		[Token(Token = "0x2000814")]
		public enum EventType
		{
			[Token(Token = "0x400349F")]
			Success,
			[Token(Token = "0x40034A0")]
			Failed
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xAF8930", Offset = "0xAF8930", VA = "0xAF8930")]
		public StreamParserEvent()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class StreamParser : MonoBehaviour
	{
		[Token(Token = "0x2000815")]
		public enum StreamType
		{
			[Token(Token = "0x40034A2")]
			HLS
		}

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _url;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreamType _streamType;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _autoLoad;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream _parser;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _loaded;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Stream> _substreams;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Stream.Chunk> _chunks;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StreamParserEvent _events;

		[Token(Token = "0x17000343")]
		public StreamParserEvent Events
		{
			[Token(Token = "0x6002552")]
			[Address(RVA = "0xAF88C8", Offset = "0xAF88C8", VA = "0xAF88C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		public bool Loaded
		{
			[Token(Token = "0x6002554")]
			[Address(RVA = "0xAF8BEC", Offset = "0xAF8BEC", VA = "0xAF8BEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000345")]
		public Stream Root
		{
			[Token(Token = "0x6002555")]
			[Address(RVA = "0xAF8BF4", Offset = "0xAF8BF4", VA = "0xAF8BF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		public List<Stream> SubStreams
		{
			[Token(Token = "0x6002556")]
			[Address(RVA = "0xAF8C0C", Offset = "0xAF8C0C", VA = "0xAF8C0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		public List<Stream.Chunk> Chunks
		{
			[Token(Token = "0x6002557")]
			[Address(RVA = "0xAF8C24", Offset = "0xAF8C24", VA = "0xAF8C24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xAF8980", Offset = "0xAF8980", VA = "0xAF8980")]
		private void LoadFile()
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xAF8C3C", Offset = "0xAF8C3C", VA = "0xAF8C3C")]
		public void ParseStream()
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xAF8CD8", Offset = "0xAF8CD8", VA = "0xAF8CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xAF8CE8", Offset = "0xAF8CE8", VA = "0xAF8CE8")]
		public StreamParser()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85CD84", Offset = "0x85CD84")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85CD84", Offset = "0x85CD84")]
	public class SubtitlesUGUI : MonoBehaviour
	{
		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xAF8D50", Offset = "0xAF8D50", VA = "0xAF8D50")]
		private void Start()
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xAF8ECC", Offset = "0xAF8ECC", VA = "0xAF8ECC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xAF8D58", Offset = "0xAF8D58", VA = "0xAF8D58")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xAF8ED4", Offset = "0xAF8ED4", VA = "0xAF8ED4")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xAF9078", Offset = "0xAF9078", VA = "0xAF9078")]
		public SubtitlesUGUI()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x85CDE8", Offset = "0x85CDE8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x85CDE8", Offset = "0x85CDE8")]
	public class UpdateStereoMaterial : MonoBehaviour
	{
		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86BFB8", Offset = "0x86BFB8")]
		public Camera _camera;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86BFF0", Offset = "0x86BFF0")]
		public MeshRenderer _renderer;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Graphic _uGuiComponent;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material _material;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StereoEye _forceEyeMode;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _cameraPositionId;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _viewMatrixId;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private StereoEye _setForceEyeMode;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera _foundCamera;

		[Token(Token = "0x17000348")]
		public StereoEye ForceEyeMode
		{
			[Token(Token = "0x6002560")]
			[Address(RVA = "0xAF9080", Offset = "0xAF9080", VA = "0xAF9080")]
			get
			{
				return default(StereoEye);
			}
			[Token(Token = "0x6002561")]
			[Address(RVA = "0xAF9088", Offset = "0xAF9088", VA = "0xAF9088")]
			set
			{
			}
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xAF9090", Offset = "0xAF9090", VA = "0xAF9090")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xAF91AC", Offset = "0xAF91AC", VA = "0xAF91AC")]
		private void SetupMaterial(Material m, Camera camera)
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xAF932C", Offset = "0xAF932C", VA = "0xAF932C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xAF96C4", Offset = "0xAF96C4", VA = "0xAF96C4")]
		public UpdateStereoMaterial()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class AndroidMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x2000816")]
		private struct Native
		{
			[Token(Token = "0x2000839")]
			public enum AVPPluginEvent
			{
				[Token(Token = "0x4003513")]
				Nop,
				[Token(Token = "0x4003514")]
				PlayerSetup,
				[Token(Token = "0x4003515")]
				PlayerUpdate,
				[Token(Token = "0x4003516")]
				PlayerDestroy,
				[Token(Token = "0x4003517")]
				ExtractFrame
			}

			[PreserveSig]
			[Token(Token = "0x60031E8")]
			[Address(RVA = "0xFD3B9C", Offset = "0xFD3B9C", VA = "0xFD3B9C")]
			public static extern IntPtr GetRenderEventFunc();

			[PreserveSig]
			[Token(Token = "0x60031E9")]
			[Address(RVA = "0xFD87D4", Offset = "0xFD87D4", VA = "0xFD87D4")]
			public static extern int _GetWidth(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60031EA")]
			[Address(RVA = "0xFD8854", Offset = "0xFD8854", VA = "0xFD8854")]
			public static extern int _GetHeight(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60031EB")]
			[Address(RVA = "0xFD88D0", Offset = "0xFD88D0", VA = "0xFD88D0")]
			public static extern int _GetTextureHandle(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60031EC")]
			[Address(RVA = "0xFD8E44", Offset = "0xFD8E44", VA = "0xFD8E44")]
			public static extern long _GetDuration(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60031ED")]
			[Address(RVA = "0xFD8DC4", Offset = "0xFD8DC4", VA = "0xFD8DC4")]
			public static extern int _GetLastErrorCode(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60031EE")]
			[Address(RVA = "0xFD740C", Offset = "0xFD740C", VA = "0xFD740C")]
			public static extern int _GetFrameCount(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60031EF")]
			[Address(RVA = "0xFD6C8C", Offset = "0xFD6C8C", VA = "0xFD6C8C")]
			public static extern float _GetVideoDisplayRate(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x60031F0")]
			[Address(RVA = "0xFD5330", Offset = "0xFD5330", VA = "0xFD5330")]
			public static extern bool _CanPlay(int iPlayerIndex);
		}

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject s_ActivityContext;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static AndroidJavaObject s_Interface;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static bool s_bInitialised;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string s_Version;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IntPtr _nativeFunction_RenderEvent;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected AndroidJavaObject m_Video;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture2D m_Texture;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_TextureHandle;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_UseFastOesPath;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_DurationMs;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_Width;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_Height;

		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int m_iPlayerIndex;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Android.VideoApi m_API;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool m_HeadRotationEnabled;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool m_FocusEnabled;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IntPtr m_Method_Update;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IntPtr m_Method_SetHeadRotation;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IntPtr m_Method_GetCurrentTimeMs;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IntPtr m_Method_GetSourceVideoFrameRate;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IntPtr m_Method_IsPlaying;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IntPtr m_Method_IsPaused;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IntPtr m_Method_IsFinished;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IntPtr m_Method_IsSeeking;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IntPtr m_Method_IsBuffering;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IntPtr m_Method_IsLooping;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IntPtr m_Method_HasVideo;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IntPtr m_Method_HasAudio;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IntPtr m_Method_SetFocusProps;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IntPtr m_Method_SetFocusEnabled;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IntPtr m_Method_SetFocusRotation;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private jvalue[] m_Value0;

		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private jvalue[] m_Value1;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private jvalue[] m_Value2;

		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private jvalue[] m_Value4;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int _textureQuality;

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xFD37F0", Offset = "0xFD37F0", VA = "0xFD37F0")]
		public static bool InitialisePlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0xFD3C10", Offset = "0xFD3C10", VA = "0xFD3C10")]
		public static void DeinitPlatform()
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xFD3DAC", Offset = "0xFD3DAC", VA = "0xFD3DAC")]
		private static void IssuePluginEvent(Native.AVPPluginEvent type, int param)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xFD3E4C", Offset = "0xFD3E4C", VA = "0xFD3E4C")]
		private IntPtr GetMethod(string methodName, string signature)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xFD3F94", Offset = "0xFD3F94", VA = "0xFD3F94")]
		public AndroidMediaPlayer(bool useFastOesPath, bool showPosterFrame, Android.VideoApi api, bool enable360Audio, Audio360ChannelMode channelMode, bool preferSoftware)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xFD4630", Offset = "0xFD4630", VA = "0xFD4630")]
		public void SetOptions(bool useFastOesPath, bool showPosterFrame)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xFD4770", Offset = "0xFD4770", VA = "0xFD4770", Slot = "173")]
		public override long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xFD48B0", Offset = "0xFD48B0", VA = "0xFD48B0", Slot = "97")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xFD4918", Offset = "0xFD4918", VA = "0xFD4918", Slot = "98")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xFD4AF8", Offset = "0xFD4AF8", VA = "0xFD4AF8", Slot = "117")]
		public override TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xFD4C58", Offset = "0xFD4C58", VA = "0xFD4C58", Slot = "103")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xFD4DD0", Offset = "0xFD4DD0", VA = "0xFD4DD0", Slot = "104")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xFD4EBC", Offset = "0xFD4EBC", VA = "0xFD4EBC", Slot = "105")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xFD5014", Offset = "0xFD5014", VA = "0xFD5014", Slot = "126")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0xFD516C", Offset = "0xFD516C", VA = "0xFD516C", Slot = "125")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0xFD52C4", Offset = "0xFD52C4", VA = "0xFD52C4", Slot = "106")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xFD5328", Offset = "0xFD5328", VA = "0xFD5328", Slot = "107")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xFD53B8", Offset = "0xFD53B8", VA = "0xFD53B8", Slot = "108")]
		public override void Play()
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xFD54B8", Offset = "0xFD54B8", VA = "0xFD54B8", Slot = "109")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xFD55B8", Offset = "0xFD55B8", VA = "0xFD55B8", Slot = "110")]
		public override void Stop()
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xFD56B8", Offset = "0xFD56B8", VA = "0xFD56B8", Slot = "112")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xFD57E4", Offset = "0xFD57E4", VA = "0xFD57E4", Slot = "113")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xFD5910", Offset = "0xFD5910", VA = "0xFD5910", Slot = "115")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xFD5A5C", Offset = "0xFD5A5C", VA = "0xFD5A5C", Slot = "119")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xFD5B54", Offset = "0xFD5B54", VA = "0xFD5B54", Slot = "118")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xFD5C60", Offset = "0xFD5C60", VA = "0xFD5C60", Slot = "159")]
		public override void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xFD5F48", Offset = "0xFD5F48", VA = "0xFD5F48", Slot = "160")]
		public override void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xFD6040", Offset = "0xFD6040", VA = "0xFD6040", Slot = "162")]
		public override void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xFD61A0", Offset = "0xFD61A0", VA = "0xFD61A0", Slot = "163")]
		public override void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xFD635C", Offset = "0xFD635C", VA = "0xFD635C", Slot = "164")]
		public override void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xFD65D4", Offset = "0xFD65D4", VA = "0xFD65D4", Slot = "165")]
		public override void ResetAudioFocus()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xFD6A04", Offset = "0xFD6A04", VA = "0xFD6A04", Slot = "120")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xFD6A0C", Offset = "0xFD6A0C", VA = "0xFD6A0C", Slot = "121")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xFD6A14", Offset = "0xFD6A14", VA = "0xFD6A14", Slot = "122")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xFD6A1C", Offset = "0xFD6A1C", VA = "0xFD6A1C", Slot = "172")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xFD6B74", Offset = "0xFD6B74", VA = "0xFD6B74", Slot = "174")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xFD6C84", Offset = "0xFD6C84", VA = "0xFD6C84", Slot = "124")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0xFD6D0C", Offset = "0xFD6D0C", VA = "0xFD6D0C", Slot = "127")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0xFD6E64", Offset = "0xFD6E64", VA = "0xFD6E64", Slot = "128")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xFD6FBC", Offset = "0xFD6FBC", VA = "0xFD6FBC", Slot = "129")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xFD7114", Offset = "0xFD7114", VA = "0xFD7114", Slot = "130")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0xFD726C", Offset = "0xFD726C", VA = "0xFD726C", Slot = "131")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0xFD73C4", Offset = "0xFD73C4", VA = "0xFD73C4", Slot = "139")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xFD7404", Offset = "0xFD7404", VA = "0xFD7404", Slot = "140")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xFD748C", Offset = "0xFD748C", VA = "0xFD748C", Slot = "143")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0xFD7494", Offset = "0xFD7494", VA = "0xFD7494", Slot = "146")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xFD7580", Offset = "0xFD7580", VA = "0xFD7580", Slot = "147")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xFD768C", Offset = "0xFD768C", VA = "0xFD768C", Slot = "148")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xFD7784", Offset = "0xFD7784", VA = "0xFD7784", Slot = "150")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xFD7890", Offset = "0xFD7890", VA = "0xFD7890", Slot = "149")]
		public override void SetBalance(float balance)
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xFD7988", Offset = "0xFD7988", VA = "0xFD7988", Slot = "151")]
		public override float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xFD7A94", Offset = "0xFD7A94", VA = "0xFD7A94", Slot = "152")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xFD7BA0", Offset = "0xFD7BA0", VA = "0xFD7BA0", Slot = "154")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xFD7CAC", Offset = "0xFD7CAC", VA = "0xFD7CAC", Slot = "155")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0xFD7D94", Offset = "0xFD7D94", VA = "0xFD7D94", Slot = "156")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xFD7DCC", Offset = "0xFD7DCC", VA = "0xFD7DCC", Slot = "157")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xFD7DD4", Offset = "0xFD7DD4", VA = "0xFD7DD4", Slot = "166")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xFD7E08", Offset = "0xFD7E08", VA = "0xFD7E08", Slot = "168")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xFD7E10", Offset = "0xFD7E10", VA = "0xFD7E10", Slot = "169")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xFD7E14", Offset = "0xFD7E14", VA = "0xFD7E14", Slot = "170")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xFD7E5C", Offset = "0xFD7E5C", VA = "0xFD7E5C", Slot = "171")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xFD7E64", Offset = "0xFD7E64", VA = "0xFD7E64", Slot = "132")]
		public override bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0xFD8088", Offset = "0xFD8088", VA = "0xFD8088", Slot = "142")]
		public override long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xFD8194", Offset = "0xFD8194", VA = "0xFD8194", Slot = "176")]
		public override void Render()
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xFD8950", Offset = "0xFD8950", VA = "0xFD8950", Slot = "182")]
		protected override void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xFD8A18", Offset = "0xFD8A18", VA = "0xFD8A18", Slot = "188")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xFD8B10", Offset = "0xFD8B10", VA = "0xFD8B10", Slot = "116")]
		public override double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xFD8C1C", Offset = "0xFD8C1C", VA = "0xFD8C1C", Slot = "175")]
		public override void Update()
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xFD8EC4", Offset = "0xFD8EC4", VA = "0xFD8EC4", Slot = "179")]
		public override bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xFD8ECC", Offset = "0xFD8ECC", VA = "0xFD8ECC", Slot = "144")]
		public override float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xFD8FD0", Offset = "0xFD8FD0", VA = "0xFD8FD0", Slot = "177")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class AudioOutputManager
	{
		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioOutputManager _instance;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<MediaPlayer, HashSet<AudioOutput>> _accessTrackers;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MediaPlayer, float[]> _pcmData;

		[Token(Token = "0x17000349")]
		public static AudioOutputManager Instance
		{
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0xFDBB7C", Offset = "0xFDBB7C", VA = "0xFDBB7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xFDBC3C", Offset = "0xFDBC3C", VA = "0xFDBC3C")]
		private AudioOutputManager()
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xFDBCD8", Offset = "0xFDBCD8", VA = "0xFDBCD8")]
		public void RequestAudio(AudioOutput _outputComponent, MediaPlayer mediaPlayer, float[] data, int channelMask, int totalChannels, AudioOutput.AudioOutputMode audioOutputMode)
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xFDC2D8", Offset = "0xFDC2D8", VA = "0xFDC2D8")]
		private void GrabAudio(MediaPlayer player, float[] data, int channels)
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public abstract class BaseMediaPlayer : IMediaPlayer, IMediaControl, IMediaInfo, IMediaProducer, IMediaSubtitles, IDisposable
	{
		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string _playerDescription;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ErrorCode _lastError;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected FilterMode _defaultTextureFilterMode;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected TextureWrapMode _defaultTextureWrapMode;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int _defaultTextureAnisoLevel;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TimeRange[] _seekableTimeRanges;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _stallDetectionTimer;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _stallDetectionFrame;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<Subtitle> _subtitles;

		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Subtitle _currentSubtitle;

		[Token(Token = "0x60025B3")]
		public abstract string GetVersion();

		[Token(Token = "0x60025B4")]
		public abstract bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xFDC3C8", Offset = "0xFDC3C8", VA = "0xFDC3C8", Slot = "99")]
		public virtual bool OpenVideoFromBuffer(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xFDC3D0", Offset = "0xFDC3D0", VA = "0xFDC3D0", Slot = "100")]
		public virtual bool StartOpenVideoFromBuffer(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xFDC3D8", Offset = "0xFDC3D8", VA = "0xFDC3D8", Slot = "101")]
		public virtual bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xFDC3E0", Offset = "0xFDC3E0", VA = "0xFDC3E0", Slot = "102")]
		public virtual bool EndOpenVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xFD4DC4", Offset = "0xFD4DC4", VA = "0xFD4DC4", Slot = "103")]
		public virtual void CloseVideo()
		{
		}

		[Token(Token = "0x60025BA")]
		public abstract void SetLooping(bool bLooping);

		[Token(Token = "0x60025BB")]
		public abstract bool IsLooping();

		[Token(Token = "0x60025BC")]
		public abstract bool HasMetaData();

		[Token(Token = "0x60025BD")]
		public abstract bool CanPlay();

		[Token(Token = "0x60025BE")]
		public abstract void Play();

		[Token(Token = "0x60025BF")]
		public abstract void Pause();

		[Token(Token = "0x60025C0")]
		public abstract void Stop();

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xFDC3E8", Offset = "0xFDC3E8", VA = "0xFDC3E8", Slot = "111")]
		public virtual void Rewind()
		{
		}

		[Token(Token = "0x60025C2")]
		public abstract void Seek(float timeMs);

		[Token(Token = "0x60025C3")]
		public abstract void SeekFast(float timeMs);

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xFDC3FC", Offset = "0xFDC3FC", VA = "0xFDC3FC", Slot = "114")]
		public virtual void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x60025C5")]
		public abstract float GetCurrentTimeMs();

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xFDC40C", Offset = "0xFDC40C", VA = "0xFDC40C", Slot = "116")]
		public virtual double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xFDC414", Offset = "0xFDC414", VA = "0xFDC414", Slot = "117")]
		public virtual TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x60025C8")]
		public abstract float GetPlaybackRate();

		[Token(Token = "0x60025C9")]
		public abstract void SetPlaybackRate(float rate);

		[Token(Token = "0x60025CA")]
		public abstract float GetDurationMs();

		[Token(Token = "0x60025CB")]
		public abstract int GetVideoWidth();

		[Token(Token = "0x60025CC")]
		public abstract int GetVideoHeight();

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xFDC41C", Offset = "0xFDC41C", VA = "0xFDC41C", Slot = "123")]
		public virtual Rect GetCropRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60025CE")]
		public abstract float GetVideoDisplayRate();

		[Token(Token = "0x60025CF")]
		public abstract bool HasAudio();

		[Token(Token = "0x60025D0")]
		public abstract bool HasVideo();

		[Token(Token = "0x60025D1")]
		public abstract bool IsSeeking();

		[Token(Token = "0x60025D2")]
		public abstract bool IsPlaying();

		[Token(Token = "0x60025D3")]
		public abstract bool IsPaused();

		[Token(Token = "0x60025D4")]
		public abstract bool IsFinished();

		[Token(Token = "0x60025D5")]
		public abstract bool IsBuffering();

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xFDC45C", Offset = "0xFDC45C", VA = "0xFDC45C", Slot = "132")]
		public virtual bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xFDC464", Offset = "0xFDC464", VA = "0xFDC464", Slot = "133")]
		public virtual void SetPlayWithoutBuffering(bool playWithoutBuffering)
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xFDC468", Offset = "0xFDC468", VA = "0xFDC468", Slot = "134")]
		public virtual void SetKeyServerURL(string url)
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xFDC46C", Offset = "0xFDC46C", VA = "0xFDC46C", Slot = "135")]
		public virtual void SetKeyServerAuthToken(string token)
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xFDC470", Offset = "0xFDC470", VA = "0xFDC470", Slot = "136")]
		public virtual void SetDecryptionKeyBase64(string key)
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xFDC474", Offset = "0xFDC474", VA = "0xFDC474", Slot = "137")]
		public virtual void SetDecryptionKey(byte[] key)
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xFDC478", Offset = "0xFDC478", VA = "0xFDC478", Slot = "138")]
		public virtual int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x60025DD")]
		public abstract Texture GetTexture(int index = 0);

		[Token(Token = "0x60025DE")]
		public abstract int GetTextureFrameCount();

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xFDC480", Offset = "0xFDC480", VA = "0xFDC480", Slot = "141")]
		public virtual bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xFDC488", Offset = "0xFDC488", VA = "0xFDC488", Slot = "142")]
		public virtual long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x60025E1")]
		public abstract bool RequiresVerticalFlip();

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xFDC490", Offset = "0xFDC490", VA = "0xFDC490", Slot = "144")]
		public virtual float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xFDC510", Offset = "0xFDC510", VA = "0xFDC510", Slot = "145")]
		public virtual Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60025E4")]
		public abstract void MuteAudio(bool bMuted);

		[Token(Token = "0x60025E5")]
		public abstract bool IsMuted();

		[Token(Token = "0x60025E6")]
		public abstract void SetVolume(float volume);

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xFDC578", Offset = "0xFDC578", VA = "0xFDC578", Slot = "149")]
		public virtual void SetBalance(float balance)
		{
		}

		[Token(Token = "0x60025E8")]
		public abstract float GetVolume();

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xFDC57C", Offset = "0xFDC57C", VA = "0xFDC57C", Slot = "151")]
		public virtual float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x60025EA")]
		public abstract int GetAudioTrackCount();

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0xFDC584", Offset = "0xFDC584", VA = "0xFDC584", Slot = "153")]
		public virtual string GetAudioTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x60025EC")]
		public abstract int GetCurrentAudioTrack();

		[Token(Token = "0x60025ED")]
		public abstract void SetAudioTrack(int index);

		[Token(Token = "0x60025EE")]
		public abstract string GetCurrentAudioTrackId();

		[Token(Token = "0x60025EF")]
		public abstract int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xFDC5AC", Offset = "0xFDC5AC", VA = "0xFDC5AC", Slot = "158")]
		public virtual int GetNumAudioChannels()
		{
			return default(int);
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xFDC5B4", Offset = "0xFDC5B4", VA = "0xFDC5B4", Slot = "159")]
		public virtual void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xFDC5B8", Offset = "0xFDC5B8", VA = "0xFDC5B8", Slot = "160")]
		public virtual void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xFDC5BC", Offset = "0xFDC5BC", VA = "0xFDC5BC", Slot = "161")]
		public virtual void SetAudioChannelMode(Audio360ChannelMode channelMode)
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xFDC5C0", Offset = "0xFDC5C0", VA = "0xFDC5C0", Slot = "162")]
		public virtual void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0xFDC5C4", Offset = "0xFDC5C4", VA = "0xFDC5C4", Slot = "163")]
		public virtual void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0xFDC5C8", Offset = "0xFDC5C8", VA = "0xFDC5C8", Slot = "164")]
		public virtual void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0xFDC5CC", Offset = "0xFDC5CC", VA = "0xFDC5CC", Slot = "165")]
		public virtual void ResetAudioFocus()
		{
		}

		[Token(Token = "0x60025F8")]
		public abstract int GetVideoTrackCount();

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xFDC5D0", Offset = "0xFDC5D0", VA = "0xFDC5D0", Slot = "167")]
		public virtual string GetVideoTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x60025FA")]
		public abstract int GetCurrentVideoTrack();

		[Token(Token = "0x60025FB")]
		public abstract void SetVideoTrack(int index);

		[Token(Token = "0x60025FC")]
		public abstract string GetCurrentVideoTrackId();

		[Token(Token = "0x60025FD")]
		public abstract int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x60025FE")]
		public abstract float GetVideoFrameRate();

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0xFDC5F8", Offset = "0xFDC5F8", VA = "0xFDC5F8", Slot = "173")]
		public virtual long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x6002600")]
		public abstract float GetBufferingProgress();

		[Token(Token = "0x6002601")]
		public abstract void Update();

		[Token(Token = "0x6002602")]
		public abstract void Render();

		[Token(Token = "0x6002603")]
		public abstract void Dispose();

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xFDC600", Offset = "0xFDC600", VA = "0xFDC600", Slot = "47")]
		public ErrorCode GetLastError()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xFDC608", Offset = "0xFDC608", VA = "0xFDC608", Slot = "178")]
		public virtual long GetLastExtendedErrorCode()
		{
			return default(long);
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xFDC610", Offset = "0xFDC610", VA = "0xFDC610", Slot = "81")]
		public string GetPlayerDescription()
		{
			return null;
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xFDC618", Offset = "0xFDC618", VA = "0xFDC618", Slot = "179")]
		public virtual bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xFDC620", Offset = "0xFDC620", VA = "0xFDC620", Slot = "180")]
		public virtual int GetBufferedTimeRangeCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xFDC628", Offset = "0xFDC628", VA = "0xFDC628", Slot = "181")]
		public virtual bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs)
		{
			return default(bool);
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xFDC630", Offset = "0xFDC630", VA = "0xFDC630", Slot = "49")]
		public void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 0)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xFD8954", Offset = "0xFD8954", VA = "0xFD8954", Slot = "182")]
		protected virtual void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xFDC6C0", Offset = "0xFDC6C0", VA = "0xFDC6C0", Slot = "183")]
		public virtual void GrabAudio(float[] buffer, int floatCount, int channelCount)
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xFDC6C4", Offset = "0xFDC6C4", VA = "0xFDC6C4")]
		protected bool IsExpectingNewVideoFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xFDC748", Offset = "0xFDC748", VA = "0xFDC748", Slot = "184")]
		public virtual bool IsPlaybackStalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xFDC7E8", Offset = "0xFDC7E8", VA = "0xFDC7E8", Slot = "93")]
		public bool LoadSubtitlesSRT(string data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xFDC83C", Offset = "0xFDC83C", VA = "0xFDC83C", Slot = "185")]
		public virtual void UpdateSubtitles()
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xFDC984", Offset = "0xFDC984", VA = "0xFDC984", Slot = "186")]
		public virtual int GetSubtitleIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xFDC99C", Offset = "0xFDC99C", VA = "0xFDC99C", Slot = "187")]
		public virtual string GetSubtitleText()
		{
			return null;
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xFD8B0C", Offset = "0xFD8B0C", VA = "0xFD8B0C", Slot = "188")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xFD45A8", Offset = "0xFD45A8", VA = "0xFD45A8")]
		protected BaseMediaPlayer()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class HLSStream : Stream
	{
		[Token(Token = "0x4002707")]
		private const string BANDWITH_NAME = "BANDWIDTH=";

		[Token(Token = "0x4002708")]
		private const string RESOLUTION_NAME = "RESOLUTION=";

		[Token(Token = "0x4002709")]
		private const string CHUNK_TAG = "#EXTINF";

		[Token(Token = "0x400270A")]
		private const string STREAM_TAG = "#EXT-X-STREAM-INF";

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Stream> _streams;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Chunk> _chunks;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _streamURL;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _width;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _height;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bandwidth;

		[Token(Token = "0x1700034A")]
		public override int Width
		{
			[Token(Token = "0x6002615")]
			[Address(RVA = "0xAE9734", Offset = "0xAE9734", VA = "0xAE9734", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034B")]
		public override int Height
		{
			[Token(Token = "0x6002616")]
			[Address(RVA = "0xAE973C", Offset = "0xAE973C", VA = "0xAE973C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034C")]
		public override int Bandwidth
		{
			[Token(Token = "0x6002617")]
			[Address(RVA = "0xAE9744", Offset = "0xAE9744", VA = "0xAE9744", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034D")]
		public override string URL
		{
			[Token(Token = "0x6002618")]
			[Address(RVA = "0xAE974C", Offset = "0xAE974C", VA = "0xAE974C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xAE9754", Offset = "0xAE9754", VA = "0xAE9754", Slot = "8")]
		public override List<Chunk> GetAllChunks()
		{
			return null;
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xAE9854", Offset = "0xAE9854", VA = "0xAE9854", Slot = "9")]
		public override List<Chunk> GetChunks()
		{
			return null;
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xAE985C", Offset = "0xAE985C", VA = "0xAE985C", Slot = "10")]
		public override List<Stream> GetAllStreams()
		{
			return null;
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xAE995C", Offset = "0xAE995C", VA = "0xAE995C", Slot = "11")]
		public override List<Stream> GetStreams()
		{
			return null;
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0xAE9964", Offset = "0xAE9964", VA = "0xAE9964")]
		private bool ExtractStreamInfo(string line, ref int width, ref int height, ref int bandwidth)
		{
			return default(bool);
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0xAE9B74", Offset = "0xAE9B74", VA = "0xAE9B74")]
		private static bool IsChunk(string line)
		{
			return default(bool);
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0xAE9BD0", Offset = "0xAE9BD0", VA = "0xAE9BD0")]
		private void ParseFile(string[] text, string path)
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0xAEA02C", Offset = "0xAEA02C", VA = "0xAEA02C")]
		public HLSStream(string filename, int width = 0, int height = 0, int bandwidth = 0)
		{
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xAEA47C", Offset = "0xAEA47C", VA = "0xAEA47C")]
		private bool MyRemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20004FC")]
	public class MediaPlayerEvent : UnityEvent<MediaPlayer, MediaPlayerEvent.EventType, ErrorCode>
	{
		[Token(Token = "0x2000817")]
		public enum EventType
		{
			[Token(Token = "0x40034A4")]
			MetaDataReady,
			[Token(Token = "0x40034A5")]
			ReadyToPlay,
			[Token(Token = "0x40034A6")]
			Started,
			[Token(Token = "0x40034A7")]
			FirstFrameReady,
			[Token(Token = "0x40034A8")]
			FinishedPlaying,
			[Token(Token = "0x40034A9")]
			Closing,
			[Token(Token = "0x40034AA")]
			Error,
			[Token(Token = "0x40034AB")]
			SubtitleChange,
			[Token(Token = "0x40034AC")]
			Stalled,
			[Token(Token = "0x40034AD")]
			Unstalled,
			[Token(Token = "0x40034AE")]
			ResolutionChanged,
			[Token(Token = "0x40034AF")]
			StartedSeeking,
			[Token(Token = "0x40034B0")]
			FinishedSeeking,
			[Token(Token = "0x40034B1")]
			StartedBuffering,
			[Token(Token = "0x40034B2")]
			FinishedBuffering,
			[Token(Token = "0x40034B3")]
			PropertiesChanged,
			[Token(Token = "0x40034B4")]
			PlaylistItemChanged,
			[Token(Token = "0x40034B5")]
			PlaylistFinished
		}

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UnityAction<MediaPlayer, EventType, ErrorCode>> _listeners;

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xAEE2C8", Offset = "0xAEE2C8", VA = "0xAEE2C8")]
		public bool HasListeners()
		{
			return default(bool);
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xAF3F80", Offset = "0xAF3F80", VA = "0xAF3F80")]
		public new void AddListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xAF4030", Offset = "0xAF4030", VA = "0xAF4030")]
		public new void RemoveListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xAEC624", Offset = "0xAEC624", VA = "0xAEC624")]
		public MediaPlayerEvent()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public interface IMediaPlayer
	{
		[Token(Token = "0x6002626")]
		void OnEnable();

		[Token(Token = "0x6002627")]
		void Update();

		[Token(Token = "0x6002628")]
		void Render();
	}
	[Token(Token = "0x20004FE")]
	public interface IMediaSubtitles
	{
		[Token(Token = "0x6002629")]
		bool LoadSubtitlesSRT(string data);

		[Token(Token = "0x600262A")]
		int GetSubtitleIndex();

		[Token(Token = "0x600262B")]
		string GetSubtitleText();
	}
	[Token(Token = "0x20004FF")]
	public interface IMediaControl
	{
		[Token(Token = "0x600262C")]
		bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x600262D")]
		bool OpenVideoFromBuffer(byte[] buffer);

		[Token(Token = "0x600262E")]
		bool StartOpenVideoFromBuffer(ulong length);

		[Token(Token = "0x600262F")]
		bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length);

		[Token(Token = "0x6002630")]
		bool EndOpenVideoFromBuffer();

		[Token(Token = "0x6002631")]
		void CloseVideo();

		[Token(Token = "0x6002632")]
		void SetLooping(bool bLooping);

		[Token(Token = "0x6002633")]
		bool IsLooping();

		[Token(Token = "0x6002634")]
		bool HasMetaData();

		[Token(Token = "0x6002635")]
		bool CanPlay();

		[Token(Token = "0x6002636")]
		bool IsPlaying();

		[Token(Token = "0x6002637")]
		bool IsSeeking();

		[Token(Token = "0x6002638")]
		bool IsPaused();

		[Token(Token = "0x6002639")]
		bool IsFinished();

		[Token(Token = "0x600263A")]
		bool IsBuffering();

		[Token(Token = "0x600263B")]
		void Play();

		[Token(Token = "0x600263C")]
		void Pause();

		[Token(Token = "0x600263D")]
		void Stop();

		[Token(Token = "0x600263E")]
		void Rewind();

		[Token(Token = "0x600263F")]
		void Seek(float timeMs);

		[Token(Token = "0x6002640")]
		void SeekFast(float timeMs);

		[Token(Token = "0x6002641")]
		void SeekWithTolerance(float timeMs, float beforeMs, float afterMs);

		[Token(Token = "0x6002642")]
		float GetCurrentTimeMs();

		[Token(Token = "0x6002643")]
		double GetCurrentDateTimeSecondsSince1970();

		[Token(Token = "0x6002644")]
		TimeRange[] GetSeekableTimeRanges();

		[Token(Token = "0x6002645")]
		float GetPlaybackRate();

		[Token(Token = "0x6002646")]
		void SetPlaybackRate(float rate);

		[Token(Token = "0x6002647")]
		void MuteAudio(bool bMute);

		[Token(Token = "0x6002648")]
		bool IsMuted();

		[Token(Token = "0x6002649")]
		void SetVolume(float volume);

		[Token(Token = "0x600264A")]
		void SetBalance(float balance);

		[Token(Token = "0x600264B")]
		float GetVolume();

		[Token(Token = "0x600264C")]
		float GetBalance();

		[Token(Token = "0x600264D")]
		int GetCurrentAudioTrack();

		[Token(Token = "0x600264E")]
		void SetAudioTrack(int index);

		[Token(Token = "0x600264F")]
		int GetCurrentVideoTrack();

		[Token(Token = "0x6002650")]
		void SetVideoTrack(int index);

		[Token(Token = "0x6002651")]
		float GetBufferingProgress();

		[Token(Token = "0x6002652")]
		int GetBufferedTimeRangeCount();

		[Token(Token = "0x6002653")]
		bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs);

		[Token(Token = "0x6002654")]
		ErrorCode GetLastError();

		[Token(Token = "0x6002655")]
		long GetLastExtendedErrorCode();

		[Token(Token = "0x6002656")]
		void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 1);

		[Token(Token = "0x6002657")]
		void GrabAudio(float[] buffer, int floatCount, int channelCount);

		[Token(Token = "0x6002658")]
		int GetNumAudioChannels();

		[Token(Token = "0x6002659")]
		void SetAudioHeadRotation(Quaternion q);

		[Token(Token = "0x600265A")]
		void ResetAudioHeadRotation();

		[Token(Token = "0x600265B")]
		void SetAudioChannelMode(Audio360ChannelMode channelMode);

		[Token(Token = "0x600265C")]
		void SetAudioFocusEnabled(bool enabled);

		[Token(Token = "0x600265D")]
		void SetAudioFocusProperties(float offFocusLevel, float widthDegrees);

		[Token(Token = "0x600265E")]
		void SetAudioFocusRotation(Quaternion q);

		[Token(Token = "0x600265F")]
		void ResetAudioFocus();

		[Token(Token = "0x6002660")]
		bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount);

		[Token(Token = "0x6002661")]
		void SetPlayWithoutBuffering(bool playWithoutBuffering);

		[Token(Token = "0x6002662")]
		void SetKeyServerURL(string url);

		[Token(Token = "0x6002663")]
		void SetKeyServerAuthToken(string token);

		[Token(Token = "0x6002664")]
		void SetDecryptionKeyBase64(string key);

		[Token(Token = "0x6002665")]
		void SetDecryptionKey(byte[] key);
	}
	[Token(Token = "0x2000500")]
	public interface IMediaInfo
	{
		[Token(Token = "0x6002666")]
		float GetDurationMs();

		[Token(Token = "0x6002667")]
		int GetVideoWidth();

		[Token(Token = "0x6002668")]
		int GetVideoHeight();

		[Token(Token = "0x6002669")]
		Rect GetCropRect();

		[Token(Token = "0x600266A")]
		float GetVideoFrameRate();

		[Token(Token = "0x600266B")]
		float GetVideoDisplayRate();

		[Token(Token = "0x600266C")]
		bool HasVideo();

		[Token(Token = "0x600266D")]
		bool HasAudio();

		[Token(Token = "0x600266E")]
		int GetAudioTrackCount();

		[Token(Token = "0x600266F")]
		string GetAudioTrackId(int index);

		[Token(Token = "0x6002670")]
		string GetCurrentAudioTrackId();

		[Token(Token = "0x6002671")]
		int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x6002672")]
		int GetVideoTrackCount();

		[Token(Token = "0x6002673")]
		string GetVideoTrackId(int index);

		[Token(Token = "0x6002674")]
		string GetCurrentVideoTrackId();

		[Token(Token = "0x6002675")]
		int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x6002676")]
		string GetPlayerDescription();

		[Token(Token = "0x6002677")]
		bool PlayerSupportsLinearColorSpace();

		[Token(Token = "0x6002678")]
		bool IsPlaybackStalled();

		[Token(Token = "0x6002679")]
		float[] GetTextureTransform();

		[Token(Token = "0x600267A")]
		long GetEstimatedTotalBandwidthUsed();
	}
	[Token(Token = "0x2000501")]
	public interface IMediaProducer
	{
		[Token(Token = "0x600267B")]
		int GetTextureCount();

		[Token(Token = "0x600267C")]
		Texture GetTexture(int index = 0);

		[Token(Token = "0x600267D")]
		int GetTextureFrameCount();

		[Token(Token = "0x600267E")]
		bool SupportsTextureFrameCount();

		[Token(Token = "0x600267F")]
		long GetTextureTimeStamp();

		[Token(Token = "0x6002680")]
		bool RequiresVerticalFlip();

		[Token(Token = "0x6002681")]
		Matrix4x4 GetYpCbCrTransform();
	}
	[Token(Token = "0x2000502")]
	public enum Platform
	{
		[Token(Token = "0x4002713")]
		Windows = 0,
		[Token(Token = "0x4002714")]
		MacOSX = 1,
		[Token(Token = "0x4002715")]
		iOS = 2,
		[Token(Token = "0x4002716")]
		tvOS = 3,
		[Token(Token = "0x4002717")]
		Android = 4,
		[Token(Token = "0x4002718")]
		WindowsPhone = 5,
		[Token(Token = "0x4002719")]
		WindowsUWP = 6,
		[Token(Token = "0x400271A")]
		WebGL = 7,
		[Token(Token = "0x400271B")]
		PS4 = 8,
		[Token(Token = "0x400271C")]
		Count = 9,
		[Token(Token = "0x400271D")]
		Unknown = 100
	}
	[Token(Token = "0x2000503")]
	public enum StereoPacking
	{
		[Token(Token = "0x400271F")]
		None,
		[Token(Token = "0x4002720")]
		TopBottom,
		[Token(Token = "0x4002721")]
		LeftRight,
		[Token(Token = "0x4002722")]
		CustomUV
	}
	[Token(Token = "0x2000504")]
	public enum StereoEye
	{
		[Token(Token = "0x4002724")]
		Both,
		[Token(Token = "0x4002725")]
		Left,
		[Token(Token = "0x4002726")]
		Right
	}
	[Token(Token = "0x2000505")]
	public enum AlphaPacking
	{
		[Token(Token = "0x4002728")]
		None,
		[Token(Token = "0x4002729")]
		TopBottom,
		[Token(Token = "0x400272A")]
		LeftRight
	}
	[Token(Token = "0x2000506")]
	public enum ErrorCode
	{
		[Token(Token = "0x400272C")]
		None = 0,
		[Token(Token = "0x400272D")]
		LoadFailed = 100,
		[Token(Token = "0x400272E")]
		DecodeFailed = 200
	}
	[Token(Token = "0x2000507")]
	public enum Orientation
	{
		[Token(Token = "0x4002730")]
		Landscape,
		[Token(Token = "0x4002731")]
		LandscapeFlipped,
		[Token(Token = "0x4002732")]
		Portrait,
		[Token(Token = "0x4002733")]
		PortraitFlipped
	}
	[Token(Token = "0x2000508")]
	public enum VideoMapping
	{
		[Token(Token = "0x4002735")]
		Unknown,
		[Token(Token = "0x4002736")]
		Normal,
		[Token(Token = "0x4002737")]
		EquiRectangular360,
		[Token(Token = "0x4002738")]
		EquiRectangular180,
		[Token(Token = "0x4002739")]
		CubeMap3x2
	}
	[Token(Token = "0x2000509")]
	public enum FileFormat
	{
		[Token(Token = "0x400273B")]
		Unknown,
		[Token(Token = "0x400273C")]
		HLS,
		[Token(Token = "0x400273D")]
		DASH,
		[Token(Token = "0x400273E")]
		SmoothStreaming
	}
	[Token(Token = "0x200050A")]
	public static class Windows
	{
		[Token(Token = "0x2000818")]
		public enum VideoApi
		{
			[Token(Token = "0x40034B7")]
			MediaFoundation,
			[Token(Token = "0x40034B8")]
			DirectShow
		}

		[Token(Token = "0x400273F")]
		public const string AudioDeviceOutputName_Vive = "HTC VIVE USB Audio";

		[Token(Token = "0x4002740")]
		public const string AudioDeviceOutputName_Rift = "Headphones (Rift Audio)";
	}
	[Token(Token = "0x200050B")]
	public static class Android
	{
		[Token(Token = "0x2000819")]
		public enum VideoApi
		{
			[Token(Token = "0x40034BA")]
			MediaPlayer = 1,
			[Token(Token = "0x40034BB")]
			ExoPlayer
		}
	}
	[Token(Token = "0x200050C")]
	public static class WebGL
	{
		[Token(Token = "0x200081A")]
		public enum ExternalLibrary
		{
			[Token(Token = "0x40034BD")]
			None,
			[Token(Token = "0x40034BE")]
			DashJs,
			[Token(Token = "0x40034BF")]
			HlsJs,
			[Token(Token = "0x40034C0")]
			Custom
		}
	}
	[Token(Token = "0x200050D")]
	public enum Audio360ChannelMode
	{
		[Token(Token = "0x4002742")]
		TBE_8_2,
		[Token(Token = "0x4002743")]
		TBE_8,
		[Token(Token = "0x4002744")]
		TBE_6_2,
		[Token(Token = "0x4002745")]
		TBE_6,
		[Token(Token = "0x4002746")]
		TBE_4_2,
		[Token(Token = "0x4002747")]
		TBE_4,
		[Token(Token = "0x4002748")]
		TBE_8_PAIR0,
		[Token(Token = "0x4002749")]
		TBE_8_PAIR1,
		[Token(Token = "0x400274A")]
		TBE_8_PAIR2,
		[Token(Token = "0x400274B")]
		TBE_8_PAIR3,
		[Token(Token = "0x400274C")]
		TBE_CHANNEL0,
		[Token(Token = "0x400274D")]
		TBE_CHANNEL1,
		[Token(Token = "0x400274E")]
		TBE_CHANNEL2,
		[Token(Token = "0x400274F")]
		TBE_CHANNEL3,
		[Token(Token = "0x4002750")]
		TBE_CHANNEL4,
		[Token(Token = "0x4002751")]
		TBE_CHANNEL5,
		[Token(Token = "0x4002752")]
		TBE_CHANNEL6,
		[Token(Token = "0x4002753")]
		TBE_CHANNEL7,
		[Token(Token = "0x4002754")]
		HEADLOCKED_STEREO,
		[Token(Token = "0x4002755")]
		HEADLOCKED_CHANNEL0,
		[Token(Token = "0x4002756")]
		HEADLOCKED_CHANNEL1,
		[Token(Token = "0x4002757")]
		AMBIX_4,
		[Token(Token = "0x4002758")]
		AMBIX_9,
		[Token(Token = "0x4002759")]
		AMBIX_9_2,
		[Token(Token = "0x400275A")]
		AMBIX_16,
		[Token(Token = "0x400275B")]
		AMBIX_16_2,
		[Token(Token = "0x400275C")]
		STEREO,
		[Token(Token = "0x400275D")]
		INVALID
	}
	[Token(Token = "0x200050E")]
	public struct TimeRange
	{
		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float startTime;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float duration;
	}
	[Token(Token = "0x200050F")]
	public class Subtitle
	{
		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int timeStartMs;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int timeEndMs;

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xAF8CF8", Offset = "0xAF8CF8", VA = "0xAF8CF8")]
		public bool IsBefore(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xAF8D24", Offset = "0xAF8D24", VA = "0xAF8D24")]
		public bool IsTime(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xAEC560", Offset = "0xAEC560", VA = "0xAEC560")]
		public Subtitle()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public static class Helper
	{
		[Token(Token = "0x4002764")]
		public const string ScriptVersion = "1.9.12";

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xAEA648", Offset = "0xAEA648", VA = "0xAEA648")]
		public static string GetName(Platform platform)
		{
			return null;
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xAEA718", Offset = "0xAEA718", VA = "0xAEA718")]
		public static string GetErrorMessage(ErrorCode code)
		{
			return null;
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xAEA7C0", Offset = "0xAEA7C0", VA = "0xAEA7C0")]
		public static string[] GetPlatformNames()
		{
			return null;
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xAEAA74", Offset = "0xAEAA74", VA = "0xAEAA74")]
		public static void LogInfo(string message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xAEAB74", Offset = "0xAEAB74", VA = "0xAEAB74")]
		public static string GetTimeString(float totalSeconds, bool showMilliseconds = false)
		{
			return null;
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xAEAF20", Offset = "0xAEAF20", VA = "0xAEAF20")]
		public static Orientation GetOrientation(float[] t)
		{
			return default(Orientation);
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xAEB06C", Offset = "0xAEB06C", VA = "0xAEB06C")]
		public static Matrix4x4 GetMatrixForOrientation(Orientation ori)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xAEB3C4", Offset = "0xAEB3C4", VA = "0xAEB3C4")]
		public static void SetupStereoEyeModeMaterial(Material material, StereoEye mode)
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xAEB500", Offset = "0xAEB500", VA = "0xAEB500")]
		public static void SetupLayoutMaterial(Material material, VideoMapping mapping)
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xAEB5A8", Offset = "0xAEB5A8", VA = "0xAEB5A8")]
		public static void SetupStereoMaterial(Material material, StereoPacking packing, bool displayDebugTinting)
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xAEB6CC", Offset = "0xAEB6CC", VA = "0xAEB6CC")]
		public static void SetupAlphaPackedMaterial(Material material, AlphaPacking packing)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xAEB79C", Offset = "0xAEB79C", VA = "0xAEB79C")]
		public static void SetupGammaMaterial(Material material, bool playerSupportsLinear)
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xAEB840", Offset = "0xAEB840", VA = "0xAEB840")]
		public static int ConvertTimeSecondsToFrame(float seconds, float frameRate)
		{
			return default(int);
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xAEB8B4", Offset = "0xAEB8B4", VA = "0xAEB8B4")]
		public static float ConvertFrameToTimeSeconds(int frame, float frameRate)
		{
			return default(float);
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xAEB8D4", Offset = "0xAEB8D4", VA = "0xAEB8D4")]
		public static float FindNextKeyFrameTimeSeconds(float seconds, float frameRate, int keyFrameInterval)
		{
			return default(float);
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xAEB990", Offset = "0xAEB990", VA = "0xAEB990")]
		public static DateTime ConvertSecondsSince1970ToDateTime(double secondsSince1970)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xAEBA48", Offset = "0xAEBA48", VA = "0xAEBA48")]
		public static void DrawTexture(Rect screenRect, Texture texture, ScaleMode scaleMode, AlphaPacking alphaPacking, Material material)
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xAEBDC0", Offset = "0xAEBDC0", VA = "0xAEBDC0")]
		public static Texture2D GetReadableTexture(Texture inputTexture, bool requiresVerticalFlip, Orientation ori, Texture2D targetTexture)
		{
			return null;
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xAEC0D4", Offset = "0xAEC0D4", VA = "0xAEC0D4")]
		private static int ParseTimeToMs(string text)
		{
			return default(int);
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xAEC208", Offset = "0xAEC208", VA = "0xAEC208")]
		public static List<Subtitle> LoadSubtitlesSRT(string data)
		{
			return null;
		}
	}
	[Token(Token = "0x2000511")]
	public sealed class NullMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isPlaying;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _isPaused;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _currentTime;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _volume;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _playbackRate;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _bLoop;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _Width;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _height;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Texture2D _texture;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Texture2D _texture_AVPro;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D _texture_AVPro1;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _fakeFlipTime;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _frameCount;

		[Token(Token = "0x4002772")]
		private const float FrameRate = 10f;

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xAF41F4", Offset = "0xAF41F4", VA = "0xAF41F4", Slot = "97")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xAF423C", Offset = "0xAF423C", VA = "0xAF423C", Slot = "98")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xAF435C", Offset = "0xAF435C", VA = "0xAF435C", Slot = "103")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0xAF439C", Offset = "0xAF439C", VA = "0xAF439C", Slot = "104")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0xAF43A8", Offset = "0xAF43A8", VA = "0xAF43A8", Slot = "105")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0xAF43B0", Offset = "0xAF43B0", VA = "0xAF43B0", Slot = "106")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0xAF43B8", Offset = "0xAF43B8", VA = "0xAF43B8", Slot = "107")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0xAF43C0", Offset = "0xAF43C0", VA = "0xAF43C0", Slot = "125")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0xAF43C8", Offset = "0xAF43C8", VA = "0xAF43C8", Slot = "126")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0xAF43D0", Offset = "0xAF43D0", VA = "0xAF43D0", Slot = "108")]
		public override void Play()
		{
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0xAF43E0", Offset = "0xAF43E0", VA = "0xAF43E0", Slot = "109")]
		public override void Pause()
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0xAF43EC", Offset = "0xAF43EC", VA = "0xAF43EC", Slot = "110")]
		public override void Stop()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0xAF43F4", Offset = "0xAF43F4", VA = "0xAF43F4", Slot = "127")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0xAF43FC", Offset = "0xAF43FC", VA = "0xAF43FC", Slot = "128")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0xAF4404", Offset = "0xAF4404", VA = "0xAF4404", Slot = "129")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0xAF440C", Offset = "0xAF440C", VA = "0xAF440C", Slot = "130")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0xAF4450", Offset = "0xAF4450", VA = "0xAF4450", Slot = "131")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0xAF4458", Offset = "0xAF4458", VA = "0xAF4458", Slot = "120")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0xAF4464", Offset = "0xAF4464", VA = "0xAF4464", Slot = "121")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0xAF446C", Offset = "0xAF446C", VA = "0xAF446C", Slot = "122")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0xAF4474", Offset = "0xAF4474", VA = "0xAF4474", Slot = "124")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0xAF447C", Offset = "0xAF447C", VA = "0xAF447C", Slot = "139")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0xAF4484", Offset = "0xAF4484", VA = "0xAF4484", Slot = "140")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0xAF448C", Offset = "0xAF448C", VA = "0xAF448C", Slot = "143")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0xAF4494", Offset = "0xAF4494", VA = "0xAF4494", Slot = "112")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0xAF449C", Offset = "0xAF449C", VA = "0xAF449C", Slot = "113")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0xAF44A4", Offset = "0xAF44A4", VA = "0xAF44A4", Slot = "114")]
		public override void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0xAF44AC", Offset = "0xAF44AC", VA = "0xAF44AC", Slot = "115")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0xAF44B4", Offset = "0xAF44B4", VA = "0xAF44B4", Slot = "119")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0xAF44BC", Offset = "0xAF44BC", VA = "0xAF44BC", Slot = "118")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0xAF44C4", Offset = "0xAF44C4", VA = "0xAF44C4", Slot = "174")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0xAF44CC", Offset = "0xAF44CC", VA = "0xAF44CC", Slot = "146")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0xAF44D0", Offset = "0xAF44D0", VA = "0xAF44D0", Slot = "147")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0xAF44D8", Offset = "0xAF44D8", VA = "0xAF44D8", Slot = "148")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0xAF44E0", Offset = "0xAF44E0", VA = "0xAF44E0", Slot = "150")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0xAF44E8", Offset = "0xAF44E8", VA = "0xAF44E8", Slot = "152")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0xAF44F0", Offset = "0xAF44F0", VA = "0xAF44F0", Slot = "154")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0xAF44F8", Offset = "0xAF44F8", VA = "0xAF44F8", Slot = "155")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0xAF44FC", Offset = "0xAF44FC", VA = "0xAF44FC", Slot = "166")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0xAF4504", Offset = "0xAF4504", VA = "0xAF4504", Slot = "168")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0xAF450C", Offset = "0xAF450C", VA = "0xAF450C", Slot = "156")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0xAF4554", Offset = "0xAF4554", VA = "0xAF4554", Slot = "157")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0xAF455C", Offset = "0xAF455C", VA = "0xAF455C", Slot = "169")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0xAF4560", Offset = "0xAF4560", VA = "0xAF4560", Slot = "170")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0xAF45A8", Offset = "0xAF45A8", VA = "0xAF45A8", Slot = "171")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0xAF45B0", Offset = "0xAF45B0", VA = "0xAF45B0", Slot = "172")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0xAF45B8", Offset = "0xAF45B8", VA = "0xAF45B8", Slot = "175")]
		public override void Update()
		{
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0xAF471C", Offset = "0xAF471C", VA = "0xAF471C", Slot = "176")]
		public override void Render()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0xAF4720", Offset = "0xAF4720", VA = "0xAF4720", Slot = "177")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0xAF10B4", Offset = "0xAF10B4", VA = "0xAF10B4")]
		public NullMediaPlayer()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class Resampler
	{
		[Token(Token = "0x200081B")]
		private class TimestampedRenderTexture
		{
			[Token(Token = "0x40034C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderTexture texture;

			[Token(Token = "0x40034C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long timestamp;

			[Token(Token = "0x40034C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool used;

			[Token(Token = "0x60031F1")]
			[Address(RVA = "0xAF7654", Offset = "0xAF7654", VA = "0xAF7654")]
			public TimestampedRenderTexture()
			{
			}
		}

		[Token(Token = "0x200081C")]
		public enum ResampleMode
		{
			[Token(Token = "0x40034C5")]
			POINT,
			[Token(Token = "0x40034C6")]
			LINEAR
		}

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TimestampedRenderTexture[]> _buffer;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture[] _outputTexture;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _start;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _end;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bufferSize;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long _baseTimestamp;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _elapsedTimeSinceBase;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blendMat;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResampleMode _resampleMode;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _name;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private long _lastTimeStamp;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _droppedFrames;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long _lastDisplayedTimestamp;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _frameDisplayedTimer;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private long _currentDisplayedTimestamp;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86C038", Offset = "0x86C038")]
		private float <LastT>k__BackingField;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x86C048", Offset = "0x86C048")]
		private long <TextureTimeStamp>k__BackingField;

		[Token(Token = "0x4002785")]
		private const string ShaderPropT = "_t";

		[Token(Token = "0x4002786")]
		private const string ShaderPropAftertex = "_AfterTex";

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _propAfterTex;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _propT;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _videoFrameRate;

		[Token(Token = "0x1700034E")]
		public int DroppedFrames
		{
			[Token(Token = "0x60026CB")]
			[Address(RVA = "0xAF6B90", Offset = "0xAF6B90", VA = "0xAF6B90")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034F")]
		public int FrameDisplayedTimer
		{
			[Token(Token = "0x60026CC")]
			[Address(RVA = "0xAF6B98", Offset = "0xAF6B98", VA = "0xAF6B98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000350")]
		public long BaseTimestamp
		{
			[Token(Token = "0x60026CD")]
			[Address(RVA = "0xAF6BA0", Offset = "0xAF6BA0", VA = "0xAF6BA0")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60026CE")]
			[Address(RVA = "0xAF6BA8", Offset = "0xAF6BA8", VA = "0xAF6BA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public float ElapsedTimeSinceBase
		{
			[Token(Token = "0x60026CF")]
			[Address(RVA = "0xAF6BB0", Offset = "0xAF6BB0", VA = "0xAF6BB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026D0")]
			[Address(RVA = "0xAF6BB8", Offset = "0xAF6BB8", VA = "0xAF6BB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public float LastT
		{
			[Token(Token = "0x60026D1")]
			[Address(RVA = "0xAF6BC0", Offset = "0xAF6BC0", VA = "0xAF6BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876CAC", Offset = "0x876CAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xAF6BC8", Offset = "0xAF6BC8", VA = "0xAF6BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876CBC", Offset = "0x876CBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public long TextureTimeStamp
		{
			[Token(Token = "0x60026D3")]
			[Address(RVA = "0xAF6BD0", Offset = "0xAF6BD0", VA = "0xAF6BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876CCC", Offset = "0x876CCC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60026D4")]
			[Address(RVA = "0xAF6BD8", Offset = "0xAF6BD8", VA = "0xAF6BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876CDC", Offset = "0x876CDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public Texture[] OutputTexture
		{
			[Token(Token = "0x60026D7")]
			[Address(RVA = "0xAF6D08", Offset = "0xAF6D08", VA = "0xAF6D08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0xAF6BE0", Offset = "0xAF6BE0", VA = "0xAF6BE0")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0xAEF6E0", Offset = "0xAEF6E0", VA = "0xAEF6E0")]
		public Resampler(MediaPlayer player, string name, int bufferSize = 2, ResampleMode resampleMode = ResampleMode.LINEAR)
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0xAEE358", Offset = "0xAEE358", VA = "0xAEE358")]
		public void Reset()
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xAF0978", Offset = "0xAF0978", VA = "0xAF0978")]
		public void Release()
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xAF6E48", Offset = "0xAF6E48", VA = "0xAF6E48")]
		private void ReleaseRenderTextures()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xAF7098", Offset = "0xAF7098", VA = "0xAF7098")]
		private void ConstructRenderTextures()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xAF765C", Offset = "0xAF765C", VA = "0xAF765C")]
		private bool CheckRenderTexturesValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xAF7A58", Offset = "0xAF7A58", VA = "0xAF7A58")]
		private int FindBeforeFrameIndex(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xAF7C3C", Offset = "0xAF7C3C", VA = "0xAF7C3C")]
		private int FindClosestFrame(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xAF7E0C", Offset = "0xAF7E0C", VA = "0xAF7E0C")]
		private void PointUpdate()
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xAF7FB0", Offset = "0xAF7FB0", VA = "0xAF7FB0")]
		private void SampleFrame(int frameIdx, int bufferIdx)
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xAF8134", Offset = "0xAF8134", VA = "0xAF8134")]
		private void SampleFrames(int bufferIdx, int frameIdx1, int frameIdx2, float t)
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xAF8420", Offset = "0xAF8420", VA = "0xAF8420")]
		private void LinearUpdate()
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xAF6D10", Offset = "0xAF6D10", VA = "0xAF6D10")]
		private void InvalidateBuffer()
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xAF8628", Offset = "0xAF8628", VA = "0xAF8628")]
		private float GuessFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xAEF954", Offset = "0xAEF954", VA = "0xAEF954")]
		public void Update()
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xAF06C0", Offset = "0xAF06C0", VA = "0xAF06C0")]
		public void UpdateTimestamp()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public abstract class Stream
	{
		[Token(Token = "0x200081D")]
		public struct Chunk
		{
			[Token(Token = "0x40034C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;
		}

		[Token(Token = "0x17000355")]
		public abstract int Width
		{
			[Token(Token = "0x60026E7")]
			get;
		}

		[Token(Token = "0x17000356")]
		public abstract int Height
		{
			[Token(Token = "0x60026E8")]
			get;
		}

		[Token(Token = "0x17000357")]
		public abstract int Bandwidth
		{
			[Token(Token = "0x60026E9")]
			get;
		}

		[Token(Token = "0x17000358")]
		public abstract string URL
		{
			[Token(Token = "0x60026EA")]
			get;
		}

		[Token(Token = "0x60026EB")]
		public abstract List<Chunk> GetAllChunks();

		[Token(Token = "0x60026EC")]
		public abstract List<Chunk> GetChunks();

		[Token(Token = "0x60026ED")]
		public abstract List<Stream> GetAllStreams();

		[Token(Token = "0x60026EE")]
		public abstract List<Stream> GetStreams();

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xAEA474", Offset = "0xAEA474", VA = "0xAEA474")]
		protected Stream()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo.Demos
{
	[Token(Token = "0x2000514")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x85CE4C", Offset = "0x85CE4C")]
	public class AutoRotate : MonoBehaviour
	{
		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float x;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float y;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float z;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _timer;

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xFE08AC", Offset = "0xFE08AC", VA = "0xFE08AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xFE0934", Offset = "0xFE0934", VA = "0xFE0934")]
		private void Update()
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0xFE08B0", Offset = "0xFE08B0", VA = "0xFE08B0")]
		private void Randomise()
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xFE09FC", Offset = "0xFE09FC", VA = "0xFE09FC")]
		public AutoRotate()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class DemoInfo : MonoBehaviour
	{
		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _title;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Multiline]
		public string _description;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MediaPlayer _media;

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0xFE10A4", Offset = "0xFE10A4", VA = "0xFE10A4")]
		public DemoInfo()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class FrameExtract : MonoBehaviour
	{
		[Token(Token = "0x4002791")]
		private const int NumFrames = 8;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _accurateSeek;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _timeoutMs;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUISkin _skin;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool _asyncExtract;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _timeStepSeconds;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _frameIndex;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D _texture;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture _displaySheet;

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xFE10AC", Offset = "0xFE10AC", VA = "0xFE10AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xFE11FC", Offset = "0xFE11FC", VA = "0xFE11FC")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xFE1258", Offset = "0xFE1258", VA = "0xFE1258")]
		private void OnNewMediaReady()
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xFE14D0", Offset = "0xFE14D0", VA = "0xFE14D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xFE15BC", Offset = "0xFE15BC", VA = "0xFE15BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xFE1750", Offset = "0xFE1750", VA = "0xFE1750")]
		private void ProcessExtractedFrame(Texture2D texture)
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xFE1654", Offset = "0xFE1654", VA = "0xFE1654")]
		private void ExtractNextFrame()
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xFE196C", Offset = "0xFE196C", VA = "0xFE196C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xFE1DA8", Offset = "0xFE1DA8", VA = "0xFE1DA8")]
		public FrameExtract()
		{
		}
	}
	[Token(Token = "0x2000517")]
	public class Mapping3D : MonoBehaviour
	{
		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _cubePrefab;

		[Token(Token = "0x400279C")]
		private const int MaxCubes = 48;

		[Token(Token = "0x400279D")]
		private const float SpawnTime = 0.25f;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _timer;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _cubes;

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xFE2118", Offset = "0xFE2118", VA = "0xFE2118")]
		private void Update()
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xFE21B8", Offset = "0xFE21B8", VA = "0xFE21B8")]
		private void SpawnCube()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0xFE23C0", Offset = "0xFE23C0", VA = "0xFE23C0")]
		private void RemoveCube()
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xFE246C", Offset = "0xFE246C", VA = "0xFE246C")]
		public Mapping3D()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class SampleApp_Multiple : MonoBehaviour
	{
		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_videoPath;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer.FileLocation m_videoLocation;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_NumVideosAdded;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DisplayUGUI> m_aAddedVideos;

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xFE30EC", Offset = "0xFE30EC", VA = "0xFE30EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xFE33E4", Offset = "0xFE33E4", VA = "0xFE33E4")]
		private void UpdateVideosLayout()
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xFE3664", Offset = "0xFE3664", VA = "0xFE3664")]
		public void AddVideoClicked()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xFE3928", Offset = "0xFE3928", VA = "0xFE3928")]
		public void RemoveVideoClicked()
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xFE3AB4", Offset = "0xFE3AB4", VA = "0xFE3AB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0xFE3C08", Offset = "0xFE3C08", VA = "0xFE3C08")]
		public SampleApp_Multiple()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class ChangeAudioTrack : MonoBehaviour
	{
		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _trackIndex;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _isQueued;

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xFE0A04", Offset = "0xFE0A04", VA = "0xFE0A04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0xFE0A10", Offset = "0xFE0A10", VA = "0xFE0A10")]
		private void Update()
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0xFE0A4C", Offset = "0xFE0A4C", VA = "0xFE0A4C")]
		private bool IsVideoLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0xFE0B74", Offset = "0xFE0B74", VA = "0xFE0B74")]
		private static bool DoChangeAudioTrack(MediaPlayer mp, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0xFE0D54", Offset = "0xFE0D54", VA = "0xFE0D54")]
		public ChangeAudioTrack()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class ChangeStereoMode : MonoBehaviour
	{
		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ApplyToMesh _applyToMesh;

		[Token(Token = "0x600270D")]
		[Address(RVA = "0xFE0D5C", Offset = "0xFE0D5C", VA = "0xFE0D5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0xFE0EB0", Offset = "0xFE0EB0", VA = "0xFE0EB0")]
		public ChangeStereoMode()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class ChangeVideoExample : MonoBehaviour
	{
		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x600270F")]
		[Address(RVA = "0xFE0EB8", Offset = "0xFE0EB8", VA = "0xFE0EB8")]
		public void LoadVideo(string filePath)
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0xFE0EE0", Offset = "0xFE0EE0", VA = "0xFE0EE0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0xFE109C", Offset = "0xFE109C", VA = "0xFE109C")]
		public ChangeVideoExample()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class LoadFromBuffer : MonoBehaviour
	{
		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x6002712")]
		[Address(RVA = "0xFE1DC0", Offset = "0xFE1DC0", VA = "0xFE1DC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0xFE1E88", Offset = "0xFE1E88", VA = "0xFE1E88")]
		public LoadFromBuffer()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class LoadFromBufferInChunks : MonoBehaviour
	{
		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x6002714")]
		[Address(RVA = "0xFE1EE8", Offset = "0xFE1EE8", VA = "0xFE1EE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0xFE20B8", Offset = "0xFE20B8", VA = "0xFE20B8")]
		public LoadFromBufferInChunks()
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class NativeMediaOpen : MonoBehaviour
	{
		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _player;

		[Token(Token = "0x6002716")]
		[Address(RVA = "0xFE24E8", Offset = "0xFE24E8", VA = "0xFE24E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0xFE24EC", Offset = "0xFE24EC", VA = "0xFE24EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0xFE24F0", Offset = "0xFE24F0", VA = "0xFE24F0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xFE2784", Offset = "0xFE2784", VA = "0xFE2784")]
		public NativeMediaOpen()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class PlaybackSync : MonoBehaviour
	{
		[Token(Token = "0x200081E")]
		private enum State
		{
			[Token(Token = "0x40034C9")]
			Loading,
			[Token(Token = "0x40034CA")]
			Playing,
			[Token(Token = "0x40034CB")]
			Finished
		}

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _masterPlayer;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer[] _slavePlayers;

		[Token(Token = "0x40027B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _toleranceMs;

		[Token(Token = "0x40027B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _matchVideo;

		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool _muteSlaves;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private State _state;

		[Token(Token = "0x600271A")]
		[Address(RVA = "0xFE278C", Offset = "0xFE278C", VA = "0xFE278C")]
		private void Start()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xFE2840", Offset = "0xFE2840", VA = "0xFE2840")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xFE2D00", Offset = "0xFE2D00", VA = "0xFE2D00")]
		private bool IsAllVideosLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0xFE2EA0", Offset = "0xFE2EA0", VA = "0xFE2EA0")]
		private static bool IsVideoLoaded(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0xFE2D80", Offset = "0xFE2D80", VA = "0xFE2D80")]
		private static bool IsPlaybackFinished(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xFE30D4", Offset = "0xFE30D4", VA = "0xFE30D4")]
		public PlaybackSync()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class StartEndPoint : MonoBehaviour
	{
		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _startPointSeconds;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _endPointSeconds;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _loop;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C0F8", Offset = "0x86C0F8")]
		public float _startLoopSeconds;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isStartQueued;

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xFE757C", Offset = "0xFE757C", VA = "0xFE757C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xFE7588", Offset = "0xFE7588", VA = "0xFE7588")]
		private void Update()
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xFE75F4", Offset = "0xFE75F4", VA = "0xFE75F4")]
		private static bool IsVideoLoaded(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xFE7714", Offset = "0xFE7714", VA = "0xFE7714")]
		private static void DoStart(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xFE7804", Offset = "0xFE7804", VA = "0xFE7804")]
		private static void DoCheckEnd(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0xFE7994", Offset = "0xFE7994", VA = "0xFE7994")]
		private static void DoCheckLoop(MediaPlayer mp, float positionSeconds, float positionLoop)
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xFE7BAC", Offset = "0xFE7BAC", VA = "0xFE7BAC")]
		public StartEndPoint()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class VideoTrigger : MonoBehaviour
	{
		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _fadeTimeMs;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _fade;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _fadeDirection;

		[Token(Token = "0x6002727")]
		[Address(RVA = "0xFE9BF0", Offset = "0xFE9BF0", VA = "0xFE9BF0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xFE9C84", Offset = "0xFE9C84", VA = "0xFE9C84")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0xFE9D04", Offset = "0xFE9D04", VA = "0xFE9D04")]
		private void Update()
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0xFE9ED8", Offset = "0xFE9ED8", VA = "0xFE9ED8")]
		public VideoTrigger()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class SimpleController : MonoBehaviour
	{
		[Token(Token = "0x200081F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E698", Offset = "0x85E698")]
		private sealed class <LoadVideoWithFading>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40034CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40034CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40034CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleController <>4__this;

			[Token(Token = "0x40034CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fade>5__2;

			[Token(Token = "0x17000599")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031F5")]
				[Address(RVA = "0xFE6F3C", Offset = "0xFE6F3C", VA = "0xFE6F3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031F7")]
				[Address(RVA = "0xFE6FA4", Offset = "0xFE6FA4", VA = "0xFE6FA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031F2")]
			[Address(RVA = "0xFE4854", Offset = "0xFE4854", VA = "0xFE4854")]
			[DebuggerHidden]
			public <LoadVideoWithFading>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60031F3")]
			[Address(RVA = "0xFE6A34", Offset = "0xFE6A34", VA = "0xFE6A34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031F4")]
			[Address(RVA = "0xFE6A38", Offset = "0xFE6A38", VA = "0xFE6A38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031F6")]
			[Address(RVA = "0xFE6F44", Offset = "0xFE6F44", VA = "0xFE6F44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _folder;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] _filenames;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] _streams;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DisplayIMGUI _display;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GUISkin _guiSkin;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _width;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _height;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _durationSeconds;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool _useFading;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Queue<string> _eventLog;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _eventTimer;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private MediaPlayer.FileLocation _nextVideoLocation;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _nextVideoPath;

		[Token(Token = "0x600272B")]
		[Address(RVA = "0xFE3C90", Offset = "0xFE3C90", VA = "0xFE3C90")]
		private void Start()
		{
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xFE3D38", Offset = "0xFE3D38", VA = "0xFE3D38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xFE3DE0", Offset = "0xFE3DE0", VA = "0xFE3DE0")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xFE4054", Offset = "0xFE4054", VA = "0xFE4054")]
		private void AddEvent(MediaPlayerEvent.EventType et)
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0xFE3E14", Offset = "0xFE3E14", VA = "0xFE3E14")]
		private void GatherProperties()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xFE41B4", Offset = "0xFE41B4", VA = "0xFE41B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xFE439C", Offset = "0xFE439C", VA = "0xFE439C")]
		private void LoadVideo(string filePath, bool url = false)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xFE448C", Offset = "0xFE448C", VA = "0xFE448C")]
		private static bool VideoIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xFE45B0", Offset = "0xFE45B0", VA = "0xFE45B0")]
		private static bool AudioIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xFE47E4", Offset = "0xFE47E4", VA = "0xFE47E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876CEC", Offset = "0x876CEC")]
		private IEnumerator LoadVideoWithFading()
		{
			return null;
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xFE4880", Offset = "0xFE4880", VA = "0xFE4880")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xFE68C4", Offset = "0xFE68C4", VA = "0xFE68C4")]
		public SimpleController()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class SphereDemo : MonoBehaviour
	{
		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _zeroCameraPosition;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _allowRecenter;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _allowVrToggle;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool _lockPitch;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _spinX;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _spinY;

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xFE6FAC", Offset = "0xFE6FAC", VA = "0xFE6FAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0xFE70A0", Offset = "0xFE70A0", VA = "0xFE70A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xFE70DC", Offset = "0xFE70DC", VA = "0xFE70DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xFE74C4", Offset = "0xFE74C4", VA = "0xFE74C4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xFE756C", Offset = "0xFE756C", VA = "0xFE756C")]
		public SphereDemo()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class VCR : MonoBehaviour
	{
		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer _mediaPlayerB;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DisplayUGUI _mediaDisplay;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform _bufferedSliderRect;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider _videoSeekSlider;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _setVideoSeekSliderValue;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _wasPlayingOnScrub;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider _audioVolumeSlider;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _setAudioVolumeSliderValue;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle _AutoStartToggle;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle _MuteToggle;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MediaPlayer.FileLocation _location;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string _folder;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] _videoFiles;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _VideoIndex;

		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Image _bufferedSliderImage;

		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MediaPlayer _loadingPlayer;

		[Token(Token = "0x17000359")]
		public MediaPlayer PlayingPlayer
		{
			[Token(Token = "0x600273C")]
			[Address(RVA = "0xFE7BB4", Offset = "0xFE7BB4", VA = "0xFE7BB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		public MediaPlayer LoadingPlayer
		{
			[Token(Token = "0x600273D")]
			[Address(RVA = "0xFE7C48", Offset = "0xFE7C48", VA = "0xFE7C48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xFE7C50", Offset = "0xFE7C50", VA = "0xFE7C50")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xFE7E38", Offset = "0xFE7E38", VA = "0xFE7E38")]
		public void OnOpenVideoFile()
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xFE7FBC", Offset = "0xFE7FBC", VA = "0xFE7FBC")]
		public void OnAutoStartChange()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xFE8178", Offset = "0xFE8178", VA = "0xFE8178")]
		public void OnMuteChange()
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xFE8378", Offset = "0xFE8378", VA = "0xFE8378")]
		public void OnPlayButton()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0xFE8490", Offset = "0xFE8490", VA = "0xFE8490")]
		public void OnPauseButton()
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xFE85A8", Offset = "0xFE85A8", VA = "0xFE85A8")]
		public void OnVideoSeekSlider()
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0xFE87D8", Offset = "0xFE87D8", VA = "0xFE87D8")]
		public void OnVideoSliderDown()
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xFE8994", Offset = "0xFE8994", VA = "0xFE8994")]
		public void OnVideoSliderUp()
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0xFE8AB0", Offset = "0xFE8AB0", VA = "0xFE8AB0")]
		public void OnAudioVolumeSlider()
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xFE8D7C", Offset = "0xFE8D7C", VA = "0xFE8D7C")]
		public void OnRewindButton()
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xFE8E94", Offset = "0xFE8E94", VA = "0xFE8E94")]
		private void Awake()
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xFE8EA0", Offset = "0xFE8EA0", VA = "0xFE8EA0")]
		private void Start()
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0xFE9150", Offset = "0xFE9150", VA = "0xFE9150")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0xFE92D8", Offset = "0xFE92D8", VA = "0xFE92D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0xFE99FC", Offset = "0xFE99FC", VA = "0xFE99FC")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0xFE9AE8", Offset = "0xFE9AE8", VA = "0xFE9AE8")]
		public VCR()
		{
		}
	}
}
namespace System
{
	[Token(Token = "0x2000525")]
	public static class ObjectExtensions
	{
		[Token(Token = "0x2000820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E6A8", Offset = "0x85E6A8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40034D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IDictionary<object, object> visited;

			[Token(Token = "0x60031F8")]
			[Address(RVA = "0xE6ABB4", Offset = "0xE6ABB4", VA = "0xE6ABB4")]
			public <>c__DisplayClass3_0()
			{
			}
		}

		[Token(Token = "0x2000821")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E6B8", Offset = "0x85E6B8")]
		private sealed class <>c__DisplayClass3_1
		{
			[Token(Token = "0x40034D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Array clonedArray;

			[Token(Token = "0x40034D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass3_0 CS$<>8__locals1;

			[Token(Token = "0x60031F9")]
			[Address(RVA = "0xE6ABBC", Offset = "0xE6ABBC", VA = "0xE6ABBC")]
			public <>c__DisplayClass3_1()
			{
			}

			[Token(Token = "0x60031FA")]
			[Address(RVA = "0xE6B0A0", Offset = "0xE6B0A0", VA = "0xE6B0A0")]
			internal void <InternalCopy>b__0(Array array, int[] indices)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000822")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E6C8", Offset = "0x85E6C8")]
		private sealed class <>c
		{
			[Token(Token = "0x40034D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40034D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FieldInfo, bool> <>9__4_0;

			[Token(Token = "0x60031FC")]
			[Address(RVA = "0xE6B07C", Offset = "0xE6B07C", VA = "0xE6B07C")]
			public <>c()
			{
			}

			[Token(Token = "0x60031FD")]
			[Address(RVA = "0xE6B084", Offset = "0xE6B084", VA = "0xE6B084")]
			internal bool <RecursiveCopyBaseTypePrivateFields>b__4_0(FieldInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly MethodInfo CloneMethod;

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xE6A5D0", Offset = "0xE6A5D0", VA = "0xE6A5D0")]
		public static bool IsPrimitive(this Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xE6A690", Offset = "0xE6A690", VA = "0xE6A690")]
		public static object Copy(this object originalObject)
		{
			return null;
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0xE6A790", Offset = "0xE6A790", VA = "0xE6A790")]
		private static object InternalCopy(object originalObject, IDictionary<object, object> visited)
		{
			return null;
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xE6AD6C", Offset = "0xE6AD6C", VA = "0xE6AD6C")]
		private static void RecursiveCopyBaseTypePrivateFields(object originalObject, IDictionary<object, object> visited, object cloneObject, Type typeToReflect)
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xE6ABC4", Offset = "0xE6ABC4", VA = "0xE6ABC4")]
		private static void CopyFields(object originalObject, IDictionary<object, object> visited, object cloneObject, Type typeToReflect, BindingFlags bindingFlags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.FlattenHierarchy, [Optional] Func<FieldInfo, bool> filter)
		{
		}

		[Token(Token = "0x6002754")]
		public static T Copy<T>(this T original)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000526")]
	public class ReferenceEqualityComparer : EqualityComparer<object>
	{
		[Token(Token = "0x6002756")]
		[Address(RVA = "0xE6B158", Offset = "0xE6B158", VA = "0xE6B158", Slot = "8")]
		public override bool Equals(object x, object y)
		{
			return default(bool);
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0xE6B164", Offset = "0xE6B164", VA = "0xE6B164", Slot = "9")]
		public override int GetHashCode(object obj)
		{
			return default(int);
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0xE6A740", Offset = "0xE6A740", VA = "0xE6A740")]
		public ReferenceEqualityComparer()
		{
		}
	}
}
namespace System.ArrayExtensions
{
	[Token(Token = "0x2000527")]
	public static class ArrayExtensions
	{
		[Token(Token = "0x6002759")]
		[Address(RVA = "0xE6A340", Offset = "0xE6A340", VA = "0xE6A340")]
		public static void ForEach(this Array array, Action<Array, int[]> action)
		{
		}
	}
	[Token(Token = "0x2000528")]
	internal class ArrayTraverse
	{
		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] Position;

		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] maxLengths;

		[Token(Token = "0x600275A")]
		[Address(RVA = "0xE6A3F0", Offset = "0xE6A3F0", VA = "0xE6A3F0")]
		public ArrayTraverse(Array array)
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xE6A50C", Offset = "0xE6A50C", VA = "0xE6A50C")]
		public bool Step()
		{
			return default(bool);
		}
	}
}
namespace Virtence.VText
{
	[Token(Token = "0x2000529")]
	public class VFontHash
	{
		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Hashtable fonts;

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xC185B4", Offset = "0xC185B4", VA = "0xC185B4")]
		static VFontHash()
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xC10470", Offset = "0xC10470", VA = "0xC10470")]
		public static VFontInfo GetFontInfo(string fontname)
		{
			return null;
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xC18620", Offset = "0xC18620", VA = "0xC18620")]
		public VFontHash()
		{
		}
	}
	[Token(Token = "0x200052A")]
	public struct FontBounds
	{
		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minX;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float maxX;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float minY;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float maxY;
	}
	[Token(Token = "0x200052B")]
	public class VFontInfo
	{
		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Hashtable m_glyphs;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IntPtr m_fontHandle;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FontBounds m_bounds;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string m_fontName;

		[Token(Token = "0x1700035B")]
		public float glyphMinX
		{
			[Token(Token = "0x600275F")]
			[Address(RVA = "0xC18628", Offset = "0xC18628", VA = "0xC18628")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035C")]
		public float glyphMaxX
		{
			[Token(Token = "0x6002760")]
			[Address(RVA = "0xC18630", Offset = "0xC18630", VA = "0xC18630")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035D")]
		public float glyphMinY
		{
			[Token(Token = "0x6002761")]
			[Address(RVA = "0xC18638", Offset = "0xC18638", VA = "0xC18638")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035E")]
		public float glyphMaxY
		{
			[Token(Token = "0x6002762")]
			[Address(RVA = "0xC18640", Offset = "0xC18640", VA = "0xC18640")]
			get
			{
				return default(float);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002763")]
		[Address(RVA = "0xC18648", Offset = "0xC18648", VA = "0xC18648")]
		private static extern IntPtr OpenFont([In] IntPtr fontFilename);

		[PreserveSig]
		[Token(Token = "0x6002764")]
		[Address(RVA = "0xC186C4", Offset = "0xC186C4", VA = "0xC186C4")]
		private static extern void CloseFont([In] IntPtr fontHandle);

		[PreserveSig]
		[Token(Token = "0x6002765")]
		[Address(RVA = "0xC18744", Offset = "0xC18744", VA = "0xC18744")]
		private static extern float GetAscender([In] IntPtr fontHandle);

		[PreserveSig]
		[Token(Token = "0x6002766")]
		[Address(RVA = "0xC187C4", Offset = "0xC187C4", VA = "0xC187C4")]
		private static extern float GetDescender([In] IntPtr fontHandle);

		[PreserveSig]
		[Token(Token = "0x6002767")]
		[Address(RVA = "0xC18844", Offset = "0xC18844", VA = "0xC18844")]
		private static extern bool GetFontBounds([Out] IntPtr b, [In] IntPtr fontHandle);

		[PreserveSig]
		[Token(Token = "0x6002768")]
		[Address(RVA = "0xC188DC", Offset = "0xC188DC", VA = "0xC188DC")]
		private static extern bool GetKerning2(ref float kx, ref float ky, [In] IntPtr fontHandle, uint first, uint second);

		[PreserveSig]
		[Token(Token = "0x6002769")]
		[Address(RVA = "0xC18994", Offset = "0xC18994", VA = "0xC18994")]
		private static extern void SetQuality([In] IntPtr fontHandle, int percent);

		[Token(Token = "0x600276A")]
		[Address(RVA = "0xC18A24", Offset = "0xC18A24", VA = "0xC18A24")]
		private void SafeOpenFont(string fn)
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0xC100D4", Offset = "0xC100D4", VA = "0xC100D4")]
		public VFontInfo(string fontname)
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0xC18D38", Offset = "0xC18D38", VA = "0xC18D38", Slot = "1")]
		~VFontInfo()
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0xC0F660", Offset = "0xC0F660", VA = "0xC0F660")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0xC103F0", Offset = "0xC103F0", VA = "0xC103F0")]
		public void SetQuality(int percent)
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0xC18DA0", Offset = "0xC18DA0", VA = "0xC18DA0")]
		protected VGlyphInfo FetchGlyphInfo(Hashtable glyphs, char c)
		{
			return null;
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0xC191A0", Offset = "0xC191A0", VA = "0xC191A0")]
		protected Vector2 Kerning(char a, char b)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0xC19250", Offset = "0xC19250", VA = "0xC19250")]
		public Vector2 LineSize(VTextInterface vtext, string str)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xC11550", Offset = "0xC11550", VA = "0xC11550")]
		public Bounds GetBounds(VTextInterface vtext, string str)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0xC1090C", Offset = "0xC1090C", VA = "0xC1090C")]
		public void LayoutText3D(VTextInterface vtext, string str)
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0xC10468", Offset = "0xC10468", VA = "0xC10468")]
		public void CreateText3D(VTextInterface vtext, string str)
		{
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0xC19460", Offset = "0xC19460", VA = "0xC19460")]
		protected void CreateText(VTextInterface vtext, string str, bool layoutOnly)
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class VGlyphInfo
	{
		[Token(Token = "0x2000823")]
		public struct GlyphInfo
		{
			[Token(Token = "0x40034D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float sizeX;

			[Token(Token = "0x40034D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float sizeY;

			[Token(Token = "0x40034D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float advanceX;

			[Token(Token = "0x40034D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float advanceY;

			[Token(Token = "0x40034D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float horizBearingX;

			[Token(Token = "0x40034DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float horizBearingY;

			[Token(Token = "0x40034DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float vertBearingX;

			[Token(Token = "0x40034DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float vertBearingY;

			[Token(Token = "0x40034DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numContours;
		}

		[Token(Token = "0x2000824")]
		protected class BaseAttributes
		{
			[Token(Token = "0x40034DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 _v;

			[Token(Token = "0x40034DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 _bv;

			[Token(Token = "0x40034E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 _n;

			[Token(Token = "0x40034E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector2 _uv;

			[Token(Token = "0x60031FE")]
			[Address(RVA = "0xC66014", Offset = "0xC66014", VA = "0xC66014")]
			public BaseAttributes(Vector3 v, Vector3 bv, Vector3 n, float dist)
			{
			}
		}

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 size;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 advance;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 horizontalBearing;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 verticalBearing;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected char _id;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Mesh _mesh;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IntPtr _fh;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _numContours;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[][] _contours;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int[] sideIndices;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int[] bevelIndices;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Vector3 zVector;

		[PreserveSig]
		[Token(Token = "0x6002776")]
		[Address(RVA = "0xC1B68C", Offset = "0xC1B68C", VA = "0xC1B68C")]
		private static extern bool GetGlyphInfo([Out] IntPtr gi, [In] IntPtr fontHandle, [In] uint id);

		[PreserveSig]
		[Token(Token = "0x6002777")]
		[Address(RVA = "0xC1B72C", Offset = "0xC1B72C", VA = "0xC1B72C")]
		private static extern int GetGlyphVertices(ref IntPtr buffer, [In] IntPtr fontHandle, [In] uint id);

		[PreserveSig]
		[Token(Token = "0x6002778")]
		[Address(RVA = "0xC1B7C4", Offset = "0xC1B7C4", VA = "0xC1B7C4")]
		private static extern int GetGlyphTriangleIndices(ref IntPtr buffer, [In] IntPtr fontHandle, [In] uint id);

		[PreserveSig]
		[Token(Token = "0x6002779")]
		[Address(RVA = "0xC1B85C", Offset = "0xC1B85C", VA = "0xC1B85C")]
		private static extern void ClearGlyphData([In] IntPtr fontHandle, [In] uint id);

		[PreserveSig]
		[Token(Token = "0x600277A")]
		[Address(RVA = "0xC1B8EC", Offset = "0xC1B8EC", VA = "0xC1B8EC")]
		private static extern int GetGlyphContour(ref IntPtr buffer, [In] IntPtr fontHandle, [In] uint id, [In] int index, ref bool odd, ref bool reverse);

		[Token(Token = "0x600277B")]
		[Address(RVA = "0xC1B9DC", Offset = "0xC1B9DC", VA = "0xC1B9DC")]
		private VGlyphInfo()
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0xC1BA3C", Offset = "0xC1BA3C", VA = "0xC1BA3C", Slot = "1")]
		~VGlyphInfo()
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0xC18F2C", Offset = "0xC18F2C", VA = "0xC18F2C")]
		public VGlyphInfo(IntPtr fontHandle, char id)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0xC1BA48", Offset = "0xC1BA48", VA = "0xC1BA48")]
		protected bool fetchNext(ref Vector3 v, Vector3[] contour, int startIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0xC1BB98", Offset = "0xC1BB98", VA = "0xC1BB98")]
		protected void CreateSides(VTextParameter p)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0xC1AA28", Offset = "0xC1AA28", VA = "0xC1AA28")]
		public Mesh GetMesh(Vector2 shift, Vector2 size, VTextInterface vtext, float ascender)
		{
			return null;
		}
	}
}
namespace Virtence.VText.Demo
{
	[Token(Token = "0x200052D")]
	public class ColorChangeScript : MonoBehaviour
	{
		[Token(Token = "0x2000825")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E6D8", Offset = "0x85E6D8")]
		private sealed class <ChangeColor>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40034E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40034E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40034E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColorChangeScript <>4__this;

			[Token(Token = "0x1700059B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003202")]
				[Address(RVA = "0xC159FC", Offset = "0xC159FC", VA = "0xC159FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003204")]
				[Address(RVA = "0xC15A64", Offset = "0xC15A64", VA = "0xC15A64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031FF")]
			[Address(RVA = "0xC1588C", Offset = "0xC1588C", VA = "0xC1588C")]
			[DebuggerHidden]
			public <ChangeColor>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6003200")]
			[Address(RVA = "0xC158C8", Offset = "0xC158C8", VA = "0xC158C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003201")]
			[Address(RVA = "0xC158CC", Offset = "0xC158CC", VA = "0xC158CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003203")]
			[Address(RVA = "0xC15A04", Offset = "0xC15A04", VA = "0xC15A04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C190", Offset = "0x86C190")]
		public float ColorDuration;

		[Token(Token = "0x40027FD")]
		private const string COLOR_CHANGE_COROUTINE = "ChangeColor";

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x6002781")]
		[Address(RVA = "0xC1576C", Offset = "0xC1576C", VA = "0xC1576C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0xC1581C", Offset = "0xC1581C", VA = "0xC1581C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876D90", Offset = "0x876D90")]
		private IEnumerator ChangeColor()
		{
			return null;
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0xC158B8", Offset = "0xC158B8", VA = "0xC158B8")]
		public ColorChangeScript()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public class HighlightGlyph : MonoBehaviour
	{
		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C1C8", Offset = "0x86C1C8")]
		public Color HighlightColor;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer _renderer;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _defaultColor;

		[Token(Token = "0x6002784")]
		[Address(RVA = "0xC15A6C", Offset = "0xC15A6C", VA = "0xC15A6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0xC15B24", Offset = "0xC15B24", VA = "0xC15B24")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0xC15B64", Offset = "0xC15B64", VA = "0xC15B64")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0xC15BA4", Offset = "0xC15BA4", VA = "0xC15BA4")]
		public HighlightGlyph()
		{
		}
	}
	[Token(Token = "0x200052F")]
	public class RotateGlyphs : MonoBehaviour
	{
		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C200", Offset = "0x86C200")]
		public float RotationSpeed;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Clockwise;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _transform;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer _renderer;

		[Token(Token = "0x6002788")]
		[Address(RVA = "0xC15ED0", Offset = "0xC15ED0", VA = "0xC15ED0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0xC15F38", Offset = "0xC15F38", VA = "0xC15F38")]
		private void Update()
		{
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0xC16098", Offset = "0xC16098", VA = "0xC16098")]
		public RotateGlyphs()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class AudioVisualizer : MonoBehaviour
	{
		[Token(Token = "0x2000826")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E6E8", Offset = "0x85E6E8")]
		private sealed class <Animate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40034E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40034E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40034E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioVisualizer <>4__this;

			[Token(Token = "0x40034E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x1700059D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003208")]
				[Address(RVA = "0xC156FC", Offset = "0xC156FC", VA = "0xC156FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600320A")]
				[Address(RVA = "0xC15764", Offset = "0xC15764", VA = "0xC15764", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003205")]
			[Address(RVA = "0xC153E8", Offset = "0xC153E8", VA = "0xC153E8")]
			[DebuggerHidden]
			public <Animate>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6003206")]
			[Address(RVA = "0xC15480", Offset = "0xC15480", VA = "0xC15480", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003207")]
			[Address(RVA = "0xC15484", Offset = "0xC15484", VA = "0xC15484", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003209")]
			[Address(RVA = "0xC15704", Offset = "0xC15704", VA = "0xC15704", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C238", Offset = "0x86C238")]
		public VTextInterface DancingText;

		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C270", Offset = "0x86C270")]
		public float Amplitude;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C2A8", Offset = "0x86C2A8")]
		public float LerpDuration;

		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C2E0", Offset = "0x86C2E0")]
		public float MaxAmplitude;

		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C318", Offset = "0x86C318")]
		public float AmplitudeToReact;

		[Token(Token = "0x400280B")]
		private const string EQUALIZER_ANIMATION = "Animate";

		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource _audioSource;

		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] _samples;

		[Token(Token = "0x600278B")]
		[Address(RVA = "0xC151D8", Offset = "0xC151D8", VA = "0xC151D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0xC1534C", Offset = "0xC1534C", VA = "0xC1534C")]
		private void Update()
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0xC15378", Offset = "0xC15378", VA = "0xC15378")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876DF4", Offset = "0x876DF4")]
		private IEnumerator Animate()
		{
			return null;
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0xC15414", Offset = "0xC15414", VA = "0xC15414")]
		public AudioVisualizer()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C350", Offset = "0x86C350")]
		public GameObject BallPrefab;

		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C388", Offset = "0x86C388")]
		public float BallSpawnOffset;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C3C0", Offset = "0x86C3C0")]
		public float BallSpeed;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C3F8", Offset = "0x86C3F8")]
		public float BallLifeTime;

		[Token(Token = "0x600278F")]
		[Address(RVA = "0xC15BD8", Offset = "0xC15BD8", VA = "0xC15BD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0xC15BDC", Offset = "0xC15BDC", VA = "0xC15BDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0xC15EB4", Offset = "0xC15EB4", VA = "0xC15EB4")]
		public Player()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class SceneManager : MonoBehaviour
	{
		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C430", Offset = "0x86C430")]
		public List<VTextInterface> VTexts;

		[Token(Token = "0x6002792")]
		[Address(RVA = "0xC160A8", Offset = "0xC160A8", VA = "0xC160A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0xC160AC", Offset = "0xC160AC", VA = "0xC160AC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0xC161A4", Offset = "0xC161A4", VA = "0xC161A4")]
		public SceneManager()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class SunController : MonoBehaviour
	{
		[Token(Token = "0x2000827")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85E6F8", Offset = "0x85E6F8")]
		private sealed class <ChangeColor>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40034E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40034EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40034EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SunController <>4__this;

			[Token(Token = "0x1700059F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600320E")]
				[Address(RVA = "0xC16580", Offset = "0xC16580", VA = "0xC16580", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003210")]
				[Address(RVA = "0xC165E8", Offset = "0xC165E8", VA = "0xC165E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600320B")]
			[Address(RVA = "0xC16390", Offset = "0xC16390", VA = "0xC16390")]
			[DebuggerHidden]
			public <ChangeColor>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600320C")]
			[Address(RVA = "0xC163CC", Offset = "0xC163CC", VA = "0xC163CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600320D")]
			[Address(RVA = "0xC163D0", Offset = "0xC163D0", VA = "0xC163D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600320F")]
			[Address(RVA = "0xC16588", Offset = "0xC16588", VA = "0xC16588", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C468", Offset = "0x86C468")]
		public GameObject Shout;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C4A0", Offset = "0x86C4A0")]
		public Color HitColor;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C4D8", Offset = "0x86C4D8")]
		public float HitDuration;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C510", Offset = "0x86C510")]
		public float ShoutDuration;

		[Token(Token = "0x4002817")]
		private const string CHANGE_COLOR_COROUTINE = "ChangeColor";

		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color _defaultColor;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Renderer _renderer;

		[Token(Token = "0x6002795")]
		[Address(RVA = "0xC161AC", Offset = "0xC161AC", VA = "0xC161AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0xC162BC", Offset = "0xC162BC", VA = "0xC162BC")]
		private void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0xC16320", Offset = "0xC16320", VA = "0xC16320")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x876E58", Offset = "0x876E58")]
		private IEnumerator ChangeColor()
		{
			return null;
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0xC163BC", Offset = "0xC163BC", VA = "0xC163BC")]
		public SunController()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public class AnimGlyphs : MonoBehaviour
	{
		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Amplitude;

		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FrequencyFactor;

		[Token(Token = "0x6002799")]
		[Address(RVA = "0xC15040", Offset = "0xC15040", VA = "0xC15040")]
		private void Update()
		{
		}

		[Token(Token = "0x600279A")]
		[Address(RVA = "0xC151C4", Offset = "0xC151C4", VA = "0xC151C4")]
		public AnimGlyphs()
		{
		}
	}
	[Token(Token = "0x2000535")]
	public class TimeTexter : MonoBehaviour
	{
		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VTextInterface vti;

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string timeString;

		[Token(Token = "0x600279B")]
		[Address(RVA = "0xC165F0", Offset = "0xC165F0", VA = "0xC165F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0xC16648", Offset = "0xC16648", VA = "0xC16648")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0xC166DC", Offset = "0xC166DC", VA = "0xC166DC")]
		public TimeTexter()
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0xC16734", Offset = "0xC16734", VA = "0xC16734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876EBC", Offset = "0x876EBC")]
		private void <LateUpdate>b__3_0()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class UIController : MonoBehaviour
	{
		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C548", Offset = "0x86C548")]
		public VtextHandler VTextController;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86C580", Offset = "0x86C580")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C580", Offset = "0x86C580")]
		public Text FontNameLabel;

		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C5E0", Offset = "0x86C5E0")]
		public Slider SizeSlider;

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C618", Offset = "0x86C618")]
		public Slider DepthSlider;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C650", Offset = "0x86C650")]
		public Slider BevelSlider;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86C688", Offset = "0x86C688")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C688", Offset = "0x86C688")]
		public Toggle MajorModeLeftToggle;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C6E8", Offset = "0x86C6E8")]
		public Toggle MajorModeCenterToggle;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C720", Offset = "0x86C720")]
		public Toggle MajorModeRightToggle;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C758", Offset = "0x86C758")]
		public Toggle MajorModeBlockToggle;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x86C790", Offset = "0x86C790")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x86C790", Offset = "0x86C790")]
		public Toggle UseLightProbesToggle;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _currentFontIndex;

		[Token(Token = "0x600279F")]
		[Address(RVA = "0xC16818", Offset = "0xC16818", VA = "0xC16818")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0xC16CE4", Offset = "0xC16CE4", VA = "0xC16CE4")]
		private void Start()
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0xC16CE8", Offset = "0xC16CE8", VA = "0xC16CE8")]
		public void SelectNextFont()
		{
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0xC16DB0", Offset = "0xC16DB0", VA = "0xC16DB0")]
		public void SelectPreviousFont()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0xC16DBC", Offset = "0xC16DBC", VA = "0xC16DBC")]
		public void SetSize(float value)
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0xC16EFC", Offset = "0xC16EFC", VA = "0xC16EFC")]
		public void SetDepth(float value)
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0xC1703C", Offset = "0xC1703C", VA = "0xC1703C")]
		public void SetBevel(float value)
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0xC1717C", Offset = "0xC1717C", VA = "0xC1717C")]
		public void SetMajorLayoutLeft(bool enabled)
		{
		}

		[Token(Token = "0x60027A7")]
		[Address(RVA = "0xC171E0", Offset = "0xC171E0", VA = "0xC171E0")]
		public void SetMajorLayoutCenter(bool enabled)
		{
		}

		[Token(Token = "0x60027A8")]
		[Address(RVA = "0xC17204", Offset = "0xC17204", VA = "0xC17204")]
		public void SetMajorLayoutRight(bool enabled)
		{
		}

		[Token(Token = "0x60027A9")]
		[Address(RVA = "0xC17228", Offset = "0xC17228", VA = "0xC17228")]
		public void SetMajorLayoutBlock(bool enabled)
		{
		}

		[Token(Token = "0x60027AA")]
		[Address(RVA = "0xC16CF4", Offset = "0xC16CF4", VA = "0xC16CF4")]
		private void SetFontByIndex(int index)
		{
		}

		[Token(Token = "0x60027AB")]
		[Address(RVA = "0xC17270", Offset = "0xC17270", VA = "0xC17270")]
		public void EnableLightProbes(bool enable)
		{
		}

		[Token(Token = "0x60027AC")]
		[Address(RVA = "0xC1733C", Offset = "0xC1733C", VA = "0xC1733C")]
		private void OnFontNameChanged(object sender, GenericEventArgs<string> e)
		{
		}

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0xC17440", Offset = "0xC17440", VA = "0xC17440")]
		private void OnSizeChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x60027AE")]
		[Address(RVA = "0xC174AC", Offset = "0xC174AC", VA = "0xC174AC")]
		private void OnDepthChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0xC1756C", Offset = "0xC1756C", VA = "0xC1756C")]
		private void OnBevelChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0xC175D8", Offset = "0xC175D8", VA = "0xC175D8")]
		private void OnMajorLayoutChanged(object sender, GenericEventArgs<VTextLayout.align> e)
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0xC1768C", Offset = "0xC1768C", VA = "0xC1768C")]
		public UIController()
		{
		}
	}
	[Token(Token = "0x2000537")]
	public class VtextHandler : MonoBehaviour
	{
		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VTextInterface[] vti_time;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public VTextInterface vti_textOptions;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public VTextInterface vti_textured;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int old_headingValue;

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _minSize;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _maxSize;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _minDepth;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _maxDepth;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _minBevel;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _maxBevel;

		[Token(Token = "0x14000066")]
		public event EventHandler<GenericEventArgs<string>> FontNameChanged
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0xC169B0", Offset = "0xC169B0", VA = "0xC169B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876ECC", Offset = "0x876ECC")]
			add
			{
			}
			[Token(Token = "0x60027B3")]
			[Address(RVA = "0xC17694", Offset = "0xC17694", VA = "0xC17694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876EDC", Offset = "0x876EDC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event EventHandler<GenericEventArgs<float>> SizeValueChanged
		{
			[Token(Token = "0x60027B4")]
			[Address(RVA = "0xC16A54", Offset = "0xC16A54", VA = "0xC16A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876EEC", Offset = "0x876EEC")]
			add
			{
			}
			[Token(Token = "0x60027B5")]
			[Address(RVA = "0xC17738", Offset = "0xC17738", VA = "0xC17738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876EFC", Offset = "0x876EFC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public event EventHandler<GenericEventArgs<float>> DepthValueChanged
		{
			[Token(Token = "0x60027B6")]
			[Address(RVA = "0xC16AF8", Offset = "0xC16AF8", VA = "0xC16AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876F0C", Offset = "0x876F0C")]
			add
			{
			}
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0xC177DC", Offset = "0xC177DC", VA = "0xC177DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876F1C", Offset = "0x876F1C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event EventHandler<GenericEventArgs<float>> BevelValueChanged
		{
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xC16B9C", Offset = "0xC16B9C", VA = "0xC16B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876F2C", Offset = "0x876F2C")]
			add
			{
			}
			[Token(Token = "0x60027B9")]
			[Address(RVA = "0xC17880", Offset = "0xC17880", VA = "0xC17880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876F3C", Offset = "0x876F3C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event EventHandler<GenericEventArgs<VTextLayout.align>> MajorValueChanged
		{
			[Token(Token = "0x60027BA")]
			[Address(RVA = "0xC16C40", Offset = "0xC16C40", VA = "0xC16C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876F4C", Offset = "0x876F4C")]
			add
			{
			}
			[Token(Token = "0x60027BB")]
			[Address(RVA = "0xC17924", Offset = "0xC17924", VA = "0xC17924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876F5C", Offset = "0x876F5C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event EventHandler<GenericEventArgs<bool>> UseLightProbesChanged
		{
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0xC179C8", Offset = "0xC179C8", VA = "0xC179C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876F6C", Offset = "0x876F6C")]
			add
			{
			}
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0xC17A6C", Offset = "0xC17A6C", VA = "0xC17A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x876F7C", Offset = "0x876F7C")]
			remove
			{
			}
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0xC17B10", Offset = "0xC17B10", VA = "0xC17B10")]
		private void Start()
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0xC17F00", Offset = "0xC17F00", VA = "0xC17F00")]
		private void MessageLightprobes(bool lp)
		{
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0xC1728C", Offset = "0xC1728C", VA = "0xC1728C")]
		public void SetLightProbes(bool enableLightProbes)
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0xC1724C", Offset = "0xC1724C", VA = "0xC1724C")]
		public void SetFont(string fontName)
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0xC16E44", Offset = "0xC16E44", VA = "0xC16E44")]
		public void SetSize(float sizeValue)
		{
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0xC16F84", Offset = "0xC16F84", VA = "0xC16F84")]
		public void SetDepth(float depthValue)
		{
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0xC170C4", Offset = "0xC170C4", VA = "0xC170C4")]
		public void SetBevel(float bevelValue)
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0xC171A0", Offset = "0xC171A0", VA = "0xC171A0")]
		public void SetAlignment(VTextLayout.align alignment)
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0xC17FCC", Offset = "0xC17FCC", VA = "0xC17FCC")]
		private void TransformTxt(VTextLayout.align alignment)
		{
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0xC181C0", Offset = "0xC181C0", VA = "0xC181C0")]
		private void OnSizeChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0xC1828C", Offset = "0xC1828C", VA = "0xC1828C")]
		private void OnDepthChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0xC18358", Offset = "0xC18358", VA = "0xC18358")]
		private void OnBevelChanged(object sender, GenericEventArgs<float> e)
		{
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0xC18424", Offset = "0xC18424", VA = "0xC18424")]
		private void OnMajorLayoutChanged(object sender, GenericEventArgs<VTextLayout.align> e)
		{
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0xC1849C", Offset = "0xC1849C", VA = "0xC1849C")]
		private void OnUseLightProbesChanged(object sender, GenericEventArgs<bool> e)
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0xC18514", Offset = "0xC18514", VA = "0xC18514")]
		private void OnFontNameChanged(object sender, GenericEventArgs<string> e)
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0xC1858C", Offset = "0xC1858C", VA = "0xC1858C")]
		public VtextHandler()
		{
		}
	}
}
namespace Virtence.VText.Extensions
{
	[Token(Token = "0x2000538")]
	public static class ComponentExtensions
	{
		[Token(Token = "0x60027CE")]
		public static T GetCopyOf<T>(this Component comp, T other) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000539")]
	public static class GameObjectExtensions
	{
		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xC10FC0", Offset = "0xC10FC0", VA = "0xC10FC0")]
		public static Component AddComponentClone(this GameObject go, Component toAdd)
		{
			return null;
		}
	}
}
